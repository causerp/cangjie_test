/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// DEPENDENCE: ForInExpr_03.cj
// (CJNATIVE and not OHOS) EXEC: %compiler %import-cangjie-stdx %cmp_opt %f -o %output %cmp_utest_opt
// (CJNATIVE and not OHOS) RUN-EXEC: %run_stdx %output %run_utest_opt %run_args

import stdx.syntax.*

@Test
func test_ForInExpr_03() {
    let res = parseFile("./ForInExpr_03.cj")
    var diags = res.diags
    @Assert(diags.size, 0)

    let sourcefile: SourceFile = res.node.getOrThrow()
    @Assert(sourcefile.toString().contains(##"main() {
    for (_ in 0..=-100:2) {
        count++
    }
}"##))

    var mainDecl: MainDecl = (sourcefile.topLevelDecls[0] as MainDecl).getOrThrow()
    var expr_1: ForInExpr = (mainDecl.body.nodes[0] as ForInExpr).getOrThrow()
    @Assert(expr_1.toString(), ##"for (_ in 0..=-100:2) {
        count++
    }"##)
    @Assert(expr_1.body.toString(), ##"{
        count++
    }"##)
    @Assert(expr_1.expr.toString(), ##"0..=-100:2"##)
    @Assert(expr_1.pattern is WildcardPattern)
    @Assert(expr_1.patternGuard.isNone())
}
