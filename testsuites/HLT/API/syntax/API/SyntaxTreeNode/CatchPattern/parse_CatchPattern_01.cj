/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// DEPENDENCE: CatchPattern_01.cj
// (CJNATIVE and not OHOS) EXEC: %compiler %import-cangjie-stdx %cmp_opt %f -o %output %cmp_utest_opt
// (CJNATIVE and not OHOS) RUN-EXEC: %run_stdx %output %run_utest_opt %run_args

import stdx.syntax.*

@Test
func test_CatchPattern_01() {
    let res = parseFile("./CatchPattern_01.cj")
    var diags = res.diags
    @Assert(diags.size, 0)

    let sourcefile: SourceFile = res.node.getOrThrow()
    @Assert(sourcefile.toString().contains(##"main() {
    try {} catch (e: Exception) {}
}"##))

    var mainDecl: MainDecl = (sourcefile.topLevelDecls[0] as MainDecl).getOrThrow()
    var expr: TryCatch = (mainDecl.body.nodes[0] as TryCatch).getOrThrow()
    @Assert(expr.catchPatterns.size, 1)
    let _expr = expr.catchPatterns[0]
    @Assert(_expr.toString(), "e: Exception")
    @Assert(_expr.exceptionType.size, 1)
    @Expect(_expr.exceptionType[0] is CompositeType)
    @Assert(_expr.exceptionType[0].toString(), "Exception")
    match (_expr.pattern) {
        case x: VarPattern => ()
        case _ => @Assert(false)
    }
    @Assert(_expr.pattern.toString(), "e")

    var posList = _expr.getBitOrsPos()
    @Assert(posList.size == 0, true)
    var pos = _expr.getColonPos().getOrThrow()
    @Assert([pos.beginLine, pos.beginColumn, pos.endLine, pos.endColumn], [10i32, 20i32, 10i32, 21i32])
}
