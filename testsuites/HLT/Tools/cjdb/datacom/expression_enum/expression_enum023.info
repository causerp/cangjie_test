/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// DEPENDENCE:  ../../cjdb_test.py  ../../basecase/enum/027_enum_generics_func.cj
// (not MAC and not Windows) EXEC: %compiler %cmp_opt -g 027_enum_generics_func.cj -o 027_enum_generics_func%cmp_output
// (not MAC and not Windows) RUN-EXEC: python3 cjdb_test.py expression_enum023.info 027_enum_generics_func %run_env

test#
cjdb,cjdb --no-use-colors 027_enum_generics_func,027_enum_generics_func
b,b 24,027_enum_generics_func.cj:24
AOT r,r,-> 24
CJVM c,c,
p,p a1,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
p,p a2,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
p,p a3,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
p,p a4,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr,expr a1,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr,expr a2,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr,expr a3,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr,expr a4,\(default.EE<\(Int32\)->Int32>\) \$[\d] = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr~expr aoo<Int32>({x: Int32 => Int32(1)})~\(default.\(Int32\)->Int32\) \$[\d] = 0x[\s\S]*
expr~expr aoo({x: Int32 => Int32(1)})~\(default.\(Int32\)->Int32\) \$[\d] = 0x[\s\S]*
expr~expr EE.EE(b)~\(default.EE<\(Int32\)->Int32>\) \$[\d]+ = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr~expr EE.EE(e)~\(default.EE<\(Int32\)->Int32>\) \$[\d]+ = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr~expr EE<(Int32)->Int32>.EE(b)~\(default.EE<\(Int32\)->Int32>\) \$[\d]+ = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
expr~expr EE<(Int32)->Int32>.EE(e)~\(default.EE<\(Int32\)->Int32>\) \$[\d]+ = {[\s\S]*constructor = EE[\s\S]*arg_1 = 0x[\s\S]*}
q,q,