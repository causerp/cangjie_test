import std.sync.ReentrantMutex

public class Test {
  public static var lock1: ReentrantMutex = ReentrantMutex()
  public static var lock2: ReentrantMutex = ReentrantMutex()
  public static var lock3: ReentrantMutex = ReentrantMutex()
  public static var lock4: ReentrantMutex = ReentrantMutex()
  public static var lock5: ReentrantMutex = ReentrantMutex()

  static func foo1(){
    var lock5ToLock1 = synchronized(lock5) {
      synchronized(lock4) {
        synchronized(lock3) {
          synchronized(lock2) {
            synchronized(lock1) {
              println("lock5 -> lock4 -> lock3 -> lock2 -> lock1 lock.");
            }
          }
        }
      }
    }
  }

  static func foo2(){
    var lock1ToLock5 = synchronized(lock1) {
      synchronized(lock2) {
        synchronized(lock5) {
          synchronized(lock4) {
            synchronized(lock3) {
              println("lock1 -> lock2 -> lock3 -> lock4 -> lock5 lock.");
            }
          }
        }
      }
    }
  }
}

main(): Int64 {
  for (i in 0..10) {
    spawn {
      Test.foo1()
      Test.foo2()
    }
  }
  0
}
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
