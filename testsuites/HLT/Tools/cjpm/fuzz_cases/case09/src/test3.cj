/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

package test

// random seed:1649662184500

// All global variable need to be defined before use!
public var var23: String = ###"4+JeM==S7W"###
public var var68: UInt16 = UInt16(Int16(-119))
public var var102: Class90<String, Range<UInt8>> = Class90<String, Range<UInt8>>()
public var var195: UInt64 = UInt64(244)
public let var247: Int16 = Int16(90)
public let var343: Range<Int16> = ((Int16(-40) & 127)..=(Int16(-54) & 127) : ((-72) | 1))
public var var432: Int32 = Int32(Int32(UInt16(UInt8(Int8(0)))))
public let var442: Int8 = Int8(-7)

func func72(param73: () -> Bool): Option<Int8> { // block id: 75
    var77
}

public interface Interface98 <: Interface99 & Interface100 {}

public interface Interface96 <: Interface97 {}

public interface Interface94 <: Interface95 & Interface100 {}

public open class Class90<T0, T1> <: Interface93<Range<UInt64>> & Interface100 {
    public init() { // block id: 92

    }

    public var var105: Int16 = Int16(-77);
    public func func152(param153: Interface94): Rune { // block id: 154
        var156;
        let var182: Interface97 = Class90<String, Range<UInt8>>();
        let var216: Int8 = Int8(UInt8(221));
        (if (match (Enum162.defaultValue) {
            case defaultValue =>
                var var171: Rune = r't';
                if (true) {
                    var171
                } else {
                    r'5'
                };
                ((Int16(123) & 127)..(Int16(111) & 127) : ((-44) | 1));
                Int16(-84) >= Int16(-76)

            case defaultValue =>
                var182;
                true

            case defaultValue =>
                Class90<String, Range<UInt8>>();
                true

            case defaultValue =>
                if (true) {
                    Class90<String, Range<UInt8>>()
                } else {
                    Class90<String, Range<UInt8>>()
                };
                var33

            case _ => var30
        }) { // block id: 206
            Class90<String, Range<UInt8>>();
            Int8(-75);
            Int8(-35)
        } else { // block id: 210
            var30 ||= false
            ();
            var216
        } & 127)..(var220 & 127) : ((Int64(UInt32(56)) | 1))
        var var231: (Range<UInt64>, UInt64, Float64, Rune, Int64, UInt16, Range<UInt8>) = (((UInt64(177) & 127)..=(UInt64(190) &
                127) : ((-118) | 1)), UInt64(96), 8.0, r'O', Int64(UInt8(Int8(67))), UInt16(UInt16(134)), ((UInt8(133) &
                127)..=(UInt8(75) & 127) : ((-42) | 1)));
        try { // block id: 227
            var182;
            Class90<String, Range<UInt8>>();
            var231
        } finally { // block id: 243
            Float32(-128.0);
            var247 & var247;
            var231
        }[3]
    };

    public func func110(): Int16 { // block id: 111
        ((var133 ?? var136)[1] ?? var102.func110(Class90<String, Range<UInt8>>()));
        if ((var261 ?? match {
            case var265 => var33
            case false =>
                var273 /= ((var273) | 1)
                var33
            case _ => var265
        })) { // block id: 279
            try { // block id: 281
                var283;
                Int16(103)
            } catch (e: Exception) { // block id: 286
                var156;
                Int16(-19)
            }
        } else { // block id: 289
            ((Int8(-38) & 127)..(var220 & 127) : ((var17 | 1)));
            Int16(-128)
        }
    }
}

public enum Enum162 {
    defaultValue
}

public func func47(param48: Float64): Int8 { // block id: 49
    (if (func57<Int16, Range<Int8>, Option<Int8>>()) {
        (func80 |> func72)
    } else {
        func72(func57<Int16, Range<Int8>, Option<Int8>>)
    } ?? func85(r'b'))
}

extend Enum162 {}
