/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// random seed:1654449824649

// All global variable need to be defined before use!
package test.b1.b2.b3.b4.b5

let var80: Bool = true
public var var106: Rune = r'O'
public var var119: Enum115 = Enum115.defaultValue
public let var198: Bool = (UInt32(25) is Range<Int16>)
public var var247: Bool = ((true, (-64.0), r'd', Int8(29), (), Int32(Int32(UInt8(194)))) is Array<Rune>)
let var270: UInt8 = UInt8(UInt8(UInt8(Int8(Int8(-89)))))
public var var313: Rune = r'x'
public let var397: Array<Rune> = [r'Y', r'j', r'0', r'Q', r'q', r'L', r'l', r'O', r'K', r'z']
public var var768: Int64 = Int64(UInt64(28))
public let var775: Float64 = 89.0
public var var789: (Bool, Float64, Rune, Int8, Unit, Int32) = (true, Float64(Float32(89.0)), r'u', Int8(Int8(0)), (),
    Int32(27))
public var var952: UInt8 = UInt8(Int8(-91))

public enum Enum115 {
    defaultValue
}

func func62<T0, T1>(): Bool { // block id: 113
    let var131: UInt32 = UInt32(24);
    var var146: Float64 = Float64(Float32(123.0));
    var var190: Int8 = Int8(UInt8(140));
    match (match (var119) {
        case caseVar123: Range<UInt16> =>
            var var126: Unit = ();
            var126;
            ((UInt32(176) & 127)..=(var131 & 127) : ((16 | 1)));
            Enum115.defaultValue

        case defaultValue => var119

        case caseVar141: String =>
            r'W';
            var146 -= 82.0
            if (true) {
                Enum115.defaultValue
            } else {
                var119
            }

        case _: (Float32, Array<Rune>, Range<UInt8>, Range<Int8>, Int8) =>
            if (false) {
                Enum115.defaultValue
            } else {
                Enum115.defaultValue
            }

        case _ => var119
    }) {
        case caseVar166 =>
            ();
            true

        case _: UInt16 => true

        case _ => !false

        case defaultValue =>
            let var183: Unit = ();
            var183;
            let var186: Unit = ();
            var186;
            var190 > var190

        case _ =>
            var var202: Range<Int8> = ((Int8(-127) & 127)..(Int8(-55) & 127) : (85 | 1));
            if (var198) {
                var202
            } else {
                ((Int8(-38) & 127)..(Int8(-44) & 127) : ((-117) | 1))
            };
            (-45.0);
            var80
    }
}

public func func62(param63: Unit): Array<Rune> { // block id: 64
    var var76: Bool = (Float32(47.0) is Range<Int32>);
    var var92: (Bool, Float64, Rune, Int8, Unit, Int32) = ((Int8(-74) is (Bool, Float64, Rune, Int8, Unit, Int32)),
        Float64((-62.0)), r's', Int8(103), (), Int32(-46));
    let var228: Int32 = Int32(Int32(UInt32(9)));
    if ([false, true, true, true, var76, var80, false, var80, true, var76][7]) { // block id: 87
        ();
        if (true) {
            var92
        } else {
            (var80, 49.0, var106, Int8(-20), param63, Int32(-72))
        }
    } else if (func62<Rune, Array<(UInt32, Int16, Bool, Unit)>>()) { // block id: 207
        (-20) / (((-128)) | 1);
        (false, (-13.0), r's', Int8(-98), param63, Int32(-12))
    } else { // block id: 218
        var var224: Int8 = Int8(89);
        (var76, 4.0, r'8', var224, param63, var228)
    }[4];
    var var267: UInt8 = UInt8(1);
    var var282: Rune = r'Q';
    let var299: Rune = r'f';
    var var304: Array<Rune> = [r'q', r'S', r'k', r'v', r'W', r'2', r'n', r'4', r'H', r'Y'];
    var var322: Rune = r'd';
    var var332: Rune = r'3';
    var var441: Range<Int16> = ((Int16(Int16(-33)) & 127)..=(Int16(Int8(109)) & 127) : ((Int64(Int32(12)) | 1)));
    if ([var76, var80, false, var80, var76, var80, var80, var76, var247, var247][2]) {
        match (var119) {
            case _ =>
                ();
                var267 <<= ((var270) & 7)
                let var335: Array<Rune> = [r'd', r'K', r'J', r'D', r'm', r'f', r'V', r'K', r'g', r'9'];
                [[r'O', var106, r'H', var282, r'g', r'l', var282, r'n', r'n', var282],
                    [r'b', var106, var106, var106, var282, r's', r'L', var299, var299, var106], var304,
                    [var106, r'3', r'b', var282, r'Q', var313, var282, r'p', var106, r'Z'],
                    [r's', var322, var106, var313, var299, r't', r'y', r'o', var313, var332], var335, var335,
                    [r'v', r'0', r'Y', r'h', r'q', r'z', r'j', r'B', r'j', r'K'], var335,
                    [r'W', var282, r'f', var282, var106, var282, r'T', var322, var299, var313]]
        }
    } else {
        match (var119) {
            case caseVar355 =>
                let var419: Rune = r'4';
                if (false) {
                    [[r'O', r'k', r'u', r'G', r'c', r'0', r'H', r'G', r'n', r'9'],
                        [r'V', r'N', r'C', r'L', r'T', r'3', r'p', r'2', r'9', r'p'],
                        [r'l', r'b', r'T', r'b', r'9', r'c', r'j', r'A', r'N', r'C'],
                        [r'L', r'6', r'q', r'J', r'A', r'm', r'F', r'S', r'f', r'G'],
                        [r'V', r's', r'R', r'f', r'l', r'9', r'm', r'7', r'l', r'c'],
                        [r'0', r'7', r'5', r'v', r'K', r'F', r'S', r'g', r'p', r'L'],
                        [r'I', r'0', r'I', r'q', r'8', r'A', r'E', r'x', r'X', r'k'],
                        [r'v', r'X', r'c', r'2', r'l', r'e', r'j', r'I', r'j', r'H'],
                        [r'v', r'8', r'f', r'f', r'F', r'V', r'D', r's', r't', r'8'],
                        [r'L', r'M', r'P', r'i', r'w', r't', r'O', r'0', r'2', r'E']]
                } else {
                    [var304, [var299, r'g', var106, r'l', r'm', var322, r'V', var332, r'n', r'T'],
                        [var313, r'U', var322, var282, r'L', r'S', var282, r'a', r'a', r'I'],
                        [r'z', r'M', r'j', r'H', r'x', r'7', r'a', r'd', r'g', r'f'],
                        [r'W', var299, r'5', r'F', var322, var282, var332, var282, var299, var282], var397,
                        [r'a', r'g', var282, var106, r'Y', var332, r'H', r'G', var419, r'l'], var397, var304,
                        [var332, r't', var282, r'6', r'L', var106, var419, r'j', r'e', var322]]
                }

            case defaultValue =>
                if (var76) {
                    var441
                } else {
                    var441
                };
                var var463: Rune = r'x';
                [[r'K', r'y', r'R', r'u', r'o', r'V', r'E', r'B', r'j', r'Y'],
                    [r'5', r'Q', r'2', var322, r'9', var282, r'j', r'o', r'S', var463],
                    [r'm', r's', r'M', r'O', r'N', r'F', r'g', r'q', r'8', r'F'], var397,
                    [r'v', r'D', r'y', r'U', r'q', r'Z', r'Q', r'Q', r'Y', r'T'], var397,
                    [r'g', r'u', r'H', var299, var463, var332, var332, r'T', r'N', var322],
                    [r'w', r'n', r'N', r'm', r'F', r'p', r'C', r'P', r'J', r'P'], var304,
                    [r'R', var322, r'J', var106, r'W', var313, r'a', var463, r'3', var332]]

            case caseVar495: Int32 => [[r'B', r'h', r'a', r'o', r'J', r'V', r'5', r'y', r'n', r'R'],
                [r'F', r'7', r'4', r'R', r'X', r'r', r'C', r'l', r'A', r'd'],
                [r'K', r'a', r'u', r'P', r'z', r'v', r'A', r'i', r'9', r'p'],
                [r'S', r'X', r'X', r'F', r's', r'5', r'G', r'N', r'h', r'T'],
                [r'M', r'K', r'k', r'n', r'T', r'5', r'z', r'7', r'f', r'R'],
                [r'j', r'g', r'n', r'1', r'm', r't', r'k', r'S', r's', r'e'],
                [r'T', r'I', r'3', r'f', r'w', r'T', r'v', r'V', r'F', r'D'],
                [r'A', r'Y', r'9', r'6', r't', r'x', r'u', r'A', r'q', r'7'],
                [r'z', r'4', r'Z', r'2', r'K', r'P', r't', r'0', r'6', r'2'],
                [r'b', r'i', r'S', r'7', r'r', r'M', r'y', r'N', r'j', r'Z']]

            case defaultValue =>
                param63;
                [[r'Y', r'3', r'n', r'G', r'n', r'y', r'2', r'C', r'e', r'0'],
                    [r'w', r'S', r'i', r'R', r'h', r'W', r'C', r'b', r'J', r'w'],
                    [r'Y', r'u', r'r', r'L', r'b', r'F', r's', r'U', r'S', r'5'],
                    [r'X', r'U', r'2', r't', r'p', r'p', r'X', r'M', r'V', r'Z'],
                    [r'B', r'T', r'A', r'n', r'z', r'p', r'P', r'A', r'y', r'v'],
                    [r'y', r'h', r'c', r'0', r'X', r'z', r'v', r'd', r'p', r'n'],
                    [r'I', r'd', r'Q', r'W', r'8', r'd', r'o', r'x', r'5', r't'],
                    [r'H', r'Z', r'A', r'b', r'R', r'8', r'C', r'9', r'G', r'Y'],
                    [r'2', r'k', r't', r'B', r'K', r'f', r'V', r'Z', r'Y', r'S'],
                    [r'f', r'f', r't', r'2', r's', r'p', r'3', r'x', r'X', r'7']]

            case _ =>
                param63;
                var228;
                [[r'Q', r'S', r'L', r'v', r'9', r'c', r'y', r'l', r'z', r'a'],
                    [r'c', r'v', r'A', r'N', r'0', r'7', r'h', r'2', r'2', r'H'],
                    [r'M', r'W', r'Z', r'T', r'Y', r't', r'Y', r'f', r'F', r'y'],
                    [r'H', r'M', r'w', r'm', r't', r'P', r'I', r'h', r'Z', r'X'],
                    [r'O', r'y', r'm', r'e', r'P', r'l', r'3', r'T', r'V', r'h'],
                    [r'v', r'A', r'i', r'9', r'J', r'n', r'U', r'q', r'Y', r'a'],
                    [r'u', r'9', r'9', r'K', r'Y', r'k', r'v', r'5', r'I', r'Y'],
                    [r'w', r'k', r'x', r'l', r'j', r'm', r'F', r'6', r'7', r'X'],
                    [r'7', r'4', r'f', r'8', r'5', r'q', r'z', r'G', r'0', r'b'],
                    [r'k', r'Q', r'v', r'S', r'b', r'9', r'P', r'i', r'P', r'O']]
        }
    }[8]
}

public interface Interface610<T0, T1, T2> {}

public open class Class607<T0, T1, T2> <: Interface610<Int32, String, Int32> {
    public init() { // block id: 609

    }

    public let var615: (Float32, Array<Rune>, Range<UInt8>, Range<Int8>, Int8) = (Float32(-116.0), [r'7', r'R', r'M',
            r'U', r'q', r'm', r'U', r'5', r'h', r'N'], ((UInt8(216) & 127)..(UInt8(57) & 127) : ((20 | 1))), ((Int8(43) &
            127)..=(Int8(0) & 127) : (((-44) | 1))), Int8(48))
}

extend<T0, T1, T2> Class607<T0, T1, T2> {}

extend Enum115 {}
