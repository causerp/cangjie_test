/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// random seed:1650287111623

// All global variable need to be defined before use!
package test.b1

public let var43: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var68: Bool = (Int64(Int32(Int16(78))) is String)
public let var176: Array<Range<UInt16>> = [((UInt16(37) & 127)..(UInt16(232) & 127) : (62 | 1)),
    ((UInt16(197) & 127)..(UInt16(27) & 127) : (111 | 1)), ((UInt16(133) & 127)..=(UInt16(192) & 127) : ((-104) | 1)),
    ((UInt16(31) & 127)..=(UInt16(62) & 127) : ((-9) | 1)), ((UInt16(58) & 127)..(UInt16(221) & 127) : ((-108) | 1)),
    ((UInt16(67) & 127)..=(UInt16(72) & 127) : ((-116) | 1)), ((UInt16(66) & 127)..(UInt16(15) & 127) : ((-31) | 1)),
    ((UInt16(73) & 127)..=(UInt16(20) & 127) : ((-95) | 1)), ((UInt16(204) & 127)..=(UInt16(214) & 127) : (4 | 1)),
    ((UInt16(53) & 127)..=(UInt16(106) & 127) : (54 | 1))]
public let var197: Range<UInt16> = ((UInt16(39) & 127)..(UInt16(217) & 127) : (((-121) | 1)))
public var var383: Array<UInt32> = Array<UInt32>(10) {i => UInt32(UInt16(Int8(-127)))}
public let var595: Int16 = Int16(126)
var var687: UInt32 = UInt32(68)
public var var868: Range<Int32> = ((Int32(Int16(UInt16(UInt8(237)))) & 127)..(Int32(-51) & 127) : ((121 | 1)))
public let var1157: Interface12 = Class454()

public interface Interface12 {
    func func17(namedParam18!: Float64, namedParam19!: Int64, namedParam20!: Unit): Unit { // block id: 21
        try { // block id: 23
            var var27: (Rune, Int8) = (r'F', Int8(-109));
            var27[0];
            var43[7]
        } finally { // block id: 46

        }
        let var133: Int8 = Int8(8);
        let var138: Range<Int8> = ((Int8(Int8(86)) & 127)..=(Int8(76) & 127) : ((37 | 1)));
        let var204: UInt16 = UInt16(UInt16(5));
        let var285: (Option<Range<Int8>>) -> Range<UInt16> = func210;
        let var343: UInt16 = UInt16(178);
        let var416: Option<Enum294> = Option<Enum294>.Some(Enum294.defaultValue);
        let var458: Class454 = Class454();
        let var489: Class454 = Class454();
        let var565: (Range<Int32>, Range<UInt8>, Range<Int64>, Range<UInt64>) = (((Int32(-71) & 127)..(Int32(-24) & 127) : ((-78) |
                1)), ((UInt8(139) & 127)..=(UInt8(204) & 127) : (25 | 1)), ((83 & 127)..(90 & 127) : (21 | 1)), ((UInt64(47) &
                127)..(UInt64(142) & 127) : (((-76) | 1))));
        let var604: Range<Int64> = ((Int64(UInt16(UInt16(206))) & 127)..(Int64(Int8(-117)) & 127) : ((Int64(UInt32(21)) |
            1)));
        var43 |> {
            lambdaParameter121: Array<Unit> =>
                let var339: Option<Range<UInt16>> = Option<Range<UInt16>>.None;
                let var372: Float32 = Float32(-92.0);
                let var549: Int8 = Int8(54);
                let var661: Unit = ();
                let var674: Range<UInt8> = ((UInt8(108) & 127)..=(UInt8(Int8(Int8(Int8(1)))) & 127) : ((66 | 1)));
                func func163<T0, T1, T2>(param164: (Array<Unit>) -> Range<Int8>, param167: UInt32, param168: String,
                    namedParam169!: UInt8): Unit { // block id: 170
                    [var176[7], func180(optionalParam185: false, namedParam188: namedParam20), var197,
                        ((var204 & 127)..(var204 & 127) : (((-97) | 1))), (Option<Range<Int8>>.Some(var138) |> var285),
                        ((UInt16(238) & 127)..=(var204 & 127) : ((63 | 1))), match (Enum294.defaultValue) {
                        case _ => var197

                        case _ =>
                            var var306: UInt8 = UInt8(UInt8(Int8(Int8(-40))));
                            var var312: UInt8 = UInt8(Int8(UInt8(14)));
                            var306 |= var312
                            ((var204 & 127)..(UInt16(28) & 127) : ((17 | 1)))

                        case _ =>
                            ();
                            if (var68) {
                                ((UInt16(187) & 127)..(var204 & 127) : (((-73) | 1)))
                            } else {
                                ((var204 & 127)..(UInt16(34) & 127) : (((-94) | 1)))
                            }
                    }, (var339 ?? ((var343 & 127)..=(UInt16(65) & 127) : ((namedParam19 | 1)))),
                        ([namedParam20, namedParam20, (), (), (), namedParam20, namedParam20, (), namedParam20,
                            namedParam20], (((-17) & 127)..=((-54) & 127) : ((namedParam19 | 1))), true, ((var343 & 127)..(var343 &
                            127) : ((32 | 1))), r'1', var372, var176)[3],
                        ((UInt16(104) & 127)..=(UInt16(48) & 127) : ((-65) | 1))][2];
                    let var420: Enum294 = Enum294.defaultValue;
                    var var443: UInt16 = UInt16(Int16(UInt16(114)));
                    if (var383[3] > var383[2]) { // block id: 405
                        var43[3]
                    } else if (match ((var416 ?? var420)) {
                        case defaultValue =>
                            ();
                            Int16(5) - Int16(118);
                            var68

                        case defaultValue =>
                            ((UInt32(103) & 127)..(UInt32(114) & 127) : ((-101) | 1));
                            false

                        case defaultValue =>
                            var68 &&= false
                            var443 >>= ((UInt16(157)) & 7)
                            true

                        case _ => var68
                    }) { // block id: 452
                        var458.var461;
                        namedParam20;
                        match (Option<Range<UInt16>>.Some(((UInt16(207) & 127)..=(UInt16(222) & 127) : (((-119) | 1))))) {
                            case caseVar472: Array<UInt32> => namedParam20

                            case _ =>
                                ();
                                r'U';
                                ()

                            case _ => var68 ||= var68
                        }
                    };
                    let var530: Range<Int32> = ((Int32(UInt8(UInt8(214))) & 127)..=(Int32(Int16(Int16(-44))) & 127) : ((Int64(Int16(-94)) |
                        1)));
                    let var614: Range<UInt64> = ((UInt64(71) & 127)..(UInt64(156) & 127) : ((Int64(Int32(Int8(34))) | 1)));
                    var loopTimeVar684: Int64 = 0;
                    while ((var489.var492) && loopTimeVar684 < 100) {
                        loopTimeVar684++;
                        var var497: Class454 = Class454();
                        var497.var492;
                        let var652: Int8 = Int8(-104);
                        func func501(param502: Array<Range<Int8>>): Range<UInt8> { // block id: 503
                            var var517: UInt16 = UInt16(UInt8(Int8(UInt8(26))));
                            if (match (var420) {
                                case _ => namedParam169 <= UInt8(223)

                                case _ =>
                                    var517--;
                                    var68 && true
                            }) {
                                (((Int32(-19) & 127)..(Int32(93) & 127) : ((-27) | 1)), var530, Float32(-1.0),
                                    namedParam18, [((var133 & 127)..=(var133 & 127) : ((92 | 1))),
                                        ((var549 & 127)..=(var549 & 127) : (((-110) | 1))),
                                        ((Int8(5) & 127)..(Int8(26) & 127) : (110 | 1)),
                                        ((Int8(119) & 127)..=(Int8(-111) & 127) : ((-72) | 1)), var138,
                                        ((var549 & 127)..(Int8(-81) & 127) : ((namedParam19 | 1))),
                                        ((Int8(75) & 127)..=(Int8(-87) & 127) : ((-30) | 1)), var138,
                                        ((Int8(-121) & 127)..(Int8(35) & 127) : (40 | 1)),
                                        ((Int8(47) & 127)..(Int8(-12) & 127) : ((-95) | 1))], var565, [var197, var197,
                                        ((UInt16(97) & 127)..(var204 & 127) : ((namedParam19 | 1))),
                                        ((UInt16(240) & 127)..(UInt16(24) & 127) : (79 | 1)),
                                        ((UInt16(92) & 127)..(UInt16(67) & 127) : ((-89) | 1)),
                                        ((UInt16(159) & 127)..=(UInt16(98) & 127) : ((-14) | 1)),
                                        ((UInt16(97) & 127)..(var343 & 127) : ((namedParam19 | 1))),
                                        ((UInt16(23) & 127)..=(UInt16(20) & 127) : ((-81) | 1)),
                                        ((UInt16(126) & 127)..(UInt16(132) & 127) : ((-106) | 1)),
                                        ((var343 & 127)..(var204 & 127) : ((namedParam19 | 1)))], var595, (((Int32(-28) &
                                            127)..=(Int32(43) & 127) : ((-112) | 1)), ((namedParam169 & 127)..(namedParam169 &
                                            127) : ((namedParam19 | 1))), var604, var614))[4]
                            } else {
                                (func210(var383, param167) ?? [((Int8(-26) & 127)..=(Int8(-2) & 127) : (49 | 1)),
                                    ((Int8(-105) & 127)..=(Int8(-11) & 127) : (78 | 1)),
                                    ((Int8(108) & 127)..(Int8(-59) & 127) : (116 | 1)),
                                    ((Int8(-90) & 127)..(Int8(112) & 127) : ((-56) | 1)),
                                    ((Int8(-60) & 127)..=(Int8(-9) & 127) : ((-3) | 1)),
                                    ((Int8(88) & 127)..(Int8(28) & 127) : (103 | 1)),
                                    ((Int8(2) & 127)..=(Int8(111) & 127) : (124 | 1)),
                                    ((Int8(-53) & 127)..=(Int8(-114) & 127) : ((-64) | 1)),
                                    ((Int8(-73) & 127)..=(Int8(-109) & 127) : (75 | 1)),
                                    ((Int8(-117) & 127)..(Int8(-65) & 127) : ((-99) | 1))])
                            };
                            match (try { // block id: 638
                                namedParam20;
                                if (false) {
                                    (r'4', Int8(114))
                                } else {
                                    (r'i', Int8(-79))
                                };
                                (((-62) & 127)..((-59) & 127) : ((-107) | 1))
                            } finally { // block id: 649
                                ((var652 & 127)..=(var549 & 127) : ((104 | 1)));
                                (((-116) & 127)..((-15) & 127) : (104 | 1))
                            }) {
                                case _: Range<Int32> =>
                                    var661;
                                    var197;
                                    ((UInt8(53) & 127)..=(UInt8(173) & 127) : (69 | 1))

                                case caseVar667 =>
                                    namedParam20;
                                    ((UInt8(210) & 127)..(UInt8(36) & 127) : (19 | 1))

                                case _ => var674
                            }
                        };

                        func501(
                            [((Int8(-27) & 127)..(Int8(81) & 127) : ((-97) | 1)),
                                ((Int8(45) & 127)..(Int8(116) & 127) : (60 | 1)),
                                ((Int8(5) & 127)..=(Int8(6) & 127) : (60 | 1)),
                                ((Int8(-73) & 127)..(Int8(-113) & 127) : ((-124) | 1)),
                                ((Int8(111) & 127)..(Int8(49) & 127) : ((-52) | 1)),
                                ((Int8(-19) & 127)..=(Int8(112) & 127) : (62 | 1)),
                                ((Int8(115) & 127)..(Int8(-91) & 127) : (44 | 1)),
                                ((Int8(35) & 127)..(Int8(33) & 127) : (57 | 1)),
                                ((Int8(-87) & 127)..=(Int8(25) & 127) : (44 | 1)),
                                ((Int8(118) & 127)..=(Int8(-49) & 127) : (120 | 1))])
                    }
                };
                try { // block id: 124
                    (Option<Range<Int8>>.Some(((var133 & 127)..=(var133 & 127) : (((-56) | 1)))) ?? var138)
                } catch (e: Exception) { // block id: 144
                    var var148: (Range<Int32>, Range<UInt8>, Range<Int64>, Range<UInt64>) = (((Int32(-79) & 127)..(Int32(UInt32(Int32(27))) &
                            127) : ((Int64(Int16(Int8(-102))) | 1))), ((UInt8(226) & 127)..(UInt8(42) & 127) : ((-16) | 1)),
                        (((-8) & 127)..((-52) & 127) : ((-68) | 1)), ((UInt64(18) & 127)..(UInt64(151) & 127) : (72 | 1)));
                    var148[2];
                    var var691: UInt8 = UInt8(UInt8(Int8(Int8(-95))));
                    func163<Bool, Int16, Range<Int16>>(func48, var687, ###"hO_PQqN7c_"###, namedParam169: var691);
                    let var699: ((Range<Int32>, Range<Int32>, Float32, Float64, Array<Range<Int8>>, (Range<Int32>, Range<UInt8>, 
                        Range<Int64>, Range<UInt64>), Array<Range<UInt16>>, Int16, (Range<Int32>, Range<UInt8>, Range<Int64>, 
                        Range<UInt64>)), Range<Int16>, Range<Int8>, String) = ((((Int32(Int16(41)) & 127)..(Int32(UInt32(248)) &
                                127) : ((63 | 1))), ((Int32(-71) & 127)..(Int32(Int32(34)) & 127) : ((Int64(Int8(124)) |
                                1))), Float32(-66.0), (-73.0), [((Int8(-93) & 127)..(Int8(112) & 127) : (62 | 1)),
                                ((Int8(112) & 127)..=(Int8(-128) & 127) : ((-37) | 1)),
                                ((Int8(-66) & 127)..=(Int8(73) & 127) : (4 | 1)),
                                ((Int8(-90) & 127)..=(Int8(41) & 127) : (76 | 1)),
                                ((Int8(107) & 127)..(Int8(-29) & 127) : (77 | 1)),
                                ((Int8(65) & 127)..=(Int8(4) & 127) : ((-4) | 1)),
                                ((Int8(98) & 127)..=(Int8(71) & 127) : ((-27) | 1)),
                                ((Int8(3) & 127)..=(Int8(38) & 127) : (112 | 1)),
                                ((Int8(-77) & 127)..(Int8(-58) & 127) : (73 | 1)),
                                ((Int8(-126) & 127)..=(Int8(-11) & 127) : ((-27) | 1))], (((Int32(71) & 127)..=(Int32(47) &
                                    127) : (((-98) | 1))), ((UInt8(0) & 127)..=(UInt8(139) & 127) : (((-33) | 1))), (((-97) &
                                    127)..(68 & 127) : (117 | 1)), ((UInt64(50) & 127)..=(UInt64(62) & 127) : (((-84) | 1)))),
                            [((UInt16(66) & 127)..(UInt16(250) & 127) : (30 | 1)),
                                ((UInt16(253) & 127)..(UInt16(123) & 127) : ((-8) | 1)),
                                ((UInt16(225) & 127)..(UInt16(144) & 127) : (((-84) | 1))),
                                ((UInt16(187) & 127)..=(UInt16(209) & 127) : ((-11) | 1)),
                                ((UInt16(38) & 127)..=(UInt16(49) & 127) : ((64 | 1))),
                                ((UInt16(227) & 127)..(UInt16(236) & 127) : ((-24) | 1)),
                                ((UInt16(209) & 127)..(UInt16(71) & 127) : ((-56) | 1)),
                                ((UInt16(204) & 127)..(UInt16(69) & 127) : (((-95) | 1))),
                                ((UInt16(145) & 127)..=(UInt16(74) & 127) : ((-2) | 1)),
                                ((UInt16(21) & 127)..=(UInt16(162) & 127) : ((-117) | 1))], Int16(Int16(UInt16(254))), (((Int32(-120) &
                                    127)..=(Int32(98) & 127) : ((-25) | 1)), ((UInt8(42) & 127)..=(UInt8(211) & 127) : ((-123) |
                                    1)), ((44 & 127)..((-98) & 127) : (66 | 1)), ((UInt64(217) & 127)..=(UInt64(86) & 127) : ((-1) |
                                    1)))), ((Int16(-79) & 127)..=(Int16(106) & 127) : (100 | 1)), ((Int8(27) & 127)..(Int8(-46) &
                            127) : (91 | 1)), "IV'_6k3:dE");
                    var699[2]
                }
        };
        func func765(param766: Range<Int8>): Unit { // block id: 767
            namedParam20;
            try { // block id: 770

            } finally { // block id: 771

            }
            var var775: ((Range<Int32>, Range<Int32>, Float32, Float64, Array<Range<Int8>>, (Range<Int32>, Range<UInt8>, 
                Range<Int64>, Range<UInt64>), Array<Range<UInt16>>, Int16, (Range<Int32>, Range<UInt8>, Range<Int64>, 
                Range<UInt64>)), Range<Int8>, Rune, Unit, Array<Unit>, Range<UInt8>) = ((((Int32(-11) & 127)..(Int32(-63) &
                        127) : ((-101) | 1)), ((Int32(81) & 127)..(Int32(UInt32(82)) & 127) : ((Int64((-93)) | 1))),
                    Float32(Float32(Float32(-126.0))), (-72.0), [((Int8(-100) & 127)..=(Int8(-41) & 127) : (((-31) | 1))),
                        ((Int8(-122) & 127)..=(Int8(-83) & 127) : ((110 | 1))),
                        ((Int8(-54) & 127)..=(Int8(26) & 127) : ((59 | 1))),
                        ((Int8(104) & 127)..=(Int8(88) & 127) : (((-16) | 1))),
                        ((Int8(-122) & 127)..(Int8(73) & 127) : (((-40) | 1))),
                        ((Int8(63) & 127)..(Int8(47) & 127) : (((-61) | 1))),
                        ((Int8(-30) & 127)..=(Int8(-83) & 127) : ((7 | 1))),
                        ((Int8(-64) & 127)..(Int8(-92) & 127) : (((-55) | 1))),
                        ((Int8(16) & 127)..(Int8(-75) & 127) : ((115 | 1))),
                        ((Int8(-26) & 127)..=(Int8(121) & 127) : ((79 | 1)))], (((Int32(110) & 127)..(Int32(-13) & 127) : (29 |
                            1)), ((UInt8(253) & 127)..=(UInt8(96) & 127) : (50 | 1)), ((5 & 127)..=(98 & 127) : ((-17) |
                            1)), ((UInt64(176) & 127)..(UInt64(251) & 127) : (84 | 1))), [((UInt16(175) & 127)..=(UInt16(243) &
                        127) : (34 | 1)), ((UInt16(70) & 127)..(UInt16(59) & 127) : (11 | 1)),
                        ((UInt16(240) & 127)..(UInt16(96) & 127) : ((-104) | 1)),
                        ((UInt16(130) & 127)..=(UInt16(39) & 127) : ((-34) | 1)),
                        ((UInt16(47) & 127)..=(UInt16(110) & 127) : ((-32) | 1)),
                        ((UInt16(77) & 127)..=(UInt16(102) & 127) : ((-90) | 1)),
                        ((UInt16(192) & 127)..=(UInt16(202) & 127) : (41 | 1)),
                        ((UInt16(193) & 127)..(UInt16(64) & 127) : ((-73) | 1)),
                        ((UInt16(91) & 127)..=(UInt16(113) & 127) : ((-5) | 1)),
                        ((UInt16(39) & 127)..=(UInt16(178) & 127) : ((-66) | 1))], Int16(Int8(49)), (((Int32(-10) & 127)..(Int32(118) &
                            127) : (((-117) | 1))), ((UInt8(124) & 127)..=(UInt8(120) & 127) : (27 | 1)), ((69 & 127)..=(48 &
                            127) : ((-4) | 1)), ((UInt64(202) & 127)..=(UInt64(183) & 127) : (((-64) | 1))))), ((Int8(-115) &
                    127)..=(Int8(-6) & 127) : ((-90) | 1)), r'z', (), [(), (), (), (), (), (), (), (), (), ()], ((UInt8(UInt8(UInt8(138))) &
                    127)..(UInt8(UInt8(103)) & 127) : (((-48) | 1))));
            var775[3]
        };

        let var885: Range<Int8> = ((Int8(Int8(90)) & 127)..=(Int8(93) & 127) : ((Int64(UInt16(144)) | 1)));
        var var917: Range<UInt64> = ((UInt64(205) & 127)..=(UInt64(181) & 127) : ((-1) | 1));
        let var930: Float32 = Float32(-77.0);
        let var934: Array<Range<Int8>> = [((Int8(-82) & 127)..(Int8(-52) & 127) : ((-100) | 1)),
            ((Int8(-57) & 127)..(Int8(18) & 127) : (84 | 1)), ((Int8(94) & 127)..(Int8(36) & 127) : ((-96) | 1)),
            ((Int8(60) & 127)..=(Int8(72) & 127) : ((-37) | 1)), ((Int8(-66) & 127)..=(Int8(123) & 127) : (78 | 1)),
            ((Int8(-32) & 127)..=(Int8(-23) & 127) : ((-86) | 1)), ((Int8(59) & 127)..=(Int8(124) & 127) : (28 | 1)),
            ((Int8(-82) & 127)..=(Int8(7) & 127) : (104 | 1)), ((Int8(83) & 127)..=(Int8(107) & 127) : ((-66) | 1)),
            ((Int8(-124) & 127)..=(Int8(89) & 127) : ((-81) | 1))];
        var var982: Range<Int8> = ((Int8(-17) & 127)..=(Int8(56) & 127) : (((-86) | 1)));
        var var989: Range<UInt8> = ((UInt8(17) & 127)..(UInt8(Int8(88)) & 127) : ((Int64(UInt8(238)) | 1)));
        func765(try { // block id: 862
            let var911: Range<UInt8> = ((UInt8(52) & 127)..(UInt8(160) & 127) : (9 | 1));
            var var914: Range<Int64> = (((-34) & 127)..(112 & 127) : (40 | 1));
            var var923: Int32 = Int32(Int32(Int16(18)));
            if (true) {
                (((Int32(-85) & 127)..=(Int32(116) & 127) : (10 | 1)), var868, Float32(-63.0), 57.0, [((Int8(-116) & 127)..(Int8(39) &
                        127) : ((-28) | 1)), ((var133 & 127)..=(Int8(-87) & 127) : ((104 | 1))), var885,
                        ((var133 & 127)..=(Int8(-20) & 127) : ((namedParam19 | 1))),
                        ((Int8(80) & 127)..=(Int8(-13) & 127) : (28 | 1)),
                        ((Int8(20) & 127)..(var133 & 127) : ((namedParam19 | 1))), var885,
                        ((Int8(116) & 127)..=(Int8(7) & 127) : ((-48) | 1)), var138,
                        ((Int8(-44) & 127)..(Int8(99) & 127) : (8 | 1))], var565, var176, var595, (var868, var911, var914,
                        var917))
            } else {
                (((Int32(24) & 127)..(var923 & 127) : ((115 | 1))), var868, var930, 81.0, var934, var565, [((UInt16(60) &
                        127)..(UInt16(217) & 127) : ((-87) | 1)),
                        ((UInt16(94) & 127)..=(var343 & 127) : ((namedParam19 | 1))),
                        ((UInt16(56) & 127)..=(UInt16(17) & 127) : ((-90) | 1)),
                        ((UInt16(242) & 127)..=(UInt16(79) & 127) : (0 | 1)),
                        ((UInt16(182) & 127)..=(var204 & 127) : ((namedParam19 | 1))),
                        ((UInt16(150) & 127)..=(var343 & 127) : (((-91) | 1))),
                        ((UInt16(47) & 127)..=(UInt16(215) & 127) : ((namedParam19 | 1))),
                        ((var204 & 127)..(var343 & 127) : ((namedParam19 | 1))), var197,
                        ((UInt16(71) & 127)..(UInt16(152) & 127) : ((100 | 1)))], var595, (((var923 & 127)..=(var923 &
                            127) : ((namedParam19 | 1))), ((UInt8(100) & 127)..(UInt8(164) & 127) : (76 | 1)), ((16 & 127)..(namedParam19 &
                            127) : ((namedParam19 | 1))), ((UInt64(125) & 127)..=(UInt64(42) & 127) : (((-29) | 1)))))
            };
            var982
        } finally { // block id: 987
            var989;
            var68 &&= false
            ((Int8(12) & 127)..(Int8(-58) & 127) : (29 | 1))
        })
    }
}

public func func48(param49: Array<Unit>): Range<Int8> { // block id: 50
    ();
    let var58: Bool = ((-103.0) is Range<UInt8>);
    let var87: Range<Int8> = ((Int8(-73) & 127)..(Int8(-42) & 127) : (81 | 1));
    let var98: Int64 = Int64(UInt16(245));
    try { // block id: 55
        var var63: Array<Range<Int8>> = [((Int8(120) & 127)..=(Int8(21) & 127) : ((-100) | 1)),
            ((Int8(0) & 127)..=(Int8(68) & 127) : (35 | 1)), ((Int8(-113) & 127)..(Int8(61) & 127) : (123 | 1)),
            ((Int8(-77) & 127)..(Int8(10) & 127) : ((-81) | 1)), ((Int8(120) & 127)..=(Int8(-91) & 127) : ((-43) | 1)),
            ((Int8(-83) & 127)..=(Int8(5) & 127) : ((-127) | 1)), ((Int8(-21) & 127)..=(Int8(114) & 127) : ((-122) | 1)),
            ((Int8(-25) & 127)..(Int8(29) & 127) : ((-65) | 1)), ((Int8(6) & 127)..(Int8(-5) & 127) : ((-96) | 1)),
            ((Int8(-127) & 127)..=(Int8(-76) & 127) : ((-123) | 1))];
        if (var58) {
            [((Int8(-85) & 127)..(Int8(-109) & 127) : ((-9) | 1)), ((Int8(11) & 127)..=(Int8(2) & 127) : ((-92) | 1)),
                ((Int8(0) & 127)..=(Int8(-70) & 127) : ((-117) | 1)),
                ((Int8(-112) & 127)..=(Int8(-14) & 127) : ((-100) | 1)),
                ((Int8(119) & 127)..=(Int8(55) & 127) : ((-95) | 1)), ((Int8(58) & 127)..=(Int8(-34) & 127) : ((-70) | 1)),
                ((Int8(-7) & 127)..=(Int8(68) & 127) : (92 | 1)), ((Int8(-51) & 127)..=(Int8(40) & 127) : (38 | 1)),
                ((Int8(-17) & 127)..(Int8(-107) & 127) : (57 | 1)), ((Int8(-1) & 127)..=(Int8(-123) & 127) : ((-127) | 1))]
        } else {
            var63
        }
    } catch (_) { // block id: 65
        var68 &&= var58
        let var78: Range<Int8> = ((Int8(Int8(Int8(-67))) & 127)..(Int8(-4) & 127) : (((-16) | 1)));
        var var95: Int8 = Int8(57);
        var var110: Int64 = Int64(Int32(-82));
        if (false) {
            [var78, ((Int8(51) & 127)..(Int8(-97) & 127) : (101 | 1)), var87, var78,
                ((Int8(113) & 127)..=(Int8(124) & 127) : ((-58) | 1)),
                ((Int8(-88) & 127)..(Int8(-126) & 127) : ((-31) | 1)), ((Int8(-29) & 127)..(var95 & 127) : ((var98 | 1))),
                ((var95 & 127)..(var95 & 127) : ((var98 | 1))), var87,
                ((Int8(22) & 127)..=(Int8(-53) & 127) : ((var110 | 1)))]
        } else {
            [((Int8(-111) & 127)..=(Int8(126) & 127) : (57 | 1)), ((Int8(-82) & 127)..(Int8(-34) & 127) : (49 | 1)),
                ((Int8(-98) & 127)..(Int8(3) & 127) : ((-51) | 1)), ((Int8(-98) & 127)..=(Int8(50) & 127) : ((-61) | 1)),
                ((Int8(-56) & 127)..=(Int8(-48) & 127) : (112 | 1)), ((Int8(-63) & 127)..=(Int8(18) & 127) : (93 | 1)),
                ((Int8(-122) & 127)..=(Int8(-68) & 127) : (107 | 1)), ((Int8(101) & 127)..=(Int8(80) & 127) : (63 | 1)),
                ((Int8(12) & 127)..=(Int8(78) & 127) : (70 | 1)), ((Int8(-125) & 127)..=(Int8(81) & 127) : (124 | 1))]
        }
    } finally { // block id: 114
        -(-68)
        [((Int8(-81) & 127)..(Int8(-73) & 127) : ((-56) | 1)), ((Int8(-86) & 127)..(Int8(-72) & 127) : (20 | 1)),
            ((Int8(-124) & 127)..(Int8(-102) & 127) : (101 | 1)), ((Int8(-1) & 127)..(Int8(-99) & 127) : (69 | 1)),
            ((Int8(89) & 127)..=(Int8(-110) & 127) : (119 | 1)), ((Int8(15) & 127)..(Int8(69) & 127) : ((-25) | 1)),
            ((Int8(-5) & 127)..=(Int8(90) & 127) : (103 | 1)), ((Int8(72) & 127)..(Int8(-99) & 127) : (16 | 1)),
            ((Int8(-2) & 127)..(Int8(116) & 127) : (15 | 1)), ((Int8(-9) & 127)..(Int8(36) & 127) : ((-2) | 1))]
    }[7]
}

func func180(optionalParam181!: (Rune, Int8) = (r'i', Int8(45)),
    optionalParam185!: Bool = (((Int32(-53) & 127)..(Int32(84) & 127) : ((-41) | 1)) is (Rune, Int8)),
    namedParam188!: Unit): Range<UInt16> { // block id: 189
    var var191: Range<Int64> = (((-82) & 127)..((-99) & 127) : ((-81) | 1));
    var191;
    ((UInt16(68) & 127)..(UInt16(230) & 127) : (91 | 1))
}

func func210(param211: Option<Range<Int8>>): Range<UInt16> { // block id: 212
    var var218: (Option<Range<Int8>>, Range<UInt16>) = (Option<Range<Int8>>.None, ((UInt16(35) & 127)..(UInt16(171) & 127) : (61 |
            1)));
    var var237: Int64 = Int64(UInt16(Int8(-64)));
    var var262: Float64 = (-66.0);
    var var268: UInt16 = UInt16(170);
    match (match (var218[0]) {
        case _ => Option<Range<Int8>>.None
    }) {
        case caseVar228 =>
            var68 ||= false
            ((UInt16(219) & 127)..(UInt16(40) & 127) : ((var237 | 1)))

        case _ =>
            var var245: Unit = ();
            var245;
            var var249: UInt8 = UInt8(Int8(-46));
            var249 -= UInt8(26)
            if (var68) {
                var197
            } else {
                ((UInt16(180) & 127)..=(UInt16(40) & 127) : ((-10) | 1))
            }

        case caseVar259 =>
            var262;
            [((Int8(90) & 127)..(Int8(73) & 127) : ((-48) | 1)), ((Int8(-77) & 127)..(Int8(-91) & 127) : ((-114) | 1)),
                ((Int8(93) & 127)..=(Int8(-119) & 127) : (122 | 1)), ((Int8(-3) & 127)..=(Int8(-108) & 127) : (21 | 1)),
                ((Int8(-111) & 127)..=(Int8(60) & 127) : (84 | 1)), ((Int8(-15) & 127)..=(Int8(123) & 127) : ((-69) | 1)),
                ((Int8(37) & 127)..=(Int8(-94) & 127) : (52 | 1)), ((Int8(-19) & 127)..=(Int8(117) & 127) : (60 | 1)),
                ((Int8(0) & 127)..=(Int8(120) & 127) : (53 | 1)), ((Int8(42) & 127)..(Int8(18) & 127) : (38 | 1))];
            ((UInt16(70) & 127)..(var268 & 127) : ((78 | 1)))

        case _ =>
            Int32(-21);
            var var275: Unit = ();
            var275;
            if (false) {
                ((var268 & 127)..(UInt16(243) & 127) : ((121 | 1)))
            } else {
                var197
            }
    }
}

public enum Enum294 {
    defaultValue
}

public open class Class454 <: Interface12 {
    public init() { // block id: 456

    }

    var var461: Unit = ();
    var var492: Bool = false;
    public func func17(namedParam18!: Float64, namedParam19!: Int64, namedParam20!: Unit): Unit { // block id: 21
        try { // block id: 23
            var var27: (Rune, Int8) = (r'F', Int8(-109));
            var27[0];
            var43[7]
        } finally { // block id: 46

        }
        let var133: Int8 = Int8(8);
        let var138: Range<Int8> = ((Int8(Int8(86)) & 127)..=(Int8(76) & 127) : ((37 | 1)));
        let var204: UInt16 = UInt16(UInt16(5));
        let var285: (Option<Range<Int8>>) -> Range<UInt16> = func210;
        let var343: UInt16 = UInt16(178);
        let var416: Option<Enum294> = Option<Enum294>.Some(Enum294.defaultValue);
        let var458: Class454 = Class454();
        let var489: Class454 = Class454();
        let var565: (Range<Int32>, Range<UInt8>, Range<Int64>, Range<UInt64>) = (((Int32(-71) & 127)..(Int32(-24) & 127) : ((-78) |
                1)), ((UInt8(139) & 127)..=(UInt8(204) & 127) : (25 | 1)), ((83 & 127)..(90 & 127) : (21 | 1)), ((UInt64(47) &
                127)..(UInt64(142) & 127) : (((-76) | 1))));
        let var604: Range<Int64> = ((Int64(UInt16(UInt16(206))) & 127)..(Int64(Int8(-117)) & 127) : ((Int64(UInt32(21)) |
            1)));
        var43 |> {
            lambdaParameter121: Array<Unit> =>
                let var339: Option<Range<UInt16>> = Option<Range<UInt16>>.None;
                let var372: Float32 = Float32(-92.0);
                let var549: Int8 = Int8(54);
                let var661: Unit = ();
                let var674: Range<UInt8> = ((UInt8(108) & 127)..=(UInt8(Int8(Int8(Int8(1)))) & 127) : ((66 | 1)));
                func func163<T0, T1, T2>(param164: (Array<Unit>) -> Range<Int8>, param167: UInt32, param168: String,
                    namedParam169!: UInt8): Unit { // block id: 170
                    [var176[7], func180(optionalParam185: false, namedParam188: namedParam20), var197,
                        ((var204 & 127)..(var204 & 127) : (((-97) | 1))), (Option<Range<Int8>>.Some(var138) |> var285),
                        ((UInt16(238) & 127)..=(var204 & 127) : ((63 | 1))), match (Enum294.defaultValue) {
                        case _ => var197

                        case _ =>
                            var var306: UInt8 = UInt8(UInt8(Int8(Int8(-40))));
                            var var312: UInt8 = UInt8(Int8(UInt8(14)));
                            var306 |= var312
                            ((var204 & 127)..(UInt16(28) & 127) : ((17 | 1)))

                        case _ =>
                            ();
                            if (var68) {
                                ((UInt16(187) & 127)..(var204 & 127) : (((-73) | 1)))
                            } else {
                                ((var204 & 127)..(UInt16(34) & 127) : (((-94) | 1)))
                            }
                    }, (var339 ?? ((var343 & 127)..=(UInt16(65) & 127) : ((namedParam19 | 1)))),
                        ([namedParam20, namedParam20, (), (), (), namedParam20, namedParam20, (), namedParam20,
                            namedParam20], (((-17) & 127)..=((-54) & 127) : ((namedParam19 | 1))), true, ((var343 & 127)..(var343 &
                            127) : ((32 | 1))), r'1', var372, var176)[3],
                        ((UInt16(104) & 127)..=(UInt16(48) & 127) : ((-65) | 1))][2];
                    let var420: Enum294 = Enum294.defaultValue;
                    var var443: UInt16 = UInt16(Int16(UInt16(114)));
                    if (var383[3] > var383[2]) { // block id: 405
                        var43[3]
                    } else if (match ((var416 ?? var420)) {
                        case defaultValue =>
                            ();
                            Int16(5) - Int16(118);
                            var68

                        case defaultValue =>
                            ((UInt32(103) & 127)..(UInt32(114) & 127) : ((-101) | 1));
                            false

                        case defaultValue =>
                            var68 &&= false
                            var443 >>= ((UInt16(157)) & 7)
                            true

                        case _ => var68
                    }) { // block id: 452
                        var458.var461;
                        namedParam20;
                        match (Option<Range<UInt16>>.Some(((UInt16(207) & 127)..=(UInt16(222) & 127) : (((-119) | 1))))) {
                            case caseVar472: Array<UInt32> => namedParam20

                            case _ =>
                                ();
                                r'U';
                                ()

                            case _ => var68 ||= var68
                        }
                    };
                    let var530: Range<Int32> = ((Int32(UInt8(UInt8(214))) & 127)..=(Int32(Int16(Int16(-44))) & 127) : ((Int64(Int16(-94)) |
                        1)));
                    let var614: Range<UInt64> = ((UInt64(71) & 127)..(UInt64(156) & 127) : ((Int64(Int32(Int8(34))) | 1)));
                    var loopTimeVar684: Int64 = 0;
                    while ((var489.var492) && loopTimeVar684 < 100) {
                        loopTimeVar684++;
                        var var497: Class454 = Class454();
                        var497.var492;
                        let var652: Int8 = Int8(-104);
                        func func501(param502: Array<Range<Int8>>): Range<UInt8> { // block id: 503
                            var var517: UInt16 = UInt16(UInt8(Int8(UInt8(26))));
                            if (match (var420) {
                                case _ => namedParam169 <= UInt8(223)

                                case _ =>
                                    var517--;
                                    var68 && true
                            }) {
                                (((Int32(-19) & 127)..(Int32(93) & 127) : ((-27) | 1)), var530, Float32(-1.0),
                                    namedParam18, [((var133 & 127)..=(var133 & 127) : ((92 | 1))),
                                        ((var549 & 127)..=(var549 & 127) : (((-110) | 1))),
                                        ((Int8(5) & 127)..(Int8(26) & 127) : (110 | 1)),
                                        ((Int8(119) & 127)..=(Int8(-111) & 127) : ((-72) | 1)), var138,
                                        ((var549 & 127)..(Int8(-81) & 127) : ((namedParam19 | 1))),
                                        ((Int8(75) & 127)..=(Int8(-87) & 127) : ((-30) | 1)), var138,
                                        ((Int8(-121) & 127)..(Int8(35) & 127) : (40 | 1)),
                                        ((Int8(47) & 127)..(Int8(-12) & 127) : ((-95) | 1))], var565, [var197, var197,
                                        ((UInt16(97) & 127)..(var204 & 127) : ((namedParam19 | 1))),
                                        ((UInt16(240) & 127)..(UInt16(24) & 127) : (79 | 1)),
                                        ((UInt16(92) & 127)..(UInt16(67) & 127) : ((-89) | 1)),
                                        ((UInt16(159) & 127)..=(UInt16(98) & 127) : ((-14) | 1)),
                                        ((UInt16(97) & 127)..(var343 & 127) : ((namedParam19 | 1))),
                                        ((UInt16(23) & 127)..=(UInt16(20) & 127) : ((-81) | 1)),
                                        ((UInt16(126) & 127)..(UInt16(132) & 127) : ((-106) | 1)),
                                        ((var343 & 127)..(var204 & 127) : ((namedParam19 | 1)))], var595, (((Int32(-28) &
                                            127)..=(Int32(43) & 127) : ((-112) | 1)), ((namedParam169 & 127)..(namedParam169 &
                                            127) : ((namedParam19 | 1))), var604, var614))[4]
                            } else {
                                (func210(var383, param167) ?? [((Int8(-26) & 127)..=(Int8(-2) & 127) : (49 | 1)),
                                    ((Int8(-105) & 127)..=(Int8(-11) & 127) : (78 | 1)),
                                    ((Int8(108) & 127)..(Int8(-59) & 127) : (116 | 1)),
                                    ((Int8(-90) & 127)..(Int8(112) & 127) : ((-56) | 1)),
                                    ((Int8(-60) & 127)..=(Int8(-9) & 127) : ((-3) | 1)),
                                    ((Int8(88) & 127)..(Int8(28) & 127) : (103 | 1)),
                                    ((Int8(2) & 127)..=(Int8(111) & 127) : (124 | 1)),
                                    ((Int8(-53) & 127)..=(Int8(-114) & 127) : ((-64) | 1)),
                                    ((Int8(-73) & 127)..=(Int8(-109) & 127) : (75 | 1)),
                                    ((Int8(-117) & 127)..(Int8(-65) & 127) : ((-99) | 1))])
                            };
                            match (try { // block id: 638
                                namedParam20;
                                if (false) {
                                    (r'4', Int8(114))
                                } else {
                                    (r'i', Int8(-79))
                                };
                                (((-62) & 127)..((-59) & 127) : ((-107) | 1))
                            } finally { // block id: 649
                                ((var652 & 127)..=(var549 & 127) : ((104 | 1)));
                                (((-116) & 127)..((-15) & 127) : (104 | 1))
                            }) {
                                case _: Range<Int32> =>
                                    var661;
                                    var197;
                                    ((UInt8(53) & 127)..=(UInt8(173) & 127) : (69 | 1))

                                case caseVar667 =>
                                    namedParam20;
                                    ((UInt8(210) & 127)..(UInt8(36) & 127) : (19 | 1))

                                case _ => var674
                            }
                        };

                        func501(
                            [((Int8(-27) & 127)..(Int8(81) & 127) : ((-97) | 1)),
                                ((Int8(45) & 127)..(Int8(116) & 127) : (60 | 1)),
                                ((Int8(5) & 127)..=(Int8(6) & 127) : (60 | 1)),
                                ((Int8(-73) & 127)..(Int8(-113) & 127) : ((-124) | 1)),
                                ((Int8(111) & 127)..(Int8(49) & 127) : ((-52) | 1)),
                                ((Int8(-19) & 127)..=(Int8(112) & 127) : (62 | 1)),
                                ((Int8(115) & 127)..(Int8(-91) & 127) : (44 | 1)),
                                ((Int8(35) & 127)..(Int8(33) & 127) : (57 | 1)),
                                ((Int8(-87) & 127)..=(Int8(25) & 127) : (44 | 1)),
                                ((Int8(118) & 127)..=(Int8(-49) & 127) : (120 | 1))])
                    }
                };
                try { // block id: 124
                    (Option<Range<Int8>>.Some(((var133 & 127)..=(var133 & 127) : (((-56) | 1)))) ?? var138)
                } catch (e: Exception) { // block id: 144
                    var var148: (Range<Int32>, Range<UInt8>, Range<Int64>, Range<UInt64>) = (((Int32(-79) & 127)..(Int32(UInt32(Int32(27))) &
                            127) : ((Int64(Int16(Int8(-102))) | 1))), ((UInt8(226) & 127)..(UInt8(42) & 127) : ((-16) | 1)),
                        (((-8) & 127)..((-52) & 127) : ((-68) | 1)), ((UInt64(18) & 127)..(UInt64(151) & 127) : (72 | 1)));
                    var148[2];
                    var var691: UInt8 = UInt8(UInt8(Int8(Int8(-95))));
                    func163<Bool, Int16, Range<Int16>>(func48, var687, ###"hO_PQqN7c_"###, namedParam169: var691);
                    let var699: ((Range<Int32>, Range<Int32>, Float32, Float64, Array<Range<Int8>>, (Range<Int32>, Range<UInt8>, 
                        Range<Int64>, Range<UInt64>), Array<Range<UInt16>>, Int16, (Range<Int32>, Range<UInt8>, Range<Int64>, 
                        Range<UInt64>)), Range<Int16>, Range<Int8>, String) = ((((Int32(Int16(41)) & 127)..(Int32(UInt32(248)) &
                                127) : ((63 | 1))), ((Int32(-71) & 127)..(Int32(Int32(34)) & 127) : ((Int64(Int8(124)) |
                                1))), Float32(-66.0), (-73.0), [((Int8(-93) & 127)..(Int8(112) & 127) : (62 | 1)),
                                ((Int8(112) & 127)..=(Int8(-128) & 127) : ((-37) | 1)),
                                ((Int8(-66) & 127)..=(Int8(73) & 127) : (4 | 1)),
                                ((Int8(-90) & 127)..=(Int8(41) & 127) : (76 | 1)),
                                ((Int8(107) & 127)..(Int8(-29) & 127) : (77 | 1)),
                                ((Int8(65) & 127)..=(Int8(4) & 127) : ((-4) | 1)),
                                ((Int8(98) & 127)..=(Int8(71) & 127) : ((-27) | 1)),
                                ((Int8(3) & 127)..=(Int8(38) & 127) : (112 | 1)),
                                ((Int8(-77) & 127)..(Int8(-58) & 127) : (73 | 1)),
                                ((Int8(-126) & 127)..=(Int8(-11) & 127) : ((-27) | 1))], (((Int32(71) & 127)..=(Int32(47) &
                                    127) : (((-98) | 1))), ((UInt8(0) & 127)..=(UInt8(139) & 127) : (((-33) | 1))), (((-97) &
                                    127)..(68 & 127) : (117 | 1)), ((UInt64(50) & 127)..=(UInt64(62) & 127) : (((-84) | 1)))),
                            [((UInt16(66) & 127)..(UInt16(250) & 127) : (30 | 1)),
                                ((UInt16(253) & 127)..(UInt16(123) & 127) : ((-8) | 1)),
                                ((UInt16(225) & 127)..(UInt16(144) & 127) : (((-84) | 1))),
                                ((UInt16(187) & 127)..=(UInt16(209) & 127) : ((-11) | 1)),
                                ((UInt16(38) & 127)..=(UInt16(49) & 127) : ((64 | 1))),
                                ((UInt16(227) & 127)..(UInt16(236) & 127) : ((-24) | 1)),
                                ((UInt16(209) & 127)..(UInt16(71) & 127) : ((-56) | 1)),
                                ((UInt16(204) & 127)..(UInt16(69) & 127) : (((-95) | 1))),
                                ((UInt16(145) & 127)..=(UInt16(74) & 127) : ((-2) | 1)),
                                ((UInt16(21) & 127)..=(UInt16(162) & 127) : ((-117) | 1))], Int16(Int16(UInt16(254))), (((Int32(-120) &
                                    127)..=(Int32(98) & 127) : ((-25) | 1)), ((UInt8(42) & 127)..=(UInt8(211) & 127) : ((-123) |
                                    1)), ((44 & 127)..((-98) & 127) : (66 | 1)), ((UInt64(217) & 127)..=(UInt64(86) & 127) : ((-1) |
                                    1)))), ((Int16(-79) & 127)..=(Int16(106) & 127) : (100 | 1)), ((Int8(27) & 127)..(Int8(-46) &
                            127) : (91 | 1)), "IV'_6k3:dE");
                    var699[2]
                }
        };
        func func765(param766: Range<Int8>): Unit { // block id: 767
            namedParam20;
            try { // block id: 770

            } finally { // block id: 771

            }
            var var775: ((Range<Int32>, Range<Int32>, Float32, Float64, Array<Range<Int8>>, (Range<Int32>, Range<UInt8>, 
                Range<Int64>, Range<UInt64>), Array<Range<UInt16>>, Int16, (Range<Int32>, Range<UInt8>, Range<Int64>, 
                Range<UInt64>)), Range<Int8>, Rune, Unit, Array<Unit>, Range<UInt8>) = ((((Int32(-11) & 127)..(Int32(-63) &
                        127) : ((-101) | 1)), ((Int32(81) & 127)..(Int32(UInt32(82)) & 127) : ((Int64((-93)) | 1))),
                    Float32(Float32(Float32(-126.0))), (-72.0), [((Int8(-100) & 127)..=(Int8(-41) & 127) : (((-31) | 1))),
                        ((Int8(-122) & 127)..=(Int8(-83) & 127) : ((110 | 1))),
                        ((Int8(-54) & 127)..=(Int8(26) & 127) : ((59 | 1))),
                        ((Int8(104) & 127)..=(Int8(88) & 127) : (((-16) | 1))),
                        ((Int8(-122) & 127)..(Int8(73) & 127) : (((-40) | 1))),
                        ((Int8(63) & 127)..(Int8(47) & 127) : (((-61) | 1))),
                        ((Int8(-30) & 127)..=(Int8(-83) & 127) : ((7 | 1))),
                        ((Int8(-64) & 127)..(Int8(-92) & 127) : (((-55) | 1))),
                        ((Int8(16) & 127)..(Int8(-75) & 127) : ((115 | 1))),
                        ((Int8(-26) & 127)..=(Int8(121) & 127) : ((79 | 1)))], (((Int32(110) & 127)..(Int32(-13) & 127) : (29 |
                            1)), ((UInt8(253) & 127)..=(UInt8(96) & 127) : (50 | 1)), ((5 & 127)..=(98 & 127) : ((-17) |
                            1)), ((UInt64(176) & 127)..(UInt64(251) & 127) : (84 | 1))), [((UInt16(175) & 127)..=(UInt16(243) &
                        127) : (34 | 1)), ((UInt16(70) & 127)..(UInt16(59) & 127) : (11 | 1)),
                        ((UInt16(240) & 127)..(UInt16(96) & 127) : ((-104) | 1)),
                        ((UInt16(130) & 127)..=(UInt16(39) & 127) : ((-34) | 1)),
                        ((UInt16(47) & 127)..=(UInt16(110) & 127) : ((-32) | 1)),
                        ((UInt16(77) & 127)..=(UInt16(102) & 127) : ((-90) | 1)),
                        ((UInt16(192) & 127)..=(UInt16(202) & 127) : (41 | 1)),
                        ((UInt16(193) & 127)..(UInt16(64) & 127) : ((-73) | 1)),
                        ((UInt16(91) & 127)..=(UInt16(113) & 127) : ((-5) | 1)),
                        ((UInt16(39) & 127)..=(UInt16(178) & 127) : ((-66) | 1))], Int16(Int8(49)), (((Int32(-10) & 127)..(Int32(118) &
                            127) : (((-117) | 1))), ((UInt8(124) & 127)..=(UInt8(120) & 127) : (27 | 1)), ((69 & 127)..=(48 &
                            127) : ((-4) | 1)), ((UInt64(202) & 127)..=(UInt64(183) & 127) : (((-64) | 1))))), ((Int8(-115) &
                    127)..=(Int8(-6) & 127) : ((-90) | 1)), r'z', (), [(), (), (), (), (), (), (), (), (), ()], ((UInt8(UInt8(UInt8(138))) &
                    127)..(UInt8(UInt8(103)) & 127) : (((-48) | 1))));
            var775[3]
        };

        let var885: Range<Int8> = ((Int8(Int8(90)) & 127)..=(Int8(93) & 127) : ((Int64(UInt16(144)) | 1)));
        var var917: Range<UInt64> = ((UInt64(205) & 127)..=(UInt64(181) & 127) : ((-1) | 1));
        let var930: Float32 = Float32(-77.0);
        let var934: Array<Range<Int8>> = [((Int8(-82) & 127)..(Int8(-52) & 127) : ((-100) | 1)),
            ((Int8(-57) & 127)..(Int8(18) & 127) : (84 | 1)), ((Int8(94) & 127)..(Int8(36) & 127) : ((-96) | 1)),
            ((Int8(60) & 127)..=(Int8(72) & 127) : ((-37) | 1)), ((Int8(-66) & 127)..=(Int8(123) & 127) : (78 | 1)),
            ((Int8(-32) & 127)..=(Int8(-23) & 127) : ((-86) | 1)), ((Int8(59) & 127)..=(Int8(124) & 127) : (28 | 1)),
            ((Int8(-82) & 127)..=(Int8(7) & 127) : (104 | 1)), ((Int8(83) & 127)..=(Int8(107) & 127) : ((-66) | 1)),
            ((Int8(-124) & 127)..=(Int8(89) & 127) : ((-81) | 1))];
        var var982: Range<Int8> = ((Int8(-17) & 127)..=(Int8(56) & 127) : (((-86) | 1)));
        var var989: Range<UInt8> = ((UInt8(17) & 127)..(UInt8(Int8(88)) & 127) : ((Int64(UInt8(238)) | 1)));
        func765(try { // block id: 862
            let var911: Range<UInt8> = ((UInt8(52) & 127)..(UInt8(160) & 127) : (9 | 1));
            var var914: Range<Int64> = (((-34) & 127)..(112 & 127) : (40 | 1));
            var var923: Int32 = Int32(Int32(Int16(18)));
            if (true) {
                (((Int32(-85) & 127)..=(Int32(116) & 127) : (10 | 1)), var868, Float32(-63.0), 57.0, [((Int8(-116) & 127)..(Int8(39) &
                        127) : ((-28) | 1)), ((var133 & 127)..=(Int8(-87) & 127) : ((104 | 1))), var885,
                        ((var133 & 127)..=(Int8(-20) & 127) : ((namedParam19 | 1))),
                        ((Int8(80) & 127)..=(Int8(-13) & 127) : (28 | 1)),
                        ((Int8(20) & 127)..(var133 & 127) : ((namedParam19 | 1))), var885,
                        ((Int8(116) & 127)..=(Int8(7) & 127) : ((-48) | 1)), var138,
                        ((Int8(-44) & 127)..(Int8(99) & 127) : (8 | 1))], var565, var176, var595, (var868, var911, var914,
                        var917))
            } else {
                (((Int32(24) & 127)..(var923 & 127) : ((115 | 1))), var868, var930, 81.0, var934, var565, [((UInt16(60) &
                        127)..(UInt16(217) & 127) : ((-87) | 1)),
                        ((UInt16(94) & 127)..=(var343 & 127) : ((namedParam19 | 1))),
                        ((UInt16(56) & 127)..=(UInt16(17) & 127) : ((-90) | 1)),
                        ((UInt16(242) & 127)..=(UInt16(79) & 127) : (0 | 1)),
                        ((UInt16(182) & 127)..=(var204 & 127) : ((namedParam19 | 1))),
                        ((UInt16(150) & 127)..=(var343 & 127) : (((-91) | 1))),
                        ((UInt16(47) & 127)..=(UInt16(215) & 127) : ((namedParam19 | 1))),
                        ((var204 & 127)..(var343 & 127) : ((namedParam19 | 1))), var197,
                        ((UInt16(71) & 127)..(UInt16(152) & 127) : ((100 | 1)))], var595, (((var923 & 127)..=(var923 &
                            127) : ((namedParam19 | 1))), ((UInt8(100) & 127)..(UInt8(164) & 127) : (76 | 1)), ((16 & 127)..(namedParam19 &
                            127) : ((namedParam19 | 1))), ((UInt64(125) & 127)..=(UInt64(42) & 127) : (((-29) | 1)))))
            };
            var982
        } finally { // block id: 987
            var989;
            var68 &&= false
            ((Int8(12) & 127)..(Int8(-58) & 127) : (29 | 1))
        })
    }
}

func func210(param629: Array<UInt32>, param630: UInt32): Option<Array<Range<Int8>>> { // block id: 631
    Option<Array<Range<Int8>>>.None
}
