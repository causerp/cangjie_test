/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

package test

// random seed:1660067425812

// All global variable need to be defined before use!
public let var_1660067425812_71: Enum_1660067425812_68 = Enum_1660067425812_68.defaultValue
public var var_1660067425812_103: Unit = ()
public let var_1660067425812_120: Int64 = Int64(Int16(Int16(-72)))
public let var_1660067425812_245: Rune = r'A'
public let var_1660067425812_307: String = ###"J&|ndeLUQ5"###
public let var_1660067425812_373: Bool = true
public var var_1660067425812_543: Range<Int64> = ((Int64(Int16(-127)) & 127)..=(Int64(Int8(79)) & 127) : ((Int64(UInt32(12)) |
    1)))
public let var_1660067425812_602: ?Array<Class_1660067425812_28> = Option<Array<Class_1660067425812_28>>.None
public let var_1660067425812_661: ?Class_1660067425812_28 = (UInt64(Int8(Int8(Int8(38)))) as Class_1660067425812_28)
public var var_1660067425812_688: Option<Array<Option<Int64>>> = (Float64(Float32(Float32(-114.0))) as Array<Option<Int64>>)
public var var_1660067425812_982: Range<Int8> = ((Int8(77) & 127)..(Int8(-122) & 127) : ((-43) | 1))
public var var_1660067425812_1071: Array<Int8> = [Int8(103), Int8(UInt8(UInt8(UInt8(85)))), Int8(-126), Int8(30),
    Int8(Int8(-97)), Int8(Int8(41)), Int8(-34), Int8(Int8(UInt8(Int8(66)))), Int8(35), Int8(Int8(-66))]
public let var_1660067425812_1213: Bool = false
public var var_1660067425812_1225: Int8 = Int8(Int8(Int8(Int8(4))))
public let var_1660067425812_1295: ?Enum_1660067425812_68 = Option<Enum_1660067425812_68>.None
public let var_1660067425812_1507: Int64 = Int64(Int8(UInt8(209)))
var var_1660067425812_2096: Option<Option<Unit>> = (((Int32(64) & 127)..(Int32(-84) & 127) : (((-119) | 1))) as Option<Unit>)
public let var_1660067425812_2147: Option<Range<UInt8>> = ((108, (((UInt64(58) & 127)..=(UInt64(164) & 127) : ((-115) | 1)) as Array<Class_1660067425812_28>),
    (-24.0)) as Range<UInt8>)
public var var_1660067425812_2243: Float32 = Float32(Float32(37.0))
public let var_1660067425812_2285: (Array<Range<Int32>>, Range<UInt8>, UInt32, Option<Unit>, Rune) = ([((Int32(Int8(125)) &
        127)..(Int32(Int16(68)) & 127) : ((Int64(Int16(-61)) | 1))),
        ((Int32(UInt16(195)) & 127)..=(Int32(122) & 127) : (((-87) | 1))),
        ((Int32(77) & 127)..(Int32(88) & 127) : ((Int64(UInt64(140)) | 1))),
        ((Int32(UInt8(126)) & 127)..=(Int32(95) & 127) : ((Int64((-123)) | 1))),
        ((Int32(0) & 127)..(Int32(8) & 127) : (12 | 1)), ((Int32(30) & 127)..=(Int32(120) & 127) : (86 | 1)),
        ((Int32(17) & 127)..=(Int32(Int32(-75)) & 127) : (((-13) | 1))), ((Int32(-96) & 127)..=(Int32(46) & 127) : (9 | 1)),
        ((Int32(80) & 127)..(Int32(82) & 127) : (115 | 1)), ((Int32(56) & 127)..(Int32(66) & 127) : ((-35) | 1))], ((UInt8(15) &
        127)..=(UInt8(64) & 127) : ((-55) | 1)), UInt32(14), (r'c' as Unit), r'D')
public let var_1660067425812_2344: ?Array<Class_1660067425812_28> = Option<Array<Class_1660067425812_28>>.None
public var var_1660067425812_2377: String = "CH *.=hjla"
public var var_1660067425812_2435: Range<UInt64> = ((UInt64(251) & 127)..=(UInt64(233) & 127) : ((-72) | 1))
public var var_1660067425812_2767: Unit = ()
public var var_1660067425812_2899: ?Array<Bool> = (Option<Range<Int32>>.None as Array<Bool>)
public var var_1660067425812_2909: Array<Bool> = [true, true, true, ("Jsxk>EE9j," is Rune), false, false, false, false,
    ([Option<Int64>.None, ([false, false, false, true, true, true, true, false, false, false] as Int64),
    (((-53), Option<Array<Class_1660067425812_28>>.None, (-63.0)) as Int64), Option<Int64>.None, Option<Int64>.None,
    Option<Int64>.None,
    ([Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None,
    Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None] as Int64),
    Option<Int64>.None,
    ([Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None,
    Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None, Option<Int64>.None] as Int64),
    ([((Int32(113) & 127)..=(Int32(121) & 127) : (((-31) | 1))), ((Int32(-42) & 127)..=(Int32(3) & 127) : ((105 | 1))),
    ((Int32(120) & 127)..(Int32(56) & 127) : (88 | 1)), ((Int32(-67) & 127)..(Int32(121) & 127) : ((-76) | 1)),
    ((Int32(-40) & 127)..=(Int32(-15) & 127) : (4 | 1)), ((Int32(75) & 127)..=(Int32(-8) & 127) : (((-17) | 1))),
    ((Int32(-104) & 127)..(Int32(-4) & 127) : ((-123) | 1)), ((Int32(-79) & 127)..(Int32(122) & 127) : ((-70) | 1)),
    ((Int32(-78) & 127)..(Int32(-96) & 127) : (((-11) | 1))), ((Int32(-45) & 127)..=(Int32(-45) & 127) : (((-80) | 1)))] as Int64)] is Option<Range<UInt8>>),
    false]
public var var_1660067425812_3021: (String, Range<UInt16>, Rune, Unit, UInt8, UInt16, Range<UInt64>, Int32) = (")sE${var_1660067425812_2377}c^F`kA${var_1660067425812_2377}?",
    ((UInt16(Int16(88)) & 127)..(UInt16(46) & 127) : ((Int64(UInt16(Int8(-88))) | 1))), r'5', (), UInt8(159), UInt16(UInt8(99)),
    ((UInt64(Int32(Int8(56))) & 127)..(UInt64(223) & 127) : ((Int64(Int16(-35)) | 1))), Int32(UInt16(152)))
public var var_1660067425812_3489: (String, Range<UInt32>, Int64, UInt32) = (###"sQ\"j+l${var_1660067425812_307}CGe${var_1660067425812_307}F"###,
    ((UInt32(86) & 127)..=(UInt32(177) & 127) : ((-123) | 1)), Int64(UInt16(Int16(-100))), UInt32(120))
var var_1660067425812_3656: Option<Range<Int32>> = (([(), (), (), (), (), (), (), (), (), ()], UInt32(250), 125, 32) as Range<Int32>)
public var var_1660067425812_3779: (String, Unit, Float64, Int64) = (###"mJ\"KR20<${var_1660067425812_2377}qB"###, (),
    2.0, Int64(Int8(-28)))
public var var_1660067425812_3916: Option<Option<Option<Option<Class_1660067425812_28>>>> = Option<Option<Option<Option<Class_1660067425812_28>>>>
    .None
public let var_1660067425812_4025: Rune = r'A'
public let var_1660067425812_4064: (UInt8, Range<Int32>, Option<Option<Option<Class_1660067425812_28>>>, (String, Unit, 
    Float64, Int64)) = (UInt8(46), ((Int32(-86) & 127)..=(Int32(121) & 127) : (89 | 1)), Option<Option<Option<Class_1660067425812_28>>>
        .None, ("""
!${var_1660067425812_2377}[gY#
Yd<+5
""", (), Float64((-36.0)), Int64(Int32(-42))))
public var var_1660067425812_4098: UInt32 = UInt32(58)
public var var_1660067425812_4163: ?Option<Unit> = Option<Option<Unit>>.None
public var var_1660067425812_4273: Option<Option<Option<Class_1660067425812_28>>> = Option<Option<Option<Class_1660067425812_28>>>
    .None
public var var_1660067425812_4297: Unit = ()
public let var_1660067425812_4310: Range<Int32> = ((Int32(UInt16(UInt8(UInt8(132)))) & 127)..=(Int32(UInt16(30)) & 127) : ((Int64(UInt32(UInt16(UInt16(232)))) |
    1)))
let var_1660067425812_4485: Option<UInt8> = ((UInt16(46) as Option<Option<Class_1660067425812_28>>) as UInt8)

public func func_1660067425812_146(): Option<Int64> { // block id: 147
    Option<Int64>.None
}

public func func_1660067425812_1108(param_1660067425812_1109: Option<Option<Option<Class_1660067425812_28>>>): Bool { // block id: 1110
    try { // block id: 1114
        var_1660067425812_120;
        [true, false, false, true, false, true, false, false, false, false]
    } catch (_) { // block id: 1117
        let var_1660067425812_1119: UInt8 = UInt8(Int8(UInt8(246)));
        var_1660067425812_1119;
        let var_1660067425812_1134: Bool = true;
        if (false) {
            [false, true, false, true, false, false, true, false, true, true]
        } else {
            [true, true, var_1660067425812_185, var_1660067425812_185, true, true, var_1660067425812_1134, false, true,
                false]
        }
    } finally { // block id: 1139
        var_1660067425812_1016;
        [false, true, true, true, true, true, false, true, false, true]
    }[5]
}

public func func_1660067425812_1590(param_1660067425812_1591: (Range<Int64>, Rune, Range<UInt8>, Option<Int64>)): Array<Option<Int64>> { // block id: 1592
    var_1660067425812_961;
    var var_1660067425812_1595: Array<Option<Int64>> = [Option<Int64>.None, Option<Int64>.None, Option<Int64>.None,
        (Int64(UInt16(Int16(80))) as Int64), (UInt32(50) as Int64),
        ([Int8(37), Int8(7), Int8(-68), Int8(-40), Int8(69), Int8(Int8(60)), Int8(108), Int8(UInt8(46)), Int8(-106),
        Int8(UInt8(176))] as Int64), (UInt32(126) as Int64), Option<Int64>.None,
        ((50, Option<Array<Class_1660067425812_28>>.Some(
            [Class_1660067425812_28(((UInt8(83) & 127)..=(UInt8(81) & 127) : (((-2) | 1))), 33.0,
                (((-1) & 127)..=((-109) & 127) : (((-28) | 1)))), Class_1660067425812_28(func_1660067425812_146),
                Class_1660067425812_28(func_1660067425812_146), Class_1660067425812_28(),
                Class_1660067425812_28(func_1660067425812_146),
                Class_1660067425812_28(((UInt8(240) & 127)..=(UInt8(197) & 127) : ((120 | 1))), 64.0,
                ((70 & 127)..=(46 & 127) : (((-31) | 1)))), Class_1660067425812_28(func_1660067425812_146),
                Class_1660067425812_28(), Class_1660067425812_28(func_1660067425812_146),
                Class_1660067425812_28(r'B', optionalParam_1660067425812_139: UInt16(113),
                namedParam_1660067425812_141: Int16(-70), namedParam_1660067425812_142: (-91))]), Float64((-46.0))) as Int64),
        Option<Int64>.Some((-33))];
    var_1660067425812_1595
}

public func func_1660067425812_1680(param_1660067425812_1681: Range<UInt32>): (Range<Int64>, Rune, Range<UInt8>, Option<Int64>) { // block id: 1682
    var var_1660067425812_1708: Int32 = Int32(Int16(81));
    var var_1660067425812_1791: UInt8 = UInt8(51);
    match (try { // block id: 1687
        [Int32(-49), Int32(-66), Int32(88), Int32(-90), Int32(-58), Int32(-105), Int32(-119), Int32(-104), Int32(-30),
            Int32(18)]
    } catch (e: Exception) { // block id: 1689
        if (false) {
            [var_1660067425812_772, var_1660067425812_772, var_1660067425812_772, var_1660067425812_772,
                var_1660067425812_772, Int32(39), Int32(99), var_1660067425812_772, var_1660067425812_772, Int32(83)]
        } else {
            [Int32(29), Int32(25), Int32(68), var_1660067425812_1708, Int32(-77), Int32(-47), Int32(79), Int32(47),
                Int32(109), var_1660067425812_772]
        }
    } finally { // block id: 1717
        [Int32(98), Int32(94), Int32(66), Int32(-16), Int32(97), Int32(-52), Int32(-39), Int32(21), Int32(-18),
            Int32(105)]
    }[3]) {
        case 31 | 88 | -2 =>
            if (var_1660067425812_1424) {
                [Option<Int64>.None, Option<Int64>.None, var_1660067425812_13, Option<Int64>.None, var_1660067425812_698,
                    Option<Int64>.Some(87), Option<Int64>.None, var_1660067425812_698, var_1660067425812_707,
                    Option<Int64>.None]
            } else {
                [Option<Int64>.Some(var_1660067425812_1569), Option<Int64>.None, Option<Int64>.Some((-88)),
                    Option<Int64>.Some(61), var_1660067425812_1586, Option<Int64>.None,
                    Option<Int64>.Some(var_1660067425812_1507), Option<Int64>.None, Option<Int64>.None,
                    Option<Int64>.Some((-13))]
            };
            var_1660067425812_1755 |= var_1660067425812_1322
            var_1660067425812_1406--

        case -5 | -112 =>
            var_1660067425812_103;
            Int8(45);
            var_1660067425812_103

        case -89 | -122 => var_1660067425812_103

        case caseVar_1660067425812_1773: Option<Option<Class_1660067425812_28>> =>
            var_1660067425812_103;
            var_1660067425812_307;
            var_1660067425812_772 = var_1660067425812_1708

        case _ =>
            var var_1660067425812_1784: UInt16 = UInt16(Int8(-18));
            var_1660067425812_1784 -= UInt16(129)
            ();
            var_1660067425812_1791 |= UInt8(173)
    };
    var var_1660067425812_1801: Array<Bool> = [([(UInt16(54) is Array<Int32>), false, false,
        ([Option<Int64>.Some((-28)), Option<Int64>.Some(93), Option<Int64>.Some(0), Option<Int64>.Some((-45)),
        Option<Int64>.Some(99), Option<Int64>.Some((-51)), Option<Int64>.Some(53), Option<Int64>.Some(60),
        Option<Int64>.None, Option<Int64>.None] is Range<Int8>), false,
        (Option<Enum_1660067425812_68>.Some(Enum_1660067425812_68.defaultValue) is (Option<Option<Option<Class_1660067425812_28>>>) -> Bool),
        ((Option<Range<UInt32>>.Some(((UInt32(141) & 127)..(UInt32(241) & 127) : (120 | 1))), ((UInt64(58) & 127)..=(UInt64(167) &
            127) : ((-37) | 1)), ((Int8(118) & 127)..=(Int8(52) & 127) : (((-77) | 1))), (), Int16(113)) is (Array<Bool>, 
        Array<Int32>, Rune, Range<Int64>, Array<(String, Unit, Float64, Int64)>, Int64, Int32)), false, false,
        ([Option<Int64>.Some((-85)), Option<Int64>.Some((-82)), Option<Int64>.Some((-55)), Option<Int64>.None,
        Option<Int64>.Some(42), Option<Int64>.Some(45), Option<Int64>.Some(2), Option<Int64>.None,
        Option<Int64>.Some(123), Option<Int64>.Some((-115))] is UInt16)] is UInt8), false, true,
        ((Enum_1660067425812_68.defaultValue, Int16(Int8(-127)), "sQY!<foNnJ", Int32(Int16(-26)), UInt16(13)) is (Enum_1660067425812_68) -> Option<Class_1660067425812_28>),
        ((Enum_1660067425812_68.defaultValue, Int16(119), """
O0<TX
+a{<fa{
""", Int32(-113), UInt16(UInt8(195))) is Bool),
        (([false, false, false, true, false, true, true, true, false, false], [Int32(-121), Int32(8), Int32(114),
            Int32(32), Int32(31), Int32(71), Int32(-91), Int32(-4), Int32(20), Int32(-75)], r'9', ((89 & 127)..(76 & 127) : (74 |
            1)), [("wH&Q2;[:w|", (), 104.0, 54), ("OvIK^mASt2", (), 55.0, 11), ("""
0g%t3
'A2sm
""", (), (-41.0), (-29)),
            (###"y+c>S`s'$"###, (), 25.0, (-66)), ("1-[JgU,rW[", (), (-17.0), (-122)), (###"o`=90(ybBe"###, (), 94.0, 76),
            (###"$Pdb8/>xJ6"###, (), 44.0, (-112)), ("Fh1BPl53m@", (), 39.0, (-60)), ("qoj)eD:r(M", (), 123.0, (-56)),
            ("Y[XKOv/_VE".toArray(), (), 82.0, 88)], Int64(Int16(-124)), Int32(UInt32(173))) is (String, Unit, Float64, 
        Int64)), (Option<Int64>.Some(Int64(UInt32(85))) is Array<Unit>), false,
        (([((Int32(26) & 127)..=(Int32(93) & 127) : ((-95) | 1)), ((Int32(73) & 127)..(Int32(36) & 127) : (17 | 1)),
            ((Int32(14) & 127)..(Int32(-33) & 127) : ((-23) | 1)), ((Int32(-12) & 127)..=(Int32(40) & 127) : ((-38) | 1)),
            ((Int32(-84) & 127)..(Int32(43) & 127) : ((-23) | 1)), ((Int32(-55) & 127)..(Int32(-58) & 127) : (85 | 1)),
            ((Int32(-109) & 127)..=(Int32(108) & 127) : (52 | 1)), ((Int32(-9) & 127)..(Int32(82) & 127) : ((-6) | 1)),
            ((Int32(80) & 127)..=(Int32(-9) & 127) : ((-79) | 1)), ((Int32(-97) & 127)..=(Int32(-86) & 127) : ((-37) | 1))],
        ((UInt8(1) & 127)..=(UInt8(129) & 127) : (((-22) | 1))), UInt32(121), (Option<Unit>.None as Unit), r'Y') is Option<Array<Option<Int64>>>),
        true];
    (var_1660067425812_1801, [var_1660067425812_772, var_1660067425812_1708, var_1660067425812_1977,
            var_1660067425812_1977, var_1660067425812_772, var_1660067425812_1708, Int32(-106), var_1660067425812_1977,
            Int32(-60), Int32(86)], r'h', (((-68) & 127)..=((-123) & 127) : ((-102) | 1)), var_1660067425812_1992, 114,
        Int32(46))[4][4][1];
    let var_1660067425812_2109: Bool = false;
    (var_1660067425812_543, if (match ((var_1660067425812_71, var_1660067425812_768, ###"dh.uMf+gfo"###,
            var_1660067425812_1708, UInt16(20))) {
            case caseVar_1660067425812_2083 => Int8(-124) == var_1660067425812_1225

            case caseVar_1660067425812_2090 =>
                var_1660067425812_1569 ^= 64
                var_1660067425812_2096;
                var_1660067425812_120 < (-88)

            case _ =>
                var_1660067425812_768;
                var_1660067425812_2109
        }) {
            try { // block id: 2112
                r'J'
            } catch (e: Exception) { // block id: 2114
                ((UInt32(46) & 127)..(UInt32(93) & 127) : (25 | 1));
                ((var_1660067425812_1708 & 127)..(var_1660067425812_1977 & 127) : ((var_1660067425812_120 | 1)));
                r'u'
            } finally { // block id: 2121
                var_1660067425812_2124 |= UInt16(68)
                var_1660067425812_245
            }
        } else {
            r'f'
        }, if (try { // block id: 2132
            ();
            var_1660067425812_768 <= Int16(-99)
        } finally { // block id: 2137
            var_1660067425812_103;
            var_1660067425812_1424
        }) {
            var_1660067425812_493
        } else {
            (var_1660067425812_2147 ?? var_1660067425812_493)
        }, ((if (false) {
            var_1660067425812_1295
        } else {
            var_1660067425812_1295
        }) as Int64))
}

public func func_1660067425812_901(param_1660067425812_902: Option<Option<Class_1660067425812_28>>): Enum_1660067425812_68 { // block id: 903
    var_1660067425812_520.var_1660067425812_908 &&= Class_1660067425812_28.func_1660067425812_913(
        var_1660067425812_2096,
        namedParam_1660067425812_915: ((Int8(-49) & 127)..=(var_1660067425812_1060 & 127) : ((var_1660067425812_120 | 1))),
        optionalParam_1660067425812_916: UInt8(79))
    try { // block id: 3636
        var_1660067425812_185 &&= false
        Option<Option<Option<Class_1660067425812_28>>>.None;
        try { // block id: 3642
            var_1660067425812_185 ||= true
            var_1660067425812_1406 *= var_1660067425812_120
            var_1660067425812_71
        } finally { // block id: 3650
            ((UInt64(236) & 127)..(UInt64(28) & 127) : (49 | 1));
            Enum_1660067425812_68.defaultValue
        }
    } catch (_) { // block id: 3653
        match (var_1660067425812_3656) {
            case _ =>
                ();
                var_1660067425812_2285;
                Enum_1660067425812_68.defaultValue
        }
    } finally { // block id: 3678
        if (var_1660067425812_1213) {
            Enum_1660067425812_68.defaultValue
        } else {
            Enum_1660067425812_68.enumValue_1660067425812_3683(UInt16(115), Option<Bool>.None, true)
        }
    }
}

public func func_1660067425812_876(param_1660067425812_877: Unit): Bool { // block id: 878
    let var_1660067425812_3882: (Enum_1660067425812_68) -> Option<Class_1660067425812_28> = func_1660067425812_668<Enum_1660067425812_68, UInt16, UInt32>;
    func_1660067425812_880(var_1660067425812_3882,
        namedParam_1660067425812_884: (match (var_1660067425812_379) {
            case _ =>
                Int8(-128);
                (Option<Range<UInt32>>.None, ((UInt64(165) & 127)..(UInt64(19) & 127) : (117 | 1)), var_1660067425812_379,
                    var_1660067425812_2767, Int16(109));
                var var_1660067425812_3904: Option<Option<Option<Option<Class_1660067425812_28>>>> = Option<Option<Option<Option<Class_1660067425812_28>>>>
                    .Some((((Int8(77) & 127)..=(Int8(16) & 127) : ((-101) | 1)) as Option<Option<Class_1660067425812_28>>));
                if (false) {
                    var_1660067425812_3904
                } else {
                    var_1660067425812_3904
                }

            case caseVar_1660067425812_3911: Array<Int8> =>
                if (var_1660067425812_185) {
                    var_1660067425812_3916
                } else {
                    var_1660067425812_3916
                }

            case _: (Array<Range<Int32>>, Range<UInt8>, UInt32, Option<Unit>, Rune) =>
                var_1660067425812_3474;
                ();
                var_1660067425812_3916

            case _ => Option<Option<Option<Option<Class_1660067425812_28>>>>.Some(
                Option<Option<Option<Class_1660067425812_28>>>.None)

            case _ =>
                var_1660067425812_185 ||= true
                ((Int32(-5) & 127)..=(var_1660067425812_772 & 127) : ((51 | 1)));
                Option<Option<Option<Option<Class_1660067425812_28>>>>.Some(var_1660067425812_3941)
        } ?? var_1660067425812_3941),
        optionalParam_1660067425812_885: ((UInt32(168) & 127)..=(UInt32(91) & 127) : (120 | 1)),
        namedParam_1660067425812_891: var_1660067425812_113);
    match (try { // block id: 3953
        var_1660067425812_3562 |= 86
        var_1660067425812_520;
        [Int8(-72), Int8(-12), Int8(106), Int8(58), Int8(-73), Int8(0), Int8(27), Int8(-122), Int8(-54), Int8(81)]
    } finally { // block id: 3959
        var_1660067425812_1216
    }) {
        case _ => false
    }
}

public func func_1660067425812_20(param_1660067425812_21: UInt8, param_1660067425812_22: UInt64,
    optionalParam_1660067425812_23!: Option<Int64> = Option<Int64>.Some((-39))): Unit { // block id: 26
    let var_1660067425812_4412: (UInt32) -> Enum_1660067425812_68 = func_1660067425812_673;
    func func_1660067425812_32(namedParam_1660067425812_33!: Class_1660067425812_28,
        namedParam_1660067425812_34!: UInt16, namedParam_1660067425812_35!: Int8): Class_1660067425812_28 { // block id: 36
        ((UInt32(namedParam_1660067425812_35) |> (var_1660067425812_4412 ~> func_1660067425812_668<Enum_1660067425812_68, UInt16, UInt32>)) ??
            try { // block id: 4417
            Class_1660067425812_28()
        } finally { // block id: 4419
            var_1660067425812_581;
            var_1660067425812_113--;
            Class_1660067425812_28(optionalParam_1660067425812_3289: 52,
                namedParam_1660067425812_3293: [(), (), (), (), (), (), (), (), (), ()])
        })
    };

    func_1660067425812_32(namedParam_1660067425812_33: try { // block id: 4427
        [var_1660067425812_1213, var_1660067425812_1213, false, var_1660067425812_2399, var_1660067425812_3393,
            var_1660067425812_2399, var_1660067425812_3393, var_1660067425812_2399, var_1660067425812_185,
            var_1660067425812_1213];
        var_1660067425812_2767;
        var_1660067425812_48
    } finally { // block id: 4441
        Class_1660067425812_28(r'G', optionalParam_1660067425812_139: UInt16(135),
            namedParam_1660067425812_141: var_1660067425812_768, namedParam_1660067425812_142: 19)
    }, namedParam_1660067425812_34: var_1660067425812_4093, namedParam_1660067425812_35: Int8(114))
        .func_1660067425812_4450(namedParam_1660067425812_4451: Int8(-37),
            optionalParam_1660067425812_4462: if (var_1660067425812_1424) { // block id: 4469
                if (var_1660067425812_373) {
                    var_1660067425812_4025
                } else {
                    var_1660067425812_245
                }
            } else { // block id: 4474
                var_1660067425812_602;
                var_1660067425812_588;
                r'B'
            });
    var_1660067425812_772 = var_1660067425812_1977
}

func func_1660067425812_16(param_1660067425812_17: Rune): Int64 { // block id: 18
    func_1660067425812_20(
        (if (var_1660067425812_373) {
            var_1660067425812_4485
        } else {
            var_1660067425812_4485
        } ?? (Option<UInt8>.Some(UInt8(184)) ?? var_1660067425812_2196)),
        ((Option<Option<UInt64>>.Some(Option<UInt64>.None) ?? var_1660067425812_4507) ?? (Option<UInt64>.Some(
            UInt64(134)) ?? UInt64(94))));
    var var_1660067425812_4530: (Enum_1660067425812_68, Int16, String, Int32, UInt16) = (Enum_1660067425812_68
            .enumValue_1660067425812_3683(UInt16(UInt16(Int16(-98))),
                (Option<Option<Int64>>.Some(Option<Int64>.Some((-74))) as Bool),
                (((-117), Option<Array<Class_1660067425812_28>>.Some(
                        [Class_1660067425812_28(),
                            Class_1660067425812_28(((UInt8(50) & 127)..(UInt8(221) & 127) : ((-25) | 1)), (-52.0),
                            (((-25) & 127)..=((-32) & 127) : ((-3) | 1))),
                            Class_1660067425812_28(r'r', namedParam_1660067425812_141: Int16(-120),
                            namedParam_1660067425812_142: 52),
                            Class_1660067425812_28(((UInt8(123) & 127)..=(UInt8(30) & 127) : (2 | 1)), (-83.0),
                            ((38 & 127)..=(103 & 127) : ((-20) | 1))), Class_1660067425812_28(func_1660067425812_146),
                            Class_1660067425812_28(((UInt8(184) & 127)..=(UInt8(131) & 127) : ((-46) | 1)), 122.0,
                            (((-74) & 127)..((-98) & 127) : ((11 | 1)))),
                            Class_1660067425812_28(optionalParam_1660067425812_3289: (-103),
                            namedParam_1660067425812_3293: [(), (), (), (), (), (), (), (), (), ()]),
                            Class_1660067425812_28(((UInt8(153) & 127)..(UInt8(230) & 127) : ((-63) | 1)), 33.0,
                            ((33 & 127)..(14 & 127) : ((-51) | 1))),
                            Class_1660067425812_28(((UInt8(80) & 127)..=(UInt8(126) & 127) : ((-105) | 1)), 16.0,
                            (((-12) & 127)..=((-111) & 127) : ((98 | 1)))),
                            Class_1660067425812_28(namedParam_1660067425812_3293: [(), (), (), (), (), (), (), (), (),
                            ()])]), 50.0) is UInt8)), Int16(Int8(UInt8(UInt8(5)))), ###"P[MivBS]qW"###, Int32(75),
        UInt16(2));
    match ((Option<Option<Option<Unit>>>.None ?? (((UInt16(146) & 127)..(var_1660067425812_4093 & 127) : ((38 | 1))) as Option<Unit>))) {
        case _ =>
            if (true) {
                var_1660067425812_4530
            } else {
                (Enum_1660067425812_68.defaultValue, var_1660067425812_768, "k|VL}WIXR ", Int32(66), UInt16(249))
            };
            var_1660067425812_1569 | var_1660067425812_3463
    }
}

main(): Int64 {
    try {
        (var_1660067425812_13 ?? (var_1660067425812_245 |> func_1660067425812_16))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1660067425812_120 * var_1660067425812_120), 64)
        crccheck.updateBuffer(UInt64(var_1660067425812_1225 * var_1660067425812_1225), 64)
        crccheck.updateBuffer(UInt64(var_1660067425812_1507 * var_1660067425812_1507), 64)
        crccheck.updateBuffer(UInt64(var_1660067425812_4098 * var_1660067425812_4098), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
