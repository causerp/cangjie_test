/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 *
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 2
// DEPENDENCE:  ../../../lsp_test.py ../../../sourcecode/cangjieTest/cangjiesource ../../../lsp_config.txt
// EXEC: %python lsp_test.py textDocument_completion_007.info

Req#
{"jsonrpc": "2.0", "id": "0", "method": "initialize", "params": {"processId": null, "rootPath": "cangjiesource", "rootUri": "cangjiesource", "capabilities": {"workspace": {"applyEdit": true, "workspaceEdit": {}, "didChangeWatchedFiles": {}, "symbol": {}, "executeCommand": {}, "workspaceFolders": false, "configuration": false}, "textDocument": {"synchronization": {"willSave": true, "willSaveWaitUntil": true, "didSave": true}, "completion": {"completionItem": {"snippetSupport": true}}, "hover": {}, "signatureHelp": {}, "references": {}, "documentHighlight": {"dynamicRegistration": true}, "formatting": {}, "rangeFormatting": {}, "onTypeFormatting": {}, "definition": {}, "codeAction": {}, "documentLink": {}, "rename": {"prepareSupport": true}, "semanticHighlightingCapabilities": {"semanticHighlighting": true}, "callHierarchy": {}, "semanticTokens": {"tokenTypes": ["namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "member", "label"], "tokenModifiers": ["declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary"], "dynamicRegistration": true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc": "2.0", "method": "textDocument/didOpen", "params": {"textDocument": {"uri": "cangjiesource/src/Arrary/array008.cj", "languageId": "Cangjie", "version": 1, "text": "/*\n * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n * This source file is part of the Cangjie project, licensed under Apache-2.0\n * with Runtime Library Exception.\n *\n * See https://cangjie-lang.cn/pages/LICENSE for license information.\n */\n\npackage default.Arrary\n// \u7c7b\u5b9a\u4e49\u5728\u5176\u4ed6\u5305\u4e2d\nimport default.Arrary.pkg.*\n\nfunc test9(){\n    var res1 = arr1\n    var res2 = arr2\n    res1.clone()\n}\n\n"}}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Arrary/array008.cj","version":8},"contentChanges":[{"range":{"start":{"line":15,"character":8},"end":{"line":15,"character":16}},"rangeLength":8,"text":"."}]}}
{"jsonrpc":"2.0","id":135,"method":"textDocument/completion","params":{"textDocument":{"uri":"cangjiesource/src/Arrary/array008.cj"},"position":{"line":15,"character":9},"context":{"triggerKind":2,"triggerCharacter":"."}}}
{"jsonrpc": "2.0", "id": 136, "method": "shutdown", "params": {}}
{"jsonrpc": "2.0", "method": "exit", "params": {}}

Rev#
{"id": 135,"jsonrpc": "2.0","result": [{"deprecated": false,"detail": "","documentation": "","filterText": "clone","insertText": "clone","insertTextFormat": 1,"kind": 2,"label": "clone","sortText": "436000"},{"deprecated": false,"detail": "(function) public func clone(): Array<T>","documentation": "","filterText": "clone","insertText": "clone()","insertTextFormat": 1,"kind": 2,"label": "clone()","sortText": "436000"},{"deprecated": false,"detail": "(function) public func clone(range: Range<Int64>): Array<T>","documentation": "","filterText": "clone","insertText": "clone(${1:range: Range<Int64>})","insertTextFormat": 2,"kind": 2,"label": "clone(range: Range<Int64>)","sortText": "436000"},{"deprecated": false,"detail": "","documentation": "","filterText": "concat","insertText": "concat","insertTextFormat": 1,"kind": 2,"label": "concat","sortText": "440000"},{"deprecated": false,"detail": "(function) public func concat(other: Array<T>): Array<T>","documentation": "","filterText": "concat","insertText": "concat(${1:other: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "concat(other: Array<T>)","sortText": "440000"},{"deprecated": false,"detail": "","documentation": "","filterText": "contains","insertText": "contains","insertTextFormat": 1,"kind": 2,"label": "contains","sortText": "445000"},{"deprecated": false,"detail": "(function) public func contains(element: T): Bool","documentation": "","filterText": "contains","insertText": "contains(${1:element: T})","insertTextFormat": 2,"kind": 2,"label": "contains(element: T)","sortText": "445000"},{"deprecated": false,"detail": "","documentation": "","filterText": "copyTo","insertText": "copyTo","insertTextFormat": 1,"kind": 2,"label": "copyTo","sortText": "440000"},{"deprecated": false,"detail": "(function) public func copyTo(dst: Array<T>): Unit","documentation": "","filterText": "copyTo","insertText": "copyTo(${1:dst: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "copyTo(dst: Array<T>)","sortText": "440000"},{"deprecated": false,"detail": "(function) public func copyTo(dst: Array<T>, srcStart: Int64, dstStart: Int64, copyLen: Int64): Unit","documentation": "","filterText": "copyTo","insertText": "copyTo(${1:dst: Array<T>}, ${2:srcStart: Int64}, ${3:dstStart: Int64}, ${4:copyLen: Int64})","insertTextFormat": 2,"kind": 2,"label": "copyTo(dst: Array<T>, srcStart: Int64, dstStart: Int64, copyLen: Int64)","sortText": "440000"},{"deprecated": false,"detail": "","documentation": "","filterText": "fill","insertText": "fill","insertTextFormat": 1,"kind": 2,"label": "fill","sortText": "430000"},{"deprecated": false,"detail": "(function) public func fill(value: T): Unit","documentation": "","filterText": "fill","insertText": "fill(${1:value: T})","insertTextFormat": 2,"kind": 2,"label": "fill(value: T)","sortText": "430000"},{"deprecated": false,"detail": "(variable) public let first: Option<T>","documentation": "","filterText": "first","insertText": "first","insertTextFormat": 1,"kind": 6,"label": "first","sortText": "436000"},{"deprecated": false,"detail": "","documentation": "","filterText": "get","insertText": "get","insertTextFormat": 1,"kind": 2,"label": "get","sortText": "420000"},{"deprecated": false,"detail": "(function) public func get(index: Int64): Option<T>","documentation": "","filterText": "get","insertText": "get(${1:index: Int64})","insertTextFormat": 2,"kind": 2,"label": "get(index: Int64)","sortText": "420000"},{"deprecated": false,"detail": "","documentation": "","filterText": "indexOf","insertText": "indexOf","insertTextFormat": 1,"kind": 2,"label": "indexOf","sortText": "442857"},{"deprecated": false,"detail": "(function) public func indexOf(element: T): Option<T>","documentation": "","filterText": "indexOf","insertText": "indexOf(${1:element: T})","insertTextFormat": 2,"kind": 2,"label": "indexOf(element: T)","sortText": "442857"},{"deprecated": false,"detail": "(function) public func indexOf(element: T, fromIndex: Int64): Option<T>","documentation": "","filterText": "indexOf","insertText": "indexOf(${1:element: T}, ${2:fromIndex: Int64})","insertTextFormat": 2,"kind": 2,"label": "indexOf(element: T, fromIndex: Int64)","sortText": "442857"},{"deprecated": false,"detail": "(function) public func indexOf(elements: Array<T>): Option<T>","documentation": "","filterText": "indexOf","insertText": "indexOf(${1:elements: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "indexOf(elements: Array<T>)","sortText": "442857"},{"deprecated": false,"detail": "(function) public func indexOf(elements: Array<T>, fromIndex: Int64): Option<T>","documentation": "","filterText": "indexOf","insertText": "indexOf(${1:elements: Array<T>}, ${2:fromIndex: Int64})","insertTextFormat": 2,"kind": 2,"label": "indexOf(elements: Array<T>, fromIndex: Int64)","sortText": "442857"},{"deprecated": false,"detail": "","documentation": "","filterText": "isEmpty","insertText": "isEmpty","insertTextFormat": 1,"kind": 2,"label": "isEmpty","sortText": "442857"},{"deprecated": false,"detail": "(function) public func isEmpty(): Bool","documentation": "","filterText": "isEmpty","insertText": "isEmpty()","insertTextFormat": 1,"kind": 2,"label": "isEmpty()","sortText": "442857"},{"deprecated": false,"detail": "","documentation": "","filterText": "iterator","insertText": "iterator","insertTextFormat": 1,"kind": 2,"label": "iterator","sortText": "445000"},{"deprecated": false,"detail": "(function) public func iterator(): Iterator<T>","documentation": "","filterText": "iterator","insertText": "iterator()","insertTextFormat": 1,"kind": 2,"label": "iterator()","sortText": "445000"},{"deprecated": false,"detail": "(variable) public let last: Option<T>","documentation": "","filterText": "last","insertText": "last","insertTextFormat": 1,"kind": 6,"label": "last","sortText": "430000"},{"deprecated": false,"detail": "","documentation": "","filterText": "lastIndexOf","insertText": "lastIndexOf","insertTextFormat": 1,"kind": 2,"label": "lastIndexOf","sortText": "449091"},{"deprecated": false,"detail": "(function) public func lastIndexOf(element: T): Option<T>","documentation": "","filterText": "lastIndexOf","insertText": "lastIndexOf(${1:element: T})","insertTextFormat": 2,"kind": 2,"label": "lastIndexOf(element: T)","sortText": "449091"},{"deprecated": false,"detail": "(function) public func lastIndexOf(element: T, fromIndex: Int64): Option<T>","documentation": "","filterText": "lastIndexOf","insertText": "lastIndexOf(${1:element: T}, ${2:fromIndex: Int64})","insertTextFormat": 2,"kind": 2,"label": "lastIndexOf(element: T, fromIndex: Int64)","sortText": "449091"},{"deprecated": false,"detail": "(function) public func lastIndexOf(elements: Array<T>): Option<T>","documentation": "","filterText": "lastIndexOf","insertText": "lastIndexOf(${1:elements: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "lastIndexOf(elements: Array<T>)","sortText": "449091"},{"deprecated": false,"detail": "(function) public func lastIndexOf(elements: Array<T>, fromIndex: Int64): Option<T>","documentation": "","filterText": "lastIndexOf","insertText": "lastIndexOf(${1:elements: Array<T>}, ${2:fromIndex: Int64})","insertTextFormat": 2,"kind": 2,"label": "lastIndexOf(elements: Array<T>, fromIndex: Int64)","sortText": "449091"},{"deprecated": false,"detail": "","documentation": "","filterText": "map","insertText": "map","insertTextFormat": 1,"kind": 2,"label": "map","sortText": "420000"},{"deprecated": false,"detail": "(function) public func map<R>(transform: (Generics-T) -> Generics-R): Array<R>","documentation": "","filterText": "map","insertText": "map<${1:R}>(${3:transform: (Generics-T) -> Generics-R})","insertTextFormat": 2,"kind": 2,"label": "map<R>(transform: (Generics-T) -> Generics-R)","sortText": "420000"},{"deprecated": false,"detail": "","documentation": "","filterText": "removePrefix","insertText": "removePrefix","insertTextFormat": 1,"kind": 2,"label": "removePrefix","sortText": "450000"},{"deprecated": false,"detail": "(function) public func removePrefix(prefix: Array<T>): Array<T>","documentation": "","filterText": "removePrefix","insertText": "removePrefix(${1:prefix: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "removePrefix(prefix: Array<T>)","sortText": "450000"},{"deprecated": false,"detail": "","documentation": "","filterText": "removeSuffix","insertText": "removeSuffix","insertTextFormat": 1,"kind": 2,"label": "removeSuffix","sortText": "450000"},{"deprecated": false,"detail": "(function) public func removeSuffix(suffix: Array<T>): Array<T>","documentation": "","filterText": "removeSuffix","insertText": "removeSuffix(${1:suffix: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "removeSuffix(suffix: Array<T>)","sortText": "450000"},{"deprecated": false,"detail": "","documentation": "","filterText": "repeat","insertText": "repeat","insertTextFormat": 1,"kind": 2,"label": "repeat","sortText": "440000"},{"deprecated": false,"detail": "(function) public func repeat(n: Int64): Array<T>","documentation": "","filterText": "repeat","insertText": "repeat(${1:n: Int64})","insertTextFormat": 2,"kind": 2,"label": "repeat(n: Int64)","sortText": "440000"},{"deprecated": false,"detail": "","documentation": "","filterText": "reverse","insertText": "reverse","insertTextFormat": 1,"kind": 2,"label": "reverse","sortText": "442857"},{"deprecated": false,"detail": "(function) public func reverse(): Unit","documentation": "","filterText": "reverse","insertText": "reverse()","insertTextFormat": 1,"kind": 2,"label": "reverse()","sortText": "442857"},{"deprecated": false,"detail": "(variable) public let size: Int64","documentation": "","filterText": "size","insertText": "size","insertTextFormat": 1,"kind": 6,"label": "size","sortText": "430000"},{"deprecated": false,"detail": "","documentation": "","filterText": "slice","insertText": "slice","insertTextFormat": 1,"kind": 2,"label": "slice","sortText": "436000"},{"deprecated": false,"detail": "(function) public func slice(start: Int64, len: Int64): Array<T>","documentation": "","filterText": "slice","insertText": "slice(${1:start: Int64}, ${2:len: Int64})","insertTextFormat": 2,"kind": 2,"label": "slice(start: Int64, len: Int64)","sortText": "436000"},{"deprecated": false,"detail": "","documentation": "","filterText": "splitAt","insertText": "splitAt","insertTextFormat": 1,"kind": 2,"label": "splitAt","sortText": "442857"},{"deprecated": false,"detail": "(function) public func splitAt(mid: Int64): Tuple<Struct-Array<Generics-T>, Struct-Array<Generics-T>>","documentation": "","filterText": "splitAt","insertText": "splitAt(${1:mid: Int64})","insertTextFormat": 2,"kind": 2,"label": "splitAt(mid: Int64)","sortText": "442857"},{"deprecated": false,"detail": "","documentation": "","filterText": "swap","insertText": "swap","insertTextFormat": 1,"kind": 2,"label": "swap","sortText": "430000"},{"deprecated": false,"detail": "(function) public func swap(index1: Int64, index2: Int64): Unit","documentation": "","filterText": "swap","insertText": "swap(${1:index1: Int64}, ${2:index2: Int64})","insertTextFormat": 2,"kind": 2,"label": "swap(index1: Int64, index2: Int64)","sortText": "430000"},{"deprecated": false,"detail": "","documentation": "","filterText": "toArray","insertText": "toArray","insertTextFormat": 1,"kind": 2,"label": "toArray","sortText": "442857"},{"deprecated": false,"detail": "(function) public func toArray(): Array<T>","documentation": "","filterText": "toArray","insertText": "toArray()","insertTextFormat": 1,"kind": 2,"label": "toArray()","sortText": "442857"},{"deprecated": false,"detail": "","documentation": "","filterText": "toString","insertText": "toString","insertTextFormat": 1,"kind": 2,"label": "toString","sortText": "445000"},{"deprecated": false,"detail": "(function) public func toString(): String","documentation": "","filterText": "toString","insertText": "toString()","insertTextFormat": 1,"kind": 2,"label": "toString()","sortText": "445000"},{"deprecated": false,"detail": "","documentation": "","filterText": "trimEnd","insertText": "trimEnd","insertTextFormat": 1,"kind": 2,"label": "trimEnd","sortText": "442857"},{"deprecated": false,"detail": "(function) public func trimEnd(predicate: (Generics-T) -> Bool): Array<T>","documentation": "","filterText": "trimEnd","insertText": "trimEnd(${1:predicate: (Generics-T) -> Bool})","insertTextFormat": 2,"kind": 2,"label": "trimEnd(predicate: (Generics-T) -> Bool)","sortText": "442857"},{"deprecated": false,"detail": "(function) public func trimEnd(set: Array<T>): Array<T>","documentation": "","filterText": "trimEnd","insertText": "trimEnd(${1:set: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "trimEnd(set: Array<T>)","sortText": "442857"},{"deprecated": false,"detail": "","documentation": "","filterText": "trimStart","insertText": "trimStart","insertTextFormat": 1,"kind": 2,"label": "trimStart","sortText": "446667"},{"deprecated": false,"detail": "(function) public func trimStart(predicate: (Generics-T) -> Bool): Array<T>","documentation": "","filterText": "trimStart","insertText": "trimStart(${1:predicate: (Generics-T) -> Bool})","insertTextFormat": 2,"kind": 2,"label": "trimStart(predicate: (Generics-T) -> Bool)","sortText": "446667"},{"deprecated": false,"detail": "(function) public func trimStart(set: Array<T>): Array<T>","documentation": "","filterText": "trimStart","insertText": "trimStart(${1:set: Array<T>})","insertTextFormat": 2,"kind": 2,"label": "trimStart(set: Array<T>)","sortText": "446667"}]}
