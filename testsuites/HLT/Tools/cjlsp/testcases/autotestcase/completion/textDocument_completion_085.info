/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 1
// DEPENDENCE:  ../../../lsp_test.py ../../../sourcecode/cangjieTest/cangjiesource ../../../lsp_config.txt
// EXEC: %python lsp_test.py textDocument_completion_085.info

Req#
{"jsonrpc": "2.0", "id": "0", "method": "initialize", "params": {"processId": null, "rootPath": "cangjiesource", "rootUri": "cangjiesource", "capabilities": {"workspace": {"applyEdit": true, "workspaceEdit": {}, "didChangeWatchedFiles": {}, "symbol": {}, "executeCommand": {}, "workspaceFolders": false, "configuration": false}, "textDocument": {"synchronization": {"willSave": true, "willSaveWaitUntil": true, "didSave": true}, "completion": {"completionItem": {"snippetSupport": true}}, "hover": {}, "signatureHelp": {}, "references": {}, "documentHighlight": {"dynamicRegistration": true}, "formatting": {}, "rangeFormatting": {}, "onTypeFormatting": {}, "definition": {}, "codeAction": {}, "documentLink": {}, "rename": {"prepareSupport": true}, "semanticHighlightingCapabilities": {"semanticHighlighting": true}, "callHierarchy": {}, "semanticTokens": {"tokenTypes": ["namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "member", "label"], "tokenModifiers": ["declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary"], "dynamicRegistration": true}}}}}
{"jsonrpc":"2.0","method":"initialized","params":{}}
{"jsonrpc": "2.0", "method": "textDocument/didOpen", "params": {"textDocument": {"uri": "cangjiesource/src/Expressions/expression003.cj", "languageId": "Cangjie", "version": 1, "text": "/*\n * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.\n * This source file is part of the Cangjie project, licensed under Apache-2.0\n * with Runtime Library Exception.\n *\n * See https://cangjie-lang.cn/pages/LICENSE for license information.\n */\n\npackage default.Expressions\n\nfunc foo003() {\n    var a: Int32 = 4\n    var b: Int64 = Int64(a)\n    return b\n}\n"}}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Expressions/expression003.cj","version":2},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":12}},"rangeLength":8,"text":"r"}]}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Expressions/expression003.cj","version":3},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":5}},"rangeLength":1,"text":"re"}]}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Expressions/expression003.cj","version":4},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":6}},"rangeLength":2,"text":"ret"}]}}
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"cangjiesource/src/Expressions/expression003.cj","version":5},"contentChanges":[{"range":{"start":{"line":13,"character":4},"end":{"line":13,"character":7}},"rangeLength":3,"text":"retu"}]}}
{"jsonrpc":"2.0","id":1395,"method":"textDocument/completion","params":{"textDocument":{"uri":"cangjiesource/src/Expressions/expression003.cj"},"position":{"line":13,"character":8},"context":{"triggerKind":1}}}
{"jsonrpc": "2.0", "id": 1396, "method": "shutdown", "params": {}}
{"jsonrpc": "2.0", "method": "exit", "params": {}}

Rev#
{"id":1395,"jsonrpc":"2.0","result":[{"deprecated":false,"detail":"","documentation":"","filterText":"return","insertText":"return","insertTextFormat":1,"kind":14,"label":"return","sortText":""},{"deprecated":false,"detail":"(interface) public interface GreaterOrEqual<T>","documentation":"","filterText":"GreaterOrEqual","insertText":"GreaterOrEqual<${1:T}>","insertTextFormat":2,"kind":8,"label":"GreaterOrEqual<T>","sortText":""}]}
