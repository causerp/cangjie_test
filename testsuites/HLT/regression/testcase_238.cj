/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

// All global variable need to be defined before use!
public var var_1673051930947_23 : Unit = ()
let var_1673051930947_82 : Int64 = Int64(UInt64(128))
var var_1673051930947_140 : Int64 = Int64(Int16(UInt16(Int16(UInt16(119)))))
public var var_1673051930947_149 : UInt32 = UInt32(164)
var var_1673051930947_155 : ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit) = (((r'N' is Int8), UInt8(UInt8(185)), Float32(-12.0), Int32(41), (), Int32(UInt16(15)), UInt32(156), UInt16(234), (-77)), true, Int16(Int8(5)), (UInt64(40) is UInt64), UInt16(159), ((UInt8(238)&127)..=(UInt8(174)&127):(73|1)), UInt32(UInt8(UInt8(200))), ())
let var_1673051930947_201 : Int16 = Int16(UInt16(94))
public var var_1673051930947_206 : UInt16 = UInt16(144)
public let var_1673051930947_301 : Enum_1673051930947_298 = Enum_1673051930947_298.defaultValue
public var var_1673051930947_315 : Interface_1673051930947_246 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()
let var_1673051930947_414 : Bool = (UInt64(Int16(UInt8(158))) is (UInt16, Float32) -> Bool)
let var_1673051930947_475 : Interface_1673051930947_243 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()
let var_1673051930947_500 : Unit = ()
var var_1673051930947_504 : UInt32 = UInt32(46)
let var_1673051930947_538 : Array<Bool> = [(Option<Float32>.None is Interface_1673051930947_244), (Int32(-99) is Range<UInt32>), (Float32(108.0) is (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)), (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>() is Range<Int8>), false, (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>() is ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)), false, (Enum_1673051930947_298.defaultValue is Enum_1673051930947_392), false, false]
public let var_1673051930947_600 : Struct_1673051930947_596 = Struct_1673051930947_596()
public var var_1673051930947_641 : Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)> = (Int64(UInt8(Int8(UInt8(138)))) as ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit))
let var_1673051930947_737 : UInt64 = UInt64(121)
let var_1673051930947_747 : Array<UInt64> = [UInt64(Int32(UInt32(Int16(67)))), UInt64(UInt32(Int16(Int16(114)))), UInt64(110), UInt64(4), UInt64(198), UInt64(UInt8(54)), UInt64(UInt64(86)), UInt64(Int8(79)), UInt64(UInt16(248)), UInt64(128)]
public let var_1673051930947_941 : (UInt16, Float32, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), UInt32) = (UInt16(129), Float32(-24.0), ((((((UInt8(126)&127)..(UInt8(46)&127):(((-86)|1))), UInt32(53), Int16(71), Int16(14), Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None, Int16(-80)) is (UInt16, Float32) -> Bool), UInt8(92), Float32(Float32(124.0)), Int32(Int16(-70)), (), Int32(28), UInt32(179), UInt16(110), Int64(Int16(-117))), true, Int16(Int8(UInt8(111))), true, UInt16(Int16(Int8(-39))), ((UInt8(1)&127)..=(UInt8(235)&127):(121|1)), UInt32(150), ()), UInt32(Int16(Int8(-101))))
public let var_1673051930947_1085 : Enum_1673051930947_516 = Enum_1673051930947_516.defaultValue
public var var_1673051930947_1093 : Bool = true
public var var_1673051930947_1183 : Array<String> = ["""
syX0B
zf&Q&
""", "Tl#(lUHnV9", "@o5uD3!}Vh", "B^@acY5$Z+", """
4#zPU
jM~q<
""", """
vW}'6
<(Yw<
""", """
?88m%
-T40$
""", ###"\"s`!_w:.a{@"###, """
pF;'^
l>QH&
""", ###"|yGa{9*!&i,"###]
var var_1673051930947_1279 : Unit = ()
let var_1673051930947_1338 : ?Range<UInt32> = Option<Range<UInt32>>.None
var var_1673051930947_1346 : Float32 = Float32(24.0)
public var var_1673051930947_1359 : Range<Int32> = ((Int32(-46)&127)..(Int32(118)&127):((-125)|1))
var var_1673051930947_1433 : Interface_1673051930947_241 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()
var var_1673051930947_1535 : (UInt16, UInt16, Range<UInt64>, Array<Rune>, UInt8, Range<UInt8>, Array<Rune>, Int32) = (UInt16(UInt8(Int8(124))), UInt16(Int8(Int8(72))), ((UInt64(Int32(Int8(-101)))&127)..=(UInt64(UInt16(Int16(5)))&127):((Int64(Int64(UInt64(76)))|1))), [r'n', r'K', r'e', r'O', r'L', r'2', r'h', r'r', r'x', r'a'], UInt8(Int8(-49)), ((UInt8(89)&127)..=(UInt8(186)&127):((-98)|1)), [r'P', r'W', r'c', r'K', r'E', r'l', r'K', r'6', r'm', r'N'], Int32(-38))
public var var_1673051930947_1600 : Option<Float32> = (UInt64(239) as Float32)
public let var_1673051930947_1629 : UInt16 = UInt16(56)
public var var_1673051930947_1685 : Int16 = Int16(UInt8(UInt8(Int8(0))))
public var var_1673051930947_1859 : Bool = (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>() is Interface_1673051930947_242<Int8, Array<Rune>>)
public var var_1673051930947_1989 : Int32 = Int32(77)
public var var_1673051930947_2054 : Unit = ()
var var_1673051930947_2097 : Array<Option<Bool>> = [Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, ([UInt64(UInt64(218)), UInt64(UInt64(54)), UInt64(UInt16(87)), UInt64(218), UInt64(121), UInt64(Int32(84)), UInt64(UInt64(167)), UInt64(153), UInt64(125), UInt64(Int32(47))] as Bool), (Int8(UInt8(57)) as Bool), Option<Bool>.None, (Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None as Bool), Option<Bool>.None, Option<Bool>.None, Option<Bool>.None]
public var var_1673051930947_2218 : Int8 = Int8(-94)
public let var_1673051930947_2365 : ((Unit, Bool, Unit, UInt32, Bool), String) = (((), ((UInt16(234), Float32(58.0), ((true, UInt8(229), Float32(-114.0), Int32(-118), (), Int32(-42), UInt32(245), UInt16(134), (-8)), false, Int16(-97), false, UInt16(194), ((UInt8(131)&127)..(UInt8(189)&127):(76|1)), UInt32(119), ()), UInt32(67)) is ((Range<Int32>, (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Unit, ((Unit, Bool, Unit, UInt32, Bool), String), Array<Bool>, (UInt16, Float32, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), UInt32)), Array<Bool>, Int64, UInt8, ((Unit, Bool, Unit, UInt32, Bool), String), Unit, Array<Unit>)), (), UInt32(UInt16(UInt16(36))), (((UInt32(108)&127)..(UInt32(193)&127):(((-84)|1))) is (Range<UInt64>, Range<UInt32>, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), Range<UInt16>))), "(S&]jSdbJ#")
var var_1673051930947_2411 : Bool = false
var var_1673051930947_2429 : String = """
@IzHd
Cb^n|
"""
let var_1673051930947_2433 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public interface Interface_1673051930947_245<T0, T1> {

}

public interface Interface_1673051930947_246 <: Interface_1673051930947_245<Option<Bool>, Array<Unit>> {

}

public interface Interface_1673051930947_244 <: Interface_1673051930947_245<Option<Bool>, Array<Unit>> & Interface_1673051930947_246 {

}

public interface Interface_1673051930947_243 <: Interface_1673051930947_244 & Interface_1673051930947_245<Option<Bool>, Array<Unit>> {

}

public interface Interface_1673051930947_242<T0, T1> <: Interface_1673051930947_243 & Interface_1673051930947_244 {

}

public interface Interface_1673051930947_241 <: Interface_1673051930947_242<Int8, Array<Rune>> & Interface_1673051930947_243 {

}

public open class Class_1673051930947_238<T0, T1> <: Interface_1673051930947_241 & Resource {
    public init() { // block id: 240

    }
;
    static var var_1673051930947_249 : Bool = false;
    public init(namedParam_1673051930947_457 ! : String, namedParam_1673051930947_458 ! : Option<Range<UInt32>>, namedParam_1673051930947_459 ! : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)) { // block id: 460
        let var_1673051930947_1267 : Array<Rune> = [r'd', r'l', r'B', r'm', r'u', r'x', r'5', r'f', r'I', r'X'];
        let var_1673051930947_1275 : ?Unit = (() as Unit);
        func func_1673051930947_462(optionalParam_1673051930947_463 ! : Interface_1673051930947_242<Int8, Array<Rune>> = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()) : Rune { // block id: 465
            try (resource = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()) { // block id: 467
                var var_1673051930947_480 : Int8 = Int8(-115);
                match (Option<Range<UInt32>>.None) {
                    case caseVar_1673051930947_472 : Float64 => 
                        var_1673051930947_475;
                        Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
                        var_1673051930947_480 <<= ((Int8(-90)) & 7)
                    
                    case _ => 
                        var_1673051930947_23;
                        var_1673051930947_23
                    
                };
                let var_1673051930947_493 : Int32 = Int32(UInt16(Int16(Int8(Int8(-43)))));
                (var_1673051930947_414, UInt8(81), Float32(24.0), var_1673051930947_493, var_1673051930947_500, Int32(125), var_1673051930947_504, UInt16(253), var_1673051930947_140)[4]
            } finally { // block id: 509
                Enum_1673051930947_392.defaultValue;
                [UInt64(158), UInt64(228), UInt64(143), UInt64(11), UInt64(144), UInt64(110), UInt64(3), UInt64(239), UInt64(222), UInt64(137)]|>func_1673051930947_512;
                var loopTimeVar_1673051930947_1214 : Range<UInt64> = ((UInt64(147)&127)..=(UInt64(49)&127):((45|1)));
                for (i in loopTimeVar_1673051930947_1214 where var_1673051930947_414) {

                }
            };
            var var_1673051930947_1222 : Array<Enum_1673051930947_392> = [Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.enumValue_1673051930947_1231(Option<Range<Int8>>.Some(((Int8(23)&127)..(Int8(26)&127):((83|1)))), Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()), Enum_1673051930947_392.enumValue_1673051930947_1231(Option<Range<Int8>>.Some(((Int8(-26)&127)..(Int8(27)&127):((-10)|1))), Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()), Enum_1673051930947_392.defaultValue, Enum_1673051930947_392.enumValue_1673051930947_1231(((((UInt16(203)&127)..(UInt16(67)&127):(23|1)) as Range<UInt32>) as Range<Int8>), Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>())];
            var_1673051930947_1222[2];
            var var_1673051930947_1257 : ?Rune = (Option<Float32>.Some(Float32(28.0)) as Rune);
            let var_1673051930947_1283 : Rune = r'h';
            (var_1673051930947_1257 ?? try { // block id: 1264
                ();
                var_1673051930947_1267
            } finally { // block id: 1269
                if (true) { Option<Unit>.Some(var_1673051930947_23) } else { var_1673051930947_1275 } ;
                var_1673051930947_1279;
                var var_1673051930947_1287 : Rune = r'O';
                [var_1673051930947_1283, var_1673051930947_1283, var_1673051930947_1287, var_1673051930947_1283, r'd', var_1673051930947_1283, var_1673051930947_1283, var_1673051930947_1287, var_1673051930947_1287, r'Q']
            }[5])
        }
;
        func_1673051930947_462()
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public func func_1673051930947_39(param_1673051930947_40 : Unit) : Bool { // block id: 41
    ();
    let var_1673051930947_56 : Array<Bool> = [true, false, true, (Float32(Float32(-116.0)) is Float32), true, false, true, ((((-25)&127)..((-97)&127):((-50)|1)) is Float32), (Float64(Float32(21.0)) is (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)), ((-97) is Unit)];
    var var_1673051930947_78 : Int32 = Int32(-78);
    let var_1673051930947_183 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = (true, UInt8(190), Float32(70.0), Int32(UInt32(252)), (), Int32(Int8(-60)), UInt32(UInt16(121)), UInt16(UInt16(Int8(-1))), (-54));
    let var_1673051930947_216 : Bool = (((UInt8(50)&127)..=(UInt8(24)&127):((-17)|1)) is Unit);
    var var_1673051930947_222 : Bool = true;
    if (var_1673051930947_56[4]) { // block id: 75
        ((var_1673051930947_78&127)..(var_1673051930947_78&127):((var_1673051930947_82|1)));
        var_1673051930947_56[8]
    } else if (try { // block id: 91
        ();
        Int32(-118);
        let var_1673051930947_95 : ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit) = (((() is String), UInt8(231), Float32(Float32(Float32(57.0))), Int32(UInt32(UInt32(94))), (), Int32(Int32(Int8(-106))), UInt32(UInt32(Int32(-4))), UInt16(224), 8), ("""
#*DP[
1a{TFf
""" is UInt64), Int16(UInt16(UInt8(Int8(-105)))), (((92&127)..=((-55)&127):((Int64(UInt8(36))|1))) is Array<UInt64>), UInt16(84), ((UInt8(186)&127)..=(UInt8(73)&127):((Int64(Int32(Int32(-29)))|1))), UInt32(30), ());
        var_1673051930947_95
    } finally { // block id: 137
        var_1673051930947_140 <<= ((var_1673051930947_82) & 7);
        var_1673051930947_149 %= ((UInt32(96)) | 1);
        if (true) { var_1673051930947_155 } else { (var_1673051930947_183, true, var_1673051930947_201, false, var_1673051930947_206, ((UInt8(111)&127)..=(UInt8(144)&127):((-39)|1)), UInt32(189), ()) } 
    }[3]) { // block id: 212
        var_1673051930947_23;
        if (var_1673051930947_216) { // block id: 219
            var_1673051930947_222 &&= var_1673051930947_222;
            var var_1673051930947_226 : Range<Int16> = ((Int16(-101)&127)..(Int16(-25)&127):((Int64(UInt32(159))|1)));
            var_1673051930947_226;
            ()
        };
        [false, false, true, true, false, true, false, true, false, false][5]
    } else { // block id: 236
        Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>.var_1673051930947_249
    }
}

func func_1673051930947_31(optionalParam_1673051930947_32 ! : UInt16 = UInt16(Int16(UInt8(178))), namedParam_1673051930947_36 ! : Float32) : Bool { // block id: 37
    let var_1673051930947_257 : (Unit) -> Bool = func_1673051930947_39;
    func func_1673051930947_260(param_1673051930947_261 : Int32) : Unit { // block id: 262

    }
;
    let var_1673051930947_275 : UInt64 = UInt64(91);
    let var_1673051930947_290 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    var_1673051930947_290[2]|>{ lambdaParameter_1673051930947_253 : Unit => let var_1673051930947_268 : UInt64 = UInt64(UInt64(42)); func_1673051930947_260(try { // block id: 264
        var_1673051930947_23;
        [var_1673051930947_268, UInt64(212), UInt64(13), var_1673051930947_268, var_1673051930947_275, UInt64(245), UInt64(35), var_1673051930947_275, var_1673051930947_268, var_1673051930947_275];
        Int32(-30)
    } finally { // block id: 283
        Int32(-41) / ((Int32(55)) | 1)
    })|>var_1673051930947_257 }
}

public enum Enum_1673051930947_298 {
    defaultValue
}


public enum Enum_1673051930947_392 {
    defaultValue |
    enumValue_1673051930947_1231(Option<Range<Int8>>, Interface_1673051930947_242<Int8, Array<Rune>>)
}

public enum Enum_1673051930947_516 {
    defaultValue
}
public struct Struct_1673051930947_596 {
    public init() { // block id: 598

    }
;
    public mut prop var_1673051930947_791 : Option<Bool> { // block id: 792
        get() { // block id: 794
            Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
            (Option<Bool>.None as Bool);
            var_1673051930947_2448
        }

        set(Value) { // block id: 800
            (((Int32(-39)&127)..=(Int32(Int16(58))&127):((104|1))) as Range<UInt32>);
            Enum_1673051930947_298.defaultValue;
            ();
            var_1673051930947_2448 = Value
        }

    };
    private let var_1673051930947_825 : (Unit, Bool, Unit, UInt32, Bool) = ((), false, (), UInt32(14), false);
    public func func_1673051930947_603(optionalParam_1673051930947_604 ! : Range<Int64> = (((-100)&127)..=((-83)&127):(55|1)), namedParam_1673051930947_606 ! : (UInt16, Float32) -> Bool, optionalParam_1673051930947_610 ! : Float64 = (-18.0)) : Bool { // block id: 612
        let var_1673051930947_772 : ((Unit) -> Bool) -> ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit) = func_1673051930947_614;
        func_1673051930947_774|>var_1673051930947_772;
        if (([Option<Bool>.None, Option<Bool>.None, Option<Bool>.Some(false), var_1673051930947_791, Option<Bool>.Some(true), Option<Bool>.None, var_1673051930947_791, Option<Bool>.Some(var_1673051930947_414), Option<Bool>.None, Option<Bool>.None][3] ?? var_1673051930947_538[4])) { // block id: 821
            var_1673051930947_747;
            var_1673051930947_825[4]
        } else { // block id: 833
            UInt64(UInt8(235));
            if (false) { Enum_1673051930947_516.defaultValue } else { Enum_1673051930947_516.defaultValue } ;
            let var_1673051930947_842 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = (false, UInt8(159), Float32(Float32(Float32(Float32(44.0)))), Int32(Int16(UInt8(251))), (), Int32(Int32(98)), UInt32(81), UInt16(171), Int64(Int16(UInt8(UInt8(84)))));
            var_1673051930947_842[0]
        }
    }
;
    mut prop var_1673051930947_2448 : Option<Bool> { // block id: 2449
        get() { // block id: 2451
            (((), (((UInt8(213)&127)..=(UInt8(116)&127):(126|1)) is Interface_1673051930947_241), (), UInt32(Int16(85)), true) as Bool)
        }

        set(Value) { // block id: 2463
            ();
            ((21&127)..=(78&127):(20|1));
            ()
        }

    }
}


func func_1673051930947_614(param_1673051930947_615 : (Unit) -> Bool) : ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit) { // block id: 618
    let var_1673051930947_633 : UInt8 = UInt8(227);
    let var_1673051930947_663 : (UInt16, Float32, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), UInt32) = (UInt16(39), Float32(4.0), ((false, UInt8(26), Float32(-62.0), Int32(-126), (), Int32(59), UInt32(Int8(-20)), UInt16(247), 4), (UInt8(82) is Int32), Int16(-121), (UInt8(Int8(79)) is Array<Bool>), UInt16(UInt16(UInt16(16))), ((UInt8(UInt8(223))&127)..(UInt8(UInt8(133))&127):((23|1))), UInt32(154), ()), UInt32(96));
    var var_1673051930947_702 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = ((((UInt32(214)&127)..=(UInt32(150)&127):((-50)|1)) is Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>), UInt8(200), Float32(-88.0), Int32(60), (), Int32(-108), UInt32(Int32(-96)), UInt16(246), 11);
    (if ((Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>.var_1673051930947_249)) { (((var_1673051930947_633&127)..=(var_1673051930947_633&127):(((-2)|1))), var_1673051930947_149, Int16(-55), Int16(88), var_1673051930947_641, Int16(-27))[4] } else { Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None }  ?? if (var_1673051930947_414) { // block id: 654
        ((UInt16(16)&127)..=(UInt16(56)&127):(74|1));
        if (false) { var_1673051930947_475 } else { Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>() } ;
        let var_1673051930947_720 : Range<UInt8> = ((UInt8(131)&127)..=(UInt8(40)&127):((Int64(UInt32(UInt32(245)))|1)));
        if (false) { var_1673051930947_663 } else { (var_1673051930947_206, Float32(-113.0), (var_1673051930947_702, var_1673051930947_414, Int16(84), var_1673051930947_414, UInt16(30), var_1673051930947_720, var_1673051930947_504, ()), UInt32(58)) } 
    } else { // block id: 730
        if (var_1673051930947_414) { [UInt64(224), UInt64(210), var_1673051930947_737, var_1673051930947_737, UInt64(143), var_1673051930947_737, UInt64(13), var_1673051930947_737, UInt64(240), var_1673051930947_737] } else { var_1673051930947_747 } ;
        var_1673051930947_663
    }[2])
}

public func func_1673051930947_774(param_1673051930947_40 : Unit) : Bool { // block id: 41
    ();
    let var_1673051930947_56 : Array<Bool> = [true, false, true, (Float32(Float32(-116.0)) is Float32), true, false, true, ((((-25)&127)..((-97)&127):((-50)|1)) is Float32), (Float64(Float32(21.0)) is (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)), ((-97) is Unit)];
    var var_1673051930947_78 : Int32 = Int32(-78);
    let var_1673051930947_183 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = (true, UInt8(190), Float32(70.0), Int32(UInt32(252)), (), Int32(Int8(-60)), UInt32(UInt16(121)), UInt16(UInt16(Int8(-1))), (-54));
    let var_1673051930947_216 : Bool = (((UInt8(50)&127)..=(UInt8(24)&127):((-17)|1)) is Unit);
    var var_1673051930947_222 : Bool = true;
    if (var_1673051930947_56[4]) { // block id: 75
        ((var_1673051930947_78&127)..(var_1673051930947_78&127):((var_1673051930947_82|1)));
        var_1673051930947_56[8]
    } else if (try { // block id: 91
        ();
        Int32(-118);
        let var_1673051930947_95 : ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit) = (((() is String), UInt8(231), Float32(Float32(Float32(57.0))), Int32(UInt32(UInt32(94))), (), Int32(Int32(Int8(-106))), UInt32(UInt32(Int32(-4))), UInt16(224), 8), ("""
#*DP[
1a{TFf
""" is UInt64), Int16(UInt16(UInt8(Int8(-105)))), (((92&127)..=((-55)&127):((Int64(UInt8(36))|1))) is Array<UInt64>), UInt16(84), ((UInt8(186)&127)..=(UInt8(73)&127):((Int64(Int32(Int32(-29)))|1))), UInt32(30), ());
        var_1673051930947_95
    } finally { // block id: 137
        var_1673051930947_140 <<= ((var_1673051930947_82) & 7);
        var_1673051930947_149 %= ((UInt32(96)) | 1);
        if (true) { var_1673051930947_155 } else { (var_1673051930947_183, true, var_1673051930947_201, false, var_1673051930947_206, ((UInt8(111)&127)..=(UInt8(144)&127):((-39)|1)), UInt32(189), ()) } 
    }[3]) { // block id: 212
        var_1673051930947_23;
        if (var_1673051930947_216) { // block id: 219
            var_1673051930947_222 &&= var_1673051930947_222;
            var var_1673051930947_226 : Range<Int16> = ((Int16(-101)&127)..(Int16(-25)&127):((Int64(UInt32(159))|1)));
            var_1673051930947_226;
            ()
        };
        [false, false, true, true, false, true, false, true, false, false][5]
    } else { // block id: 236
        Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>.var_1673051930947_249
    }
}


public func func_1673051930947_523<T0>(param_1673051930947_524 : Interface_1673051930947_244, param_1673051930947_525 : Enum_1673051930947_298, param_1673051930947_526 : String, optionalParam_1673051930947_527 ! : Range<UInt64> = ((UInt64(193)&127)..=(UInt64(Int64(Int8(-39)))&127):(((-78)|1)))) : String { // block id: 534
    let var_1673051930947_560 : (Unit, Bool, Unit, UInt32, Bool) = ((), true, (), UInt32(Int32(Int32(Int16(27)))), (((Int32(83)&127)..(Int32(Int32(94))&127):((Int64(UInt32(205))|1))) is Enum_1673051930947_516));
    let var_1673051930947_872 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    var var_1673051930947_876 : String = "sCWKhw^}6N";
    if (var_1673051930947_538[9]) { // block id: 557
        var_1673051930947_560[2];
        var var_1673051930947_580 : ((Unit, Bool, Unit, UInt32, Bool), String) = (((), (((UInt64(166)&127)..=(UInt64(206)&127):((117|1))) is (UInt16, Float32) -> Bool), (), UInt32(198), ((-84) is Array<Bool>)), """
9^gN2
X0F~E
""");
        var_1673051930947_580[1]
    } else if (var_1673051930947_600.func_1673051930947_603(namedParam_1673051930947_606 : func_1673051930947_31)) { // block id: 864
        ###"WcWSe8FSs@"###
    } else { // block id: 866
        Option<Range<Int8>>.Some(((Int8(97)&127)..=(Int8(95)&127):((-27)|1)));
        var_1673051930947_872[5];
        var_1673051930947_876
    }
}


public func func_1673051930947_384() : Option<Range<Int8>> { // block id: 521
    let var_1673051930947_882 : Bool = (UInt8(68) is Range<UInt16>);
    let var_1673051930947_888 : Interface_1673051930947_244 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
    let var_1673051930947_1010 : Bool = (UInt64(6) is Enum_1673051930947_298);
    var var_1673051930947_1021 : String = ###"7hzlC5-EnP"###;
    func_1673051930947_523<UInt16>(if ((Option<Bool>.None ?? var_1673051930947_882)) { (if (true) { var_1673051930947_888 } else { var_1673051930947_888 } ) } else { var_1673051930947_888 } , match (if (true) { // block id: 895
        let var_1673051930947_897 : (UInt16, Float32, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), UInt32) = (UInt16(10), Float32(-68.0), (((Option<Float32>.Some(Float32(81.0)) is Interface_1673051930947_243), UInt8(228), Float32(Float32(26.0)), Int32(UInt8(120)), (), Int32(-48), UInt32(Int16(72)), UInt16(Int16(-15)), Int64(Int8(-41))), false, Int16(-30), (true is Interface_1673051930947_246), UInt16(UInt16(12)), ((UInt8(95)&127)..(UInt8(97)&127):(90|1)), UInt32(205), ()), UInt32(152));
        var_1673051930947_897
    } else { // block id: 929
        ((var_1673051930947_737&127)..(UInt64(144)&127):((var_1673051930947_140|1)));
        ((Int8(-65)&127)..=(Int8(-66)&127):((var_1673051930947_140|1)));
        if (false) { var_1673051930947_941 } else { var_1673051930947_941 } 
    }) {
        case caseVar_1673051930947_986 => 
            var_1673051930947_23;
            Enum_1673051930947_298.defaultValue
        
        case caseVar_1673051930947_992 : Enum_1673051930947_516 => 
            Int8(-117);
            if (var_1673051930947_882) { var_1673051930947_301 } else { Enum_1673051930947_298.defaultValue } 
        
        case _ => 
            ();
            if (false) { Enum_1673051930947_298.defaultValue } else { var_1673051930947_301 } 
        
    }, if (var_1673051930947_1010) { ["""
5FV}f
`06*3
""", """
`P_EO
!5cK-
""", ###"?zY?,PMOr$"###, """
2`$:(
-)9<z
""", "80Z+;~^Zn|", "YG1>NGHfj`", var_1673051930947_1021, var_1673051930947_1021, var_1673051930947_1021, "+(nJJ2${var_1673051930947_1021}Wa{fY"] } else { ["""
FC3?J
SS*)${var_1673051930947_1021}y
""", "[Bt*y\\${var_1673051930947_1021}\\e`k", """
%${var_1673051930947_1021}*|${var_1673051930947_1021}Zc${var_1673051930947_1021}
ueN(F
""", """
?a{TSa{
>J4#<
""", """
B${var_1673051930947_1021}t >6
\\>s${var_1673051930947_1021}?$
""", """
#n${var_1673051930947_1021}Min
B${var_1673051930947_1021}J${var_1673051930947_1021}C${var_1673051930947_1021}b?
""", """
lJAK${var_1673051930947_1021}R
ko2^-
""", "v^=x:${var_1673051930947_1021}Fw(o:", "A|]C~azx3S", "Lsh0&${var_1673051930947_1021}\\:?.:"] } [0], optionalParam_1673051930947_527 : ((UInt64(var_1673051930947_737)&127)..([UInt64(200), UInt64(233), var_1673051930947_737, UInt64(67), var_1673051930947_737, var_1673051930947_737, var_1673051930947_737, var_1673051930947_737, UInt64(126), UInt64(84)][5]&127):((Int64((-26))|1))));
    var var_1673051930947_1073 : Float32 = Float32(Float32(Float32(Float32(88.0))));
    let var_1673051930947_1127 : Interface_1673051930947_241 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
    var var_1673051930947_1148 : Int16 = Int16(Int8(111));
    try { // block id: 1047
        (((UInt64(237)&127)..=(var_1673051930947_737&127):(((-36)|1))), ((UInt32(35)&127)..(UInt32(102)&127):(48|1)), var_1673051930947_155, ((UInt16(234)&127)..=(UInt16(37)&127):(85|1)))[3];
        Option<Unit>.None.getOrThrow();
        (Option<Unit>.None ?? ())
    } catch (e: Exception) { // block id: 1068
        let var_1673051930947_1088 : Enum_1673051930947_516 = Enum_1673051930947_516.defaultValue;
        match ((var_1673051930947_206, var_1673051930947_1073, var_1673051930947_155, var_1673051930947_149)) {
            case _ => 
                if (false) { var_1673051930947_1085 } else { var_1673051930947_1088 } ;
                Float32(-96.0)
            
        };
        var_1673051930947_1093 ||= var_1673051930947_1010
    } finally { // block id: 1096
        var loopTimeVar_1673051930947_1100 : Array<UInt64> = [UInt64(168), UInt64(Int8(-23)), UInt64(158), UInt64((-9)), UInt64(Int16(-125)), UInt64(Int8(Int8(UInt8(126)))), UInt64(196), UInt64(Int64(UInt32(Int16(107)))), UInt64(110), UInt64(75)];
        for (i in loopTimeVar_1673051930947_1100 where var_1673051930947_1010) {

        };
        var var_1673051930947_1131 : Int32 = Int32(Int32(Int8(UInt8(3))));
        let var_1673051930947_1144 : Bool = false;
        try { // block id: 1122
            var_1673051930947_1093 &&= var_1673051930947_414;
            var_1673051930947_1127;
            var_1673051930947_1131 &= var_1673051930947_1131
        } catch (_) { // block id: 1137
            var_1673051930947_1073 / Float32((Int32(var_1673051930947_1073)) | 1);
            var_1673051930947_1093 = var_1673051930947_1144;
            var_1673051930947_1148 ^= Int16(-30)
        } finally { // block id: 1152
            var_1673051930947_500;
            var_1673051930947_23
        };
        ()
    };
    Option<Range<Int8>>.None
}

func func_1673051930947_512(param_1673051930947_513 : Array<UInt64>) : Interface_1673051930947_241 { // block id: 514
    var var_1673051930947_1162 : Unit = ();
    let var_1673051930947_1204 : Interface_1673051930947_241 = Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
    match (match (func_1673051930947_384()) {
        case caseVar_1673051930947_1159 => 
            var_1673051930947_1162;
            if (var_1673051930947_414) { var_1673051930947_1085 } else { Enum_1673051930947_516.defaultValue } 
        
        case _ : Option<Range<Int8>> => 
            ();
            var_1673051930947_1085
        
        case _ => 
            if (false) { Enum_1673051930947_516.defaultValue } else { var_1673051930947_1085 } 
        
        case _ => 
            var_1673051930947_1183;
            if (false) { var_1673051930947_1085 } else { Enum_1673051930947_516.defaultValue } 
        
    }) {
        case defaultValue => 
            var_1673051930947_747;
            var_1673051930947_1204
        
        case _ => 
            Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()
        
    }
}


public func func_1673051930947_384(param_1673051930947_385 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), param_1673051930947_386 : UInt64) : Range<UInt32> { // block id: 387
    let var_1673051930947_402 : Bool = true;
    let var_1673051930947_408 : Bool = (() is UInt64);
    if (match (Enum_1673051930947_392.defaultValue) {
        case _ => 
            var_1673051930947_206 <= UInt16(149)
        
    }) { if (var_1673051930947_402) { // block id: 404
        (var_1673051930947_23, var_1673051930947_408, var_1673051930947_23, var_1673051930947_149, var_1673051930947_414)
    } else { // block id: 419
        var var_1673051930947_421 : (Unit, Bool, Unit, UInt32, Bool) = ((), ((-92) is Range<Int16>), (), UInt32(UInt32(Int32(73))), (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>() is UInt32));
        var_1673051930947_421
    } } else { ((), var_1673051930947_402, var_1673051930947_23, var_1673051930947_149, var_1673051930947_414) } [0];
    ();
    let var_1673051930947_450 : Enum_1673051930947_392 = Enum_1673051930947_392.defaultValue;
    let var_1673051930947_1302 : UInt8 = UInt8(57);
    let var_1673051930947_1311 : Int32 = Int32(73);
    let var_1673051930947_1377 : Range<UInt32> = ((UInt32(58)&127)..(UInt32(187)&127):(84|1));
    (match (if (var_1673051930947_408) { Enum_1673051930947_392.defaultValue } else { var_1673051930947_450 } ) {
        case defaultValue => 
            let var_1673051930947_1305 : Float32 = Float32(Float32(-86.0));
            Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>(namedParam_1673051930947_457 : """
Kck&s
.(`x`
""", namedParam_1673051930947_458 : Option<Range<UInt32>>.None, namedParam_1673051930947_459 : (var_1673051930947_1093, var_1673051930947_1302, var_1673051930947_1305, Int32(54), var_1673051930947_23, var_1673051930947_1311, UInt32(142), var_1673051930947_206, var_1673051930947_82));
            ();
            let var_1673051930947_1318 : ?Range<UInt32> = ([(), (), (), (), (), (), (), (), (), ()] as Range<UInt32>);
            var_1673051930947_1318
        
        case _ => 
            Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None;
            UInt8(210) ^ var_1673051930947_1302;
            var_1673051930947_1338
        
    } ?? if (try { // block id: 1342
        Float32(-25.0) >= var_1673051930947_1346
    } finally { // block id: 1348
        var_1673051930947_149 /= ((UInt32(57)) | 1);
        var_1673051930947_414
    }) { ((UInt32(199)&127)..(UInt32(119)&127):((var_1673051930947_140|1))) } else { match (var_1673051930947_1359) {
        case _ : Array<Option<Bool>> => 
            var_1673051930947_1279;
            let var_1673051930947_1371 : Int64 = Int64(UInt64(Int64(UInt64(82))));
            if (false) { ((var_1673051930947_504&127)..=(var_1673051930947_149&127):((var_1673051930947_1371|1))) } else { var_1673051930947_1377 } 
        
        case caseVar_1673051930947_1381 => 
            var_1673051930947_600;
            let var_1673051930947_1387 : Range<Int64> = (((-55)&127)..=(15&127):(23|1));
            if (true) { var_1673051930947_1387 } else { var_1673051930947_1387 } ;
            ((UInt32(69)&127)..(UInt32(35)&127):((-112)|1))
        
        case _ => 
            ();
            if (true) { var_1673051930947_1377 } else { ((UInt32(185)&127)..=(UInt32(240)&127):(95|1)) } 
        
    } } )
}

func func_1673051930947_365<T0, T1>(param_1673051930947_366 : UInt8) : Option<Float32> { // block id: 367
    var var_1673051930947_1399 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = ((117 is Range<UInt16>), UInt8(UInt8(195)), Float32(125.0), Int32(UInt16(140)), (), Int32(112), UInt32(48), UInt16(Int16(UInt8(90))), Int64(UInt8(Int8(Int8(-52)))));
    var var_1673051930947_1447 : Int16 = Int16(125);
    try { // block id: 369
        let var_1673051930947_379 : Int8 = Int8(26);
        (Option<Range<Int8>>.Some(((Int8(-105)&127)..(Int8(120)&127):(22|1))) ?? ((var_1673051930947_379&127)..(var_1673051930947_379&127):((72|1))));
        func_1673051930947_384(var_1673051930947_1399, var_1673051930947_737)
    } finally { // block id: 1419
        var loopTimeVar_1673051930947_1425 : Int64 = 0;
        do {
            loopTimeVar_1673051930947_1425++;
            ()
        } while ((var_1673051930947_414) && loopTimeVar_1673051930947_1425 < 100 ) ;
        match (var_1673051930947_641) {
            case caseVar_1673051930947_1430 : Float64 => 
                var_1673051930947_1433;
                var_1673051930947_500
            
            case caseVar_1673051930947_1438 => 
                var_1673051930947_504 += UInt32(202)
            
            case _ => 
                var_1673051930947_1447++
            
        };
        ((UInt32(185)&127)..(UInt32(182)&127):((var_1673051930947_82|1)))
    };
    var var_1673051930947_1515 : Rune = r't';
    match (try { // block id: 1455
        let var_1673051930947_1459 : (Range<UInt8>, UInt32, Int16, Int16, Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>, Int16) = (((UInt8(254)&127)..=(UInt8(Int8(UInt8(133)))&127):((Int64(Int64(UInt16(114)))|1))), UInt32(79), Int16(20), Int16(UInt8(170)), (((UInt8(UInt8(63))&127)..(UInt8(UInt8(83))&127):((11|1))) as ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)), Int16(-48));
        if (false) { var_1673051930947_1459 } else { var_1673051930947_1459 } ;
        UInt32(164)
    } catch (_) { // block id: 1483
        var_1673051930947_504
    }) {
        case caseVar_1673051930947_1487 => 
            Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None
        
        case caseVar_1673051930947_1492 => 
            ();
            let var_1673051930947_1497 : Bool = true;
            if (var_1673051930947_1497) { Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.Some(var_1673051930947_155) } else { Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None } 
        
        case _ => 
            true;
            Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.Some(var_1673051930947_155)
        
        case caseVar_1673051930947_1510 => 
            Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
            var_1673051930947_1515 = r'8';
            Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.Some(var_1673051930947_155)
        
        case _ => 
            var var_1673051930947_1525 : ?Rune = Option<Rune>.Some(r'5');
            if (false) { var_1673051930947_1525 } else { Option<Rune>.None } ;
            var_1673051930947_641
        
    };
    var var_1673051930947_1577 : Array<String> = [###"LT&r'v.c,OW"###, ###"v%m En/'/="###, "p^[|<:v\"QR", """
'YTGy
M,^KH
""", ###"f=':)Gn}+="###, """
X/n+\"
i@7ip
""", "[af8fuJIW?", """
i2s1s
J:heV
""", ###"dW+~/ rK_<"###, "&0A]j^PStK"];
    var var_1673051930947_1610 : UInt8 = UInt8(UInt8(Int8(8)));
    match (match (var_1673051930947_1535[4]) {
        case 46 => 
            if (false) { var_1673051930947_1183 } else { var_1673051930947_1577 } ;
            var_1673051930947_149
        
        case _ => 
            UInt32(50) % ((var_1673051930947_504) | 1)
        
    }) {
        case caseVar_1673051930947_1597 : Interface_1673051930947_246 => 
            var_1673051930947_1600
        
        case caseVar_1673051930947_1605 => 
            var_1673051930947_1279;
            ((var_1673051930947_1610&127)..(var_1673051930947_1610&127):((var_1673051930947_140|1)));
            Option<Float32>.None
        
        case _ => 
            var_1673051930947_1600
        
    }
}


public func func_1673051930947_361(param_1673051930947_362 : String) : Float32 { // block id: 363
    var var_1673051930947_1621 : (UInt8) -> Option<Float32> = func_1673051930947_365<Option<Bool>, Struct_1673051930947_596>;
    UInt8(if (false) { // block id: 1626
        var_1673051930947_1629 - var_1673051930947_206;
        UInt8(46)
    } else { // block id: 1633
        UInt8(189)
    })|>var_1673051930947_1621;
    var var_1673051930947_1649 : Int32 = Int32(-41);
    var var_1673051930947_1664 : UInt32 = UInt32(18);
    let var_1673051930947_1754 : Range<UInt8> = ((UInt8(92)&127)..(UInt8(253)&127):((-15)|1));
    var var_1673051930947_1758 : Unit = ();
    let var_1673051930947_1769 : UInt8 = UInt8(48);
    var var_1673051930947_1816 : ((Unit, Bool, Unit, UInt32, Bool), String) = (((), (UInt8(198) is Enum_1673051930947_392), (), UInt32(230), ((false, UInt8(237), Float32(-31.0), Int32(-97), (), Int32(6), UInt32(117), UInt16(189), (-81)) is Int64)), "0iG8yB\"j6a{");
    (try { // block id: 1641
        if (var_1673051930947_414) { (var_1673051930947_414, UInt8(140), var_1673051930947_1346, var_1673051930947_1649, (), Int32(-116), var_1673051930947_504, var_1673051930947_206, (-72)) } else { (true, UInt8(162), Float32(-96.0), Int32(-7), (), var_1673051930947_1649, var_1673051930947_1664, var_1673051930947_206, (-96)) } ;
        var_1673051930947_1279;
        Option<Array<Bool>>.Some([false, false, true, true, var_1673051930947_1093, false, false, var_1673051930947_1093, var_1673051930947_414, var_1673051930947_414])
    } finally { // block id: 1681
        Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
        var_1673051930947_1685 |= Int16(116);
        Option<Array<Bool>>.None
    } ?? match (var_1673051930947_941) {
        case caseVar_1673051930947_1698 => 
            let var_1673051930947_1705 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = (false, UInt8(24), Float32(Float32(-73.0)), Int32(UInt8(UInt8(Int8(-68)))), (), Int32(Int32(-72)), UInt32(UInt32(141)), UInt16(229), (-127));
            let var_1673051930947_1724 : ((Unit, Bool, Unit, UInt32, Bool), String) = (((), ((((), false, (), UInt32(209), false), "R\"bR*)d!y/") is UInt32), (), UInt32(Int32(UInt8(108))), true), """
u]K#R
o@a{fy
""");
            var var_1673051930947_1786 : Bool = (Option<Unit>.Some(()) is ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), UInt64) -> Range<UInt32>);
            if (var_1673051930947_1093) { (((Int32(-79)&127)..=(Int32(-15)&127):((-49)|1)), var_1673051930947_1705, (), var_1673051930947_1724, [true, true, true, true, true, false, true, true, false, false], (var_1673051930947_1629, Float32(-125.0), (var_1673051930947_1705, var_1673051930947_1093, Int16(96), var_1673051930947_1093, UInt16(67), var_1673051930947_1754, UInt32(164), var_1673051930947_1758), var_1673051930947_504)) } else { (((Int32(103)&127)..(Int32(-13)&127):((var_1673051930947_140|1))), (var_1673051930947_414, var_1673051930947_1769, var_1673051930947_1346, Int32(111), (), var_1673051930947_1649, var_1673051930947_149, var_1673051930947_206, var_1673051930947_82), var_1673051930947_1279, var_1673051930947_1724, [var_1673051930947_1093, true, var_1673051930947_1093, false, var_1673051930947_1786, var_1673051930947_1093, var_1673051930947_1786, var_1673051930947_1093, false, false], (UInt16(4), var_1673051930947_1346, var_1673051930947_155, var_1673051930947_504)) } 
        
        case _ => 
            (((Int32(108)&127)..=(Int32(23)&127):((-79)|1)), (false, UInt8(62), var_1673051930947_1346, Int32(52), var_1673051930947_1758, var_1673051930947_1649, UInt32(70), var_1673051930947_1629, (-3)), var_1673051930947_23, var_1673051930947_1816, var_1673051930947_538, var_1673051930947_941)
        
    }[4]);
    var var_1673051930947_1876 : Rune = r'X';
    let var_1673051930947_1879 : Rune = r'v';
    var var_1673051930947_1890 : (Range<Int32>, (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Unit, ((Unit, Bool, Unit, UInt32, Bool), String), Array<Bool>, (UInt16, Float32, ((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit), UInt32)) = (((Int32(-110)&127)..=(Int32(Int16(UInt8(130)))&127):((Int64(UInt16(18))|1))), ((((true, UInt8(39), Float32(105.0), Int32(-38), (), Int32(-91), UInt32(223), UInt16(109), 82), true, Int16(-79), true, UInt16(240), ((UInt8(252)&127)..=(UInt8(137)&127):(((-34)|1))), UInt32(14), ()) is Range<Int8>), UInt8(60), Float32(102.0), Int32(Int16(99)), (), Int32(-108), UInt32(56), UInt16(37), 36), (), (((), true, (), UInt32(UInt32(229)), true), """
g/!xT
5oN^(
"""), [false, false, false, false, false, true, false, true, true, false], (UInt16(77), Float32(Float32(-91.0)), ((true, UInt8(187), Float32(18.0), Int32(-18), (), Int32(105), UInt32(132), UInt16(122), (-5)), (([(), (), (), (), (), (), (), (), (), ()], ((UInt64(28)&127)..=(UInt64(191)&127):((-100)|1)), Option<Float32>.None) is (Unit, Bool, Unit, UInt32, Bool)), Int16(UInt8(5)), true, UInt16(28), ((UInt8(207)&127)..=(UInt8(108)&127):(77|1)), UInt32(98), ()), UInt32(12)));
    match (try { // block id: 1841
        ();
        39.0 * (-19.0);
        var var_1673051930947_1847 : Option<Bool> = (Struct_1673051930947_596() as Bool);
        var_1673051930947_1847
    } catch (_) { // block id: 1850
        Option<Bool>.None
    } finally { // block id: 1852
        var_1673051930947_1359;
        ();
        if (true) { Option<Bool>.Some(var_1673051930947_1859) } else { Option<Bool>.Some(true) } 
    }) {
        case caseVar_1673051930947_1866 => 
            var_1673051930947_1346
        
        case _ => 
            ();
            if (true) { var_1673051930947_1876 } else { var_1673051930947_1879 } ;
            Float32(125.0)
        
        case _ : Range<UInt8> => 
            var_1673051930947_1346
        
        case _ => 
            var_1673051930947_1890;
            var_1673051930947_1664 >>= ((UInt32(25)) & 7);
            -var_1673051930947_1346
        
        case _ => 
            var_1673051930947_1989 ^= var_1673051930947_1989;
            ();
            var_1673051930947_1346
        
    }
}

public func func_1673051930947_294(param_1673051930947_295 : Int64) : Float32 { // block id: 296
    var var_1673051930947_326 : Bool = false;
    match (var_1673051930947_301) {
        case defaultValue => 
            var_1673051930947_23
        
        case defaultValue => 
            let var_1673051930947_312 : Bool = true;
            if (var_1673051930947_312) { var_1673051930947_315 } else { var_1673051930947_315 } ;
            var_1673051930947_140 ^= var_1673051930947_140
        
        case _ => 
            ();
            var_1673051930947_326 ||= var_1673051930947_326
        
    };
    var var_1673051930947_337 : (Array<Unit>, Range<UInt64>, Option<Float32>) = ([(), (), (), (), (), (), (), (), (), ()], ((UInt64(Int8(-104))&127)..(UInt64(158)&127):((Int64(UInt8(UInt8(95)))|1))), Option<Float32>.Some(Float32(-21.0)));
    var var_1673051930947_1998 : String = """
8 G2r
z[r[\\
""";
    (var_1673051930947_337[2] ?? (if (var_1673051930947_326) { var_1673051930947_1998 } else { var_1673051930947_1998 } |>func_1673051930947_361))
}


public func func_1673051930947_26(param_1673051930947_27 : UInt16) : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) { // block id: 28
    var var_1673051930947_2002 : (Int64) -> Float32 = func_1673051930947_294;
    var var_1673051930947_2019 : Unit = ();
    let var_1673051930947_2023 : Range<UInt64> = ((UInt64(186)&127)..=(UInt64(136)&127):((62|1)));
    var loopTimeVar_1673051930947_2043 : Int64 = 0;
    while ((func_1673051930947_31(namedParam_1673051930947_36 : ((-74)|>var_1673051930947_2002))) && loopTimeVar_1673051930947_2043 < 100 ) {
        loopTimeVar_1673051930947_2043++;
        let var_1673051930947_2010 : Unit = ();
        ([(), var_1673051930947_2010, var_1673051930947_1279, (), (), var_1673051930947_1279, (), (), var_1673051930947_2019, ()], var_1673051930947_2023, var_1673051930947_1600);
        try { // block id: 2030
            var_1673051930947_2023
        } finally { // block id: 2032
            ();
            if (false) { ((78&127)..=((-50)&127):((-50)|1)) } else { ((65&127)..(9&127):((-84)|1)) } ;
            ((var_1673051930947_737&127)..=(var_1673051930947_737&127):(((-66)|1)))
        }
    };
    let var_1673051930947_2075 : Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)> = (((UInt8(UInt8(79))&127)..=(UInt8(123)&127):(((-82)|1))) as (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64));
    var var_1673051930947_2130 : Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)> = (Option<Float32>.Some(Float32(-69.0)) as (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64));
    let var_1673051930947_2145 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = ((Enum_1673051930947_298.defaultValue is String), UInt8(36), Float32(-74.0), Int32(-57), (), Int32(19), UInt32(Int32(60)), UInt16(Int8(114)), Int64(UInt32(Int16(UInt8(47)))));
    var var_1673051930947_2181 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = ((((UInt8(114)&127)..(UInt8(63)&127):((-37)|1)) is Float64), UInt8(UInt8(UInt8(UInt8(166)))), Float32(-88.0), Int32(-87), (), Int32(Int16(-65)), UInt32(Int8(-41)), UInt16(Int8(Int8(UInt8(241)))), (-58));
    let var_1673051930947_2235 : UInt8 = UInt8(Int8(87));
    (if (if (var_1673051930947_1093) { // block id: 2052
        var_1673051930947_2054;
        true
    } else if (var_1673051930947_414) { // block id: 2058
        var_1673051930947_23;
        false
    } else { // block id: 2061
        var_1673051930947_1989--;
        let var_1673051930947_2067 : UInt8 = UInt8(78);
        UInt8(8) >> ((var_1673051930947_2067) & 7);
        var var_1673051930947_2072 : Int16 = Int16(-20);
        var_1673051930947_201 < var_1673051930947_2072
    }) { var_1673051930947_2075 } else { match (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()) {
        case _ : Array<UInt64> => 
            if (true) { Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.None } else { var_1673051930947_2075 } 
        
        case caseVar_1673051930947_2093 : Enum_1673051930947_392 => 
            var_1673051930947_1600;
            var_1673051930947_2097;
            var_1673051930947_2130
        
        case caseVar_1673051930947_2136 : Interface_1673051930947_244 => 
            var_1673051930947_1859 &&= false;
            var var_1673051930947_2163 : Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)> = Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.None;
            if (false) { Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.Some(var_1673051930947_2145) } else { var_1673051930947_2163 } 
        
        case caseVar_1673051930947_2167 : (UInt16, UInt16, Range<UInt64>, Array<Rune>, UInt8, Range<UInt8>, Array<Rune>, Int32) => 
            if (true) { var_1673051930947_2130 } else { Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.Some(var_1673051930947_2145) } 
        
        case _ => 
            if (var_1673051930947_1859) { Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.None } else { Option<(Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)>.Some(var_1673051930947_2181) } 
        
    } }  ?? if (if (false) { // block id: 2204
        var_1673051930947_2054;
        false && var_1673051930947_1093
    } else if (var_1673051930947_1093) { // block id: 2210
        let var_1673051930947_2212 : Float64 = Float64(Float32(Float32(5.0)));
        var_1673051930947_2212;
        var_1673051930947_2218 >>= ((Int8(-67)) & 7);
        var_1673051930947_1859
    } else { // block id: 2222
        var_1673051930947_2218 == Int8(-83)
    }) { // block id: 2226
        var_1673051930947_1279;
        var_1673051930947_500;
        if (true) { var_1673051930947_2181 } else { (true, var_1673051930947_2235, var_1673051930947_1346, Int32(48), (), var_1673051930947_1989, var_1673051930947_504, var_1673051930947_1629, (-119)) } 
    } else { // block id: 2245
        var var_1673051930947_2250 : Float32 = Float32(-119.0);
        (var_1673051930947_1859, var_1673051930947_2235, var_1673051930947_2250, var_1673051930947_1989, var_1673051930947_1279, var_1673051930947_1989, UInt32(244), UInt16(229), (-103))
    })
}


main(): Int64 {
    try {
        let var_1673051930947_2272 : Option<UInt16> = Option<UInt16>.Some(UInt16(64));
        func func_1673051930947_15(param_1673051930947_16 : UInt64, param_1673051930947_17 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), optionalParam_1673051930947_18 ! : Int8 = Int8(Int8(-80))) : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) { // block id: 21
            var_1673051930947_23;
            (match (Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>()) {
                case _ => 
                    var_1673051930947_1989 += var_1673051930947_1989;
                    var_1673051930947_2272
                
            } ?? UInt16(Int8(110)))|>func_1673051930947_26
        }
;
        let var_1673051930947_2278 : UInt64 = UInt64(Int32(-95));
        func func_1673051930947_7() : Int64 { // block id: 8
            func func_1673051930947_12() : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) { // block id: 13
                func_1673051930947_15(var_1673051930947_2278, try { // block id: 2283
                    var_1673051930947_1279;
                    Class_1673051930947_238<Option<Array<Bool>>, Range<UInt64>>();
                    var_1673051930947_155
                } finally { // block id: 2287
                    Option<Rune>.None;
                    var_1673051930947_500;
                    var_1673051930947_155
                }[0])
            }
;
            func_1673051930947_12()[4];
            if (true) { // block id: 2295
                if (var_1673051930947_414) { // block id: 2298
                    var_1673051930947_23;
                    ()
                } else if (var_1673051930947_1093) { // block id: 2302
                    (-42.0);
                    ()
                };
                try { // block id: 2306
                    if (var_1673051930947_1859) { (((UInt8(64)&127)..(UInt8(18)&127):((-15)|1)), var_1673051930947_504, var_1673051930947_201, var_1673051930947_201, var_1673051930947_641, var_1673051930947_201) } else { (((UInt8(229)&127)..=(UInt8(160)&127):(57|1)), var_1673051930947_504, Int16(109), Int16(-45), Option<((Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64), Bool, Int16, Bool, UInt16, Range<UInt8>, UInt32, Unit)>.None, Int16(117)) } ;
                    ();
                    50
                } catch (_) { // block id: 2325
                    var_1673051930947_2054;
                    var_1673051930947_140 %= ((var_1673051930947_82) | 1);
                    4
                }
            } else if (true) { // block id: 2332
                var_1673051930947_82 - var_1673051930947_82
            } else { // block id: 2336
                var_1673051930947_140
            }
        }
;
        var var_1673051930947_2344 : (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64) = ((((Int16(-72)&127)..=(Int16(Int8(-28))&127):((20|1))) is (UInt16) -> (Bool, UInt8, Float32, Int32, Unit, Int32, UInt32, UInt16, Int64)), UInt8(70), Float32(-109.0), Int32(UInt16(222)), (), Int32(1), UInt32(143), UInt16(UInt8(78)), Int64(UInt32(64)));
        var var_1673051930947_2419 : UInt8 = UInt8(87);
        func_1673051930947_7() % ((((var_1673051930947_1359, var_1673051930947_2344, (), var_1673051930947_2365, [false, var_1673051930947_1859, var_1673051930947_1093, var_1673051930947_414, false, false, var_1673051930947_1093, var_1673051930947_2411, true, true], var_1673051930947_941), [true, true, true, true, true, true, true, true, true, false], (-40), var_1673051930947_2419, ((var_1673051930947_500, var_1673051930947_1859, var_1673051930947_1279, UInt32(237), true), var_1673051930947_2429), (), var_1673051930947_2433)[2]) | 1)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1673051930947_82*var_1673051930947_82), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_140*var_1673051930947_140), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_149*var_1673051930947_149), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_201*var_1673051930947_201), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_206*var_1673051930947_206), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_504*var_1673051930947_504), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_737*var_1673051930947_737), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_1629*var_1673051930947_1629), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_1685*var_1673051930947_1685), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_1989*var_1673051930947_1989), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_2218*var_1673051930947_2218), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_2278*var_1673051930947_2278), 64)
        crccheck.updateBuffer(UInt64(var_1673051930947_2419*var_1673051930947_2419), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum_1673051930947_392 {

}

extend Enum_1673051930947_516 {

}

