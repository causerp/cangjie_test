/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0 EXCLUDE
// (CJNATIVE) ERRCHECK: %compiler %cmp_opt %incremental_compile %f -o %output 

nt64(UInt64(251))&127)..=(UInt64(UInt64(146))&127):(Int64(124)|1));
        var_1690487150522_450;
        (var_1690487150522_456, var_1690487150522_459, ((Int64(Int64(61))&127)..=(Int64(Int64(-3))&127):(Int64(100)|1)), var_1690487150522_321, var_1690487150522_459, ((Int8(Int8(-128))&127)..=(Int8(var_1690487150522_467)&127):(var_1690487150522_232|1)))[3]
    } else { // block id: 471
        let var_1690487150522_474 : Bool = true;
        if (var_1690487150522_474) { // block id: 476
            Class_1690487150522_256()
        } else { // block id: 478
            if (true) { var_1690487150522_321 } else { var_1690487150522_321 } 
        }
    }
}

sealed public open class Class_1690487150522_518<T0, T1> <: Class_1690487150522_256 where T0 <: Option<Option<Class_1690487150522_116>>, T1 <: Class_1690487150522_116 {
    init() { // block id: 520

    }
;
    mut prop var_1690487150522_525 : Option<Class_1690487150522_116> { // block id: 526
        get() { // block id: 528
            ((UInt32(UInt32(91))&127)..(UInt32(UInt32(162))&127):(Int64(-52)|1));
            ('7' as Class_1690487150522_116)
        }

        set(Value) { // block id: 534
            ((UInt16(UInt16(UInt8(Int8(-76))))&127)..=(UInt16(UInt16(Int16(Int8(-61))))&127):(Int64(4)|1));
            ()
        }

    }
    static init() {
    }
}

public struct Struct_1690487150522_705<T0> where T0 <: Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116> & Class_1690487150522_256 {
    init() { // block id: 707

    }
;
    public static mut prop var_1690487150522_710 : Array<Class_1690487150522_116> { // block id: 711
        get() { // block id: 713
            ();
            [Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>(), Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>(), Class_1690487150522_116(), Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>(), Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>(), Class_1690487150522_256(), Class_1690487150522_256(), Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>(), Class_1690487150522_256(), Class_1690487150522_116()]
        }

        set(Value) { // block id: 728
            ();
            ()
        }

    }
}

func func_1690487150522_111(param_1690487150522_112 : Int64) : (Rune, UInt8, UInt64, Int64, Float64, Float64, Rune) { // block id: 113
    ((Class_1690487150522_116.var_1690487150522_121) is Float64);
    const var_1690487150522_628 : String = "RZb}I'7grD";
    let var_1690487150522_671 : (Int8, Range<Int64>, Unit, Array<UInt64>, Unit, Unit) = (Int8(-121), ((Int64(Int64(-79))&127)..=(Int64(Int64(UInt64(11)))&127):(Int64(-89)|1)), (), [UInt64(76), UInt64(215), UInt64(227), UInt64(60), UInt64(109), UInt64(208), UInt64(151), UInt64(235), UInt64(192), UInt64(134)], (), ());
    let var_1690487150522_693 : Range<UInt32> = ((UInt32(UInt32(2))&127)..(UInt32(UInt32(Int16(-51)))&127):(Int64(-79)|1));
    func func_1690487150522_130() : Class_1690487150522_116 { // block id: 131
        let var_1690487150522_485 : Class_1690487150522_256 = Class_1690487150522_256();
        var var_1690487150522_598 : Int32 = Int32(75);
        var var_1690487150522_618 : Float64 = Float64(114.0);
        var var_1690487150522_641 : Option<Option<Class_1690487150522_116>> = (###"1dZAG+Ha[k"### as Option<Class_1690487150522_116>);
        func_1690487150522_134(optionalParam_1690487150522_135 : var_1690487150522_485.var_1690487150522_488).func_1690487150522_501(match (var_1690487150522_598) {
            case caseVar_1690487150522_602 => 
                var_1690487150522_225;
                var var_1690487150522_607 : Int64 = Int64(-122);
                var_1690487150522_607 &= Int64(-76);
                let var_1690487150522_611 : String = """
-9_-%
_Bf^D
""";
                var_1690487150522_611
            
            case 9 => 
                var_1690487150522_618 += var_1690487150522_618;
                "qsY/.n(t(s"
            
            case -100 | -1 => 
                if (var_1690487150522_308) { var_1690487150522_628 } else { var_1690487150522_628 } 
            
            case caseVar_1690487150522_633 => 
                Class_1690487150522_116();
                Float64(1.0);
                var_1690487150522_628
            
            case _ => 
                var_1690487150522_641;
                var_1690487150522_225;
                "EViM]P[:@7"
            
        }, var_1690487150522_649[4], UInt16(124) % ((UInt16(49)) | 1));
        var_1690487150522_671[4];
        const var_1690487150522_690 : Rune = '0';
        (((UInt16(41), Float64(111.0), var_1690487150522_690, var_1690487150522_693, var_1690487150522_700) as Class_1690487150522_116) ?? Struct_1690487150522_705<Class_1690487150522_518<Option<Option<Class_1690487150522_116>>, Class_1690487150522_116>>.var_1690487150522_710[4])
    }
;
    (func_1690487150522_130().func_1690487150522_733(optionalParam_1690487150522_734 : ###"G;R${var_1690487150522_628}FAn!%K${var_1690487150522_628}7"###, namedParam_1690487150522_736 : Int16(-27)) ?? UInt16(try { // block id: 870
        var_1690487150522_873 |= Int32(-3);
        var_1690487150522_877
    } finally { // block id: 880
        Int8(11)
    }));
    var_1690487150522_883
}


func func_1690487150522_60(param_1690487150522_61 : UInt32) : (Rune, UInt8, UInt64, Int64, Float64, Float64, Rune) { // block id: 62
    const var_1690487150522_100 : Float32 = 82.0;
    try { // block id: 64
        (Option<Int8>.None ?? Int8(-84));
        var var_1690487150522_73 : Bool = false;
        var_1690487150522_73;
        Float32(Float32(-72.0))
    } finally { // block id: 77
        var_1690487150522_81[1];
        try { // block id: 88
            var_1690487150522_91 ^= Int16(-40);
            var_1690487150522_96 ^= UInt64(219);
            var_1690487150522_100
        } catch (e: Exception) { // block id: 102
            var_1690487150522_46;
            ();
            Float32(-60.0)
        } finally { // block id: 106
            var_1690487150522_100
        }
    };
    let var_1690487150522_896 : (Int64) -> (Rune, UInt8, UInt64, Int64, Float64, Float64, Rune) = func_1690487150522_111;
    var var_1690487150522_916 : Rune = 'G';
    try { // block id: 109
        var_1690487150522_858|>var_1690487150522_896
    } finally { // block id: 899
        var loopTimeVar_1690487150522_905 : Int64 = 0;
        while ((false) && loopTimeVar_1690487150522_905 < 100 ) {
            loopTimeVar_1690487150522_905++;
            var_1690487150522_225
        };
        (Option<Unit>.Some(()) ?? ());
        let var_1690487150522_928 : Float64 = Float64(Float64(1.0));
        (var_1690487150522_916, var_1690487150522_919, var_1690487150522_96, var_1690487150522_858, var_1690487150522_928, Float64(117.0), 'm')
    }
}

func func_1690487150522_10(param_1690487150522_11 : UInt8) : (Rune, UInt8, UInt64, Int64, Float64, Float64, Rune) { // block id: 12
    let var_1690487150522_23 : Int64 = Int64(72);
    const var_1690487150522_42 : UInt32 = 87;
    var var_1690487150522_934 : (UInt32) -> (Rune, UInt8, UInt64, Int64, Float64, Float64, Rune) = func_1690487150522_60;
    try { // block id: 14
        match (Enum_1690487150522_16<UInt32>.defaultValue) {
            case defaultValue => 
                var_1690487150522_23;
                -UInt64(52);
                UInt32(185)
            
            case _ => 
                var_1690487150522_32--;
                var_1690487150522_36;
                var_1690487150522_42 << ((UInt32(210)) & 7)
            
        };
        var_1690487150522_46;
        var_1690487150522_54.getOrThrow()
    } catch (_) { // block id: 58
        UInt32(92)|>var_1690487150522_934
    }
}

main(): Int64 {
    try {
        func_1690487150522_10(var_1690487150522_919)[3]
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1690487150522_32*var_1690487150522_32), 64)
        crccheck.updateBuffer(UInt64(var_1690487150522_91*var_1690487150522_91), 64)
        crccheck.updateBuffer(UInt64(var_1690487150522_96*var_1690487150522_96), 64)
        crcchec
// ASSERT: scan parse_expected_decl
// ASSERT: scan parse_redundant_modifier
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_expected_right_delimiter


