/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1689283266739_53 : Int64 = 75
public let var_1689283266739_64 : Float64 = Float64(106.0)
public let var_1689283266739_77 : Range<UInt16> = ((UInt16(UInt16(63))&127)..=(UInt16(UInt16(55))&127):((-112)|1))
public var var_1689283266739_91 : Rune = r'K'
public let var_1689283266739_98 : Range<Int32> = ((Int32(Int32(38))&127)..=(Int32(Int32(82))&127):((-18)|1))
public let var_1689283266739_102 : Bool = ([(Float32(125.0) is UInt64), false, (((Int8(Int8(-55))&127)..(Int8(Int8(-84))&127):(98|1)) is String), ((-46.0) is Range<UInt16>), (Class_1689283266739_19() is Unit), false, false, (Class_1689283266739_19() is Int32), (((Int8(Int8(-24))&127)..=(Int8(Int8(-3))&127):(70|1)) is Class_1689283266739_19), true] is UInt64)
var var_1689283266739_167 : Unit = ()
public var var_1689283266739_185 : Int64 = Int64(Int16(40))
public var var_1689283266739_191 : String = ###"6^FNt#=(&*"###
public let var_1689283266739_231 : Range<UInt32> = ((UInt32(UInt32(UInt32(189)))&127)..(UInt32(UInt32(193))&127):(Int64(Int64(UInt16(217)))|1))
public let var_1689283266739_248 : Int32 = Int32(UInt16(219))
var var_1689283266739_253 : Int32 = Int32(-104)
public let var_1689283266739_370 : (Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>) = ([Int16(-49), Int16(71), Int16(-24), Int16(89), Int16(-8), Int16(-79), Int16(-71), Int16(51), Int16(58), Int16(-40)], ((Int32(Int32(-92))&127)..(Int32(Int32(46))&127):((-59)|1)), [Int16(UInt16(UInt16(88))), Int16(-110), Int16(UInt16(88)), Int16(Int16(13)), Int16(-96), Int16(Int8(30)), Int16(4), Int16(UInt8(UInt8(197))), Int16(UInt16(Int8(-90))), Int16(-11)], 55.0, ((Int8(Int8(-9))&127)..(Int8(Int8(-41))&127):(63|1)), ((UInt32(UInt32(95))&127)..=(UInt32(UInt32(48))&127):(50|1)), Float32(Float32(67.0)), [Int64(UInt8(196)), Int64(UInt16(60)), Int64(UInt32(Int16(92))), Int64(UInt16(204)), (-124), Int64(UInt64(40)), 123, 84, Int64(Int8(Int8(112))), Int64(UInt64(177))])
let var_1689283266739_464 : UInt32 = UInt32(UInt8(64))
public var var_1689283266739_475 : ?Array<Class_1689283266739_435> = Option<Array<Class_1689283266739_435>>.None
let var_1689283266739_498 : Class_1689283266739_491 = Class_1689283266739_491()
public let var_1689283266739_531 : Bool = (UInt16(74) is Array<Int32>)
public let var_1689283266739_539 : Bool = (Class_1689283266739_491() is Range<UInt8>)
public let var_1689283266739_544 : Unit = ()
public let var_1689283266739_649 : Class_1689283266739_435 = Class_1689283266739_435()
var var_1689283266739_686 : Range<Int8> = ((Int8(Int8(86))&127)..=(Int8(Int8(-41))&127):(85|1))
var var_1689283266739_703 : ?Int64 = Option<Int64>.None
public var var_1689283266739_720 : UInt64 = UInt64(UInt16(231))
var var_1689283266739_810 : Array<Int32> = [Int32(91), Int32(51), Int32(-92), Int32(-31), Int32(-36), Int32(-120), Int32(-91), Int32(-43), Int32(-102), Int32(60)]
public var var_1689283266739_816 : Int16 = Int16(124)
let var_1689283266739_852 : ?Int64 = ([((Int32(Int32(-122))&127)..(Int32(Int32(-49))&127):((-126)|1)), ((Int32(Int32(106))&127)..(Int32(Int32(83))&127):(19|1)), ((Int32(Int32(-41))&127)..=(Int32(Int32(-128))&127):(124|1)), ((Int32(Int32(-30))&127)..(Int32(Int32(-74))&127):(Int64(Int16(-53))|1)), ((Int32(Int32(55))&127)..=(Int32(Int32(Int32(-57)))&127):((-27)|1)), ((Int32(Int32(-97))&127)..=(Int32(Int32(-124))&127):(85|1)), ((Int32(Int32(51))&127)..=(Int32(Int32(104))&127):((-55)|1)), ((Int32(Int32(-4))&127)..=(Int32(Int32(-34))&127):(54|1)), ((Int32(Int32(123))&127)..(Int32(Int32(Int32(26)))&127):(113|1)), ((Int32(Int32(-108))&127)..=(Int32(Int32(85))&127):((-44)|1))] as Int64)
public var var_1689283266739_914 : (Range<UInt32>, Range<Int8>, Int16, Range<Int8>, (Int32, Range<UInt64>, Array<Int16>, Range<Int32>, Option<Int64>)) = (((UInt32(UInt32(145))&127)..=(UInt32(UInt32(55))&127):(77|1)), ((Int8(Int8(-110))&127)..(Int8(Int8(11))&127):((-32)|1)), Int16(-97), ((Int8(Int8(-97))&127)..(Int8(Int8(-63))&127):((-8)|1)), (Int32(Int8(UInt8(175))), ((UInt64(UInt64(244))&127)..(UInt64(UInt64(56))&127):(59|1)), [Int16(43), Int16(5), Int16(-62), Int16(8), Int16(-12), Int16(13), Int16(-58), Int16(44), Int16(16), Int16(50)], ((Int32(Int32(18))&127)..(Int32(Int32(-72))&127):((-104)|1)), ((-110) as Int64)))
public var var_1689283266739_995 : Int8 = Int8(-61)
public var var_1689283266739_1066 : Array<Class_1689283266739_435> = [Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_435()]
public let var_1689283266739_1110 : ?Unit = ((() as Int64) as Unit)
var var_1689283266739_1156 : Array<Bool> = [(Class_1689283266739_491() is Float32), ([Int16(Int16(90)), Int16(UInt16(248)), Int16(-35), Int16(UInt16(200)), Int16(Int16(125)), Int16(87), Int16(Int8(-113)), Int16(-100), Int16(UInt16(122)), Int16(68)] is String), true, true, true, false, (UInt64(Int32(10)) is Option<Int64>), (Option<Int64>.None is Option<Array<Class_1689283266739_435>>), true, (Int64(UInt32(79)) is Interface_1689283266739_23)]
public let var_1689283266739_1386 : Range<UInt16> = ((UInt16(UInt16(88))&127)..=(UInt16(UInt16(98))&127):(36|1))
public let var_1689283266739_1400 : Range<Int64> = ((Int64(47)&127)..=(Int64((-48))&127):(Int64(Int8(108))|1))
let var_1689283266739_1408 : Float32 = Float32(12.0)
public var var_1689283266739_1550 : Int64 = Int64(UInt8(Int8(Int8(-94))))
public var var_1689283266739_1584 : Array<Range<Int32>> = [((Int32(Int32(-106))&127)..=(Int32(Int32(3))&127):(40|1)), ((Int32(Int32(-10))&127)..=(Int32(Int32(104))&127):(113|1)), ((Int32(Int32(43))&127)..=(Int32(Int32(41))&127):((-73)|1)), ((Int32(Int32(-35))&127)..=(Int32(Int32(-93))&127):(90|1)), ((Int32(Int32(26))&127)..(Int32(Int32(-7))&127):(79|1)), ((Int32(Int32(-61))&127)..=(Int32(Int32(-34))&127):((-99)|1)), ((Int32(Int32(4))&127)..=(Int32(Int32(71))&127):((-92)|1)), ((Int32(Int32(74))&127)..(Int32(Int32(112))&127):((-49)|1)), ((Int32(Int32(10))&127)..(Int32(Int32(-66))&127):(55|1)), ((Int32(Int32(-17))&127)..=(Int32(Int32(61))&127):(119|1))]
var var_1689283266739_1630 : Range<Int32> = ((Int32(Int32(54))&127)..(Int32(Int32(60))&127):((-25)|1))
public let var_1689283266739_1658 : Rune = r'6'
let var_1689283266739_1682 : UInt8 = UInt8(251)
public let var_1689283266739_1751 : Option<Option<Unit>> = ("""
~${var_1689283266739_191}eZsY
*+R${var_1689283266739_191}+C
""" as Option<Unit>)
public var var_1689283266739_1795 : Unit = ()
public var var_1689283266739_1798 : ?Unit = ((r'h', Int16(UInt16(UInt16(3))), UInt16(33), false, ((Int64(Int64(Int8(77)))&127)..=(Int64((-107))&127):((-92)|1)), ((UInt16(UInt16(UInt16(254)))&127)..=(UInt16(UInt16(Int8(-28)))&127):(Int64(UInt64(118))|1)), Float32(Float32(55.0)), ((UInt16(UInt16(202))&127)..=(UInt16(UInt16(73))&127):(Int64(UInt32(7))|1))) as Unit)
var var_1689283266739_1828 : UInt32 = UInt32(40)
let var_1689283266739_1843 : ?Int64 = Option<Int64>.None
var var_1689283266739_1869 : Array<Option<Int64>> = [((Int32(-27), ((UInt64(UInt64(120))&127)..(UInt64(UInt64(5))&127):((-10)|1)), [Int16(-78), Int16(76), Int16(-119), Int16(113), Int16(40), Int16(41), Int16(-34), Int16(-60), Int16(47), Int16(67)], ((Int32(Int32(-38))&127)..=(Int32(Int32(5))&127):((-123)|1)), (UInt32(114) as Int64)) as Int64), Option<Int64>.None, ((Class_1689283266739_491() as Unit) as Int64), ((Int32(-120), ((UInt64(UInt64(139))&127)..(UInt64(UInt64(16))&127):(31|1)), [Int16(-107), Int16(71), Int16(54), Int16(56), Int16(-92), Int16(98), Int16(71), Int16(-9), Int16(3), Int16(-97)], ((Int32(Int32(84))&127)..(Int32(Int32(9))&127):(80|1)), (Option<(Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>)>.None as Int64)) as Int64), ((Int8(101), r'd', ((UInt16(UInt16(29))&127)..(UInt16(UInt16(217))&127):(109|1))) as Int64), Option<Int64>.None, (UInt16(203) as Int64), Option<Int64>.None, Option<Int64>.None, (((true is (Array<UInt64>) -> Array<Option<Int64>>) as Unit) as Int64)]
public let var_1689283266739_2141 : Bool = (Option<Option<Array<Option<Int64>>>>.None is Interface_1689283266739_23)
var var_1689283266739_2189 : Float64 = 45.0
let var_1689283266739_2202 : ?Bool = Option<Bool>.None
let var_1689283266739_2294 : Bool = false
public var var_1689283266739_2312 : Interface_1689283266739_496 = Class_1689283266739_491()
public let var_1689283266739_2318 : Option<Int64> = ([Int32(-72), Int32(96), Int32(88), Int32(92), Int32(20), Int32(11), Int32(0), Int32(-5), Int32(44), Int32(-106)] as Int64)
public var var_1689283266739_2326 : Int64 = Int64(120)
public let var_1689283266739_2356 : Option<Int16> = Option<Int16>.None
public let var_1689283266739_2414 : Array<Int16> = [Int16(Int8(UInt8(Int8(-27)))), Int16(40), Int16(UInt8(Int8(-41))), Int16(-97), Int16(-128), Int16(108), Int16(UInt16(UInt16(UInt8(110)))), Int16(UInt16(Int16(-9))), Int16(UInt16(UInt16(Int16(112)))), Int16(-111)]
public let var_1689283266739_2461 : Int64 = Int64(Int64(UInt64(202)))
public interface Interface_1689283266739_23 {

}

public interface Interface_1689283266739_22<T0, T1> <: Interface_1689283266739_23 {

}

public open class Class_1689283266739_19 <: Interface_1689283266739_22<Range<UInt32>, Float32> {
    public init() { // block id: 21

    }
;
    public static var var_1689283266739_26 : Array<Int16> = [Int16(-52), Int16(105), Int16(73), Int16(-67), Int16(116), Int16(-76), Int16(79), Int16(-51), Int16(1), Int16(77)]
}



public func func_1689283266739_267(param_1689283266739_268 : Range<Int64>) : Option<Int64> { // block id: 269
    ();
    let var_1689283266739_274 : Array<Option<Int64>> = [Option<Int64>.Some((-10)), ((Int8(-4), r'N', ((UInt16(UInt16(127))&127)..(UInt16(UInt16(68))&127):(66|1))) as Int64), ([(((UInt16(UInt16(152))&127)..=(UInt16(UInt16(96))&127):(50|1)) as Int64), Option<Int64>.None, Option<Int64>.Some(4), Option<Int64>.None, Option<Int64>.None, Option<Int64>.Some(97), ([false, false, true, true, false, true, true, false, true, true] as Int64), (UInt16(12) as Int64), Option<Int64>.None, (UInt32(174) as Int64)] as Int64), (Float32(Float32(-64.0)) as Int64), Option<Int64>.Some(Int64(UInt64(Int16(61)))), Option<Int64>.Some(63), ([(-107), (-63), (-17), 24, (-66), (-99), 99, 18, (-101), 43] as Int64), Option<Int64>.None, Option<Int64>.Some(Int64(UInt8(38))), Option<Int64>.None];
    var_1689283266739_274[3]
}

public func func_1689283266739_143<T0, T1>(param_1689283266739_144 : Range<UInt64>) : Range<Int32> { // block id: 145
    let var_1689283266739_157 : Float32 = Float32(-111.0);
    Float32(Float32(try { // block id: 149
        var var_1689283266739_151 : Float32 = Float32(39.0);
        var_1689283266739_151
    } catch (_) { // block id: 153
        ((Int8(Int8(2))&127)..=(Int8(Int8(-14))&127):(34|1));
        var_1689283266739_157 - var_1689283266739_157
    }));
    match (UInt32(203)) {
        case caseVar_1689283266739_164 : Array<Bool> => 
            var_1689283266739_167
        
        case 57 | 115 => 
            var var_1689283266739_173 : Unit = ();
            var_1689283266739_173;
            UInt16(184);
            var_1689283266739_173
        
        case 58 | 15 | 83 => 
            ()
        
        case _ => 
            var_1689283266739_185 -= 53;
            var_1689283266739_191 = var_1689283266739_191
        
    };
    let var_1689283266739_209 : (Int8, Rune, Range<UInt16>) = (Int8(Int8(Int8(UInt8(123)))), r'H', ((UInt16(UInt16(73))&127)..(UInt16(UInt16(168))&127):(Int64(UInt32(Int16(42)))|1)));
    func func_1689283266739_197(param_1689283266739_198 : Int8, param_1689283266739_199 : Range<UInt8>, param_1689283266739_200 : Range<UInt32>) : UInt16 { // block id: 201
        UInt16(UInt16(16)) / ((UInt16(var_1689283266739_209[0])) | 1)
    }
;
    let var_1689283266739_226 : UInt8 = UInt8(119);
    var var_1689283266739_243 : Int32 = Int32(UInt32(229));
    let var_1689283266739_329 : (Range<Int64>) -> Option<Int64> = { lambdaParameter_1689283266739_332 : Range<Int64> => Option<Int64>.None };
    let var_1689283266739_336 : Range<Int64> = ((Int64(84)&127)..=(Int64(15)&127):(107|1));
    ((Int32(Int32(func_1689283266739_197(Int8(-86), ((UInt8(var_1689283266739_226)&127)..=(UInt8(UInt8(48))&127):(80|1)), var_1689283266739_231)))&127)..=(Int32([var_1689283266739_243, var_1689283266739_243, var_1689283266739_248, Int32(-12), var_1689283266739_253, Int32(110), var_1689283266739_248, Int32(-1), Int32(50), Int32(110)][0])&127):(((var_1689283266739_336|>var_1689283266739_329) ?? if (false) { // block id: 340
        31
    } else if (false) { // block id: 343
        UInt8(186);
        var_1689283266739_185
    } else { // block id: 346
        let var_1689283266739_350 : Int8 = Int8(63);
        Int8(-105) + var_1689283266739_350;
        ();
        var_1689283266739_185 + 107
    })|1))
}

public open class Class_1689283266739_435 {
    init() { // block id: 437

    }
;
    static mut prop var_1689283266739_774 : ?Int64 { // block id: 775
        get() { // block id: 777
            [UInt64(Int8(Int8(-48))), UInt64(153), UInt64(Int16(UInt8(77))), UInt64(UInt64(UInt8(124))), UInt64(223), UInt64(Int8(110)), UInt64(120), UInt64(UInt32(Int32(-106))), UInt64(UInt8(19)), UInt64(UInt16(UInt16(208)))];
            (Float32(-5.0) as Int64)
        }

        set(Value) { // block id: 805

        }

    };
    public init(namedParam_1689283266739_486 ! : Range<Int8>, namedParam_1689283266739_487 ! : UInt8) { // block id: 488
        var var_1689283266739_1010 : UInt16 = UInt16(38);
        var var_1689283266739_1016 : UInt32 = UInt32(UInt32(56));
        match (var_1689283266739_498.func_1689283266739_501([UInt64(230), UInt64(36), UInt64(148), UInt64(48), UInt64(184), UInt64(124), UInt64(202), UInt64(62), UInt64(25), UInt64(205)])) {
            case caseVar_1689283266739_966 : UInt8 => 
                let var_1689283266739_975 : Int32 = Int32(UInt32(Int8(Int8(43))));
                ([var_1689283266739_253, Int32(99), Int32(-85), var_1689283266739_253, var_1689283266739_975, Int32(-74), var_1689283266739_253, Int32(55), var_1689283266739_975, Int32(-126)], var_1689283266739_703, var_1689283266739_720, Int16(-73));
                ()
            
            case _ : Float32 => 
                Int16(2);
                var_1689283266739_995 |= Int8(105)
            
            case caseVar_1689283266739_1000 => 
                var_1689283266739_370;
                UInt32(157);
                ()
            
            case _ : (Int32, Range<UInt64>, Array<Int16>, Range<Int32>, Option<Int64>) => 
                var_1689283266739_1010++
            
            case _ => 
                var_1689283266739_1016 %= ((var_1689283266739_1016) | 1);
                var_1689283266739_720--
            
        };
        var_1689283266739_167;
        var_1689283266739_167
    }
;
    public open func func_1689283266739_1100(namedParam_1689283266739_1101 ! : Option<Unit>) : Unit { // block id: 1102
        ()
    }
;
    private static mut prop var_1689283266739_1194 : UInt8 { // block id: 1195
        get() { // block id: 1197
            UInt8(191);
            var_1689283266739_2479
        }

        set(Value) { // block id: 1201
            ([false, false, false, false, ([Int16(-125), Int16(66), Int16(-111), Int16(-81), Int16(6), Int16(-20), Int16(-125), Int16(19), Int16(57), Int16(-40)] is (Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32)), true, (((UInt8(UInt8(2))&127)..(UInt8(UInt8(230))&127):(36|1)) is (Class_1689283266739_435, Array<Int32>)), true, true, false], (), Int32(102), (([true, true, false, false, false, false, false, false, false, true], (), Int32(-85), Option<Int64>.None, (), true, Int32(87)) as Int64), (), (() is Interface_1689283266739_496), Int32(UInt16(Int16(-71))));
            ();
            ();
            var_1689283266739_2479 = Value
        }

    };
    public static var var_1689283266739_1250 : Range<UInt64> = ((UInt64(UInt64(237))&127)..(UInt64(UInt64(57))&127):((-34)|1));
    public static func func_1689283266739_440(param_1689283266739_441 : Range<UInt32>) : Unit { // block id: 442
        ((UInt32(UInt32(78))&127)..=(UInt32(UInt32(248))&127):(13|1));
        var var_1689283266739_1320 : Option<Int64> = (Class_1689283266739_491() as Int64);
        let var_1689283266739_1336 : Range<Int32> = ((Int32(Int32(-24))&127)..(Int32(Int32(-94))&127):((-49)|1));
        func_1689283266739_445<Class_1689283266739_435, Range<UInt32>>(namedParam_1689283266739_446 : var_1689283266739_1156, optionalParam_1689283266739_447 : if (var_1689283266739_1194 != UInt8(250)) { // block id: 1239
            ();
            var_1689283266739_185
        } else if (match (var_1689283266739_914) {
            case _ => 
                var var_1689283266739_1256 : Array<Int16> = [Int16(Int8(35)), Int16(-52), Int16(54), Int16(Int16(Int8(89))), Int16(-40), Int16(-64), Int16(UInt8(UInt8(186))), Int16(-10), Int16(UInt16(Int16(113))), Int16(49)];
                (Int32(-1), var_1689283266739_1250, var_1689283266739_1256, ((Int32(var_1689283266739_248)&127)..(Int32(Int32(-3))&127):((-106)|1)), Option<Int64>.Some((-125)));
                var_1689283266739_531
            
            case caseVar_1689283266739_1284 : Option<(Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>)> => 
                var_1689283266739_167;
                var_1689283266739_531
            
            case (caseVar_1689283266739_1290,_,caseVar_1689283266739_1291,caseVar_1689283266739_1292 : (Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>),(_ : UInt64,_,caseVar_1689283266739_1293,_,caseVar_1689283266739_1294)) => 
                var var_1689283266739_1298 : Bool = ([Int32(64), Int32(72), Int32(UInt32(125)), Int32(98), Int32(7), Int32(Int32(116)), Int32(Int8(Int8(13))), Int32(Int8(Int8(14))), Int32(Int8(-32)), Int32(-10)] is UInt32);
                var_1689283266739_1298 ||= var_1689283266739_531;
                var_1689283266739_1320;
                true && false
            
            case _ => 
                var_1689283266739_464;
                false
            
        }) { // block id: 1330
            ((Int64(54)&127)..(Int64(108)&127):(126|1));
            var_1689283266739_1336;
            var var_1689283266739_1339 : Int64 = 126;
            var_1689283266739_1339
        } else { // block id: 1341
            let var_1689283266739_1343 : Range<Int16> = ((Int16(Int16(43))&127)..=(Int16(Int16(53))&127):(37|1));
            var_1689283266739_1343;
            ();
            var_1689283266739_185 / ((80) | 1)
        }, namedParam_1689283266739_452 : Float32(match ((-96.0)) {
            case _ => 
                Option<(Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>)>.None;
                Float32(-45.0)
            
        }));
        let var_1689283266739_1412 : (Int8, Rune, Range<UInt16>) = (Int8(Int8(Int8(UInt8(182)))), r'o', ((UInt16(UInt16(8))&127)..(UInt16(UInt16(150))&127):(27|1)));
        var loopTimeVar_1689283266739_1422 : Int64 = 0;
        while ((try { // block id: 1358
            if (var_1689283266739_531) { ((Int64((-125))&127)..(Int64(25)&127):(111|1)) } else { ((Int64(var_1689283266739_185)&127)..(Int64(123)&127):(55|1)) } ;
            ((Int64(3)&127)..(Int64((-39))&127):(123|1));
            Int16(1) == Int16(72)
        } catch (e: Exception) { // block id: 1370
            var var_1689283266739_1372 : UInt16 = UInt16(245);
            var_1689283266739_1372;
            r'W';
            true
        }) && loopTimeVar_1689283266739_1422 < 100 ) {
            loopTimeVar_1689283266739_1422++;
            ();
            (UInt64(167), (var_1689283266739_995, r'f', var_1689283266739_1386), var_1689283266739_1320, Int8(2), UInt64(213), (r'E', var_1689283266739_816, UInt16(69), var_1689283266739_539, var_1689283266739_1400, ((UInt16(UInt16(251))&127)..(UInt16(UInt16(252))&127):(114|1)), var_1689283266739_1408, var_1689283266739_1386), var_1689283266739_1412)[2]
        }
    }
;
    init(param_1689283266739_1742 : Int32) { // block id: 1743
        let var_1689283266739_1781 : Interface_1689283266739_495<Interface_1689283266739_23> = Class_1689283266739_491();
        ((var_1689283266739_1751 ?? match (var_1689283266739_191) {
            case """
E7,6)
t;3_q
""" | "WASp0;(8<A" => 
                let var_1689283266739_1761 : Bool = false;
                if (var_1689283266739_1761) { var_1689283266739_1110 } else { Option<Unit>.Some(var_1689283266739_544) } 
            
            case _ => 
                ();
                UInt8(233);
                Option<Unit>.Some(var_1689283266739_544)
            
        }) ?? (if (true) { // block id: 1779
            var_1689283266739_1781;
            """
]x@Y~
FTW^/
""";
            var var_1689283266739_1786 : Unit = ();
            Option<Unit>.Some(var_1689283266739_1786)
        } else { // block id: 1788
            var_1689283266739_167;
            ();
            if (false) { Option<Unit>.Some(var_1689283266739_1795) } else { var_1689283266739_1798 } 
        } ?? var_1689283266739_1828--));
        try { // block id: 1831
            var loopTimeVar_1689283266739_1853 : Array<Class_1689283266739_435> = [Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(9))&127)..=(Int8(Int8(-61))&127):(Int64(UInt32(243))|1)), namedParam_1689283266739_487 : UInt8(UInt8(UInt8(210)))), Class_1689283266739_491(UInt32(11)), Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(108))&127)..(Int8(Int8(UInt8(229)))&127):(Int64(UInt64(82))|1)), namedParam_1689283266739_487 : UInt8(197)), Class_1689283266739_491(UInt32(165)), Class_1689283266739_491(UInt32(Int32(Int16(34)))), Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(-92))&127)..(Int8(Int8(Int8(76)))&127):((-56)|1)), namedParam_1689283266739_487 : UInt8(UInt8(Int8(-108)))), Class_1689283266739_491(UInt32(20)), Class_1689283266739_491(UInt32(UInt32(Int8(-83)))), Class_1689283266739_491(), Class_1689283266739_491()];
            for (i in loopTimeVar_1689283266739_1853 where var_1689283266739_531) {
                [Option<Int64>.None, Option<Int64>.Some(var_1689283266739_1550), var_1689283266739_852, Option<Int64>.None, var_1689283266739_703, var_1689283266739_1843, Option<Int64>.Some(var_1689283266739_185), Option<Int64>.Some(var_1689283266739_185), Option<Int64>.None, Option<Int64>.Some((-32))];
                ()
            }
        } finally { // block id: 2002
            let var_1689283266739_2009 : ?Option<Array<Option<Int64>>> = (((UInt16(UInt16(40))&127)..(UInt16(UInt16(16))&127):(117|1)) as Option<Array<Option<Int64>>>);
            (var_1689283266739_2009 ?? Option<Array<Option<Int64>>>.Some(var_1689283266739_1869));
            ()
        };
        if (var_1689283266739_539) { // block id: 2017
            (Option<UInt32>.Some(UInt32(5)) ?? var_1689283266739_464);
            let var_1689283266739_2032 : ?((Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32), UInt32, Rune, Bool) = Option<((Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32), UInt32, Rune, Bool)>.None;
            (var_1689283266739_2032 ?? ((var_1689283266739_1156, (), Int32(-45), Option<Int64>.None, (), false, var_1689283266739_248), UInt32(179), r'T', var_1689283266739_539));
            (Option<Unit>.None ?? ())
        }
    }
;
    static var var_1689283266739_2479 : UInt8 = UInt8(64)
}


public interface Interface_1689283266739_496 {
    static func func_1689283266739_506(param_1689283266739_507 : Range<UInt8>) : Bool { // block id: 508
        var loopTimeVar_1689283266739_560 : Int64 = 0;
        do {
            loopTimeVar_1689283266739_560++;
            (Option<Unit>.None ?? var_1689283266739_167)
        } while (((try { // block id: 516
            let var_1689283266739_518 : ?Bool = (UInt32(46) as Bool);
            var_1689283266739_518
        } catch (e: Exception) { // block id: 521
            Class_1689283266739_435();
            var var_1689283266739_526 : ?Bool = Option<Bool>.None;
            if (true) { var_1689283266739_526 } else { var_1689283266739_526 } 
        } ?? if (var_1689283266739_531) { // block id: 534
            true
        } else if (var_1689283266739_531) { // block id: 537
            var_1689283266739_539
        } else { // block id: 542
            var_1689283266739_544;
            var var_1689283266739_548 : Int16 = Int16(103);
            var_1689283266739_548--;
            false
        })) && loopTimeVar_1689283266739_560 < 100 ) ;
        ((var_1689283266739_498.var_1689283266739_570 ?? 79 % ((var_1689283266739_185) | 1)) is Range<Int32>)
    }

}

public interface Interface_1689283266739_495<T0> <: Interface_1689283266739_23 & Interface_1689283266739_496 {
    static func func_1689283266739_506(param_1689283266739_507 : Range<UInt8>) : Bool { // block id: 508
        var loopTimeVar_1689283266739_560 : Int64 = 0;
        do {
            loopTimeVar_1689283266739_560++;
            (Option<Unit>.None ?? var_1689283266739_167)
        } while (((try { // block id: 516
            let var_1689283266739_518 : ?Bool = (UInt32(46) as Bool);
            var_1689283266739_518
        } catch (e: Exception) { // block id: 521
            Class_1689283266739_435();
            var var_1689283266739_526 : ?Bool = Option<Bool>.None;
            if (true) { var_1689283266739_526 } else { var_1689283266739_526 } 
        } ?? if (var_1689283266739_531) { // block id: 534
            true
        } else if (var_1689283266739_531) { // block id: 537
            var_1689283266739_539
        } else { // block id: 542
            var_1689283266739_544;
            var var_1689283266739_548 : Int16 = Int16(103);
            var_1689283266739_548--;
            false
        })) && loopTimeVar_1689283266739_560 < 100 ) ;
        ((var_1689283266739_498.var_1689283266739_570 ?? 79 % ((var_1689283266739_185) | 1)) is Range<Int32>)
    }

}

public interface Interface_1689283266739_494 <: Interface_1689283266739_495<Interface_1689283266739_23> & Interface_1689283266739_23 {
    func func_1689283266739_501(param_1689283266739_502 : Array<UInt64>) : Array<Option<Int64>> { // block id: 503
        let var_1689283266739_584 : UInt8 = UInt8(13);
        var var_1689283266739_602 : ?Bool = (UInt16(37) as Bool);
        if (func_1689283266739_506(if (true) { ((UInt8(UInt8(194))&127)..(UInt8(var_1689283266739_584)&127):(var_1689283266739_185|1)) } else { ((UInt8(UInt8(62))&127)..(UInt8(UInt8(220))&127):(63|1)) } )) { ((Int8(Int8(-123))&127)..=(Int8(Int8(-17))&127):((-104)|1)) } else { if (var_1689283266739_539) { // block id: 591
            if (false) { Class_1689283266739_491() } else { Class_1689283266739_491() } ;
            if (var_1689283266739_539) { ((Int8(Int8(93))&127)..(Int8(Int8(-123))&127):(49|1)) } else { ((Int8(Int8(-72))&127)..=(Int8(Int8(86))&127):((-22)|1)) } 
        } else if (match (var_1689283266739_602) {
            case caseVar_1689283266739_607 : String => 
                let var_1689283266739_611 : Float32 = Float32(14.0);
                var_1689283266739_611 * var_1689283266739_611;
                var_1689283266739_531
            
            case caseVar_1689283266739_617 => 
                var_1689283266739_531
            
            case _ => 
                var_1689283266739_531
            
            case _ : Interface_1689283266739_496 => 
                Option<Int64>.None;
                var var_1689283266739_630 : Int8 = Int8(UInt8(Int8(-35)));
                var_1689283266739_630 > Int8(-114)
            
            case _ => 
                let var_1689283266739_640 : Rune = r'4';
                (Int8(42), var_1689283266739_640, ((UInt16(UInt16(224))&127)..=(UInt16(UInt16(153))&127):(92|1)));
                [Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491(), var_1689283266739_649, var_1689283266739_649, var_1689283266739_649, Class_1689283266739_491(), Class_1689283266739_435(), Class_1689283266739_435()];
                false
            
        }) { // block id: 657
            let var_1689283266739_659 : Range<Int8> = ((Int8(Int8(UInt8(46)))&127)..(Int8(Int8(Int8(83)))&127):(Int64((-65))|1));
            var_1689283266739_659
        } else { // block id: 667
            var var_1689283266739_670 : Float32 = Float32(Float32(Float32(Float32(Float32(-108.0)))));
            var_1689283266739_670 /= Float32((Int32(Float32(-101.0))) | 1);
            var var_1689283266739_679 : UInt64 = UInt64(UInt16(Int8(Int8(-97))));
            var_1689283266739_679 |= UInt64(3);
            var_1689283266739_686
        } } ;
        let var_1689283266739_747 : (Rune, Int16, UInt16, Bool, Range<Int64>, Range<UInt16>, Float32, Range<UInt16>) = (r'Z', Int16(Int16(Int16(-62))), UInt16(Int16(-101)), true, ((Int64((-43))&127)..=(Int64(125)&127):(111|1)), ((UInt16(UInt16(204))&127)..=(UInt16(UInt16(153))&127):((-31)|1)), Float32(Float32(Float32(Float32(-99.0)))), ((UInt16(UInt16(146))&127)..=(UInt16(UInt16(187))&127):(Int64(UInt64(120))|1)));
        let var_1689283266739_849 : Interface_1689283266739_23 = Class_1689283266739_19();
        let var_1689283266739_891 : Int64 = (-83);
        var var_1689283266739_939 : ((Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32), UInt32, Rune, Bool) = (([false, false, false, true, false, false, true, true, true, true], (), Int32(UInt16(168)), ((UInt32(216) as Array<Class_1689283266739_435>) as Int64), (), false, Int32(98)), UInt32(UInt16(102)), r'c', ((((Int16(Int16(48))&127)..(Int16(Int16(87))&127):((-80)|1)) as Unit) is Interface_1689283266739_494));
        [try { // block id: 690
            var_1689283266739_167;
            var_1689283266739_544;
            if (var_1689283266739_539) { Option<Int64>.None } else { Option<Int64>.Some(116) } 
        } finally { // block id: 698
            var_1689283266739_185 /= ((var_1689283266739_185) | 1);
            var_1689283266739_703
        }, match (try { // block id: 707
            let var_1689283266739_709 : (Int8, Rune, Range<UInt16>) = (Int8(Int8(Int8(5))), r't', ((UInt16(UInt16(135))&127)..(UInt16(UInt16(196))&127):(38|1)));
            var_1689283266739_709;
            if (var_1689283266739_539) { [var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, UInt64(126), var_1689283266739_720, UInt64(221), var_1689283266739_720, UInt64(17), UInt64(45)] } else { [UInt64(27), UInt64(48), UInt64(185), UInt64(131), UInt64(236), UInt64(142), UInt64(50), UInt64(114), UInt64(68), UInt64(128)] } 
        } finally { // block id: 733
            var_1689283266739_167;
            [UInt64(41), UInt64(23), UInt64(213), UInt64(210), UInt64(209), UInt64(132), UInt64(85), UInt64(242), UInt64(108), UInt64(154)]
        }) {
            case _ => 
                Option<Int64>.None
            
            case _ => 
                var_1689283266739_703
            
        }, if (var_1689283266739_747[3]) { (Class_1689283266739_435.var_1689283266739_774) } else { (var_1689283266739_810, Option<Int64>.Some((-34)), var_1689283266739_720, var_1689283266739_816)[1] } , try { // block id: 820
            if (var_1689283266739_531) { var_1689283266739_703 } else { Option<Int64>.Some(var_1689283266739_185) } 
        } catch (_) { // block id: 826
            var_1689283266739_703
        }, try { // block id: 829
            ();
            if (var_1689283266739_531) { Option<Int64>.Some(124) } else { var_1689283266739_703 } 
        } catch (_) { // block id: 836
            ();
            [UInt64(51), UInt64(139), UInt64(34), UInt64(75), UInt64(230), UInt64(197), UInt64(233), UInt64(209), UInt64(41), UInt64(189)];
            if (var_1689283266739_539) { Option<Int64>.None } else { Option<Int64>.None } 
        }, try { // block id: 844
            var_1689283266739_720 &= var_1689283266739_720;
            var_1689283266739_849;
            var_1689283266739_852
        } finally { // block id: 880
            var_1689283266739_167;
            Option<Int64>.Some(var_1689283266739_185)
        }, try { // block id: 885
            if (true) { Option<Int64>.None } else { Option<Int64>.Some(var_1689283266739_891) } 
        } catch (e: Exception) { // block id: 893
            var_1689283266739_167;
            if (var_1689283266739_539) { var_1689283266739_703 } else { Option<Int64>.Some(51) } 
        } finally { // block id: 900
            UInt32(130) != var_1689283266739_464;
            if (false) { var_1689283266739_703 } else { Option<Int64>.None } 
        }, Option<Int64>.None, var_1689283266739_914[4][4], var_1689283266739_939[0][3]]
    }
;
    static func func_1689283266739_506(param_1689283266739_507 : Range<UInt8>) : Bool { // block id: 508
        var loopTimeVar_1689283266739_560 : Int64 = 0;
        do {
            loopTimeVar_1689283266739_560++;
            (Option<Unit>.None ?? var_1689283266739_167)
        } while (((try { // block id: 516
            let var_1689283266739_518 : ?Bool = (UInt32(46) as Bool);
            var_1689283266739_518
        } catch (e: Exception) { // block id: 521
            Class_1689283266739_435();
            var var_1689283266739_526 : ?Bool = Option<Bool>.None;
            if (true) { var_1689283266739_526 } else { var_1689283266739_526 } 
        } ?? if (var_1689283266739_531) { // block id: 534
            true
        } else if (var_1689283266739_531) { // block id: 537
            var_1689283266739_539
        } else { // block id: 542
            var_1689283266739_544;
            var var_1689283266739_548 : Int16 = Int16(103);
            var_1689283266739_548--;
            false
        })) && loopTimeVar_1689283266739_560 < 100 ) ;
        ((var_1689283266739_498.var_1689283266739_570 ?? 79 % ((var_1689283266739_185) | 1)) is Range<Int32>)
    }

}

public open class Class_1689283266739_491 <: Class_1689283266739_435 & Interface_1689283266739_23 & Interface_1689283266739_494 {
    public init() { // block id: 493

    }
;
    public prop var_1689283266739_570 : Option<Int64> { // block id: 571
        get() { // block id: 573
            ();
            Option<Int64>.None
        }

    };
    init(param_1689283266739_1866 : UInt32) { // block id: 1867
        var_1689283266739_1869;
        let var_1689283266739_1950 : Bool = true;
        match ((Option<Array<Option<Int64>>>.None ?? (Option<Array<Option<Int64>>>.None ?? var_1689283266739_1869))) {
            case caseVar_1689283266739_1946 => 
                if (var_1689283266739_1950) { ((UInt8(UInt8(53))&127)..=(UInt8(UInt8(29))&127):(17|1)) } else { ((UInt8(UInt8(218))&127)..(UInt8(var_1689283266739_1682)&127):(63|1)) } 
            
            case _ => 
                [true, false, true, false, true, true, true, false, true, true];
                ();
                let var_1689283266739_1968 : Range<UInt8> = ((UInt8(UInt8(18))&127)..=(UInt8(UInt8(216))&127):((-105)|1));
                if (var_1689283266739_531) { ((UInt8(UInt8(166))&127)..(UInt8(var_1689283266739_1682)&127):(var_1689283266739_185|1)) } else { var_1689283266739_1968 } 
            
        }
    }
;
    public static func func_1689283266739_506(param_1689283266739_507 : Range<UInt8>) : Bool { // block id: 508
        var loopTimeVar_1689283266739_560 : Int64 = 0;
        do {
            loopTimeVar_1689283266739_560++;
            (Option<Unit>.None ?? var_1689283266739_167)
        } while (((try { // block id: 516
            let var_1689283266739_518 : ?Bool = (UInt32(46) as Bool);
            var_1689283266739_518
        } catch (e: Exception) { // block id: 521
            Class_1689283266739_435();
            var var_1689283266739_526 : ?Bool = Option<Bool>.None;
            if (true) { var_1689283266739_526 } else { var_1689283266739_526 } 
        } ?? if (var_1689283266739_531) { // block id: 534
            true
        } else if (var_1689283266739_531) { // block id: 537
            var_1689283266739_539
        } else { // block id: 542
            var_1689283266739_544;
            var var_1689283266739_548 : Int16 = Int16(103);
            var_1689283266739_548--;
            false
        })) && loopTimeVar_1689283266739_560 < 100 ) ;
        ((var_1689283266739_498.var_1689283266739_570 ?? 79 % ((var_1689283266739_185) | 1)) is Range<Int32>)
    }
;
    public open override func func_1689283266739_501(param_1689283266739_502 : Array<UInt64>) : Array<Option<Int64>> { // block id: 503
        let var_1689283266739_584 : UInt8 = UInt8(13);
        var var_1689283266739_602 : ?Bool = (UInt16(37) as Bool);
        if (func_1689283266739_506(if (true) { ((UInt8(UInt8(194))&127)..(UInt8(var_1689283266739_584)&127):(var_1689283266739_185|1)) } else { ((UInt8(UInt8(62))&127)..(UInt8(UInt8(220))&127):(63|1)) } )) { ((Int8(Int8(-123))&127)..=(Int8(Int8(-17))&127):((-104)|1)) } else { if (var_1689283266739_539) { // block id: 591
            if (false) { Class_1689283266739_491() } else { Class_1689283266739_491() } ;
            if (var_1689283266739_539) { ((Int8(Int8(93))&127)..(Int8(Int8(-123))&127):(49|1)) } else { ((Int8(Int8(-72))&127)..=(Int8(Int8(86))&127):((-22)|1)) } 
        } else if (match (var_1689283266739_602) {
            case caseVar_1689283266739_607 : String => 
                let var_1689283266739_611 : Float32 = Float32(14.0);
                var_1689283266739_611 * var_1689283266739_611;
                var_1689283266739_531
            
            case caseVar_1689283266739_617 => 
                var_1689283266739_531
            
            case _ => 
                var_1689283266739_531
            
            case _ : Interface_1689283266739_496 => 
                Option<Int64>.None;
                var var_1689283266739_630 : Int8 = Int8(UInt8(Int8(-35)));
                var_1689283266739_630 > Int8(-114)
            
            case _ => 
                let var_1689283266739_640 : Rune = r'4';
                (Int8(42), var_1689283266739_640, ((UInt16(UInt16(224))&127)..=(UInt16(UInt16(153))&127):(92|1)));
                [Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491(), var_1689283266739_649, var_1689283266739_649, var_1689283266739_649, Class_1689283266739_491(), Class_1689283266739_435(), Class_1689283266739_435()];
                false
            
        }) { // block id: 657
            let var_1689283266739_659 : Range<Int8> = ((Int8(Int8(UInt8(46)))&127)..(Int8(Int8(Int8(83)))&127):(Int64((-65))|1));
            var_1689283266739_659
        } else { // block id: 667
            var var_1689283266739_670 : Float32 = Float32(Float32(Float32(Float32(Float32(-108.0)))));
            var_1689283266739_670 /= Float32((Int32(Float32(-101.0))) | 1);
            var var_1689283266739_679 : UInt64 = UInt64(UInt16(Int8(Int8(-97))));
            var_1689283266739_679 |= UInt64(3);
            var_1689283266739_686
        } } ;
        let var_1689283266739_747 : (Rune, Int16, UInt16, Bool, Range<Int64>, Range<UInt16>, Float32, Range<UInt16>) = (r'Z', Int16(Int16(Int16(-62))), UInt16(Int16(-101)), true, ((Int64((-43))&127)..=(Int64(125)&127):(111|1)), ((UInt16(UInt16(204))&127)..=(UInt16(UInt16(153))&127):((-31)|1)), Float32(Float32(Float32(Float32(-99.0)))), ((UInt16(UInt16(146))&127)..=(UInt16(UInt16(187))&127):(Int64(UInt64(120))|1)));
        let var_1689283266739_849 : Interface_1689283266739_23 = Class_1689283266739_19();
        let var_1689283266739_891 : Int64 = (-83);
        var var_1689283266739_939 : ((Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32), UInt32, Rune, Bool) = (([false, false, false, true, false, false, true, true, true, true], (), Int32(UInt16(168)), ((UInt32(216) as Array<Class_1689283266739_435>) as Int64), (), false, Int32(98)), UInt32(UInt16(102)), r'c', ((((Int16(Int16(48))&127)..(Int16(Int16(87))&127):((-80)|1)) as Unit) is Interface_1689283266739_494));
        [try { // block id: 690
            var_1689283266739_167;
            var_1689283266739_544;
            if (var_1689283266739_539) { Option<Int64>.None } else { Option<Int64>.Some(116) } 
        } finally { // block id: 698
            var_1689283266739_185 /= ((var_1689283266739_185) | 1);
            var_1689283266739_703
        }, match (try { // block id: 707
            let var_1689283266739_709 : (Int8, Rune, Range<UInt16>) = (Int8(Int8(Int8(5))), r't', ((UInt16(UInt16(135))&127)..(UInt16(UInt16(196))&127):(38|1)));
            var_1689283266739_709;
            if (var_1689283266739_539) { [var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, UInt64(126), var_1689283266739_720, UInt64(221), var_1689283266739_720, UInt64(17), UInt64(45)] } else { [UInt64(27), UInt64(48), UInt64(185), UInt64(131), UInt64(236), UInt64(142), UInt64(50), UInt64(114), UInt64(68), UInt64(128)] } 
        } finally { // block id: 733
            var_1689283266739_167;
            [UInt64(41), UInt64(23), UInt64(213), UInt64(210), UInt64(209), UInt64(132), UInt64(85), UInt64(242), UInt64(108), UInt64(154)]
        }) {
            case _ => 
                Option<Int64>.None
            
            case _ => 
                var_1689283266739_703
            
        }, if (var_1689283266739_747[3]) { (Class_1689283266739_435.var_1689283266739_774) } else { (var_1689283266739_810, Option<Int64>.Some((-34)), var_1689283266739_720, var_1689283266739_816)[1] } , try { // block id: 820
            if (var_1689283266739_531) { var_1689283266739_703 } else { Option<Int64>.Some(var_1689283266739_185) } 
        } catch (_) { // block id: 826
            var_1689283266739_703
        }, try { // block id: 829
            ();
            if (var_1689283266739_531) { Option<Int64>.Some(124) } else { var_1689283266739_703 } 
        } catch (_) { // block id: 836
            ();
            [UInt64(51), UInt64(139), UInt64(34), UInt64(75), UInt64(230), UInt64(197), UInt64(233), UInt64(209), UInt64(41), UInt64(189)];
            if (var_1689283266739_539) { Option<Int64>.None } else { Option<Int64>.None } 
        }, try { // block id: 844
            var_1689283266739_720 &= var_1689283266739_720;
            var_1689283266739_849;
            var_1689283266739_852
        } finally { // block id: 880
            var_1689283266739_167;
            Option<Int64>.Some(var_1689283266739_185)
        }, try { // block id: 885
            if (true) { Option<Int64>.None } else { Option<Int64>.Some(var_1689283266739_891) } 
        } catch (e: Exception) { // block id: 893
            var_1689283266739_167;
            if (var_1689283266739_539) { var_1689283266739_703 } else { Option<Int64>.Some(51) } 
        } finally { // block id: 900
            UInt32(130) != var_1689283266739_464;
            if (false) { var_1689283266739_703 } else { Option<Int64>.None } 
        }, Option<Int64>.None, var_1689283266739_914[4][4], var_1689283266739_939[0][3]]
    }

}






func func_1689283266739_456(optionalParam_1689283266739_457 ! : Array<Int32> = [Int32(-41), Int32(27), Int32(38), Int32(-12), Int32(-96), Int32(-42), Int32(9), Int32(12), Int32(-25), Int32(-66)], namedParam_1689283266739_459 ! : Int64) : Class_1689283266739_435 { // block id: 460
    var var_1689283266739_478 : Array<Class_1689283266739_435> = [Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(-115))&127)..(Int8(Int8(23))&127):(77|1)), namedParam_1689283266739_487 : UInt8(248)), Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_491(), Class_1689283266739_491(), Class_1689283266739_491()];
    var var_1689283266739_1043 : ?Option<Class_1689283266739_435> = Option<Option<Class_1689283266739_435>>.None;
    var var_1689283266739_1046 : Option<Class_1689283266739_435> = Option<Class_1689283266739_435>.Some(Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(0))&127)..=(Int8(Int8(UInt8(9)))&127):(29|1)), namedParam_1689283266739_487 : UInt8(UInt8(UInt8(185)))));
    if ((var_1689283266739_464 is Interface_1689283266739_22<Range<UInt32>, Float32>)) { (var_1689283266739_475 ?? var_1689283266739_478)[1] } else { ((var_1689283266739_1043 ?? var_1689283266739_1046) ?? (var_1689283266739_649, [Int32(92), Int32(54), Int32(36), Int32(-113), Int32(44), Int32(9), Int32(-104), Int32(44), Int32(120), Int32(116)])[0]) } 
}


func func_1689283266739_445<T0, T1>(namedParam_1689283266739_446 ! : Array<Bool>, optionalParam_1689283266739_447 ! : Int64 = 22, optionalParam_1689283266739_449 ! : Option<Int64> = Option<Int64>.Some((-75)), namedParam_1689283266739_452 ! : Float32) : Int16 { // block id: 453
    func_1689283266739_456(optionalParam_1689283266739_457 : try { // block id: 1064
        var_1689283266739_1066;
        ();
        [Int32(-25), var_1689283266739_248, Int32(-32), Int32(86), var_1689283266739_248, var_1689283266739_248, Int32(85), Int32(5), Int32(85), Int32(80)]
    } finally { // block id: 1090
        var_1689283266739_810
    }, namedParam_1689283266739_459 : match ((var_1689283266739_649, var_1689283266739_810)) {
        case _ => 
            (-128)
        
    }).func_1689283266739_1100(namedParam_1689283266739_1101 : try { // block id: 1105
        (-50.0) ** var_1689283266739_185;
        var_1689283266739_1110
    } finally { // block id: 1114
        Option<Unit>.None
    });
    try { // block id: 1117
        match (var_1689283266739_475) {
            case _ => 
                ();
                var_1689283266739_816
            
        }
    } catch (e: Exception) { // block id: 1124
        var_1689283266739_464 & var_1689283266739_464;
        let var_1689283266739_1134 : ?(Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>) = ([Int16(-100), Int16(UInt16(Int8(102))), Int16(-41), Int16(67), Int16(UInt16(239)), Int16(Int8(47)), Int16(9), Int16(24), Int16(121), Int16(-12)] as (Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>));
        (var_1689283266739_1134 ?? var_1689283266739_370);
        var_1689283266739_816 * var_1689283266739_816
    }
}

func func_1689283266739_431(param_1689283266739_432 : Array<Int64>) : Unit { // block id: 433
    let var_1689283266739_1424 : Range<UInt32> = ((UInt32(UInt32(89))&127)..=(UInt32(UInt32(UInt16(UInt8(Int8(108)))))&127):(41|1));
    Class_1689283266739_435.func_1689283266739_440(var_1689283266739_1424);
    var loopTimeVar_1689283266739_1482 : Range<UInt64> = ((UInt64(UInt64(UInt32(Int8(UInt8(137)))))&127)..=(UInt64(UInt64(Int64(UInt8(Int8(2)))))&127):(Int64(UInt16(28))|1));
    for (i in loopTimeVar_1689283266739_1482 where (try { // block id: 1435
        ((Int64((-67))&127)..(Int64((-126))&127):(76|1));
        Option<Bool>.None
    } finally { // block id: 1438
        if (var_1689283266739_531) { Option<Bool>.None } else { Option<Bool>.Some(true) } 
    } ?? match (Class_1689283266739_19()) {
        case caseVar_1689283266739_1448 : Class_1689283266739_435 => 
            var_1689283266739_167;
            var_1689283266739_539 || false
        
        case _ : Int16 => 
            var_1689283266739_539
        
        case caseVar_1689283266739_1460 : Interface_1689283266739_494 => 
            ();
            var var_1689283266739_1465 : UInt32 = UInt32(UInt32(156));
            var var_1689283266739_1469 : UInt32 = UInt32(Int16(UInt16(UInt16(Int16(116)))));
            var_1689283266739_1465 ^= var_1689283266739_1469;
            var_1689283266739_539
        
        case _ => 
            var_1689283266739_539 && var_1689283266739_539
        
    })) {

    }
}








public func func_1689283266739_130<T0>(param_1689283266739_131 : Array<UInt64>) : Unit { // block id: 132
    let var_1689283266739_422 : (Range<UInt64>) -> Range<Int32> = func_1689283266739_143<Range<Int64>, Range<UInt32>>;
    let var_1689283266739_426 : UInt64 = UInt64(87);
    let var_1689283266739_1536 : Int64 = Int64(UInt8(39));
    func func_1689283266739_136(namedParam_1689283266739_137 ! : Int64, namedParam_1689283266739_138 ! : UInt32) : Array<Range<Int32>> { // block id: 139
        let var_1689283266739_364 : Range<UInt64> = ((UInt64(UInt64(236))&127)..=(UInt64(UInt64(34))&127):((-64)|1));
        try { // block id: 141
            var var_1689283266739_357 : (Range<UInt64>) -> Range<Int32> = { lambdaParameter_1689283266739_360 : Range<UInt64> => ((Int32(Int32(124))&127)..=(Int32(Int32(5))&127):(49|1)) };
            var_1689283266739_364|>var_1689283266739_357
        } finally { // block id: 366
            var_1689283266739_370[3];
            ((UInt64(var_1689283266739_426)&127)..(UInt64(var_1689283266739_426)&127):(109|1))|>var_1689283266739_422
        };
        let var_1689283266739_1495 : (Array<Int64>) -> Unit = func_1689283266739_431;
        var var_1689283266739_1531 : Int64 = 53;
        if (match (Option<Class_1689283266739_435>.None) {
            case caseVar_1689283266739_1502 => 
                false;
                true
            
            case caseVar_1689283266739_1508 : Int64 => 
                var var_1689283266739_1512 : UInt8 = UInt8(63);
                var_1689283266739_1512 <= var_1689283266739_1512
            
            case _ => 
                var_1689283266739_370;
                var_1689283266739_531
            
        }) { if (true) { // block id: 1521
            UInt8(209);
            [102, (-37), (-81), var_1689283266739_185, 80, 78, var_1689283266739_1531, (-104), var_1689283266739_185, var_1689283266739_1536]
        } else { // block id: 1539
            if (true) { [2, (-43), (-4), 77, (-48), 117, (-42), (-84), 1, (-47)] } else { [var_1689283266739_1536, 51, var_1689283266739_185, var_1689283266739_185, var_1689283266739_185, var_1689283266739_1550, var_1689283266739_1536, var_1689283266739_1531, 35, 31] } 
        } } else { [12, var_1689283266739_1550, (-40), (-126), var_1689283266739_185, (-28), (-69), 13, var_1689283266739_1536, var_1689283266739_1531] } |>var_1689283266739_1495;
        try { // block id: 1571
            var var_1689283266739_1576 : Bool = (Class_1689283266739_491() is (Int8, Range<UInt8>, Range<UInt32>) -> UInt16);
            try { // block id: 1573
                var_1689283266739_1576 ||= var_1689283266739_1576;
                var_1689283266739_253 >>= ((Int32(70)) & 7);
                var_1689283266739_1584
            } catch (e: Exception) { // block id: 1586
                var_1689283266739_1584
            }
        } finally { // block id: 1588
            if (var_1689283266739_539) { // block id: 1591
                var_1689283266739_995;
                var_1689283266739_995 >>= ((var_1689283266739_995) & 7)
            } else if (true) { // block id: 1597
                ();
                var_1689283266739_816 ^= Int16(-1)
            };
            if (var_1689283266739_531) { // block id: 1604

            } else if (false) { // block id: 1606
                ()
            };
            [((Int32(Int32(-6))&127)..=(Int32(var_1689283266739_248)&127):((-70)|1)), ((Int32(Int32(-29))&127)..=(Int32(Int32(126))&127):((-90)|1)), ((Int32(Int32(-57))&127)..(Int32(Int32(-118))&127):((-59)|1)), ((Int32(Int32(52))&127)..=(Int32(var_1689283266739_248)&127):(var_1689283266739_1550|1)), ((Int32(Int32(70))&127)..=(Int32(var_1689283266739_248)&127):(var_1689283266739_1531|1)), ((Int32(Int32(45))&127)..=(Int32(Int32(97))&127):((-94)|1)), ((Int32(Int32(2))&127)..(Int32(Int32(-128))&127):((-39)|1)), ((Int32(Int32(-73))&127)..=(Int32(Int32(-12))&127):((-72)|1)), var_1689283266739_1630, ((Int32(Int32(-125))&127)..=(Int32(Int32(-50))&127):((-71)|1))]
        }
    }
;
    func_1689283266739_136(namedParam_1689283266739_137 : (var_1689283266739_703 ?? var_1689283266739_185), namedParam_1689283266739_138 : try { // block id: 1637
        if (var_1689283266739_539) { Option<Int64>.Some(68) } else { Option<Int64>.Some((-102)) } ;
        var_1689283266739_464
    } catch (e: Exception) { // block id: 1645
        var_1689283266739_720 >>= ((var_1689283266739_426) & 7);
        -var_1689283266739_464
    })[8];
    match (try { // block id: 1654
        if (var_1689283266739_531) { var_1689283266739_1658 } else { var_1689283266739_1658 } 
    } catch (_) { // block id: 1661
        var_1689283266739_167;
        r'X'
    }) {
        case r'q' => 
            var_1689283266739_544;
            var_1689283266739_810;
            UInt8(104)
        
        case caseVar_1689283266739_1672 : (Range<UInt32>, Range<Int8>, Int16, Range<Int8>, (Int32, Range<UInt64>, Array<Int16>, Range<Int32>, Option<Int64>)) => 
            var_1689283266739_995 *= var_1689283266739_995;
            if (var_1689283266739_531) { var_1689283266739_1658 } else { r'1' } ;
            var_1689283266739_1682
        
        case r'P' => 
            var_1689283266739_544;
            UInt8(160)
        
        case _ => 
            -UInt8(243)
        
    };
    var var_1689283266739_1695 : Bool = (Int8(UInt8(144)) is Class_1689283266739_491);
    if (var_1689283266739_1695) { // block id: 1699
        var loopTimeVar_1689283266739_1704 : Int64 = 0;
        do {
            loopTimeVar_1689283266739_1704++;

        } while ((true) && loopTimeVar_1689283266739_1704 < 100 ) ;
        var loopTimeVar_1689283266739_1717 : Array<Class_1689283266739_435> = [Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_491(), Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(-7))&127)..(Int8(Int8(Int8(-120)))&127):(Int64(Int8(-74))|1)), namedParam_1689283266739_487 : UInt8(204)), Class_1689283266739_435(), Class_1689283266739_435(namedParam_1689283266739_486 : ((Int8(Int8(86))&127)..=(Int8(Int8(UInt8(15)))&127):(87|1)), namedParam_1689283266739_487 : UInt8(106)), Class_1689283266739_435(), Class_1689283266739_435(), Class_1689283266739_435(Int32(93)), Class_1689283266739_435()];
        for (i in loopTimeVar_1689283266739_1717 where var_1689283266739_539) {
            let var_1689283266739_1712 : Int8 = Int8(-109);
            if (var_1689283266739_1695) { ((Int8(var_1689283266739_1712)&127)..=(Int8(Int8(-112))&127):(var_1689283266739_1536|1)) } else { var_1689283266739_686 } 
        };
        var_1689283266739_253 += Int32(-36)
    }
}



public func func_1689283266739_126(namedParam_1689283266739_127 ! : Range<UInt64>) : UInt32 { // block id: 128
    var var_1689283266739_2055 : (Array<UInt64>) -> Unit = func_1689283266739_130<UInt64>;
    try { // block id: 2058
        var_1689283266739_1408;
        let var_1689283266739_2061 : ?Bool = (() as Bool);
        var_1689283266739_2061;
        var var_1689283266739_2081 : UInt64 = UInt64(148);
        if (true) { [var_1689283266739_720, UInt64(214), var_1689283266739_720, var_1689283266739_720, UInt64(127), var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, var_1689283266739_720, UInt64(93)] } else { [UInt64(111), var_1689283266739_720, var_1689283266739_2081, UInt64(6), UInt64(44), UInt64(231), UInt64(169), var_1689283266739_2081, var_1689283266739_2081, var_1689283266739_720] } 
    } catch (_) { // block id: 2090
        [(-52), (-15), 26, 72, (-78), 97, (-25), 84, 3, 27];
        Option<Array<Option<Int64>>>.Some(var_1689283266739_1869);
        if (false) { [UInt64(102), UInt64(74), UInt64(228), UInt64(163), UInt64(25), UInt64(203), UInt64(164), UInt64(26), UInt64(105), UInt64(155)] } else { [UInt64(185), UInt64(115), UInt64(59), UInt64(85), UInt64(156), UInt64(253), UInt64(178), UInt64(39), UInt64(26), UInt64(138)] } 
    } finally { // block id: 2098
        var_1689283266739_185 = var_1689283266739_1550;
        [UInt64(21), var_1689283266739_720, var_1689283266739_720, UInt64(249), UInt64(1), UInt64(1), var_1689283266739_720, UInt64(229), var_1689283266739_720, UInt64(128)]
    }|>var_1689283266739_2055;
    var var_1689283266739_2117 : (Array<Bool>, Unit, Int32, Option<Int64>, Unit, Bool, Int32) = ([false, false, true, true, false, true, false, false, true, true], (), Int32(Int8(3)), (Option<Unit>.Some(()) as Int64), (), true, Int32(Int16(UInt16(UInt16(191)))));
    var var_1689283266739_2138 : Bool = true;
    var loopTimeVar_1689283266739_2166 : Range<UInt64> = ((UInt64(UInt64(Int64(UInt16(Int8(-95)))))&127)..=(UInt64(UInt64(33))&127):(Int64(UInt16(21))|1));
    let var_1689283266739_2199 : Array<Int16> = [Int16(118), Int16(-74), Int16(-122), Int16(13), Int16(-48), Int16(41), Int16(-79), Int16(-113), Int16(103), Int16(-43)];
    var var_1689283266739_2218 : Int32 = Int32(UInt16(UInt16(Int16(UInt8(97)))));
    var var_1689283266739_2246 : UInt8 = UInt8(240);
    var var_1689283266739_2290 : Option<Bool> = Option<Bool>.None;
    (try { // block id: 2115
        var_1689283266739_2117;
        var_1689283266739_720--;
        [true, false, true, false, false, true, false, false, true, false]
    } finally { // block id: 2135
        var_1689283266739_2138 ||= var_1689283266739_2141;
        [var_1689283266739_539, true, true, var_1689283266739_2138, false, false, var_1689283266739_531, var_1689283266739_2141, false, true]
    }, (Option<Unit>.Some(()) ?? for (i in loopTimeVar_1689283266739_2166 where true) {
        107.0
    }), match (var_1689283266739_1066) {
        case _ => 
            Int32(-95)
        
        case caseVar_1689283266739_2183 : Option<Class_1689283266739_435> => 
            Option<Class_1689283266739_435>.Some(var_1689283266739_649);
            var_1689283266739_2189 *= 86.0;
            var_1689283266739_248 % ((var_1689283266739_253) | 1)
        
        case _ : Array<Range<Int32>> => 
            var_1689283266739_2199;
            var_1689283266739_2202;
            var_1689283266739_248 % ((Int32(-76)) | 1)
        
        case _ : String => 
            var_1689283266739_253
        
        case _ => 
            let var_1689283266739_2214 : Unit = ();
            var_1689283266739_2214;
            var_1689283266739_2218 & var_1689283266739_253
        
    }, match (var_1689283266739_1110) {
        case _ => 
            var_1689283266739_1843
        
        case caseVar_1689283266739_2233 => 
            var_1689283266739_2218--;
            Option<(Array<Int16>, Range<Int32>, Array<Int16>, Float64, Range<Int8>, Range<UInt32>, Float32, Array<Int64>)>.None;
            var_1689283266739_852
        
        case _ => 
            Option<Int64>.Some(var_1689283266739_185);
            var_1689283266739_2246++;
            let var_1689283266739_2251 : ?Int64 = (Int8(61) as Int64);
            if (true) { var_1689283266739_2251 } else { Option<Int64>.Some(var_1689283266739_1550) } 
        
        case _ => 
            if (true) { Option<Int64>.Some(var_1689283266739_1550) } else { var_1689283266739_703 } 
        
        case _ => 
            var_1689283266739_2246 *= UInt8(181);
            if (false) { Option<Int64>.None } else { Option<Int64>.None } 
        
    }, (var_1689283266739_995 %= ((try { // block id: 2276
        Int8(-79)
    } catch (_) { // block id: 2278
        Int8(-60)
    } finally { // block id: 2280
        Int8(-45)
    }) | 1)), (if (var_1689283266739_2138) { var_1689283266739_2290 } else { Option<Bool>.Some(var_1689283266739_2294) }  ?? (Option<Bool>.None ?? true)), Int32(123));
    UInt32(86)
}



public func func_1689283266739_42(optionalParam_1689283266739_43 ! : Range<Int8> = ((Int8(Int8(Int8(108)))&127)..=(Int8(Int8(64))&127):(55|1))) : Array<Int64> { // block id: 49
    var var_1689283266739_69 : ?Int64 = (Int32(Int8(UInt8(UInt8(109)))) as Int64);
    [(-36), var_1689283266739_53, ((var_1689283266739_64, ((Int32(Int32(-107))&127)..=(Int32(Int32(-29))&127):((-72)|1)), var_1689283266739_69, false, var_1689283266739_77, r'W')[2] ?? (-73) ** UInt64(178)), if ([false, false, true, true, true, false, true, false, true, false][9]) { // block id: 89
        var_1689283266739_91;
        29
    } else { // block id: 94
        (var_1689283266739_64, var_1689283266739_98, Option<Int64>.None, var_1689283266739_102, ((UInt16(UInt16(97))&127)..(UInt16(UInt16(157))&127):(47|1)), var_1689283266739_91);
        var_1689283266739_53
    }, Int64(func_1689283266739_126(namedParam_1689283266739_127 : ((UInt64(UInt64(8))&127)..(UInt64(UInt64(9))&127):((-50)|1)))), (if (true) { // block id: 2309
        ();
        var_1689283266739_2312;
        Option<Int64>.None
    } else if (var_1689283266739_539) { // block id: 2316
        var_1689283266739_2318
    } else { // block id: 2321
        if (false) { Option<Int64>.Some(var_1689283266739_2326) } else { Option<Int64>.Some(var_1689283266739_185) } ;
        var var_1689283266739_2333 : Int8 = Int8(125);
        var_1689283266739_2333 ^= Int8(-1);
        if (var_1689283266739_531) { var_1689283266739_2318 } else { var_1689283266739_2318 } 
    } ?? match (false) {
        case _ => 
            var_1689283266739_1795;
            var_1689283266739_995 >>= ((Int8(108)) & 7);
            (-117)
        
    }), match ((var_1689283266739_2356 ?? Int16(-2))) {
        case _ => 
            (-28)
        
        case 107 | -13 | -20 => 
            var_1689283266739_2326
        
        case -5 | 34 | 112 => 
            50 >= 3;
            var_1689283266739_720 <<= ((UInt64(190)) & 7);
            var_1689283266739_1550
        
        case _ => 
            var_1689283266739_185 - 69
        
    }, 57, try { // block id: 2384
        var_1689283266739_185 - var_1689283266739_1550
    } finally { // block id: 2388
        ();
        if (var_1689283266739_2141) { var_1689283266739_1110 } else { var_1689283266739_1110 } ;
        52
    }, try { // block id: 2396
        (var_1689283266739_649, [Int32(-62), Int32(-106), Int32(67), Int32(123), var_1689283266739_248, var_1689283266739_248, Int32(93), var_1689283266739_248, Int32(-31), Int32(15)]);
        (-58)
    } catch (e: Exception) { // block id: 2411
        let var_1689283266739_2452 : Float64 = 120.0;
        (var_1689283266739_2414, ((Int32(Int32(60))&127)..(Int32(Int32(-120))&127):(16|1)), [var_1689283266739_816, Int16(-27), var_1689283266739_816, Int16(-59), var_1689283266739_816, Int16(-29), var_1689283266739_816, Int16(-60), var_1689283266739_816, Int16(76)], var_1689283266739_2452, ((Int8(Int8(86))&127)..=(Int8(Int8(-27))&127):((-40)|1)), var_1689283266739_231, Float32(-27.0), [var_1689283266739_185, var_1689283266739_53, var_1689283266739_2461, (-48), var_1689283266739_1550, var_1689283266739_53, var_1689283266739_185, 60, 55, var_1689283266739_1550]);
        ((Int8(Int8(14))&127)..(Int8(Int8(85))&127):(20|1));
        var_1689283266739_53
    }]
}

main(): Int64 {
    try {
        Class_1689283266739_19.var_1689283266739_26[7];
        func_1689283266739_42(optionalParam_1689283266739_43 : ((Int8(var_1689283266739_995)&127)..=(Int8(Int8(58))&127):(var_1689283266739_53|1)))[3]
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
