/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %overflow_wrapping %cmp_opt %f -o %output


public var var_1684954629132_49 : Bool = ('S' is Float64)
var var_1684954629132_70 : Unit = ()
public var var_1684954629132_83 : UInt64 = UInt64(Int8(UInt8(254)))
public var var_1684954629132_101 : Class_1684954629132_92 = Class_1684954629132_92()
let var_1684954629132_121 : Float32 = Float32(-65.0)
public let var_1684954629132_128 : Int8 = Int8(UInt8(221))
public var var_1684954629132_168 : Array<Int32> = [Int32(Int32(UInt32(Int32(-106)))), Int32(69), Int32(UInt16(164)), Int32(29), Int32(Int8(-13)), Int32(UInt32(Int32(Int32(-50)))), Int32(UInt32(156)), Int32(66), Int32(-12), Int32(Int16(Int8(Int8(-16))))]
public let var_1684954629132_274 : Class_1684954629132_92 = Class_1684954629132_92()
var var_1684954629132_302 : Int32 = Int32(81)
public var var_1684954629132_321 : (Option<Bool>, String) = (('Q' as Bool), """
Mxm)I
<fmGp
""")
public let var_1684954629132_478 : Bool = (Int8(37) is Option<Unit>)
let var_1684954629132_572 : (Int16, Float32) = (Int16(1), Float32(Float32(81.0)))
public let var_1684954629132_648 : Int64 = (-96)
public let var_1684954629132_692 : (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>) = ((Int32(Int32(-120))&127..=Int32(Int32(97))&127:(-84)|1), (UInt16(UInt16(98))&127..UInt16(UInt16(22))&127:(-81)|1), (UInt32(UInt32(Int32(111)))&127..UInt32(UInt32(Int8(93)))&127:((-13)|1)), (), Float32(Float32(-115.0)), (Int64((-25))&127..=Int64((-12))&127:(-122)|1))
let var_1684954629132_712 : ?Range<Int64> = (Option<Interface_1684954629132_98>.None as Range<Int64>)
let var_1684954629132_718 : Int64 = 116
public let var_1684954629132_805 : (Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64) = ([(UInt16(UInt16(137))&127..UInt16(UInt16(146))&127:12|1), (UInt16(UInt16(143))&127..=UInt16(UInt16(178))&127:61|1), (UInt16(UInt16(UInt16(103)))&127..UInt16(UInt16(20))&127:((-121)|1)), (UInt16(UInt16(249))&127..UInt16(UInt16(45))&127:111|1), (UInt16(UInt16(UInt16(210)))&127..=UInt16(UInt16(69))&127:(Int64(UInt32(110))|1)), (UInt16(UInt16(UInt8(205)))&127..=UInt16(UInt16(179))&127:(Int64(Int8(-61))|1)), (UInt16(UInt16(188))&127..=UInt16(UInt16(160))&127:(-102)|1), (UInt16(UInt16(101))&127..UInt16(UInt16(181))&127:99|1), (UInt16(UInt16(UInt8(137)))&127..=UInt16(UInt16(78))&127:(Int64(UInt32(80))|1)), (UInt16(UInt16(UInt16(233)))&127..=UInt16(UInt16(Int8(69)))&127:(Int64(77)|1))], ((Option<Bool>.None as Bool), "thJkgPh'CL"), Int8(113), (Int8(-3), Int32(-47), UInt32(246), (Int16(Int16(117))&127..Int16(Int16(-18))&127:(-111)|1)), UInt64(UInt16(Int16(-101))))
var var_1684954629132_927 : Int8 = Int8(Int8(52))
public let var_1684954629132_1046 : Range<UInt16> = (UInt16(UInt16(150))&127..=UInt16(UInt16(53))&127:24|1)
public var var_1684954629132_1095 : Range<UInt16> = (UInt16(UInt16(Int8(10)))&127..=UInt16(UInt16(198))&127:(Int64(Int8(Int8(67)))|1))
public var var_1684954629132_1148 : Int16 = Int16(UInt16(UInt8(UInt8(44))))
public let var_1684954629132_1191 : Float64 = (-42.0)
let var_1684954629132_1391 : Range<Int32> = (Int32(Int32(88))&127..=Int32(Int32(-72))&127:45|1)
var var_1684954629132_1484 : Interface_1684954629132_96 = Class_1684954629132_92()
let var_1684954629132_1539 : Struct_1684954629132_352 = Struct_1684954629132_352()
public var var_1684954629132_1551 : String = """
F<7PM
EH$|m
"""
public var var_1684954629132_1559 : UInt16 = UInt16(33)
public var var_1684954629132_1610 : Rune = 'd'
public let var_1684954629132_1689 : Option<Interface_1684954629132_98> = Option<Interface_1684954629132_98>.None
let var_1684954629132_1718 : UInt8 = UInt8(UInt8(Int8(Int8(Int8(95)))))
let var_1684954629132_1731 : (Range<UInt32>, Range<UInt8>, Bool, Interface_1684954629132_96) = ((UInt32(UInt32(83))&127..UInt32(UInt32(134))&127:104|1), (UInt8(UInt8(UInt8(212)))&127..UInt8(UInt8(210))&127:(Int64(Int8(-118))|1)), false, Class_1684954629132_92())
let var_1684954629132_1748 : Option<Struct_1684954629132_352> = Option<Struct_1684954629132_352>.None
public let var_1684954629132_1774 : Option<Interface_1684954629132_99> = Option<Interface_1684954629132_99>.None
var var_1684954629132_1828 : Unit = ()
public let var_1684954629132_1892 : Option<Option<Array<Range<UInt16>>>> = Option<Option<Array<Range<UInt16>>>>.None
public var var_1684954629132_1969 : UInt32 = UInt32(68)
var var_1684954629132_1995 : Float64 = Float64(Float32(Float32(-52.0)))
public let var_1684954629132_2047 : Unit = ()
public var var_1684954629132_2091 : Option<Unit> = (UInt32(Int8(86)) as Unit)
public var var_1684954629132_2293 : Option<(Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64)> = Option<(Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64)>.None
public var var_1684954629132_2413 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]

public func func_1684954629132_13(param_1684954629132_14 : UInt64) : UInt64 { // block id: 15
    let var_1684954629132_17 : Bool = (UInt8(Int8(109)) is Float32);
    var_1684954629132_17;
    let var_1684954629132_67 : UInt16 = UInt16(182);
    match ((Option<Bool>.Some(false) ?? try { // block id: 30
        var var_1684954629132_33 : Int8 = Int8(UInt8(83));
        var_1684954629132_33 &= Int8(25);
        ();
        var_1684954629132_17
    } catch (e: Exception) { // block id: 39
        let var_1684954629132_41 : Unit = ();
        var_1684954629132_41;
        0 ^ (-56);
        false || var_1684954629132_49
    } finally { // block id: 52
        ();
        var var_1684954629132_56 : UInt8 = UInt8(Int8(-127));
        var_1684954629132_56 /= ((UInt8(164)) | 1);
        true
    })) {
        case false => 
            UInt16(10) ^ var_1684954629132_67;
            var_1684954629132_70;
            let var_1684954629132_75 : UInt64 = UInt64(149);
            UInt64(230) ^ var_1684954629132_75
        
        case _ => 
            ();
            -84.0;
            var_1684954629132_83
        
    }
}

sealed public interface Interface_1684954629132_99 {

}

public interface Interface_1684954629132_98 <: Interface_1684954629132_99 {

}

public interface Interface_1684954629132_97 <: Interface_1684954629132_98 {

}

sealed public interface Interface_1684954629132_96 <: Interface_1684954629132_97 & Interface_1684954629132_99 {

}

sealed public interface Interface_1684954629132_95 <: Interface_1684954629132_96 {
    func func_1684954629132_659(namedParam_1684954629132_660 ! : Range<UInt64>, namedParam_1684954629132_661 ! : (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>)) : Interface_1684954629132_98 

}

public open class Class_1684954629132_92 <: Interface_1684954629132_95 {
    init() { // block id: 94

    }
;
    static mut prop var_1684954629132_251 : ?Bool { // block id: 252
        get() { // block id: 254
            Option<Bool>.None
        }

        set(Value) { // block id: 258
            ();
            ()
        }

    };
    mut prop var_1684954629132_277 : Int64 { // block id: 278
        get() { // block id: 280
            UInt32(66);
            Int64(Int32(-25));
            Int64(Int8(-9))
        }

        set(Value) { // block id: 288
            Class_1684954629132_92();
            ()
        }

    };
    static prop var_1684954629132_491 : Bool { // block id: 492
        get() { // block id: 494
            ([Int32(Int8(126)), Int32(-22), Int32(UInt8(178)), Int32(-11), Int32(UInt16(112)), Int32(50), Int32(UInt8(175)), Int32(Int8(89)), Int32(UInt8(30)), Int32(-115)] as Interface_1684954629132_98);
            Option<Unit>.None;
            ("RT~pSa\\`(w" is UInt32)
        }

    };
    static mut prop var_1684954629132_666 : Unit { // block id: 667
        get() { // block id: 669
            ();
            ();
            var_1684954629132_2426
        }

        set(Value) { // block id: 674
            (-88.0);
            [UInt64(206), UInt64(20), UInt64(20), UInt64(250), UInt64(28), UInt64(142), UInt64(235), UInt64(236), UInt64(28), UInt64(96)];
            ();
            var_1684954629132_2426 = Value
        }

    };
    public open func func_1684954629132_659(namedParam_1684954629132_660 ! : Range<UInt64>, namedParam_1684954629132_661 ! : (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>)) : Interface_1684954629132_98 { // block id: 662
        Class_1684954629132_92.var_1684954629132_666;
        (var_1684954629132_128, var_1684954629132_302, UInt32(249), (Int16(Int16(86))&127..Int16(Int16(-24))&127:(-5)|1))[3];
        Class_1684954629132_92()
    }
;
    public init(namedParam_1684954629132_563 ! : Range<Int64>, namedParam_1684954629132_564 ! : Int8, namedParam_1684954629132_565 ! : Option<Unit>) { // block id: 566
        try { // block id: 570
            var_1684954629132_572
        } finally { // block id: 577
            var_1684954629132_572
        }[1];
        let var_1684954629132_602 : UInt8 = UInt8(Int8(87));
        var loopTimeVar_1684954629132_613 : Int64 = 0;
        while ((try { // block id: 582
            UInt64(22);
            var_1684954629132_83 >= var_1684954629132_83
        } finally { // block id: 587
            var var_1684954629132_590 : UInt64 = UInt64(22);
            var_1684954629132_590 %= ((UInt64(183)) | 1);
            !var_1684954629132_478
        }) && loopTimeVar_1684954629132_613 < 100 ) {
            loopTimeVar_1684954629132_613++;
            let var_1684954629132_609 : Interface_1684954629132_96 = Class_1684954629132_92();
            ((UInt32(UInt32(116))&127..=UInt32(UInt32(86))&127:45|1), (UInt8(var_1684954629132_602)&127..UInt8(UInt8(185))&127:((-95)|1)), var_1684954629132_49, var_1684954629132_609)[3]
        };
        let var_1684954629132_616 : Struct_1684954629132_352 = Struct_1684954629132_352();
        var_1684954629132_616.func_1684954629132_619(namedParam_1684954629132_620 : (var_1684954629132_712 ?? (Int64(var_1684954629132_648)&127..=Int64(var_1684954629132_718)&127:(var_1684954629132_718|1))), optionalParam_1684954629132_621 : var_1684954629132_128)
    }
;
    static var var_1684954629132_876 : Unit = ();
    static var var_1684954629132_884 : Range<UInt32> = (UInt32(UInt32(89))&127..=UInt32(UInt32(183))&127:113|1);
    public mut prop var_1684954629132_1661 : Option<Interface_1684954629132_98> { // block id: 1662
        get() { // block id: 1664
            ();
            ();
            Option<Interface_1684954629132_98>.None
        }

        set(Value) { // block id: 1670
            ((Int32(Int32(4))&127..=Int32(Int32(23))&127:(-53)|1), (UInt16(UInt16(194))&127..UInt16(UInt16(223))&127:(Int64(UInt16(97))|1)), (UInt32(UInt32(101))&127..UInt32(UInt32(UInt8(89)))&127:((-128)|1)), (), Float32(115.0), (Int64((-113))&127..Int64((-30))&127:(-49)|1));
            ()
        }

    };
    static var var_1684954629132_2426 : Unit = ()
}


public struct Struct_1684954629132_352 {
    init() { // block id: 354

    }
;
    func func_1684954629132_619(namedParam_1684954629132_620 ! : Range<Int64>, optionalParam_1684954629132_621 ! : Int8 = Int8(UInt8(43))) : Interface_1684954629132_98 { // block id: 624
        let var_1684954629132_654 : Range<UInt8> = (UInt8(UInt8(77))&127..UInt8(UInt8(254))&127:99|1);
        ((if (var_1684954629132_478) { // block id: 633
            var_1684954629132_302 <<= ((var_1684954629132_302) & 7);
            Class_1684954629132_92();
            let var_1684954629132_643 : UInt8 = UInt8(UInt8(93));
            if (false) { (UInt8(UInt8(175))&127..UInt8(UInt8(54))&127:(-32)|1) } else { (UInt8(var_1684954629132_643)&127..=UInt8(UInt8(110))&127:(var_1684954629132_648|1)) } 
        } else { // block id: 650
            var_1684954629132_70;
            Class_1684954629132_92();
            var_1684954629132_654
        } as Interface_1684954629132_98) ?? var_1684954629132_101.func_1684954629132_659(namedParam_1684954629132_660 : (UInt64(UInt64(14))&127..UInt64(var_1684954629132_83)&127:(var_1684954629132_648|1)), namedParam_1684954629132_661 : var_1684954629132_692))
    }
;
    var var_1684954629132_1624 : Option<Class_1684954629132_92> = Option<Class_1684954629132_92>.None;
    public static mut prop var_1684954629132_1632 : Range<Int64> { // block id: 1633
        get() { // block id: 1635
            (UInt16(UInt16(Int8(-93)))&127..=UInt16(UInt16(UInt16(Int8(-8))))&127:(Int64(Int8(-3))|1));
            (Int64((-45))&127..Int64((-125))&127:(-67)|1)
        }

        set(Value) { // block id: 1647
            [UInt64(76), UInt64(194), UInt64(250), UInt64(56), UInt64(22), UInt64(53), UInt64(207), UInt64(254), UInt64(37), UInt64(254)];
            ()
        }

    }
}







public func func_1684954629132_463(param_1684954629132_464 : Bool) : (Option<Bool>, String) { // block id: 465
    var loopTimeVar_1684954629132_735 : Array<Bool> = [([UInt64(236), UInt64(244), UInt64(Int32(-11)), UInt64(7), UInt64(UInt16(78)), UInt64(Int16(81)), UInt64(UInt32(18)), UInt64(95), UInt64(46), UInt64(Int32(-64))] is Option<Interface_1684954629132_98>), ((UInt16(158) as Range<Int64>) is String), false, false, ((Int16(Int8(62)), Float32(Float32(-27.0))) is Option<Bool>), ((Int8(Int8(116)), Int32(-114), UInt32(125), (Int16(Int16(-82))&127..=Int16(Int16(107))&127:(18|1))) is (Int16, Float32)), true, true, false, ([(UInt16(UInt16(137))&127..=UInt16(UInt16(4))&127:(79|1)), (UInt16(UInt16(214))&127..UInt16(UInt16(224))&127:47|1), (UInt16(UInt16(85))&127..UInt16(UInt16(119))&127:(112|1)), (UInt16(UInt16(207))&127..UInt16(UInt16(16))&127:(10|1)), (UInt16(UInt16(93))&127..UInt16(UInt16(171))&127:(-37)|1), (UInt16(UInt16(97))&127..UInt16(UInt16(30))&127:(-122)|1), (UInt16(UInt16(87))&127..UInt16(UInt16(3))&127:3|1), (UInt16(UInt16(56))&127..=UInt16(UInt16(227))&127:((-44)|1)), (UInt16(UInt16(234))&127..UInt16(UInt16(235))&127:(-41)|1), (UInt16(UInt16(85))&127..=UInt16(UInt16(234))&127:64|1)] is Interface_1684954629132_97)];
    for (i in loopTimeVar_1684954629132_735 where if ([true, var_1684954629132_49, var_1684954629132_49, var_1684954629132_49, false, false, true, var_1684954629132_478, var_1684954629132_478, false][7]) { // block id: 484
        var var_1684954629132_486 : Bool = true;
        var_1684954629132_486
    } else if (Class_1684954629132_92.var_1684954629132_491) { // block id: 516
        var_1684954629132_274;
        var_1684954629132_49
    } else { // block id: 519
        var var_1684954629132_522 : Float64 = (-57.0);
        var_1684954629132_522 != 34.0
    }) {
        (Option<Int8>.Some(var_1684954629132_128) ?? var_1684954629132_128);
        var var_1684954629132_548 : Interface_1684954629132_96 = Class_1684954629132_92();
        let var_1684954629132_725 : Option<Unit> = Option<Unit>.None;
        var var_1684954629132_728 : Struct_1684954629132_352 = Struct_1684954629132_352();
        match (Option<Unit>.None) {
            case _ : Interface_1684954629132_97 => 
                var var_1684954629132_540 : Unit = ();
                var_1684954629132_540;
                ()
            
            case caseVar_1684954629132_545 : Range<UInt16> => 
                var_1684954629132_548;
                var_1684954629132_70;
                var_1684954629132_70
            
            case caseVar_1684954629132_554 => 
                var_1684954629132_121;
                ()
            
            case _ => 
                Class_1684954629132_92(namedParam_1684954629132_563 : (Int64((-102))&127..=Int64(19)&127:(-58)|1), namedParam_1684954629132_564 : Int8(-78), namedParam_1684954629132_565 : var_1684954629132_725);
                var_1684954629132_728;
                ()
            
            case _ => 
                [UInt64(64), UInt64(159), UInt64(220), UInt64(247), UInt64(107), UInt64(162), UInt64(84), UInt64(144), UInt64(4), UInt64(125)];
                ()
            
        }
    };
    var_1684954629132_805[1]
}

func func_1684954629132_459(param_1684954629132_460 : Range<UInt32>) : Unit { // block id: 461
    let var_1684954629132_858 : (Bool) -> (Option<Bool>, String) = func_1684954629132_463;
    ((UInt64(UInt64(14))&127..UInt64(UInt64(113))&127:113|1) is Interface_1684954629132_98)|>var_1684954629132_858;
    try { // block id: 865
        [(), (), (), (), (), (), (), (), (), ()]
    } finally { // block id: 867
        [(), (), (), (), (), (), (), (), (), ()]
    }[0];
    try { // block id: 871

    } catch (e: Exception) { // block id: 872
        Class_1684954629132_92.var_1684954629132_876;
        Option<Bool>.None;
        (Option<Unit>.None ?? ())
    }
}



public func func_1684954629132_396(param_1684954629132_397 : Interface_1684954629132_98) : Range<UInt16> { // block id: 398
    var var_1684954629132_411 : Float64 = Float64(Float64(Float32(23.0)));
    let var_1684954629132_989 : Range<UInt16> = (UInt16(UInt16(67))&127..UInt16(UInt16(163))&127:(-117)|1);
    func func_1684954629132_433(param_1684954629132_434 : Array<Range<UInt16>>, param_1684954629132_435 : Option<Interface_1684954629132_96>, namedParam_1684954629132_436 ! : Range<UInt32>) : Array<Range<UInt16>> { // block id: 437
        let var_1684954629132_912 : (UInt64) -> UInt64 = func_1684954629132_13;
        match (Class_1684954629132_92.func_1684954629132_442(Option<Interface_1684954629132_96>.None, optionalParam_1684954629132_444 : var_1684954629132_912)) {
            case _ => 
                var_1684954629132_70;
                (-33.0) - 114.0
            
        };
        var var_1684954629132_1013 : Array<Range<UInt16>> = [(UInt16(UInt16(131))&127..UInt16(UInt16(48))&127:(-76)|1), (UInt16(UInt16(21))&127..UInt16(UInt16(Int8(96)))&127:(Int64(Int32(Int8(58)))|1)), (UInt16(UInt16(238))&127..UInt16(UInt16(UInt8(UInt8(247))))&127:(Int64(UInt16(166))|1)), (UInt16(UInt16(242))&127..UInt16(UInt16(177))&127:83|1), (UInt16(UInt16(79))&127..UInt16(UInt16(108))&127:91|1), (UInt16(UInt16(100))&127..UInt16(UInt16(152))&127:(-34)|1), (UInt16(UInt16(17))&127..UInt16(UInt16(213))&127:(-61)|1), (UInt16(UInt16(178))&127..UInt16(UInt16(38))&127:(-78)|1), (UInt16(UInt16(89))&127..UInt16(UInt16(54))&127:(-102)|1), (UInt16(UInt16(UInt16(UInt16(23))))&127..UInt16(UInt16(82))&127:((-42)|1))];
        try { // block id: 921
            var loopTimeVar_1684954629132_931 : Range<UInt64> = (UInt64(UInt64(69))&127..UInt64(UInt64(32))&127:(35|1));
            for (i in loopTimeVar_1684954629132_931 where var_1684954629132_478) {
                var_1684954629132_927 ^= Int8(15)
            };
            let var_1684954629132_959 : UInt16 = UInt16(194);
            try { // block id: 937
                let var_1684954629132_939 : (Option<Bool>, String) = (Option<Bool>.None, "ti>Ddp.Bb|");
                var_1684954629132_939;
                var_1684954629132_718 - 122;
                let var_1684954629132_962 : UInt16 = UInt16(UInt16(63));
                [(UInt16(UInt16(48))&127..=UInt16(UInt16(210))&127:(var_1684954629132_648|1)), (UInt16(UInt16(0))&127..=UInt16(UInt16(209))&127:((-5)|1)), (UInt16(UInt16(28))&127..=UInt16(UInt16(86))&127:(-50)|1), (UInt16(UInt16(227))&127..UInt16(UInt16(24))&127:(-71)|1), (UInt16(var_1684954629132_959)&127..UInt16(var_1684954629132_962)&127:((-90)|1)), (UInt16(var_1684954629132_959)&127..=UInt16(var_1684954629132_959)&127:(var_1684954629132_718|1)), (UInt16(var_1684954629132_962)&127..=UInt16(var_1684954629132_959)&127:((-73)|1)), (UInt16(UInt16(217))&127..=UInt16(UInt16(76))&127:(-19)|1), (UInt16(UInt16(91))&127..UInt16(UInt16(15))&127:(100|1)), (UInt16(UInt16(146))&127..=UInt16(UInt16(86))&127:79|1)]
            } catch (e: Exception) { // block id: 980
                var_1684954629132_70;
                var_1684954629132_168;
                [(UInt16(var_1684954629132_959)&127..UInt16(var_1684954629132_959)&127:(var_1684954629132_648|1)), var_1684954629132_989, (UInt16(UInt16(118))&127..UInt16(var_1684954629132_959)&127:((-46)|1)), (UInt16(UInt16(104))&127..=UInt16(var_1684954629132_959)&127:((-115)|1)), (UInt16(UInt16(7))&127..=UInt16(UInt16(205))&127:31|1), var_1684954629132_989, var_1684954629132_989, var_1684954629132_989, (UInt16(UInt16(45))&127..=UInt16(UInt16(18))&127:(-31)|1), var_1684954629132_989]
            }
        } catch (e: Exception) { // block id: 1005
            (Option<Array<Range<UInt16>>>.None ?? var_1684954629132_1013)
        }
    }
;
    let var_1684954629132_1051 : Range<UInt16> = (UInt16(UInt16(218))&127..UInt16(UInt16(Int16(UInt8(118))))&127:(114|1));
    let var_1684954629132_1063 : UInt16 = UInt16(UInt16(237));
    var var_1684954629132_1075 : Range<UInt16> = (UInt16(UInt16(247))&127..UInt16(UInt16(UInt8(Int8(UInt8(232)))))&127:((-102)|1));
    if (((Option<Bool>.Some(var_1684954629132_49), var_1684954629132_411)[0] ?? [true, true, var_1684954629132_49, var_1684954629132_49, var_1684954629132_49, false, var_1684954629132_49, var_1684954629132_49, true, var_1684954629132_49][3])) { func_1684954629132_433([(UInt16(UInt16(61))&127..UInt16(UInt16(252))&127:(-64)|1), var_1684954629132_989, var_1684954629132_1046, var_1684954629132_1046, var_1684954629132_989, var_1684954629132_1051, var_1684954629132_1046, (UInt16(UInt16(138))&127..UInt16(UInt16(184))&127:56|1), (UInt16(UInt16(68))&127..=UInt16(var_1684954629132_1063)&127:(var_1684954629132_648|1)), var_1684954629132_989], Option<Interface_1684954629132_96>.None, namedParam_1684954629132_436 : (UInt32(UInt32(180))&127..=UInt32(UInt32(189))&127:(110|1)))[2] } else { var_1684954629132_1075 } 
}

public func func_1684954629132_386(param_1684954629132_387 : Class_1684954629132_92) : Unit { // block id: 388
    let var_1684954629132_1086 : Range<Int64> = (Int64((-89))&127..Int64(86)&127:((-18)|1));
    if ((var_1684954629132_83 != (UInt64(210)|>func_1684954629132_13))) { (Class_1684954629132_92(namedParam_1684954629132_563 : var_1684954629132_1086, namedParam_1684954629132_564 : var_1684954629132_128, namedParam_1684954629132_565 : Option<Unit>.Some(var_1684954629132_70))|>func_1684954629132_396) } else { var_1684954629132_1095 } ;
    var_1684954629132_70;
    var var_1684954629132_1117 : Float64 = 44.0;
    let var_1684954629132_1133 : Float32 = Float32(Float32(14.0));
    var var_1684954629132_1139 : UInt16 = UInt16(4);
    try { // block id: 1105
        Option<Array<Range<UInt16>>>.None.getOrThrow();
        if (false) { // block id: 1110
            var_1684954629132_70;
            ()
        } else if (true) { // block id: 1114
            var_1684954629132_1117 * (-30.0);
            [(UInt16(UInt16(217))&127..UInt16(UInt16(12))&127:(-84)|1), (UInt16(UInt16(201))&127..UInt16(UInt16(0))&127:(-9)|1), (UInt16(UInt16(153))&127..=UInt16(UInt16(24))&127:40|1), (UInt16(UInt16(241))&127..=UInt16(UInt16(135))&127:(-34)|1), (UInt16(UInt16(240))&127..=UInt16(UInt16(202))&127:(-32)|1), (UInt16(UInt16(1))&127..UInt16(UInt16(90))&127:(-7)|1), (UInt16(UInt16(83))&127..UInt16(UInt16(205))&127:16|1), (UInt16(UInt16(247))&127..UInt16(UInt16(32))&127:(-24)|1), (UInt16(UInt16(248))&127..=UInt16(UInt16(155))&127:84|1), (UInt16(UInt16(47))&127..UInt16(UInt16(154))&127:93|1)];
            var var_1684954629132_1123 : UInt8 = UInt8(UInt8(Int8(20)));
            var_1684954629132_1123 -= var_1684954629132_1123
        };
        var var_1684954629132_1130 : Float32 = Float32(114.0);
        var_1684954629132_1130 += var_1684954629132_1133
    } finally { // block id: 1136
        var_1684954629132_1139 = UInt16(26)
    }
}




public func func_1684954629132_8() : Range<UInt16> { // block id: 369
    let var_1684954629132_1143 : (Class_1684954629132_92) -> Unit = func_1684954629132_386;
    let var_1684954629132_1162 : (Bool, UInt8, Range<UInt8>, Range<Int16>, Float64) = ((() is UInt64), UInt8(Int8(Int8(37))), (UInt8(UInt8(246))&127..UInt8(UInt8(71))&127:(Int64(UInt64(UInt32(181)))|1)), (Int16(Int16(120))&127..=Int16(Int16(107))&127:(-87)|1), 45.0);
    let var_1684954629132_1195 : Option<Interface_1684954629132_98> = Option<Interface_1684954629132_98>.None;
    let var_1684954629132_1213 : Option<Array<Range<UInt16>>> = (UInt64(Int64(UInt16(Int16(-59)))) as Array<Range<UInt16>>);
    let var_1684954629132_1258 : ?Range<Int64> = (UInt64(62) as Range<Int64>);
    let var_1684954629132_1326 : Option<Unit> = Option<Unit>.None;
    let var_1684954629132_1347 : Interface_1684954629132_99 = Class_1684954629132_92();
    let var_1684954629132_1375 : ?(Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>) = Option<(Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>)>.None;
    var var_1684954629132_1383 : Int8 = Int8(-88);
    var var_1684954629132_1395 : UInt16 = UInt16(112);
    let var_1684954629132_1410 : Int64 = Int64(UInt8(Int8(Int8(Int8(23)))));
    let var_1684954629132_1422 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    try { // block id: 371
        let var_1684954629132_1183 : Range<Int16> = (Int16(Int16(UInt8(96)))&127..Int16(Int16(-105))&127:(Int64(115)|1));
        func func_1684954629132_382(param_1684954629132_383 : Option<Interface_1684954629132_98>) : Bool { // block id: 384
            try { // block id: 1146
                var_1684954629132_1148;
                var_1684954629132_101
            } catch (e: Exception) { // block id: 1154
                Class_1684954629132_92()
            }|>var_1684954629132_1143;
            var_1684954629132_70;
            try { // block id: 1160
                var_1684954629132_1162
            } finally { // block id: 1177
                (false, UInt8(79), (UInt8(UInt8(164))&127..=UInt8(UInt8(98))&127:(-51)|1), var_1684954629132_1183, var_1684954629132_1191)
            }[0]
        }
;
        let var_1684954629132_1237 : ?Bool = Option<Bool>.None;
        let var_1684954629132_1263 : Bool = ([(UInt16(UInt16(162))&127..=UInt16(UInt16(16))&127:16|1), (UInt16(UInt16(235))&127..UInt16(UInt16(234))&127:89|1), (UInt16(UInt16(252))&127..UInt16(UInt16(4))&127:73|1), (UInt16(UInt16(200))&127..=UInt16(UInt16(0))&127:45|1), (UInt16(UInt16(137))&127..UInt16(UInt16(84))&127:117|1), (UInt16(UInt16(210))&127..=UInt16(UInt16(13))&127:(-92)|1), (UInt16(UInt16(192))&127..=UInt16(UInt16(198))&127:(-53)|1), (UInt16(UInt16(20))&127..=UInt16(UInt16(226))&127:32|1), (UInt16(UInt16(69))&127..UInt16(UInt16(25))&127:34|1), (UInt16(UInt16(213))&127..=UInt16(UInt16(248))&127:(-10)|1)] is Range<UInt64>);
        let var_1684954629132_1282 : (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>) = ((Int32(Int32(-126))&127..Int32(Int32(UInt16(74)))&127:(2|1)), (UInt16(UInt16(105))&127..=UInt16(UInt16(109))&127:(Int64((-109))|1)), (UInt32(UInt32(112))&127..=UInt32(UInt32(228))&127:(23|1)), (), Float32(53.0), (Int64(Int64(UInt32(UInt32(96))))&127..=Int64((-91))&127:((-52)|1)));
        func func_1684954629132_373() : Interface_1684954629132_99 { // block id: 374
            var var_1684954629132_1206 : Option<Unit> = Option<Unit>.Some(());
            var var_1684954629132_1314 : Int16 = Int16(Int8(Int8(Int8(UInt8(10)))));
            if (func_1684954629132_382(var_1684954629132_1195)) { match (var_1684954629132_302) {
                case -83 => 
                    if (false) { Option<Unit>.None } else { var_1684954629132_1206 } 
                
                case -72 => 
                    var_1684954629132_1213;
                    (Int16(var_1684954629132_1148)&127..Int16(var_1684954629132_1148)&127:((-107)|1));
                    Option<Unit>.Some(())
                
                case caseVar_1684954629132_1227 => 
                    Float32(11.0) > var_1684954629132_121;
                    var_1684954629132_70;
                    Option<Unit>.None
                
                case _ => 
                    var_1684954629132_1237;
                    var var_1684954629132_1241 : UInt16 = UInt16(67);
                    var_1684954629132_1241 >>= ((var_1684954629132_1241) & 7);
                    if (true) { Option<Unit>.Some(()) } else { Option<Unit>.Some(()) } 
                
            } } else { match (var_1684954629132_1213) {
                case _ : Option<Range<UInt16>> => 
                    Option<Int8>.Some(var_1684954629132_927);
                    var_1684954629132_1258;
                    if (var_1684954629132_1263) { var_1684954629132_1206 } else { Option<Unit>.Some(()) } 
                
                case caseVar_1684954629132_1271 => 
                    var_1684954629132_1206
                
                case caseVar_1684954629132_1276 : Interface_1684954629132_97 => 
                    var_1684954629132_1191 + 40.0;
                    var_1684954629132_1282;
                    var_1684954629132_1206
                
                case caseVar_1684954629132_1309 => 
                    Class_1684954629132_92();
                    var_1684954629132_1314 ^= Int16(-127);
                    if (false) { Option<Unit>.Some(var_1684954629132_70) } else { var_1684954629132_1326 } 
                
                case _ => 
                    Option<Unit>.Some(var_1684954629132_70)
                
            } } .getOrThrow();
            var var_1684954629132_1342 : UInt32 = UInt32(Int32(-49));
            var var_1684954629132_1352 : Int64 = (-37);
            (Option<Interface_1684954629132_99>.Some(try { // block id: 1339
                var_1684954629132_1342 ^= var_1684954629132_1342;
                var_1684954629132_1347
            } catch (_) { // block id: 1349
                var_1684954629132_1352 <<= (((-70)) & 7);
                var_1684954629132_1347
            } finally { // block id: 1356
                Class_1684954629132_92()
            }) ?? Class_1684954629132_92())
        }
;
        func_1684954629132_373();
        Option<(Option<Bool>, Float64)>.Some((Option<Bool>.Some(var_1684954629132_49), var_1684954629132_1191)).getOrThrow();
        var_1684954629132_1375.getOrThrow()
    } catch (e: Exception) { // block id: 1377
        try { // block id: 1379
            ();
            var_1684954629132_1383 *= Int8(-67)
        } finally { // block id: 1386
            ()
        };
        Option<(Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>)>.None;
        let var_1684954629132_1402 : UInt32 = UInt32(UInt32(204));
        (var_1684954629132_1391, (UInt16(var_1684954629132_1395)&127..UInt16(var_1684954629132_1395)&127:(60|1)), (UInt32(UInt32(176))&127..=UInt32(var_1684954629132_1402)&127:(117|1)), var_1684954629132_70, Float32(-15.0), (Int64(var_1684954629132_1410)&127..Int64(var_1684954629132_718)&127:((-19)|1)))
    } finally { // block id: 1418
        var_1684954629132_1422[4];
        var var_1684954629132_1431 : Bool = false;
        var var_1684954629132_1454 : Int64 = (-3);
        try { // block id: 1426
            [var_1684954629132_478, true, var_1684954629132_1431, var_1684954629132_1431, false, var_1684954629132_49, var_1684954629132_478, var_1684954629132_478, var_1684954629132_1431, false];
            ((Int32(var_1684954629132_302)&127..=Int32(var_1684954629132_302)&127:((-53)|1)), (UInt16(UInt16(179))&127..UInt16(UInt16(100))&127:(-77)|1), (UInt32(UInt32(239))&127..UInt32(UInt32(180))&127:(var_1684954629132_1410|1)), var_1684954629132_70, var_1684954629132_121, (Int64(var_1684954629132_1454)&127..=Int64(57)&127:(80|1)))
        } catch (_) { // block id: 1458
            var_1684954629132_1162;
            var_1684954629132_692
        }
    };
    let var_1684954629132_1464 : (Int32, (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>), Float64, Float64, Range<UInt16>) = (Int32(77), ((Int32(Int32(-126))&127..=Int32(Int32(118))&127:71|1), (UInt16(UInt16(171))&127..=UInt16(UInt16(239))&127:5|1), (UInt32(UInt32(Int16(-26)))&127..UInt32(UInt32(142))&127:(Int64(Int8(-107))|1)), (), Float32(-61.0), (Int64((-55))&127..Int64(90)&127:(-47)|1)), 126.0, 66.0, (UInt16(UInt16(5))&127..=UInt16(UInt16(124))&127:(-30)|1));
    var_1684954629132_1464[4]
}



public func func_1684954629132_356(namedParam_1684954629132_357 ! : Array<UInt64>, optionalParam_1684954629132_358 ! : Rune = 't') : Struct_1684954629132_352 { // block id: 360
    ((func_1684954629132_8() as Interface_1684954629132_96) ?? var_1684954629132_1484);
    let var_1684954629132_1492 : UInt8 = UInt8(UInt8(Int8(Int8(-28))));
    var var_1684954629132_1512 : Range<Int16> = (Int16(Int16(75))&127..=Int16(Int16(-10))&127:((-110)|1));
    let var_1684954629132_1547 : Option<String> = ((-33) as String);
    var var_1684954629132_1564 : Int32 = Int32(UInt8(UInt8(156)));
    ((var_1684954629132_1492, var_1684954629132_1492, (Int16(Int16(-63))&127..=Int16(Int16(110))&127:(-75)|1), Struct_1684954629132_352(), "aYoc!FsvoV", (), (Int64((-19))&127..=Int64(111)&127:108|1))[1], var_1684954629132_1492, try { // block id: 1506
        var_1684954629132_49 &&= var_1684954629132_49;
        ();
        var_1684954629132_1512
    } catch (_) { // block id: 1517
        var_1684954629132_49 &&= false;
        var_1684954629132_70;
        if (false) { var_1684954629132_1512 } else { (Int16(Int16(-59))&127..=Int16(Int16(-76))&127:((-64)|1)) } 
    } finally { // block id: 1529
        (Int16(Int16(122))&127..=Int16(Int16(46))&127:120|1)
    }, (Option<Struct_1684954629132_352>.Some(Struct_1684954629132_352()) ?? var_1684954629132_1539), (var_1684954629132_1547 ?? var_1684954629132_1551), ((UInt16(UInt16(55))&127..UInt16(var_1684954629132_1559)&127:(126|1)), (Int32(var_1684954629132_1564)&127..=Int32(var_1684954629132_1564)&127:(var_1684954629132_718|1)), var_1684954629132_70, 5.0)[2], if (var_1684954629132_49) { // block id: 1575
        var var_1684954629132_1577 : Option<Interface_1684954629132_98> = (Int8(-112) as Interface_1684954629132_98);
        var_1684954629132_1577;
        var_1684954629132_1559 <<= ((UInt16(235)) & 7);
        var var_1684954629132_1584 : Range<Int64> = (Int64(Int64(Int64(Int64(UInt16(183)))))&127..=Int64(Int64(Int32(-29)))&127:((-71)|1));
        var_1684954629132_1584
    } else { // block id: 1593
        ();
        if (var_1684954629132_49) { (Int64(var_1684954629132_718)&127..=Int64((-32))&127:(var_1684954629132_648|1)) } else { (Int64(var_1684954629132_648)&127..=Int64((-19))&127:(var_1684954629132_648|1)) } 
    })[3]
}


public func func_1684954629132_347(namedParam_1684954629132_348 ! : Float64, namedParam_1684954629132_349 ! : Array<Int32>) : Class_1684954629132_92 { // block id: 350
    func_1684954629132_356(namedParam_1684954629132_357 : [UInt64(29), UInt64(112), UInt64(12), UInt64(212), UInt64(216), UInt64(225), UInt64(140), UInt64(189), UInt64(238), UInt64(28)], optionalParam_1684954629132_358 : if (var_1684954629132_49) { var_1684954629132_1610 } else { var_1684954629132_1610 } ).func_1684954629132_1614()
}

func func_1684954629132_336(param_1684954629132_337 : UInt8) : Int16 { // block id: 338
    var_1684954629132_101;
    (func_1684954629132_347(namedParam_1684954629132_348 : var_1684954629132_1191, namedParam_1684954629132_349 : var_1684954629132_168).var_1684954629132_1661 ?? (var_1684954629132_1689 ?? try { // block id: 1692
        var var_1684954629132_1694 : Interface_1684954629132_98 = Class_1684954629132_92();
        var_1684954629132_1694
    } catch (e: Exception) { // block id: 1696
        var_1684954629132_70;
        Class_1684954629132_92()
    }));
    var_1684954629132_1148
}


func func_1684954629132_332(param_1684954629132_333 : UInt16) : Unit { // block id: 334
    let var_1684954629132_1701 : (UInt8) -> Int16 = func_1684954629132_336;
    match ((Option<Struct_1684954629132_352>.Some(Struct_1684954629132_352()) ?? Struct_1684954629132_352())) {
        case _ => 
            var_1684954629132_70;
            var var_1684954629132_1714 : UInt8 = UInt8(Int8(-128));
            var_1684954629132_1714 *= var_1684954629132_1718;
            UInt8(196) % ((UInt8(46)) | 1)
        
        case _ : Class_1684954629132_92 => 
            var_1684954629132_1731;
            (UInt16(UInt16(2))&127..=UInt16(UInt16(81))&127:12|1);
            var_1684954629132_1718
        
        case _ => 
            var_1684954629132_1748;
            ();
            var_1684954629132_1718
        
        case _ => 
            UInt8(64)
        
    }|>var_1684954629132_1701;
    var var_1684954629132_1765 : Int8 = Int8(51);
    try { // block id: 1756
        let var_1684954629132_1761 : Interface_1684954629132_97 = Class_1684954629132_92();
        if (true) { // block id: 1759
            var_1684954629132_1761;
            var_1684954629132_1765--
        };
        [(), (), (), (), (), (), (), (), (), ()];
        try { // block id: 1769
            ();
            (Int32(Int32(-89))&127..Int32(Int32(81))&127:121|1)
        } finally { // block id: 1772
            var_1684954629132_1774;
            var_1684954629132_1148;
            (Int32(Int32(-32))&127..Int32(Int32(-81))&127:32|1)
        }
    } catch (e: Exception) { // block id: 1778
        Option<Unit>.None;
        ();
        let var_1684954629132_1791 : Int64 = Int64(Int64(UInt64(Int16(Int16(-57)))));
        (Option<Range<Int32>>.Some((Int32(Int32(45))&127..Int32(var_1684954629132_302)&127:(var_1684954629132_1791|1))) ?? (Int32(Int32(42))&127..=Int32(Int32(-125))&127:(-34)|1))
    } finally { // block id: 1798
        (Int32(Int32(88))&127..=Int32(Int32(93))&127:(-73)|1)
    };
    ()
}


func func_1684954629132_328(param_1684954629132_329 : Range<UInt32>) : Bool { // block id: 330
    var var_1684954629132_1802 : (UInt16) -> Unit = func_1684954629132_332;
    (Option<UInt16>.None ?? if (var_1684954629132_478) { // block id: 1812
        var var_1684954629132_1814 : Option<Class_1684954629132_92> = (Int16(-112) as Class_1684954629132_92);
        var_1684954629132_1814;
        -UInt16(132)
    } else { // block id: 1819
        UInt16(81)
    })|>var_1684954629132_1802;
    try { // block id: 1822
        var_1684954629132_49
    } finally { // block id: 1824
        try { // block id: 1826
            var_1684954629132_1828;
            var_1684954629132_1828;
            var var_1684954629132_1832 : Option<Interface_1684954629132_98> = (102.0 as Interface_1684954629132_98);
            var_1684954629132_1832
        } finally { // block id: 1835
            var_1684954629132_1191;
            ();
            let var_1684954629132_1839 : Option<Interface_1684954629132_98> = ((Int32(Int8(UInt8(198))), ((Int32(Int32(-98))&127..=Int32(Int32(36))&127:(26|1)), (UInt16(UInt16(205))&127..=UInt16(UInt16(72))&127:5|1), (UInt32(UInt32(100))&127..=UInt32(UInt32(226))&127:(-112)|1), (), Float32(Float32(73.0)), (Int64(22)&127..=Int64((-96))&127:((-42)|1))), 32.0, Float64((-50.0)), (UInt16(UInt16(UInt16(219)))&127..=UInt16(UInt16(Int16(125)))&127:(Int64(Int8(-81))|1))) as Interface_1684954629132_98);
            var_1684954629132_1839
        };
        var_1684954629132_478
    }
}



func func_1684954629132_313(param_1684954629132_314 : UInt16) : (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>) { // block id: 315
    var var_1684954629132_1871 : (Range<UInt32>) -> Bool = func_1684954629132_328;
    let var_1684954629132_1874 : Range<UInt32> = (UInt32(UInt32(79))&127..=UInt32(UInt32(Int16(UInt8(224))))&127:(Int64(Int64(Int16(Int16(-41))))|1));
    if ((var_1684954629132_321[0] ?? (var_1684954629132_1874|>var_1684954629132_1871))) { // block id: 1884

    } else if (((var_1684954629132_1892 ?? Option<Array<Range<UInt16>>>.Some([(UInt16(UInt16(113))&127..UInt16(UInt16(205))&127:38|1), (UInt16(UInt16(180))&127..=UInt16(UInt16(1))&127:11|1), (UInt16(UInt16(140))&127..=UInt16(UInt16(158))&127:(-40)|1), (UInt16(UInt16(190))&127..UInt16(UInt16(84))&127:64|1), (UInt16(UInt16(107))&127..=UInt16(UInt16(111))&127:110|1), (UInt16(UInt16(83))&127..=UInt16(UInt16(136))&127:51|1), (UInt16(UInt16(29))&127..UInt16(UInt16(31))&127:59|1), (UInt16(UInt16(140))&127..=UInt16(UInt16(133))&127:(-57)|1), (UInt16(UInt16(107))&127..=UInt16(UInt16(218))&127:(-60)|1), (UInt16(UInt16(220))&127..=UInt16(UInt16(192))&127:(-96)|1)])) is Option<Unit>)) { // block id: 1896
        (Option<(Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64)>.None ?? var_1684954629132_805);
        (Option<Unit>.None ?? ())
    };
    var_1684954629132_692
}


func func_1684954629132_307(param_1684954629132_308 : Rune) : Interface_1684954629132_95 { // block id: 309
    var var_1684954629132_1909 : (UInt16) -> (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>) = func_1684954629132_313;
    (if (true) { // block id: 1913
        ();
        var_1684954629132_1559
    } else { // block id: 1916
        var_1684954629132_1559 / ((UInt16(39)) | 1)
    }|>var_1684954629132_1909)[3];
    let var_1684954629132_1939 : Option<String> = (UInt16(UInt16(102)) as String);
    match (if (try { // block id: 1924
        ();
        var_1684954629132_478
    } catch (_) { // block id: 1927
        var_1684954629132_1828;
        ();
        false
    }) { Option<String>.Some(###"C}Ktcrt8BJ"###) } else { try { // block id: 1934
        var_1684954629132_101;
        if (true) { var_1684954629132_1939 } else { var_1684954629132_1939 } 
    } catch (_) { // block id: 1944
        if (var_1684954629132_478) { var_1684954629132_1939 } else { var_1684954629132_1939 } 
    } } ) {
        case caseVar_1684954629132_1951 : Option<Interface_1684954629132_98> => 
            if (false) { var_1684954629132_1610 } else { 'm' } 
        
        case caseVar_1684954629132_1959 => 
            var_1684954629132_1828;
            '9'
        
        case caseVar_1684954629132_1965 : (Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64) => 
            var_1684954629132_1969 <<= ((var_1684954629132_1969) & 7);
            if (false) { var_1684954629132_1610 } else { var_1684954629132_1610 } 
        
        case _ : Option<(Option<Bool>, Float64)> => 
            var_1684954629132_70;
            '6'
        
        case _ => 
            '0'
        
    };
    var var_1684954629132_2020 : Option<Interface_1684954629132_95> = (((Int32(Int32(Int8(74)))&127..Int32(Int32(Int32(84)))&127:(Int64(UInt32(181))|1)) as Range<Int32>) as Interface_1684954629132_95);
    var var_1684954629132_2038 : Option<UInt16> = (Int16(116) as UInt16);
    try { // block id: 1985
        if (true) { // block id: 1988
            var_1684954629132_1148 += Int16(-112);
            var_1684954629132_1828;
            var_1684954629132_1995 += var_1684954629132_1191
        } else if (var_1684954629132_478) { // block id: 2001
            var_1684954629132_1828;
            var var_1684954629132_2009 : Range<UInt8> = (UInt8(UInt8(44))&127..UInt8(UInt8(116))&127:(-8)|1);
            ((UInt32(UInt32(229))&127..=UInt32(var_1684954629132_1969)&127:(var_1684954629132_718|1)), var_1684954629132_2009, true, var_1684954629132_1484);
            ()
        };
        (var_1684954629132_2020 ?? Class_1684954629132_92())
    } finally { // block id: 2031
        try { // block id: 2033
            [true, true, true, false, true, true, true, true, true, true];
            if (false) { var_1684954629132_2038 } else { var_1684954629132_2038 } ;
            [var_1684954629132_70, var_1684954629132_70, var_1684954629132_1828, var_1684954629132_2047, (), var_1684954629132_70, (), var_1684954629132_1828, var_1684954629132_70, var_1684954629132_2047]
        } finally { // block id: 2055
            [(), (), (), (), (), (), (), (), (), ()]
        };
        let var_1684954629132_2069 : Interface_1684954629132_95 = Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(84)&127..Int64(Int64(125))&127:(Int64(UInt32(UInt8(45)))|1)), namedParam_1684954629132_564 : Int8(-24), namedParam_1684954629132_565 : (UInt8(140) as Unit));
        try { // block id: 2058
            var var_1684954629132_2060 : Interface_1684954629132_95 = Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(50)&127..Int64((-96))&127:(-1)|1), namedParam_1684954629132_564 : Int8(-68), namedParam_1684954629132_565 : Option<Unit>.None);
            var_1684954629132_2060
        } finally { // block id: 2065
            (Int16(Int16(71))&127..Int16(Int16(27))&127:75|1);
            ();
            var_1684954629132_2069
        }
    }
}

func func_1684954629132_293() : Unit { // block id: 294
    var var_1684954629132_2131 : Float32 = Float32(30.0);
    var var_1684954629132_2137 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    try { // block id: 296
        let var_1684954629132_298 : Interface_1684954629132_97 = Class_1684954629132_92();
        var_1684954629132_298;
        var_1684954629132_302 += var_1684954629132_302
    } catch (_) { // block id: 305
        let var_1684954629132_2082 : (Rune) -> Interface_1684954629132_95 = func_1684954629132_307;
        var_1684954629132_1610|>var_1684954629132_2082;
        var var_1684954629132_2117 : Float64 = Float64(Float64(Float64(Float32(-16.0))));
        let var_1684954629132_2124 : Option<Interface_1684954629132_98> = (UInt32(UInt32(Int32(-79))) as Interface_1684954629132_98);
        match (Option<Interface_1684954629132_96>.Some(Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(48)&127..Int64(83)&127:49|1), namedParam_1684954629132_564 : var_1684954629132_927, namedParam_1684954629132_565 : var_1684954629132_2091))) {
            case caseVar_1684954629132_2097 => 
                var_1684954629132_1559--;
                [(), var_1684954629132_1828, (), var_1684954629132_2047, (), (), (), (), var_1684954629132_70, ()];
                ()
            
            case _ => 
                var_1684954629132_2117 += var_1684954629132_1995;
                var_1684954629132_2124;
                var_1684954629132_2131 -= Float32(-67.0)
            
        }
    } finally { // block id: 2134
        var_1684954629132_2137[4];
        var loopTimeVar_1684954629132_2154 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        for (i in loopTimeVar_1684954629132_2154 where var_1684954629132_478) {
            var_1684954629132_805
        }
    }
}

func func_1684954629132_151(param_1684954629132_152 : Float32) : Int64 { // block id: 153
    var loopTimeVar_1684954629132_218 : Array<Int32> = [Int32(UInt16(184)), Int32(Int8(-62)), Int32(-29), Int32(Int32(UInt16(UInt16(137)))), Int32(-110), Int32(-26), Int32(40), Int32(Int16(65)), Int32(72), Int32(-3)];
    for (i in loopTimeVar_1684954629132_218 where match (var_1684954629132_168[1]) {
        case -50 => 
            true
        
        case _ : UInt16 => 
            var_1684954629132_70;
            var_1684954629132_70;
            var_1684954629132_49
        
        case 22 => 
            true
        
        case -80 => 
            'I';
            false
        
        case _ => 
            var_1684954629132_70;
            ();
            true
        
    }) {

    };
    var var_1684954629132_237 : Range<Int16> = (Int16(Int16(UInt8(Int8(UInt8(199)))))&127..Int16(Int16(18))&127:(Int64(UInt64(28))|1));
    var_1684954629132_237;
    if ((Class_1684954629132_92.var_1684954629132_251 ?? try { // block id: 262
        if (false) { [Int32(-14), Int32(-74), Int32(77), Int32(-81), Int32(103), Int32(42), Int32(101), Int32(-17), Int32(8), Int32(38)] } else { [Int32(66), Int32(-66), Int32(-61), Int32(111), Int32(-32), Int32(92), Int32(100), Int32(76), Int32(-80), Int32(-7)] } ;
        true
    } finally { // block id: 268
        !var_1684954629132_49
    })) { // block id: 271
        var_1684954629132_274.var_1684954629132_277
    } else { // block id: 291
        func_1684954629132_293();
        var_1684954629132_718 / ((var_1684954629132_648) | 1)
    }
}


public func func_1684954629132_143(param_1684954629132_144 : Interface_1684954629132_99, optionalParam_1684954629132_145 ! : Class_1684954629132_92 = Class_1684954629132_92()) : Int32 { // block id: 147
    var var_1684954629132_2209 : Option<Unit> = ((((UInt16(UInt16(56))&127..UInt16(UInt16(138))&127:((-4)|1)), (Int32(Int32(-83))&127..=Int32(Int32(-89))&127:91|1), (), Float64((-128.0))) as Array<Range<UInt16>>) as Unit);
    let var_1684954629132_2229 : Option<Int8> = ((Int32(-25), ((Int32(Int32(-2))&127..Int32(Int32(-88))&127:27|1), (UInt16(UInt16(201))&127..UInt16(UInt16(190))&127:(43|1)), (UInt32(UInt32(21))&127..=UInt32(UInt32(223))&127:(26|1)), (), Float32(84.0), (Int64((-119))&127..=Int64((-69))&127:123|1)), 110.0, 61.0, (UInt16(UInt16(92))&127..=UInt16(UInt16(217))&127:((-2)|1))) as Int8);
    if (match ((Float32(-14.0)|>func_1684954629132_151)) {
        case _ : Interface_1684954629132_99 => 
            var_1684954629132_1774;
            let var_1684954629132_2176 : Option<Option<Array<Range<UInt16>>>> = Option<Option<Array<Range<UInt16>>>>.None;
            var_1684954629132_2176;
            true
        
        case -28 => 
            var var_1684954629132_2184 : UInt8 = UInt8(Int8(UInt8(204)));
            var_1684954629132_2184 &= var_1684954629132_2184;
            var_1684954629132_49
        
        case -84 | 82 | 66 => 
            var_1684954629132_70;
            true
        
        case _ => 
            var_1684954629132_478 && true
        
    }) { // block id: 2200
        Option<Interface_1684954629132_95>.Some(Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(8)&127..=Int64(12)&127:(var_1684954629132_648|1)), namedParam_1684954629132_564 : Int8(14), namedParam_1684954629132_565 : var_1684954629132_2209));
        try { // block id: 2222
            ();
            UInt32(121)
        } finally { // block id: 2225
            if (false) { var_1684954629132_2229 } else { Option<Int8>.None } ;
            var_1684954629132_1484;
            var_1684954629132_1969
        }
    } else { // block id: 2255
        var loopTimeVar_1684954629132_2260 : Int64 = 0;
        do {
            loopTimeVar_1684954629132_2260++;

        } while ((false) && loopTimeVar_1684954629132_2260 < 100 ) ;
        ();
        var_1684954629132_1969
    };
    let var_1684954629132_2302 : Bool = false;
    let var_1684954629132_2338 : ?Int32 = Option<Int32>.Some(Int32(-87));
    if (false && false) { // block id: 2267
        var_1684954629132_302
    } else if ((var_1684954629132_1391 is Option<Unit>)) { // block id: 2271
        let var_1684954629132_2274 : Bool = false;
        var var_1684954629132_2279 : Bool = (((UInt16(UInt16(14))&127..UInt16(UInt16(117))&127:106|1), (Int32(Int32(UInt8(172)))&127..Int32(Int32(-90))&127:((-78)|1)), (), Float64(Float32(Float32(23.0)))) is (Range<UInt64>, (Range<Int32>, Range<UInt16>, Range<UInt32>, Unit, Float32, Range<Int64>)) -> Interface_1684954629132_98);
        var loopTimeVar_1684954629132_2297 : Int64 = 0;
        while ((var_1684954629132_2274) && loopTimeVar_1684954629132_2297 < 100 ) {
            loopTimeVar_1684954629132_2297++;
            if (var_1684954629132_2279) { var_1684954629132_2293 } else { Option<(Array<Range<UInt16>>, (Option<Bool>, String), Int8, (Int8, Int32, UInt32, Range<Int16>), UInt64)>.None } 
        };
        var_1684954629132_302
    } else { // block id: 2299
        var loopTimeVar_1684954629132_2331 : Int64 = 0;
        while ((var_1684954629132_2302) && loopTimeVar_1684954629132_2331 < 100 ) {
            loopTimeVar_1684954629132_2331++;
            let var_1684954629132_2306 : Option<Interface_1684954629132_98> = ([UInt64(UInt32(Int32(-82))), UInt64(43), UInt64(UInt8(Int8(-120))), UInt64(224), UInt64(65), UInt64(UInt32(7)), UInt64(Int32(UInt32(151))), UInt64(Int16(UInt8(171))), UInt64(Int64(Int8(-92))), UInt64(189)] as Interface_1684954629132_98);
            var_1684954629132_2306
        };
        (var_1684954629132_2338 ?? Int32(91))
    }
}

public func func_1684954629132_88(param_1684954629132_89 : UInt16) : UInt64 { // block id: 90
    var var_1684954629132_133 : Interface_1684954629132_98 = Class_1684954629132_92();
    var_1684954629132_101.func_1684954629132_104(namedParam_1684954629132_105 : -var_1684954629132_121, optionalParam_1684954629132_111 : if (var_1684954629132_49) { // block id: 125
        var_1684954629132_128 % ((Int8(102)) | 1);
        var_1684954629132_133;
        var_1684954629132_121
    } else if (var_1684954629132_49) { // block id: 137
        ();
        Float32(104.0)
    } else { // block id: 140
        var_1684954629132_121
    }, namedParam_1684954629132_114 : func_1684954629132_143(Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(1)&127..=Int64((-87))&127:(-54)|1), namedParam_1684954629132_564 : Int8(3), namedParam_1684954629132_565 : var_1684954629132_2091)))
}

func func_1684954629132_2347(param_1684954629132_2348 : UInt64) : UInt16 { // block id: 2349
    let var_1684954629132_2351 : Interface_1684954629132_95 = Class_1684954629132_92(namedParam_1684954629132_563 : (Int64(102)&127..Int64((-92))&127:(-47)|1), namedParam_1684954629132_564 : Int8(78), namedParam_1684954629132_565 : (UInt16(11) as Unit));
    var_1684954629132_2351;
    UInt8(15);
    var_1684954629132_1559
}

public func func_1684954629132_8(namedParam_1684954629132_9 ! : UInt16, namedParam_1684954629132_10 ! : UInt32) : UInt64 { // block id: 11
    let var_1684954629132_2360 : (UInt64) -> UInt16 = func_1684954629132_2347;
    if (true) { [UInt64(142), UInt64(9), UInt64(110), UInt64(209), UInt64(12), UInt64(222), UInt64(139), UInt64(217), UInt64(1), UInt64(190)] } else { [var_1684954629132_83, UInt64(76), UInt64(230), var_1684954629132_83, UInt64(178), UInt64(208), UInt64(73), var_1684954629132_83, UInt64(138), var_1684954629132_83] } [4]|>(var_1684954629132_2360~>func_1684954629132_88)
}

main(): Int64 {
    try {
        func_1684954629132_8(namedParam_1684954629132_9 : try { // block id: 2379
            let var_1684954629132_2384 : Range<UInt64> = (UInt64(UInt64(49))&127..=UInt64(UInt64(223))&127:(122|1));
            if (var_1684954629132_478) { (UInt64(UInt64(37))&127..UInt64(UInt64(145))&127:(-77)|1) } else { var_1684954629132_2384 } ;
            ();
            UInt16(191) / ((var_1684954629132_1559) | 1)
        } finally { // block id: 2393
            var_1684954629132_692;
            UInt16(132)
        }, namedParam_1684954629132_10 : if (false) { // block id: 2398
            (var_1684954629132_128, Int32(99), var_1684954629132_1969, (Int16(var_1684954629132_1148)&127..Int16(var_1684954629132_1148)&127:(126|1)));
            UInt32(197) - UInt32(59)
        } else { // block id: 2410
            var_1684954629132_1689;
            var_1684954629132_2413;
            UInt32(212) - UInt32(210)
        });
        var_1684954629132_2413[8];
        Int64((-8))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Struct_1684954629132_352 {
    public func func_1684954629132_1614() : Class_1684954629132_92 { // block id: 1615
        try { // block id: 1617
            var_1684954629132_1624.getOrThrow()
        } finally { // block id: 1626
            try { // block id: 1628
                """
b~jH+
6j(x=
""";
                Class_1684954629132_92(namedParam_1684954629132_563 : var_1684954629132_1632, namedParam_1684954629132_564 : var_1684954629132_128, namedParam_1684954629132_565 : Option<Unit>.Some(var_1684954629132_70))
            } finally { // block id: 1653
                var_1684954629132_49 &&= var_1684954629132_478;
                var_1684954629132_274
            }
        }
    }

}

extend Class_1684954629132_92 {
    public static func func_1684954629132_442(param_1684954629132_443 : Option<Interface_1684954629132_96>, optionalParam_1684954629132_444 ! : (UInt64) -> UInt64 = func_1684954629132_13) : Range<UInt16> { // block id: 448
        var loopTimeVar_1684954629132_891 : Int64 = 0;
        while ((try { // block id: 451
            var_1684954629132_302 > var_1684954629132_302
        } catch (_) { // block id: 455
            var_1684954629132_49
        }) && loopTimeVar_1684954629132_891 < 100 ) {
            loopTimeVar_1684954629132_891++;
            var_1684954629132_884|>func_1684954629132_459;
            if (var_1684954629132_491) { (Int32(Int32(78))&127..Int32(Int32(8))&127:117|1) } else { (Int32(Int32(-98))&127..=Int32(Int32(-82))&127:(-108)|1) } 
        };
        try { // block id: 893
            Option<Range<UInt16>>.Some((UInt16(UInt16(153))&127..UInt16(UInt16(250))&127:(-42)|1)).getOrThrow()
        } catch (e: Exception) { // block id: 901
            ();
            var loopTimeVar_1684954629132_908 : Int64 = 0;
            while ((var_1684954629132_49) && loopTimeVar_1684954629132_908 < 100 ) {
                loopTimeVar_1684954629132_908++;
                ()
            };
            (UInt16(UInt16(23))&127..UInt16(UInt16(22))&127:(-86)|1)
        }
    }
;
    public func func_1684954629132_104(namedParam_1684954629132_105 ! : Float32, optionalParam_1684954629132_106 ! : UInt16 = UInt16(Int8(UInt8(UInt8(155)))), optionalParam_1684954629132_111 ! : Float32 = Float32(Float32(-10.0)), namedParam_1684954629132_114 ! : Int32) : UInt64 { // block id: 115
        var_1684954629132_83|>func_1684954629132_13
    }

}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_redundant_modifier
// ASSERT: scan parse_unexpected_declaration_in_scope
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_expected_left_brace
// ASSERT: scan parse_expected_character
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_expected_expr_or_decl_in


