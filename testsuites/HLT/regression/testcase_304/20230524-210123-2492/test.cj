/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

var var_1684933283931_71 : Array<Bool> = [true, true, true, true, true, false, false, false, false, false]
public let var_1684933283931_79 : Bool = false
public let var_1684933283931_84 : Bool = ([UInt64(Int16(Int16(27))), UInt64(Int32(Int32(110))), UInt64(Int32(-74)), UInt64(196), UInt64(Int16(UInt8(196))), UInt64(22), UInt64(33), UInt64(118), UInt64(216), UInt64(153)] is UInt32)
public let var_1684933283931_114 : UInt8 = UInt8(108)
var var_1684933283931_177 : (Range<UInt16>, String, Rune, (Range<Int64>, String, Array<UInt64>, Int8), UInt16, Range<UInt32>, UInt8) = (((UInt16(UInt16(25))&127)..(UInt16(UInt16(33))&127):(44|1)), """
D}G,7
]sU1J
""", r'7', (((Int64(24)&127)..(Int64(15)&127):((-30)|1)), "XG79C.C0U3", [UInt64(3), UInt64(199), UInt64(119), UInt64(132), UInt64(3), UInt64(21), UInt64(135), UInt64(238), UInt64(89), UInt64(84)], Int8(112)), UInt16(152), ((UInt32(UInt32(UInt16(192)))&127)..=(UInt32(UInt32(Int8(UInt8(199))))&127):(((-20)|1))), UInt8(81))
public var var_1684933283931_461 : Unit = ()
public let var_1684933283931_467 : Unit = ()
public var var_1684933283931_470 : Class_1684933283931_6 = Class_1684933283931_6()
public var var_1684933283931_612 : Int16 = Int16(Int8(38))
var var_1684933283931_714 : Int64 = 29
public var var_1684933283931_717 : Range<Int16> = ((Int16(Int16(33))&127)..=(Int16(Int16(-51))&127):(116|1))
var var_1684933283931_740 : Float64 = Float64(Float32(-93.0))
var var_1684933283931_839 : Int32 = Int32(UInt16(18))
var var_1684933283931_853 : Rune = r'w'
public let var_1684933283931_970 : Array<UInt64> = [UInt64(96), UInt64(148), UInt64(87), UInt64(201), UInt64(57), UInt64(49), UInt64(6), UInt64(176), UInt64(207), UInt64(117)]
var var_1684933283931_1022 : Int64 = (-72)
public let var_1684933283931_1059 : Range<Int32> = ((Int32(Int32(Int8(Int8(122))))&127)..=(Int32(Int32(UInt8(Int8(UInt8(125)))))&127):((12|1)))
sealed public interface Interface_1684933283931_10 {
    func func_1684933283931_592(namedParam_1684933283931_593 ! : (Range<Int64>, String, Array<UInt64>, Int8)) : Interface_1684933283931_9 { // block id: 594
        var loopTimeVar_1684933283931_604 : Range<UInt64> = ((UInt64(UInt64(27))&127)..(UInt64(UInt64(75))&127):(((-61)|1)));
        (Option<Unit>.Some(for (i in loopTimeVar_1684933283931_604 where var_1684933283931_79) {

        }) ?? var_1684933283931_461);
        Int16(var_1684933283931_612);
        let var_1684933283931_622 : Struct_1684933283931_265 = Struct_1684933283931_265();
        var var_1684933283931_628 : Interface_1684933283931_9 = Class_1684933283931_6();
        (var_1684933283931_622.var_1684933283931_625 ?? var_1684933283931_628)
    }

}

sealed public interface Interface_1684933283931_9 <: Interface_1684933283931_10 {
    func func_1684933283931_592(namedParam_1684933283931_593 ! : (Range<Int64>, String, Array<UInt64>, Int8)) : Interface_1684933283931_9 { // block id: 594
        var loopTimeVar_1684933283931_604 : Range<UInt64> = ((UInt64(UInt64(27))&127)..(UInt64(UInt64(75))&127):(((-61)|1)));
        (Option<Unit>.Some(for (i in loopTimeVar_1684933283931_604 where var_1684933283931_79) {

        }) ?? var_1684933283931_461);
        Int16(var_1684933283931_612);
        let var_1684933283931_622 : Struct_1684933283931_265 = Struct_1684933283931_265();
        var var_1684933283931_628 : Interface_1684933283931_9 = Class_1684933283931_6();
        (var_1684933283931_622.var_1684933283931_625 ?? var_1684933283931_628)
    }

}

public open class Class_1684933283931_6 <: Interface_1684933283931_9 {
    init() { // block id: 8

    }
;
    public static mut prop var_1684933283931_29 : Int8 { // block id: 30
        get() { // block id: 32
            UInt64(210);
            Int8(30);
            var_1684933283931_1100
        }

        set(Value) { // block id: 37
            UInt32(Int32(-59));
            ();
            var_1684933283931_1100 = Value
        }

    };
    let var_1684933283931_138 : Float32 = Float32(-102.0);
    public mut prop var_1684933283931_473 : Int32 { // block id: 474
        get() { // block id: 476
            Int32(Int8(-26))
        }

        set(Value) { // block id: 481
            ((Int32(Int32(Int8(124)))&127)..=(Int32(Int32(UInt8(UInt8(29))))&127):(((-73)|1)));
            UInt64(220);
            ()
        }

    };
    let var_1684933283931_517 : Struct_1684933283931_265 = Struct_1684933283931_265();
    prop var_1684933283931_525 : (Range<UInt16>, String, Rune, (Range<Int64>, String, Array<UInt64>, Int8), UInt16, Range<UInt32>, UInt8) { // block id: 526
        get() { // block id: 528
            [(r'Z' is Range<Int32>), true, (Int16(Int8(8)) is Struct_1684933283931_265), (Class_1684933283931_6() is Range<Int8>), false, true, (Class_1684933283931_6() is (Bool, String, String, String, (Range<Int64>, String, Array<UInt64>, Int8), UInt16)), (Float64(Float32(-94.0)) is Rune), false, (((Int64(67)&127)..(Int64(61)&127):(((-77)|1))) is UInt32)];
            (((UInt16(UInt16(218))&127)..(UInt16(UInt16(UInt8(152)))&127):((Int64(83)|1))), """
D`Ir]
Snr/Q
""", r'i', (((Int64((-17))&127)..=(Int64((-127))&127):(((-42)|1))), "C|6dB7\\AQV", [UInt64(15), UInt64(128), UInt64(205), UInt64(16), UInt64(232), UInt64(142), UInt64(148), UInt64(247), UInt64(106), UInt64(9)], Int8(Int8(-28))), UInt16(2), ((UInt32(UInt32(249))&127)..=(UInt32(UInt32(10))&127):(102|1)), UInt8(UInt8(74)))
        }

    };
    public init(param_1684933283931_46 : Float32, param_1684933283931_47 : Float64, param_1684933283931_48 : Int16, namedParam_1684933283931_49 ! : Int8) { // block id: 50
        let var_1684933283931_868 : (Bool) -> Unit = func_1684933283931_249;
        let var_1684933283931_962 : (Range<Int64>, String, Array<UInt64>, Int8) = (((Int64((-101))&127)..=(Int64(95)&127):((-66)|1)), """
w9lML
;(/3-
""", [UInt64(228), UInt64(43), UInt64(1), UInt64(203), UInt64(235), UInt64(56), UInt64(198), UInt64(152), UInt64(134), UInt64(43)], Int8(73));
        func func_1684933283931_243(param_1684933283931_244 : Array<UInt64>, param_1684933283931_245 : Array<Float32>, param_1684933283931_246 : Int64) : Int64 { // block id: 247
            Int64(Int32(-58)) != try { // block id: 874
                ();
                [true, true, false, true, true, false, true, false, false, false];
                var_1684933283931_714
            } catch (e: Exception) { // block id: 878
                ();
                var_1684933283931_714
            }|>var_1684933283931_868;
            var loopTimeVar_1684933283931_888 : Range<UInt64> = ((UInt64(UInt64(UInt8(190)))&127)..=(UInt64(UInt64(246))&127):((Int64(Int16(21))|1)));
            for (i in loopTimeVar_1684933283931_888 where true) {
                (Option<Unit>.Some(()) ?? ())
            };
            let var_1684933283931_908 : ?Bool = Option<Bool>.Some(false);
            var var_1684933283931_922 : UInt64 = UInt64(98);
            var var_1684933283931_947 : Float32 = Float32(-63.0);
            if ((try { // block id: 902
                if (true) { var_1684933283931_853 } else { r'1' } ;
                var_1684933283931_908
            } catch (e: Exception) { // block id: 911
                UInt32(178);
                var_1684933283931_461;
                Option<Bool>.None
            } finally { // block id: 915
                Option<Bool>.Some(true)
            } ?? try { // block id: 919
                var_1684933283931_922 ^= UInt64(159);
                ();
                UInt16(62) < UInt16(13)
            } finally { // block id: 930
                var_1684933283931_467;
                false
            })) { // block id: 933
                var loopTimeVar_1684933283931_938 : Int64 = 0;
                do {
                    loopTimeVar_1684933283931_938++;

                } while ((var_1684933283931_84) && loopTimeVar_1684933283931_938 < 100 ) ;
                if (var_1684933283931_84) { // block id: 941
                    if (true) { [Float32(37.0), Float32(-53.0), Float32(-115.0), Float32(-99.0), Float32(107.0), Float32(82.0), Float32(-28.0), Float32(38.0), Float32(-1.0), Float32(33.0)] } else { [var_1684933283931_947, Float32(67.0), var_1684933283931_947, var_1684933283931_947, var_1684933283931_947, var_1684933283931_947, var_1684933283931_947, Float32(22.0), Float32(90.0), Float32(53.0)] } ;
                    ()
                };
                var_1684933283931_714
            } else { // block id: 960
                var_1684933283931_962;
                73
            }
        }
;
        let var_1684933283931_976 : Float32 = Float32(Float32(Float32(-123.0)));
        let var_1684933283931_986 : Float32 = Float32(Float32(-93.0));
        (func_1684933283931_243(var_1684933283931_970, [Float32(-66.0), Float32(-114.0), var_1684933283931_976, var_1684933283931_976, var_1684933283931_976, Float32(-90.0), var_1684933283931_976, var_1684933283931_976, var_1684933283931_986, Float32(56.0)], var_1684933283931_714)|>func_1684933283931_63)[9]
    }
;
    public mut prop var_1684933283931_1085 : Int64 { // block id: 1086
        get() { // block id: 1088
            97
        }

        set(Value) { // block id: 1092
            ();
            ()
        }

    };
    static var var_1684933283931_1100 : Int8 = Int8(10);
    public open override func func_1684933283931_592(namedParam_1684933283931_593 ! : (Range<Int64>, String, Array<UInt64>, Int8)) : Interface_1684933283931_9 { // block id: 594
        var loopTimeVar_1684933283931_604 : Range<UInt64> = ((UInt64(UInt64(27))&127)..(UInt64(UInt64(75))&127):(((-61)|1)));
        (Option<Unit>.Some(for (i in loopTimeVar_1684933283931_604 where var_1684933283931_79) {

        }) ?? var_1684933283931_461);
        Int16(var_1684933283931_612);
        let var_1684933283931_622 : Struct_1684933283931_265 = Struct_1684933283931_265();
        var var_1684933283931_628 : Interface_1684933283931_9 = Class_1684933283931_6();
        (var_1684933283931_622.var_1684933283931_625 ?? var_1684933283931_628)
    }

    static init() {
    }
}

func func_1684933283931_262(param_1684933283931_124 : Range<Int8>, namedParam_1684933283931_125 ! : Range<UInt16>, namedParam_1684933283931_126 ! : Range<Int16>) : Unit { // block id: 127
    var var_1684933283931_135 : Class_1684933283931_6 = Class_1684933283931_6();
    var loopTimeVar_1684933283931_141 : Int64 = 0;
    while ((true) && loopTimeVar_1684933283931_141 < 100 ) {
        loopTimeVar_1684933283931_141++;
        Int16(Int16(-44));
        var_1684933283931_135.var_1684933283931_138
    }
}


public func func_1684933283931_63(param_1684933283931_64 : Int64) : Array<Float32> { // block id: 65
    var var_1684933283931_148 : UInt16 = UInt16(210);
    var loopTimeVar_1684933283931_153 : Int64 = 0;
    do {
        loopTimeVar_1684933283931_153++;
        var loopTimeVar_1684933283931_121 : Int64 = 0;
        while ((var_1684933283931_84) && loopTimeVar_1684933283931_121 < 100 ) {
            loopTimeVar_1684933283931_121++;

        };
        let var_1684933283931_143 : Range<Int8> = ((Int8(Int8(-8))&127)..(Int8(Int8(84))&127):((-33)|1));
        func_1684933283931_262(var_1684933283931_143, namedParam_1684933283931_125 : ((UInt16(UInt16(223))&127)..(UInt16(var_1684933283931_148)&127):((110|1))), namedParam_1684933283931_126 : ((Int16(Int16(78))&127)..=(Int16(Int16(-53))&127):(91|1)))
    } while ((if (var_1684933283931_71[9]) { // block id: 74
        66 == 21
    } else if (var_1684933283931_79) { // block id: 81
        ();
        var_1684933283931_84
    } else { // block id: 105
        let var_1684933283931_108 : Int64 = 36;
        var_1684933283931_108 * var_1684933283931_108;
        UInt8(32) != var_1684933283931_114
    }) && loopTimeVar_1684933283931_153 < 100 ) ;
    var var_1684933283931_169 : Int8 = Int8(UInt8(Int8(10)));
    (if (true) { Option<(Range<Int64>, String, Array<UInt64>, Int8)>.Some((((Int64((-3))&127)..(Int64(44)&127):((-26)|1)), ###"_~ #dlDDdi"###, [UInt64(178), UInt64(252), UInt64(224), UInt64(239), UInt64(191), UInt64(167), UInt64(66), UInt64(28), UInt64(185), UInt64(66)], var_1684933283931_169)) } else { Option<(Range<Int64>, String, Array<UInt64>, Int8)>.None }  ?? var_1684933283931_177[3])[1];
    let var_1684933283931_204 : Int32 = Int32(Int16(Int8(32)));
    var var_1684933283931_209 : (UInt64, Array<Float32>, Range<Int64>, Range<UInt8>) = (UInt64(183), [Float32(-98.0), Float32(-42.0), Float32(Float32(Float32(92.0))), Float32(-55.0), Float32(-16.0), Float32(88.0), Float32(-7.0), Float32(Float32(-47.0)), Float32(33.0), Float32(61.0)], ((Int64(78)&127)..(Int64((-59))&127):((-34)|1)), ((UInt8(UInt8(227))&127)..=(UInt8(UInt8(Int8(60)))&127):(((-108)|1))));
    var var_1684933283931_237 : Unit = ();
    try { // block id: 201
        ();
        var_1684933283931_204;
        var_1684933283931_209
    } catch (e: Exception) { // block id: 232
        var_1684933283931_209
    } finally { // block id: 234
        ();
        var_1684933283931_237;
        var_1684933283931_209
    }[1]
}

public struct Struct_1684933283931_265 {
    public init() { // block id: 267

    }
;
    static prop var_1684933283931_289 : (Range<UInt8>, Range<Int16>, Array<Bool>, Range<Int8>, Range<Int8>, Range<Int8>) { // block id: 290
        get() { // block id: 292
            ((Int32(Int32(-116))&127)..=(Int32(Int32(UInt32(155)))&127):((23|1)));
            (((UInt8(UInt8(56))&127)..(UInt8(UInt8(150))&127):((-7)|1)), ((Int16(Int16(40))&127)..=(Int16(Int16(56))&127):((96|1))), [false, ((((UInt8(UInt8(208))&127)..=(UInt8(UInt8(135))&127):((101|1))), ((Int16(Int16(-88))&127)..=(Int16(Int16(109))&127):((-30)|1)), [true, false, true, true, true, true, true, false, true, false], ((Int8(Int8(-116))&127)..=(Int8(Int8(-29))&127):(((-98)|1))), ((Int8(Int8(-71))&127)..=(Int8(Int8(17))&127):((51|1))), ((Int8(Int8(-47))&127)..=(Int8(Int8(-15))&127):(((-1)|1)))) is Range<Int32>), ([UInt64(212), UInt64(31), UInt64(76), UInt64(77), UInt64(150), UInt64(227), UInt64(59), UInt64(85), UInt64(23), UInt64(231)] is Int64), (((UInt64(UInt64(17))&127)..=(UInt64(UInt64(115))&127):((-21)|1)) is UInt8), ((((Int64((-52))&127)..=(Int64(77)&127):(((-44)|1))), "( D&EXcz2K", [UInt64(42), UInt64(55), UInt64(38), UInt64(103), UInt64(25), UInt64(243), UInt64(192), UInt64(176), UInt64(140), UInt64(237)], Int8(-34)) is Int16), false, ((((Int64((-42))&127)..=(Int64((-92))&127):(((-23)|1))), ")~}2`HB|C~", [UInt64(69), UInt64(66), UInt64(47), UInt64(197), UInt64(121), UInt64(29), UInt64(195), UInt64(37), UInt64(175), UInt64(186)], Int8(80)) is Array<Float32>), true, (((Int32(Int32(-3))&127)..=(Int32(Int32(-7))&127):(((-28)|1))) is (Int64) -> Array<Float32>), (Int16(102) is (Int64) -> Array<Float32>)], ((Int8(Int8(-90))&127)..=(Int8(Int8(-85))&127):((-122)|1)), ((Int8(Int8(-15))&127)..=(Int8(Int8(88))&127):((Int64(Int32(-12))|1))), ((Int8(Int8(-98))&127)..(Int8(Int8(-116))&127):(((-24)|1))))
        }

    };
    var var_1684933283931_625 : Option<Interface_1684933283931_9> = Option<Interface_1684933283931_9>.None
}

func func_1684933283931_262() : Class_1684933283931_6 { // block id: 263
    let var_1684933283931_402 : (Bool, String, String, String, (Range<Int64>, String, Array<UInt64>, Int8), UInt16) = (true, "E~[S!6!?Ku", ###"*3nD9Bni-0"###, ###"FR?Z-ie1M9"###, (((Int64((-69))&127)..(Int64(75)&127):((71|1))), "6'm1>$9@<z", [UInt64(196), UInt64(110), UInt64(218), UInt64(35), UInt64(23), UInt64(118), UInt64(124), UInt64(34), UInt64(88), UInt64(203)], Int8(UInt8(42))), UInt16(104));
    Struct_1684933283931_265.func_1684933283931_270(namedParam_1684933283931_271 : false, optionalParam_1684933283931_272 : var_1684933283931_402[3]);
    let var_1684933283931_425 : Int8 = Int8(Int8(-18));
    let var_1684933283931_433 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    if ((-Int8(32)) > (var_1684933283931_425 >> ((Int8(14)) & 7))) { // block id: 429
        var_1684933283931_433[3];
        var var_1684933283931_454 : Float32 = Float32(23.0);
        match (Option<(Range<Int64>, String, Array<UInt64>, Int8)>.None) {
            case caseVar_1684933283931_440 : Int64 => 
                ()
            
            case caseVar_1684933283931_445 : Interface_1684933283931_10 => 
                ()
            
            case caseVar_1684933283931_450 => 
                var_1684933283931_454 = Float32(-108.0)
            
            case _ => 
                var_1684933283931_461;
                var_1684933283931_461
            
            case _ => 
                var_1684933283931_467
            
        }
    };
    var_1684933283931_470
}


public func func_1684933283931_502(param_1684933283931_503 : (Range<UInt16>, String, Rune, (Range<Int64>, String, Array<UInt64>, Int8), UInt16, Range<UInt32>, UInt8)) : Struct_1684933283931_265 { // block id: 504
    let var_1684933283931_511 : Option<Struct_1684933283931_265> = ([true, true, true, false, true, false, true, true, true, true] as Struct_1684933283931_265);
    (var_1684933283931_511 ?? var_1684933283931_470.var_1684933283931_517)
}

public func func_1684933283931_498(param_1684933283931_499 : Range<Int16>) : Interface_1684933283931_9 { // block id: 500
    let var_1684933283931_520 : ((Range<UInt16>, String, Rune, (Range<Int64>, String, Array<UInt64>, Int8), UInt16, Range<UInt32>, UInt8)) -> Struct_1684933283931_265 = func_1684933283931_502;
    var_1684933283931_470.var_1684933283931_525|>var_1684933283931_520;
    ();
    func_1684933283931_262()
}



func func_1684933283931_249(param_1684933283931_250 : Bool) : Unit { // block id: 251
    var var_1684933283931_257 : Int32 = Int32(UInt8(19));
    Int32((Int32(42) / ((var_1684933283931_257) | 1))) - (func_1684933283931_262().var_1684933283931_473);
    let var_1684933283931_633 : (Range<Int64>, String, Array<UInt64>, Int8) = (((Int64(123)&127)..=(Int64(Int64(UInt8(Int8(88))))&127):((51|1))), "C!V5N#|z<'", [UInt64(51), UInt64(Int64(UInt64(152))), UInt64(172), UInt64(Int8(Int8(-11))), UInt64(116), UInt64(UInt16(UInt16(39))), UInt64(UInt8(UInt8(241))), UInt64(Int8(Int8(-97))), UInt64(38), UInt64(UInt32(195))], Int8(UInt8(UInt8(127))));
    let var_1684933283931_731 : Range<Int16> = ((Int16(Int16(-20))&127)..=(Int16(Int16(-119))&127):((-18)|1));
    let var_1684933283931_752 : (UInt64, Range<UInt8>, Range<UInt16>, Range<Int64>, Unit) = (UInt64(9), ((UInt8(UInt8(50))&127)..(UInt8(UInt8(195))&127):((Int64(Int64(Int32(103)))|1))), ((UInt16(UInt16(56))&127)..=(UInt16(UInt16(18))&127):(89|1)), ((Int64(6)&127)..(Int64((-34))&127):(118|1)), ());
    let var_1684933283931_790 : Range<Int16> = ((Int16(Int16(-21))&127)..=(Int16(Int16(Int16(54)))&127):((Int64(UInt16(Int8(UInt8(73))))|1)));
    func func_1684933283931_494() : Rune { // block id: 495
        let var_1684933283931_670 : Range<Int64> = ((Int64(Int64(Int8(Int8(20))))&127)..=(Int64(Int64(UInt64(UInt32(184))))&127):((Int64(UInt16(Int8(UInt8(88))))|1)));
        let var_1684933283931_686 : UInt64 = UInt64(UInt8(Int8(UInt8(UInt8(100)))));
        match (([((Int16(var_1684933283931_612)&127)..(Int16(var_1684933283931_612)&127):(((-22)|1))), ((Int16(Int16(53))&127)..=(Int16(var_1684933283931_612)&127):((var_1684933283931_714|1))), var_1684933283931_717, ((Int16(Int16(119))&127)..=(Int16(Int16(-24))&127):((var_1684933283931_714|1))), ((Int16(Int16(-45))&127)..=(Int16(Int16(23))&127):(6|1)), var_1684933283931_717, var_1684933283931_717, ((Int16(var_1684933283931_612)&127)..(Int16(var_1684933283931_612)&127):((75|1))), var_1684933283931_731, ((Int16(Int16(72))&127)..=(Int16(Int16(-92))&127):(84|1))][6]|>{ lambdaParameter_1684933283931_587 : Range<Int16> => var_1684933283931_470.func_1684933283931_592(namedParam_1684933283931_593 : try { // block id: 631
            var_1684933283931_633
        } finally { // block id: 667
            var var_1684933283931_701 : Int8 = Int8(90);
            (var_1684933283931_670, """
_zaC8
}a}_K
""", [UInt64(249), var_1684933283931_686, var_1684933283931_686, UInt64(57), UInt64(35), UInt64(168), var_1684933283931_686, var_1684933283931_686, var_1684933283931_686, var_1684933283931_686], var_1684933283931_701)
        }) })) {
            case _ => 
                ();
                var_1684933283931_740 *= (-114.0);
                var var_1684933283931_746 : UInt32 = UInt32(Int16(70));
                var_1684933283931_746++
            
        };
        var_1684933283931_752[4];
        var var_1684933283931_777 : Int8 = Int8(Int8(UInt8(186)));
        var var_1684933283931_829 : Rune = r't';
        if (var_1684933283931_79) { // block id: 767
            let var_1684933283931_803 : Int64 = 34;
            match (Option<(Range<Int64>, String, Array<UInt64>, Int8)>.Some(var_1684933283931_633)) {
                case caseVar_1684933283931_773 => 
                    var_1684933283931_777--
                
                case _ => 
                    var_1684933283931_461;
                    ()
                
                case _ => 
                    [var_1684933283931_790, ((Int16(Int16(95))&127)..(Int16(Int16(-83))&127):((var_1684933283931_803|1))), ((Int16(var_1684933283931_612)&127)..=(Int16(Int16(7))&127):(((-33)|1))), var_1684933283931_731, var_1684933283931_731, ((Int16(Int16(-75))&127)..=(Int16(Int16(69))&127):((-60)|1)), ((Int16(Int16(-107))&127)..=(Int16(Int16(-113))&127):((-104)|1)), var_1684933283931_731, var_1684933283931_790, ((Int16(Int16(45))&127)..(Int16(Int16(12))&127):(126|1))];
                    ();
                    var_1684933283931_467
                
            };
            if (var_1684933283931_79) { r'9' } else { r'3' } 
        } else { // block id: 822
            var_1684933283931_612 <<= ((var_1684933283931_612) & 7);
            if (true) { var_1684933283931_829 } else { var_1684933283931_829 } 
        }
    }
;
    try { // block id: 492
        func_1684933283931_494()
    } catch (_) { // block id: 832
        if (false) { // block id: 835
            var_1684933283931_461;
            var_1684933283931_839 <<= ((var_1684933283931_839) & 7)
        } else if (var_1684933283931_79) { // block id: 844
            Option<Interface_1684933283931_9>.None;
            ()
        };
        try { // block id: 848
            var_1684933283931_467;
            if (var_1684933283931_79) { var_1684933283931_853 } else { r'5' } 
        } catch (e: Exception) { // block id: 856
            if (true) { r'4' } else { r'J' } 
        }
    };
    var loopTimeVar_1684933283931_866 : Int64 = 0;
    do {
        loopTimeVar_1684933283931_866++;

    } while (((Option<Unit>.None is Array<Bool>)) && loopTimeVar_1684933283931_866 < 100 ) 
}


main(): Int64 {
    try {
        var var_1684933283931_1096 : UInt16 = UInt16(65);
        Class_1684933283931_6.func_1684933283931_13(namedParam_1684933283931_16 : var_1684933283931_1096)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1684933283931_114*var_1684933283931_114), 64)
        crccheck.updateBuffer(UInt64(var_1684933283931_612*var_1684933283931_612), 64)
        crccheck.updateBuffer(UInt64(var_1684933283931_714*var_1684933283931_714), 64)
        crccheck.updateBuffer(UInt64(var_1684933283931_839*var_1684933283931_839), 64)
        crccheck.updateBuffer(UInt64(var_1684933283931_1022*var_1684933283931_1022), 64)
        crccheck.updateBuffer(UInt64(var_1684933283931_1096*var_1684933283931_1096), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1684933283931_6 {
    public static func func_1684933283931_13(optionalParam_1684933283931_14 ! : UInt8 = UInt8(138), namedParam_1684933283931_16 ! : UInt16) : Int64 { // block id: 17
        let var_1684933283931_23 : Unit = ();
        let var_1684933283931_1035 : Range<UInt8> = ((UInt8(UInt8(Int8(-28)))&127)..=(UInt8(UInt8(61))&127):((51|1)));
        if ((try { // block id: 21
            var_1684933283931_23;
            Class_1684933283931_6()
        } finally { // block id: 26
            var_1684933283931_29 %= ((Int8(52)) | 1);
            var var_1684933283931_43 : Interface_1684933283931_10 = Class_1684933283931_6(Float32(-76.0), Float64(Float32(Float32(-27.0))), Int16(-23), namedParam_1684933283931_49 : Int8(Int8(Int8(UInt8(228)))));
            var_1684933283931_43
        } is Range<UInt8>)) { // block id: 1001
            var_1684933283931_714 & 21
        } else if (false) { // block id: 1006
            [var_1684933283931_23, var_1684933283931_461, (), var_1684933283931_23, var_1684933283931_467, (), (), (), var_1684933283931_467, ()];
            if (true) { // block id: 1020
                var_1684933283931_1022
            } else { // block id: 1024
                var_1684933283931_1022 ^ var_1684933283931_1022
            }
        } else { // block id: 1028
            var var_1684933283931_1032 : UInt64 = UInt64(62);
            var var_1684933283931_1043 : Range<Int64> = ((Int64(35)&127)..=(Int64(34)&127):((Int64(UInt8(UInt8(39)))|1)));
            (var_1684933283931_1032, var_1684933283931_1035, ((UInt16(UInt16(12))&127)..(UInt16(UInt16(57))&127):(105|1)), var_1684933283931_1043, var_1684933283931_467)[4];
            let var_1684933283931_1073 : Int32 = Int32(Int32(UInt8(86)));
            try { // block id: 1053
                var_1684933283931_1022 % ((81) | 1);
                ();
                var_1684933283931_1059
            } finally { // block id: 1069
                var_1684933283931_839 *= var_1684933283931_1073;
                ();
                ((Int32(var_1684933283931_1073)&127)..(Int32(var_1684933283931_1073)&127):((14|1)))
            };
            var_1684933283931_470.var_1684933283931_1085
        }
    }

}

extend Struct_1684933283931_265 {
    public static func func_1684933283931_270(namedParam_1684933283931_271 ! : Bool, optionalParam_1684933283931_272 ! : String = """
Uhv.h
E#wch
""", optionalParam_1684933283931_274 ! : (Range<Int8>, Range<UInt16>, Range<Int16>) -> Unit = { lambdaParameter_1684933283931_277 : Range<Int8>, lambdaParameter_1684933283931_278 : Range<UInt16>, lambdaParameter_1684933283931_279 : Range<Int16> =>  }) : Range<Int8> { // block id: 285
        var_1684933283931_289[3]
    }

}

