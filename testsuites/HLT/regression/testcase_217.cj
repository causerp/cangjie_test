/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public let var_1668701629105_72 : UInt32 = UInt32(224)
public let var_1668701629105_79 : ?Bool = (() as Bool)
var var_1668701629105_92 : Int64 = (-39)
var var_1668701629105_164 : Int32 = Int32(-12)
public var var_1668701629105_188 : Unit = ()
let var_1668701629105_308 : Array<UInt64> = [UInt64(94), UInt64(UInt16(Int8(94))), UInt64(12), UInt64(UInt16(UInt8(Int8(15)))), UInt64(Int32(UInt8(UInt8(81)))), UInt64(UInt16(12)), UInt64(UInt8(UInt8(UInt8(62)))), UInt64(UInt8(115)), UInt64(UInt32(175)), UInt64(Int8(99))]
public var var_1668701629105_549 : Option<((Rune, Int8), Range<UInt16>, Option<Bool>)> = ((")uPEh;q`pl" as ((Rune, Int8), Range<UInt16>, Option<Bool>)) as ((Rune, Int8), Range<UInt16>, Option<Bool>))
var var_1668701629105_596 : Int64 = 8
var var_1668701629105_633 : ?Int64 = (((Int32(-65)&127)..=(Int32(UInt16(UInt8(87)))&127):((Int64(UInt8(UInt8(210)))|1))) as Int64)
public var var_1668701629105_656 : Rune = r'R'
var var_1668701629105_716 : (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) = (((90&127)..(19&127):((-94)|1)), ((Int16(111)&127)..(Int16(UInt8(UInt8(28)))&127):((Int64(Int32(111))|1))), UInt16(63), ((Int8(55)&127)..(Int8(-38)&127):((-93)|1)), (() as ((Rune, Int8), Range<UInt16>, Option<Bool>)), UInt32(Int16(99)), [UInt64(UInt64(UInt16(60))), UInt64(Int16(UInt16(231))), UInt64(UInt32(UInt16(44))), UInt64(UInt8(UInt8(57))), UInt64(UInt32(254)), UInt64(UInt8(189)), UInt64(Int32(63)), UInt64(UInt8(45)), UInt64(161), UInt64(57)], [UInt64(236), UInt64(Int32(74)), UInt64(47), UInt64(UInt64(43)), UInt64(23), UInt64(UInt8(UInt8(47))), UInt64(182), UInt64(50), UInt64(1), UInt64(151)], ((UInt32(221)&127)..(UInt32(83)&127):((-106)|1)))
public let var_1668701629105_774 : Bool = (UInt32(Int16(Int16(-85))) is Class_1668701629105_127)
let var_1668701629105_780 : ?Range<Int64> = ((UInt8(Int8(Int8(95))), Float32(125.0), (UInt16(UInt16(60)) is (Range<Int64>) -> ((Rune, Int8), Range<UInt16>, Option<Bool>))) as Range<Int64>)
var var_1668701629105_815 : Option<Unit> = Option<Unit>.None
public var var_1668701629105_859 : Float32 = Float32(37.0)
public var var_1668701629105_891 : UInt8 = UInt8(71)
let var_1668701629105_942 : (Range<Int16>, Float64, Bool, Class_1668701629105_127, Array<Int64>, Unit, Float64) = (((Int16(-67)&127)..(Int16(-58)&127):(74|1)), 38.0, (Option<Rune>.None is UInt16), Class_1668701629105_127(), [(-91), 68, 44, (-69), 104, (-3), 125, 10, (-51), 67], (), Float64((-91.0)))
public var var_1668701629105_983 : (Rune, Int8) = (r'R', Int8(-94))
let var_1668701629105_1021 : (UInt8, Float32, Bool) = (UInt8(UInt8(107)), Float32(Float32(57.0)), false)
var var_1668701629105_1039 : (UInt8, Float32, Bool) = (UInt8(238), Float32(Float32(-28.0)), true)
public let var_1668701629105_1049 : Bool = ("~tuZj0R$`*" is UInt32)
public let var_1668701629105_1079 : Bool = false
public let var_1668701629105_1177 : Array<Bool> = [true, false, false, true, true, true, true, false, false, true]
public var var_1668701629105_1419 : String = "S~a{Vb+zm\">"
public var var_1668701629105_1435 : UInt32 = UInt32(Int32(16))
public let var_1668701629105_1478 : (Range<UInt32>, UInt8, (UInt64, Float64), (UInt8, Float32, Bool), Array<Int64>, Array<UInt64>) = (((UInt32(Int8(60))&127)..=(UInt32(UInt8(106))&127):((27|1))), UInt8(Int8(UInt8(Int8(9)))), (UInt64(95), (-87.0)), (UInt8(Int8(-75)), Float32(-83.0), false), [59, (-19), (-12), (-119), (-2), 95, 18, 28, (-77), 63], [UInt64(Int32(-30)), UInt64(203), UInt64(138), UInt64(162), UInt64(58), UInt64(Int8(-18)), UInt64(Int64((-44))), UInt64(Int8(-14)), UInt64(Int32(UInt16(163))), UInt64(85)])

public interface Interface_1668701629105_131<T0> {

}

public interface Interface_1668701629105_133 <: Interface_1668701629105_131<Option<Int64>> {
    func func_1668701629105_478(param_1668701629105_479 : Option<Rune>) : (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) { // block id: 480
        ();
        var var_1668701629105_491 : (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) = (((30&127)..((-78)&127):(0|1)), ((Int16(Int16(-111))&127)..=(Int16(Int8(12))&127):((Int64(UInt8(42))|1))), UInt16(182), ((Int8(-59)&127)..=(Int8(-94)&127):(70|1)), ((() as Bool) as ((Rune, Int8), Range<UInt16>, Option<Bool>)), UInt32(140), [UInt64(115), UInt64(182), UInt64(26), UInt64(81), UInt64(71), UInt64(164), UInt64(75), UInt64(123), UInt64(11), UInt64(223)], [UInt64(132), UInt64(93), UInt64(126), UInt64(251), UInt64(144), UInt64(177), UInt64(9), UInt64(60), UInt64(156), UInt64(232)], ((UInt32(221)&127)..(UInt32(80)&127):((-101)|1)));
        var var_1668701629105_541 : Range<Int64> = ((113&127)..=(47&127):((-81)|1));
        var var_1668701629105_546 : Range<Int8> = ((Int8(5)&127)..=(Int8(48)&127):((-106)|1));
        let var_1668701629105_570 : Int64 = Int64(Int64(Int16(-116)));
        let var_1668701629105_580 : Bool = true;
        var var_1668701629105_588 : Int8 = Int8(92);
        try { // block id: 483
            (Option<(Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>)>.None ?? var_1668701629105_491)
        } catch (e: Exception) { // block id: 510
            let var_1668701629105_513 : Array<Bool> = [true, true, false, false, false, true, true, true, false, false];
            var var_1668701629105_530 : UInt64 = UInt64(Int16(-119));
            match (var_1668701629105_513) {
                case caseVar_1668701629105_517 : (Float32, Int64, Option<Int64>, Int32, Unit, String, Rune) => 
                    var_1668701629105_491
                
                case _ : Rune => 
                    var var_1668701629105_525 : UInt16 = UInt16(243);
                    var_1668701629105_525 += UInt16(111);
                    let var_1668701629105_534 : Float64 = Float64(Float32(Float32(Float32(5.0))));
                    (var_1668701629105_530, var_1668701629105_534);
                    (var_1668701629105_541, ((Int16(120)&127)..(Int16(93)&127):(82|1)), UInt16(173), var_1668701629105_546, var_1668701629105_549, UInt32(158), var_1668701629105_308, [UInt64(142), UInt64(88), UInt64(190), UInt64(126), var_1668701629105_530, UInt64(66), UInt64(236), var_1668701629105_530, UInt64(237), UInt64(209)], ((var_1668701629105_72&127)..(UInt32(185)&127):((var_1668701629105_570|1))))
                
                case _ => 
                    ();
                    UInt16(94);
                    var var_1668701629105_591 : Int8 = Int8(UInt8(Int8(-64)));
                    if (var_1668701629105_580) { ((((-53)&127)..=(2&127):((-1)|1)), ((Int16(104)&127)..=(Int16(-13)&127):((-101)|1)), UInt16(179), ((var_1668701629105_588&127)..(var_1668701629105_591&127):((var_1668701629105_596|1))), var_1668701629105_549, UInt32(13), [UInt64(70), var_1668701629105_530, UInt64(207), UInt64(21), var_1668701629105_530, UInt64(171), var_1668701629105_530, var_1668701629105_530, UInt64(69), var_1668701629105_530], [UInt64(107), UInt64(209), UInt64(228), UInt64(93), var_1668701629105_530, var_1668701629105_530, var_1668701629105_530, UInt64(168), UInt64(162), UInt64(0)], ((var_1668701629105_72&127)..(var_1668701629105_72&127):((var_1668701629105_570|1)))) } else { var_1668701629105_491 } 
                
            }
        }
    }

}

public interface Interface_1668701629105_132 <: Interface_1668701629105_131<Option<Int64>> & Interface_1668701629105_133 {

}

public interface Interface_1668701629105_130<T0> <: Interface_1668701629105_131<Option<Int64>> & Interface_1668701629105_132 {

}

public open class Class_1668701629105_127 <: Interface_1668701629105_130<Range<UInt8>> & Interface_1668701629105_133 & Resource {
    public init() { // block id: 129

    }
;
    public static mut prop var_1668701629105_136 : (UInt8, Float32, Bool) { // block id: 137
        get() { // block id: 139
            ((UInt64(Int16(97)), Float64((-6.0))) is Interface_1668701629105_131<Option<Int64>>);
            ();
            (UInt8(117), Float32(Float32(Float32(101.0))), (###"&6[[>Si./M"### is Unit));
            var_1668701629105_1519
        }

        set(Value) { // block id: 156
            var_1668701629105_1519 = Value
        }

    };
    static mut prop var_1668701629105_969 : Bool { // block id: 970
        get() { // block id: 972
            ((-55) is Range<UInt8>)
        }

        set(Value) { // block id: 977
            ()
        }

    };
    public mut prop var_1668701629105_1118 : Int8 { // block id: 1119
        get() { // block id: 1121
            ();
            Int8(44)
        }

        set(Value) { // block id: 1126
            ();
            ()
        }

    };
    public static var var_1668701629105_1171 : Unit = ();
    public var var_1668701629105_1187 : Struct_1668701629105_1183 = Struct_1668701629105_1183();
    static mut prop var_1668701629105_1519 : (UInt8, Float32, Bool) { // block id: 1520
        get() { // block id: 1522
            (((UInt32(178)&127)..=(UInt32(111)&127):((Int64(UInt16(118))|1))), UInt8(Int8(32)), (UInt64(34), (-23.0)), (UInt8(85), Float32(Float32(-107.0)), true), [(-126), 74, 8, Int64(Int32(-33)), 108, Int64(UInt8(35)), 33, (-88), Int64(UInt64(135)), (-72)], [UInt64(181), UInt64(135), UInt64(65), UInt64(235), UInt64(65), UInt64(Int32(39)), UInt64(Int8(-22)), UInt64(100), UInt64(Int16(85)), UInt64(Int32(32))]);
            (UInt8(27), Float32(5.0), ((Float32(-71.0) as Option<Bool>) is (Int64, Int32) -> Unit))
        }

        set(Value) { // block id: 1577

        }

    };
    public func func_1668701629105_478(param_1668701629105_479 : Option<Rune>) : (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) { // block id: 480
        ();
        var var_1668701629105_491 : (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) = (((30&127)..((-78)&127):(0|1)), ((Int16(Int16(-111))&127)..=(Int16(Int8(12))&127):((Int64(UInt8(42))|1))), UInt16(182), ((Int8(-59)&127)..=(Int8(-94)&127):(70|1)), ((() as Bool) as ((Rune, Int8), Range<UInt16>, Option<Bool>)), UInt32(140), [UInt64(115), UInt64(182), UInt64(26), UInt64(81), UInt64(71), UInt64(164), UInt64(75), UInt64(123), UInt64(11), UInt64(223)], [UInt64(132), UInt64(93), UInt64(126), UInt64(251), UInt64(144), UInt64(177), UInt64(9), UInt64(60), UInt64(156), UInt64(232)], ((UInt32(221)&127)..(UInt32(80)&127):((-101)|1)));
        var var_1668701629105_541 : Range<Int64> = ((113&127)..=(47&127):((-81)|1));
        var var_1668701629105_546 : Range<Int8> = ((Int8(5)&127)..=(Int8(48)&127):((-106)|1));
        let var_1668701629105_570 : Int64 = Int64(Int64(Int16(-116)));
        let var_1668701629105_580 : Bool = true;
        var var_1668701629105_588 : Int8 = Int8(92);
        try { // block id: 483
            (Option<(Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>)>.None ?? var_1668701629105_491)
        } catch (e: Exception) { // block id: 510
            let var_1668701629105_513 : Array<Bool> = [true, true, false, false, false, true, true, true, false, false];
            var var_1668701629105_530 : UInt64 = UInt64(Int16(-119));
            match (var_1668701629105_513) {
                case caseVar_1668701629105_517 : (Float32, Int64, Option<Int64>, Int32, Unit, String, Rune) => 
                    var_1668701629105_491
                
                case _ : Rune => 
                    var var_1668701629105_525 : UInt16 = UInt16(243);
                    var_1668701629105_525 += UInt16(111);
                    let var_1668701629105_534 : Float64 = Float64(Float32(Float32(Float32(5.0))));
                    (var_1668701629105_530, var_1668701629105_534);
                    (var_1668701629105_541, ((Int16(120)&127)..(Int16(93)&127):(82|1)), UInt16(173), var_1668701629105_546, var_1668701629105_549, UInt32(158), var_1668701629105_308, [UInt64(142), UInt64(88), UInt64(190), UInt64(126), var_1668701629105_530, UInt64(66), UInt64(236), var_1668701629105_530, UInt64(237), UInt64(209)], ((var_1668701629105_72&127)..(UInt32(185)&127):((var_1668701629105_570|1))))
                
                case _ => 
                    ();
                    UInt16(94);
                    var var_1668701629105_591 : Int8 = Int8(UInt8(Int8(-64)));
                    if (var_1668701629105_580) { ((((-53)&127)..=(2&127):((-1)|1)), ((Int16(104)&127)..=(Int16(-13)&127):((-101)|1)), UInt16(179), ((var_1668701629105_588&127)..(var_1668701629105_591&127):((var_1668701629105_596|1))), var_1668701629105_549, UInt32(13), [UInt64(70), var_1668701629105_530, UInt64(207), UInt64(21), var_1668701629105_530, UInt64(171), var_1668701629105_530, var_1668701629105_530, UInt64(69), var_1668701629105_530], [UInt64(107), UInt64(209), UInt64(228), UInt64(93), var_1668701629105_530, var_1668701629105_530, var_1668701629105_530, UInt64(168), UInt64(162), UInt64(0)], ((var_1668701629105_72&127)..(var_1668701629105_72&127):((var_1668701629105_570|1)))) } else { var_1668701629105_491 } 
                
            }
        }
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}





public func func_1668701629105_463(param_1668701629105_464 : Range<Int64>) : ((Rune, Int8), Range<UInt16>, Option<Bool>) { // block id: 465
    var var_1668701629105_475 : Interface_1668701629105_132 = Class_1668701629105_127();
    var var_1668701629105_628 : ?Rune = Option<Rune>.None;
    var var_1668701629105_651 : Bool = false;
    let var_1668701629105_676 : ((Rune, Int8), Range<UInt16>, Option<Bool>) = ((r'Q', Int8(UInt8(UInt8(188)))), ((UInt16(148)&127)..(UInt16(141)&127):((Int64(UInt32(247))|1))), Option<Bool>.Some(false));
    (var_1668701629105_475.func_1668701629105_478(var_1668701629105_628)[4] ?? match (var_1668701629105_633) {
        case caseVar_1668701629105_645 : String => 
            ();
            ();
            if (var_1668701629105_651) { ((var_1668701629105_656, Int8(83)), ((UInt16(20)&127)..=(UInt16(241)&127):((85|1))), var_1668701629105_79) } else { ((var_1668701629105_656, Int8(-111)), ((UInt16(202)&127)..(UInt16(40)&127):(91|1)), var_1668701629105_79) } 
        
        case _ : (UInt64, Float64) => 
            var_1668701629105_164;
            ();
            var_1668701629105_676
        
        case _ => 
            let var_1668701629105_693 : String = """
Va{|Y,
$`'*T
""";
            var_1668701629105_693;
            var_1668701629105_676
        
    })
}



func func_1668701629105_697(param_1668701629105_698 : UInt8) : ((Rune, Int8), Range<UInt16>, Option<Bool>) { // block id: 699
    var var_1668701629105_797 : ?Range<Int64> = (UInt32(235) as Range<Int64>);
    (try { // block id: 708
        var_1668701629105_188;
        var_1668701629105_188;
        let var_1668701629105_712 : ?Range<Int64> = Option<Range<Int64>>.None;
        var_1668701629105_712
    } catch (_) { // block id: 714
        var_1668701629105_716;
        if (var_1668701629105_774) { var_1668701629105_780 } else { var_1668701629105_780 } 
    } ?? (var_1668701629105_797 ?? (((-48)&127)..=((-84)&127):(65|1))))|>func_1668701629105_463
}


public func func_1668701629105_804(param_1668701629105_805 : Range<Int64>) : UInt8 { // block id: 806
    let var_1668701629105_841 : ?Rune = Option<Rune>.Some(r'l');
    var var_1668701629105_870 : Int8 = Int8(51);
    match (match ((var_1668701629105_815 ?? var_1668701629105_188)) {
        case () | () | () => 
            ();
            Option<Rune>.Some(r'C')
        
        case _ => 
            let var_1668701629105_830 : ?Rune = Option<Rune>.None;
            if (true) { var_1668701629105_830 } else { Option<Rune>.Some(r'q') } 
        
        case caseVar_1668701629105_836 => 
            if (var_1668701629105_774) { var_1668701629105_841 } else { Option<Rune>.Some(r'm') } 
        
        case _ => 
            if (var_1668701629105_774) { [UInt64(29), UInt64(40), UInt64(21), UInt64(12), UInt64(245), UInt64(21), UInt64(173), UInt64(205), UInt64(203), UInt64(70)] } else { var_1668701629105_308 } ;
            Option<Rune>.Some(var_1668701629105_656)
        
    }) {
        case _ => 
            var_1668701629105_859 -= Float32(117.0);
            UInt8(120)
        
        case caseVar_1668701629105_865 : Int64 => 
            Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>.None;
            var_1668701629105_870 &= Int8(-21);
            UInt8(152) - UInt8(18)
        
        case caseVar_1668701629105_878 => 
            UInt8(217) & UInt8(174)
        
        case _ : Class_1668701629105_127 => 
            UInt8(165)
        
        case _ => 
            var_1668701629105_891--;
            var_1668701629105_891 >> ((UInt8(45)) & 7)
        
    }
}

func func_1668701629105_459(param_1668701629105_460 : Bool) : ((Rune, Int8), Range<UInt16>, Option<Bool>) { // block id: 461
    let var_1668701629105_802 : (UInt8) -> ((Rune, Int8), Range<UInt16>, Option<Bool>) = func_1668701629105_697;
    var var_1668701629105_897 : (Range<Int64>) -> UInt8 = func_1668701629105_804;
    ((Int64(UInt64(52))&127)..=([(-116), var_1668701629105_92, (-72), 75, (-54), var_1668701629105_596, var_1668701629105_92, var_1668701629105_596, var_1668701629105_92, (-51)][9]&127):(((-39)|1)))|>(var_1668701629105_897~>var_1668701629105_802)
}


public func func_1668701629105_97(param_1668701629105_98 : Option<Bool>) : Bool { // block id: 99
    let var_1668701629105_174 : Unit = ();
    func func_1668701629105_108(namedParam_1668701629105_109 ! : Bool, optionalParam_1668701629105_110 ! : Int64 = Int64(Int32(-14)), namedParam_1668701629105_113 ! : Int64, optionalParam_1668701629105_114 ! : (UInt64, Float64) = (UInt64(Int32(Int32(Int8(-1)))), Float64(Float32(-74.0)))) : Unit { // block id: 122
        var loopTimeVar_1668701629105_186 : Int64 = 0;
        while ((Class_1668701629105_127.var_1668701629105_136[2]) && loopTimeVar_1668701629105_186 < 100 ) {
            loopTimeVar_1668701629105_186++;
            var loopTimeVar_1668701629105_168 : Int64 = 0;
            while ((true) && loopTimeVar_1668701629105_168 < 100 ) {
                loopTimeVar_1668701629105_168++;
                var_1668701629105_164 *= Int32(-103)
            };
            let var_1668701629105_178 : Int16 = Int16(UInt8(Int8(Int8(Int8(14)))));
            match (var_1668701629105_79) {
                case _ => 
                    var_1668701629105_174;
                    var_1668701629105_178 % ((Int16(-101)) | 1)
                
            }
        };
        var_1668701629105_188
    }
;
    let var_1668701629105_209 : Rune = r'D';
    let var_1668701629105_262 : Int8 = Int8(UInt8(42));
    let var_1668701629105_394 : Float32 = Float32(110.0);
    let var_1668701629105_445 : Int16 = Int16(1);
    let var_1668701629105_960 : ??Bool = (UInt32(UInt16(UInt8(9))) as Option<Bool>);
    let var_1668701629105_980 : String = ###"WZ)RBdc=/ "###;
    try { // block id: 101
        let var_1668701629105_201 : Float32 = Float32(-118.0);
        let var_1668701629105_214 : ?Int64 = Option<Int64>.None;
        func func_1668701629105_103(param_1668701629105_104 : Int64, param_1668701629105_105 : Int32) : Unit { // block id: 106
            func_1668701629105_108(namedParam_1668701629105_109 : (var_1668701629105_92 is Option<Bool>), namedParam_1668701629105_113 : ((var_1668701629105_201, (-124), Option<Int64>.None, Int32(-88), (), ###"XvLaq5 'i0"###, var_1668701629105_209)[2] ?? var_1668701629105_214.getOrThrow()));
            ()
        }
;
        func_1668701629105_103(var_1668701629105_92, var_1668701629105_164);
        (Option<Rune>.None ?? var_1668701629105_209);
        [false, true, true, false, true, false, false, true, false, true][5]
    } finally { // block id: 239
        let var_1668701629105_244 : UInt64 = UInt64(Int16(Int8(-103)));
        let var_1668701629105_251 : UInt8 = UInt8(Int8(UInt8(Int8(Int8(-74)))));
        var var_1668701629105_258 : UInt8 = UInt8(238);
        (var_1668701629105_244, (), ((var_1668701629105_251&127)..=(var_1668701629105_258&127):((93|1))), var_1668701629105_262, UInt64(172))[1];
        func_1668701629105_108(namedParam_1668701629105_109 : false, namedParam_1668701629105_113 : 46);
        let var_1668701629105_298 : (UInt64, Float64) = (UInt64(Int8(41)), 41.0);
        func func_1668701629105_271(param_1668701629105_272 : String, param_1668701629105_273 : (Rune, Int8)) : Bool { // block id: 274
            let var_1668701629105_283 : Interface_1668701629105_133 = Class_1668701629105_127();
            var var_1668701629105_294 : Bool = true;
            let var_1668701629105_391 : UInt8 = UInt8(64);
            try (resource = Class_1668701629105_127()) { // block id: 276
                try (resource = Class_1668701629105_127()) { // block id: 278
                    UInt8(165);
                    ()
                } catch (e: Exception) { // block id: 281
                    var_1668701629105_283;
                    ();
                    var_1668701629105_188
                } finally { // block id: 287
                    var_1668701629105_164 & var_1668701629105_164;
                    ()
                };
                func_1668701629105_108(namedParam_1668701629105_109 : var_1668701629105_294, namedParam_1668701629105_113 : var_1668701629105_92, optionalParam_1668701629105_114 : var_1668701629105_298);
                var loopTimeVar_1668701629105_335 : Array<Bool> = [(Class_1668701629105_127() is Float32), true, false, (Class_1668701629105_127() is Range<Int32>), false, (Int32(-43) is Interface_1668701629105_130<Range<UInt8>>), ([(((UInt64(21)&127)..(UInt64(57)&127):(6|1)) is (Float32, Int64, Option<Int64>, Int32, Unit, String, Rune)), false, false, ((Float32(-69.0), 71, Option<Int64>.None, Int32(122), (), "L<l|AhV]Qf", r'1') is Range<UInt64>), ([true, true, true, false, true, false, false, true, false, false] is Range<Int16>), (Int16(-100) is Rune), (((UInt64(119)&127)..=(UInt64(238)&127):((64|1))) is Option<Bool>), (Option<Bool>.Some(false) is Rune), false, ([false, false, true, false, true, false, true, true, true, true] is Float32)] is Int64), ((UInt8(220), Float32(Float32(-88.0)), true) is (UInt64, Unit, Range<UInt8>, Int8, UInt64)), false, (UInt32(Int8(Int8(-49))) is Interface_1668701629105_132)];
                for (i in loopTimeVar_1668701629105_335 where var_1668701629105_294) {
                    UInt64(240);
                    var_1668701629105_308
                }
            } catch (_) { // block id: 387
                (var_1668701629105_391, var_1668701629105_394, false)[0];
                var loopTimeVar_1668701629105_401 : Array<Bool> = [(Int32(-3) is Option<Bool>), (Class_1668701629105_127() is Int32), true, (Class_1668701629105_127() is Unit), ((UInt64(167), (), ((UInt8(156)&127)..(UInt8(21)&127):((8|1))), Int8(UInt8(128)), UInt64((-21))) is (Int64, Int32) -> Unit), false, true, true, (((UInt64(123)&127)..(UInt64(142)&127):(((-64)|1))) is Float32), (Class_1668701629105_127() is Option<Int64>)];
                for (i in loopTimeVar_1668701629105_401 where true) {

                }
            } finally { // block id: 432
                var loopTimeVar_1668701629105_437 : Int64 = 0;
                while ((true) && loopTimeVar_1668701629105_437 < 100 ) {
                    loopTimeVar_1668701629105_437++;

                };
                try (resource = Class_1668701629105_127()) { // block id: 439
                    ();
                    var_1668701629105_174
                } finally { // block id: 442
                    ((var_1668701629105_445&127)..(Int16(48)&127):((var_1668701629105_92|1)));
                    var_1668701629105_188
                }
            };
            let var_1668701629105_918 : (Bool) -> ((Rune, Int8), Range<UInt16>, Option<Bool>) = func_1668701629105_459;
            func func_1668701629105_453(param_1668701629105_454 : UInt32) : Option<Bool> { // block id: 455
                let var_1668701629105_933 : Array<Int64> = [111, 82, (-116), (-2), (-8), (-5), 109, 21, 5, (-54)];
                (if (var_1668701629105_774) { // block id: 922
                    var_1668701629105_891++;
                    var var_1668701629105_927 : Int8 = Int8(UInt8(193));
                    var_1668701629105_927--;
                    false
                } else { // block id: 931
                    var_1668701629105_933;
                    true
                }|>var_1668701629105_918)[2]
            }
;
            try { // block id: 451
                func_1668701629105_453(UInt32(141))
            } catch (_) { // block id: 938
                var_1668701629105_942[3];
                (var_1668701629105_960 ?? var_1668701629105_79)
            };
            Class_1668701629105_127.var_1668701629105_969
        }
;
        func_1668701629105_271(var_1668701629105_980, var_1668701629105_983)
    }
}


public func func_1668701629105_63(param_1668701629105_64 : Float64, param_1668701629105_65 : String, param_1668701629105_66 : Bool) : Bool { // block id: 67
    var var_1668701629105_988 : (Option<Bool>) -> Bool = func_1668701629105_97;
    if ((match (var_1668701629105_72) {
        case caseVar_1668701629105_76 => 
            var_1668701629105_79
        
        case 29 | 76 | 124 => 
            Int8(14) % ((Int8(124)) | 1);
            var_1668701629105_79
        
        case _ => 
            var_1668701629105_92;
            r'T';
            var_1668701629105_79
        
    } ?? (var_1668701629105_79|>var_1668701629105_988))) { // block id: 991
        var loopTimeVar_1668701629105_1002 : Int64 = 0;
        while ((true) && loopTimeVar_1668701629105_1002 < 100 ) {
            loopTimeVar_1668701629105_1002++;
            var_1668701629105_549;
            var var_1668701629105_998 : Bool = false;
            var_1668701629105_998 ||= var_1668701629105_774
        };
        (Option<Unit>.None ?? ());
        (var_1668701629105_79 ?? false)
    } else if (match (Option<Bool>.Some(var_1668701629105_774)) {
        case _ : Range<Int8> => 
            var_1668701629105_1021
        
        case _ => 
            Option<Unit>.None;
            ((88&127)..(var_1668701629105_92&127):((123|1)));
            if (var_1668701629105_774) { var_1668701629105_1039 } else { (var_1668701629105_891, Float32(-72.0), var_1668701629105_1049) } 
        
        case _ => 
            ();
            (var_1668701629105_891, var_1668701629105_859, false)
        
    }[2]) { // block id: 1060
        var var_1668701629105_1065 : ?(Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>) = (Float32(74.0) as (Range<Int64>, Range<Int16>, UInt16, Range<Int8>, Option<((Rune, Int8), Range<UInt16>, Option<Bool>)>, UInt32, Array<UInt64>, Array<UInt64>, Range<UInt32>));
        var loopTimeVar_1668701629105_1069 : Int64 = 0;
        while ((false) && loopTimeVar_1668701629105_1069 < 100 ) {
            loopTimeVar_1668701629105_1069++;
            var_1668701629105_1065
        };
        false
    } else { // block id: 1071
        var_1668701629105_780;
        [var_1668701629105_774, var_1668701629105_1049, var_1668701629105_774, var_1668701629105_1079, false, var_1668701629105_1049, false, false, var_1668701629105_1049, false][2]
    }
}

public struct Struct_1668701629105_1183 {
    public init() { // block id: 1185

    }
;
    public let var_1668701629105_1190 : Unit = ()
}

func func_1668701629105_59(param_1668701629105_60 : String) : Bool { // block id: 61
    let var_1668701629105_1090 : Class_1668701629105_127 = Class_1668701629105_127();
    let var_1668701629105_1201 : String = "+d@FsGZ.a|";
    func_1668701629105_63(var_1668701629105_1090.func_1668701629105_1093(var_1668701629105_859, namedParam_1668701629105_1095 : Float32(-86.0), optionalParam_1668701629105_1096 : [79, 87, (-126), (-47), (-66), 79, 53, 31, 12, (-41)]), try { // block id: 1197
        if (var_1668701629105_1079) { var_1668701629105_1201 } else { "`D_?q&;xu=" } 
    } catch (_) { // block id: 1204
        ();
        var_1668701629105_1201
    } finally { // block id: 1207
        if (var_1668701629105_1049) { "HOGM_>dPQL" } else { "Y;xyg\"0vPF" } 
    }, ([Option<Bool>.None, Option<Bool>.None, var_1668701629105_79, var_1668701629105_79, var_1668701629105_79, Option<Bool>.None, Option<Bool>.None, var_1668701629105_79, var_1668701629105_79, Option<Bool>.None][3] ?? true))
}

func func_1668701629105_11(namedParam_1668701629105_12 ! : Int8, namedParam_1668701629105_13 ! : Unit) : Rune { // block id: 14
    let var_1668701629105_46 : Unit = ();
    let var_1668701629105_1229 : (String) -> Bool = func_1668701629105_59;
    func func_1668701629105_16(param_1668701629105_17 : Unit) : Rune { // block id: 18
        var var_1668701629105_32 : UInt64 = UInt64(237);
        var var_1668701629105_35 : Float64 = Float64(107.0);
        if ((Option<Bool>.Some(true) ?? true)) { (var_1668701629105_32, var_1668701629105_35) } else { try { // block id: 39
            ();
            (var_1668701629105_32, var_1668701629105_35)
        } finally { // block id: 44
            var_1668701629105_46;
            ();
            var var_1668701629105_52 : Float64 = (-88.0);
            (var_1668701629105_32, var_1668701629105_52)
        } } [0];
        var var_1668701629105_1243 : Range<Int16> = ((Int16(Int16(UInt8(229)))&127)..=(Int16(Int16(Int16(-62)))&127):((79|1)));
        if (("Y+7mt_#b&4"|>var_1668701629105_1229)) { (if (var_1668701629105_1049) { var_1668701629105_983 } else { (r'1', Int8(116)) } ) } else { try { // block id: 1239
            var_1668701629105_983
        } finally { // block id: 1241
            var_1668701629105_1243;
            (var_1668701629105_656, Int8(37))
        } } [0]
    }
;
    func_1668701629105_16(try { // block id: 1259
        var_1668701629105_188;
        var_1668701629105_188;
        if (false) { [(), (), (), (), (), (), (), (), (), ()] } else { [(), (), (), (), (), (), (), (), (), ()] } 
    } finally { // block id: 1266
        ();
        Option<Option<Bool>>.None;
        [var_1668701629105_188, (), var_1668701629105_188, (), var_1668701629105_188, var_1668701629105_188, (), var_1668701629105_188, (), var_1668701629105_188]
    }[9])
}

func func_1668701629105_7(param_1668701629105_8 : UInt8) : String { // block id: 9
    let var_1668701629105_1328 : ?Range<Int64> = ((((Int64(Int16(-65))&127)..((-19)&127):((48|1))), ((Int16(-109)&127)..(Int16(27)&127):((-92)|1)), UInt16(UInt8(70)), ((Int8(-113)&127)..(Int8(-63)&127):((-54)|1)), ((Float32(69.0), (-70), Option<Int64>.None, Int32(17), (), "]5}IE94j7,", r'b') as ((Rune, Int8), Range<UInt16>, Option<Bool>)), UInt32(UInt32(UInt16(40))), [UInt64(60), UInt64(99), UInt64(86), UInt64(169), UInt64(151), UInt64(112), UInt64(181), UInt64(144), UInt64(64), UInt64(86)], [UInt64(243), UInt64(Int16(-70)), UInt64(UInt16(176)), UInt64(99), UInt64(240), UInt64(UInt16(215)), UInt64(UInt32(237)), UInt64(102), UInt64(143), UInt64(UInt16(162))], ((UInt32(229)&127)..=(UInt32(206)&127):(((-63)|1)))) as Range<Int64>);
    var var_1668701629105_1384 : Float64 = 32.0;
    var var_1668701629105_1394 : Int8 = Int8(Int8(-20));
    let var_1668701629105_1398 : Array<Int64> = [(-47), (-82), (-35), (-116), 14, (-11), (-25), (-107), 102, 24];
    func_1668701629105_11(namedParam_1668701629105_12 : Int8(11), namedParam_1668701629105_13 : match (try { // block id: 1284
        if (var_1668701629105_1049) { [var_1668701629105_79, Option<Bool>.None, Option<Bool>.None, Option<Bool>.Some(var_1668701629105_774), Option<Bool>.Some(false), Option<Bool>.Some(var_1668701629105_1049), var_1668701629105_79, var_1668701629105_79, Option<Bool>.Some(true), Option<Bool>.None] } else { [Option<Bool>.Some(true), var_1668701629105_79, Option<Bool>.Some(true), var_1668701629105_79, Option<Bool>.Some(var_1668701629105_774), var_1668701629105_79, Option<Bool>.None, var_1668701629105_79, Option<Bool>.None, var_1668701629105_79] } ;
        if (var_1668701629105_774) { Option<Range<Int64>>.Some(((69&127)..=(15&127):((-34)|1))) } else { Option<Range<Int64>>.None } 
    } finally { // block id: 1321
        var_1668701629105_891 -= var_1668701629105_891;
        Option<Range<Int64>>.Some((((-106)&127)..=(11&127):((-119)|1)));
        var_1668701629105_1328
    }) {
        case caseVar_1668701629105_1375 : Array<UInt64> => 
            ()
        
        case caseVar_1668701629105_1380 : Option<Rune> => 
            var_1668701629105_1384 += var_1668701629105_1384;
            let var_1668701629105_1388 : Unit = ();
            var_1668701629105_1388
        
        case _ => 
            var_1668701629105_1394--;
            var_1668701629105_1398;
            var_1668701629105_188
        
    });
    let var_1668701629105_1424 : String = "UZ(e)uaEw0";
    if (var_1668701629105_1079) { // block id: 1403
        var loopTimeVar_1668701629105_1412 : Int64 = 0;
        do {
            loopTimeVar_1668701629105_1412++;
            (var_1668701629105_891, var_1668701629105_859, true)
        } while ((var_1668701629105_1049) && loopTimeVar_1668701629105_1412 < 100 ) ;
        match (Option<Range<Int64>>.None) {
            case _ : ((Rune, Int8), Range<UInt16>, Option<Bool>) => 
                var_1668701629105_1419
            
            case _ => 
                var_1668701629105_1424
            
        }
    } else { // block id: 1426
        try { // block id: 1428
            var_1668701629105_188;
            var_1668701629105_188;
            "/v|H5wzl!n"
        } finally { // block id: 1432
            var_1668701629105_1435 >>= ((UInt32(34)) & 7);
            "40!dY`Jd,W"
        }
    }
}

main(): Int64 {
    try {
        let var_1668701629105_1441 : (UInt8) -> String = func_1668701629105_7;
        if (var_1668701629105_774) { // block id: 1445
            var var_1668701629105_1448 : Int16 = Int16(-112);
            var_1668701629105_1448 ^= var_1668701629105_1448;
            var_1668701629105_891
        } else if (true) { // block id: 1453
            UInt8(170)
        } else { // block id: 1455
            var_1668701629105_891 + var_1668701629105_891
        }|>var_1668701629105_1441;
        let var_1668701629105_1461 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var_1668701629105_1461[0];
        Int64(var_1668701629105_1478[1])
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1668701629105_127 {
    public func func_1668701629105_1093(param_1668701629105_1094 : Float32, namedParam_1668701629105_1095 ! : Float32, optionalParam_1668701629105_1096 ! : Array<Int64> = [81, Int64(77), Int64(UInt8(196)), 86, (-30), 0, 83, (-15), Int64(96), (-109)]) : Float64 { // block id: 1111
        var var_1668701629105_1134 : (UInt64, Unit, Range<UInt8>, Int8, UInt64) = (UInt64(205), (), ((UInt8(UInt8(UInt8(48)))&127)..(UInt8(UInt8(Int8(87)))&127):((Int64(UInt32(UInt32(115)))|1))), Int8(Int8(98)), UInt64(83));
        var var_1668701629105_1161 : Float64 = 22.0;
        if (try { // block id: 1114
            var_1668701629105_188;
            var_1668701629105_1118 == Int8(103)
        } finally { // block id: 1130
            if (true) { var_1668701629105_1134 } else { var_1668701629105_1134 } ;
            true
        }) { // block id: 1153
            var_1668701629105_188;
            (((Int16(19)&127)..(Int16(-125)&127):((var_1668701629105_596|1))), var_1668701629105_1161, true, Class_1668701629105_127(), [(-40), 50, 98, (-108), (-62), (-121), (-24), 1, 89, (-34)], (), (-26.0));
            Class_1668701629105_127.var_1668701629105_1171
        } else if (if (var_1668701629105_1049) { var_1668701629105_1177 } else { var_1668701629105_1177 } [1]) { // block id: 1181
            var_1668701629105_1187.var_1668701629105_1190
        };
        (-79.0)
    }

}

