/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

@Deprecated
public const var_1730925450111_17: Int64 = -76
@Deprecated
public let var_1730925450111_46: Class_1730925450111_35 = Class_1730925450111_35()
let var_1730925450111_65: Float32 = Float32(Float32(Float32(-1.0)))
var var_1730925450111_87: Float64 = Float64(Float32(Float32(-92.0)))
public var var_1730925450111_166: Bool = (() is Class_1730925450111_35)
let var_1730925450111_184: Int16 = Int16(-14)
public const var_1730925450111_220: Int64 = -4
let var_1730925450111_260: (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)) = (Int8(79),
    Int32(UInt16(Int16(-85))), UInt32(Int32(-63)), (r'X', r'P', (r'W' as Float32), UInt32(Int16(UInt8(28))), Int8(Int8(UInt8(243))),
        Float64(Float32(Float32(-46.0))), ()))
internal var var_1730925450111_286: UInt = UInt64(Int8(UInt8(UInt8(Int8(-60)))))
let var_1730925450111_304: VArray<Unit, $7> = [(), (), (), (), (), (), ()]
let var_1730925450111_317: Range<UInt8> = ((UInt8(UInt8(UInt8(Int8(-99)))) & 127)..=(UInt8(UInt8(Int8(Int8(UInt8(178))))) &
    127) : (Int64(-10) | 1))
@Deprecated
internal var var_1730925450111_338: Unit = ()
internal const var_1730925450111_384: Int8 = -21
public var var_1730925450111_436: UInt16 = UInt16(162)
var var_1730925450111_449: Range<UInt16> = ((UInt16(UInt16(70)) & 127)..=(UInt16(UInt16(85)) & 127) : (Int64(-115) | 1))
@Deprecated
public var var_1730925450111_465: Option<Float32> = Option<Float32>.None
@Deprecated
const var_1730925450111_570: Int16 = 52
public var var_1730925450111_576: UInt32 = UInt32(Int32(UInt16(UInt8(UInt8(134)))))
@Deprecated
public var var_1730925450111_645: Int32 = Int32(Int8(Int8(82)))
var var_1730925450111_743: Int8 = Int8(UInt8(Int8(-35)))
internal var var_1730925450111_858: (UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64) = (UInt8(167),
    Int16(UInt8(127)), ((UInt8(UInt8(228)) & 127)..(UInt8(UInt8(38)) & 127) : (Int64(Int32(Int16(47))) | 1)), (), Int8(77),
    VArray<Unit, $7>({i => ()}), Float64(118.0))
@Deprecated
internal var var_1730925450111_885: Int8 = Int8(UInt8(152))
public let var_1730925450111_982: Rune = r'8'
internal var var_1730925450111_1033: (UInt64, Bool, Float64) = (UInt64(44), ((((UInt64(UInt64(191)) & 127)..(UInt64(UInt64(147)) &
        127) : (Int64(-45) | 1)) as Float32) is Interface_1730925450111_137), Float64(Float32(Float32(-48.0))))
public let var_1730925450111_1169: UInt16 = UInt16(UInt8(UInt8(31)))
public let var_1730925450111_1178: (Unit, Range<Int32>) = ((), ((Int32(Int32(UInt16(119))) & 127)..(Int32(Int32(Int8(Int8(-112)))) &
        127) : (Int64(Int32(UInt8(95))) | 1)))
public let var_1730925450111_1195: Range<Int8> = ((Int8(Int8(24)) & 127)..=(Int8(Int8(122)) & 127) : (Int64(2) | 1))
public var var_1730925450111_1244: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
    Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, Int16, Range<UInt8>, 
    Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(56), Int16(UInt16(46)), ((UInt8(UInt8(141)) & 127)..=(UInt8(UInt8(132)) &
            127) : (Int64(-64) | 1)), (), Int8(-84), VArray<Unit, $7>({i => ()}), Float64(Float32(Float32(-40.0)))), ((false as Float32) as Float32),
    (), Int64(Int16(-99)), (Int8(-91), Int32(12), UInt32(Int16(Int16(-30))), (r'9', r'o', Option<Float32>.None, UInt32(Int8(107)),
            Int8(34), Float64(Float32(-33.0)), ())), (UInt8(181), Int16(Int8(UInt8(199))), ((UInt8(UInt8(138)) & 127)..=(UInt8(UInt8(210)) &
            127) : (Int64(Int64(76)) | 1)), (), Int8(124), VArray<Unit, $7>(repeat: ()), Float64(Float64(Float32(78.0)))))
@Deprecated
public var var_1730925450111_1399: Option<Bool> = (((UInt32(UInt32(89)) & 127)..(UInt32(UInt32(51)) & 127) : (Int64(66) |
    1)) as Bool)
@Deprecated
let var_1730925450111_1431: ?Unit = ([false, true, false, true, false, true, false, true, false, true] as Unit)
public var var_1730925450111_1470: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'h', r'b', Option<Float32>
        .None, UInt32(205), Int8(UInt8(199)), Float64(Float32(-29.0)), ())
internal const var_1730925450111_1488: String = "g0]!)P,CB|"
@Deprecated
internal var var_1730925450111_1495: ((Option<Unit>, Rune, Class_1730925450111_35, Float32, Option<Unit>, Option<Float32>, 
    Array<Range<Int16>>), Class_1730925450111_107, (Option<Bool>, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, 
    Unit), Option<Float32>, Int64, Option<Bool>, String, Class_1730925450111_107, Float32, Int16), (UInt8, Int16, Range<UInt8>, 
    Unit, Int8, VArray<Unit, $7>, Float64)) = ((Option<Unit>.None, r'K', Class_1730925450111_35(), Float32(Float32(Float32(20.0))),
        Option<Unit>.None, ([UInt64(155), UInt64(114), UInt64(189), UInt64(142), UInt64(153), UInt64(143), UInt64(241),
            UInt64(20), UInt64(46), UInt64(122)] as Float32), [((Int16(Int16(108)) & 127)..(Int16(Int16(126)) & 127) : (Int64(-18) |
            1)), ((Int16(Int16(-112)) & 127)..=(Int16(Int16(-29)) & 127) : (Int64(-81) | 1)),
            ((Int16(Int16(-69)) & 127)..(Int16(Int16(-90)) & 127) : (Int64(-58) | 1)),
            ((Int16(Int16(-121)) & 127)..(Int16(Int16(83)) & 127) : (Int64(26) | 1)),
            ((Int16(Int16(52)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(75) | 1)),
            ((Int16(Int16(-25)) & 127)..=(Int16(Int16(-48)) & 127) : (Int64(48) | 1)),
            ((Int16(Int16(11)) & 127)..(Int16(Int16(-76)) & 127) : (Int64(119) | 1)),
            ((Int16(Int16(-9)) & 127)..(Int16(Int16(-22)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(69)) & 127)..(Int16(Int16(-94)) & 127) : (Int64(-56) | 1)),
            ((Int16(Int16(-99)) & 127)..(Int16(Int16(-112)) & 127) : (Int64(45) | 1))]), Class_1730925450111_107(), (Option<Bool>
            .None, (r'Z', r'4', (Class_1730925450111_107() as Float32), UInt32(119), Int8(UInt8(217)), Float64(Float32(83.0)),
            ()), Option<Float32>.None, Int64(111), (Option<Float32>.None as Bool),
        ###"&sX]upVE!2${var_1730925450111_1488}"###, Class_1730925450111_107(), Float32(Float32(Float32(-105.0))), Int16(UInt16(97))),
    (UInt8(32), Int16(UInt16(41)), ((UInt8(UInt8(163)) & 127)..=(UInt8(UInt8(236)) & 127) : (Int64(-122) | 1)), (), Int8(Int8(-113)),
        VArray<Unit, $7>({i => ()}), Float64(Float32(90.0))))
internal let var_1730925450111_1665: Float32 = Float32(118.0)
internal let var_1730925450111_1690: Unit = ()

public interface Interface_1730925450111_42 {}

public sealed interface Interface_1730925450111_41 <: Interface_1730925450111_42 {}

public interface Interface_1730925450111_43 <: Interface_1730925450111_41 {}

public sealed interface Interface_1730925450111_40 <: Interface_1730925450111_41 & Interface_1730925450111_43 {
    func func_1730925450111_676(namedParam_1730925450111_677!: () -> Unit, namedParam_1730925450111_679!: Int64,
        namedParam_1730925450111_680!: () -> Unit): Option<Float32> { // block id: 682
        var var_1730925450111_697: Range<Int16> = ((Int16(Int16(UInt16(40))) & 127)..(Int16(Int16(Int8(Int8(36)))) & 127) : (Int64(-2) |
            1));
        if (match ([((Int16(Int16(-13)) & 127)..=(Int16(Int16(-76)) & 127) : (var_1730925450111_220 | 1)),
            ((Int16(Int16(-108)) & 127)..=(Int16(Int16(64)) & 127) : (Int64(47) | 1)), var_1730925450111_697,
            ((Int16(Int16(67)) & 127)..=(Int16(Int16(-109)) & 127) : (Int64(-93) | 1)), var_1730925450111_697,
            var_1730925450111_697, var_1730925450111_697,
            ((Int16(var_1730925450111_184) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(50)) & 127)..(Int16(Int16(99)) & 127) : (Int64(117) | 1)), var_1730925450111_697][3]) {
            case caseVar_1730925450111_721: Range<Int32> => var_1730925450111_166

            case _ =>
                var_1730925450111_87 / Float64((Int32(Float64(125.0))) | 1);
                false
        }) { // block id: 731
            let var_1730925450111_756: Rune = r'E';
            if (var_1730925450111_166) { // block id: 734
                if (false) {
                    "IhAY,FCa*4"
                } else {
                    """
\\J]J8
BD.~_
"""
                }
            } else if (true) { // block id: 740
                var_1730925450111_743++;
                ();
                const var_1730925450111_749: String = "S2I%*cAz?6";
                var_1730925450111_749
            } else { // block id: 751
                if (true) {
                    r'8'
                } else {
                    var_1730925450111_756
                };
                "XSImm.Oh@q"
            }
        } else { // block id: 759
            ###"r%VLx9Uv5z"###
        };
        var var_1730925450111_768: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
            Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, 
            Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(211), Int16(Int8(UInt8(26))), ((UInt8(UInt8(148)) &
                    127)..(UInt8(UInt8(138)) & 127) : (Int64(-121) | 1)), (), Int8(Int8(41)), VArray<Unit, $7>(repeat: ()),
                Float64(80.0)), (Int32(Int16(Int16(-39))) as Float32), (), Int64(UInt64(213)), (Int8(Int8(Int8(59))),
                Int32(-37), UInt32(211), (r'R', r'u', ([((Int16(Int16(-114)) & 127)..(Int16(Int16(62)) & 127) : (Int64(-112) |
                        1)), ((Int16(Int16(50)) & 127)..=(Int16(Int16(-11)) & 127) : (Int64(29) | 1)),
                        ((Int16(Int16(-67)) & 127)..(Int16(Int16(86)) & 127) : (Int64(73) | 1)),
                        ((Int16(Int16(107)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-56) | 1)),
                        ((Int16(Int16(75)) & 127)..=(Int16(Int16(35)) & 127) : (Int64(-81) | 1)),
                        ((Int16(Int16(-102)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(-115) | 1)),
                        ((Int16(Int16(110)) & 127)..(Int16(Int16(-73)) & 127) : (Int64(14) | 1)),
                        ((Int16(Int16(8)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(2) | 1)),
                        ((Int16(Int16(73)) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-88) | 1)),
                        ((Int16(Int16(77)) & 127)..=(Int16(Int16(117)) & 127) : (Int64(126) | 1))] as Float32), UInt32(UInt8(244)),
                    Int8(UInt8(100)), Float64(Float64(121.0)), ())), (UInt8(243), Int16(103), ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(195)) &
                    127) : (Int64(-17) | 1)), (), Int8(UInt8(86)), VArray<Unit, $7>({i => ()}), Float64(Float32(94.0))));
        let var_1730925450111_906: Byte = UInt8(133);
        var var_1730925450111_913: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        (try { // block id: 765
            UInt64(14);
            var_1730925450111_768
        } catch (_) { // block id: 855
            let var_1730925450111_891: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'O', r'h',
                Option<Float32>.Some(Float32(Float32(Float32(-73.0)))), UInt32(82), Int8(-109), Float64(Float32(-121.0)),
                ());
            (var_1730925450111_858, var_1730925450111_465, (), Int64(94), (var_1730925450111_885, Int32(-43), UInt32(79),
                    var_1730925450111_891), (var_1730925450111_906, var_1730925450111_570, var_1730925450111_317,
                    var_1730925450111_338, Int8(-120), var_1730925450111_913, var_1730925450111_87))
        } finally { // block id: 916
            ((UInt64(var_1730925450111_286) & 127)..(UInt64(var_1730925450111_286) & 127) : (Int64(-124) | 1));
            var_1730925450111_768
        }[3] as Float32)
    }
}

public interface Interface_1730925450111_39 <: Interface_1730925450111_40 {
    func func_1730925450111_676(namedParam_1730925450111_677!: () -> Unit, namedParam_1730925450111_679!: Int64,
        namedParam_1730925450111_680!: () -> Unit): Option<Float32> { // block id: 682
        var var_1730925450111_697: Range<Int16> = ((Int16(Int16(UInt16(40))) & 127)..(Int16(Int16(Int8(Int8(36)))) & 127) : (Int64(-2) |
            1));
        if (match ([((Int16(Int16(-13)) & 127)..=(Int16(Int16(-76)) & 127) : (var_1730925450111_220 | 1)),
            ((Int16(Int16(-108)) & 127)..=(Int16(Int16(64)) & 127) : (Int64(47) | 1)), var_1730925450111_697,
            ((Int16(Int16(67)) & 127)..=(Int16(Int16(-109)) & 127) : (Int64(-93) | 1)), var_1730925450111_697,
            var_1730925450111_697, var_1730925450111_697,
            ((Int16(var_1730925450111_184) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(50)) & 127)..(Int16(Int16(99)) & 127) : (Int64(117) | 1)), var_1730925450111_697][3]) {
            case caseVar_1730925450111_721: Range<Int32> => var_1730925450111_166

            case _ =>
                var_1730925450111_87 / Float64((Int32(Float64(125.0))) | 1);
                false
        }) { // block id: 731
            let var_1730925450111_756: Rune = r'E';
            if (var_1730925450111_166) { // block id: 734
                if (false) {
                    "IhAY,FCa*4"
                } else {
                    """
\\J]J8
BD.~_
"""
                }
            } else if (true) { // block id: 740
                var_1730925450111_743++;
                ();
                const var_1730925450111_749: String = "S2I%*cAz?6";
                var_1730925450111_749
            } else { // block id: 751
                if (true) {
                    r'8'
                } else {
                    var_1730925450111_756
                };
                "XSImm.Oh@q"
            }
        } else { // block id: 759
            ###"r%VLx9Uv5z"###
        };
        var var_1730925450111_768: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
            Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, 
            Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(211), Int16(Int8(UInt8(26))), ((UInt8(UInt8(148)) &
                    127)..(UInt8(UInt8(138)) & 127) : (Int64(-121) | 1)), (), Int8(Int8(41)), VArray<Unit, $7>(repeat: ()),
                Float64(80.0)), (Int32(Int16(Int16(-39))) as Float32), (), Int64(UInt64(213)), (Int8(Int8(Int8(59))),
                Int32(-37), UInt32(211), (r'R', r'u', ([((Int16(Int16(-114)) & 127)..(Int16(Int16(62)) & 127) : (Int64(-112) |
                        1)), ((Int16(Int16(50)) & 127)..=(Int16(Int16(-11)) & 127) : (Int64(29) | 1)),
                        ((Int16(Int16(-67)) & 127)..(Int16(Int16(86)) & 127) : (Int64(73) | 1)),
                        ((Int16(Int16(107)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-56) | 1)),
                        ((Int16(Int16(75)) & 127)..=(Int16(Int16(35)) & 127) : (Int64(-81) | 1)),
                        ((Int16(Int16(-102)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(-115) | 1)),
                        ((Int16(Int16(110)) & 127)..(Int16(Int16(-73)) & 127) : (Int64(14) | 1)),
                        ((Int16(Int16(8)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(2) | 1)),
                        ((Int16(Int16(73)) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-88) | 1)),
                        ((Int16(Int16(77)) & 127)..=(Int16(Int16(117)) & 127) : (Int64(126) | 1))] as Float32), UInt32(UInt8(244)),
                    Int8(UInt8(100)), Float64(Float64(121.0)), ())), (UInt8(243), Int16(103), ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(195)) &
                    127) : (Int64(-17) | 1)), (), Int8(UInt8(86)), VArray<Unit, $7>({i => ()}), Float64(Float32(94.0))));
        let var_1730925450111_906: Byte = UInt8(133);
        var var_1730925450111_913: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        (try { // block id: 765
            UInt64(14);
            var_1730925450111_768
        } catch (_) { // block id: 855
            let var_1730925450111_891: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'O', r'h',
                Option<Float32>.Some(Float32(Float32(Float32(-73.0)))), UInt32(82), Int8(-109), Float64(Float32(-121.0)),
                ());
            (var_1730925450111_858, var_1730925450111_465, (), Int64(94), (var_1730925450111_885, Int32(-43), UInt32(79),
                    var_1730925450111_891), (var_1730925450111_906, var_1730925450111_570, var_1730925450111_317,
                    var_1730925450111_338, Int8(-120), var_1730925450111_913, var_1730925450111_87))
        } finally { // block id: 916
            ((UInt64(var_1730925450111_286) & 127)..(UInt64(var_1730925450111_286) & 127) : (Int64(-124) | 1));
            var_1730925450111_768
        }[3] as Float32)
    }
}

public interface Interface_1730925450111_44 <: Interface_1730925450111_42 & Interface_1730925450111_43 {}

public interface Interface_1730925450111_38 <: Interface_1730925450111_39 & Interface_1730925450111_44 {
    func func_1730925450111_676(namedParam_1730925450111_677!: () -> Unit, namedParam_1730925450111_679!: Int64,
        namedParam_1730925450111_680!: () -> Unit): Option<Float32> { // block id: 682
        var var_1730925450111_697: Range<Int16> = ((Int16(Int16(UInt16(40))) & 127)..(Int16(Int16(Int8(Int8(36)))) & 127) : (Int64(-2) |
            1));
        if (match ([((Int16(Int16(-13)) & 127)..=(Int16(Int16(-76)) & 127) : (var_1730925450111_220 | 1)),
            ((Int16(Int16(-108)) & 127)..=(Int16(Int16(64)) & 127) : (Int64(47) | 1)), var_1730925450111_697,
            ((Int16(Int16(67)) & 127)..=(Int16(Int16(-109)) & 127) : (Int64(-93) | 1)), var_1730925450111_697,
            var_1730925450111_697, var_1730925450111_697,
            ((Int16(var_1730925450111_184) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(50)) & 127)..(Int16(Int16(99)) & 127) : (Int64(117) | 1)), var_1730925450111_697][3]) {
            case caseVar_1730925450111_721: Range<Int32> => var_1730925450111_166

            case _ =>
                var_1730925450111_87 / Float64((Int32(Float64(125.0))) | 1);
                false
        }) { // block id: 731
            let var_1730925450111_756: Rune = r'E';
            if (var_1730925450111_166) { // block id: 734
                if (false) {
                    "IhAY,FCa*4"
                } else {
                    """
\\J]J8
BD.~_
"""
                }
            } else if (true) { // block id: 740
                var_1730925450111_743++;
                ();
                const var_1730925450111_749: String = "S2I%*cAz?6";
                var_1730925450111_749
            } else { // block id: 751
                if (true) {
                    r'8'
                } else {
                    var_1730925450111_756
                };
                "XSImm.Oh@q"
            }
        } else { // block id: 759
            ###"r%VLx9Uv5z"###
        };
        var var_1730925450111_768: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
            Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, 
            Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(211), Int16(Int8(UInt8(26))), ((UInt8(UInt8(148)) &
                    127)..(UInt8(UInt8(138)) & 127) : (Int64(-121) | 1)), (), Int8(Int8(41)), VArray<Unit, $7>(repeat: ()),
                Float64(80.0)), (Int32(Int16(Int16(-39))) as Float32), (), Int64(UInt64(213)), (Int8(Int8(Int8(59))),
                Int32(-37), UInt32(211), (r'R', r'u', ([((Int16(Int16(-114)) & 127)..(Int16(Int16(62)) & 127) : (Int64(-112) |
                        1)), ((Int16(Int16(50)) & 127)..=(Int16(Int16(-11)) & 127) : (Int64(29) | 1)),
                        ((Int16(Int16(-67)) & 127)..(Int16(Int16(86)) & 127) : (Int64(73) | 1)),
                        ((Int16(Int16(107)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-56) | 1)),
                        ((Int16(Int16(75)) & 127)..=(Int16(Int16(35)) & 127) : (Int64(-81) | 1)),
                        ((Int16(Int16(-102)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(-115) | 1)),
                        ((Int16(Int16(110)) & 127)..(Int16(Int16(-73)) & 127) : (Int64(14) | 1)),
                        ((Int16(Int16(8)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(2) | 1)),
                        ((Int16(Int16(73)) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-88) | 1)),
                        ((Int16(Int16(77)) & 127)..=(Int16(Int16(117)) & 127) : (Int64(126) | 1))] as Float32), UInt32(UInt8(244)),
                    Int8(UInt8(100)), Float64(Float64(121.0)), ())), (UInt8(243), Int16(103), ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(195)) &
                    127) : (Int64(-17) | 1)), (), Int8(UInt8(86)), VArray<Unit, $7>({i => ()}), Float64(Float32(94.0))));
        let var_1730925450111_906: Byte = UInt8(133);
        var var_1730925450111_913: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        (try { // block id: 765
            UInt64(14);
            var_1730925450111_768
        } catch (_) { // block id: 855
            let var_1730925450111_891: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'O', r'h',
                Option<Float32>.Some(Float32(Float32(Float32(-73.0)))), UInt32(82), Int8(-109), Float64(Float32(-121.0)),
                ());
            (var_1730925450111_858, var_1730925450111_465, (), Int64(94), (var_1730925450111_885, Int32(-43), UInt32(79),
                    var_1730925450111_891), (var_1730925450111_906, var_1730925450111_570, var_1730925450111_317,
                    var_1730925450111_338, Int8(-120), var_1730925450111_913, var_1730925450111_87))
        } finally { // block id: 916
            ((UInt64(var_1730925450111_286) & 127)..(UInt64(var_1730925450111_286) & 127) : (Int64(-124) | 1));
            var_1730925450111_768
        }[3] as Float32)
    }
}

public open class Class_1730925450111_35 <: Interface_1730925450111_38 {
    public init() { // block id: 37

    }

    @Frozen
    mut prop var_1730925450111_49: Bool { // block id: 50
        get() { // block id: 52
            ();
            true;
            var_1730925450111_1697
        }
        set(Value) { // block id: 57
            ();
            ();
            ();
            var_1730925450111_1697 = Value
        }
    }
    mut prop var_1730925450111_1697: Bool { // block id: 1698
        get() { // block id: 1700
            r'Y';
            true
        }
        set(Value) { // block id: 1705
            Int16(26);
            ()
        }
    }
    public open override func func_1730925450111_676(namedParam_1730925450111_677!: () -> Unit,
        namedParam_1730925450111_679!: Int64, namedParam_1730925450111_680!: () -> Unit): Option<Float32> { // block id: 682
        var var_1730925450111_697: Range<Int16> = ((Int16(Int16(UInt16(40))) & 127)..(Int16(Int16(Int8(Int8(36)))) & 127) : (Int64(-2) |
            1));
        if (match ([((Int16(Int16(-13)) & 127)..=(Int16(Int16(-76)) & 127) : (var_1730925450111_220 | 1)),
            ((Int16(Int16(-108)) & 127)..=(Int16(Int16(64)) & 127) : (Int64(47) | 1)), var_1730925450111_697,
            ((Int16(Int16(67)) & 127)..=(Int16(Int16(-109)) & 127) : (Int64(-93) | 1)), var_1730925450111_697,
            var_1730925450111_697, var_1730925450111_697,
            ((Int16(var_1730925450111_184) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(50)) & 127)..(Int16(Int16(99)) & 127) : (Int64(117) | 1)), var_1730925450111_697][3]) {
            case caseVar_1730925450111_721: Range<Int32> => var_1730925450111_166

            case _ =>
                var_1730925450111_87 / Float64((Int32(Float64(125.0))) | 1);
                false
        }) { // block id: 731
            let var_1730925450111_756: Rune = r'E';
            if (var_1730925450111_166) { // block id: 734
                if (false) {
                    "IhAY,FCa*4"
                } else {
                    """
\\J]J8
BD.~_
"""
                }
            } else if (true) { // block id: 740
                var_1730925450111_743++;
                ();
                const var_1730925450111_749: String = "S2I%*cAz?6";
                var_1730925450111_749
            } else { // block id: 751
                if (true) {
                    r'8'
                } else {
                    var_1730925450111_756
                };
                "XSImm.Oh@q"
            }
        } else { // block id: 759
            ###"r%VLx9Uv5z"###
        };
        var var_1730925450111_768: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
            Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, 
            Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(211), Int16(Int8(UInt8(26))), ((UInt8(UInt8(148)) &
                    127)..(UInt8(UInt8(138)) & 127) : (Int64(-121) | 1)), (), Int8(Int8(41)), VArray<Unit, $7>(repeat: ()),
                Float64(80.0)), (Int32(Int16(Int16(-39))) as Float32), (), Int64(UInt64(213)), (Int8(Int8(Int8(59))),
                Int32(-37), UInt32(211), (r'R', r'u', ([((Int16(Int16(-114)) & 127)..(Int16(Int16(62)) & 127) : (Int64(-112) |
                        1)), ((Int16(Int16(50)) & 127)..=(Int16(Int16(-11)) & 127) : (Int64(29) | 1)),
                        ((Int16(Int16(-67)) & 127)..(Int16(Int16(86)) & 127) : (Int64(73) | 1)),
                        ((Int16(Int16(107)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-56) | 1)),
                        ((Int16(Int16(75)) & 127)..=(Int16(Int16(35)) & 127) : (Int64(-81) | 1)),
                        ((Int16(Int16(-102)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(-115) | 1)),
                        ((Int16(Int16(110)) & 127)..(Int16(Int16(-73)) & 127) : (Int64(14) | 1)),
                        ((Int16(Int16(8)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(2) | 1)),
                        ((Int16(Int16(73)) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-88) | 1)),
                        ((Int16(Int16(77)) & 127)..=(Int16(Int16(117)) & 127) : (Int64(126) | 1))] as Float32), UInt32(UInt8(244)),
                    Int8(UInt8(100)), Float64(Float64(121.0)), ())), (UInt8(243), Int16(103), ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(195)) &
                    127) : (Int64(-17) | 1)), (), Int8(UInt8(86)), VArray<Unit, $7>({i => ()}), Float64(Float32(94.0))));
        let var_1730925450111_906: Byte = UInt8(133);
        var var_1730925450111_913: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        (try { // block id: 765
            UInt64(14);
            var_1730925450111_768
        } catch (_) { // block id: 855
            let var_1730925450111_891: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'O', r'h',
                Option<Float32>.Some(Float32(Float32(Float32(-73.0)))), UInt32(82), Int8(-109), Float64(Float32(-121.0)),
                ());
            (var_1730925450111_858, var_1730925450111_465, (), Int64(94), (var_1730925450111_885, Int32(-43), UInt32(79),
                    var_1730925450111_891), (var_1730925450111_906, var_1730925450111_570, var_1730925450111_317,
                    var_1730925450111_338, Int8(-120), var_1730925450111_913, var_1730925450111_87))
        } finally { // block id: 916
            ((UInt64(var_1730925450111_286) & 127)..(UInt64(var_1730925450111_286) & 127) : (Int64(-124) | 1));
            var_1730925450111_768
        }[3] as Float32)
    }

    static init() {
    }
}

public sealed interface Interface_1730925450111_110 {}

public open class Class_1730925450111_107 <: Class_1730925450111_35 & Interface_1730925450111_110 & Interface_1730925450111_43 {
    public init() { // block id: 109

    }

    init(param_1730925450111_365: Range<Int8>, param_1730925450111_366: Bool,
        namedParam_1730925450111_367!: Array<UInt64>) { // block id: 368
        let var_1730925450111_391: Rune = r'4';
        var var_1730925450111_398: UInt32 = UInt32(125);
        (Option<(Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)>.None ?? try { // block id: 376
            ();
            (r'E', r'e', Option<Float32>.None, UInt32(71), var_1730925450111_384, Float64(65.0), ())
        } catch (_) { // block id: 388
            let var_1730925450111_395: Option<Float32> = Option<Float32>.None;
            (var_1730925450111_391, r'S', var_1730925450111_395, var_1730925450111_398, Int8(-17), var_1730925450111_87,
                ())
        })
    };

    public init(param_1730925450111_1025: Range<UInt64>, param_1730925450111_1026: UInt16,
        optionalParam_1730925450111_1027!: Array<Bool> = [true, true, false, false, true, false, false, true, false,
            false]) { // block id: 1029
        var_1730925450111_1033[2];
        var_1730925450111_338;
        var var_1730925450111_1052: (Array<Range<Int16>>, Option<(UInt64, Bool, Float64)>, Int8) = ([((Int16(Int16(91)) &
                127)..=(Int16(Int16(-67)) & 127) : (Int64(-12) | 1)),
                ((Int16(Int16(20)) & 127)..=(Int16(Int16(79)) & 127) : (Int64(85) | 1)),
                ((Int16(Int16(-8)) & 127)..(Int16(Int16(-19)) & 127) : (Int64(32) | 1)),
                ((Int16(Int16(-10)) & 127)..(Int16(Int16(115)) & 127) : (Int64(115) | 1)),
                ((Int16(Int16(-121)) & 127)..=(Int16(Int16(55)) & 127) : (Int64(14) | 1)),
                ((Int16(Int16(-61)) & 127)..=(Int16(Int16(84)) & 127) : (Int64(-65) | 1)),
                ((Int16(Int16(107)) & 127)..(Int16(Int16(-27)) & 127) : (Int64(-64) | 1)),
                ((Int16(Int16(25)) & 127)..(Int16(Int16(-88)) & 127) : (Int64(71) | 1)),
                ((Int16(Int16(-123)) & 127)..=(Int16(Int16(-4)) & 127) : (Int64(53) | 1)),
                ((Int16(Int16(-94)) & 127)..=(Int16(Int16(26)) & 127) : (Int64(114) | 1))], Option<(UInt64, Bool, 
                    Float64)>.None, Int8(Int8(-123)));
        var var_1730925450111_1091: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'b', r'P',
            Option<Float32>.Some(Float32(Float32(Float32(-94.0)))), UInt32(57), Int8(-25), Float64(89.0), ());
        (var_1730925450111_1052[1] ?? try { // block id: 1060
            var_1730925450111_1033
        } catch (e: Exception) { // block id: 1062
            [false, true, var_1730925450111_166, true, var_1730925450111_166, true, var_1730925450111_166, false, true,
                var_1730925450111_166];
            ((UInt8(17), Int16(-70), ((UInt8(UInt8(179)) & 127)..(UInt8(UInt8(110)) & 127) : (Int64(14) | 1)),
                    var_1730925450111_338, Int8(76), var_1730925450111_304, Float64(50.0)), var_1730925450111_465, (),
                var_1730925450111_220, (Int8(11), Int32(-22), var_1730925450111_576, var_1730925450111_1091),
                var_1730925450111_858);
            var_1730925450111_1033
        } finally { // block id: 1105
            var_1730925450111_166 ||= false
            ();
            (UInt64(141), var_1730925450111_166, Float64(-66.0))
        })
    };

    public open override func func_1730925450111_676(namedParam_1730925450111_677!: () -> Unit,
        namedParam_1730925450111_679!: Int64, namedParam_1730925450111_680!: () -> Unit): Option<Float32> { // block id: 682
        var var_1730925450111_697: Range<Int16> = ((Int16(Int16(UInt16(40))) & 127)..(Int16(Int16(Int8(Int8(36)))) & 127) : (Int64(-2) |
            1));
        if (match ([((Int16(Int16(-13)) & 127)..=(Int16(Int16(-76)) & 127) : (var_1730925450111_220 | 1)),
            ((Int16(Int16(-108)) & 127)..=(Int16(Int16(64)) & 127) : (Int64(47) | 1)), var_1730925450111_697,
            ((Int16(Int16(67)) & 127)..=(Int16(Int16(-109)) & 127) : (Int64(-93) | 1)), var_1730925450111_697,
            var_1730925450111_697, var_1730925450111_697,
            ((Int16(var_1730925450111_184) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(83) | 1)),
            ((Int16(Int16(50)) & 127)..(Int16(Int16(99)) & 127) : (Int64(117) | 1)), var_1730925450111_697][3]) {
            case caseVar_1730925450111_721: Range<Int32> => var_1730925450111_166

            case _ =>
                var_1730925450111_87 / Float64((Int32(Float64(125.0))) | 1);
                false
        }) { // block id: 731
            let var_1730925450111_756: Rune = r'E';
            if (var_1730925450111_166) { // block id: 734
                if (false) {
                    "IhAY,FCa*4"
                } else {
                    """
\\J]J8
BD.~_
"""
                }
            } else if (true) { // block id: 740
                var_1730925450111_743++;
                ();
                const var_1730925450111_749: String = "S2I%*cAz?6";
                var_1730925450111_749
            } else { // block id: 751
                if (true) {
                    r'8'
                } else {
                    var_1730925450111_756
                };
                "XSImm.Oh@q"
            }
        } else { // block id: 759
            ###"r%VLx9Uv5z"###
        };
        var var_1730925450111_768: ((UInt8, Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64), Option<Float32>, 
            Unit, Int64, (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (UInt8, 
            Int16, Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64)) = ((UInt8(211), Int16(Int8(UInt8(26))), ((UInt8(UInt8(148)) &
                    127)..(UInt8(UInt8(138)) & 127) : (Int64(-121) | 1)), (), Int8(Int8(41)), VArray<Unit, $7>(repeat: ()),
                Float64(80.0)), (Int32(Int16(Int16(-39))) as Float32), (), Int64(UInt64(213)), (Int8(Int8(Int8(59))),
                Int32(-37), UInt32(211), (r'R', r'u', ([((Int16(Int16(-114)) & 127)..(Int16(Int16(62)) & 127) : (Int64(-112) |
                        1)), ((Int16(Int16(50)) & 127)..=(Int16(Int16(-11)) & 127) : (Int64(29) | 1)),
                        ((Int16(Int16(-67)) & 127)..(Int16(Int16(86)) & 127) : (Int64(73) | 1)),
                        ((Int16(Int16(107)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-56) | 1)),
                        ((Int16(Int16(75)) & 127)..=(Int16(Int16(35)) & 127) : (Int64(-81) | 1)),
                        ((Int16(Int16(-102)) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(-115) | 1)),
                        ((Int16(Int16(110)) & 127)..(Int16(Int16(-73)) & 127) : (Int64(14) | 1)),
                        ((Int16(Int16(8)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(2) | 1)),
                        ((Int16(Int16(73)) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-88) | 1)),
                        ((Int16(Int16(77)) & 127)..=(Int16(Int16(117)) & 127) : (Int64(126) | 1))] as Float32), UInt32(UInt8(244)),
                    Int8(UInt8(100)), Float64(Float64(121.0)), ())), (UInt8(243), Int16(103), ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(195)) &
                    127) : (Int64(-17) | 1)), (), Int8(UInt8(86)), VArray<Unit, $7>({i => ()}), Float64(Float32(94.0))));
        let var_1730925450111_906: Byte = UInt8(133);
        var var_1730925450111_913: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        (try { // block id: 765
            UInt64(14);
            var_1730925450111_768
        } catch (_) { // block id: 855
            let var_1730925450111_891: (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit) = (r'O', r'h',
                Option<Float32>.Some(Float32(Float32(Float32(-73.0)))), UInt32(82), Int8(-109), Float64(Float32(-121.0)),
                ());
            (var_1730925450111_858, var_1730925450111_465, (), Int64(94), (var_1730925450111_885, Int32(-43), UInt32(79),
                    var_1730925450111_891), (var_1730925450111_906, var_1730925450111_570, var_1730925450111_317,
                    var_1730925450111_338, Int8(-120), var_1730925450111_913, var_1730925450111_87))
        } finally { // block id: 916
            ((UInt64(var_1730925450111_286) & 127)..(UInt64(var_1730925450111_286) & 127) : (Int64(-124) | 1));
            var_1730925450111_768
        }[3] as Float32)
    }
}

public interface Interface_1730925450111_137 {}

public interface Interface_1730925450111_138 {}

public interface Interface_1730925450111_136 <: Interface_1730925450111_137 & Interface_1730925450111_138 {}

public sealed interface Interface_1730925450111_139 {}

public interface Interface_1730925450111_135 <: Interface_1730925450111_136 & Interface_1730925450111_139 {}

public interface Interface_1730925450111_134 <: Interface_1730925450111_135 {}

public sealed interface Interface_1730925450111_133 <: Interface_1730925450111_134 {}

public sealed interface Interface_1730925450111_140 {}

public interface Interface_1730925450111_132 <: Interface_1730925450111_133 & Interface_1730925450111_140 {}

public sealed interface Interface_1730925450111_141 {}

public interface Interface_1730925450111_131 <: Interface_1730925450111_132 & Interface_1730925450111_141 {}

public interface Interface_1730925450111_142 {
    @Frozen
    static func func_1730925450111_151(param_1730925450111_152: Option<Float32>, namedParam_1730925450111_153!: UInt32,
        namedParam_1730925450111_154!: Int64): Class_1730925450111_107 { // block id: 155
        const var_1730925450111_176: UInt8 = 119;
        var loopTimeVar_1730925450111_308: Int = 0;
        do {
            loopTimeVar_1730925450111_308++;
            const var_1730925450111_257: Unit = ();
            var_1730925450111_286 |> {
                lambdaParameter_1730925450111_211: UInt64 =>
                    var var_1730925450111_252: UInt32 = UInt32(UInt8(177));
                    try { // block id: 217
                        var_1730925450111_220 + var_1730925450111_220;
                        var_1730925450111_65;
                        var var_1730925450111_225: (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, 
                            Float64, Unit)) = (Int8(UInt8(Int8(5))), Int32(Int16(Int16(UInt8(83)))), UInt32(148), (r'J',
                                r'O', (UInt8(98) as Float32), UInt32(UInt32(UInt16(27))), Int8(Int8(106)), Float64(Float64(Float32(-9.0))),
                                ()));
                        var_1730925450111_225
                    } catch (e: Exception) { // block id: 249
                        var_1730925450111_252 >>= ((UInt32(231)) & 7)
                        var_1730925450111_257;
                        var_1730925450111_260
                    }[3][3]
            };
            var_1730925450111_304[5]
        } while ((((UInt32(161) as Bool) ?? if (var_1730925450111_166) { // block id: 169
            const var_1730925450111_171: UInt16 = 72;
            var_1730925450111_171;
            var_1730925450111_46;
            var_1730925450111_176 >= var_1730925450111_176
        } else { // block id: 179
            ();
            ();
            var_1730925450111_184 <= Int16(89)
        })) && loopTimeVar_1730925450111_308 < 100);
        try (resource = Class_1730925450111_127()) { // block id: 310
            const var_1730925450111_333: Unit = ();
            (var_1730925450111_176, Int16(-35), var_1730925450111_317, (), Int8(100), VArray<Unit, $7>(repeat: ()),
                Float64(-10.0))[3]
        } catch (_) { // block id: 343
            let var_1730925450111_346: Int8 = Int8(UInt8(UInt8(Int8(UInt8(226)))));
            var_1730925450111_346 >> ((Int8(5)) & 7);
            if (var_1730925450111_166) { // block id: 355
                var_1730925450111_338;
                var_1730925450111_338
            } else if (false) { // block id: 359
                var_1730925450111_338
            }
        };
        let var_1730925450111_362: Class_1730925450111_107 = Class_1730925450111_107(
            ((Int8(Int8(90)) & 127)..(Int8(Int8(UInt8(Int8(11)))) & 127) : (Int64(Int16(-121)) | 1)), false,
            namedParam_1730925450111_367: [UInt64(218), UInt64(128), UInt64(174), UInt64(148), UInt64(143), UInt64(25),
                UInt64(136), UInt64(175), UInt64(128), UInt64(94)]);
        var_1730925450111_362
    }
}

public sealed interface Interface_1730925450111_130 <: Interface_1730925450111_131 & Interface_1730925450111_142 {
    static func func_1730925450111_151(param_1730925450111_152: Option<Float32>, namedParam_1730925450111_153!: UInt32,
        namedParam_1730925450111_154!: Int64): Class_1730925450111_107 { // block id: 155
        const var_1730925450111_176: UInt8 = 119;
        var loopTimeVar_1730925450111_308: Int = 0;
        do {
            loopTimeVar_1730925450111_308++;
            const var_1730925450111_257: Unit = ();
            var_1730925450111_286 |> {
                lambdaParameter_1730925450111_211: UInt64 =>
                    var var_1730925450111_252: UInt32 = UInt32(UInt8(177));
                    try { // block id: 217
                        var_1730925450111_220 + var_1730925450111_220;
                        var_1730925450111_65;
                        var var_1730925450111_225: (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, 
                            Float64, Unit)) = (Int8(UInt8(Int8(5))), Int32(Int16(Int16(UInt8(83)))), UInt32(148), (r'J',
                                r'O', (UInt8(98) as Float32), UInt32(UInt32(UInt16(27))), Int8(Int8(106)), Float64(Float64(Float32(-9.0))),
                                ()));
                        var_1730925450111_225
                    } catch (e: Exception) { // block id: 249
                        var_1730925450111_252 >>= ((UInt32(231)) & 7)
                        var_1730925450111_257;
                        var_1730925450111_260
                    }[3][3]
            };
            var_1730925450111_304[5]
        } while ((((UInt32(161) as Bool) ?? if (var_1730925450111_166) { // block id: 169
            const var_1730925450111_171: UInt16 = 72;
            var_1730925450111_171;
            var_1730925450111_46;
            var_1730925450111_176 >= var_1730925450111_176
        } else { // block id: 179
            ();
            ();
            var_1730925450111_184 <= Int16(89)
        })) && loopTimeVar_1730925450111_308 < 100);
        try (resource = Class_1730925450111_127()) { // block id: 310
            const var_1730925450111_333: Unit = ();
            (var_1730925450111_176, Int16(-35), var_1730925450111_317, (), Int8(100), VArray<Unit, $7>(repeat: ()),
                Float64(-10.0))[3]
        } catch (_) { // block id: 343
            let var_1730925450111_346: Int8 = Int8(UInt8(UInt8(Int8(UInt8(226)))));
            var_1730925450111_346 >> ((Int8(5)) & 7);
            if (var_1730925450111_166) { // block id: 355
                var_1730925450111_338;
                var_1730925450111_338
            } else if (false) { // block id: 359
                var_1730925450111_338
            }
        };
        let var_1730925450111_362: Class_1730925450111_107 = Class_1730925450111_107(
            ((Int8(Int8(90)) & 127)..(Int8(Int8(UInt8(Int8(11)))) & 127) : (Int64(Int16(-121)) | 1)), false,
            namedParam_1730925450111_367: [UInt64(218), UInt64(128), UInt64(174), UInt64(148), UInt64(143), UInt64(25),
                UInt64(136), UInt64(175), UInt64(128), UInt64(94)]);
        var_1730925450111_362
    }
}

public open class Class_1730925450111_127 <: Interface_1730925450111_130 & Resource {
    public init() { // block id: 129

    }

    @Frozen
    public static mut prop var_1730925450111_415: UInt32 { // block id: 416
        get() { // block id: 418
            UInt32(UInt16(Int8(Int8(91))))
        }
        set(Value) { // block id: 425
            ();
            ()
        }
    }

    @Frozen
    private static mut prop var_1730925450111_475: Bool { // block id: 476
        get() { // block id: 478
            (Class_1730925450111_107() as Bool);
            (((Int32(Int32(-60)) & 127)..(Int32(Int32(44)) & 127) : (Int64(99) | 1)) is Interface_1730925450111_140)
        }
        set(Value) { // block id: 488
            Option<(Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)>.None;
            ();
            ()
        }
    }

    @Frozen
    static mut prop var_1730925450111_502: Range<UInt64> { // block id: 503
        get() { // block id: 505
            ();
            ((UInt64(UInt64(105)) & 127)..=(UInt64(UInt64(Int16(-110))) & 127) : (Int64(103) | 1))
        }
        set(Value) { // block id: 514

        }
    }
    public static func func_1730925450111_145(optionalParam_1730925450111_146!: Int16 = Int16(UInt8(43))): Class_1730925450111_107 { // block id: 149
        var var_1730925450111_494: UInt8 = UInt8(UInt8(113));
        func_1730925450111_151(match (match (var_1730925450111_415) {
            case 78 | 28 | 91 | 87 =>
                var_1730925450111_415;
                if (true) {
                    ((UInt16(var_1730925450111_436) & 127)..=(UInt16(UInt16(158)) & 127) : (var_1730925450111_220 | 1))
                } else {
                    ((UInt16(UInt16(248)) & 127)..(UInt16(UInt16(151)) & 127) : (Int64(109) | 1))
                }

            case _: Range<Int32> =>
                let var_1730925450111_445: Class_1730925450111_107 = Class_1730925450111_107();
                var_1730925450111_445;
                UInt32(81);
                var_1730925450111_449

            case _ =>
                ((Int64(var_1730925450111_220) & 127)..(Int64(var_1730925450111_220) & 127) : (Int64(-87) | 1));
                var_1730925450111_338;
                var_1730925450111_449
        }) {
            case _: Option<Float32> =>
                var_1730925450111_286;
                var_1730925450111_465

            case _ =>
                ((Int64(Int64(-71)) & 127)..(Int64(Int64(-91)) & 127) : (Int64(18) | 1));
                ###"<uU0jd//lG"###;
                var_1730925450111_465
        },
            namedParam_1730925450111_153: if (var_1730925450111_475) { // block id: 492
                var_1730925450111_494;
                UInt32(6)
            } else if (if (true) { // block id: 500
                var_1730925450111_502;
                UInt64(253);
                var_1730925450111_184 >= Int16(-15)
            } else if (var_1730925450111_166) { // block id: 520
                if (true) {
                    Option<(Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)>.Some(
                        (r'w', r'R', Option<Float32>.Some(var_1730925450111_65), UInt32(61), Int8(53), Float64(122.0),
                            var_1730925450111_338))
                } else {
                    Option<(Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)>.None
                };
                UInt16(134) <= UInt16(170)
            } else { // block id: 537
                var_1730925450111_166
            }) { // block id: 539
                var_1730925450111_436;
                var_1730925450111_415
            } else { // block id: 542
                var_1730925450111_415 | var_1730925450111_415
            }, namedParam_1730925450111_154: try { // block id: 547
                var_1730925450111_338;
                var_1730925450111_220 << ((var_1730925450111_220) & 7)
            } finally { // block id: 552
                if (var_1730925450111_166) {
                    ((UInt16(var_1730925450111_436) & 127)..(UInt16(var_1730925450111_436) & 127) : (Int64(73) | 1))
                } else {
                    var_1730925450111_449
                };
                Option<Bool>.None;
                Int64(15)
            })
    };

    init(param_1730925450111_1381: Int64) { // block id: 1382
        var var_1730925450111_1385: Int16 = Int16(Int8(Int8(Int8(UInt8(118)))));
        var_1730925450111_1385 >>= ((match (try { // block id: 1393
            UInt32(237) * var_1730925450111_576
        } catch (_) { // block id: 1397
            var_1730925450111_1399;
            UInt32(136)
        }) {
            case _: Rune => var_1730925450111_184 * var_1730925450111_1385

            case _ => var_1730925450111_1385
        }) & 7)
        var var_1730925450111_1437: Range<Int16> = ((Int16(Int16(-99)) & 127)..=(Int16(Int16(Int8(Int8(Int8(-113))))) &
            127) : (Int64(-18) | 1));
        var var_1730925450111_1464: Class_1730925450111_107 = Class_1730925450111_107();
        const var_1730925450111_1484: Int = -51;
        (Option<((Option<Unit>, Rune, Class_1730925450111_35, Float32, Option<Unit>, Option<Float32>, Array<Range<Int16>>), 
                Class_1730925450111_107, (Option<Bool>, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit), 
                Option<Float32>, Int64, Option<Bool>, String, Class_1730925450111_107, Float32, Int16), (UInt8, Int16, 
                Range<UInt8>, Unit, Int8, VArray<Unit, $7>, Float64))>.Some(
            ((Option<Unit>.Some(()), r'L', var_1730925450111_46, Float32(84.0), var_1730925450111_1431, Option<Float32>
                        .None, [var_1730925450111_1437,
                        ((Int16(var_1730925450111_1385) & 127)..(Int16(var_1730925450111_570) & 127) : (var_1730925450111_220 |
                        1)), var_1730925450111_1437, var_1730925450111_1437,
                        ((Int16(Int16(-83)) & 127)..=(Int16(Int16(98)) & 127) : (Int64(39) | 1)),
                        ((Int16(var_1730925450111_184) & 127)..(Int16(Int16(111)) & 127) : (Int64(99) | 1)),
                        ((Int16(var_1730925450111_1385) & 127)..(Int16(Int16(123)) & 127) : (Int64(-89) | 1)),
                        ((Int16(Int16(91)) & 127)..(Int16(Int16(-7)) & 127) : (Int64(-127) | 1)), var_1730925450111_1437,
                        ((Int16(Int16(2)) & 127)..=(Int16(Int16(98)) & 127) : (Int64(79) | 1))]), var_1730925450111_1464,
                (Option<Bool>.Some(var_1730925450111_166), var_1730925450111_1470, Option<Float32>.Some(Float32(45.0)),
                    var_1730925450111_1484, var_1730925450111_1399, var_1730925450111_1488, var_1730925450111_1464,
                    var_1730925450111_65, var_1730925450111_184), var_1730925450111_858)) ?? var_1730925450111_1495)[0][2]
    };

    public static func func_1730925450111_151(param_1730925450111_152: Option<Float32>,
        namedParam_1730925450111_153!: UInt32, namedParam_1730925450111_154!: Int64): Class_1730925450111_107 { // block id: 155
        const var_1730925450111_176: UInt8 = 119;
        var loopTimeVar_1730925450111_308: Int = 0;
        do {
            loopTimeVar_1730925450111_308++;
            const var_1730925450111_257: Unit = ();
            var_1730925450111_286 |> {
                lambdaParameter_1730925450111_211: UInt64 =>
                    var var_1730925450111_252: UInt32 = UInt32(UInt8(177));
                    try { // block id: 217
                        var_1730925450111_220 + var_1730925450111_220;
                        var_1730925450111_65;
                        var var_1730925450111_225: (Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, 
                            Float64, Unit)) = (Int8(UInt8(Int8(5))), Int32(Int16(Int16(UInt8(83)))), UInt32(148), (r'J',
                                r'O', (UInt8(98) as Float32), UInt32(UInt32(UInt16(27))), Int8(Int8(106)), Float64(Float64(Float32(-9.0))),
                                ()));
                        var_1730925450111_225
                    } catch (e: Exception) { // block id: 249
                        var_1730925450111_252 >>= ((UInt32(231)) & 7)
                        var_1730925450111_257;
                        var_1730925450111_260
                    }[3][3]
            };
            var_1730925450111_304[5]
        } while ((((UInt32(161) as Bool) ?? if (var_1730925450111_166) { // block id: 169
            const var_1730925450111_171: UInt16 = 72;
            var_1730925450111_171;
            var_1730925450111_46;
            var_1730925450111_176 >= var_1730925450111_176
        } else { // block id: 179
            ();
            ();
            var_1730925450111_184 <= Int16(89)
        })) && loopTimeVar_1730925450111_308 < 100);
        try (resource = Class_1730925450111_127()) { // block id: 310
            const var_1730925450111_333: Unit = ();
            (var_1730925450111_176, Int16(-35), var_1730925450111_317, (), Int8(100), VArray<Unit, $7>(repeat: ()),
                Float64(-10.0))[3]
        } catch (_) { // block id: 343
            let var_1730925450111_346: Int8 = Int8(UInt8(UInt8(Int8(UInt8(226)))));
            var_1730925450111_346 >> ((Int8(5)) & 7);
            if (var_1730925450111_166) { // block id: 355
                var_1730925450111_338;
                var_1730925450111_338
            } else if (false) { // block id: 359
                var_1730925450111_338
            }
        };
        let var_1730925450111_362: Class_1730925450111_107 = Class_1730925450111_107(
            ((Int8(Int8(90)) & 127)..(Int8(Int8(UInt8(Int8(11)))) & 127) : (Int64(Int16(-121)) | 1)), false,
            namedParam_1730925450111_367: [UInt64(218), UInt64(128), UInt64(174), UInt64(148), UInt64(143), UInt64(25),
                UInt64(136), UInt64(175), UInt64(128), UInt64(94)]);
        var_1730925450111_362
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

@Deprecated
public const func func_1730925450111_122(): Unit { // block id: 206

}

@Deprecated
public const func func_1730925450111_189(param_1730925450111_190: UInt64): UInt32 { // block id: 191
    const var_1730925450111_201: Unit = ();
    const func func_1730925450111_196(optionalParam_1730925450111_197!: UInt64 = 222): Unit { // block id: 199
        var_1730925450111_201;
        ();
        func_1730925450111_122()
    };

    const func func_1730925450111_193(): Unit { // block id: 194
        func_1730925450111_196();
        func_1730925450111_196()
    };

    func_1730925450111_193();
    186
}

internal func func_1730925450111_122(param_1730925450111_123: UInt32, param_1730925450111_124: UInt32): Class_1730925450111_107 { // block id: 125
    Class_1730925450111_127.func_1730925450111_145(optionalParam_1730925450111_146: try { // block id: 563
        Int16(71)
    } catch (_) { // block id: 565
        var_1730925450111_286;
        var_1730925450111_184
    } finally { // block id: 568
        var_1730925450111_570
    })
}

internal func func_1730925450111_112(namedParam_1730925450111_113!: UInt64,
    optionalParam_1730925450111_114!: Int16 = Int16(-78), optionalParam_1730925450111_116!: Float64 = Float64(-111.0),
    optionalParam_1730925450111_118!: Rune = r'R'): Class_1730925450111_107 { // block id: 120
    const var_1730925450111_586: Int8 = 107;
    var var_1730925450111_617: Int = Int64(-9);
    var var_1730925450111_621: Range<UInt64> = ((UInt64(UInt64(Int64(Int16(-3)))) & 127)..(UInt64(UInt64(UInt32(182))) &
        127) : (Int64(-3) | 1));
    func_1730925450111_122(try { // block id: 573
        var_1730925450111_576 <<= ((UInt32(190)) & 7)
        Class_1730925450111_107(
            ((Int8(var_1730925450111_586) & 127)..(Int8(var_1730925450111_586) & 127) : (Int64(10) | 1)), true,
            namedParam_1730925450111_367: [var_1730925450111_286, UInt64(149), UInt64(242), var_1730925450111_286,
                UInt64(11), UInt64(158), var_1730925450111_286, UInt64(93), var_1730925450111_286, UInt64(9)]);
        UInt32(193)
    } finally { // block id: 603
        var_1730925450111_576 << ((UInt32(161)) & 7)
    }, match (match (Option<Float32>.Some(Float32(49.0))) {
        case caseVar_1730925450111_613 =>
            var_1730925450111_617 -= Int64(71)
            var_1730925450111_621

        case caseVar_1730925450111_631 =>
            var_1730925450111_338;
            Option<Float32>.Some(var_1730925450111_65);
            ((UInt64(var_1730925450111_286) & 127)..=(UInt64(UInt64(109)) & 127) : (Int64(-87) | 1))

        case _ =>
            var_1730925450111_645 += Int32(49)
            ((UInt64(UInt64(219)) & 127)..(UInt64(UInt64(116)) & 127) : (Int64(95) | 1))

        case caseVar_1730925450111_653: Array<UInt64> => ((UInt64(UInt64(165)) & 127)..(UInt64(UInt64(38)) & 127) : (Int64(105) |
            1))

        case _ =>
            var_1730925450111_166 ||= true
            Option<Bool>.Some(var_1730925450111_166);
            ((UInt64(UInt64(234)) & 127)..=(UInt64(UInt64(1)) & 127) : (Int64(87) | 1))
    }) {
        case _ => var_1730925450111_576

        case _ => UInt32(236)
    })
}

internal func func_1730925450111_102(param_1730925450111_103: Rune): Bool { // block id: 104
    var var_1730925450111_924: () -> Unit = func_1730925450111_122;
    match (func_1730925450111_112(namedParam_1730925450111_113: UInt64(194), optionalParam_1730925450111_114: Int16(107))
        .func_1730925450111_676(namedParam_1730925450111_677: var_1730925450111_924,
            namedParam_1730925450111_679: Int64(-33), namedParam_1730925450111_680: func_1730925450111_122)) {
        case _ =>
            const var_1730925450111_932: Unit = ();
            var_1730925450111_932;
            var_1730925450111_932

        case _ => var_1730925450111_338

        case _ => var_1730925450111_338

        case _ =>
            var_1730925450111_645 %= ((Int32(98)) | 1)
            ()
    };
    let var_1730925450111_953: Array<Bool> = [true, false, false, true, false, true, false, true, true, false];
    var_1730925450111_953[5]
}

public func func_1730925450111_97(param_1730925450111_98: UInt32): Option<Float32> { // block id: 99
    if ((if (var_1730925450111_166) { // block id: 959
        ();
        ();
        r'l'
    } else if (false) { // block id: 964
        let var_1730925450111_966: Rune = r'7';
        var_1730925450111_966
    } else { // block id: 968
        var_1730925450111_338;
        var_1730925450111_338;
        if (true) {
            r'b'
        } else {
            r'Y'
        }
    } |> func_1730925450111_102)) { // block id: 975
        try { // block id: 977
            if (var_1730925450111_166) {
                r'q'
            } else {
                var_1730925450111_982
            }
        } finally { // block id: 984
            var_1730925450111_982
        }
    } else { // block id: 986
        if (true) {
            r'5'
        } else {
            var_1730925450111_982
        }
    };
    var var_1730925450111_996: (Option<Bool>, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit), Option<Float32>, 
        Int64, Option<Bool>, String, Class_1730925450111_107, Float32, Int16) = ((((UInt64(UInt64(UInt32(42))) & 127)..=(UInt64(UInt64(Int8(-38))) &
            127) : (Int64(Int64(-101)) | 1)) as Bool), (r'M', r't', Option<Float32>.Some(Float32(37.0)), UInt32(Int32(Int16(-23))),
            Int8(-21), Float64(9.0), ()), Option<Float32>.None, Int64(Int64(47)), Option<Bool>.Some(true),
        ###"aoU(Br,J\"X"###, Class_1730925450111_107(
            ((UInt64(UInt64(UInt32(211))) & 127)..(UInt64(UInt64(132)) & 127) : (Int64(Int64(113)) | 1)), UInt16(62)),
        Float32(Float32(Float32(Float32(-111.0)))), Int16(-51));
    if ((var_1730925450111_996[4] ?? [false, var_1730925450111_166, true, false, var_1730925450111_166,
        var_1730925450111_166, var_1730925450111_166, false, true, true][8])) { // block id: 1140
        var_1730925450111_46;
        try (resource = Class_1730925450111_127()) { // block id: 1143

        } catch (_) { // block id: 1144
            ();
            ()
        }
    } else if ((var_1730925450111_996 is Interface_1730925450111_41)) { // block id: 1149
        (Option<Unit>.None ?? ());
        ((Int32(var_1730925450111_645) & 127)..=(Int32(var_1730925450111_645) & 127) : (Int64(117) | 1));
        if (var_1730925450111_166) { // block id: 1163

        } else if (var_1730925450111_166) { // block id: 1165
            var_1730925450111_436 <<= ((var_1730925450111_1169) & 7)
        }
    };
    let var_1730925450111_1204: ?Unit = ([UInt64(111), UInt64(161), UInt64(231), UInt64(UInt64(UInt64(205))),
        UInt64(Int32(-98)), UInt64(245), UInt64(Int32(-99)), UInt64(226), UInt64(138), UInt64(122)] as Unit);
    let var_1730925450111_1234: Range<Int32> = ((Int32(Int32(99)) & 127)..(Int32(Int32(111)) & 127) : (Int64(61) | 1));
    try { // block id: 1174
        var_1730925450111_1178[0];
        var_1730925450111_465
    } catch (_) { // block id: 1192
        match (var_1730925450111_1195) {
            case _ =>
                var_1730925450111_286 |= var_1730925450111_286
                var_1730925450111_1204;
                UInt64(110)
        };
        Class_1730925450111_35();
        try { // block id: 1224
            var_1730925450111_338;
            Option<Float32>.None
        } catch (e: Exception) { // block id: 1227
            var_1730925450111_436 ^= UInt16(225)
            (var_1730925450111_338, var_1730925450111_1234);
            if (false) {
                Option<Float32>.Some(var_1730925450111_65)
            } else {
                var_1730925450111_465
            }
        }
    } finally { // block id: 1241
        var_1730925450111_1244[1]
    }
}

@Frozen
public func func_1730925450111_30(): Option<Float32> { // block id: 31
    ();
    const var_1730925450111_73: Rune = r'j';
    let var_1730925450111_1311: (UInt32) -> Option<Float32> = func_1730925450111_97;
    if (var_1730925450111_46.var_1730925450111_49) { // block id: 61
        Float32(-118.0) / Float32((Int32(var_1730925450111_65)) | 1);
        let var_1730925450111_77: Option<Float32> = Option<Float32>.None;
        var var_1730925450111_80: UInt32 = UInt32(Int8(-54));
        var var_1730925450111_84: Int8 = Int8(-46);
        var var_1730925450111_92: Unit = ();
        (var_1730925450111_73, var_1730925450111_73, var_1730925450111_77, var_1730925450111_80, var_1730925450111_84,
            var_1730925450111_87, var_1730925450111_92)[2]
    } else { // block id: 95
        var_1730925450111_576 |> var_1730925450111_1311
    }
}

public func func_1730925450111_25(param_1730925450111_26: Int8): Option<Float32> { // block id: 27
    match (func_1730925450111_30()) {
        case _: Range<UInt8> =>
            var_1730925450111_338;
            UInt32(217) ^ UInt32(11);
            Option<Float32>.Some(Float32(65.0))

        case _: Int8 =>
            if (var_1730925450111_166) {
                var_1730925450111_465
            } else {
                Option<Float32>.Some(Float32(17.0))
            }

        case _: UInt8 =>
            var_1730925450111_338;
            Option<Float32>.None

        case _ => Option<Float32>.Some(var_1730925450111_65)
    }
}

main(): Int64 {
    try {
        const func func_1730925450111_6(optionalParam_1730925450111_7!: Float32 = -79.0,
            optionalParam_1730925450111_9!: Int32 = 9, optionalParam_1730925450111_11!: Rune = r'q',
            namedParam_1730925450111_13!: Float32): Int64 { // block id: 14
            ();
            var_1730925450111_17
        };

        var var_1730925450111_1342: (Int8) -> Option<Float32> = func_1730925450111_25;
        var var_1730925450111_1345: Int8 = Int8(Int8(-37));
        var var_1730925450111_1358: ?((Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), 
            (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit), Interface_1730925450111_139, Bool, Rune, Int64) = Option<((Int8, 
                Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), (Rune, Rune, Option<Float32>, 
                UInt32, Int8, Float64, Unit), Interface_1730925450111_139, Bool, Rune, Int64)>.Some(
            ((Int8(-84), Int32(UInt32(74)), UInt32(90), (r'p', r'N', Option<Float32>.Some(Float32(31.0)), UInt32(224),
                        Int8(76), Float64(37.0), ())), (r'8', r'S', (Class_1730925450111_127(Int64(-33)) as Float32),
                    UInt32(UInt8(114)), Int8(68), Float64(Float64(-93.0)), ()), Class_1730925450111_127(), (UInt16(UInt16(34)) is Interface_1730925450111_41),
                r'y', Int64(Int32(Int8(30)))));
        let var_1730925450111_1601: ((Int8, Int32, UInt32, (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit)), 
            (Rune, Rune, Option<Float32>, UInt32, Int8, Float64, Unit), Interface_1730925450111_139, Bool, Rune, Int64) = ((Int8(Int8(81)),
                Int32(UInt8(UInt8(0))), UInt32(79), (r'4', r'N', (Option<Bool>.None as Float32), UInt32(Int8(53)), Int8(UInt8(178)),
                    Float64(-42.0), ())), (r'j', r'7', (() as Float32), UInt32(UInt32(Int32(-64))), Int8(Int8(-60)),
                Float64(Float64(Float64(6.0))), ()), Class_1730925450111_127(), (Class_1730925450111_127() is Interface_1730925450111_141),
            r'z', Int64(UInt32(139)));
        const var_1730925450111_1650: UInt = 28;
        let var_1730925450111_1684: (Array<Range<Int16>>, Option<(UInt64, Bool, Float64)>, Int8) = ([((Int16(Int16(38)) &
                127)..=(Int16(Int16(-123)) & 127) : (Int64(-21) | 1)),
                ((Int16(Int16(93)) & 127)..(Int16(Int16(-10)) & 127) : (Int64(21) | 1)),
                ((Int16(Int16(79)) & 127)..=(Int16(Int16(-63)) & 127) : (Int64(123) | 1)),
                ((Int16(Int16(-11)) & 127)..(Int16(Int16(106)) & 127) : (Int64(-17) | 1)),
                ((Int16(Int16(-2)) & 127)..(Int16(Int16(-84)) & 127) : (Int64(-109) | 1)),
                ((Int16(Int16(18)) & 127)..(Int16(Int16(-92)) & 127) : (Int64(71) | 1)),
                ((Int16(Int16(78)) & 127)..(Int16(Int16(-69)) & 127) : (Int64(66) | 1)),
                ((Int16(Int16(-77)) & 127)..(Int16(Int16(-103)) & 127) : (Int64(20) | 1)),
                ((Int16(Int16(101)) & 127)..(Int16(Int16(76)) & 127) : (Int64(-115) | 1)),
                ((Int16(Int16(-106)) & 127)..(Int16(Int16(-51)) & 127) : (Int64(-52) | 1))], Option<(UInt64, Bool, 
                    Float64)>.None, Int8(-104));
        func_1730925450111_6(
            optionalParam_1730925450111_7: ((var_1730925450111_1345 |> var_1730925450111_1342) ?? Float32(Float32(1.0))),
            optionalParam_1730925450111_11: (var_1730925450111_1358 ?? var_1730925450111_1601)[4],
            namedParam_1730925450111_13: Float32(Float32(47.0)) - match (Class_1730925450111_107(
                ((UInt64(UInt64(76)) & 127)..(UInt64(var_1730925450111_1650) & 127) : (Int64(118) | 1)), UInt16(188))) {
                case caseVar_1730925450111_1656: Range<UInt64> => Float32(63.0)

                case _: Range<Int16> =>
                    var_1730925450111_436++;
                    var_1730925450111_1665

                case caseVar_1730925450111_1669 =>
                    const var_1730925450111_1672: Unit = ();
                    var_1730925450111_1672;
                    var_1730925450111_1665

                case caseVar_1730925450111_1677 => Float32(-34.0)

                case _ =>
                    var_1730925450111_1684;
                    var_1730925450111_1690;
                    Float32(-115.0) - Float32(37.0)
            })
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1730925450111_17 * var_1730925450111_17), 64)
        crcCheck.updateBuffer(UInt64(var_1730925450111_1345 * var_1730925450111_1345), 64)
        crcCheck.updateBuffer(UInt64(var_1730925450111_1650 * var_1730925450111_1650), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1730925450111_35 {}

extend Class_1730925450111_107 {}
