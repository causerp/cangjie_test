/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

var var_1734922155458_29: UInt32 = UInt32(68)
var var_1734922155458_48: Int16 = Int16(Int16(Int8(UInt8(Int8(17)))))
public let var_1734922155458_55: Rune = r'm'
public var var_1734922155458_62: Bool = true
public var var_1734922155458_82: UInt8 = UInt8(Int8(124))
@Deprecated
public const var_1734922155458_112: Bool = false
const var_1734922155458_125: Int8 = -33
public const var_1734922155458_136: Int32 = -93
let var_1734922155458_201: Option<Rune> = Option<Rune>.None
internal var var_1734922155458_275: Int32 = Int32(Int16(UInt8(60)))
public var var_1734922155458_282: Int16 = Int16(34)
@Deprecated
public var var_1734922155458_285: ?Class_1734922155458_11 = (Option<Class_1734922155458_11>.None as Class_1734922155458_11)
public let var_1734922155458_290: (String, (Unit, Rune, Int16, Int8, Int64, Bool), UInt16) = (###")bHK}TT+[7"###, ((),
        r'F', Int16(Int8(-59)), Int8(116), Int64(Int64(94)), (UInt16(Int16(45)) is Float32)), UInt16(198))
public const var_1734922155458_324: Float64 = 13.0
public const var_1734922155458_334: UInt32 = 254
internal let var_1734922155458_386: Unit = ()
public let var_1734922155458_394: Array<Option<Rune>> = [(((Int32(Int32(-33)) & 127)..=(Int32(Int32(-52)) & 127) : (Int64(109) |
    1)) as Rune), (r'4' as Rune), Option<Rune>.None,
    (("\":a{CC]#GqF", ((), r'1', Int16(-123), Int8(-35), Int64(-91), false), UInt16(UInt8(106))) as Rune),
    (Int16(UInt8(22)) as Rune), (((Int8(Int8(124)) & 127)..(Int8(Int8(19)) & 127) : (Int64(28) | 1)) as Rune),
    ([UInt64(159), UInt64(Int32(20)), UInt64(UInt16(62)), UInt64(UInt64(62)), UInt64(248), UInt64(UInt16(216)),
    UInt64(137), UInt64(Int16(-69)), UInt64(Int64(-107)), UInt64(205)] as Rune), (Int8(-67) as Rune),
    (Int16(-52) as Rune), Option<Rune>.None]
@Deprecated
public let var_1734922155458_463: Range<Int8> = ((Int8(Int8(-98)) & 127)..(Int8(Int8(43)) & 127) : (Int64(65) | 1))
internal const var_1734922155458_481: Byte = 7
public var var_1734922155458_555: Unit = ()
public let var_1734922155458_604: Range<UInt32> = ((UInt32(UInt32(132)) & 127)..=(UInt32(UInt32(166)) & 127) : (Int64(67) |
    1))
public var var_1734922155458_667: Int = Int64(UInt8(Int8(Int8(44))))
@Deprecated
public let var_1734922155458_686: Range<Int32> = ((Int32(Int32(-21)) & 127)..(Int32(Int32(-12)) & 127) : (Int64(55) | 1))
public var var_1734922155458_692: Array<Option<Rune>> = [Option<Rune>.None, Option<Rune>.None, Option<Rune>.None,
    (Int16(UInt16(227)) as Rune), (((UInt32(UInt32(201)) & 127)..=(UInt32(UInt32(60)) & 127) : (Int64(-72) | 1)) as Rune),
    (UInt32(163) as Rune), Option<Rune>.None,
    ((",A^P2J7kS(", ((), r'O', Int16(91), Int8(-76), Int64(-112), true), UInt16(UInt16(209))) as Rune),
    (UInt32(Int32(96)) as Rune), (r'V' as Rune)]
public const var_1734922155458_730: Int8 = -12
public const var_1734922155458_735: String = """
>]H%B
\\,8qS
"""
public var var_1734922155458_763: Bool = false
@Deprecated
public var var_1734922155458_770: UInt16 = UInt16(UInt16(82))
internal const var_1734922155458_777: Bool = true
@Deprecated
public var var_1734922155458_786: Float32 = Float32(29.0)
public var var_1734922155458_881: Option<Rune> = (Int64(Int32(Int16(Int16(106)))) as Rune)
let var_1734922155458_889: (Class_1734922155458_11, Range<UInt32>, Int16) = (Class_1734922155458_11(), ((UInt32(UInt32(205)) &
        127)..=(UInt32(UInt32(196)) & 127) : (Int64(-81) | 1)), Int16(42))
internal var var_1734922155458_958: (Unit, Rune, Int16, Int8, Int64, Bool) = ((), r'p', Int16(UInt8(UInt8(117))), Int8(15),
    Int64(-63), (UInt8(UInt8(176)) is UInt16))
public const var_1734922155458_998: UInt8 = 246
public var var_1734922155458_1088: Bool = false
public let var_1734922155458_1294: Array<Range<Int64>> = [((Int64(Int64(-41)) & 127)..(Int64(Int64(90)) & 127) : (Int64(24) |
    1)), ((Int64(Int64(0)) & 127)..=(Int64(Int64(115)) & 127) : (Int64(71) | 1)),
    ((Int64(Int64(-121)) & 127)..=(Int64(Int64(66)) & 127) : (Int64(-78) | 1)),
    ((Int64(Int64(-122)) & 127)..=(Int64(Int64(-113)) & 127) : (Int64(116) | 1)),
    ((Int64(Int64(122)) & 127)..(Int64(Int64(-116)) & 127) : (Int64(105) | 1)),
    ((Int64(Int64(-88)) & 127)..=(Int64(Int64(-66)) & 127) : (Int64(122) | 1)),
    ((Int64(Int64(76)) & 127)..=(Int64(Int64(91)) & 127) : (Int64(5) | 1)),
    ((Int64(Int64(85)) & 127)..=(Int64(Int64(42)) & 127) : (Int64(-17) | 1)),
    ((Int64(Int64(68)) & 127)..(Int64(Int64(102)) & 127) : (Int64(-126) | 1)),
    ((Int64(Int64(-55)) & 127)..=(Int64(Int64(46)) & 127) : (Int64(63) | 1))]
public var var_1734922155458_1304: Class_1734922155458_1299 = Class_1734922155458_1299()
public var var_1734922155458_1325: UInt = UInt64(Int8(Int8(108)))
@Deprecated
internal let var_1734922155458_1385: Class_1734922155458_1380 = Class_1734922155458_1380()
public const var_1734922155458_1430: UInt = 205
public var var_1734922155458_1476: Int8 = Int8(63)
@Deprecated
public let var_1734922155458_1506: Int8 = Int8(66)
public var var_1734922155458_1527: Range<Int64> = ((Int64(Int64(-70)) & 127)..(Int64(Int64(UInt64(Int32(UInt32(249))))) &
    127) : (Int64(UInt16(Int8(Int8(-96)))) | 1))

public open class Class_1734922155458_11 {
    @Frozen
    public init() { // block id: 13

    }

    @Frozen
    public static prop var_1734922155458_16: Rune { // block id: 17
        get() { // block id: 19
            ();
            Int64(UInt32(170));
            r'T'
        }
    }

    @Frozen
    public mut prop var_1734922155458_446: VArray<Unit, $1> { // block id: 447
        get() { // block id: 449
            VArray<Unit, $1>({i => ()})
        }
        set(Value) { // block id: 454
            ()
        }
    }
    init(namedParam_1734922155458_1010!: Array<Option<Rune>>,
        optionalParam_1734922155458_1011!: (Unit, Rune, Int16, Int8, Int64, Bool) = ((), r'2', Int16(57), Int8(62),
            Int64(Int32(UInt8(Int8(64)))), true), namedParam_1734922155458_1022!: Range<UInt16>) { // block id: 1023
        var_1734922155458_386;
        let var_1734922155458_1034: Option<((Unit, Rune, Int16, Int8, Int64, Bool), Unit, UInt16, Float32, Option<Class_1734922155458_11>, 
            Float64, Array<Option<Rune>>)> = ((((Int16(Int16(Int16(-59))) & 127)..=(Int16(Int16(100)) & 127) : (Int64(Int8(62)) |
            1)) as Rune) as ((Unit, Rune, Int16, Int8, Int64, Bool), Unit, UInt16, Float32, Option<Class_1734922155458_11>, 
            Float64, Array<Option<Rune>>));
        match ((var_1734922155458_1034 ?? ((var_1734922155458_386, r'z', var_1734922155458_282, Int8(38), Int64(113),
                false), var_1734922155458_555, UInt16(185), Float32(68.0), Option<Class_1734922155458_11>.None,
            var_1734922155458_324, [Option<Rune>.Some(r'P'), var_1734922155458_201, var_1734922155458_201,
                var_1734922155458_201, Option<Rune>.Some(r'e'), Option<Rune>.Some(r'Q'), var_1734922155458_881,
                Option<Rune>.None, Option<Rune>.None, Option<Rune>.Some(r'E')]))[4]) {
            case _: UInt64 =>
                ();
                ();
                ()

            case _: Range<UInt64> =>
                var_1734922155458_763 &&= var_1734922155458_763
                var_1734922155458_386;
                var_1734922155458_763 ||= var_1734922155458_1088

            case caseVar_1734922155458_1092 =>
                ((Int32(Int32(-13)) & 127)..(Int32(Int32(24)) & 127) : (Int64(-100) | 1));
                var_1734922155458_763 ||= true

            case _ =>
                var var_1734922155458_1102: Unit = ();
                var_1734922155458_1102
        }
    };

    static let var_1734922155458_1343: (Range<UInt64>, Float32, Array<Option<Rune>>, Array<Bool>, UInt64, Int32, Range<Int64>) = (((UInt64(UInt64(229)) &
            127)..=(UInt64(UInt64(178)) & 127) : (Int64(31) | 1)), Float32(27.0), [Option<Rune>.None, Option<Rune>.None,
            Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None,
            Option<Rune>.None, Option<Rune>.None, Option<Rune>.None], [false, true, false, true, true, false, true, true,
            false, true], UInt64(105), Int32(-39), ((Int64(Int64(13)) & 127)..(Int64(Int64(-78)) & 127) : (Int64(46) | 1)));
    static var var_1734922155458_1415: (Range<Int32>, Range<UInt64>, Rune, Range<UInt32>, Float32, Array<Bool>) = (((Int32(Int32(-116)) &
            127)..(Int32(Int32(-9)) & 127) : (Int64(111) | 1)), ((UInt64(UInt64(87)) & 127)..(UInt64(UInt64(28)) & 127) : (Int64(102) |
            1)), r'k', ((UInt32(UInt32(6)) & 127)..(UInt32(UInt32(1)) & 127) : (Int64(-38) | 1)), Float32(77.0), [false,
            true, true, false, false, false, true, false, false, false]);

    @Frozen
    public static prop var_1734922155458_1443: Enum_1734922155458_1440<Range<Int8>, Array<Bool>> { // block id: 1444
        get() { // block id: 1446
            Float64(40.0);
            ();
            Enum_1734922155458_1440<Range<Int8>, Array<Bool>>.enumValue_1734922155458_1450(
                ((), r'2', Int16(97), Int8(Int8(-50)), Int64(71), true),
                ((UInt16(UInt16(180)) & 127)..(UInt16(UInt16(27)) & 127) : (Int64(0) | 1)), func_1734922155458_119)
        }
    }

    @Frozen
    func func_1734922155458_1281(param_1734922155458_1282: UInt64, namedParam_1734922155458_1283!: UInt8): (String, (Unit, 
        Rune, Int16, Int8, Int64, Bool), UInt16) { // block id: 1284
        let var_1734922155458_1393: VArray<UInt64, $3> = VArray<UInt64, $3>(repeat: UInt64(Int16(Int8(Int8(-120)))));
        ((var_1734922155458_1294[5] as Array<UInt64>) ?? [var_1734922155458_1304.var_1734922155458_1307,
            var_1734922155458_1325, if (var_1734922155458_777) { // block id: 1331
            var_1734922155458_1325 << ((var_1734922155458_1325) & 7)
        } else { // block id: 1335
            """
eO*.6
jF/pI
""";
            UInt64(204) + var_1734922155458_1325
        }, var_1734922155458_1343[4], UInt64(85) ^ UInt64(254), var_1734922155458_1385.var_1734922155458_1388,
            var_1734922155458_1393[2], if (true) { // block id: 1405
            var_1734922155458_1325 + UInt64(79)
        } else if (false) { // block id: 1410
            var_1734922155458_1325
        } else { // block id: 1412
            ();
            var_1734922155458_1415;
            var_1734922155458_1430
        }, UInt64(var_1734922155458_1430), UInt64(var_1734922155458_136)]);
        ((UInt16(UInt16(91)) & 127)..(UInt16(UInt16(29)) & 127) : (Int64(-8) | 1));
        let var_1734922155458_1512: Unit = ();
        try { // block id: 1438
            match (var_1734922155458_1443) {
                case enumValue_1734922155458_1450(_: UInt32, caseVar_1734922155458_1468: (Range<UInt64>, Float32, Array<Option<Rune>>, 
                            Array<Bool>, UInt64, Int32, Range<Int64>), _: Range<UInt32>) =>
                    if (true) {
                        var_1734922155458_446
                    } else {
                        var_1734922155458_446
                    };
                    var_1734922155458_1476 += var_1734922155458_1476

                case defaultValue =>
                    ((UInt16(UInt16(218)) & 127)..=(UInt16(UInt16(131)) & 127) : (Int64(-127) | 1));
                    ()

                case _ =>
                    var_1734922155458_1443;
                    var_1734922155458_786 /= Float32((Int32(var_1734922155458_786)) | 1)

                case caseVar_1734922155458_1493 =>
                    var_1734922155458_324;
                    var_1734922155458_386

                case _ =>
                    ();
                    ()
            };
            (var_1734922155458_1506, ("""
[<-p_
v4/[r
""", (var_1734922155458_1512, r'w', var_1734922155458_282,
                        var_1734922155458_1476, Int64(91), false), UInt16(59)), var_1734922155458_446)[1]
        } catch (_) { // block id: 1522
            if (var_1734922155458_777) {
                ((Int64(Int64(72)) & 127)..(Int64(Int64(-12)) & 127) : (Int64(-12) | 1))
            } else {
                var_1734922155458_1527
            };
            const var_1734922155458_1544: Unit = ();
            match (Option<Rune>.None) {
                case _ =>
                    var_1734922155458_1544;
                    ()
            };
            let var_1734922155458_1549: (Int8, (String, (Unit, Rune, Int16, Int8, Int64, Bool), UInt16), VArray<Unit, $1>) = (Int8(Int8(UInt8(Int8(-44)))),
                ("AOx\\R[by:H", ((), r'J', Int16(-37), Int8(-48), Int64(-9), ([((Int64(Int64(58)) & 127)..(Int64(Int64(126)) &
                            127) : (Int64(87) | 1)),
                            ((Int64(Int64(-4)) & 127)..=(Int64(Int64(67)) & 127) : (Int64(83) | 1)),
                            ((Int64(Int64(11)) & 127)..=(Int64(Int64(-64)) & 127) : (Int64(23) | 1)),
                            ((Int64(Int64(-83)) & 127)..=(Int64(Int64(11)) & 127) : (Int64(-103) | 1)),
                            ((Int64(Int64(102)) & 127)..(Int64(Int64(104)) & 127) : (Int64(99) | 1)),
                            ((Int64(Int64(-68)) & 127)..(Int64(Int64(7)) & 127) : (Int64(-81) | 1)),
                            ((Int64(Int64(119)) & 127)..(Int64(Int64(-101)) & 127) : (Int64(-64) | 1)),
                            ((Int64(Int64(-21)) & 127)..=(Int64(Int64(-22)) & 127) : (Int64(114) | 1)),
                            ((Int64(Int64(-22)) & 127)..=(Int64(Int64(21)) & 127) : (Int64(-11) | 1)),
                            ((Int64(Int64(-34)) & 127)..=(Int64(Int64(-52)) & 127) : (Int64(86) | 1))] is VArray<Unit, $1>)),
                    UInt16(195)), VArray<Unit, $1>({i => ()}));
            var_1734922155458_1549[1]
        }
    }
}

@Frozen
@Deprecated
public const func func_1734922155458_119(param_1734922155458_120: Int32): Int64 { // block id: 121
    (var_1734922155458_125 | -92) & var_1734922155458_125;
    const var_1734922155458_130: Int = 65;
    var_1734922155458_130
}

@Frozen
@Deprecated
public const func func_1734922155458_233(param_1734922155458_234: Bool, namedParam_1734922155458_235!: UInt64,
    optionalParam_1734922155458_236!: UInt8 = 111): Rune { // block id: 238
    ();
    r's'
}

@Deprecated
public const func func_1734922155458_314(namedParam_1734922155458_315!: Float64,
    optionalParam_1734922155458_316!: Int32 = 55): Bool { // block id: 318
    const var_1734922155458_320: Unit = ();
    var_1734922155458_320;
    true
}

@Frozen
public const func func_1734922155458_466<T0>(optionalParam_1734922155458_467!: Float64 = 76.0): Unit { // block id: 469
    162;
    const func func_1734922155458_472(namedParam_1734922155458_473!: String,
        optionalParam_1734922155458_474!: Int8 = -67, namedParam_1734922155458_476!: UInt8): Unit { // block id: 477

    }

    func_1734922155458_472(namedParam_1734922155458_473: ###"pN9.d5G_(%"###, optionalParam_1734922155458_474: -87,
        namedParam_1734922155458_476: var_1734922155458_481)
}

public func func_1734922155458_459(param_1734922155458_460: Int64): Array<Option<Rune>> { // block id: 461
    var_1734922155458_463;
    func_1734922155458_466<UInt16>();
    let var_1734922155458_484: Array<Option<Rune>> = [(UInt16(137) as Rune), Option<Rune>.None, Option<Rune>.None,
        Option<Rune>.Some(r'x'), Option<Rune>.Some(r'c'), Option<Rune>.None,
        (((UInt16(UInt16(77)) & 127)..(UInt16(UInt16(64)) & 127) : (Int64(114) | 1)) as Rune),
        ((###";HFZUqh+,c"### is Int16) as Rune),
        (((UInt8(UInt8(133)) & 127)..(UInt8(UInt8(162)) & 127) : (Int64(94) | 1)) as Rune),
        ([([true, true, true, false, false, false, false, true, true, false] is Int32), false, true,
        (r'k' is Range<UInt16>), (((Int16(Int16(73)) & 127)..(Int16(Int16(-46)) & 127) : (Int64(66) | 1)) is UInt16),
        false, (((UInt16(UInt16(16)) & 127)..(UInt16(UInt16(243)) & 127) : (Int64(120) | 1)) is Class_1734922155458_11),
        true, true, false] as Rune)];
    var_1734922155458_484
}

@Frozen
public func func_1734922155458_535(param_1734922155458_536: (Int32) -> Int64): Array<Option<Rune>> { // block id: 539
    var var_1734922155458_542: Option<Rune> = (Int32(64) as Rune);
    match (var_1734922155458_542) {
        case caseVar_1734922155458_547 => UInt8(161)

        case caseVar_1734922155458_552: Option<Rune> =>
            var_1734922155458_555;
            var_1734922155458_481

        case caseVar_1734922155458_560 =>
            ();
            ();
            UInt8(78)

        case _ =>
            var_1734922155458_125;
            let var_1734922155458_570: (Unit, Rune, Int16, Int8, Int64, Bool) = ((), r'm', Int16(UInt8(Int8(87))), Int8(-46),
                Int64(UInt64(Int16(UInt8(21)))), true);
            var_1734922155458_570;
            var_1734922155458_481
    };
    var loopTimeVar_1734922155458_594: Int = 0;
    while ((false) && loopTimeVar_1734922155458_594 < 100) {
        loopTimeVar_1734922155458_594++;
        var loopTimeVar_1734922155458_592: Int = 0;
        while ((true) && loopTimeVar_1734922155458_592 < 100) {
            loopTimeVar_1734922155458_592++;
            var_1734922155458_555
        }
    };
    try { // block id: 596
        let var_1734922155458_608: Array<Bool> = [true, false, false, false, true, false, true, true, false, true];
        (((Int32(Int32(-88)) & 127)..=(Int32(Int32(-61)) & 127) : (Int64(10) | 1)), ((UInt64(UInt64(169)) & 127)..(UInt64(UInt64(39)) &
                127) : (Int64(81) | 1)), var_1734922155458_55, var_1734922155458_604, Float32(105.0),
            var_1734922155458_608)[4];
        var_1734922155458_394
    } catch (_) { // block id: 612
        const var_1734922155458_615: Bool = true;
        var loopTimeVar_1734922155458_619: Int64 = 0;
        while ((var_1734922155458_615) && loopTimeVar_1734922155458_619 < 100) {
            loopTimeVar_1734922155458_619++;
        };
        [Option<Rune>.None, Option<Rune>.None, var_1734922155458_542, Option<Rune>.None, var_1734922155458_542,
            Option<Rune>.None, var_1734922155458_542, Option<Rune>.None, Option<Rune>.None, var_1734922155458_542]
    } finally { // block id: 631
        var loopTimeVar_1734922155458_637: Int64 = 0;
        do {
            loopTimeVar_1734922155458_637++;
            ()
        } while ((false) && loopTimeVar_1734922155458_637 < 100);
        if (true) { // block id: 640
            ((UInt64(UInt64(90)) & 127)..(UInt64(UInt64(62)) & 127) : (Int64(66) | 1))
        } else { // block id: 645
            ();
            let var_1734922155458_651: Range<UInt64> = ((UInt64(UInt64(78)) & 127)..(UInt64(UInt64(247)) & 127) : (Int64(-94) |
                1));
            if (var_1734922155458_112) {
                ((UInt64(UInt64(175)) & 127)..=(UInt64(UInt64(17)) & 127) : (Int64(-74) | 1))
            } else {
                var_1734922155458_651
            }
        };
        var_1734922155458_394
    }
}

@Frozen
public const func func_1734922155458_896(param_1734922155458_120: Int32): Int64 { // block id: 121
    (var_1734922155458_125 | -92) & var_1734922155458_125;
    const var_1734922155458_130: Int = 65;
    var_1734922155458_130
}

@Frozen
public func func_1734922155458_898(param_1734922155458_899: Int64): (Int32) -> Int64 { // block id: 900
    const var_1734922155458_902: UInt16 = 0;
    var_1734922155458_902;
    let var_1734922155458_905: (Int32) -> Int64 = func_1734922155458_896;
    var_1734922155458_905
}

internal func func_1734922155458_249(param_1734922155458_250: Array<Option<Rune>>): Option<Rune> { // block id: 251
    let var_1734922155458_330: Class_1734922155458_11 = Class_1734922155458_11();
    func func_1734922155458_256(param_1734922155458_257: UInt32,
        optionalParam_1734922155458_258!: UInt8 = UInt8(UInt8(Int8(UInt8(179)))),
        namedParam_1734922155458_263!: Array<Option<Rune>>, namedParam_1734922155458_264!: Rune): Class_1734922155458_11 { // block id: 265
        var var_1734922155458_307: Int8 = Int8(UInt8(191));
        (try { // block id: 272
            var_1734922155458_275 *= Int32(-102)
            var_1734922155458_282++;
            var_1734922155458_285
        } finally { // block id: 288
            var_1734922155458_290;
            var_1734922155458_307 % ((Int8(110)) | 1);
            var_1734922155458_285
        } ?? if (func_1734922155458_314(namedParam_1734922155458_315: var_1734922155458_324)) {
            (var_1734922155458_330, ((UInt32(var_1734922155458_334) & 127)..(UInt32(var_1734922155458_334) & 127) : (Int64(91) |
                    1)), var_1734922155458_282)[0]
        } else {
            match (var_1734922155458_275) {
                case _: Array<Option<Rune>> =>
                    var var_1734922155458_346: Unit = ();
                    var_1734922155458_346;
                    if (true) {
                        Class_1734922155458_11()
                    } else {
                        var_1734922155458_330
                    }

                case 56 | 44 | -26 | -114 =>
                    if (var_1734922155458_112) {
                        var_1734922155458_330
                    } else {
                        Class_1734922155458_11()
                    };
                    let var_1734922155458_363: Unit = ();
                    if (var_1734922155458_112) {
                        VArray<Unit, $1>(repeat: var_1734922155458_363)
                    } else {
                        VArray<Unit, $1>({i => ()})
                    };
                    if (var_1734922155458_112) {
                        Class_1734922155458_11()
                    } else {
                        Class_1734922155458_11()
                    }

                case caseVar_1734922155458_373: Int32 =>
                    let var_1734922155458_376: Unit = ();
                    var_1734922155458_376;
                    Int64(10) + Int64(-40);
                    Class_1734922155458_11()

                case _ =>
                    var_1734922155458_386;
                    if (var_1734922155458_112) {
                        var_1734922155458_330
                    } else {
                        var_1734922155458_330
                    }
            }
        })
    };

    func_1734922155458_256(UInt32(224), namedParam_1734922155458_263: var_1734922155458_394,
        namedParam_1734922155458_264: var_1734922155458_55).var_1734922155458_446[0];
    let var_1734922155458_827: (Range<Int32>, Range<UInt64>, Rune, Range<UInt32>, Float32, Array<Bool>) = (((Int32(Int32(106)) &
            127)..(Int32(Int32(Int16(11))) & 127) : (Int64(65) | 1)), ((UInt64(UInt64(38)) & 127)..(UInt64(UInt64(130)) &
            127) : (Int64(-113) | 1)), r'e', ((UInt32(UInt32(61)) & 127)..=(UInt32(UInt32(Int8(Int8(-126)))) & 127) : (Int64(Int8(101)) |
            1)), Float32(Float32(-39.0)), [(Option<Class_1734922155458_11>.Some(Class_1734922155458_11()) is (Float64) -> Unit),
            (((Int8(Int8(31)) & 127)..=(Int8(Int8(-27)) & 127) : (Int64(-19) | 1)) is (Int32) -> Int64), true,
            (Int32(UInt32(41)) is Class_1734922155458_11), true, true, false, false, false,
            (((Int16(Int16(98)) & 127)..=(Int16(Int16(-23)) & 127) : (Int64(94) | 1)) is Rune)]);
    (var_1734922155458_667 - var_1734922155458_667 |> (func_1734922155458_898 ~> {
        lambdaParameter_1734922155458_656: (Int32) -> Int64 => [(false as Rune), try { // block id: 664
            var_1734922155458_667++;
            ();
            if (false) {
                Option<Rune>.None
            } else {
                var_1734922155458_201
            }
        } finally { // block id: 677
            if (false) {
                Option<Rune>.Some(var_1734922155458_55)
            } else {
                Option<Rune>.None
            }
        }, if ((var_1734922155458_686 is (Int32) -> Int64)) {
            var_1734922155458_201
        } else {
            var_1734922155458_692[1]
        }, Option<Rune>.None,
            if ((true, var_1734922155458_730)[0]) { // block id: 733
            var_1734922155458_735;
            var_1734922155458_735;
            if (true) {
                var_1734922155458_201
            } else {
                Option<Rune>.None
            }
        } else if ((Option<Class_1734922155458_11>.None is Range<Int8>)) { // block id: 744
            ();
            Option<Rune>.Some(r'f')
        } else { // block id: 748
            var_1734922155458_275 += Int32(57)
            if (false) {
                Option<Rune>.Some(r'q')
            } else {
                var_1734922155458_201
            }
        }, var_1734922155458_201, if (true) { // block id: 760
            var_1734922155458_763 &&= false
            var_1734922155458_201
        } else { // block id: 767
            var_1734922155458_770 ^= var_1734922155458_770
            var_1734922155458_334;
            if (var_1734922155458_777) {
                var_1734922155458_201
            } else {
                var_1734922155458_201
            }
        }, var_1734922155458_201, if ((Float32(6.0) == var_1734922155458_786)) {
            match (Option<Class_1734922155458_11>.None) {
                case caseVar_1734922155458_792: Int32 =>
                    (Class_1734922155458_11(), var_1734922155458_604, Int16(117));
                    ();
                    var_1734922155458_201

                case _: Bool =>
                    if (var_1734922155458_777) {
                        var_1734922155458_201
                    } else {
                        Option<Rune>.Some(r'c')
                    }

                case _: Option<Class_1734922155458_11> =>
                    var var_1734922155458_813: UInt8 = UInt8(56);
                    var_1734922155458_813 %= ((var_1734922155458_813) | 1)
                    ();
                    Option<Rune>.None

                case _: UInt32 => Option<Rune>.None

                case _ =>
                    var_1734922155458_555;
                    var_1734922155458_827;
                    Option<Rune>.None
            }
        } else {
            Option<Rune>.Some(r'm')
        },
            (var_1734922155458_777, ((UInt8(UInt8(39)) & 127)..=(UInt8(UInt8(78)) & 127) : (Int64(25) | 1)),
            var_1734922155458_770, var_1734922155458_881, var_1734922155458_463, var_1734922155458_889, ((Int32(Int32(-83)) &
                127)..=(Int32(Int32(-25)) & 127) : (Int64(-79) | 1)))[3]]
    }))[9]
}

public interface Interface_1734922155458_1302 {}

@Deprecated
public open class Class_1734922155458_1299 <: Interface_1734922155458_1302 {
    public init() { // block id: 1301

    }

    @Frozen
    public mut prop var_1734922155458_1307: UInt { // block id: 1308
        get() { // block id: 1310
            Int64(Int16(48));
            UInt64(225);
            var_1734922155458_1581
        }
        set(Value) { // block id: 1316
            ((Int16(Int16(7)) & 127)..(Int16(Int16(Int16(Int8(-5)))) & 127) : (Int64(-49) | 1));
            ();
            var_1734922155458_1581 = Value
        }
    }
    var var_1734922155458_1581: UInt64 = UInt64(65)
}

public interface Interface_1734922155458_1383<T0, T1, T2> {}

@Deprecated
public open class Class_1734922155458_1380 <: Class_1734922155458_11 & Interface_1734922155458_1383<Range<UInt8>, Int8,
    UInt64> & Interface_1734922155458_1302 {
    public init() { // block id: 1382

    }

    public let var_1734922155458_1388: UInt = UInt64(172)
    static init() {
    }
}

public enum Enum_1734922155458_1440<T0, T1> {
    defaultValue
    | enumValue_1734922155458_1450((Unit, Rune, Int16, Int8, Int64, Bool), Range<UInt16>, (Int32) -> Int64)
}

public func func_1734922155458_107(param_1734922155458_108: UInt8): (String, (Unit, Rune, Int16, Int8, Int64, Bool), 
    UInt16) { // block id: 109
    let var_1734922155458_116: Unit = ();
    let var_1734922155458_133: (Int32) -> Int64 = func_1734922155458_119;
    var loopTimeVar_1734922155458_138: Range<UInt64> = ((UInt64(UInt64(UInt8(66))) & 127)..=(UInt64(UInt64(222)) & 127) : (Int64(46) |
        1));
    for (i in loopTimeVar_1734922155458_138 where var_1734922155458_112) {
        var_1734922155458_116;
        var_1734922155458_136 |> var_1734922155458_133
    };
    func func_1734922155458_186(namedParam_1734922155458_187!: Array<UInt64>,
        optionalParam_1734922155458_188!: Range<UInt8> = ((UInt8(UInt8(94)) & 127)..=(UInt8(UInt8(230)) & 127) : (Int64(113) |
            1)), namedParam_1734922155458_190!: Int64): Rune { // block id: 191
        var var_1734922155458_225: Bool = true;
        ([var_1734922155458_201, var_1734922155458_201, Option<Rune>.Some(r'h'), var_1734922155458_201,
            var_1734922155458_201, var_1734922155458_201, Option<Rune>.Some(r'j'), var_1734922155458_201,
            Option<Rune>.None, var_1734922155458_201][7] ?? if ([true, var_1734922155458_112, false, true, true,
            var_1734922155458_225, false, true, false, var_1734922155458_225][9]) {
            func_1734922155458_233(false, namedParam_1734922155458_235: UInt64(209))
        } else {
            (if (false) {
                r'S'
            } else {
                r'C'
            })
        })
    };

    let var_1734922155458_931: UInt64 = UInt64(163);
    let var_1734922155458_1270: Class_1734922155458_11 = Class_1734922155458_11();
    func func_1734922155458_155(optionalParam_1734922155458_156!: UInt8 = UInt8(Int8(20)),
        namedParam_1734922155458_159!: Rune,
        optionalParam_1734922155458_160!: Range<UInt64> = ((UInt64(UInt64(Int16(-21))) & 127)..(UInt64(UInt64(Int16(UInt8(115)))) &
            127) : (Int64(Int16(69)) | 1)),
        optionalParam_1734922155458_169!: (String, (Unit, Rune, Int16, Int8, Int64, Bool), UInt16) = ("]Qke[h^vPZ", ((),
                r'i', Int16(Int8(2)), Int8(95), Int64(-29), (Float32(-113.0) is Float64)), UInt16(Int16(UInt8(67))))): Class_1734922155458_11 { // block id: 184
        let var_1734922155458_946: Array<UInt64> = [UInt64(241), UInt64(0), UInt64(189), UInt64(226), UInt64(48),
            UInt64(16), UInt64(130), UInt64(121), UInt64(248), UInt64(192)];
        func_1734922155458_186(
            namedParam_1734922155458_187: match (([var_1734922155458_201, var_1734922155458_201, var_1734922155458_201,
                var_1734922155458_881, Option<Rune>.None, var_1734922155458_881, var_1734922155458_881,
                Option<Rune>.None, var_1734922155458_201, Option<Rune>.Some(var_1734922155458_55)] |>
                func_1734922155458_249)) {
                case _: Float32 =>
                    Option<Rune>.None;
                    [var_1734922155458_931, UInt64(186), var_1734922155458_931, var_1734922155458_931, UInt64(166),
                        var_1734922155458_931, UInt64(5), UInt64(200), var_1734922155458_931, UInt64(170)]

                case _: UInt8 =>
                    var_1734922155458_946;
                    ();
                    var_1734922155458_946

                case _: Class_1734922155458_11 =>
                    if (var_1734922155458_112) {
                        ((UInt64(UInt64(67)) & 127)..(UInt64(UInt64(80)) & 127) : (Int64(-15) | 1))
                    } else {
                        ((UInt64(UInt64(19)) & 127)..(UInt64(UInt64(181)) & 127) : (Int64(-34) | 1))
                    };
                    var_1734922155458_958;
                    if (var_1734922155458_112) {
                        var_1734922155458_946
                    } else {
                        [UInt64(214), UInt64(233), UInt64(170), UInt64(78), UInt64(31), UInt64(228), UInt64(130),
                            UInt64(112), UInt64(10), UInt64(95)]
                    }

                case _ =>
                    ();
                    ();
                    if (var_1734922155458_112) {
                        [UInt64(116), var_1734922155458_931, var_1734922155458_931, var_1734922155458_931,
                            var_1734922155458_931, UInt64(142), var_1734922155458_931, var_1734922155458_931, UInt64(74),
                            UInt64(35)]
                    } else {
                        [UInt64(105), UInt64(57), UInt64(89), UInt64(253), UInt64(57), UInt64(94), UInt64(95),
                            UInt64(35), UInt64(182), UInt64(213)]
                    }
            }, namedParam_1734922155458_190: Int64(89));
        let var_1734922155458_1188: Option<UInt8> = ("""
-ip81
sC ,*
""" as UInt8);
        ((UInt8(try { // block id: 996
            var_1734922155458_998
        } catch (_) { // block id: 1000
            var_1734922155458_275 <<= ((var_1734922155458_136) & 7)
            let var_1734922155458_1007: Class_1734922155458_11 = Class_1734922155458_11(
                namedParam_1734922155458_1010: [(((Int16(Int16(-84)) & 127)..(Int16(Int16(-89)) & 127) : (Int64(43) | 1)) as Rune),
                    (((Int8(Int8(29)) & 127)..(Int8(Int8(68)) & 127) : (Int64(-97) | 1)) as Rune),
                    ((((Int32(Int32(-126)) & 127)..(Int32(Int32(-35)) & 127) : (Int64(-4) | 1)), ((UInt64(UInt64(31)) &
                        127)..(UInt64(UInt64(254)) & 127) : (Int64(4) | 1)), r'G', ((UInt32(UInt32(104)) & 127)..(UInt32(UInt32(249)) &
                        127) : (Int64(27) | 1)), Float32(24.0), [true, true, true, true, true, false, true, true, false,
                        false]) as Rune), (Int64(-76) as Rune),
                    ((true, ((UInt8(UInt8(206)) & 127)..=(UInt8(UInt8(91)) & 127) : (Int64(-84) | 1)), UInt16(196),
                    Option<Rune>.Some(r'h'), ((Int8(Int8(113)) & 127)..(Int8(Int8(106)) & 127) : (Int64(34) | 1)), (Class_1734922155458_11(),
                        ((UInt32(UInt32(3)) & 127)..=(UInt32(UInt32(95)) & 127) : (Int64(69) | 1)), Int16(40)), ((Int32(Int32(79)) &
                        127)..(Int32(Int32(75)) & 127) : (Int64(-110) | 1))) as Rune), Option<Rune>.Some(r'8'),
                    (((Int64(Int64(-85)) & 127)..(Int64(Int64(46)) & 127) : (Int64(-115) | 1)) as Rune),
                    Option<Rune>.Some(r'v'),
                    (((UInt32(UInt32(170)) & 127)..(UInt32(UInt32(225)) & 127) : (Int64(-120) | 1)) as Rune),
                    Option<Rune>.Some(r'k')],
                namedParam_1734922155458_1022: ((UInt16(UInt16(141)) & 127)..=(UInt16(UInt16(157)) & 127) : (Int64(Int32(UInt8(190))) |
                    1)));
            if (var_1734922155458_777) {
                var_1734922155458_1007
            } else {
                var_1734922155458_1007
            };
            UInt8(148)
        } finally { // block id: 1171
            var_1734922155458_998
        }) & 127)..=(UInt8(([Option<UInt8>.None, Option<UInt8>.Some(UInt8(191)), Option<UInt8>.None,
            Option<UInt8>.Some(UInt8(17)), var_1734922155458_1188, Option<UInt8>.None, Option<UInt8>.Some(UInt8(97)),
            var_1734922155458_1188, Option<UInt8>.None, Option<UInt8>.None][1] ?? -UInt8(201))) & 127) : (Int64(69) | 1));
        try { // block id: 1202
            try { // block id: 1204
                ();
                var_1734922155458_667 %= ((Int64(63)) | 1)
                if (true) {
                    r'k'
                } else {
                    r'f'
                }
            } catch (_) { // block id: 1213
                [true, false, true, true, false, false, false, true, true, true];
                var_1734922155458_55
            } finally { // block id: 1216
                ();
                var_1734922155458_55
            };
            var var_1734922155458_1220: Class_1734922155458_11 = Class_1734922155458_11(
                namedParam_1734922155458_1010: [([Option<UInt8>.None, Option<UInt8>.Some(UInt8(79)), Option<UInt8>.None,
                    Option<UInt8>.Some(UInt8(244)), Option<UInt8>.Some(UInt8(87)), Option<UInt8>.None,
                    Option<UInt8>.Some(UInt8(192)), Option<UInt8>.Some(UInt8(88)), Option<UInt8>.Some(UInt8(111)),
                    Option<UInt8>.Some(UInt8(107))] as Rune), Option<Rune>.None,
                    (((UInt16(UInt16(57)) & 127)..(UInt16(UInt16(128)) & 127) : (Int64(-70) | 1)) as Rune),
                    Option<Rune>.None, (UInt16(UInt16(149)) as Rune), Option<Rune>.None, Option<Rune>.Some(r'z'),
                    Option<Rune>.Some(r't'), (UInt64(Int16(71)) as Rune), (Option<UInt8>.None as Rune)],
                namedParam_1734922155458_1022: ((UInt16(UInt16(74)) & 127)..(UInt16(UInt16(178)) & 127) : (Int64(-27) | 1)));
            var_1734922155458_1220
        } catch (e: Exception) { // block id: 1263
            var_1734922155458_555;
            try { // block id: 1266
                var_1734922155458_555;
                ();
                var_1734922155458_1270
            } catch (_) { // block id: 1272
                Class_1734922155458_11()
            } finally { // block id: 1274
                if (true) {
                    Class_1734922155458_11()
                } else {
                    var_1734922155458_1270
                }
            }
        }
    };

    func_1734922155458_155(namedParam_1734922155458_159: var_1734922155458_55).func_1734922155458_1281(-UInt64(13),
        namedParam_1734922155458_1283: UInt8(134) / ((var_1734922155458_998) | 1))
}

main(): Int64 {
    try {
        const var_1734922155458_32: Unit = ();
        match (Class_1734922155458_11.var_1734922155458_16) {
            case r'4' | r'g' =>
                var_1734922155458_29--;
                var_1734922155458_32;
                const var_1734922155458_35: Int8 = 90;
                var_1734922155458_35

            case _ =>
                ();
                Int8(97)
        };
        const var_1734922155458_74: Float32 = -92.0;
        var var_1734922155458_99: Int8 = Int8(17);
        match (try { // block id: 44
            Int16(19) - var_1734922155458_48;
            var_1734922155458_55
        } catch (e: Exception) { // block id: 57
            UInt32(198);
            var_1734922155458_32;
            if (var_1734922155458_62) {
                var_1734922155458_55
            } else {
                r'R'
            }
        }) {
            case r'2' | r'y' => ()

            case r'1' | r's' | r'G' | r'k' =>
                var_1734922155458_74;
                ()

            case r'5' | r'n' | r'J' =>
                var_1734922155458_82 | UInt8(188);
                ();
                var_1734922155458_29 ^= var_1734922155458_29

            case r'L' | r'5' => ()

            case _ =>
                -var_1734922155458_99
                ()
        };
        let var_1734922155458_1575: (UInt8) -> (String, (Unit, Rune, Int16, Int8, Int64, Bool), UInt16) = func_1734922155458_107;
        (var_1734922155458_998 |> var_1734922155458_1575)[1][4]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1734922155458_29 * var_1734922155458_29), 64)
        crcCheck.updateBuffer(UInt64(var_1734922155458_48 * var_1734922155458_48), 64)
        crcCheck.updateBuffer(UInt64(var_1734922155458_82 * var_1734922155458_82), 64)
        crcCheck.updateBuffer(UInt64(var_1734922155458_99 * var_1734922155458_99), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend<T0, T1> Enum_1734922155458_1440<T0, T1> {}
