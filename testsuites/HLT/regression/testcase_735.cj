/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

@Deprecated
public const var_1736262160248_43: Float64 = -113.0
public const var_1736262160248_46: Byte = 50
public const var_1736262160248_59: UInt64 = 21
public const var_1736262160248_64: Int8 = 46
public let var_1736262160248_94: Class_1736262160248_84<Struct_1736262160248_12> = Class_1736262160248_84<Struct_1736262160248_12>()
public const var_1736262160248_112: Bool = true
const var_1736262160248_125: Unit = ()
public const var_1736262160248_129: String = "amSG$\\|w.L"
internal const var_1736262160248_132: Int64 = 120
@Deprecated
public const var_1736262160248_152: UInt8 = 226
internal const var_1736262160248_158: Int32 = -108
public const var_1736262160248_165: Unit = ()
public const var_1736262160248_209: Int16 = -113
var var_1736262160248_221: Int = Int64(Int32(125))
public let var_1736262160248_226: UInt16 = UInt16(103)
var var_1736262160248_300: Interface_1736262160248_87 = Class_1736262160248_84<Struct_1736262160248_12>()
let var_1736262160248_321: ?Unit = Option<Unit>.None
@Deprecated
public const var_1736262160248_338: UInt32 = 208
@Deprecated
public var var_1736262160248_345: Int8 = Int8(105)
@Deprecated
let var_1736262160248_370: (Float32, Float32, Option<Option<Bool>>, Unit, UInt16) = (Float32(Float32(-52.0)), Float32(Float32(86.0)),
    Option<Option<Bool>>.None, (), UInt16(177))
public let var_1736262160248_404: Bool = (UInt32(UInt8(UInt8(172))) is (UInt16) -> String)
public var var_1736262160248_425: UInt = UInt64(191)
public let var_1736262160248_488: Int32 = Int32(UInt8(248))
@Deprecated
public var var_1736262160248_495: Array<Int32> = [Int32(Int32(-47)), Int32(UInt8(UInt8(157))), Int32(89), Int32(24),
    Int32(Int8(Int8(123))), Int32(Int32(36)), Int32(33), Int32(-110), Int32(Int8(-103)), Int32(UInt8(UInt8(Int8(-3))))]
let var_1736262160248_610: String = "a{,c:iX`6t:"
@Deprecated
public let var_1736262160248_622: Range<UInt16> = ((UInt16(UInt16(231)) & 127)..(UInt16(UInt16(UInt16(80))) & 127) : (Int64(Int16(Int8(UInt8(6)))) |
    1))
public var var_1736262160248_638: Int8 = Int8(UInt8(Int8(-7)))
@Deprecated
internal const var_1736262160248_645: Byte = 69
@Deprecated
internal var var_1736262160248_649: Range<Int32> = ((Int32(Int32(UInt32(UInt16(77)))) & 127)..(Int32(Int32(-59)) & 127) : (Int64(59) |
    1))
@Deprecated
internal let var_1736262160248_742: Option<Option<Bool>> = (UInt32(Int32(UInt8(159))) as Option<Bool>)
public let var_1736262160248_850: ?Int64 = (VArray<Int32, $7>(repeat: Int32(UInt32(189))) as Int64)
let var_1736262160248_955: ?Bool = (VArray<Int32, $7>(repeat: Int32(-112)) as Bool)
public var var_1736262160248_1007: Float64 = Float64(-39.0)
var var_1736262160248_1033: Int32 = Int32(Int8(Int8(Int8(8))))
let var_1736262160248_1080: Option<Option<Bool>> = Option<Option<Bool>>.None
public const var_1736262160248_1102: Int16 = 93
public let var_1736262160248_1115: Float32 = Float32(Float32(Float32(-60.0)))
public var var_1736262160248_1244: Array<UInt64> = [UInt64(226), UInt64(19), UInt64(61), UInt64(38), UInt64(227),
    UInt64(173), UInt64(103), UInt64(97), UInt64(10), UInt64(63)]

public struct Struct_1736262160248_12 {
    @Frozen
    public init() { // block id: 14

    }

    static const var_1736262160248_428: Unit = ();
    private static let var_1736262160248_528: Option<Option<Bool>> = Option<Option<Bool>>.None;
    public static let var_1736262160248_575: Float32 = Float32(-81.0);

    @Frozen
    static func func_1736262160248_17<T0, T1>(optionalParam_1736262160248_18!: Int32 = Int32(-86)): Bool { // block id: 20
        var loopTimeVar_1736262160248_438: Array<UInt64> = [UInt64(UInt64(Int16(-102))), UInt64(Int8(UInt8(Int8(-123)))),
            UInt64(UInt64(174)), UInt64(UInt8(208)), UInt64(6), UInt64(Int32(Int32(-25))),
            UInt64(Int32(Int8(Int8(-92)))), UInt64(147), UInt64(UInt16(54)), UInt64(Int32(UInt16(UInt16(239))))];
        for (i in loopTimeVar_1736262160248_438 where (if (true) {
            "f3T8:'cR7T"
        } else {
            "\"L?m`77z-D"
        } |> {
            lambdaParameter_1736262160248_50: String =>
                let var_1736262160248_382: (Int8) -> (UInt16) -> String = func_1736262160248_364;
                var var_1736262160248_387: (Int8) -> UInt16 = {lambdaParameter_1736262160248_390: Int8 => UInt16(12)};
                var var_1736262160248_401: Bool = false;
                try { // block id: 53
                    var var_1736262160248_69: Bool = (Int32(53) is Rune);
                    try { // block id: 55
                        ();
                        var_1736262160248_59 < var_1736262160248_59
                    } finally { // block id: 62
                        var_1736262160248_64;
                        Float64(32.0);
                        !var_1736262160248_69
                    }
                } catch (_) { // block id: 72
                    "eo\\,qtV|W5" |> func_1736262160248_23
                } finally { // block id: 76
                    var_1736262160248_387 |> {
                        lambdaParameter_1736262160248_101: (Int8) -> UInt16 =>
                            let var_1736262160248_171: ((Int8) -> UInt16) -> UInt16 = func_1736262160248_136;
                            (var_1736262160248_382 ~> func_1736262160248_176) |> (var_1736262160248_171 ~>
                                func_1736262160248_107)
                    };
                    match (var_1736262160248_321) {
                        case caseVar_1736262160248_397: Int8 => var_1736262160248_401 &&= var_1736262160248_404

                        case _ =>
                            ();
                            var_1736262160248_165

                        case _ => var_1736262160248_345 >>= ((Int8(43)) & 7)

                        case _ =>
                            var_1736262160248_425++;
                            var_1736262160248_428;
                            ()
                    };
                    (Option<Option<Bool>>.None is ((Int8) -> UInt16) -> String)
                }
        })) {
        }
        let var_1736262160248_541: Range<UInt64> = ((UInt64(UInt64(227)) & 127)..(UInt64(UInt64(160)) & 127) : (Int64(-120) |
            1));
        VArray<Int32, $7>(repeat: try { // block id: 479
                Int32(-63)
            } catch (_) { // block id: 481
                Int64(-51);
                Int32(-24) * Int32(87)
            })[3];
        let var_1736262160248_559: Class_1736262160248_555<Array<UInt64>> = Class_1736262160248_555<Array<UInt64>>();
        var var_1736262160248_600: Bool = true;
        (match (var_1736262160248_559.var_1736262160248_562) {
            case caseVar_1736262160248_571: Int64 =>
                (var_1736262160248_575, Float32(100.0), var_1736262160248_528, var_1736262160248_428,
                    var_1736262160248_226);
                var_1736262160248_59

            case _ =>
                true;
                UInt64(121)

            case caseVar_1736262160248_589: Range<UInt8> =>
                ((Int8(Int8(89)) & 127)..(Int8(Int8(111)) & 127) : (Int64(-118) | 1));
                var_1736262160248_59

            case caseVar_1736262160248_595 =>
                ();
                var_1736262160248_600 &&= true
                UInt64(42)

            case _ =>
                if (var_1736262160248_404) {
                    var_1736262160248_610
                } else {
                    """
km+fS
&\"LpF
"""
                };
                ();
                UInt64(118)
        } is Array<Int32>)
    }
}

@Frozen
internal const func func_1736262160248_36(param_1736262160248_37: Int8): UInt16 { // block id: 38
    91
}

@Deprecated
public const func func_1736262160248_23(param_1736262160248_24: String): Bool { // block id: 25
    const func func_1736262160248_28(param_1736262160248_29: UInt16, param_1736262160248_30: Rune,
        param_1736262160248_31: Float64, namedParam_1736262160248_32!: UInt8): Bool { // block id: 33
        false
    };

    !func_1736262160248_28(func_1736262160248_36(-92), r'L', var_1736262160248_43,
        namedParam_1736262160248_32: var_1736262160248_46)
}

public interface Interface_1736262160248_92<T0, T1> {}

public interface Interface_1736262160248_91 <: Interface_1736262160248_92<UInt16, Rune> {}

public interface Interface_1736262160248_90 <: Interface_1736262160248_91 {}

public interface Interface_1736262160248_89 <: Interface_1736262160248_90 {
    func func_1736262160248_303(param_1736262160248_304: (Int8) -> UInt16,
        namedParam_1736262160248_307!: (UInt16) -> String, namedParam_1736262160248_310!: Int64): Unit { // block id: 311
        (match (if (true) {
            var_1736262160248_321
        } else {
            Option<Unit>.Some(var_1736262160248_165)
        }) {
            case _ =>
                let var_1736262160248_332: ?Unit = (UInt64(180) as Unit);
                if (var_1736262160248_112) {
                    var_1736262160248_321
                } else {
                    var_1736262160248_332
                }
        } ?? try { // block id: 336
            var_1736262160248_338;
            var_1736262160248_165;
            ()
        } finally { // block id: 342
            var_1736262160248_345 <<= ((Int8(17)) & 7)
        });
        var_1736262160248_165
    }
}

public sealed interface Interface_1736262160248_88 <: Interface_1736262160248_89 {
    func func_1736262160248_303(param_1736262160248_304: (Int8) -> UInt16,
        namedParam_1736262160248_307!: (UInt16) -> String, namedParam_1736262160248_310!: Int64): Unit { // block id: 871
        const var_1736262160248_874: Float64 = 22.0;
        match (var_1736262160248_874) {
            case _ => Option<UInt16>.Some(var_1736262160248_226)
        };
        var loopTimeVar_1736262160248_921: Int64 = 0;
        do {
            loopTimeVar_1736262160248_921++;
        } while ((try { // block id: 885
            ();
            ();
            var var_1736262160248_889: VArray<Bool, $9> = [true, false, true, false, true, false, false, false, true];
            var_1736262160248_889
        } catch (_) { // block id: 891
            UInt32(191) + var_1736262160248_338;
            let var_1736262160248_896: VArray<Bool, $9> = [(((Int32(Int32(-18)) & 127)..=(Int32(Int32(66)) & 127) : (Int64(-120) |
                1)) is Interface_1736262160248_89), (Int32(Int16(109)) is Bool),
                (((Float32(26.0) is Unit) is Range<UInt32>) is Float64), true, false, false, true,
                ([Int32(-36), Int32(112), Int32(-9), Int32(-9), Int32(-52), Int32(-66), Int32(-107), Int32(19),
                Int32(-95), Int32(-15)] is Range<UInt64>),
                (((Int8(Int8(0)) & 127)..(Int8(Int8(-22)) & 127) : (Int64(76) | 1)) is Interface_1736262160248_87)];
            var_1736262160248_896
        }[4]) && loopTimeVar_1736262160248_921 < 100)
    }
}

public interface Interface_1736262160248_87 <: Interface_1736262160248_88 {
    @Frozen
    func func_1736262160248_669(): Int64 { // block id: 670
        let var_1736262160248_688: Option<Unit> = (Int8(Int8(-23)) as Unit);
        var var_1736262160248_699: Int16 = Int16(UInt16(204));
        var loopTimeVar_1736262160248_704: Int = 0;
        (if (var_1736262160248_59 > var_1736262160248_59) { // block id: 680
            var_1736262160248_495;
            ();
            var var_1736262160248_684: Option<Unit> = Option<Unit>.None;
            var_1736262160248_684
        } else { // block id: 686
            var_1736262160248_688
        } ?? while (((Option<Bool>.None ?? false)) && loopTimeVar_1736262160248_704 < 100) {
            loopTimeVar_1736262160248_704++;
            var_1736262160248_699 <<= ((var_1736262160248_699) & 7)
        });
        let var_1736262160248_711: ?Bool = (([Int32(-39), Int32(10), Int32(14), Int32(42), Int32(-70), Int32(-51),
            Int32(87), Int32(-17), Int32(-80), Int32(-104)] as Bool) as Bool);
        var var_1736262160248_717: Enum_1736262160248_183 = Enum_1736262160248_183.enumValue_1736262160248_186(Int8(60),
            UInt16(Int16(-64)), func_1736262160248_115, UInt8(Int8(UInt8(Int8(-92)))));
        if ((UInt16(58), var_1736262160248_711, var_1736262160248_112, var_1736262160248_717, [UInt64(137),
                var_1736262160248_59, var_1736262160248_425, UInt64(58), var_1736262160248_425, UInt64(240), UInt64(39),
                var_1736262160248_59, UInt64(234), UInt64(139)], (Float32(-22.0), Float32(-60.0), var_1736262160248_742,
                (), UInt16(104)))[2]) { // block id: 750
            let var_1736262160248_756: Class_1736262160248_752<Unit, Option<UInt16>> = Class_1736262160248_752<Unit, Option<UInt16>>();
            var_1736262160248_756.var_1736262160248_759;
            var var_1736262160248_808: Option<Int64> = (((UInt32(UInt32(92)) & 127)..(UInt32(UInt32(82)) & 127) : (Int64(-11) |
                1)) as Int64);
            (var_1736262160248_808 ?? Int64(-9))
        } else { // block id: 812
            try (resource = Class_1736262160248_84<Struct_1736262160248_12>()) { // block id: 814

            } catch (_) { // block id: 815
                var_1736262160248_165;
                var_1736262160248_345 >>= ((Int8(-34)) & 7)
            } finally { // block id: 820
                ();
                Int64(-114) / ((var_1736262160248_221) | 1);
                ()
            };
            try (resource = Class_1736262160248_84<Struct_1736262160248_12>()) { // block id: 827
                ();
                var_1736262160248_221 >>= ((var_1736262160248_221) & 7)
                var_1736262160248_165
            } finally { // block id: 833
                var var_1736262160248_836: Rune = r'3';
                var_1736262160248_836 = r'E'
                var var_1736262160248_841: Int32 = Int32(1);
                var_1736262160248_841 %= ((var_1736262160248_488) | 1)
            };
            (var_1736262160248_850 ?? Int64(-112))
        }
    };

    func func_1736262160248_303(param_1736262160248_304: (Int8) -> UInt16,
        namedParam_1736262160248_307!: (UInt16) -> String, namedParam_1736262160248_310!: Int64): Unit { // block id: 923
        var loopTimeVar_1736262160248_936: Int64 = 0;
        while ((try { // block id: 926
                Int8(97) < var_1736262160248_345
            } finally { // block id: 930
                var_1736262160248_226 != UInt16(181)
            }) && loopTimeVar_1736262160248_936 < 100) {
            loopTimeVar_1736262160248_936++;
        }
    }
}

public open class Class_1736262160248_84<T0> <: Interface_1736262160248_87 & Resource {
    public init() { // block id: 86

    }

    let var_1736262160248_97: String = "UyJD6XmW$b";
    protected prop var_1736262160248_987: ?Bool { // block id: 988
        get() { // block id: 990
            ();
            Option<Bool>.None
        }
    }
    public static let var_1736262160248_1131: Int64 = Int64(-96);
    public open override func func_1736262160248_303(param_1736262160248_304: (Int8) -> UInt16,
        namedParam_1736262160248_307!: (UInt16) -> String, namedParam_1736262160248_310!: Int64): Unit { // block id: 938
        let var_1736262160248_1089: Class_1736262160248_752<Unit, Option<UInt16>> = Class_1736262160248_752<Unit, Option<UInt16>>();
        if ((try { // block id: 942
            ();
            let var_1736262160248_948: ?Bool = Option<Bool>.None;
            if (false) {
                Option<Bool>.None
            } else {
                var_1736262160248_948
            }
        } catch (e: Exception) { // block id: 950
            ();
            if (var_1736262160248_404) {
                var_1736262160248_955
            } else {
                var_1736262160248_955
            }
        } finally { // block id: 974
            [UInt64(4), var_1736262160248_59, var_1736262160248_425, UInt64(200), UInt64(44), UInt64(150),
                var_1736262160248_59, var_1736262160248_59, UInt64(155), UInt64(154)];
            var_1736262160248_987
        } ?? if (var_1736262160248_112) { // block id: 995
            var_1736262160248_404
        } else if (var_1736262160248_404) { // block id: 998
            UInt32(6) & var_1736262160248_338;
            var_1736262160248_425 &= var_1736262160248_425
            var_1736262160248_1007 < var_1736262160248_1007
        } else { // block id: 1010
            Struct_1736262160248_12();
            ();
            false
        })) {
            match ([((UInt64(UInt64(66)) & 127)..(UInt64(UInt64(98)) & 127) : (Int64(-22) | 1)),
                ((UInt64(UInt64(159)) & 127)..=(UInt64(UInt64(59)) & 127) : (Int64(-122) | 1)),
                ((UInt64(UInt64(150)) & 127)..=(UInt64(UInt64(3)) & 127) : (Int64(-114) | 1)),
                ((UInt64(UInt64(202)) & 127)..(UInt64(UInt64(75)) & 127) : (Int64(38) | 1)),
                ((UInt64(UInt64(153)) & 127)..=(UInt64(UInt64(57)) & 127) : (Int64(81) | 1)),
                ((UInt64(UInt64(132)) & 127)..(UInt64(UInt64(136)) & 127) : (Int64(40) | 1)),
                ((UInt64(UInt64(114)) & 127)..(UInt64(UInt64(202)) & 127) : (Int64(-83) | 1)),
                ((UInt64(UInt64(243)) & 127)..=(UInt64(UInt64(95)) & 127) : (Int64(-123) | 1)),
                ((UInt64(UInt64(78)) & 127)..=(UInt64(UInt64(54)) & 127) : (Int64(78) | 1)),
                ((UInt64(UInt64(97)) & 127)..=(UInt64(UInt64(36)) & 127) : (Int64(-115) | 1))][2]) {
                case caseVar_1736262160248_1021 => ((Int16(var_1736262160248_209) & 127)..=(Int16(var_1736262160248_209) &
                    127) : (Int64(9) | 1))

                case caseVar_1736262160248_1029: Range<Int16> =>
                    var_1736262160248_1033 %= ((Int32(-6)) | 1)
                    ((Int16(Int16(125)) & 127)..=(Int16(Int16(36)) & 127) : (Int64(88) | 1))

                case _ =>
                    ();
                    var_1736262160248_165;
                    ((Int16(var_1736262160248_209) & 127)..(Int16(var_1736262160248_209) & 127) : (Int64(59) | 1))

                case _ =>
                    UInt32(12);
                    ((Int16(Int16(4)) & 127)..=(Int16(var_1736262160248_209) & 127) : (Int64(76) | 1))
            }
        } else {
            ((Int16(match (var_1736262160248_610) {
                case ###" vOO]5fvol"### => Int16(-29)

                case caseVar_1736262160248_1069 =>
                    Option<Int64>.None;
                    var_1736262160248_165;
                    var_1736262160248_209

                case caseVar_1736262160248_1076: Range<UInt32> =>
                    var_1736262160248_165;
                    var_1736262160248_1080;
                    -Int16(-47)

                case _ =>
                    r'p';
                    var_1736262160248_1089;
                    Int16(13) - var_1736262160248_209
            }) & 127)..=(Int16(match (var_1736262160248_338) {
                case 193 | 74 | 208 | 174 =>
                    ();
                    ((Int32(Int32(-114)) & 127)..=(Int32(Int32(-53)) & 127) : (Int64(-6) | 1));
                    var_1736262160248_1102

                case _ =>
                    Int64(2);
                    var_1736262160248_209
            }) & 127) : (match (var_1736262160248_1102) {
                case -87 =>
                    var_1736262160248_1115;
                    var_1736262160248_226;
                    Int64(-15)

                case caseVar_1736262160248_1123 =>
                    var_1736262160248_165;
                    var_1736262160248_221

                case _ => var_1736262160248_1131
            } | 1))
        };
        var var_1736262160248_1134: Range<Int8> = ((Int8(Int8(-11)) & 127)..=(Int8(Int8(-109)) & 127) : (Int64(69) | 1));
        var_1736262160248_1134;
        var_1736262160248_165
    };

    public open override func func_1736262160248_669(): Int64 { // block id: 1141
        var var_1736262160248_1198: Range<Int8> = ((Int8(Int8(UInt8(UInt8(UInt8(176))))) & 127)..(Int8(Int8(68)) & 127) : (Int64(101) |
            1));
        (if (try { // block id: 1145
            let var_1736262160248_1147: Array<Range<UInt64>> = [((UInt64(UInt64(20)) & 127)..=(UInt64(UInt64(110)) & 127) : (Int64(103) |
                1)), ((UInt64(UInt64(Int8(Int8(-120)))) & 127)..(UInt64(UInt64(82)) & 127) : (Int64(Int16(42)) | 1)),
                ((UInt64(UInt64(22)) & 127)..=(UInt64(UInt64(63)) & 127) : (Int64(66) | 1)),
                ((UInt64(UInt64(0)) & 127)..=(UInt64(UInt64(1)) & 127) : (Int64(-24) | 1)),
                ((UInt64(UInt64(Int8(-55))) & 127)..(UInt64(UInt64(UInt8(Int8(42)))) & 127) : (Int64(Int32(107)) | 1)),
                ((UInt64(UInt64(154)) & 127)..=(UInt64(UInt64(UInt64(210))) & 127) : (Int64(Int32(UInt8(53))) | 1)),
                ((UInt64(UInt64(204)) & 127)..(UInt64(UInt64(Int8(46))) & 127) : (Int64(Int32(120)) | 1)),
                ((UInt64(UInt64(53)) & 127)..(UInt64(UInt64(20)) & 127) : (Int64(UInt8(241)) | 1)),
                ((UInt64(UInt64(1)) & 127)..=(UInt64(UInt64(54)) & 127) : (Int64(51) | 1)),
                ((UInt64(UInt64(95)) & 127)..=(UInt64(UInt64(191)) & 127) : (Int64(Int32(Int8(85))) | 1))];
            var_1736262160248_1147;
            var_1736262160248_112
        } catch (_) { // block id: 1193
            var_1736262160248_165;
            if (var_1736262160248_404) {
                var_1736262160248_1198
            } else {
                var_1736262160248_1198
            };
            true
        }) {
            Option<Unit>.Some(())
        } else {
            (if (var_1736262160248_112) {
                var_1736262160248_321
            } else {
                Option<Unit>.None
            })
        } ?? ());
        Int64(if (if (var_1736262160248_404) { // block id: 1219
            if (var_1736262160248_404) {
                Struct_1736262160248_12()
            } else {
                Struct_1736262160248_12()
            };
            !true
        } else if (false) { // block id: 1227
            Float64(-105.0) == Float64(-6.0)
        } else { // block id: 1231
            var_1736262160248_404 || true
        }) { // block id: 1235
            ();
            r'4';
            Int8(-105)
        } else if (try { // block id: 1240
            var_1736262160248_404
        } finally { // block id: 1242
            var_1736262160248_1244;
            var_1736262160248_404
        }) { // block id: 1247
            var_1736262160248_495;
            ();
            var_1736262160248_638
        } else { // block id: 1251
            ((Int8(var_1736262160248_64) & 127)..=(Int8(Int8(24)) & 127) : (var_1736262160248_221 | 1));
            Int8(126) | Int8(8)
        })
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

internal func func_1736262160248_78(param_1736262160248_79: (Int8) -> UInt16): String { // block id: 82
    var_1736262160248_94.var_1736262160248_97
}

@Frozen
public const func func_1736262160248_115(optionalParam_1736262160248_116!: UInt8 = 243,
    namedParam_1736262160248_118!: Int64, optionalParam_1736262160248_119!: UInt16 = 16,
    optionalParam_1736262160248_121!: UInt64 = 160): String { // block id: 123
    var_1736262160248_125;
    var_1736262160248_125;
    var_1736262160248_129
}

public const func func_1736262160248_107(param_1736262160248_108: UInt16): String { // block id: 109
    if (var_1736262160248_112) {
        func_1736262160248_115(namedParam_1736262160248_118: var_1736262160248_132)
    } else {
        ###"Y(\\Iw/m(r'"###
    }
}

public const func func_1736262160248_136(param_1736262160248_137: (Int8) -> UInt16): UInt16 { // block id: 140
    const func func_1736262160248_142(param_1736262160248_143: UInt8, param_1736262160248_144: Float32,
        optionalParam_1736262160248_145!: Unit = (), optionalParam_1736262160248_147!: Float32 = 73.0): Unit { // block id: 149
        var_1736262160248_125
    };

    const func func_1736262160248_155<T0, T1>(): Float32 { // block id: 156
        var_1736262160248_158;
        ();
        const var_1736262160248_162: Float32 = -104.0;
        var_1736262160248_162
    };

    func_1736262160248_142(var_1736262160248_152, func_1736262160248_155<Float64, UInt16>(),
        optionalParam_1736262160248_145: var_1736262160248_165);
    const var_1736262160248_168: UInt16 = 4;
    var_1736262160248_168
}

@Deprecated
const func func_1736262160248_173(param_1736262160248_37: Int8): UInt16 { // block id: 38
    91
}

@Deprecated
public enum Enum_1736262160248_183 {
    defaultValue
    | enumValue_1736262160248_186(Int8, UInt16, (UInt8, Int64, UInt16, UInt64) -> String, UInt8)
    | enumValue_1736262160248_770((String) -> Bool, Option<Option<Bool>>)
}

internal func func_1736262160248_176(param_1736262160248_177: (UInt16) -> String): UInt16 { // block id: 180
    let var_1736262160248_197: Int8 = Int8(23);
    UInt16(match (Enum_1736262160248_183.enumValue_1736262160248_186(var_1736262160248_197, UInt16(85),
        func_1736262160248_115, UInt8(182))) {
        case enumValue_1736262160248_186(caseVar_1736262160248_204, caseVar_1736262160248_205: Enum_1736262160248_183, _: Bool, _: Struct_1736262160248_12) =>
            ();
            var_1736262160248_209;
            const var_1736262160248_212: UInt16 = 229;
            var_1736262160248_212

        case enumValue_1736262160248_186(_: Enum_1736262160248_183, _: Bool, _, caseVar_1736262160248_216: String) =>
            UInt16(89);
            var_1736262160248_221 += Int64(-90)
            var_1736262160248_226

        case _ =>
            ();
            UInt16(94) << ((var_1736262160248_226) & 7)
    });
    var_1736262160248_112;
    let var_1736262160248_249: ?Bool = Option<Bool>.None;
    var var_1736262160248_274: Int8 = Int8(UInt8(213));
    let var_1736262160248_294: Option<UInt16> = Option<UInt16>.None;
    let var_1736262160248_350: (Int8) -> UInt16 = {lambdaParameter_1736262160248_353: Int8 => UInt16(238)};
    let var_1736262160248_357: (UInt16) -> String = func_1736262160248_107;
    if (((Option<Option<Bool>>.None ?? var_1736262160248_249) ?? false)) { // block id: 252
        const var_1736262160248_281: UInt16 = 171;
        match (var_1736262160248_249) {
            case _ =>
                UInt32(89) ^ UInt32(196);
                var_1736262160248_226

            case caseVar_1736262160248_264: UInt32 =>
                ();
                UInt16(97)

            case _ =>
                var_1736262160248_165;
                var_1736262160248_274 %= ((Int8(-124)) | 1)
                UInt16(124) + var_1736262160248_281
        };
        var loopTimeVar_1736262160248_287: Int64 = 0;
        do {
            loopTimeVar_1736262160248_287++;
        } while ((false) && loopTimeVar_1736262160248_287 < 100);
        (var_1736262160248_294 ?? var_1736262160248_281)
    } else { // block id: 297
        var_1736262160248_300.func_1736262160248_303(var_1736262160248_350,
            namedParam_1736262160248_307: var_1736262160248_357, namedParam_1736262160248_310: var_1736262160248_221);
        var_1736262160248_226
    }
}

@Deprecated
public const func func_1736262160248_362(param_1736262160248_108: UInt16): String { // block id: 109
    if (var_1736262160248_112) {
        func_1736262160248_115(namedParam_1736262160248_118: var_1736262160248_132)
    } else {
        ###"Y(\\Iw/m(r'"###
    }
}

internal func func_1736262160248_364(param_1736262160248_365: Int8): (UInt16) -> String { // block id: 366
    var_1736262160248_370[3];
    func_1736262160248_362
}

@Frozen
const func func_1736262160248_384(param_1736262160248_37: Int8): UInt16 { // block id: 38
    91
}

public open class Class_1736262160248_555<T0> <: Class_1736262160248_84<Struct_1736262160248_12> & Interface_1736262160248_87 {
    public init() { // block id: 557

    }

    @Frozen
    prop var_1736262160248_562: Option<Option<Bool>> { // block id: 563
        get() { // block id: 565
            UInt8(UInt8(14));
            Option<Option<Bool>>.None
        }
    }
    public open override func func_1736262160248_303(param_1736262160248_304: (Int8) -> UInt16,
        namedParam_1736262160248_307!: (UInt16) -> String, namedParam_1736262160248_310!: Int64): Unit { // block id: 1138
        ()
    };

    public open override func func_1736262160248_669(): Int64 { // block id: 1260
        var_1736262160248_1131 << ((Int64(Int16(120))) & 7)
    }

    static init() {
    }
}

@Deprecated
public open class Class_1736262160248_752<T0, T1> {
    @Frozen
    public init() { // block id: 754

    }

    @Frozen
    prop var_1736262160248_759: Range<Int16> { // block id: 760
        get() { // block id: 762
            (UInt16(34), ((UInt16(36) is (UInt16) -> String) as Bool), false,
                Enum_1736262160248_183.enumValue_1736262160248_770(func_1736262160248_23, Option<Option<Bool>>.None), [UInt64(51),
                    UInt64(Int64(-39)), UInt64(UInt32(251)), UInt64(UInt32(32)), UInt64(229), UInt64(Int32(100)),
                    UInt64(134), UInt64(Int8(-26)), UInt64(190), UInt64(210)], (Float32(-63.0), Float32(-82.0), Option<Option<Bool>>
                        .None, (), UInt16(Int8(109))));
            ();
            ((Int16(Int16(-69)) & 127)..=(Int16(Int16(68)) & 127) : (Int64(108) | 1))
        }
    }
}

main(): Int64 {
    try {
        let var_1736262160248_8: String = """
idVHp
W`Gjr
""";
        var_1736262160248_8;
        var var_1736262160248_657: Enum_1736262160248_183 = Enum_1736262160248_183.enumValue_1736262160248_186(Int8(91),
            UInt16(145), func_1736262160248_115, UInt8(Int8(120)));
        var loopTimeVar_1736262160248_665: Int64 = 0;
        while ((Struct_1736262160248_12.func_1736262160248_17<Option<Bool>, Bool>(
                optionalParam_1736262160248_18: var_1736262160248_488)) && loopTimeVar_1736262160248_665 < 100) {
            loopTimeVar_1736262160248_665++;
            if (true) { // block id: 619
                UInt32(226);
                var_1736262160248_622
            } else { // block id: 631
                UInt16(13);
                ((UInt16(UInt16(27)) & 127)..=(UInt16(UInt16(178)) & 127) : (Int64(28) | 1))
            };
            try { // block id: 635
                Enum_1736262160248_183.enumValue_1736262160248_186(var_1736262160248_638, UInt16(78),
                    func_1736262160248_115, var_1736262160248_645)
            } finally { // block id: 647
                var_1736262160248_649;
                var_1736262160248_657
            }
        };
        var_1736262160248_300.func_1736262160248_669()
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1736262160248_59 * var_1736262160248_59), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_209 * var_1736262160248_209), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_221 * var_1736262160248_221), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_226 * var_1736262160248_226), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_338 * var_1736262160248_338), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_345 * var_1736262160248_345), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_645 * var_1736262160248_645), 64)
        crcCheck.updateBuffer(UInt64(var_1736262160248_1033 * var_1736262160248_1033), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
