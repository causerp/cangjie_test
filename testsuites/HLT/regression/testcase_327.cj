/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0 EXCLUDE DTS2025070902735
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

let var_1686695385209_69 : UInt8 = UInt8(227)
public var var_1686695385209_72 : Bool = true
public var var_1686695385209_77 : Rune = r'O'
let var_1686695385209_81 : UInt64 = UInt64(Int32(UInt32(UInt32(Int16(28)))))
public var var_1686695385209_137 : UInt16 = UInt16(UInt8(UInt8(165)))
public let var_1686695385209_146 : UInt32 = UInt32(Int32(-1))
public var var_1686695385209_153 : Int64 = 85
public let var_1686695385209_158 : Range<UInt32> = (((UInt32(UInt32(201))&127))..((UInt32(UInt32(12))&127)):(((-18)|1)))
public var var_1686695385209_177 : Range<Int8> = (((Int8(Int8(-2))&127))..=(Int8((Int8(-108))&127)):((92|1)))
public let var_1686695385209_203 : String = "Twz=9yC8~D"
public var var_1686695385209_215 : Unit = ()
public var var_1686695385209_249 : (Range<UInt8>, UInt16, Unit, Int32, Range<Int8>, Float64) = ((((UInt8(UInt8(139))&127))..((UInt8(UInt8(195))&127)):(((-30)|1))), UInt16(UInt8(82)), (), Int32(Int16(UInt16(UInt8(54)))), (((Int8(Int8(-19))&127))..((Int8(Int8(Int8(28)))&127)):(((-103)|1))), (-100.0))
public let var_1686695385209_273 : Class_1686695385209_102 = Class_1686695385209_102()
public var var_1686695385209_321 : Array<Array<Bool>> = [[true, false, false, true, true, false, true, true, false, false], [false, true, true, true, true, true, true, true, true, true], [false, false, true, true, false, false, false, false, true, false], [true, true, false, false, true, true, true, false, false, false], [true, true, true, false, true, true, false, true, true, true], [true, true, true, true, false, true, true, true, true, false], [false, false, true, true, true, true, true, false, true, false], [true, false, false, false, true, false, false, true, true, false], [true, false, true, true, false, false, true, true, true, true], [false, true, true, false, false, true, false, true, false, false]]
let var_1686695385209_359 : ?UInt8 = (match (###"3NxF${var_1686695385209_203}y${var_1686695385209_203}>HjPC"###) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
})
public let var_1686695385209_400 : String = "tN@8+A=E7)"
public var var_1686695385209_414 : Struct_1686695385209_410 = Struct_1686695385209_410()
public let var_1686695385209_455 : Array<Option<UInt8>> = [Option<UInt8>.None, (match ([UInt64(Int8(-46)), UInt64(2), UInt64(65), UInt64(UInt16(11)), UInt64(243), UInt64(UInt8(212)), UInt64(UInt16(60)), UInt64(38), UInt64(Int8(-101)), UInt64(145)]) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), (match (61.0) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), Option<UInt8>.None, Option<UInt8>.None, Option<UInt8>.None, (match (UInt16(Int16(1))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), Option<UInt8>.None, (match ((-25)) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), (match (Int32(UInt16(248))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
})]
public let var_1686695385209_501 : Range<Int16> = (((Int16(Int16(-86))&127))..=((Int16(Int16(-4))&127)):((14|1)))
var var_1686695385209_506 : Int8 = Int8(-97)
var var_1686695385209_516 : Bool = (match (Float64(Float32(17.0))) {
    case _: Int8 => true
    case _ => false
})
public let var_1686695385209_526 : Int64 = Int64(UInt32(UInt16(UInt8(Int8(0)))))
var var_1686695385209_561 : (Array<Int64>, Unit, Int64, Range<UInt16>, UInt8, Range<Int8>) = ([Int64(Int64(Int32(66))), Int64(UInt64(231)), Int64(Int16(Int8(-82))), 114, 56, 51, Int64(Int16(UInt8(136))), 4, (-95), (-91)], (), (-22), ((UInt16(UInt16(210))&127)..=(UInt16(UInt16(197))&127):(29|1)), UInt8(63), ((Int8(Int8(-111))&127)..=(Int8(Int8(90))&127):(49|1)))
public let var_1686695385209_588 : Range<Int64> = ((Int64(53)&127)..(Int64((-44))&127):((-3)|1))
public let var_1686695385209_634 : UInt64 = UInt64(UInt16(Int8(6)))
public let var_1686695385209_651 : Array<Bool> = [(match (Struct_1686695385209_410()) {
    case _: (UInt32) -> Option<Array<Array<Bool>>> => true
    case _ => false
}), false, false, false, false, false, false, true, true, true]
var var_1686695385209_767 : UInt16 = UInt16(Int8(121))
public let var_1686695385209_771 : UInt64 = UInt64(34)
public var var_1686695385209_876 : Unit = ()
public let var_1686695385209_904 : (UInt32, Range<Int8>, Rune) = (UInt32(UInt32(240)), ((Int8(Int8(-44))&127)..(Int8(Int8(-20))&127):(1|1)), r'l')
let var_1686695385209_925 : ?Unit = (match ([Option<UInt8>.None, (match ([99, (-30), (-40), 87, (-17), 15, (-46), (-108), (-71), (-22)]) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), (match (Int8(72)) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), Option<UInt8>.None, (match (((Int64((-10))&127)..(Int64((-61))&127):((-83)|1))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), Option<UInt8>.None, (match ((((Int8(Int8(15))&127)..(Int8(Int8(-37))&127):((19|1))), ((Int32(Int32(77))&127)..(Int32(Int32(-25))&127):((33|1))), ((UInt8(UInt8(181))&127)..=(UInt8(UInt8(128))&127):((92|1))), false, (-106))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), (match ((((Int16(Int16(-75))&127)..(Int16(Int16(-76))&127):(3|1)), r'g', UInt16(184), ((UInt32(UInt32(161))&127)..(UInt32(UInt32(5))&127):(30|1)))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
}), Option<UInt8>.None, (match (r'w') {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
})]) {
    case newVar: Unit => Option<Unit>.Some(newVar)
    case _ => Option<Unit>.None
})
public var var_1686695385209_1020 : Bool = (match (Int64(UInt64(132))) {
    case _: Range<UInt16> => true
    case _ => false
})
public var var_1686695385209_1074 : Enum_1686695385209_1071 = Enum_1686695385209_1071.defaultValue
public var var_1686695385209_1127 : Int64 = (-91)
public var var_1686695385209_1145 : Int32 = Int32(Int16(-128))
public var var_1686695385209_1176 : (Range<Int16>, Rune, UInt16, Range<UInt32>) = (((Int16(Int16(30))&127)..=(Int16(Int16(-81))&127):(72|1)), r'W', UInt16(101), ((UInt32(UInt32(157))&127)..=(UInt32(UInt32(89))&127):((Int64(UInt64(UInt8(68)))|1))))
public var var_1686695385209_1198 : String = """
prP>${var_1686695385209_400}_
^N%<p
"""
var var_1686695385209_1233 : Int16 = Int16(-82)
public let var_1686695385209_1444 : (Range<Int8>, Range<Int32>, Range<UInt8>, Bool, Int64) = (((Int8(Int8(UInt8(76)))&127)..=(Int8(Int8(UInt8(206)))&127):((23|1))), ((Int32(Int32(Int8(-35)))&127)..(Int32(Int32(Int32(109)))&127):((80|1))), ((UInt8(UInt8(73))&127)..=(UInt8(UInt8(143))&127):(79|1)), true, Int64(UInt16(Int8(Int8(-45)))))
public var var_1686695385209_1669 : Range<UInt16> = ((UInt16(UInt16(123))&127)..(UInt16(UInt16(238))&127):((-72)|1))
public var var_1686695385209_1679 : Int64 = Int64(UInt32(65))
public let var_1686695385209_1696 : Class_1686695385209_102 = Class_1686695385209_102()
public let var_1686695385209_1799 : Int8 = Int8(UInt8(Int8(73)))
public let var_1686695385209_1809 : ?String = Option<String>.None
public let var_1686695385209_1854 : Option<Array<Array<Bool>>> = Option<Array<Array<Bool>>>.None
public var var_1686695385209_1863 : Array<Int64> = [Int64(Int32(UInt16(180))), 18, 72, Int64(UInt64(UInt64(14))), (-71), (-98), Int64(Int32(6)), 80, Int64(UInt64(17)), 55]

public open class Class_1686695385209_102 {
    Class_1686695385209_102() { // block id: 104

    }
;
    public static prop var_1686695385209_107 : Range<Int16> { // block id: 108
        get() { // block id: 110
            ((Int16(Int16(UInt16(140)))&127)..=(Int16(Int16(3))&127):(((-55)|1)))
        }

    };
    public var var_1686695385209_171 : Unit = ();
    let var_1686695385209_276 : Option<Array<Array<Bool>>> = Option<Array<Array<Bool>>>.None;
    public static let var_1686695385209_314 : Option<Array<Array<Bool>>> = Option<Array<Array<Bool>>>.None;
    static prop var_1686695385209_386 : Range<Int8> { // block id: 387
        get() { // block id: 389
            ((Int8(Int8(-64))&127)..=(Int8(Int8(34))&127):(115|1))
        }

    };
    public static mut prop var_1686695385209_732 : UInt64 { // block id: 733
        get() { // block id: 735
            UInt64(UInt32(Int32(UInt32(183))))
        }

        set(Value) { // block id: 742
            ((Int8(Int8(Int8(Int8(28))))&127)..=(Int8(Int8(UInt8(Int8(71))))&127):(((-68)|1)));
            [UInt64(173), UInt64(133), UInt64(42), UInt64(154), UInt64(100), UInt64(182), UInt64(238), UInt64(29), UInt64(136), UInt64(208)];
            ()
        }

    };
    static mut prop var_1686695385209_788 : ?Array<Unit> { // block id: 789
        get() { // block id: 791
            [(-127), (-103), 56, (-30), (-20), (-8), (-81), 125, 97, 63];
            ();
            (match ([(match ([[false, false, true, true, true, true, false, true, true, true], [true, false, true, true, false, true, true, true, false, false], [false, true, true, true, false, false, true, true, true, false], [true, false, true, false, true, false, false, false, false, false], [true, false, false, true, true, false, false, false, true, false], [false, true, true, true, false, false, true, true, true, true], [false, true, false, true, false, true, false, true, false, false], [false, false, true, true, true, true, false, true, false, true], [true, false, true, false, true, false, true, false, true, false], [false, false, true, false, true, true, false, false, true, true]]) {
                case _: UInt16 => true
                case _ => false
            }), (match (UInt32(231)) {
                case _: Bool => true
                case _ => false
            }), (match ([(), (), (), (), (), (), (), (), (), ()]) {
                case _: Range<UInt32> => true
                case _ => false
            }), true, (match (Int8(-68)) {
                case _: Array<Array<Bool>> => true
                case _ => false
            }), (match (((Int16(Int16(-80))&127)..(Int16(Int16(-9))&127):((-54)|1))) {
                case _: (Range<Int64>, Array<UInt64>) -> Range<UInt32> => true
                case _ => false
            }), (match (Option<String>.None) {
                case _: (UInt64, Array<Bool>, Array<Array<Bool>>) => true
                case _ => false
            }), true, (match ([(), (), (), (), (), (), (), (), (), ()]) {
                case _: (Array<Int64>, Unit, Int64, Range<UInt16>, UInt8, Range<Int8>) => true
                case _ => false
            }), true]) {
                case newVar: Array<Unit> => Option<Array<Unit>>.Some(newVar)
                case _ => Option<Array<Unit>>.None
            })
        }

        set(Value) { // block id: 835
            "Q0Uf=;\"pKm";
            Int8(Int8(-41));
            ()
        }

    };
    static mut prop var_1686695385209_843 : Array<Unit> { // block id: 844
        get() { // block id: 846
            """
zo&La
}BCz/
""";
            Float32(Float32(Float32(-116.0)));
            [(), (), (), (), (), (), (), (), (), ()]
        }

        set(Value) { // block id: 864
            ()
        }

    };
    public static mut prop var_1686695385209_1249 : (UInt32, Range<Int8>, Rune) { // block id: 1250
        get() { // block id: 1252
            (match (((Int16(Int16(-69))&127)..=(Int16(Int16(UInt16(25)))&127):((117|1)))) {
                case newVar: UInt8 => Option<UInt8>.Some(newVar)
                case _ => Option<UInt8>.None
            });
            ();
            (UInt32(Int32(10)), ((Int8(Int8(-3))&127)..=(Int8(Int8(110))&127):(42|1)), r'9')
        }

        set(Value) { // block id: 1267
            Float32(-53.0);
            ()
        }

    };
    let var_1686695385209_1423 : (Range<Int8>, Range<Int32>, Range<UInt8>, Bool, Int64) = (((Int8(Int8(-111))&127)..(Int8(Int8(20))&127):(69|1)), ((Int32(Int32(-91))&127)..=(Int32(Int32(61))&127):((-62)|1)), ((UInt8(UInt8(210))&127)..(UInt8(UInt8(119))&127):(96|1)), true, (-121));
    public let var_1686695385209_1699 : (Float64, (Array<Int64>, Unit, Int64, Range<UInt16>, UInt8, Range<Int8>), Range<UInt16>, Unit) = (48.0, ([(-104), 98, (-90), (-85), (-125), 23, 26, 113, 125, 29], (), (-113), ((UInt16(UInt16(60))&127)..=(UInt16(UInt16(20))&127):(14|1)), UInt8(252), ((Int8(Int8(70))&127)..=(Int8(Int8(12))&127):((-118)|1))), ((UInt16(UInt16(250))&127)..(UInt16(UInt16(104))&127):((85|1))), ())
}

public func func_1686695385209_123(param_1686695385209_124 : UInt32) : Int64 { // block id: 125
    ();
    try { // block id: 130
        ((Int64((-96))&127)..(Int64(2)&127):(60|1));
        ();
        [(-44), (-77), 77, (-100), (-74), (-111), (-86), 95, (-113), (-65)]
    } finally { // block id: 134
        var_1686695385209_137 = var_1686695385209_137 - (UInt16(201));
        [(-27), (-12), (-52), 78, 66, (-36), 40, 38, 4, (-31)]
    }[0]
}


public func func_1686695385209_242(param_1686695385209_243 : UInt32) : Option<Array<Array<Bool>>> { // block id: 244
    var_1686695385209_215;
    var_1686695385209_249[2];
    try { // block id: 267
        var_1686695385209_249[2];
        var_1686695385209_273.var_1686695385209_276
    } finally { // block id: 278
        match (Option<Array<Array<Bool>>>.None) {
            case caseVar_1686695385209_283 : Bool => 
                if (true) { var_1686695385209_77 } else { r'Q' } ;
                ();
                true
            
            case caseVar_1686695385209_293 : UInt16 => 
                Int16(50);
                let var_1686695385209_298 : Int8 = Int8(UInt8(50));
                var_1686695385209_298 >= Int8(28)
            
            case _ => 
                11 >= (-89)
            
        };
        [Float32(-57.0), Float32(-55.0), Float32(12.0), Float32(-56.0), Float32(-60.0), Float32(43.0), Float32(-24.0), Float32(-69.0), Float32(-81.0), Float32(-42.0)][1];
        Class_1686695385209_102.var_1686695385209_314
    }
}

public func func_1686695385209_421(param_1686695385209_230 : Range<UInt8>, param_1686695385209_231 : Array<Int64>, param_1686695385209_232 : UInt64) : Array<Bool> { // block id: 233
    var var_1686695385209_317 : (UInt32) -> Option<Array<Array<Bool>>> = func_1686695385209_242;
    (match ((var_1686695385209_317(UInt32(146)))) {
        case Some(num) => num
        case None => var_1686695385209_321
    })[0]
}

public func func_1686695385209_211(param_1686695385209_212 : UInt16) : Bool { // block id: 213
    var_1686695385209_215;
    var var_1686695385209_329 : Array<Int64> = [112, Int64(UInt8(124)), (-2), 123, Int64(Int16(UInt16(Int8(47)))), Int64(31), 30, (-2), Int64(UInt64(80)), 121];
    try { // block id: 219
        ();
        true
    } finally { // block id: 222
        var_1686695385209_72;
        !var_1686695385209_72
    } && func_1686695385209_421(((UInt8(var_1686695385209_69)&127)..(UInt8(var_1686695385209_69)&127):((var_1686695385209_153|1))), var_1686695385209_329, var_1686695385209_81)[8]
}


public struct Struct_1686695385209_410 {
    public init() { // block id: 412

    }
;
    mut prop var_1686695385209_619 : UInt64 { // block id: 620
        get() { // block id: 622
            UInt64(86)
        }

        set(Value) { // block id: 626
            ();
            true;
            ()
        }

    };
    static var var_1686695385209_680 : Bool = true;
    public mut func func_1686695385209_417(param_1686695385209_418 : Unit) : Unit { // block id: 419
        func_1686695385209_421(var_1686695385209_588, try { // block id: 592
            [[true, true, false, true, true, true, true, true, true, true], [true, true, true, true, false, true, true, false, true, true], [true, false, false, true, true, false, false, true, true, false], [false, false, true, false, false, true, false, true, false, false], [true, true, false, false, false, false, false, false, true, true], [false, false, false, false, false, true, true, false, false, true], [true, false, false, true, true, true, true, true, false, true], [false, true, true, true, true, true, true, false, true, false], [false, true, false, false, false, true, false, false, true, true], [true, true, false, true, true, true, true, true, false, true]];
            ();
            var_1686695385209_81
        } catch (_) { // block id: 596
            [Float32(0.0), Float32(117.0), Float32(-71.0), Float32(25.0), Float32(101.0), Float32(106.0), Float32(108.0), Float32(115.0), Float32(-53.0), Float32(-73.0)];
            ((Int64((-13))&127)..(Int64((-69))&127):((-8)|1));
            UInt64(31)
        } finally { // block id: 600
            var_1686695385209_215;
            var_1686695385209_215;
            UInt64(183) - UInt64(192)
        }, [UInt64(76), UInt64(218), UInt64(28), UInt64(12), UInt64(37), UInt64(176), UInt64(123), UInt64(247), UInt64(232), UInt64(119)][5], UInt64(var_1686695385209_146), [UInt64(46), UInt64(10), UInt64(34), UInt64(4), UInt64(234), UInt64(40), UInt64(6), UInt64(77), UInt64(235), UInt64(160)][1], var_1686695385209_81, var_1686695385209_414.var_1686695385209_619, (var_1686695385209_634, [var_1686695385209_516, var_1686695385209_516, false, var_1686695385209_516, var_1686695385209_516, false, var_1686695385209_72, false, true, false], [var_1686695385209_651, [var_1686695385209_72, var_1686695385209_516, var_1686695385209_72, true, true, var_1686695385209_516, true, true, false, var_1686695385209_516], [true, false, var_1686695385209_516, var_1686695385209_680, true, true, false, true, var_1686695385209_516, false], var_1686695385209_651, [false, false, false, false, true, false, true, false, false, true], [var_1686695385209_72, var_1686695385209_72, var_1686695385209_680, var_1686695385209_72, var_1686695385209_72, var_1686695385209_680, true, true, var_1686695385209_680, var_1686695385209_516], [var_1686695385209_680, var_1686695385209_72, var_1686695385209_680, var_1686695385209_516, var_1686695385209_72, var_1686695385209_516, false, var_1686695385209_72, true, false], var_1686695385209_651, [false, true, false, false, true, true, true, true, true, true], [false, var_1686695385209_516, var_1686695385209_516, var_1686695385209_72, true, true, true, var_1686695385209_680, var_1686695385209_72, var_1686695385209_72]])[0], UInt64(249) << ((UInt64(213)) & 7), Class_1686695385209_102.var_1686695385209_732, if (var_1686695385209_72) { // block id: 755
            if (var_1686695385209_516) { var_1686695385209_359 } else { var_1686695385209_359 } ;
            UInt64(80)
        } else if (true) { // block id: 762
            ();
            var_1686695385209_137 = var_1686695385209_137 * (var_1686695385209_767);
            var_1686695385209_771
        } else { // block id: 773
            (-38);
            var_1686695385209_215;
            UInt64(73)
        });
        var_1686695385209_215;
        (match (Class_1686695385209_102.var_1686695385209_788) {
            case Some(num) => num
            case None => Class_1686695385209_102.var_1686695385209_843
        })[2]
        return
    }
;
    static let var_1686695385209_1521 : ?UInt8 = Option<UInt8>.None;
    static mut prop var_1686695385209_1545 : (UInt64, Array<Bool>, Array<Array<Bool>>) { // block id: 1546
        get() { // block id: 1548
            ();
            (UInt64(UInt16(Int16(55))), [true, (match ((((UInt8(UInt8(109))&127)..(UInt8(UInt8(210))&127):(((-105)|1))), UInt16(47), (), Int32(-44), ((Int8(Int8(26))&127)..(Int8(Int8(44))&127):((78|1))), 50.0)) {
                case _: () -> Rune => true
                case _ => false
            }), false, false, false, true, true, (match (UInt8(96)) {
                case _: Int8 => true
                case _ => false
            }), (match (Float32(-62.0)) {
                case _: Array<Bool> => true
                case _ => false
            }), (match (Enum_1686695385209_1477.defaultValue) {
                case _: () -> Rune => true
                case _ => false
            })], [[true, true, true, false, true, false, true, true, true, false], [false, false, true, true, true, false, true, false, false, false], [true, false, true, false, true, false, false, false, true, true], [false, false, true, false, true, true, true, true, true, true], [true, true, true, false, true, false, true, false, true, false], [false, false, true, false, true, true, true, true, true, false], [false, true, false, true, true, true, true, false, true, false], [false, false, false, false, true, false, false, false, false, true], [false, false, false, true, true, true, false, false, true, false], [false, false, false, false, false, true, true, false, true, true]]);
            var_1686695385209_1884
        }

        set(Value) { // block id: 1644
            ();
            var_1686695385209_1884 = Value
        }

    };
    private static let var_1686695385209_1666 : Float64 = 16.0;
    public static func func_1686695385209_1303(param_1686695385209_1304 : UInt32, optionalParam_1686695385209_1305 ! : Option<(UInt32, Range<Int8>, Rune)> = (match ((UInt64(222), [(match (((UInt32(UInt32(35))&127)..(UInt32(UInt32(57))&127):((-16)|1))) {
        case _: (UInt16) -> Bool => true
        case _ => false
    }), (match (Option<Array<Unit>>.None) {
        case _: Range<UInt8> => true
        case _ => false
    }), true, (match ([Option<UInt8>.Some(UInt8(86)), Option<UInt8>.Some(UInt8(74)), Option<UInt8>.None, Option<UInt8>.None, Option<UInt8>.None, Option<UInt8>.None, Option<UInt8>.Some(UInt8(53)), Option<UInt8>.None, Option<UInt8>.Some(UInt8(88)), Option<UInt8>.None]) {
        case _: Array<UInt64> => true
        case _ => false
    }), (match ((((UInt8(UInt8(91))&127)..=(UInt8(UInt8(33))&127):((-72)|1)), UInt16(64), (), Int32(54), ((Int8(Int8(10))&127)..(Int8(Int8(-1))&127):((-101)|1)), 4.0)) {
        case _: Range<UInt32> => true
        case _ => false
    }), (match ((-27.0)) {
        case _: (Range<UInt8>, Array<Int64>, UInt64) -> Array<Bool> => true
        case _ => false
    }), false, true, (match ((UInt64(233), [true, true, false, true, true, false, true, false, false, true], [[true, false, true, true, false, false, true, false, true, true], [false, false, false, false, false, true, false, false, true, false], [true, false, true, true, true, false, false, false, false, true], [true, true, true, false, true, false, true, false, false, true], [true, false, false, false, false, true, false, false, true, true], [false, true, true, true, false, false, false, false, false, false], [true, false, true, true, false, false, false, true, false, true], [true, true, false, false, true, false, false, true, true, false], [true, false, true, true, true, false, false, false, false, true], [false, false, true, true, false, true, true, false, true, false]])) {
        case _: Array<Array<Bool>> => true
        case _ => false
    }), (match (UInt64(48)) {
        case _: Array<UInt64> => true
        case _ => false
    })], [[true, false, false, true, true, false, false, true, false, true], [true, true, true, false, true, false, true, true, true, false], [true, true, false, false, false, true, true, false, false, true], [true, true, true, true, false, true, false, false, false, false], [false, false, false, false, true, false, true, true, true, true], [true, false, true, false, false, false, true, false, true, false], [true, true, false, false, true, true, false, false, true, false], [true, true, false, false, false, false, false, false, true, true], [true, true, false, true, false, false, false, false, false, false], [false, true, true, true, false, true, true, false, true, true]])) {
        case newVar: (UInt32, Range<Int8>, Rune) => Option<(UInt32, Range<Int8>, Rune)>.Some(newVar)
        case _ => Option<(UInt32, Range<Int8>, Rune)>.None
    })) : Float64 { // block id: 1401
        try { // block id: 1403
            [var_1686695385209_359, Option<UInt8>.Some(UInt8(98)), Option<UInt8>.None, var_1686695385209_359, var_1686695385209_359, var_1686695385209_359, Option<UInt8>.Some(UInt8(185)), Option<UInt8>.Some(UInt8(114)), Option<UInt8>.Some(var_1686695385209_69), Option<UInt8>.Some(UInt8(9))];
            var_1686695385209_273.var_1686695385209_1423
        } finally { // block id: 1430
            try { // block id: 1432
                (((Int8(Int8(-19))&127)..=(Int8(Int8(-39))&127):(0|1)), ((Int32(Int32(-36))&127)..=(Int32(Int32(-110))&127):((-122)|1)), ((UInt8(UInt8(142))&127)..=(UInt8(var_1686695385209_69)&127):(((-77)|1))), false, (-22))
            } finally { // block id: 1442
                var_1686695385209_1444
            }
        };
        var var_1686695385209_1487 : Array<UInt64> = [UInt64(150), UInt64(248), UInt64(187), UInt64(10), UInt64(46), UInt64(223), UInt64(50), UInt64(117), UInt64(145), UInt64(7)];
        try { // block id: 1465
            var loopTimeVar_1686695385209_1470 : Int64 = 0;
            while ((true) && loopTimeVar_1686695385209_1470 < 100 ) {
                loopTimeVar_1686695385209_1470++;

            };
            (match (Option<Unit>.None) {
                case Some(num) => num
                case None => var_1686695385209_215
            });
            var_1686695385209_876
        } finally { // block id: 1475
            if (let defaultValue <- Enum_1686695385209_1477.defaultValue) {
                ((Int64(56)&127)..(Int64(110)&127):((-98)|1))
            } else {
                var_1686695385209_1487;
                ((Int64(20)&127)..(Int64((-55))&127):((-118)|1))
            };
            var var_1686695385209_1495 : UInt32 = UInt32(252);
            var loopTimeVar_1686695385209_1501 : Int64 = 0;
            do {
                loopTimeVar_1686695385209_1501++;
                (var_1686695385209_1495, ((Int8(Int8(-80))&127)..=(Int8(Int8(-12))&127):((-55)|1)), var_1686695385209_77);
                ()
            } while ((true) && loopTimeVar_1686695385209_1501 < 100 ) 
        };
        var var_1686695385209_1539 : Option<Float64> = (match (((UInt32(UInt32(164))&127)..(UInt32(UInt32(97))&127):((-33)|1))) {
            case newVar: Float64 => Option<Float64>.Some(newVar)
            case _ => Option<Float64>.None
        });
        (match (if (match ([Option<UInt8>.Some(UInt8(149)), Option<UInt8>.None, Option<UInt8>.Some(var_1686695385209_69), var_1686695385209_359, var_1686695385209_359, var_1686695385209_359, Option<UInt8>.None, var_1686695385209_359, var_1686695385209_1521, Option<UInt8>.Some(UInt8(244))]) {
            case _ => 
                ();
                false
            
            case _ => 
                var_1686695385209_215;
                !var_1686695385209_680
            
        }) { if (var_1686695385209_680) { // block id: 1537
            var_1686695385209_1539
        } else if (var_1686695385209_1020) { // block id: 1543
            var_1686695385209_1545;
            if (true) { ((UInt64(UInt64(154))&127)..(UInt64(var_1686695385209_81)&127):((var_1686695385209_526|1))) } else { ((UInt64(UInt64(242))&127)..=(UInt64(UInt64(73))&127):(125|1)) } ;
            if (false) { Option<Float64>.None } else { var_1686695385209_1539 } 
        } else { // block id: 1657
            var_1686695385209_249;
            var_1686695385209_1539
        } } else { Option<Float64>.None } ) {
            case Some(num) => num
            case None => Float64((var_1686695385209_1666, var_1686695385209_1669)[0])
        })
    }
;
    static mut prop var_1686695385209_1884 : (UInt64, Array<Bool>, Array<Array<Bool>>) { // block id: 1885
        get() { // block id: 1887
            ();
            (UInt64(93), [false, true, true, false, false, true, false, false, false, false], [[false, false, false, true, false, true, true, true, false, true], [true, false, true, false, true, false, true, false, true, false], [false, false, false, false, false, true, true, false, true, false], [true, false, true, true, true, false, true, true, false, true], [true, false, true, true, true, false, true, true, true, false], [false, true, false, false, true, false, true, true, true, false], [false, true, false, false, false, false, true, false, true, false], [true, false, true, true, true, true, false, false, true, true], [false, false, false, true, false, true, true, false, true, true], [true, true, true, false, false, true, false, true, true, true]])
        }

        set(Value) { // block id: 1935
            (((Int8(Int8(47))&127)..=(Int8(Int8(38))&127):((-54)|1)), ((Int32(Int32(UInt8(204)))&127)..=(Int32(Int32(-101))&127):((Int64(Int32(-81))|1))), ((UInt8(UInt8(138))&127)..(UInt8(UInt8(5))&127):((-112)|1)), false, (-83));
            ();
            ()
        }

    }
}

public func func_1686695385209_536(param_1686695385209_537 : (UInt16) -> Bool) : UInt32 { // block id: 540
    var_1686695385209_146
}

public func func_1686695385209_543(param_1686695385209_212 : UInt16) : Bool { // block id: 213
    var_1686695385209_215;
    var var_1686695385209_329 : Array<Int64> = [112, Int64(UInt8(124)), (-2), 123, Int64(Int16(UInt16(Int8(47)))), Int64(31), 30, (-2), Int64(UInt64(80)), 121];
    try { // block id: 219
        ();
        true
    } finally { // block id: 222
        var_1686695385209_72;
        !var_1686695385209_72
    } && func_1686695385209_421(((UInt8(var_1686695385209_69)&127)..(UInt8(var_1686695385209_69)&127):((var_1686695385209_153|1))), var_1686695385209_329, var_1686695385209_81)[8]
}

public func func_1686695385209_421(param_1686695385209_422 : Range<Int64>, param_1686695385209_423 : Array<UInt64>) : Range<UInt32> { // block id: 424
    try { // block id: 426
        let var_1686695385209_437 : Int16 = Int16(Int16(77));
        if (true) { // block id: 429
            if (true) { var_1686695385209_203 } else { "=^IDOJ>oT?" } 
        } else { // block id: 434
            ((Int16(var_1686695385209_437)&127)..=(Int16(Int16(24))&127):((96|1)));
            if (true) { var_1686695385209_400 } else { """
]BG^g
p$3%+
""" } 
        };
        var loopTimeVar_1686695385209_450 : Int64 = 0;
        do {
            loopTimeVar_1686695385209_450++;

        } while ((true) && loopTimeVar_1686695385209_450 < 100 ) 
    } finally { // block id: 451
        var_1686695385209_455[3];
        var loopTimeVar_1686695385209_495 : Int64 = 0;
        do {
            loopTimeVar_1686695385209_495++;
            ()
        } while ((true) && loopTimeVar_1686695385209_495 < 100 ) ;
        var_1686695385209_215
    };
    var var_1686695385209_546 : (UInt16) -> Bool = { lambdaParameter_1686695385209_549 : UInt16 => false };
    ((UInt32(try { // block id: 499
        var_1686695385209_501;
        (((Int8(var_1686695385209_506)&127)..(Int8(var_1686695385209_506)&127):((var_1686695385209_153|1))), ((Int32(Int32(73))&127)..=(Int32(Int32(-46))&127):((-44)|1)), ((UInt8(var_1686695385209_69)&127)..(UInt8(UInt8(184))&127):(((-119)|1))), var_1686695385209_516, var_1686695385209_153);
        var_1686695385209_146
    } catch (_) { // block id: 522
        var_1686695385209_153 = var_1686695385209_153 | (var_1686695385209_526);
        var_1686695385209_215;
        UInt32(83)
    })&127)..=(UInt32((func_1686695385209_536(var_1686695385209_546)) + match (Option<UInt8>.None) {
        case _ => 
            var_1686695385209_215;
            var_1686695385209_146
        
    })&127):(var_1686695385209_561[2]|1))
}



public func func_1686695385209_406(param_1686695385209_407 : Array<UInt64>) : Unit { // block id: 408
    var var_1686695385209_879 : Unit = ();
    var loopTimeVar_1686695385209_887 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    var_1686695385209_414.func_1686695385209_417(for (i in loopTimeVar_1686695385209_887 where true) {
        Option<Array<Unit>>.Some([var_1686695385209_215, (), (), var_1686695385209_876, var_1686695385209_879, (), (), var_1686695385209_215, var_1686695385209_879, var_1686695385209_215]);
        var_1686695385209_273
    });
    (var_1686695385209_904[0], var_1686695385209_177, if (var_1686695385209_72) { // block id: 914
        var_1686695385209_77
    } else { // block id: 916
        var_1686695385209_77
    })[1];
    (match (var_1686695385209_925) {
        case Some(num) => num
        case None => (match (var_1686695385209_925) {
        case Some(num) => num
        case None => var_1686695385209_215
    })
    })
    return
}

public func func_1686695385209_403() : Rune { // block id: 404
    let var_1686695385209_966 : (Array<UInt64>) -> Unit = func_1686695385209_406;
    var_1686695385209_966([UInt64(218), UInt64(254), UInt64(34), UInt64(136), UInt64(52), UInt64(216), UInt64(245), UInt64(176), UInt64(136), UInt64(53)]);
    var_1686695385209_876;
    match (((Int16(Int16(43))&127)..=(Int16(Int16(110))&127):((-56)|1))) {
        case caseVar_1686695385209_974 => 
            var_1686695385209_273;
            if (var_1686695385209_72) { var_1686695385209_77 } else { var_1686695385209_77 } 
        
        case _ => 
            let var_1686695385209_989 : Float32 = Float32(Float32(Float32(Float32(Float32(-29.0)))));
            [Float32(50.0), Float32(-118.0), Float32(-90.0), var_1686695385209_989, var_1686695385209_989, Float32(18.0), var_1686695385209_989, Float32(-7.0), var_1686695385209_989, Float32(-105.0)];
            var_1686695385209_249;
            var_1686695385209_77
        
        case _ => 
            if (var_1686695385209_72) { r'q' } else { r'n' } 
        
    }
}

func func_1686695385209_117(param_1686695385209_118 : Float64) : Rune { // block id: 119
    var var_1686695385209_187 : Range<UInt8> = ((UInt8(UInt8(232))&127)..=(UInt8(UInt8(143))&127):(71|1));
    if ((func_1686695385209_123(var_1686695385209_146)) <= if (true) { // block id: 151
        var_1686695385209_153
    } else if (false) { // block id: 156
        var_1686695385209_158;
        (-121) ** var_1686695385209_81
    } else { // block id: 163
        var_1686695385209_153
    }) { // block id: 165
        let var_1686695385209_168 : Class_1686695385209_102 = Class_1686695385209_102();
        var_1686695385209_168.var_1686695385209_171;
        let var_1686695385209_181 : Int32 = Int32(Int32(59));
        (var_1686695385209_177, ((Int32(var_1686695385209_181)&127)..(Int32(var_1686695385209_181)&127):((var_1686695385209_153|1))), var_1686695385209_187, var_1686695385209_72, var_1686695385209_153)[2];
        if (true) { // block id: 194
            let var_1686695385209_196 : Int16 = Int16(Int8(Int8(-118)));
            var_1686695385209_196;
            if (false) { var_1686695385209_203 } else { var_1686695385209_203 } 
        } else { // block id: 206
            ();
            ();
            "%#BoDVN&>N"
        }
    } else if (({ lambdaParameter_1686695385209_351 : UInt16 => var_1686695385209_72 }(try { // block id: 355
        if (false) { var_1686695385209_359 } else { var_1686695385209_359 } ;
        UInt16(3)
    } catch (_) { // block id: 364
        ((UInt32(UInt32(45))&127)..(UInt32(UInt32(206))&127):(6|1));
        -UInt16(248)
    } finally { // block id: 368
        ((Int8(Int8(-10))&127)..=(Int8(Int8(30))&127):((-18)|1));
        [Float32(-52.0), Float32(-89.0), Float32(6.0), Float32(-89.0), Float32(89.0), Float32(-73.0), Float32(-18.0), Float32(-5.0), Float32(102.0), Float32(46.0)];
        var_1686695385209_137
    }))) { // block id: 372
        (((UInt8(UInt8(67))&127)..=(UInt8(UInt8(99))&127):(((-12)|1))), UInt16(173), var_1686695385209_215, Int32(-57), var_1686695385209_177, (-22.0));
        Class_1686695385209_102.var_1686695385209_386;
        var_1686695385209_203
    } else { // block id: 392
        (match (Option<String>.None) {
            case Some(num) => num
            case None => var_1686695385209_400
        })
    };
    func_1686695385209_403()
}

public enum Enum_1686695385209_1071 {
    defaultValue
}

public enum Enum_1686695385209_1477 {
    defaultValue
}

func func_1686695385209_90(namedParam_1686695385209_91 ! : Range<UInt16>) : Float64 { // block id: 92
    let var_1686695385209_1010 : (Float64) -> Rune = func_1686695385209_117;
    let var_1686695385209_1038 : Int64 = 46;
    let var_1686695385209_1142 : Int32 = Int32(-12);
    func func_1686695385209_95(namedParam_1686695385209_96 ! : Unit) : Bool { // block id: 97
        (Class_1686695385209_102.var_1686695385209_107, (var_1686695385209_1010((-66.0))), UInt16(81) / ((UInt16(119)) | 1), ((UInt32(UInt32(199))&127)..(UInt32(UInt32(248))&127):((-83)|1)))[1];
        var var_1686695385209_1044 : Int16 = Int16(UInt8(UInt8(61)));
        let var_1686695385209_1049 : Array<Int64> = [Int64(UInt8(Int8(UInt8(135)))), (-99), (-94), 122, (-69), 75, Int64(87), Int64(UInt16(180)), Int64(UInt8(177)), Int64(UInt8(UInt8(225)))];
        if (var_1686695385209_1020) { // block id: 1024

        } else if (match (Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()])) {
            case caseVar_1686695385209_1031 : UInt32 => 
                70 + var_1686695385209_526;
                var_1686695385209_1038 >> (((-50)) & 7)
            
            case _ => 
                var_1686695385209_1044;
                var_1686695385209_1049;
                (-24)
            
        } > match (var_1686695385209_1074) {
            case _ : (Range<UInt8>, UInt16, Unit, Int32, Range<Int8>, Float64) => 
                var_1686695385209_876;
                (UInt32(95), ((Int8(Int8(33))&127)..(Int8(Int8(122))&127):(83|1)), var_1686695385209_77);
                106 | var_1686695385209_1038
            
            case defaultValue => 
                var_1686695385209_72 = var_1686695385209_72 && (var_1686695385209_516);
                [[true, false, false, true, true, false, false, false, true, false], [false, true, true, true, true, false, false, false, true, false], [true, false, false, true, true, true, false, true, false, true], [false, true, false, false, true, true, false, false, false, false], [false, true, false, false, false, false, true, false, true, true], [false, true, true, false, true, false, true, true, false, false], [true, false, true, true, true, false, false, true, false, false], [false, false, false, true, true, true, true, false, true, true], [false, true, false, true, false, false, true, true, false, true], [true, true, false, false, true, true, false, false, true, true]];
                50
            
            case _ => 
                var_1686695385209_215;
                ();
                var_1686695385209_1038 << ((var_1686695385209_153) & 7)
            
        }) { // block id: 1102
            var loopTimeVar_1686695385209_1107 : Int64 = 0;
            do {
                loopTimeVar_1686695385209_1107++;

            } while ((false) && loopTimeVar_1686695385209_1107 < 100 ) ;
            ([(-44), var_1686695385209_1038, 25, var_1686695385209_526, var_1686695385209_1038, (-106), 27, var_1686695385209_1038, 4, 103], var_1686695385209_876, (-36), ((UInt16(var_1686695385209_767)&127)..=(UInt16(var_1686695385209_137)&127):((var_1686695385209_1127|1))), var_1686695385209_69, ((Int8(Int8(77))&127)..(Int8(Int8(111))&127):((var_1686695385209_153|1))))[1]
        };
        var var_1686695385209_1193 : UInt64 = UInt64(118);
        try { // block id: 1136
            let var_1686695385209_1150 : Range<UInt8> = ((UInt8(UInt8(12))&127)..=(UInt8(UInt8(Int8(Int8(UInt8(205)))))&127):((Int64(UInt16(UInt16(UInt8(30))))|1)));
            (((Int8(Int8(-44))&127)..=(Int8(Int8(106))&127):(110|1)), ((Int32(var_1686695385209_1142)&127)..=(Int32(var_1686695385209_1145)&127):(((-63)|1))), var_1686695385209_1150, true, var_1686695385209_1127)[3]
        } finally { // block id: 1164
            (match (Option<(UInt32, Range<Int8>, Rune)>.None) {
                case Some(num) => num
                case None => var_1686695385209_904
            });
            var loopTimeVar_1686695385209_1188 : Int64 = 0;
            while ((true) && loopTimeVar_1686695385209_1188 < 100 ) {
                loopTimeVar_1686695385209_1188++;
                var_1686695385209_1176
            };
            try { // block id: 1190
                var_1686695385209_1193 = var_1686695385209_1193;
                var_1686695385209_1198 = "}abM\"LR\\oG";
                var_1686695385209_516
            } finally { // block id: 1202
                (UInt32(253), ((Int8(var_1686695385209_506)&127)..=(Int8(Int8(-41))&127):((8|1))), var_1686695385209_77);
                ();
                false
            }
        }
    }
;
    var loopTimeVar_1686695385209_1271 : Int64 = 0;
    while ((func_1686695385209_95(namedParam_1686695385209_96 : ())) && loopTimeVar_1686695385209_1271 < 100 ) {
        loopTimeVar_1686695385209_1271++;
        var var_1686695385209_1216 : ?String = Option<String>.Some(###"p`M|%oEJRW"###);
        match (var_1686695385209_1216) {
            case caseVar_1686695385209_1221 : Array<UInt64> => 
                var_1686695385209_876;
                var_1686695385209_1020 = var_1686695385209_1020 && (var_1686695385209_72)
            
            case _ => 
                Option<Array<Unit>>.None;
                var_1686695385209_1233 = var_1686695385209_1233 + 1
            
            case _ => 
                if (false) { ((UInt32(var_1686695385209_146)&127)..=(UInt32(UInt32(45))&127):((var_1686695385209_153|1))) } else { var_1686695385209_158 } ;
                ();
                ()
            
        };
        Class_1686695385209_102.var_1686695385209_1249
    };
    try { // block id: 1274
        var_1686695385209_249
    } finally { // block id: 1276
        let var_1686695385209_1279 : Range<UInt8> = ((UInt8(UInt8(Int8(Int8(Int8(-47)))))&127)..(UInt8(UInt8(235))&127):((Int64(UInt8(UInt8(150)))|1)));
        var var_1686695385209_1295 : Int8 = Int8(95);
        (var_1686695385209_1279, var_1686695385209_767, (), Int32(106), ((Int8(Int8(18))&127)..(Int8(var_1686695385209_1295)&127):((var_1686695385209_153|1))), 116.0)
    }[2];
    let var_1686695385209_1687 : Option<(UInt32, Range<Int8>, Rune)> = (match ((match (Float32(-66.0)) {
        case newVar: Array<Array<Bool>> => Option<Array<Array<Bool>>>.Some(newVar)
        case _ => Option<Array<Array<Bool>>>.None
    })) {
        case newVar: (UInt32, Range<Int8>, Rune) => Option<(UInt32, Range<Int8>, Rune)>.Some(newVar)
        case _ => Option<(UInt32, Range<Int8>, Rune)>.None
    });
    Struct_1686695385209_410.func_1686695385209_1303((UInt32(12), ((Int8(Int8(-32))&127)..=(Int8(Int8(-49))&127):((var_1686695385209_1679|1))), var_1686695385209_77)[0], optionalParam_1686695385209_1305 : if (false) { var_1686695385209_1687 } else { var_1686695385209_1687 } )
}


public func func_1686695385209_7(namedParam_1686695385209_8 ! : Rune, namedParam_1686695385209_9 ! : String, namedParam_1686695385209_10 ! : Rune) : Int8 { // block id: 11
    let var_1686695385209_20 : ?UInt8 = Option<UInt8>.Some(UInt8(UInt8(UInt8(148))));
    var var_1686695385209_35 : Unit = ();
    if ((match ((match (var_1686695385209_20) {
        case Some(num) => num
        case None => UInt8(168)
    })) {
        case _: Int64 => true
        case _ => false
    })) { // block id: 26
        var loopTimeVar_1686695385209_37 : Array<UInt64> = [UInt64(10), UInt64(Int16(24)), UInt64(9), UInt64(254), UInt64(Int8(4)), UInt64(30), UInt64(UInt8(64)), UInt64(Int64(UInt32(225))), UInt64(55), UInt64(UInt64(Int8(Int8(-89))))];
        let iter27 = loopTimeVar_1686695385209_37.iterator()
        while (true) {
            match (iter27.next()) {
                case None => break
                case Some(v) => match (v) {
                    case i where (true) => if (false) { r'D' } else { r'l' } ;var_1686695385209_35
                    case _ => continue
                }
            }
        }

    } else if (try { // block id: 67
        var_1686695385209_69;
        var_1686695385209_72
    } finally { // block id: 74
        var_1686695385209_77 = var_1686695385209_77;
        var_1686695385209_81;
        var_1686695385209_72
    }) { // block id: 88

    };
    func_1686695385209_90(namedParam_1686695385209_91 : var_1686695385209_1696.var_1686695385209_1699[2]);
    let var_1686695385209_1733 : Option<Float64> = (match ((UInt32(17), ((Int8(Int8(-50))&127)..=(Int8(Int8(-126))&127):(62|1)), r'7')) {
        case newVar: Float64 => Option<Float64>.Some(newVar)
        case _ => Option<Float64>.None
    });
    let var_1686695385209_1761 : Option<Int8> = (match (([(-103), 113, 18, 95, (-37), 88, 34, (-27), 37, 47], (), Int64(UInt32(UInt32(198))), ((UInt16(UInt16(51))&127)..=(UInt16(UInt16(Int16(7)))&127):((3|1))), UInt8(176), ((Int8(Int8(Int8(23)))&127)..(Int8(Int8(UInt8(82)))&127):((Int64(UInt8(85))|1))))) {
        case newVar: Int8 => Option<Int8>.Some(newVar)
        case _ => Option<Int8>.None
    });
    (match (if (match (var_1686695385209_1733) {
        case _ => 
            [var_1686695385209_359, Option<UInt8>.None, var_1686695385209_20, Option<UInt8>.Some(UInt8(32)), var_1686695385209_359, var_1686695385209_20, var_1686695385209_20, Option<UInt8>.Some(UInt8(165)), Option<UInt8>.Some(var_1686695385209_69), var_1686695385209_359];
            var_1686695385209_215;
            true
        
    }) { // block id: 1757
        if (true) { var_1686695385209_1761 } else { var_1686695385209_1761 } 
    } else { // block id: 1783
        ((Int16(Int16(121))&127)..=(Int16(Int16(-22))&127):(119|1));
        var_1686695385209_1761
    }) {
        case Some(num) => num
        case None => if (true) { // block id: 1788
        var_1686695385209_72 = var_1686695385209_72 && (false);
        var_1686695385209_506 + var_1686695385209_506
    } else { // block id: 1795
        Int8(91) | var_1686695385209_1799
    }
    })
}

main(): Int64 {
    try {
        var var_1686695385209_1824 : Bool = (match (((Int32(Int32(7))&127)..=(Int32(Int32(-109))&127):((Int64(UInt8(UInt8(174)))|1)))) {
            case _: (UInt32, Range<Int8>, Rune) => true
            case _ => false
        });
        func_1686695385209_7(namedParam_1686695385209_8 : if (var_1686695385209_1020) { var_1686695385209_77 } else { r'7' } , namedParam_1686695385209_9 : match (var_1686695385209_1809) {
            case caseVar_1686695385209_1813 : Array<UInt64> => 
                var_1686695385209_400
            
            case _ => 
                if (var_1686695385209_1020) { var_1686695385209_203 } else { """
prlmU
sAF|g
""" } 
            
        }, namedParam_1686695385209_10 : if (var_1686695385209_1824) { // block id: 1832
            var_1686695385209_1824 = var_1686695385209_1824 || (true);
            """
 p\\gQ
a{JGe,
""";
            if (var_1686695385209_1824) { var_1686695385209_77 } else { r'8' } 
        } else if (var_1686695385209_72) { // block id: 1842
            var_1686695385209_77
        } else { // block id: 1844
            var_1686695385209_876;
            var_1686695385209_215;
            if (var_1686695385209_1020) { r'B' } else { r'I' } 
        });
        try { // block id: 1852
            var_1686695385209_1854;
            var_1686695385209_1679
        } catch (e: Exception) { // block id: 1857
            103
        } finally { // block id: 1859
            if (false) { var_1686695385209_1863 } else { [(-75), (-110), 57, 43, (-106), 32, 86, 17, (-112), (-100)] } ;
            var_1686695385209_526
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1686695385209_153*var_1686695385209_153), 64)
        crccheck.updateBuffer(UInt64(var_1686695385209_634*var_1686695385209_634), 64)
        crccheck.updateBuffer(UInt64(var_1686695385209_771*var_1686695385209_771), 64)
        crccheck.updateBuffer(UInt64(var_1686695385209_1145*var_1686695385209_1145), 64)
        crccheck.updateBuffer(UInt64(var_1686695385209_1679*var_1686695385209_1679), 64)
        crccheck.updateBuffer(UInt64(var_1686695385209_1799*var_1686695385209_1799), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1686695385209_102 {

}

