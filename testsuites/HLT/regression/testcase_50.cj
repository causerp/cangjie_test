/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output

var var29 : Unit = ()
public var var159 : UInt16 = UInt16(Int16(-51))
public var var181 : Bool = (Float32(-109.0) is Range<Int8>)
var var196 : UInt32 = UInt32(149)
public let var219 : Option<Int64> = (((Int32(-55)&127)..(Int32(66)&127):((-70)|1)) as Int64)
var var239 : Int64 = (-88)
public var var308 : Enum281 = Enum281.defaultValue
var var354 : Array<UInt8> = [UInt8(Int8(Int8(-72))), UInt8(Int8(UInt8(UInt8(152)))), UInt8(172), UInt8(UInt8(UInt8(Int8(89)))), UInt8(236), UInt8(126), UInt8(Int8(109)), UInt8(24), UInt8(UInt8(Int8(-54))), UInt8(UInt8(Int8(Int8(124))))]
public var var396 : (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>) = (Int32(62), ((UInt64(UInt8(Int8(-31)))&127)..(UInt64(UInt32(Int16(43)))&127):((Int64(Int32(98))|1))), ([UInt8(Int8(-9)), UInt8(Int8(44)), UInt8(UInt8(29)), UInt8(182), UInt8(126), UInt8(1), UInt8(UInt8(138)), UInt8(103), UInt8(238), UInt8(UInt8(140))], (-122.0), ((UInt64(152)&127)..=(UInt64(132)&127):((Int64(Int32(23))|1)))), ((UInt16(UInt8(UInt8(126)))&127)..=(UInt16(UInt16(233))&127):((Int64(UInt64(UInt8(83)))|1))))
let var460 : Range<UInt8> = ((UInt8(13)&127)..(UInt8(198)&127):((-112)|1))
let var514 : Range<Int8> = ((Int8(-69)&127)..=(Int8(-118)&127):((-7)|1))
public var var578 : Range<UInt64> = ((UInt64(Int64((-50)))&127)..=(UInt64(Int32(Int8(38)))&127):((109|1)))
let var655 : ?Enum281 = (Enum281.defaultValue as Enum281)
var var674 : Enum281 = Enum281.defaultValue
let var827 : (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)) = (((Int16(-121)&127)..(Int16(12)&127):(13|1)), (Int32(-68), ((UInt64(232)&127)..(UInt64(1)&127):(57|1)), ([UInt8(112), UInt8(22), UInt8(58), UInt8(85), UInt8(73), UInt8(155), UInt8(153), UInt8(231), UInt8(96), UInt8(82)], (-51.0), ((UInt64(81)&127)..=(UInt64(2)&127):(109|1))), ((UInt16(221)&127)..(UInt16(202)&127):(72|1))))
public let var845 : Aggregate841 = Aggregate841()
let var910 : (Unit, Range<UInt32>, UInt16) = ((), ((UInt32(Int8(Int8(26)))&127)..=(UInt32(205)&127):((Int64(Int16(UInt16(222)))|1))), UInt16(Int8(Int8(57))))
public let var970 : Array<Range<UInt8>> = [((UInt8(164)&127)..=(UInt8(120)&127):((-77)|1)), ((UInt8(169)&127)..=(UInt8(232)&127):(15|1)), ((UInt8(167)&127)..=(UInt8(247)&127):(44|1)), ((UInt8(151)&127)..(UInt8(211)&127):(117|1)), ((UInt8(187)&127)..(UInt8(91)&127):((-74)|1)), ((UInt8(11)&127)..(UInt8(1)&127):(114|1)), ((UInt8(113)&127)..(UInt8(50)&127):((-122)|1)), ((UInt8(128)&127)..=(UInt8(80)&127):(8|1)), ((UInt8(191)&127)..=(UInt8(77)&127):((-81)|1)), ((UInt8(126)&127)..=(UInt8(211)&127):((-61)|1))]
var var1050 : Range<UInt64> = ((UInt64(125)&127)..(UInt64(103)&127):((-72)|1))
let var1068 : Float64 = Float64(Float32(Float32(Float32(Float32(96.0)))))
let var1123 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(46), UInt8(UInt8(130)), UInt8(UInt8(25)), UInt8(Int8(-44)), UInt8(UInt8(136)), UInt8(Int8(UInt8(16))), UInt8(UInt8(115)), UInt8(Int8(Int8(-60))), UInt8(Int8(Int8(-122))), UInt8(Int8(UInt8(96)))], Float64(Float32(-98.0)), ((UInt64(24)&127)..(UInt64(UInt32(173))&127):((Int64(Int8(Int8(9)))|1))))
let var1192 : Int16 = Int16(3)
public let var1378 : Int8 = Int8(UInt8(78))
let var1658 : Range<UInt32> = ((UInt32(228)&127)..(UInt32(83)&127):((Int64(UInt8(99))|1)))
var var1713 : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) = ([((Int8(-55)&127)..=(Int8(-77)&127):(85|1)), ((Int8(90)&127)..=(Int8(-99)&127):(112|1)), ((Int8(-101)&127)..(Int8(120)&127):(120|1)), ((Int8(14)&127)..(Int8(87)&127):(71|1)), ((Int8(73)&127)..=(Int8(109)&127):((-100)|1)), ((Int8(19)&127)..(Int8(-122)&127):((-104)|1)), ((Int8(-16)&127)..(Int8(-85)&127):(25|1)), ((Int8(34)&127)..(Int8(37)&127):((-27)|1)), ((Int8(50)&127)..(Int8(86)&127):(126|1)), ((Int8(-111)&127)..(Int8(-35)&127):(56|1))], ((Int32(94)&127)..=(Int32(79)&127):(103|1)), (((Int16(UInt16(206))&127)..=(Int16(-86)&127):(((-31)|1))), (Int32(2), ((UInt64(23)&127)..=(UInt64(51)&127):((-76)|1)), ([UInt8(125), UInt8(219), UInt8(113), UInt8(193), UInt8(163), UInt8(130), UInt8(213), UInt8(114), UInt8(118), UInt8(84)], 92.0, ((UInt64(120)&127)..=(UInt64(62)&127):((93|1)))), ((UInt16(24)&127)..(UInt16(80)&127):(((-47)|1))))), Option<Enum281>.None, UInt16(5), UInt32(UInt32(30)))
public var var1834 : UInt16 = UInt16(50)
public let var1921 : (Float32, UInt32, Unit, UInt64) = (Float32(-51.0), UInt32(151), (), UInt64(185))
public var var1936 : Float64 = Float64(68.0)
let var1942 : ?Bool = Option<Bool>.None
var var2082 : Range<UInt64> = ((UInt64(146)&127)..(UInt64(50)&127):(73|1))
public let var2136 : Int64 = Int64(UInt32(Int32(Int16(-65))))
public var var2147 : UInt8 = UInt8(Int8(-105))
public let var2160 : ?((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = (Class1203() as ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>))
public var var2165 : Int8 = Int8(37)
public var var2188 : Enum74 = Enum74.defaultValue
let var2207 : Unit = ()
let var2430 : Enum43<UInt64, Aggregate841, Bool> = Enum43<UInt64, Aggregate841, Bool>.defaultValue
let var2459 : Array<UInt8> = [UInt8(Int8(32)), UInt8(4), UInt8(Int8(Int8(UInt8(162)))), UInt8(UInt8(59)), UInt8(170), UInt8(UInt8(108)), UInt8(Int8(UInt8(117))), UInt8(38), UInt8(Int8(69)), UInt8(32)]
var var2522 : Enum74 = Enum74.enumValue2286
let var2526 : Int64 = Int64(UInt32(39))
var var2537 : Array<Enum74> = Array<Enum74>(10){ i => Enum74.enumValue2286 }
var var2573 : UInt8 = UInt8(UInt8(Int8(16)))
var var2681 : (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = (((UInt64(UInt16(Int8(63)))&127)..=(UInt64(121)&127):(((-2)|1))), (((Int16(33)&127)..(Int16(80)&127):(20|1)), (Int32(-71), ((UInt64(19)&127)..(UInt64(83)&127):((124|1))), ([UInt8(243), UInt8(80), UInt8(30), UInt8(11), UInt8(233), UInt8(84), UInt8(41), UInt8(35), UInt8(67), UInt8(116)], 78.0, ((UInt64(133)&127)..(UInt64(99)&127):((-9)|1))), ((UInt16(247)&127)..=(UInt16(145)&127):((34|1))))), ([UInt8(UInt8(194)), UInt8(23), UInt8(UInt8(0)), UInt8(UInt8(190)), UInt8(Int8(-76)), UInt8(149), UInt8(Int8(5)), UInt8(243), UInt8(Int8(113)), UInt8(Int8(-122))], Float64(Float32(-56.0)), ((UInt64(UInt32(72))&127)..=(UInt64(61)&127):((Int64(Int16(113))|1)))), ((Int8(UInt8(Int8(-9)))&127)..(Int8(47)&127):((Int64(Int64(Int8(30)))|1))))
public let var2783 : Range<Int32> = ((Int32(-117)&127)..(Int32(-107)&127):((-17)|1))
public var var2827 : Int32 = Int32(88)
var var2855 : String = "Nle\"w.>v(F"
var var3141 : Unit = ()
var var3272 : (Unit, Int8, Array<Unit>, Unit, Int32, Range<Int8>, String, Float64) = ((), Int8(-117), [(), (), (), (), (), (), (), (), (), ()], (), Int32(Int16(UInt16(Int16(63)))), ((Int8(-57)&127)..(Int8(104)&127):((102|1))), "O.dMq${var2855}b-*B;", (-45.0))
public let var3302 : Class1203 = Class1203()
public let var3385 : Bool = ([UInt8(UInt8(92)), UInt8(220), UInt8(UInt8(120)), UInt8(Int8(Int8(5))), UInt8(138), UInt8(Int8(19)), UInt8(200), UInt8(Int8(108)), UInt8(92), UInt8(Int8(-127))] is Option<Int64>)
public let var3424 : Float32 = Float32(Float32(Float32(Float32(Float32(-38.0)))))
var var4267 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)) = (Int16(UInt8(32)), ([UInt8(141), UInt8(161), UInt8(6), UInt8(240), UInt8(0), UInt8(151), UInt8(122), UInt8(51), UInt8(208), UInt8(157)], (-72.0), ((UInt64(161)&127)..=(UInt64(219)&127):((-101)|1))))
var var4317 : ?Unit = ((((), ((UInt32(208)&127)..=(UInt32(244)&127):(70|1)), UInt16(58)) as (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)) as Unit)
let var4442 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))> = Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))>(10){ i => (Int16(103), ([UInt8(159), UInt8(81), UInt8(111), UInt8(45), UInt8(70), UInt8(94), UInt8(193), UInt8(120), UInt8(9), UInt8(122)], Float64(Float32(-112.0)), ((UInt64(35)&127)..(UInt64(112)&127):(((-44)|1))))) }
public let var4680 : Option<Range<Int64>> = (Float64(Float32(-71.0)) as Range<Int64>)
public var var4698 : Int16 = Int16(116)
let var4739 : ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = (([UInt8(71), UInt8(138), UInt8(237), UInt8(157), UInt8(107), UInt8(34), UInt8(135), UInt8(32), UInt8(211), UInt8(165)], 91.0, ((UInt64(5)&127)..=(UInt64(121)&127):(7|1))), (Float32(Float32(Float32(-31.0))), UInt32(Int16(UInt8(33))), (), UInt64(UInt64(UInt8(2)))), Int8(UInt8(Int8(UInt8(132)))), ((Int32(61)&127)..(Int32(52)&127):((-56)|1)))
public var var4768 : UInt64 = UInt64(210)
public enum Enum43<T0, T1, T2> {
    defaultValue |
    enumValue2296(Enum225<UInt64, UInt8>, Int16)
}
public enum Enum74 {
    defaultValue |
    enumValue131(Int64) |
    enumValue568(Range<Int16>, (Array<UInt8>, Float64, Range<UInt64>), Int16, UInt32) |
    enumValue1464(String, Range<Int16>) |
    enumValue1476(Range<UInt32>, (Array<UInt8>, Float64, Range<UInt64>), (Unit, Int8, Array<Unit>, Unit, Int32, Range<Int8>, String, Float64)) |
    enumValue2232(Option<Unit>, ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>), ((Float32, UInt32, Unit, UInt64)) -> (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32)) |
    enumValue2286 |
    enumValue2447(Option<Bool>, Array<UInt8>, (UInt64) -> Range<UInt64>, ((Float32, UInt32, Unit, UInt64)) -> (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32)) |
    enumValue2483(UInt16, Range<UInt16>, (Int32, Range<Int16>, UInt16, (Unit, Range<UInt32>, UInt16))) |
    enumValue2508((Int32, Range<Int16>, UInt16, (Unit, Range<UInt32>, UInt16)))
}

public enum Enum225<T0, T1> {
    defaultValue |
    enumValue1823(Enum43<UInt64, Aggregate841, Bool>, (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32), Float32) |
    enumValue2300(Enum281, Int16, Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))>) |
    enumValue3771((Int32, Range<Int16>, UInt16, (Unit, Range<UInt32>, UInt16)), Array<Enum74>, Enum281, Option<Unit>) |
    enumValue4677(Option<Range<Int64>>)
}
public enum Enum281 {
    defaultValue |
    enumValue4611
}
func func270(param271 : UInt64) : Range<UInt64> { // block id: 272
    let var332 : Int8 = Int8(UInt8(Int8(Int8(Int8(84)))));
    try { // block id: 274
        var29;
        [((Int8(-54)&127)..(Int8(-96)&127):((-121)|1)), ((Int8(10)&127)..(Int8(44)&127):((-115)|1)), ((Int8(74)&127)..(Int8(-101)&127):((-42)|1)), ((Int8(-37)&127)..=(Int8(-107)&127):((-105)|1)), ((Int8(-4)&127)..(Int8(57)&127):(52|1)), ((Int8(15)&127)..=(Int8(-112)&127):((-63)|1)), ((Int8(-110)&127)..(Int8(-22)&127):(26|1)), ((Int8(90)&127)..(Int8(-12)&127):((-25)|1)), ((Int8(9)&127)..=(Int8(21)&127):(99|1)), ((Int8(66)&127)..(Int8(-3)&127):(85|1))][2];
        match (Enum281.defaultValue) {
            case defaultValue =>
                var var288 : UInt8 = UInt8(UInt8(UInt8(UInt8(UInt8(108)))));
                var288

            case defaultValue =>
                UInt8(138)

            case _ =>
                var var303 : UInt8 = UInt8(216);
                UInt8(142) + var303

        }
    } catch (e: Exception) { // block id: 305
        match (var308) {
            case caseVar312 : UInt32 =>
                ((UInt16(189)&127)..(UInt16(49)&127):((var239|1)));
                ();
                Int8(-41)

            case caseVar322 : Unit =>
                var var325 : Int8 = Int8(-92);
                var325

            case defaultValue =>
                var29;
                var332

            case _ =>
                (-36);
                Int8(-1) >> ((Int8(-17)) & 7)

        };
        func func345<T0>(namedParam346 ! : Range<UInt64>, optionalParam347 ! : Int16 = Int16(Int8(113))) : UInt8 { // block id: 350
            var354[7]
        }
;
        func345<Range<Int16>>(namedParam346 : ((param271&127)..(UInt64(89)&127):((var239|1))))
    };
    if (var181) { // block id: 391
        var332 % ((var332) | 1);
        var396
    } else if (false) { // block id: 441
        ();
        var396
    } else { // block id: 444
        var29;
        var var448 : UInt64 = UInt64(52);
        var448--;
        var396
    }[2][2]
}


func func664(param665 : Range<Int64>, optionalParam666 ! : Rune = r'd', optionalParam668 ! : Float64 = (-99.0), optionalParam670 ! : Range<UInt32> = ((UInt32(215)&127)..(UInt32(252)&127):(50|1))) : Enum281 { // block id: 672
    var674
}


public struct Aggregate841 {
    public init() { // block id: 843

    }
;
    var var848 : Bool = false
}



public interface Interface1206 {
    func func2770(namedParam2771 ! : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))>) : UInt16 { // block id: 2772
        var var2790 : Float32 = Float32(Float32(Float32(3.0)));
        let var2901 : UInt16 = UInt16(91);
        let var2905 : UInt16 = UInt16(UInt8(93));
        try { // block id: 2774
            let var2780 : Array<Range<Int8>> = [((Int8(106)&127)..=(Int8(102)&127):((-102)|1)), ((Int8(25)&127)..=(Int8(-118)&127):((-82)|1)), ((Int8(-97)&127)..=(Int8(10)&127):((-55)|1)), ((Int8(-111)&127)..=(Int8(-74)&127):((-60)|1)), ((Int8(30)&127)..=(Int8(114)&127):(107|1)), ((Int8(-120)&127)..(Int8(117)&127):(76|1)), ((Int8(59)&127)..=(Int8(118)&127):(93|1)), ((Int8(80)&127)..(Int8(52)&127):((-99)|1)), ((Int8(8)&127)..=(Int8(67)&127):((-86)|1)), ((Int8(53)&127)..(Int8(69)&127):(64|1))];
            match (Enum225<UInt64, UInt8>.enumValue1823(Enum43<UInt64, Aggregate841, Bool>.defaultValue, (var2780, var2783, var827, var655, UInt16(58), var196), var2790)) {
                case _ =>
                    Option<Enum281>.Some(Enum281.defaultValue);
                    let var2800 : Option<Enum225<UInt64, UInt8>> = Option<Enum225<UInt64, UInt8>>.None;
                    var2800;
                    ()

                case defaultValue =>
                    var var2808 : UInt16 = UInt16(Int8(UInt8(UInt8(32))));
                    var2808 *= var159;
                    var2790 *= Float32(65.0);
                    var var2820 : UInt8 = UInt8(136);
                    ()

                case defaultValue =>
                    var2827 |= var2827;
                    r'N';
                    ()

                case _ =>
                    var var2836 : UInt64 = UInt64(21);
                    var2836--

            };
            var loopTimeVar2844 : Int64 = 0;
            while ((var181) && loopTimeVar2844 < 100 ) {
                loopTimeVar2844++;
                UInt8(215);
                var2165
            };
            var1834
        } catch (e: Exception) { // block id: 2846
            ((), Int8(-30), [(), (), (), (), (), (), (), (), (), ()], (), Int32(-61), ((Int8(-126)&127)..(Int8(-63)&127):((-112)|1)), var2855, 29.0);
            var2827 >>= ((var2827) & 7);
            match (var2827) {
                case _ =>
                    var29;
                    [true, true, false, true, false, true, true, false, true, false];
                    UInt16(120) << ((var159) & 7)

                case caseVar2873 : Bool =>
                    var2165 >>= ((Int8(-38)) & 7);
                    121.0 - 79.0;
                    UInt16(106) - UInt16(78)

                case _ =>
                    var396;
                    var1834

            }
        } finally { // block id: 2888
            match {
                case true =>
                var2827++;
                var159
                case var181 =>
                var219;
                var159 + var2901
                case _ =>
                var2905
            }
        }
    }

}

public interface Interface1207 {
    func func3367() : Float32 { // block id: 3368
        let var3437 : Option<Aggregate841> = ([((UInt8(207)&127)..(UInt8(205)&127):((Int64(Int8(45))|1))), ((UInt8(70)&127)..(UInt8(87)&127):((-62)|1)), ((UInt8(202)&127)..(UInt8(Int8(-14))&127):((Int64(UInt8(78))|1))), ((UInt8(53)&127)..(UInt8(Int8(-47))&127):((Int64(UInt16(241))|1))), ((UInt8(83)&127)..=(UInt8(61)&127):(108|1)), ((UInt8(UInt8(19))&127)..=(UInt8(125)&127):((Int64(UInt8(73))|1))), ((UInt8(220)&127)..(UInt8(85)&127):((Int64(Int8(60))|1))), ((UInt8(UInt8(209))&127)..(UInt8(Int8(88))&127):(((-50)|1))), ((UInt8(Int8(-71))&127)..(UInt8(UInt8(94))&127):(((-96)|1))), ((UInt8(UInt8(171))&127)..=(UInt8(153)&127):((91|1)))] as Aggregate841);
        var var3542 : UInt64 = UInt64(56);
        let var3718 : ?(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.Some((((UInt64(210)&127)..=(UInt64(194)&127):(41|1)), (((Int16(-78)&127)..=(Int16(-103)&127):((-83)|1)), (Int32(-118), ((UInt64(131)&127)..=(UInt64(68)&127):(((-127)|1))), ([UInt8(126), UInt8(2), UInt8(159), UInt8(128), UInt8(135), UInt8(61), UInt8(103), UInt8(75), UInt8(112), UInt8(65)], (-97.0), ((UInt64(83)&127)..(UInt64(156)&127):((102|1)))), ((UInt16(120)&127)..=(UInt16(170)&127):((-27)|1)))), ([UInt8(137), UInt8(30), UInt8(233), UInt8(202), UInt8(113), UInt8(134), UInt8(174), UInt8(134), UInt8(121), UInt8(14)], 53.0, ((UInt64(187)&127)..(UInt64(167)&127):((1|1)))), ((Int8(-79)&127)..=(Int8(-106)&127):(94|1))));
        if (try { // block id: 3371
            ();
            var1068 / Float64((Int32(61.0)) | 1);
            var181
        } catch (e: Exception) { // block id: 3377
            UInt32(29) <= UInt32(174)
        } finally { // block id: 3381
            true && var3385
        }) { // block id: 3405
            let var3411 : Array<Bool> = [true, false, true, false, true, true, false, true, false, true];
            match (Option<Unit>.None) {
                case _ =>
                    var3411;

                    var3141

            };
            let var3419 : ?Unit = Option<Unit>.Some(());
            (var3419 ?? ());
            var3424
        } else { // block id: 3430
            (var3437 ?? var845);
            var var3554 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))> = [(Int16(Int8(UInt8(152))), ([UInt8(178), UInt8(85), UInt8(144), UInt8(239), UInt8(163), UInt8(91), UInt8(79), UInt8(96), UInt8(35), UInt8(202)], Float64(Float32(2.0)), ((UInt64(110)&127)..(UInt64(86)&127):((-67)|1)))), (Int16(UInt16(UInt16(11))), ([UInt8(112), UInt8(113), UInt8(126), UInt8(81), UInt8(24), UInt8(199), UInt8(12), UInt8(190), UInt8(86), UInt8(50)], Float64(Float32(-51.0)), ((UInt64(95)&127)..=(UInt64(129)&127):((123|1))))), (Int16(-29), ([UInt8(126), UInt8(51), UInt8(5), UInt8(129), UInt8(243), UInt8(125), UInt8(16), UInt8(165), UInt8(11), UInt8(180)], 21.0, ((UInt64(225)&127)..=(UInt64(111)&127):(((-124)|1))))), (Int16(Int16(-117)), ([UInt8(200), UInt8(231), UInt8(240), UInt8(154), UInt8(137), UInt8(143), UInt8(25), UInt8(223), UInt8(231), UInt8(108)], Float64((-105.0)), ((UInt64(233)&127)..=(UInt64(31)&127):((9|1))))), (Int16(Int8(UInt8(179))), ([UInt8(152), UInt8(8), UInt8(108), UInt8(98), UInt8(97), UInt8(68), UInt8(155), UInt8(143), UInt8(166), UInt8(70)], 41.0, ((UInt64(33)&127)..=(UInt64(96)&127):(110|1)))), (Int16(-105), ([UInt8(169), UInt8(88), UInt8(128), UInt8(195), UInt8(6), UInt8(104), UInt8(228), UInt8(40), UInt8(0), UInt8(165)], Float64(29.0), ((UInt64(27)&127)..=(UInt64(24)&127):(((-29)|1))))), (Int16(-118), ([UInt8(197), UInt8(156), UInt8(169), UInt8(206), UInt8(151), UInt8(121), UInt8(15), UInt8(226), UInt8(26), UInt8(68)], (-48.0), ((UInt64(57)&127)..(UInt64(124)&127):((-58)|1)))), (Int16(Int8(UInt8(166))), ([UInt8(23), UInt8(1), UInt8(33), UInt8(14), UInt8(180), UInt8(191), UInt8(81), UInt8(25), UInt8(99), UInt8(19)], 6.0, ((UInt64(96)&127)..(UInt64(124)&127):(71|1)))), (Int16(34), ([UInt8(219), UInt8(57), UInt8(57), UInt8(220), UInt8(208), UInt8(32), UInt8(42), UInt8(104), UInt8(234), UInt8(229)], (-83.0), ((UInt64(227)&127)..=(UInt64(171)&127):((-24)|1)))), (Int16(114), ([UInt8(113), UInt8(31), UInt8(252), UInt8(5), UInt8(129), UInt8(43), UInt8(123), UInt8(85), UInt8(195), UInt8(248)], (-112.0), ((UInt64(186)&127)..=(UInt64(111)&127):(((-117)|1)))))];
            try { // block id: 3489
                let var3495 : ?(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.Some((((UInt64(203)&127)..(UInt64(130)&127):(38|1)), (((Int16(-102)&127)..(Int16(-88)&127):((58|1))), (Int32(-18), ((UInt64(104)&127)..=(UInt64(10)&127):(103|1)), ([UInt8(154), UInt8(184), UInt8(61), UInt8(76), UInt8(147), UInt8(234), UInt8(12), UInt8(249), UInt8(88), UInt8(43)], 59.0, ((UInt64(73)&127)..(UInt64(137)&127):((67|1)))), ((UInt16(20)&127)..(UInt16(6)&127):((65|1))))), ([UInt8(64), UInt8(157), UInt8(224), UInt8(188), UInt8(212), UInt8(67), UInt8(158), UInt8(79), UInt8(123), UInt8(86)], (-122.0), ((UInt64(42)&127)..(UInt64(83)&127):((74|1)))), ((Int8(71)&127)..(Int8(-89)&127):(20|1))));
                if (var181) { Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.Some(var2681) } else { var3495 }
            } catch (e: Exception) { // block id: 3536
                var181 &&= var181;
                var3542 = var3542;
                Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.None
            } finally { // block id: 3546
                if (false) { Option<Enum225<UInt64, UInt8>>.Some(Enum225<UInt64, UInt8>.enumValue2300(var308, var1192, var3554)) } else { Option<Enum225<UInt64, UInt8>>.None } ;
                if (false) { var3718 } else { Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.Some(var2681) }
            };
            Float32(-64.0 ** Float64(Int32(Float32(53.0)) & 3))
        }
    }

}

public open class Class1203 <: Interface1206 & Interface1207 & Resource {
    public init() { // block id: 1205

    }
;
    static let var1370 : ?Unit = Option<Unit>.None;
    public static let var1396 : String = "mrcH0X|C4o"
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}




func func1430(namedParam1431 ! : Enum43<UInt64, Aggregate841, Bool>, optionalParam1432 ! : Array<Enum74> = [Enum74.enumValue131(12), Enum74.enumValue568(((Int16(-104)&127)..=(Int16(-76)&127):((-65)|1)), ([UInt8(19), UInt8(80), UInt8(149), UInt8(215), UInt8(218), UInt8(35), UInt8(193), UInt8(111), UInt8(168), UInt8(73)], Float64(Float32(-66.0)), ((UInt64(138)&127)..=(UInt64(89)&127):((69|1)))), Int16(82), UInt32(123)), Enum74.enumValue131(Int64(Int8(-60))), Enum74.enumValue131(105), Enum74.enumValue1464("iO93$Poa{B^", ((Int16(-110)&127)..=(Int16(Int8(-57))&127):((Int64(Int32(-43))|1)))), Enum74.defaultValue, Enum74.enumValue1476(((UInt32(52)&127)..=(UInt32(Int8(-44))&127):((125|1))), ([UInt8(141), UInt8(110), UInt8(244), UInt8(29), UInt8(56), UInt8(165), UInt8(254), UInt8(57), UInt8(59), UInt8(47)], 99.0, ((UInt64(73)&127)..(UInt64(136)&127):(((-15)|1)))), ((), Int8(-80), [(), (), (), (), (), (), (), (), (), ()], (), Int32(-36), ((Int8(-40)&127)..=(Int8(-63)&127):((-58)|1)), """
-j/~P
QpLuU
""", Float64(32.0))), Enum74.defaultValue, Enum74.enumValue1464("~H&<DqdF_2", ((Int16(-11)&127)..=(Int16(68)&127):((-82)|1))), Enum74.enumValue568(((Int16(-93)&127)..(Int16(79)&127):(10|1)), ([UInt8(92), UInt8(180), UInt8(123), UInt8(192), UInt8(221), UInt8(5), UInt8(13), UInt8(249), UInt8(132), UInt8(16)], 16.0, ((UInt64(199)&127)..(UInt64(138)&127):(((-55)|1)))), Int16(Int8(UInt8(98))), UInt32(27))], optionalParam1529 ! : UInt64 = UInt64(Int32(85))) : Unit { // block id: 1532
    let var1539 : ?((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)>.Some((([UInt8(22), UInt8(83), UInt8(208), UInt8(153), UInt8(117), UInt8(92), UInt8(70), UInt8(69), UInt8(116), UInt8(35)], 106.0, ((UInt64(100)&127)..=(UInt64(233)&127):(((-35)|1)))), (Float32(-53.0), UInt32(120), (), UInt64(Int8(61))), Int8(UInt8(214)), ((Int32(Int16(13))&127)..(Int32(Int32(12))&127):((Int64(Int16(-78))|1)))));
    let var1567 : ?Bool = Option<Bool>.Some(([UInt8(82), UInt8(Int8(-27)), UInt8(244), UInt8(165), UInt8(Int8(23)), UInt8(76), UInt8(119), UInt8(Int8(-106)), UInt8(Int8(112)), UInt8(UInt8(219))] is Range<Int8>));
    var var1615 : ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = (([UInt8(31), UInt8(104), UInt8(92), UInt8(248), UInt8(217), UInt8(65), UInt8(231), UInt8(242), UInt8(60), UInt8(209)], (-29.0), ((UInt64(83)&127)..(UInt64(168)&127):(((-17)|1)))), (Float32(-105.0), UInt32(Int16(-48)), (), UInt64(135)), Int8(UInt8(14)), ((Int32(-118)&127)..=(Int32(-101)&127):((-127)|1)));
    (var1539 ?? match {
        case (var1567 ?? var181) =>
        "LhghZf^-YU";
        let var1598 : (Float32, UInt32, Unit, UInt64) = (Float32(Float32(-96.0)), UInt32(Int8(-3)), (), UInt64(UInt32(UInt32(UInt8(45)))));
        (([UInt8(6), UInt8(194), UInt8(226), UInt8(150), UInt8(121), UInt8(217), UInt8(241), UInt8(190), UInt8(165), UInt8(224)], 93.0, ((optionalParam1529&127)..(UInt64(86)&127):((var239|1)))), var1598, var1378, ((Int32(97)&127)..=(Int32(52)&127):((-113)|1)))
        case _ =>
        ();
        ((UInt64(167)&127)..(UInt64(185)&127):((-33)|1));
        var1615
    });
    let var1645 : Range<Int16> = ((Int16(112)&127)..(Int16(-125)&127):(49|1));
    var loopTimeVar1650 : Int64 = 0;
    do {
        loopTimeVar1650++;

    } while ((try { // block id: 1635
        UInt32(210) < UInt32(196)
    } catch (_) { // block id: 1639
        var29;
        var181
    } finally { // block id: 1642
        var29;
        var1645;
        true
    }) && loopTimeVar1650 < 100 )
}

func func1709(param1710 : UInt32) : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) { // block id: 1711
    var1713
}

public func func1406(param1407 : Range<UInt64>) : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) { // block id: 1408
    var var1416 : ?Bool = Option<Bool>.Some(([(), (), (), (), (), (), (), (), (), ()] is (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)));
    var loopTimeVar1426 : Int64 = 0;
    do {
        loopTimeVar1426++;
        break
    } while (((var1416 ?? var181 || true)) && loopTimeVar1426 < 100 ) ;
    let var1666 : (Unit, Int8, Array<Unit>, Unit, Int32, Range<Int8>, String, Float64) = ((), Int8(Int8(Int8(Int8(-94)))), [(), (), (), (), (), (), (), (), (), ()], (), Int32(-91), ((Int8(2)&127)..(Int8(-74)&127):(99|1)), ###"f[OBlybxz|"###, 94.0);
    try { // block id: 1428
        let var1654 : Enum74 = Enum74.defaultValue;
        var var1684 : String = "nAs#Z+Ofxw";
        let var1687 : Range<Int16> = ((Int16(3)&127)..=(Int16(-126)&127):((111|1)));
        let var1697 : Int64 = Int64((-128));
        func1430(namedParam1431 : Enum43<UInt64, Aggregate841, Bool>.defaultValue, optionalParam1432 : [var1654, Enum74.enumValue1476(var1658, var1123, var1666), var1654, Enum74.defaultValue, var1654, Enum74.enumValue1464(var1684, var1687), Enum74.enumValue568(((Int16(-54)&127)..=(Int16(-17)&127):((var1697|1))), var1123, var1192, UInt32(227)), var1654, var1654, var1654]);
        var219.getOrThrow();
        let var1742 : (UInt32) -> (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) = func1709;
        UInt32(149)|>var1742
    } catch (e: Exception) { // block id: 1745
        match {
            case false =>
            ();
            var1713
            case var181 =>
            var1713
            case _ =>
            var29;
            ([((Int8(-121)&127)..=(Int8(49)&127):((-84)|1)), ((Int8(65)&127)..(Int8(50)&127):(125|1)), ((Int8(-58)&127)..(Int8(63)&127):((-113)|1)), ((Int8(-116)&127)..(Int8(-34)&127):(119|1)), ((Int8(32)&127)..(Int8(102)&127):(37|1)), ((Int8(62)&127)..(Int8(-50)&127):((-22)|1)), ((Int8(-114)&127)..(Int8(-15)&127):((-104)|1)), ((Int8(101)&127)..=(Int8(115)&127):((-102)|1)), ((Int8(112)&127)..=(Int8(-41)&127):(1|1)), ((Int8(100)&127)..=(Int8(12)&127):((-15)|1))], ((Int32(15)&127)..(Int32(5)&127):((var239|1))), var827, Option<Enum281>.None, var159, UInt32(97))
        }
    } finally { // block id: 1766
        func1709(var196)
    }
}


public func func1770(param1771 : (Float32, UInt32, Unit, UInt64)) : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) { // block id: 1772
    var var1791 : Unit = ();
    (try { // block id: 1779
        var var1781 : ?Int64 = Option<Int64>.Some(Int64(UInt8(UInt8(248))));
        var1781
    } finally { // block id: 1786
        var239 %= ((var239) | 1);
        var1791;
        let var1794 : ?Int64 = (([UInt8(173), UInt8(159), UInt8(UInt8(225)), UInt8(192), UInt8(UInt8(66)), UInt8(4), UInt8(115), UInt8(151), UInt8(UInt8(20)), UInt8(UInt8(24))], Float64(Float32(Float32(21.0))), ((UInt64((-83))&127)..=(UInt64(76)&127):(((-8)|1)))) as Int64);
        var1794
    } ?? match {
        case (Enum225<UInt64, UInt8>.enumValue1823(Enum43<UInt64, Aggregate841, Bool>.defaultValue, var1713, Float32(41.0)) is Option<Bool>) =>
        var1791;
        var1834 << ((UInt16(209)) & 7);
        (-89)
        case _ =>
        ();
        ();
        (-91)
    });
    let var1844 : ?Unit = ([UInt8(39), UInt8(228), UInt8(157), UInt8(235), UInt8(9), UInt8(10), UInt8(180), UInt8(186), UInt8(201), UInt8(72)] as Unit);
    var var1850 : ?Bool = Option<Bool>.None;
    var loopTimeVar1856 : Int64 = 0;
    (var1844 ?? while (((var1850 ?? var181)) && loopTimeVar1856 < 100 ) {
        loopTimeVar1856++;
        var1791
    });
    var1713
}

public func func1916(param1917 : Range<UInt64>) : (Float32, UInt32, Unit, UInt64) { // block id: 1918
    ((Int16(-50)&127)..=(Int16(-59)&127):(65|1));
    var1921
}



func func1286(optionalParam1287 ! : (Unit, Range<UInt32>, UInt16) = ((), ((UInt32(252)&127)..(UInt32(139)&127):((-93)|1)), UInt16(Int16(UInt8(79)))), optionalParam1294 ! : (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = (((UInt64(207)&127)..=(UInt64(120)&127):((-55)|1)), (((Int16(Int16(-2))&127)..=(Int16(UInt16(137))&127):((114|1))), (Int32(Int16(-53)), ((UInt64(131)&127)..=(UInt64(56)&127):((116|1))), ([UInt8(70), UInt8(73), UInt8(143), UInt8(209), UInt8(121), UInt8(82), UInt8(158), UInt8(123), UInt8(232), UInt8(29)], 28.0, ((UInt64(60)&127)..=(UInt64(133)&127):(((-89)|1)))), ((UInt16(7)&127)..=(UInt16(132)&127):(31|1)))), ([UInt8(Int8(-81)), UInt8(125), UInt8(UInt8(177)), UInt8(Int8(17)), UInt8(Int8(64)), UInt8(146), UInt8(Int8(50)), UInt8(UInt8(147)), UInt8(UInt8(200)), UInt8(81)], Float64(Float64(Float32(-114.0))), ((UInt64(103)&127)..=(UInt64(136)&127):(108|1))), ((Int8(-18)&127)..(Int8(-21)&127):(5|1)))) : Class1203 { // block id: 1343
    var var2038 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)) = (Int16(29), ([UInt8(161), UInt8(193), UInt8(251), UInt8(162), UInt8(62), UInt8(12), UInt8(98), UInt8(183), UInt8(226), UInt8(131)], Float64(35.0), ((UInt64(221)&127)..=(UInt64(33)&127):(77|1))));
    let var2052 : UInt8 = UInt8(UInt8(143));
    var var2104 : UInt8 = UInt8(34);
    let var2179 : Range<Int16> = ((Int16(-86)&127)..(Int16(-89)&127):((-116)|1));
    let var2182 : Enum74 = Enum74.enumValue131(Int64(Int64(10)));
    var var2221 : (Unit, Int8, Array<Unit>, Unit, Int32, Range<Int8>, String, Float64) = ((), Int8(-47), [(), (), (), (), (), (), (), (), (), ()], (), Int32(-65), ((Int8(104)&127)..=(Int8(61)&127):(105|1)), ###"JH}khua{R6R"###, 6.0);
    let var2276 : ((Float32, UInt32, Unit, UInt64)) -> (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) = func1770;
    var var2284 : Enum74 = Enum74.enumValue2286;
    Class1203.func1347(match ([var2038, var2038, (var1192, ([var2052, UInt8(143), var2052, var2052, var2052, UInt8(27), var2052, var2052, UInt8(124), var2052], 106.0, ((UInt64(125)&127)..=(UInt64(5)&127):(45|1)))), (Int16(98), ([UInt8(216), var2052, UInt8(74), var2052, var2052, var2052, var2052, UInt8(51), UInt8(253), var2052], (-89.0), var2082)), (Int16(69), (var354, var1936, var1050)), (Int16(-108), ([var2052, UInt8(24), UInt8(165), var2052, UInt8(6), var2052, var2052, var2052, var2052, var2104], var1936, ((UInt64(104)&127)..=(UInt64(158)&127):((var239|1))))), var2038, (var1192, (var354, (-104.0), var578)), var2038, var2038]) {
        case caseVar2122 =>
            ();
            var181 ||= var181;
            (-94)

        case caseVar2131 : Float32 =>
            ();
            ();
            var2136

        case _ =>
            ();
            var2147 <<= ((UInt8(86)) & 7);
            83

        case caseVar2154 =>
            (-23)

        case _ =>
            var2160;
            var2165 ^= var2165;
            let var2169 : Int64 = (-26);
            var2169

    }, namedParam1349 : try { // block id: 2172
        let var2176 : String = "+@-=7*w\"QM";
        [Enum74.enumValue1464(var2176, var2179), var2182, var2188, Enum74.defaultValue, var2182, var2182, Enum74.enumValue568(((var1192&127)..=(var1192&127):((var2136|1))), var1123, Int16(76), UInt32(21)), var2188, var2182, Enum74.enumValue131((-92))]
    } finally { // block id: 2205
        var2207;
        var var2239 : ?Unit = (Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)>.Some((([UInt8(85), UInt8(117), UInt8(35), UInt8(183), UInt8(248), UInt8(227), UInt8(195), UInt8(160), UInt8(157), UInt8(88)], (-66.0), ((UInt64(119)&127)..(UInt64(222)&127):(((-49)|1)))), (Float32(116.0), UInt32(161), (), UInt64(151)), Int8(UInt8(10)), ((Int32(-4)&127)..=(Int32(-31)&127):((-61)|1)))) as Unit);
        var var2259 : ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = (([UInt8(123), UInt8(230), UInt8(246), UInt8(74), UInt8(246), UInt8(40), UInt8(44), UInt8(43), UInt8(53), UInt8(136)], (-26.0), ((UInt64(161)&127)..(UInt64(43)&127):(108|1))), (Float32(-9.0), UInt32(53), (), UInt64(Int8(UInt8(170)))), Int8(UInt8(117)), ((Int32(58)&127)..=(Int32(-124)&127):(9|1)));
        [var2182, Enum74.enumValue1464("""
d~$Ix
`_Ia\\
""", var2179), Enum74.enumValue1476(var1658, ([UInt8(168), UInt8(226), UInt8(59), UInt8(20), UInt8(180), UInt8(134), UInt8(218), UInt8(241), UInt8(43), UInt8(150)], var1936, var2082), var2221), Enum74.enumValue2232(var2239, var2259, var2276), Enum74.enumValue1476(var1658, var1123, var2221), var2182, var2284, Enum74.defaultValue, Enum74.enumValue1464("""
la{S6Q
_ZW2j
""", ((Int16(-6)&127)..(Int16(-6)&127):((-55)|1))), Enum74.defaultValue]
    });
    var var2490 : (Int32, Range<Int16>, UInt16, (Unit, Range<UInt32>, UInt16)) = (Int32(Int8(Int8(Int8(51)))), ((Int16(-39)&127)..=(Int16(-79)&127):((Int64(Int16(78))|1))), UInt16(116), ((), ((UInt32(130)&127)..=(UInt32(154)&127):((-29)|1)), UInt16(UInt16(32))));
    var var2517 : Int64 = Int64(Int32(126));
    func1430(namedParam1431 : try { // block id: 2294
        var var2307 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))> = [(Int16(UInt16(UInt8(131))), ([UInt8(112), UInt8(35), UInt8(60), UInt8(181), UInt8(153), UInt8(56), UInt8(102), UInt8(151), UInt8(127), UInt8(86)], (-67.0), ((UInt64(33)&127)..(UInt64(240)&127):(63|1)))), (Int16(92), ([UInt8(161), UInt8(163), UInt8(105), UInt8(21), UInt8(13), UInt8(15), UInt8(168), UInt8(101), UInt8(26), UInt8(34)], 87.0, ((UInt64(128)&127)..=(UInt64(104)&127):(67|1)))), (Int16(UInt8(UInt8(123))), ([UInt8(127), UInt8(25), UInt8(239), UInt8(171), UInt8(158), UInt8(188), UInt8(1), UInt8(230), UInt8(174), UInt8(98)], 60.0, ((UInt64(114)&127)..=(UInt64(108)&127):((-125)|1)))), (Int16(-39), ([UInt8(133), UInt8(207), UInt8(193), UInt8(189), UInt8(144), UInt8(148), UInt8(146), UInt8(125), UInt8(236), UInt8(98)], Float64(Float32(-67.0)), ((UInt64(189)&127)..(UInt64(155)&127):((47|1))))), (Int16(Int16(Int16(-9))), ([UInt8(62), UInt8(190), UInt8(22), UInt8(75), UInt8(139), UInt8(223), UInt8(172), UInt8(17), UInt8(48), UInt8(234)], Float64(Float32(105.0)), ((UInt64(201)&127)..(UInt64(94)&127):((30|1))))), (Int16(UInt8(Int8(-62))), ([UInt8(43), UInt8(162), UInt8(67), UInt8(137), UInt8(236), UInt8(218), UInt8(66), UInt8(58), UInt8(249), UInt8(198)], 111.0, ((UInt64(204)&127)..=(UInt64(192)&127):((87|1))))), (Int16(59), ([UInt8(108), UInt8(207), UInt8(24), UInt8(203), UInt8(19), UInt8(44), UInt8(13), UInt8(133), UInt8(156), UInt8(11)], Float64(Float32(65.0)), ((UInt64(227)&127)..(UInt64(33)&127):((-78)|1)))), (Int16(-69), ([UInt8(88), UInt8(147), UInt8(79), UInt8(59), UInt8(232), UInt8(129), UInt8(208), UInt8(168), UInt8(234), UInt8(66)], Float64(Float32(-128.0)), ((UInt64(38)&127)..=(UInt64(207)&127):(((-36)|1))))), (Int16(UInt16(Int16(90))), ([UInt8(67), UInt8(123), UInt8(72), UInt8(129), UInt8(157), UInt8(176), UInt8(24), UInt8(210), UInt8(211), UInt8(72)], (-4.0), ((UInt64(131)&127)..=(UInt64(178)&127):(73|1)))), (Int16(Int8(Int8(-17))), ([UInt8(86), UInt8(219), UInt8(184), UInt8(7), UInt8(235), UInt8(165), UInt8(247), UInt8(21), UInt8(169), UInt8(61)], (-5.0), ((UInt64(24)&127)..(UInt64(190)&127):((-62)|1))))];
        Enum43<UInt64, Aggregate841, Bool>.enumValue2296(Enum225<UInt64, UInt8>.enumValue2300(var308, Int16(-1), var2307), var1192)
    } catch (e: Exception) { // block id: 2428
        var2430
    }, optionalParam1432 : if (try { // block id: 2434
        ();
        var239 <= 14
    } catch (e: Exception) { // block id: 2439
        var181
    }) { [Enum74.enumValue2286, Enum74.enumValue1464(###"qw4dslFfE("###, ((Int16(-93)&127)..=(Int16(-88)&127):((-95)|1))), Enum74.enumValue2447(Option<Bool>.Some(var181), var2459, func270, var2276), Enum74.enumValue2483(var1834, ((UInt16(76)&127)..=(UInt16(170)&127):(64|1)), var2490), Enum74.enumValue2508(var2490), Enum74.enumValue1464(###"]NizP`mBa{0"###, ((var1192&127)..(var1192&127):((var2517|1)))), var2188, var2522, Enum74.enumValue131(var2526), var2284] } else { (Option<Array<Enum74>>.None ?? var2537) } );
    let var2588 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)) = (Int16(-102), ([UInt8(Int8(-54)), UInt8(159), UInt8(UInt8(156)), UInt8(Int8(-99)), UInt8(UInt8(189)), UInt8(176), UInt8(UInt8(43)), UInt8(Int8(41)), UInt8(Int8(78)), UInt8(UInt8(133))], 7.0, ((UInt64(169)&127)..=(UInt64(UInt16(34))&127):((Int64(Int16(8))|1)))));
    let var2653 : UInt64 = UInt64(34);
    match (try { // block id: 2551
            ();
            let var2621 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(0), UInt8(148), UInt8(247), UInt8(116), UInt8(246), UInt8(165), UInt8(231), UInt8(3), UInt8(75), UInt8(102)], (-83.0), ((UInt64(179)&127)..=(UInt64(10)&127):((Int64(UInt64(12))|1))));
            [var2038, (var1192, (var354, 79.0, var578)), var2038, var2038, (Int16(75), ([var2104, UInt8(120), var2147, UInt8(247), var2104, var2573, UInt8(227), var2573, UInt8(90), UInt8(115)], (-50.0), var1050)), (Int16(-105), var1123), var2038, var2588, (var1192, var2621), (var1192, var2621)]
        } finally { // block id: 2633
            ();
            [var2588, (Int16(31), ([UInt8(76), UInt8(25), UInt8(181), UInt8(113), UInt8(227), UInt8(41), UInt8(129), UInt8(36), UInt8(223), UInt8(121)], var1936, var578)), (var1192, var1123), (var1192, ([UInt8(42), UInt8(60), UInt8(188), UInt8(241), UInt8(146), UInt8(201), UInt8(135), UInt8(237), UInt8(201), UInt8(216)], 50.0, ((var2653&127)..(UInt64(62)&127):(((-78)|1))))), var2038, var2588, var2038, (var1192, (var354, (-65.0), ((UInt64(109)&127)..(UInt64(144)&127):(118|1)))), var2588, (var1192, var1123)]
        }) {
        case _ =>
            var1936 **= Float64(Int32((-95.0)) & 3);
            var var2676 : Class1203 = Class1203();
            var2676

    }
}

func func270(namedParam1280 ! : Range<Int8>, namedParam1281 ! : Int16, namedParam1282 ! : Interface1206) : Int32 { // block id: 1283
    var var2754 : UInt64 = UInt64(141);
    var var2911 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))> = [(Int16(Int8(24)), ([UInt8(180), UInt8(181), UInt8(82), UInt8(135), UInt8(53), UInt8(40), UInt8(24), UInt8(223), UInt8(33), UInt8(124)], Float64(55.0), ((UInt64(168)&127)..(UInt64(102)&127):(((-91)|1))))), (Int16(107), ([UInt8(6), UInt8(127), UInt8(224), UInt8(15), UInt8(71), UInt8(86), UInt8(102), UInt8(165), UInt8(151), UInt8(248)], Float64(4.0), ((UInt64(76)&127)..=(UInt64(151)&127):(((-1)|1))))), (Int16(UInt16(129)), ([UInt8(80), UInt8(227), UInt8(116), UInt8(254), UInt8(37), UInt8(230), UInt8(143), UInt8(137), UInt8(231), UInt8(225)], 103.0, ((UInt64(123)&127)..(UInt64(163)&127):(((-39)|1))))), (Int16(Int8(UInt8(192))), ([UInt8(116), UInt8(161), UInt8(187), UInt8(69), UInt8(182), UInt8(201), UInt8(98), UInt8(160), UInt8(245), UInt8(105)], Float64((-23.0)), ((UInt64(52)&127)..(UInt64(15)&127):(((-106)|1))))), (Int16(73), ([UInt8(112), UInt8(12), UInt8(35), UInt8(125), UInt8(181), UInt8(227), UInt8(167), UInt8(80), UInt8(179), UInt8(208)], Float64(35.0), ((UInt64(84)&127)..(UInt64(66)&127):(118|1)))), (Int16(-119), ([UInt8(196), UInt8(97), UInt8(179), UInt8(2), UInt8(159), UInt8(5), UInt8(141), UInt8(184), UInt8(40), UInt8(219)], Float64(Float32(-95.0)), ((UInt64(219)&127)..=(UInt64(18)&127):(43|1)))), (Int16(Int8(-61)), ([UInt8(8), UInt8(138), UInt8(212), UInt8(246), UInt8(89), UInt8(140), UInt8(100), UInt8(14), UInt8(145), UInt8(128)], 61.0, ((UInt64(156)&127)..=(UInt64(160)&127):((84|1))))), (Int16(79), ([UInt8(50), UInt8(214), UInt8(32), UInt8(151), UInt8(147), UInt8(33), UInt8(76), UInt8(171), UInt8(211), UInt8(207)], Float64((-33.0)), ((UInt64(213)&127)..=(UInt64(47)&127):(((-77)|1))))), (Int16(Int16(-21)), ([UInt8(23), UInt8(180), UInt8(163), UInt8(91), UInt8(196), UInt8(36), UInt8(9), UInt8(44), UInt8(146), UInt8(221)], (-120.0), ((UInt64(135)&127)..(UInt64(111)&127):(79|1)))), (Int16(10), ([UInt8(106), UInt8(162), UInt8(200), UInt8(129), UInt8(102), UInt8(52), UInt8(39), UInt8(220), UInt8(47), UInt8(19)], (-56.0), ((UInt64(86)&127)..=(UInt64(203)&127):(((-24)|1)))))];
    func1286(optionalParam1294 : try { // block id: 2679
        var2681
    } finally { // block id: 2750
        (((var2754&127)..(var2754&127):((114|1))), (((Int16(82)&127)..(Int16(-101)&127):((var2526|1))), var396), ([UInt8(14), UInt8(126), UInt8(37), UInt8(37), UInt8(58), UInt8(167), UInt8(36), UInt8(100), UInt8(162), UInt8(243)], 101.0, ((UInt64(82)&127)..(UInt64(114)&127):((-124)|1))), ((Int8(-7)&127)..=(Int8(114)&127):(117|1)))
    }).func2770(namedParam2771 : if (false) { var2911 } else { var2911 } );
    var var3079 : ?((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>) = Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)>.Some((([UInt8(53), UInt8(204), UInt8(112), UInt8(38), UInt8(8), UInt8(77), UInt8(65), UInt8(139), UInt8(155), UInt8(126)], (-2.0), ((UInt64(90)&127)..=(UInt64(195)&127):(18|1))), (Float32(Float32(-121.0)), UInt32(104), (), UInt64(UInt16(220))), Int8(-26), ((Int32(UInt16(100))&127)..=(Int32(UInt32(68))&127):((Int64(UInt8(77))|1)))));
    match (try (resource = Class1203()) { // block id: 3049
            ();
            if (false) { [var181, var181, true, true, var181, var181, false, true, true, var181] } else { [true, false, true, true, false, true, true, false, false, false] } ;
            var2165 %= ((var2165) | 1)
        } finally { // block id: 3068
            var1192 & Int16(-109);
            var1068 ** Float64(Int32(11.0) & 3);
            ()
        }) {
        case _ =>
            var3079;
            if (var181) { var1942 } else { var1942 } ;
            (Float32(71.0), var196, var2207, UInt64(112))

    };
    var2827
}


func func1209(optionalParam1210 ! : (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = (((UInt64(63)&127)..(UInt64(225)&127):(108|1)), (((Int16(107)&127)..=(Int16(-95)&127):(38|1)), (Int32(UInt8(193)), ((UInt64(194)&127)..=(UInt64(210)&127):(72|1)), ([UInt8(246), UInt8(190), UInt8(12), UInt8(130), UInt8(178), UInt8(11), UInt8(237), UInt8(30), UInt8(162), UInt8(124)], 33.0, ((UInt64(186)&127)..(UInt64(218)&127):((-51)|1))), ((UInt16(208)&127)..(UInt16(44)&127):(((-75)|1))))), ([UInt8(55), UInt8(154), UInt8(227), UInt8(86), UInt8(Int8(94)), UInt8(Int8(-22)), UInt8(254), UInt8(UInt8(216)), UInt8(119), UInt8(132)], (-16.0), ((UInt64(232)&127)..(UInt64(111)&127):((Int64(Int16(-72))|1)))), ((Int8(47)&127)..=(Int8(-5)&127):(41|1))), namedParam1259 ! : Int32) : Class1203 { // block id: 1260
    let var1264 : Interface1206 = Class1203();
    if (var181) { var1264 } else { try { // block id: 1267
        ();
        ();
        if (var181) { Class1203() } else { var1264 }
    } catch (_) { // block id: 1274
        Class1203()
    } } ;
    let var3120 : ?UInt16 = (Float32(78.0) as UInt16);
    var var3162 : Int16 = Int16(-115);
    try { // block id: 1277
        func270(namedParam1280 : ((Int8(-47)&127)..=(Int8(110)&127):(49|1)), namedParam1281 : var1192, namedParam1282 : var1264);
        (var3120 ?? UInt16(222))
    } finally { // block id: 3124
        match (Class1203()) {
            case caseVar3129 =>
                ()

            case _ : Range<Int8> =>
                ();
                var29

            case _ =>
                (-24);
                var3141;
                var239--

        };
        match (Option<Unit>.None) {
            case caseVar3149 =>
                UInt16(153)

            case _ =>
                var var3157 : Interface1207 = Class1203();
                if (var181) { var3157 } else { Class1203() } ;
                var3162 += var3162;
                UInt16(168) / ((UInt16(67)) | 1)

        }
    };
    var var3205 : Float64 = 42.0;
    var var3210 : UInt64 = UInt64(120);
    var var3295 : Range<Int8> = ((Int8(66)&127)..=(Int8(-57)&127):((-121)|1));
    match (if (true) { try { // block id: 3172
            var239 ^= 4;
            var655;
            if (true) { (var1050, (((Int16(106)&127)..=(Int16(5)&127):(35|1)), var396), ([UInt8(79), UInt8(43), UInt8(38), UInt8(149), UInt8(199), UInt8(251), UInt8(68), UInt8(34), UInt8(12), UInt8(74)], var1068, ((UInt64(10)&127)..=(UInt64(7)&127):((-66)|1))), ((Int8(68)&127)..=(Int8(21)&127):((-112)|1))) } else { (var2082, var827, ([var2147, UInt8(227), UInt8(126), UInt8(60), var2573, UInt8(243), var2147, var2573, UInt8(72), var2147], var3205, ((UInt64(195)&127)..=(var3210&127):((23|1)))), ((Int8(8)&127)..=(Int8(67)&127):((-121)|1))) }
        } catch (_) { // block id: 3214
            optionalParam1210
        } } else { try { // block id: 3217
            let var3232 : Range<UInt16> = ((UInt16(50)&127)..=(UInt16(UInt16(132))&127):((Int64(UInt8(Int8(-10)))|1)));
            if (false) { (var578, (((Int16(19)&127)..=(Int16(-30)&127):(92|1)), (Int32(28), ((UInt64(51)&127)..=(UInt64(180)&127):(38|1)), ([UInt8(208), UInt8(37), UInt8(116), UInt8(83), UInt8(28), UInt8(23), UInt8(139), UInt8(231), UInt8(162), UInt8(207)], 109.0, var2082), var3232)), var1123, ((var1378&127)..=(Int8(96)&127):((123|1)))) } else { (((UInt64(216)&127)..(UInt64(210)&127):((-19)|1)), var827, ([UInt8(166), UInt8(217), UInt8(122), UInt8(195), UInt8(127), UInt8(28), UInt8(199), UInt8(42), UInt8(165), UInt8(31)], (-58.0), ((var3210&127)..=(UInt64(232)&127):((var2526|1)))), ((Int8(-81)&127)..=(Int8(112)&127):((-116)|1))) }
        } finally { // block id: 3256
            var239++;
            var3162 *= var1192;
            optionalParam1210
        } } ) {
        case _ : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) =>
            // var1936 %= Float64((Int32(var3205)) | 1);
            if (var181) { var3272 } else { ((), Int8(-37), [(), (), (), (), (), (), (), (), (), ()], (), var2827, var3295, "D6uZj|):Yn", 119.0) } ;
            if (false) { var3302 } else { var3302 }

        case (_ : Range<UInt32>,(caseVar3307,_ : Array<Bool>),caseVar3308 : Option<Unit>,caseVar3309) =>
            var3120;
            var var3315 : (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)) = (((Int16(-126)&127)..=(Int16(90)&127):(100|1)), (Int32(Int8(-128)), ((UInt64(213)&127)..=(UInt64(139)&127):((-86)|1)), ([UInt8(86), UInt8(224), UInt8(122), UInt8(44), UInt8(147), UInt8(164), UInt8(141), UInt8(54), UInt8(212), UInt8(138)], Float64(22.0), ((UInt64(47)&127)..(UInt64(45)&127):(((-18)|1)))), ((UInt16(244)&127)..=(UInt16(UInt8(67))&127):(((-5)|1)))));
            if (false) { var3315 } else { var3315 } ;
            var3302

        case _ =>
            ();
            Class1203()

        case (caseVar3354 : Array<Enum74>,_ : (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32),(_,_,_),_) =>
            if (true) { Class1203() } else { Class1203() }

        case _ =>
            var2207;
            var2207;
            var3302

    }
}


public func func1198(param1199 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))>) : Range<UInt16> { // block id: 1200
    var var3768 : Option<Enum225<UInt64, UInt8>> = Option<Enum225<UInt64, UInt8>>.Some(Enum225<UInt64, UInt8>.enumValue3771((Int32(-88), ((Int16(-32)&127)..=(Int16(-96)&127):(21|1)), UInt16(81), ((), ((UInt32(55)&127)..(UInt32(42)&127):(96|1)), UInt16(249))), [Enum74.enumValue1476(((UInt32(181)&127)..=(UInt32(214)&127):((3|1))), ([UInt8(107), UInt8(223), UInt8(173), UInt8(239), UInt8(41), UInt8(252), UInt8(246), UInt8(16), UInt8(65), UInt8(7)], (-94.0), ((UInt64(1)&127)..(UInt64(123)&127):(((-6)|1)))), ((), Int8(66), [(), (), (), (), (), (), (), (), (), ()], (), Int32(83), ((Int8(-26)&127)..(Int8(84)&127):((-105)|1)), ###"y&0_XOTv,u"###, 69.0)), Enum74.enumValue1464("""
G|ZFI
[>S$4
""", ((Int16(124)&127)..=(Int16(71)&127):(((-21)|1)))), Enum74.enumValue2483(UInt16(142), ((UInt16(47)&127)..=(UInt16(229)&127):(53|1)), (Int32(16), ((Int16(88)&127)..=(Int16(21)&127):((-121)|1)), UInt16(197), ((), ((UInt32(65)&127)..=(UInt32(201)&127):(51|1)), UInt16(5)))), Enum74.enumValue2483(UInt16(147), ((UInt16(101)&127)..(UInt16(184)&127):((-94)|1)), (Int32(-28), ((Int16(-43)&127)..(Int16(-55)&127):((-16)|1)), UInt16(190), ((), ((UInt32(57)&127)..(UInt32(238)&127):((-65)|1)), UInt16(39)))), Enum74.enumValue131(117), Enum74.enumValue2483(UInt16(52), ((UInt16(26)&127)..=(UInt16(9)&127):(44|1)), (Int32(-15), ((Int16(-40)&127)..(Int16(-26)&127):((-74)|1)), UInt16(136), ((), ((UInt32(15)&127)..=(UInt32(44)&127):((103|1))), UInt16(203)))), Enum74.enumValue2232(Option<Unit>.None, (([UInt8(95), UInt8(46), UInt8(11), UInt8(33), UInt8(2), UInt8(173), UInt8(100), UInt8(102), UInt8(172), UInt8(173)], (-123.0), ((UInt64(148)&127)..(UInt64(50)&127):((-27)|1))), (Float32(121.0), UInt32(32), (), UInt64(126)), Int8(-111), ((Int32(21)&127)..=(Int32(109)&127):((122|1)))), func1770), Enum74.enumValue2483(UInt16(150), ((UInt16(226)&127)..=(UInt16(247)&127):((78|1))), (Int32(18), ((Int16(-72)&127)..(Int16(-88)&127):(58|1)), UInt16(0), ((), ((UInt32(107)&127)..(UInt32(77)&127):((-15)|1)), UInt16(229)))), Enum74.enumValue1476(((UInt32(15)&127)..=(UInt32(240)&127):(((-52)|1))), ([UInt8(150), UInt8(37), UInt8(64), UInt8(22), UInt8(77), UInt8(95), UInt8(215), UInt8(57), UInt8(185), UInt8(71)], 38.0, ((UInt64(233)&127)..=(UInt64(35)&127):(85|1))), ((), Int8(112), [(), (), (), (), (), (), (), (), (), ()], (), Int32(-25), ((Int8(86)&127)..=(Int8(-39)&127):((81|1))), "YP^#2JFmQc", 48.0)), Enum74.defaultValue], Enum281.defaultValue, (Option<Aggregate841>.None as Unit)));
    (func1209(namedParam1259 : Int32(-47)).func3367()) / Float32((Int32(match (try { // block id: 3763
            var2165 -= Int8(-96);
            var3768
        } finally { // block id: 3947
            var var3955 : Range<Int64> = ((Int64(Int8(Int8(UInt8(80))))&127)..=((-111)&127):((71|1)));
            if (var181) { (((-22)&127)..(var2526&127):((var239|1))) } else { var3955 } ;
            var196 |= var196;
            var var3970 : Option<Enum225<UInt64, UInt8>> = ([true, ((Option<UInt16>.Some(UInt16(103)) as Bool) is (Range<Int8>, Int16, Interface1206) -> Int32), false, (Enum281.defaultValue is Class1203), false, (Class1203() is (Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))>) -> UInt16), (([((Int8(-37)&127)..=(Int8(32)&127):(108|1)), ((Int8(-127)&127)..(Int8(36)&127):(41|1)), ((Int8(27)&127)..(Int8(18)&127):(121|1)), ((Int8(83)&127)..=(Int8(9)&127):(62|1)), ((Int8(-92)&127)..=(Int8(-81)&127):((-90)|1)), ((Int8(-98)&127)..=(Int8(58)&127):((-21)|1)), ((Int8(-78)&127)..(Int8(-123)&127):((-122)|1)), ((Int8(4)&127)..=(Int8(56)&127):((-18)|1)), ((Int8(-41)&127)..=(Int8(60)&127):((-98)|1)), ((Int8(-65)&127)..=(Int8(-69)&127):(98|1))], ((Int32(-12)&127)..=(Int32(78)&127):((-111)|1)), (((Int16(81)&127)..=(Int16(103)&127):((68|1))), (Int32(47), ((UInt64(197)&127)..(UInt64(139)&127):(28|1)), ([UInt8(201), UInt8(125), UInt8(205), UInt8(175), UInt8(21), UInt8(54), UInt8(123), UInt8(134), UInt8(25), UInt8(242)], (-35.0), ((UInt64(198)&127)..=(UInt64(61)&127):((-87)|1))), ((UInt16(21)&127)..=(UInt16(126)&127):((35|1))))), Option<Enum281>.Some(Enum281.defaultValue), UInt16(239), UInt32(154)) is Range<UInt8>), ([((Int8(-69)&127)..(Int8(77)&127):(102|1)), ((Int8(62)&127)..(Int8(101)&127):((-58)|1)), ((Int8(94)&127)..(Int8(103)&127):(79|1)), ((Int8(50)&127)..(Int8(-78)&127):(25|1)), ((Int8(72)&127)..=(Int8(-13)&127):(57|1)), ((Int8(-58)&127)..=(Int8(-112)&127):(28|1)), ((Int8(-102)&127)..=(Int8(6)&127):((-102)|1)), ((Int8(-76)&127)..(Int8(-41)&127):((-16)|1)), ((Int8(116)&127)..(Int8(-44)&127):((-22)|1)), ((Int8(-9)&127)..=(Int8(-91)&127):(51|1))] is (UInt64) -> Range<UInt64>), false, true] as Enum225<UInt64, UInt8>);
            if (true) { var3768 } else { var3970 }
        }) {
        case _ =>
            ();
            ();
            var3424

    })) | 1);
    var var4024 : Rune = r'x';
    var var4064 : Range<Int16> = ((Int16(45)&127)..(Int16(-75)&127):((Int64(UInt64(Int32(Int16(107))))|1)));
    match (try { // block id: 4021
            var2147;
            var4024
        } catch (e: Exception) { // block id: 4026
            r'E'
        }) {
        case caseVar4030 =>
            ((Int16(83)&127)..=(Int16(91)&127):(52|1))

        case _ =>
            ((Int16(118)&127)..=(Int16(-106)&127):((-35)|1))

        case caseVar4039 =>
            ();
            ((Int16(-95)&127)..(Int16(40)&127):((-102)|1))

        case r'e' | r'4' | r'3' | r'A' =>
            ((Int16(-87)&127)..(Int16(-45)&127):((-6)|1))

        case _ =>
            Class1203();
            [false, var181, var3385, var181, false, false, false, var181, true, false];
            if (false) { var4064 } else { ((Int16(82)&127)..(var1192&127):((10|1))) }

    };
    try { // block id: 4077
        Option<UInt16>.None;
        let var4085 : Bool = ((Int32(41), ((UInt64(41)&127)..(UInt64(4)&127):(47|1)), ([UInt8(67), UInt8(103), UInt8(27), UInt8(217), UInt8(23), UInt8(115), UInt8(120), UInt8(189), UInt8(167), UInt8(197)], Float64(Float32(31.0)), ((UInt64(81)&127)..=(UInt64(37)&127):((-88)|1))), ((UInt16(70)&127)..=(UInt16(194)&127):((-18)|1))) is Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)>);
        ([var3385, false, true, var4085, var4085, var181, false, true, true, false] as ((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>));
        ((UInt16(27)&127)..=(UInt16(52)&127):((-20)|1))
    } catch (e: Exception) { // block id: 4113
        ((UInt16(249)&127)..=(var1834&127):((96|1)))
    }
}

func func883(param884 : (UInt64) -> Range<UInt64>) : Bool { // block id: 887
    let var897 : Range<Int16> = ((Int16(Int16(-61))&127)..(Int16(Int8(UInt8(Int8(77))))&127):((Int64(UInt64(UInt32(30)))|1)));
    let var926 : Int32 = Int32(-40);
    var var933 : Range<UInt32> = ((UInt32(183)&127)..=(UInt32(UInt16(15))&127):((71|1)));
    if (true) { (Int32(-70), var897, UInt16(123), var910) } else { (var926, var897, UInt16(70), ((), var933, var159)) } [3][0];
    let var959 : ?Bool = ([((Int8(97)&127)..(Int8(42)&127):((-24)|1)), ((Int8(107)&127)..=(Int8(-120)&127):((-19)|1)), ((Int8(-5)&127)..(Int8(-128)&127):(54|1)), ((Int8(-78)&127)..=(Int8(-85)&127):(117|1)), ((Int8(86)&127)..(Int8(-90)&127):(76|1)), ((Int8(-120)&127)..=(Int8(86)&127):(109|1)), ((Int8(-55)&127)..(Int8(-52)&127):(124|1)), ((Int8(-81)&127)..(Int8(119)&127):((-39)|1)), ((Int8(57)&127)..(Int8(112)&127):((-121)|1)), ((Int8(20)&127)..=(Int8(48)&127):((-85)|1))] as Bool);
    var var982 : ?Bool = Option<Bool>.Some((() is Range<Int8>));
    let var1037 : ?(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>) = (Enum74.enumValue568(((Int16(12)&127)..(Int16(47)&127):((-101)|1)), ([UInt8(253), UInt8(231), UInt8(110), UInt8(140), UInt8(93), UInt8(124), UInt8(178), UInt8(28), UInt8(219), UInt8(133)], Float64((-77.0)), ((UInt64(37)&127)..=(UInt64(174)&127):(119|1))), Int16(-83), UInt32(137)) as (Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>));
    let var4128 : Array<(Int16, (Array<UInt8>, Float64, Range<UInt64>))> = [(Int16(Int16(71)), ([UInt8(155), UInt8(84), UInt8(107), UInt8(110), UInt8(227), UInt8(212), UInt8(102), UInt8(203), UInt8(73), UInt8(240)], Float64((-54.0)), ((UInt64(41)&127)..=(UInt64(237)&127):(40|1)))), (Int16(61), ([UInt8(81), UInt8(213), UInt8(52), UInt8(165), UInt8(37), UInt8(65), UInt8(169), UInt8(202), UInt8(49), UInt8(88)], 22.0, ((UInt64(234)&127)..=(UInt64(189)&127):(((-16)|1))))), (Int16(-33), ([UInt8(84), UInt8(75), UInt8(177), UInt8(213), UInt8(72), UInt8(60), UInt8(242), UInt8(240), UInt8(208), UInt8(45)], Float64(Float32(9.0)), ((UInt64(167)&127)..(UInt64(110)&127):((-82)|1)))), (Int16(Int8(-7)), ([UInt8(19), UInt8(99), UInt8(116), UInt8(237), UInt8(95), UInt8(106), UInt8(193), UInt8(158), UInt8(169), UInt8(236)], Float64(17.0), ((UInt64(116)&127)..(UInt64(69)&127):((47|1))))), (Int16(UInt16(68)), ([UInt8(105), UInt8(115), UInt8(247), UInt8(117), UInt8(135), UInt8(236), UInt8(204), UInt8(104), UInt8(203), UInt8(230)], (-58.0), ((UInt64(47)&127)..(UInt64(201)&127):((-81)|1)))), (Int16(3), ([UInt8(163), UInt8(244), UInt8(47), UInt8(188), UInt8(114), UInt8(228), UInt8(197), UInt8(75), UInt8(73), UInt8(114)], 117.0, ((UInt64(203)&127)..(UInt64(248)&127):(((-75)|1))))), (Int16(Int8(-18)), ([UInt8(112), UInt8(198), UInt8(40), UInt8(130), UInt8(94), UInt8(91), UInt8(151), UInt8(168), UInt8(80), UInt8(17)], (-17.0), ((UInt64(119)&127)..(UInt64(19)&127):(((-20)|1))))), (Int16(122), ([UInt8(150), UInt8(34), UInt8(69), UInt8(46), UInt8(136), UInt8(39), UInt8(8), UInt8(178), UInt8(170), UInt8(226)], Float64(Float32(-68.0)), ((UInt64(165)&127)..(UInt64(167)&127):(40|1)))), (Int16(7), ([UInt8(87), UInt8(218), UInt8(208), UInt8(173), UInt8(211), UInt8(208), UInt8(114), UInt8(218), UInt8(74), UInt8(173)], (-112.0), ((UInt64(87)&127)..=(UInt64(96)&127):((-11)|1)))), (Int16(97), ([UInt8(123), UInt8(2), UInt8(123), UInt8(23), UInt8(44), UInt8(5), UInt8(239), UInt8(80), UInt8(182), UInt8(143)], Float64(37.0), ((UInt64(91)&127)..=(UInt64(251)&127):((107|1)))))];
    let var4332 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(Int8(Int8(91))), UInt8(UInt8(UInt8(122))), UInt8(Int8(UInt8(164))), UInt8(UInt8(UInt8(126))), UInt8(73), UInt8(Int8(46)), UInt8(61), UInt8(226), UInt8(UInt8(179)), UInt8(124)], (-66.0), ((UInt64(129)&127)..(UInt64(234)&127):(43|1)));
    let var4373 : Unit = ();
    func func999(param1000 : (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>))) : Unit { // block id: 1001
        var var1057 : UInt8 = UInt8(191);
        let var1076 : UInt64 = UInt64(5);
        let var1094 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)) = (Int16(UInt8(251)), ([UInt8(Int8(21)), UInt8(Int8(-106)), UInt8(UInt8(8)), UInt8(UInt8(125)), UInt8(Int8(-46)), UInt8(126), UInt8(UInt8(154)), UInt8(39), UInt8(144), UInt8(UInt8(161))], (-87.0), ((UInt64(159)&127)..(UInt64(229)&127):((-102)|1))));
        var var1160 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)) = (Int16(UInt8(Int8(UInt8(44)))), ([UInt8(UInt8(30)), UInt8(UInt8(230)), UInt8(3), UInt8(UInt8(122)), UInt8(UInt8(72)), UInt8(61), UInt8(103), UInt8(123), UInt8(221), UInt8(Int8(111))], (-110.0), ((UInt64(2)&127)..(UInt64(35)&127):((-49)|1))));
        let var4257 : ?Array<Enum74> = (Option<Enum281>.None as Array<Enum74>);
        (if (if (true) { // block id: 1006
            ((UInt32(170)&127)..=(UInt32(241)&127):(70|1));
            ();
            false
        } else if (false) { // block id: 1011
            ((Int16(21)&127)..(Int16(21)&127):((-10)|1));
            var29;
            false
        } else { // block id: 1015
            ();
            var29;
            true
        }) { // block id: 1019
            Int32(64)
        } else { // block id: 1021
            var239 = var239;
            (-96) - var239;
            Int32(41)
        }, (var1037 ?? (var1050, param1000, ([UInt8(116), var1057, UInt8(10), UInt8(63), UInt8(121), var1057, UInt8(199), UInt8(162), UInt8(163), var1057], var1068, ((var1076&127)..=(var1076&127):((39|1)))), var514))[0], [(Int16(-2), ([UInt8(220), UInt8(239), UInt8(165), UInt8(132), UInt8(107), UInt8(41), UInt8(236), UInt8(67), UInt8(52), UInt8(199)], (-115.0), var1050)), var1094, var1094, (Int16(-34), var1123), var1094, var1160, (Int16(45), var1123), var1160, var1160, (var1192, var1123)][4][1], (try { // block id: 4120
            var1192;

            if (var181) { var4128 } else { var4128 }
        } finally { // block id: 4255
            var4257;
            [(var1192, var1123), var1094, var1160, var4267, var1094, (Int16(-21), ([UInt8(230), var2573, UInt8(36), var2147, UInt8(131), UInt8(196), UInt8(0), var1057, UInt8(80), var2573], var1068, ((UInt64(168)&127)..=(UInt64(240)&127):((var239|1))))), var4267, (Int16(-123), var1123), var4267, var1160]
        }|>func1198));
        let var4313 : Array<Bool> = [true, true, true, false, false, false, true, true, true, true];
        try (resource = Class1203()) { // block id: 4302
            var1942;
            try (resource = Class1203()) { // block id: 4305
                var1834 ^= var159
            } catch (_) { // block id: 4309
                var29
            }
        } finally { // block id: 4311
            var4313;
            match (var4317) {
                case _ : Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)> =>
                    Option<Enum281>.Some(Enum281.defaultValue);
                    if (true) { var4332 } else { (var2459, var1068, ((UInt64(175)&127)..=(var1076&127):((var2526|1)))) } ;
                    var2207

                case _ =>
                    ()

                case _ =>
                    var4373;
                    var var4377 : Float32 = Float32(Float32(Float32(45.0)));
                    var4377 /= Float32((Int32(Float32(76.0))) | 1);
                    var29

                case _ =>
                    ();
                    var29

                case _ =>
                    Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>.Some(var2681);
                    ()

            }
        }
    }
;
    var loopTimeVar4397 : Int64 = 0;
    do {
        loopTimeVar4397++;
        func999((((Int16(-82)&127)..(Int16(-1)&127):(109|1)), var396))
    } while (((match (UInt8(140)) {
        case _ =>
            UInt32(71) << ((UInt32(41)) & 7);
            if (var181) { var959 } else { var959 }

        case _ =>
            if (var181) { [((UInt8(172)&127)..(UInt8(129)&127):((-127)|1)), ((UInt8(64)&127)..=(UInt8(135)&127):((-20)|1)), ((UInt8(60)&127)..=(UInt8(98)&127):(26|1)), ((UInt8(105)&127)..=(UInt8(12)&127):((-77)|1)), ((UInt8(254)&127)..=(UInt8(3)&127):((-118)|1)), ((UInt8(4)&127)..(UInt8(149)&127):((-52)|1)), ((UInt8(103)&127)..(UInt8(234)&127):((-103)|1)), ((UInt8(232)&127)..(UInt8(99)&127):(56|1)), ((UInt8(37)&127)..=(UInt8(91)&127):((-95)|1)), ((UInt8(239)&127)..=(UInt8(118)&127):((-80)|1))] } else { var970 } ;
            Option<Bool>.Some(true)

        case 163 | 89 | 50 | 135 =>
            if (false) { Option<Bool>.Some(true) } else { var982 }

        case _ =>
            if (false) { Option<Bool>.Some(true) } else { var982 }

    } ?? [true, true, false, true, false, true, true, false, false, true][2])) && loopTimeVar4397 < 100 ) ;
    match (var2160) {
        case caseVar4402 : Rune =>
            ();
            var2207;
            var181

        case _ =>
            var3141;
            false

    }
}

public func func4414<T0, T1, T2>(param271 : UInt64) : Range<UInt64> { // block id: 272
    let var332 : Int8 = Int8(UInt8(Int8(Int8(Int8(84)))));
    try { // block id: 274
        var29;
        [((Int8(-54)&127)..(Int8(-96)&127):((-121)|1)), ((Int8(10)&127)..(Int8(44)&127):((-115)|1)), ((Int8(74)&127)..(Int8(-101)&127):((-42)|1)), ((Int8(-37)&127)..=(Int8(-107)&127):((-105)|1)), ((Int8(-4)&127)..(Int8(57)&127):(52|1)), ((Int8(15)&127)..=(Int8(-112)&127):((-63)|1)), ((Int8(-110)&127)..(Int8(-22)&127):(26|1)), ((Int8(90)&127)..(Int8(-12)&127):((-25)|1)), ((Int8(9)&127)..=(Int8(21)&127):(99|1)), ((Int8(66)&127)..(Int8(-3)&127):(85|1))][2];
        match (Enum281.defaultValue) {
            case defaultValue =>
                var var288 : UInt8 = UInt8(UInt8(UInt8(UInt8(UInt8(108)))));
                var288

            case defaultValue =>
                UInt8(138)

            case _ =>
                var var303 : UInt8 = UInt8(216);
                UInt8(142) + var303

        }
    } catch (e: Exception) { // block id: 305
        match (var308) {
            case caseVar312 : UInt32 =>
                ((UInt16(189)&127)..(UInt16(49)&127):((var239|1)));
                ();
                Int8(-41)

            case caseVar322 : Unit =>
                var var325 : Int8 = Int8(-92);
                var325

            case defaultValue =>
                var29;
                var332

            case _ =>
                (-36);
                Int8(-1) >> ((Int8(-17)) & 7)

        };
        func func345<T0>(namedParam346 ! : Range<UInt64>, optionalParam347 ! : Int16 = Int16(Int8(113))) : UInt8 { // block id: 350
            var354[7]
        }
;
        func345<Range<Int16>>(namedParam346 : ((param271&127)..(UInt64(89)&127):((var239|1))))
    };
    if (var181) { // block id: 391
        var332 % ((var332) | 1);
        var396
    } else if (false) { // block id: 441
        ();
        var396
    } else { // block id: 444
        var29;
        var var448 : UInt64 = UInt64(52);
        var448--;
        var396
    }[2][2]
}

func func879(param880 : Array<Unit>) : Bool { // block id: 881
    var var4412 : ((UInt64) -> Range<UInt64>) -> Bool = func883;
    func4414<Option<Range<Int64>>, Option<Bool>, Option<Aggregate841>>|>var4412
}

func func875(param876 : Range<UInt32>) : Bool { // block id: 877
    try { // block id: 4419
        var var4421 : Interface1206 = Class1203();
        var4421;
        [(), (), (), (), (), (), (), (), (), ()]
    } finally { // block id: 4424
        Enum74.enumValue2286;
        let var4428 : Unit = ();
        [var4428, (), (), (), (), var3141, var4428, var2207, var29, ()]
    }|>func879
}

public func func33(param34 : UInt64) : Int64 { // block id: 35
    let var95 : (Float32, UInt32, Unit, UInt64) = (Float32(-73.0), UInt32(UInt8(121)), (), UInt64(UInt16(Int8(-86))));
    let var122 : Array<Enum74> = Array<Enum74>(10){ i => Enum74.defaultValue };
    let var163 : UInt16 = UInt16(100);
    func func37(param38 : Unit, param39 : Int64, namedParam40 ! : Int8) : Int64 { // block id: 41
        let var51 : Enum43<UInt64, Aggregate841, Bool> = Enum43<UInt64, Aggregate841, Bool>.defaultValue;
        match (match (Int16(19)) {
                case 7 =>
                    var51

                case -88 =>
                    var51

                case _ =>
                    Enum43<UInt64, Aggregate841, Bool>.defaultValue

            }) {
            case caseVar62 : Bool =>
                var var65 : UInt8 = UInt8(220);
                var65;
                param38;
                param38

            case _ =>
                var29

        };
        let var78 : Bool = (UInt32(Int8(Int8(Int8(-8)))) is UInt16);
        if (match (if (var78) { Enum74.defaultValue } else { Enum74.defaultValue } ) {
            case _ =>
                var78

        }) { // block id: 89
            Float64(Float32(-55.0));
            var95[2]
        };
        var var148 : Int32 = Int32(UInt8(224));
        (match (var122[4]) {
            case defaultValue =>
                ();
                var148++;
                var var152 : Option<Int64> = (((UInt16(253)&127)..(UInt16(187)&127):(114|1)) as Int64);
                var152

            case _ =>
                var159 >>= ((var163) & 7);
                Option<Int64>.Some(param39)

        } ?? try { // block id: 168
            18
        } catch (_) { // block id: 170
            var var172 : UInt8 = UInt8(189);
            var172;
            var29;
            (-118)
        } finally { // block id: 176
            (-79)
        })
    }
;
    let var204 : Enum74 = Enum74.defaultValue;
    var loopTimeVar208 : Range<UInt64> = ((UInt64(UInt64(121))&127)..(UInt64(27)&127):((Int64(Int16(-66))|1)));
    var var228 : Enum225<UInt64, UInt8> = Enum225<UInt64, UInt8>.defaultValue;
    let var468 : UInt8 = UInt8(5);
    let var503 : UInt64 = UInt64(198);
    let var699 : Range<UInt32> = ((UInt32(UInt8(38))&127)..(UInt32(Int8(UInt8(UInt8(29))))&127):((Int64(UInt16(22))|1)));
    let var4641 : Range<Int8> = ((Int8(0)&127)..(Int8(Int8(53))&127):((Int64(Int64((-119)))|1)));
    let var4670 : ?Enum281 = Option<Enum281>.None;
    func func710(optionalParam711 ! : Array<Bool> = [false, false, false, true, false, false, true, false, false, false]) : Int8 { // block id: 713
        func func715(param716 : Range<Int16>, optionalParam717 ! : Enum74 = Enum74.enumValue568(((Int16(106)&127)..(Int16(-26)&127):((-84)|1)), ([UInt8(191), UInt8(Int8(60)), UInt8(UInt8(232)), UInt8(UInt8(156)), UInt8(152), UInt8(UInt8(203)), UInt8(Int8(-83)), UInt8(0), UInt8(Int8(-90)), UInt8(Int8(-119))], Float64(Float32(Float32(-6.0))), ((UInt64(101)&127)..(UInt64(UInt16(223))&127):((Int64(UInt64(178))|1)))), Int16(-18), UInt32(UInt8(87))), optionalParam751 ! : Int32 = Int32(45)) : Unit { // block id: 753
            let var762 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(13), UInt8(44), UInt8(121), UInt8(223), UInt8(23), UInt8(140), UInt8(21), UInt8(90), UInt8(45), UInt8(228)], (-40.0), ((UInt64(180)&127)..=(UInt64(107)&127):(17|1)));
            var loopTimeVar802 : Range<UInt64> = ((UInt64(97)&127)..(UInt64(Int32(UInt8(Int8(73))))&127):((Int64(UInt64(UInt64(175)))|1)));
            for (i in loopTimeVar802 where match (Option<Enum281>.Some(var674)) {
                case None =>
                    var762;
                    var503 == param34

                case caseVar772 =>
                    true

                case _ : (Float32, UInt32, Unit, UInt64) =>
                    var354;
                    var181

                case _ =>
                    var var784 : UInt64 = UInt64(196);
                    var784 &= var503;
                    true

            }) {
                var loopTimeVar793 : Range<UInt64> = ((UInt64(95)&127)..(UInt64(49)&127):(((-44)|1)));
                for (i in loopTimeVar793 where var181) {
                    Option<Range<Int64>>.None
                };
                if (var181) { Enum281.defaultValue } else { Enum281.defaultValue }
            };
            var loopTimeVar816 : Int64 = 0;
            while ((var181) && loopTimeVar816 < 100 ) {
                loopTimeVar816++;

            }
        }
;
        var var821 : Bool = false;
        func715(if (var821) { (((Int16(66)&127)..(Int16(-50)&127):((-96)|1)), var396) } else { var827 } [0]);
        var var869 : Int8 = Int8(Int8(UInt8(140)));
        let var4597 : Range<Int16> = ((Int16(-83)&127)..=(Int16(-93)&127):((-83)|1));
        let var4705 : Range<UInt32> = ((UInt32(55)&127)..(UInt32(19)&127):((-78)|1));
        if (var845.var848) { // block id: 850
            var var854 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            var854[8];
            var869 | Int8(107)
        } else if ((match (var4442) {
            case caseVar4574 =>
                ((UInt32(56)&127)..=(UInt32(50)&127):(((-35)|1)))

            case caseVar4582 =>
                var2573 /= ((UInt8(92)) | 1);
                var1658

            case _ =>
                var1658

        }|>func875)) { // block id: 4591
            var loopTimeVar4600 : Int64 = 0;
            while ((false) && loopTimeVar4600 < 100 ) {
                loopTimeVar4600++;
                ((95&127)..((-13)&127):((-105)|1));
                var4597
            };
            match {
                case var3385 =>
                if (var821) { Option<Enum225<UInt64, UInt8>>.Some(Enum225<UInt64, UInt8>.enumValue1823(Enum43<UInt64, Aggregate841, Bool>.enumValue2296(Enum225<UInt64, UInt8>.enumValue2300(Enum281.enumValue4611, var1192, [(var1192, var1123), (Int16(76), var1123), var4267, var4267, (var1192, var1123), var4267, (var1192, var1123), var4267, var4267, var4267]), var1192), ([((var1378&127)..=(Int8(30)&127):((var2526|1))), ((Int8(-77)&127)..(Int8(27)&127):((-24)|1)), var4641, ((var2165&127)..(var2165&127):((var2136|1))), ((Int8(-84)&127)..=(Int8(-116)&127):(27|1)), ((Int8(57)&127)..(Int8(-108)&127):((-55)|1)), ((var2165&127)..(Int8(24)&127):(((-57)|1))), var4641, ((Int8(37)&127)..(Int8(47)&127):((-27)|1)), ((Int8(40)&127)..(Int8(123)&127):((-108)|1))], ((var2827&127)..=(var2827&127):((var2136|1))), (((Int16(-105)&127)..(Int16(-108)&127):((-21)|1)), var396), var4670, UInt16(206), var196), Float32(-41.0))) } else { Option<Enum225<UInt64, UInt8>>.Some(Enum225<UInt64, UInt8>.enumValue4677(var4680)) } ;
                var869 ^ var869
                case _ =>
                if (var821) { var1942 } else { var1942 } ;
                Int8(91)
            }
        } else { // block id: 4693
            Float64((-75.0));
            var4698 = Int16(-7);
            match (((), var4705, var1834)) {
                case _ =>
                    ();
                    Int8(90)

                case _ : UInt32 =>
                    var821 &&= true;
                    Int8(26)

                case _ : Option<Bool> =>
                    UInt8(31);
                    if (var181) { var1123 } else { ([UInt8(110), UInt8(200), UInt8(154), UInt8(199), UInt8(141), UInt8(151), UInt8(92), UInt8(47), UInt8(37), UInt8(205)], (-100.0), ((UInt64(193)&127)..=(UInt64(235)&127):((-71)|1))) } ;
                    Int8(62) & Int8(-23)

                case _ =>
                    Option<((Array<UInt8>, Float64, Range<UInt64>), (Float32, UInt32, Unit, UInt64), Int8, Range<Int32>)>.Some(var4739);
                    var869

                case _ =>
                    var1378

            }
        }
    }
;
    func func264(namedParam265 ! : Float64) : Int8 { // block id: 266
        try { // block id: 268
            param34|>func270
        } finally { // block id: 455
            [var460, var460, ((UInt8(96)&127)..(UInt8(7)&127):(62|1)), ((UInt8(118)&127)..(UInt8(148)&127):(67|1)), ((UInt8(183)&127)..=(UInt8(179)&127):((-96)|1)), ((var468&127)..=(var468&127):((37|1))), ((UInt8(169)&127)..=(UInt8(147)&127):(7|1)), var460, ((UInt8(194)&127)..(UInt8(197)&127):(53|1)), var460][8];
            let var481 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(113), UInt8(65), UInt8(59), UInt8(219), UInt8(253), UInt8(46), UInt8(132), UInt8(225), UInt8(136), UInt8(108)], 62.0, ((UInt64(104)&127)..(UInt64(UInt32(50))&127):(((-45)|1))));
            (var481, (Float32(23.0), UInt32(178), (), UInt64(168)), Int8(-99), ((Int32(-99)&127)..(Int32(106)&127):((var239|1))))[1];
            ((var503&127)..(param34&127):(((-112)|1)))
        };
        var var522 : Int8 = Int8(UInt8(102));
        var var532 : Array<Bool> = [false, false, true, false, false, false, false, false, true, false];
        var var630 : UInt8 = UInt8(UInt8(UInt8(Int8(29))));
        var var652 : Unit = ();
        if (try { // block id: 511
            [var514, var514, ((Int8(8)&127)..=(Int8(97)&127):((-18)|1)), ((Int8(-90)&127)..(Int8(20)&127):(107|1)), var514, ((var522&127)..=(Int8(-95)&127):((39|1))), ((Int8(-11)&127)..=(Int8(43)&127):((-113)|1)), var514, var514, ((Int8(38)&127)..=(Int8(-103)&127):((-111)|1))];
            var532
        } catch (e: Exception) { // block id: 534
            var532
        } finally { // block id: 536
            ((var522&127)..(Int8(-95)&127):((var239|1)));
            var29;
            var532
        }[0]) { (try { // block id: 550
            ();
            var var588 : Int16 = Int16(UInt8(Int8(96)));
            var var597 : (Array<UInt8>, Float64, Range<UInt64>) = ([UInt8(235), UInt8(219), UInt8(41), UInt8(222), UInt8(103), UInt8(58), UInt8(93), UInt8(40), UInt8(132), UInt8(194)], Float64(Float32(Float32(35.0))), ((UInt64(99)&127)..(UInt64(239)&127):((-72)|1)));
            let var617 : Range<Int16> = ((Int16(19)&127)..=(Int16(94)&127):((6|1)));
            if (true) { [var204, Enum74.enumValue131((-23)), Enum74.enumValue131(76), Enum74.enumValue131(107), Enum74.defaultValue, Enum74.defaultValue, var204, var204, var204, Enum74.enumValue568(((Int16(-117)&127)..=(Int16(-64)&127):(46|1)), (var354, (-125.0), var578), var588, var196)] } else { [Enum74.enumValue568(((Int16(9)&127)..=(Int16(-71)&127):((-44)|1)), var597, Int16(-52), UInt32(51)), var204, Enum74.enumValue131(var239), var204, Enum74.defaultValue, var204, Enum74.defaultValue, Enum74.defaultValue, var204, Enum74.enumValue568(var617, ([var468, var468, UInt8(140), UInt8(85), UInt8(58), var630, var468, UInt8(209), UInt8(35), var630], namedParam265, ((UInt64(250)&127)..=(UInt64(101)&127):((-94)|1))), Int16(113), var196)] } ;
            let var646 : ?Enum281 = (false as Enum281);
            if (var181) { var646 } else { var646 }
        } catch (_) { // block id: 650
            var652;
            var655
        } finally { // block id: 658
            ();
            Option<Enum281>.Some(Enum281.defaultValue)
        } ?? Enum281.defaultValue) } else { func664((Option<Range<Int64>>.None ?? ((var239&127)..(var239&127):((var239|1)))), optionalParam666 : if (var181) { r'O' } else { r'f' } , optionalParam668 : Float64(Float32(53.0)), optionalParam670 : if (false) { ((UInt32(114)&127)..=(UInt32(233)&127):((var239|1))) } else { var699 } ) } ;
        func710()
    }
;
    func37(for (i in loopTimeVar208 where if (var181) { // block id: 184
        ();
        ();
        var var189 : Int32 = Int32(-13);
        var189 < var189
    } else { // block id: 192
        var29;
        var196 |= var196;
        false
    }) {
        if (var181) { var204 } else { var204 } ;
        var29
    }, (if (true) { var219 } else { Option<Int64>.Some((-50)) }  ?? match (var228) {
        case defaultValue =>
            UInt8(187);
            var196 += UInt32(180);
            var239 ** (30 & 3)

        case defaultValue =>
            ((66&127)..=(87&127):(27|1));
            ();
            var239 / ((var239) | 1)

        case caseVar252 : Range<UInt64> =>
            ((Int8(82)&127)..=(Int8(106)&127):(73|1));
            var var258 : Int64 = 24;
            86 ^ var258

        case _ =>
            var239

    }), namedParam40 : func264(namedParam265 : var1936))
}

main(): Int64 {
    try {
        var var19 : Bool = (r't' is Float64);
        if (try { // block id: 7
            var var10 : Float32 = Float32(101.0);
            var10 = var10;
            var var14 : Bool = (UInt16(102) is Int8);
            var14
        } catch (e: Exception) { // block id: 17
            var19
        } finally { // block id: 22
            Float32(86.0) < Float32(-124.0)
        }) { // block id: 26
            42.0;
            var29
        };
        var29;
        var4768|>func33
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var159*var159), 64)
        crccheck.updateBuffer(UInt64(var196*var196), 64)
        crccheck.updateBuffer(UInt64(var239*var239), 64)
        crccheck.updateBuffer(UInt64(var1192*var1192), 64)
        crccheck.updateBuffer(UInt64(var1378*var1378), 64)
        crccheck.updateBuffer(UInt64(var1834*var1834), 64)
        crccheck.updateBuffer(UInt64(var2136*var2136), 64)
        crccheck.updateBuffer(UInt64(var2147*var2147), 64)
        crccheck.updateBuffer(UInt64(var2165*var2165), 64)
        crccheck.updateBuffer(UInt64(var2526*var2526), 64)
        crccheck.updateBuffer(UInt64(var2573*var2573), 64)
        crccheck.updateBuffer(UInt64(var2827*var2827), 64)
        crccheck.updateBuffer(UInt64(var4698*var4698), 64)
        crccheck.updateBuffer(UInt64(var4768*var4768), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0, T1> Enum225<T0, T1> {

}

extend Class1203 {
    public static func func1347(param1348 : Int64, namedParam1349 ! : Array<Enum74>) : Unit { // block id: 1350
        try (resource = Class1203()) { // block id: 1352
            try (resource = Class1203()) { // block id: 1354
                var196 %= ((var196) | 1)
            } finally { // block id: 1358
                var219;
                var196 /= ((var196) | 1)
            }
        } finally { // block id: 1363
            (var1370 ?? var29);
            (var29, var1378, [(), var29, var29, (), (), var29, var29, var29, (), ()], var29, Int32(60), var514, var1396, var1068)[3]
        };
        func func1401() : Unit { // block id: 1402
            var var1859 : ((Float32, UInt32, Unit, UInt64)) -> (Array<Range<Int8>>, Range<Int32>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), Option<Enum281>, UInt16, UInt32) = { lambdaParameter1862 : (Float32, UInt32, Unit, UInt64) => ([((Int8(72)&127)..(Int8(88)&127):(100|1)), ((Int8(42)&127)..=(Int8(37)&127):((-123)|1)), ((Int8(109)&127)..(Int8(2)&127):((74|1))), ((Int8(71)&127)..(Int8(101)&127):((6|1))), ((Int8(61)&127)..(Int8(-61)&127):(81|1)), ((Int8(-109)&127)..(Int8(-97)&127):(67|1)), ((Int8(-66)&127)..(Int8(120)&127):(((-6)|1))), ((Int8(-122)&127)..=(Int8(-98)&127):(((-98)|1))), ((Int8(-7)&127)..(Int8(-41)&127):(((-116)|1))), ((Int8(-64)&127)..=(Int8(75)&127):((-30)|1))], ((Int32(68)&127)..(Int32(112)&127):((Int64(UInt64(134))|1))), (((Int16(95)&127)..=(Int16(-93)&127):((78|1))), (Int32(126), ((UInt64(116)&127)..(UInt64(113)&127):(76|1)), ([UInt8(122), UInt8(211), UInt8(146), UInt8(101), UInt8(153), UInt8(147), UInt8(83), UInt8(82), UInt8(205), UInt8(231)], 31.0, ((UInt64(119)&127)..(UInt64(74)&127):(72|1))), ((UInt16(247)&127)..(UInt16(141)&127):((92|1))))), (Int8(91) as Enum281), UInt16(67), UInt32(14)) };
            (((UInt64(43)&127)..(UInt64(146)&127):((-33)|1))|>(func1916~>var1859))[3];
            var loopTimeVar1961 : Int64 = 0;
            while (((try { // block id: 1933
                // var1936 %= Float64((Int32(114.0)) | 1);
                ();
                var1942
            } finally { // block id: 1944
                ();
                var1942
            } ?? try { // block id: 1948
                ((param1348&127)..(20&127):((var239|1)));
                true && true
            } catch (e: Exception) { // block id: 1956
                ();
                var181
            })) && loopTimeVar1961 < 100 ) {
                loopTimeVar1961++;

            }
        }
;
        func1401();
        var var2006 : (Int32, Range<Int16>, UInt16, (Unit, Range<UInt32>, UInt16)) = (Int32(Int16(66)), ((Int16(UInt8(UInt8(171)))&127)..=(Int16(-98)&127):((8|1))), UInt16(173), ((), ((UInt32(4)&127)..=(UInt32(101)&127):(90|1)), UInt16(122)));
        var loopTimeVar2034 : Int64 = 0;
        do {
            loopTimeVar2034++;

        } while ((match ((Option<Enum225<UInt64, UInt8>>.None ?? Enum225<UInt64, UInt8>.defaultValue)) {
            case enumValue1823(defaultValue, (_,caseVar1973,(_ : Aggregate841,(_,caseVar1974 : Float32,(_,caseVar1975 : Int64,caseVar1976 : Option<(Range<UInt64>, (Range<Int16>, (Int32, Range<UInt64>, (Array<UInt8>, Float64, Range<UInt64>), Range<UInt16>)), (Array<UInt8>, Float64, Range<UInt64>), Range<Int8>)>),_ : Range<Int64>)),None,caseVar1977,caseVar1978), caseVar1979) =>
                ();
                true

            case caseVar1985 =>
                var var1988 : Unit = ();
                var1988;
                (-94) > var239

            case enumValue1823(defaultValue, (_,caseVar1995,(caseVar1996 : (Int16, (Array<UInt8>, Float64, Range<UInt64>)),(caseVar1997,caseVar1998 : Option<Int64>,(_,caseVar1999,_),_ : Array<UInt8>)),_,caseVar2000 : Enum281,_ : Range<Int64>), _ : Range<UInt16>) =>
                ();
                if (var181) { var2006 } else { var2006 } ;
                false

            case caseVar2025 =>
                true

            case _ =>
                Int32(-74);
                var181

        }) && loopTimeVar2034 < 100 )
    }

}
// ASSERT: scan sema_unreachable_pattern
// ASSERT: scan chir_typecast_overflow
// ASSERT: scan chir_dce_unused_expression
// ASSERT: scan chir_arithmetic_operator_overflow
// ASSERT: scan chir_dce_unused_variable
// ASSERT: scan chir_dce_unused_operator


