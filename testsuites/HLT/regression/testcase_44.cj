/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var39 : ?(String, Interface14, Float64, Int64, Rune) = (("""
m./z0
.J5H)
""", Class7(), 11.0, Int64(Int8(Int8(96))), r'O') as (String, Interface14, Float64, Int64, Rune))
public var var53 : Float64 = Float64(Float32(Float32(-32.0)))
public let var58 : Int64 = 12
public var var140 : UInt64 = UInt64(Int8(-25))
public let var149 : Unit = ()
public let var153 : Bool = (Int32(UInt8(37)) is Interface10<Range<UInt32>, Range<Int16>>)
public var var159 : Interface11 = Class7()
public var var222 : Bool = (((UInt8(121)&127)..(UInt8(86)&127):((Int64(Int8(-43))|1))) is UInt32)
public var var284 : String = """
/V1L]
?Ub!F
"""
public var var337 : UInt64 = UInt64(147)
public let var392 : Int16 = Int16(-63)
public let var426 : Range<UInt64> = ((UInt64(UInt16(190))&127)..=(UInt64(Int8(31))&127):((28|1)))
public let var482 : UInt16 = UInt16(Int8(14))
public let var530 : Class7 = Class7()
public var var545 : Interface13 = Class7()
public var var601 : (Unit, Bool, Int8, Range<Int32>) = ((), (UInt16(UInt8(103)) is (Interface10<Range<UInt32>, Range<Int16>>, Bool) -> Unit), Int8(69), ((Int32(46)&127)..(Int32(-90)&127):((-92)|1)))
public var var622 : UInt16 = UInt16(UInt16(Int16(Int8(-109))))
public var var727 : UInt32 = UInt32(Int16(UInt16(217)))
public var var737 : UInt8 = UInt8(16)
let var777 : Array<Bool> = [true, false, true, true, false, true, true, false, true, false]
public let var802 : Unit = ()
public var var813 : ?Interface14 = (r'n' as Interface14)
public let var824 : Bool = ((Float32(Float32(Float32(3.0))), Int64(Int64(UInt16(105))), UInt64(56), "n${var284}g.0Y7${var284}!=KW", [(), (), (), (), (), (), (), (), (), ()], r'V', Float64(Float32(-1.0)), UInt32(10)) is (Unit, Bool, Int8, Range<Int32>))
public let var955 : Int32 = Int32(Int32(116))
public var var998 : Range<UInt32> = ((UInt32(Int16(Int16(39)))&127)..(UInt32(Int32(27))&127):((Int64(UInt32(UInt16(Int8(120))))|1)))
public let var1021 : UInt32 = UInt32(UInt8(UInt8(Int8(87))))
public var var1041 : ??Bool = (((UInt64(UInt32(168))&127)..(UInt64(UInt16(96))&127):((Int64(Int32(41))|1))) as Option<Bool>)
public var var1054 : ?Bool = Option<Bool>.None
public let var1068 : Bool = ((false, (((UInt16(149)&127)..(UInt16(72)&127):(((-103)|1))) is Interface11), [UInt16(64), UInt16(180), UInt16(Int8(-65)), UInt16(Int16(44)), UInt16(181), UInt16(113), UInt16(UInt16(207)), UInt16(Int8(118)), UInt16(137), UInt16(UInt8(197))], [UInt16(0), UInt16(236), UInt16(73), UInt16(10), UInt16(206), UInt16(59), UInt16(197), UInt16(117), UInt16(12), UInt16(111)], [true, false, ([(), (), (), (), (), (), (), (), (), ()] is Bool), (Option<Option<Bool>>.None is (Range<Int32>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Unit, Bool, Int8, Range<Int32>), Range<Int16>, String, Int16, Range<UInt8>, Array<Bool>)), true, ((Float32(37.0), (-81), UInt64(115), ###"Ljt?2*[9Z3"###, [(), (), (), (), (), (), (), (), (), ()], r's', (-13.0), UInt32(90)) is Class7), true, false, ([UInt16(9), UInt16(42), UInt16(189), UInt16(184), UInt16(32), UInt16(36), UInt16(7), UInt16(203), UInt16(246), UInt16(159)] is Array<UInt16>), (((34&127)..=((-119)&127):(65|1)) is Int8)]) is (UInt8) -> String)
public var var1145 : Int64 = Int64(12)
public var var1227 : Rune = r'w'
public var var1244 : Range<UInt16> = ((UInt16(205)&127)..(UInt16(UInt16(71))&127):((39|1)))
public let var1272 : Range<Int32> = ((Int32(Int16(UInt16(190)))&127)..(Int32(-4)&127):((Int64(UInt16(UInt8(Int8(111))))|1)))
public let var1315 : (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>) = (true, ("""
f?vaU
TH(${var284}}%
""" is ((Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>), Range<UInt32>, Option<Option<Option<Bool>>>) -> Interface11), [UInt16(Int8(Int8(-75))), UInt16(105), UInt16(UInt8(UInt8(109))), UInt16(220), UInt16(UInt8(123)), UInt16(UInt16(112)), UInt16(77), UInt16(201), UInt16(UInt8(226)), UInt16(205)], [UInt16(151), UInt16(25), UInt16(242), UInt16(18), UInt16(25), UInt16(225), UInt16(167), UInt16(153), UInt16(104), UInt16(195)], [false, false, (("dO${var284},EyB${var284}*<5J", Class7(), 31.0, 99, r'o') is Array<Range<UInt32>>), (([false, false, true, true, false, false, true, true, true, true] as Bool) is (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)), ([Int8(-93), Int8(-56), Int8(-10), Int8(94), Int8(110), Int8(96), Int8(112), Int8(-36), Int8(-107), Int8(118)] is (Unit, Unit, Range<Int8>) -> Bool), true, false, true, (((UInt32(29)&127)..(UInt32(36)&127):((13|1))) is Array<Unit>), true])
public var var1397 : ?Int16 = (UInt64(99) as Int16)
public let var1419 : UInt64 = UInt64(UInt32(163))
public let var1438 : Unit = ()
public var var1480 : Int8 = Int8(121)
public var var1485 : Int32 = Int32(Int16(Int8(120)))
public var var1494 : Int64 = Int64(UInt16(Int8(Int8(104))))
public var var1504 : Array<Option<Bool>> = Array<Option<Bool>>(10){ i => (((Int32(UInt16(200))&127)..(Int32(82)&127):((Int64(UInt32(14))|1))) as Bool) }
public var var1537 : ???Bool = (((UInt8(47)&127)..=(UInt8(92)&127):((-6)|1)) as Option<Option<Bool>>)
var var1551 : ?Unit = (UInt8(155) as Unit)
public let var1597 : Array<Option<Int16>> = Array<Option<Int16>>(10){ i => Option<Int16>.None }
public let var1633 : ?Int16 = (Int32(Int16(-108)) as Int16)
public var var1641 : Int16 = Int16(-108)
public let var1667 : ?Bool = Option<Bool>.None
public let var1675 : ?Bool = Option<Bool>.None
public var var1688 : Float32 = Float32(Float32(-58.0))
public var var1730 : UInt16 = UInt16(UInt16(Int16(75)))
public let var1764 : Range<Int64> = (((-3)&127)..((-35)&127):(93|1))
public let var1947 : UInt32 = UInt32(237)
public let var2049 : Range<Int64> = (((-121)&127)..=(98&127):((-105)|1))
public var var2077 : (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)) = (Int64(UInt16(Int8(Int8(-56)))), (Float32(Float32(Float32(1.0))), (-105), UInt64(UInt8(43)), "?^XLAi*_)j", [(), (), (), (), (), (), (), (), (), ()], r'p', Float64(Float32(Float32(97.0))), UInt32(76)))
public var var2160 : Int8 = Int8(Int8(Int8(-35)))
let var2182 : UInt64 = UInt64(168)
public var var2198 : Int64 = (-71)
public let var2314 : ?Rune = (Class7() as Rune)
public let var2320 : (UInt16, Class7, Int64, Array<Int8>) = (UInt16(Int16(Int16(-45))), Class7(), Int64(UInt8(Int8(71))), [Int8(15), Int8(-70), Int8(92), Int8(19), Int8(51), Int8(-37), Int8(73), Int8(-76), Int8(-86), Int8(107)])
public var var2340 : Option<Array<Option<Int16>>> = (((Int32(104)&127)..(Int32(-73)&127):(90|1)) as Array<Option<Int16>>)
let var2345 : ?Int16 = (((() as Interface14) as (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)) as Int16)
public let var2364 : UInt16 = UInt16(UInt8(UInt8(UInt8(3))))
public var var2408 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) = (Float32(-98.0), Int64(Int8(50)), UInt64(UInt32(UInt32(7))), "o${var284}zq7BR${var284}]M${var284}RR", [(), (), (), (), (), (), (), (), (), ()], r'B', 101.0, UInt32(217))
var var2470 : (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>) = (false, false, [UInt16(UInt8(100)), UInt16(75), UInt16(Int8(UInt8(86))), UInt16(241), UInt16(207), UInt16(15), UInt16(182), UInt16(Int16(Int8(2))), UInt16(UInt8(Int8(20))), UInt16(195)], [UInt16(197), UInt16(252), UInt16(82), UInt16(16), UInt16(208), UInt16(22), UInt16(53), UInt16(208), UInt16(60), UInt16(86)], [false, true, true, false, true, true, true, false, false, true])
let var2508 : (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32) = (UInt16(129), (Int64(UInt64(112)), (Float32(Float32(78.0)), (-90), UInt64(51), ###"2${var284}?&a{AbARP<${var284}"###, [(), (), (), (), (), (), (), (), (), ()], r'o', Float64((-48.0)), UInt32(174))), (Float32(Float32(111.0)), 29, UInt64(147), "#${var284}\\|${var284}]H\"QzE.", [(), (), (), (), (), (), (), (), (), ()], r'l', Float64(Float32(-12.0)), UInt32(UInt8(149))), [true, false, false, false, true, false, true, true, false, false], (((UInt32(245)&127)..=(UInt32(UInt32(1))&127):((101|1))) as Interface14), Int32(72))
public let var2601 : UInt64 = UInt64(Int16(63))
let var2606 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
let var2612 : Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)> = ((((72, (Float32(-77.0), 13, UInt64(84), "x2Up1!<''${var284} ", [(), (), (), (), (), (), (), (), (), ()], r's', 79.0, UInt32(228))) as Bool) as Array<Option<Int16>>) as (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>))
var var2654 : Interface14 = Class7()
public let var2712 : UInt32 = UInt32(UInt8(Int8(26)))
public let var2724 : Int16 = Int16(Int8(84))
public var var2739 : Bool = (Class7() is Array<Option<Bool>>)
public var var2951 : ??Int8 = (((UInt8(11)&127)..(UInt8(51)&127):(((-126)|1))) as Option<Int8>)
public let var2958 : ?Int8 = (((UInt16(175) as Option<Option<Bool>>) as Interface10<Range<UInt32>, Range<Int16>>) as Int8)
public var var3048 : (Range<Int16>, Int32) = (((Int16(-69)&127)..=(Int16(-77)&127):(125|1)), Int32(-18))
public var var3076 : UInt8 = UInt8(Int8(-101))
public let var3171 : (Range<Int16>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Range<Int32>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Unit, Bool, Int8, Range<Int32>), Range<Int16>, String, Int16, Range<UInt8>, Array<Bool>), Range<Int16>, Unit, Float32, Int8, Range<UInt64>, Range<UInt32>) = (((Int16(34)&127)..=(Int16(92)&127):((-2)|1)), ((-117), (Float32(-63.0), 40, UInt64(UInt32(79)), "gr~a${var284}>\\+Ig>", [(), (), (), (), (), (), (), (), (), ()], r'n', (-40.0), UInt32(169))), (((Int32(27)&127)..(Int32(-49)&127):(((-86)|1))), (Int64(Int8(-5)), (Float32(4.0), 14, UInt64(190), "E${var284}D${var284},%Iz#$${var284}j-", [(), (), (), (), (), (), (), (), (), ()], r'a', 35.0, UInt32(174))), ((), (r'p' is (Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>) -> (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)), Int8(-104), ((Int32(120)&127)..(Int32(93)&127):(((-97)|1)))), ((Int16(6)&127)..=(Int16(-44)&127):((-46)|1)), ###"H${var284}Ow/IOv.5s${var284}"###, Int16(-120), ((UInt8(167)&127)..=(UInt8(121)&127):((Int64(UInt16(59))|1))), [(UInt8(25) is Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>), (Option<Unit>.None is (Option<Option<Option<Bool>>>) -> Interface13), false, ((Float32(-4.0), 28, UInt64(178), "b&XkJ${var284}K/6!${var284}5", [(), (), (), (), (), (), (), (), (), ()], r'7', 58.0, UInt32(200)) is Range<UInt8>), true, (Option<Option<Option<Bool>>>.None is (Range<Int16>, Int32)), ([Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None] is Option<Int16>), true, (Option<Option<Option<Bool>>>.None is (UInt64) -> (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)), ((-49) is Int16)]), ((Int16(-87)&127)..(Int16(-16)&127):((-64)|1)), (), Float32(Float32(Float32(101.0))), Int8(20), ((UInt64(UInt32(52))&127)..(UInt64(215)&127):((Int64(Int32(UInt16(28)))|1))), ((UInt32(UInt32(Int16(-48)))&127)..=(UInt32(UInt16(48))&127):((Int64(Int8(UInt8(120)))|1))))
public var var3338 : ?Interface10<Range<UInt32>, Range<Int16>> = (((UInt32(179)&127)..=(UInt32(124)&127):((24|1))) as Interface10<Range<UInt32>, Range<Int16>>)
var var3502 : Interface12 = Class7()
public interface Interface13 {
    func func64(namedParam65 ! : Float64) : Bool { // block id: 66
        try { // block id: 68
            (Option<Bool>.None ?? false)
        } finally { // block id: 76
            var1054|>func78;
            (var1054 ?? var2739)
        }
    }

}

public interface Interface14 <: Interface13 {

}

public interface Interface12 <: Interface13 & Interface14 {
    func func1375(namedParam1376 ! : Option<Option<Option<Bool>>>, namedParam1377 ! : (UInt8) -> Interface14) : Bool { // block id: 1380
        Int32(([Option<Int16>.Some(Int16(-114)), Option<Int16>.Some(Int16(-26)), Option<Int16>.Some(var392), var1397, var1397, var1397, var1397, var1397, var1397, Option<Int16>.None][5] ?? (Option<Int16>.Some(var392) ?? Int16(-41))));
        var var1445 : (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)) = ((-43), (Float32(Float32(103.0)), Int64(UInt8(27)), UInt64(Int16(-4)), "<rv$s-X pi", [(), (), (), (), (), (), (), (), (), ()], r'B', Float64(Float64((-102.0))), UInt32(UInt16(5))));
        let var1471 : Int8 = Int8(-53);
        match (try { // block id: 1413
                let var1424 : Range<UInt64> = ((UInt64(53)&127)..=(UInt64(165)&127):(27|1));
                if (var1068) { ((UInt64(109)&127)..=(var1419&127):((var58|1))) } else { var1424 }
            } catch (e: Exception) { // block id: 1426
                if (false) { var426 } else { ((UInt64(98)&127)..=(UInt64(180)&127):((108|1))) }
            }) {
            case _ =>
                var1438

            case caseVar1442 =>
                var1445;
                var337 -= var337

            case _ =>
                [Int8(110), var1471, Int8(90), var1471, Int8(83), Int8(-8), Int8(-29), var1471, var1480, var1471];
                var1485 <<= ((Int32(-86)) & 7)

        };
        let var1533 : (Array<Option<Bool>>) -> Int64 = func1141;
        try { // block id: 1492
            var1494
        } finally { // block id: 1499
            68
        } < (func1141(var1504) & (var1504|>var1533))
    }
;
    func func1774(namedParam1775 ! : UInt32, namedParam1776 ! : UInt8, namedParam1777 ! : UInt8, namedParam1778 ! : Rune) : Range<Int64> { // block id: 1779
        var1494 &= (-75);
        var loopTimeVar1908 : Int64 = 0;
        let var1921 : Bool = (((Int32(-47)&127)..=(Int32(125)&127):((-76)|1)) is Float64);
        match (while ((true) && loopTimeVar1908 < 100 ) {
                loopTimeVar1908++;
                let var1788 : (Bool, (Range<Int32>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Unit, Bool, Int8, Range<Int32>), Range<Int16>, String, Int16, Range<UInt8>, Array<Bool>), Range<UInt16>, Float32, Interface11, Range<Int8>, Int32, (Range<Int16>, Int32), Range<Int32>) = (((26, (Float32(89.0), 81, UInt64(242), """
(]a{BY
KpYs6
""", [(), (), (), (), (), (), (), (), (), ()], r'j', 75.0, UInt32(213))) is (Class7) -> Bool), (((Int32(UInt8(129))&127)..(Int32(Int32(39))&127):(((-96)|1))), (Int64(UInt32(225)), (Float32(38.0), 126, UInt64(181), "PYfLKebFD$", [(), (), (), (), (), (), (), (), (), ()], r'B', 109.0, UInt32(162))), ((), (Int32(94) is (Array<Option<Bool>>) -> Int64), Int8(109), ((Int32(-43)&127)..=(Int32(113)&127):(((-69)|1)))), ((Int16(87)&127)..=(Int16(Int16(124))&127):((Int64(UInt64(9))|1))), ###"&,0V,6$M*~"###, Int16(Int16(UInt8(167))), ((UInt8(39)&127)..(UInt8(UInt8(244))&127):((124|1))), [(((Int8(39)&127)..=(Int8(-100)&127):(((-115)|1))) is String), false, ((-8.0) is Bool), ([Option<Int16>.Some(Int16(47)), Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(Int16(122)), Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(Int16(21)), Option<Int16>.Some(Int16(-58))] is Array<Bool>), true, false, (Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>.None is Bool), false, ((Float32(-5.0), (-25), UInt64(48), """
yh-*
p![@,
""", [(), (), (), (), (), (), (), (), (), ()], r'F', (-96.0), UInt32(163)) is Float64), false]), ((UInt16(213)&127)..(UInt16(251)&127):(11|1)), Float32(Float32(-45.0)), Class7(), ((Int8(123)&127)..=(Int8(-86)&127):((-111)|1)), Int32(Int32(UInt8(34))), (((Int16(UInt8(213))&127)..(Int16(UInt16(7))&127):((113|1))), Int32(14)), ((Int32(64)&127)..=(Int32(90)&127):(((-8)|1))));
                var1788;
                var149
            }) {
            case () =>
                var955;
                var727 &= UInt32(93)

            case _ =>
                var222 &&= var1921

        };
        (try { // block id: 1933
            if (false) { var1667 } else { Option<Bool>.None } ;
            ((var737&127)..(UInt8(53)&127):((var1494|1)))
        } finally { // block id: 1942
            UInt32(76);
            ((UInt8(83)&127)..(UInt8(181)&127):(115|1))
        }|>func1927<Option<Interface10<Range<UInt32>, Range<Int16>>>, Bool>)[4]
    }
;
    func func64(namedParam65 ! : Float64) : Bool { // block id: 66
        try { // block id: 68
            (Option<Bool>.None ?? false)
        } finally { // block id: 76
            var1054|>func78;
            (var1054 ?? var2739)
        }
    }

}

public interface Interface11 <: Interface12 {
    func func244() : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) { // block id: 245
        var var274 : Unit = ();
        var var302 : Float32 = Float32(Float32(-73.0));
        let var312 : UInt32 = UInt32(Int32(-28));
        var var358 : UInt16 = UInt16(116);
        try { // block id: 247
            match (var149) {
                case caseVar252 : Int32 =>
                    var149;
                    caseVar252 * Int32(59);
                    var149

                case caseVar261 : Option<Bool> =>
                    ((Int32(13)&127)..(Int32(118)&127):(110|1));
                    var var266 : Int64 = Int64(Int32(-64));
                    var266 -= var266;
                    ()

                case _ =>
                    var274;
                    ()

            };
            if (true) { (Float32(34.0), (-42), UInt64(138), var284, [var274, var149, (), (), var149, var149, (), (), var149, var274], r'H', (-38.0), UInt32(239)) } else { (var302, var58, var140, "y}vBv*`#la", [(), (), (), (), (), (), (), (), (), ()], r'L', var53, var312) }
        } catch (e: Exception) { // block id: 315
            try { // block id: 317
                var149;
                if (var153) { (Float32(-16.0), (-26), var140, var284, [(), (), (), (), (), (), (), (), (), ()], r'2', 68.0, var312) } else { (Float32(-65.0), 56, var337, """
?+qq,
'AjIy
""", [var274, (), (), (), var274, (), (), (), var274, ()], r'L', (-34.0), var312) }
            } finally { // block id: 354
                var149;
                var358 >>= ((UInt16(31)) & 7);
                let var367 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                var var370 : Rune = r'H';
                (Float32(-36.0), var58, UInt64(211), "&zbu!zl)Z#", var367, var370, var53, UInt32(26))
            }
        }
    }

}

public interface Interface10<T0, T1> <: Interface11 & Interface14 {
    func func549(param550 : Unit, namedParam551 ! : Unit, namedParam552 ! : Range<Int8>) : Bool { // block id: 553
        true
    }
;
    func func64(namedParam65 ! : Float64) : Bool { // block id: 66
        try { // block id: 68
            (Option<Bool>.None ?? false)
        } finally { // block id: 76
            var1054|>func78;
            (var1054 ?? var2739)
        }
    }

}

public open class Class7 <: Interface10<Range<UInt32>, Range<Int16>> & Interface13 & Resource {
    public init() { // block id: 9

    }
;
    public open func func240(namedParam241 ! : Option<Bool>) : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) { // block id: 242
        func244()
    }
;
    static let var1558 : Bool = true;
    static var var1987 : Int8 = Int8(34);
    public init(param1744 : Option<Rune>) { // block id: 1745
        var var1750 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        try { // block id: 1747
            var1750[5];
            var1764
        } finally { // block id: 1766
            (Option<Unit>.None ?? ());
            var1750[6];
        };
        var var1978 : Array<Range<UInt32>> = [((UInt32(62)&127)..(UInt32(174)&127):(72|1)), ((UInt32(64)&127)..(UInt32(94)&127):(104|1)), ((UInt32(101)&127)..=(UInt32(123)&127):((-112)|1)), ((UInt32(158)&127)..=(UInt32(85)&127):(76|1)), ((UInt32(79)&127)..(UInt32(41)&127):((-28)|1)), ((UInt32(82)&127)..=(UInt32(210)&127):((-26)|1)), ((UInt32(22)&127)..=(UInt32(130)&127):(46|1)), ((UInt32(191)&127)..=(UInt32(13)&127):(126|1)), ((UInt32(140)&127)..=(UInt32(0)&127):(25|1)), ((UInt32(140)&127)..=(UInt32(172)&127):(114|1))];
        var var1991 : Int32 = Int32(7);
        Option<Unit>.Some(func1954(namedParam1957 : Int32(50), optionalParam1958 : func1964(var53, optionalParam1966 : UInt8(148), namedParam1972 : var1978), namedParam1960 : if (var222) { // block id: 1982
            ((), false, var1987, ((var1991&127)..=(var1485&127):((var1494|1))))
        } else if (var1068) { // block id: 1996
            if (var824) { (var1438, var222, var1987, ((var955&127)..(Int32(-115)&127):((34|1)))) } else { ((), var1068, Int8(76), ((Int32(-78)&127)..=(Int32(-73)&127):((-101)|1))) }
        } else { // block id: 2012
            ((), var222, var1480, ((Int32(97)&127)..(Int32(2)&127):(36|1)))
        }))
    }
;
    public var var3544 : Int64 = (-92);
    public func func64(namedParam65 ! : Float64) : Bool { // block id: 66
        try { // block id: 68
            (Option<Bool>.None ?? false)
        } finally { // block id: 76
            var1054|>func78;
            (var1054 ?? var2739)
        }
    }

    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}


public func func78(param24 : UInt8) : Interface14 { // block id: 25
    (if (true) { Option<(String, Interface14, Float64, Int64, Rune)>.None } else { Option<(String, Interface14, Float64, Int64, Rune)>.None }  ?? (var39 ?? ("""
a{WhC
j1YE|
""", Class7(), var53, var58, r's')))[1]
}


func func124(param125 : UInt8) : String { // block id: 126
    var var182 : Int32 = Int32(UInt32(110));
    var var209 : String = """
jy0xW
d8M@C
""";
    if (match (try { // block id: 130
            Int16(12);
            if (true) { Option<(String, Interface14, Float64, Int64, Rune)>.None } else { var39 }
        } finally { // block id: 136
            ();
            var140 &= UInt64(97);
            var39
        }) {
        case _ =>
            var149;
            if (var153) { Class7() } else { var159 } ;
            false

        case _ : Int16 =>
            var153

        case _ =>
            ();
            var140 >= var140

    }) { // block id: 172
        var var191 : Class7 = Class7();
        let var197 : Float32 = Float32(Float32(Float32(Float32(Float32(-36.0)))));
        match {
            case var153 =>
            let var177 : ?Bool = (Class7() as Bool);
            var177;
            var182 &= Int32(-85);
            Float32(-94.0)
            case _ =>
            if (true) { var191 } else { Class7() } ;
            Float32(Int32(75.0) % ((Int32(var197)) | 1))
        };
        ();
        try { // block id: 205
            if (var153) { var209 } else { var209 }
        } catch (e: Exception) { // block id: 212
            ((Int8(61)&127)..(Int8(-104)&127):((-57)|1));
            ((UInt8(169)&127)..(UInt8(207)&127):((-66)|1));
            if (false) { "rO7O3:g.wW" } else { "ro$X7d3_a{M" }
        }
    } else { // block id: 219
        if (var222) { "gt*}^g~w,<" } else { """
JUssW
2CSN)
""" }
    }
}

public func func416(optionalParam417 ! : Interface10<Range<UInt32>, Range<Int16>> = Class7(), namedParam419 ! : Bool) : Unit { // block id: 420
    let var456 : UInt16 = UInt16(75);
    var var468 : UInt16 = UInt16(23);
    match (if (true) { var426 } else { var426 } ) {
        case caseVar436 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) =>
            ();
            UInt16(223)

        case _ : Rune =>
            ();
            var var446 : UInt16 = UInt16(131);
            var446 / ((var446) | 1)

        case caseVar451 =>
            UInt16(216) | var456

        case _ : Int16 =>
            var53;
            ();
            UInt16(249)

        case _ =>
            -var468

    } + [var456, var468, UInt16(40), UInt16(202), var456, UInt16(157), var468, var456, var482, var468][8];
    var loopTimeVar507 : Int64 = 0;
    while (((Option<Bool>.Some(false) ?? [false, var153, false, namedParam419, true, false, var153, false, true, namedParam419][1])) && loopTimeVar507 < 100 ) {
        loopTimeVar507++;

    }
}

public func func525(param526 : UInt64) : Class7 { // block id: 527
    var149;
    var530
}

func func510(param511 : Range<UInt16>, namedParam512 ! : Interface13, optionalParam513 ! : Interface13 = Class7()) : Class7 { // block id: 515
    func416(namedParam419 : try { // block id: 518
        var222
    } finally { // block id: 520
        var222
    });
    -UInt16(90);
    var var537 : Int32 = Int32(UInt8(90));
    func525(UInt64(Int32(-62)) * UInt64(var537))
}


func func571<T0>(param572 : Range<UInt8>) : Int64 { // block id: 573
    try (resource = Class7()) { // block id: 575
        let var584 : Rune = r'g';
        (Option<Rune>.Some(r'7') ?? var584);
        var loopTimeVar589 : Range<UInt64> = ((UInt64(18)&127)..(UInt64(11)&127):((Int64(Int32(Int16(31)))|1)));
        for (i in loopTimeVar589 where var153) {

        }
    } catch (e: Exception) { // block id: 597
        var601[0]
    };
    let var614 : Int32 = Int32(UInt32(154));
    try (resource = Class7()) { // block id: 611
        match (var614) {
            case 91 | -13 | -107 =>
                var622 %= ((UInt16(44)) | 1)

            case -9 | -64 =>
                var53 **= Float64(Int32((-14.0)) & 3)

            case -102 =>
                var var639 : Int16 = Int16(115);
                var149

            case _ =>
                ()

        };
        var53 /= Float64((Int32((-40.0))) | 1)
    } finally { // block id: 649
        let var664 : Array<Bool> = [true, true, true, true, false, false, true, false, true, false];
        if (var153) { [var153, var222, false, var153, var222, var222, true, false, var153, true] } else { var664 } ;
        var var670 : UInt32 = UInt32(179);
        try (resource = Class7()) { // block id: 667
            var670 *= UInt32(247)
        } catch (e: Exception) { // block id: 673
            var149;
            (-83.0) <= var53;
            var149
        }
    };
    let var694 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) = (Float32(Float32(102.0)), Int64(UInt8(UInt8(226))), UInt64(Int32(103)), "Uuv_Ga:*!w", [(), (), (), (), (), (), (), (), (), ()], r'm', Float64(Float32(104.0)), UInt32(UInt8(68)));
    if (var392 > var392) { // block id: 685
        var149;
        ((var614&127)..=(Int32(21)&127):((var58|1)));
        (var58, var694)
    } else { // block id: 710
        var149;
        var149;
        var var717 : Float32 = Float32(Float32(-27.0));
        (var58, (var717, var58, UInt64(155), var284, [(), (), (), (), (), (), (), (), (), ()], r'7', var53, var727))
    }[0]
}

public func func560(param561 : Rune, param562 : (Interface10<Range<UInt32>, Range<Int16>>, Bool) -> Unit, namedParam566 ! : UInt32, optionalParam567 ! : Interface14 = Class7()) : Bool { // block id: 569
    func571<Array<Unit>>(try { // block id: 733
        ();
        ((var737&127)..(UInt8(190)&127):((var58|1)))
    } catch (_) { // block id: 741
        var149;
        ((UInt8(36)&127)..(UInt8(84)&127):(63|1))
    });
    var545;
    false
}



public func func120(param121 : Class7) : Bool { // block id: 122
    var var388 : Interface10<Range<UInt32>, Range<Int16>> = Class7();
    var var397 : UInt8 = UInt8(32);
    match (Option<Bool>.None) {
        case caseVar381 : Int32 =>
            UInt8(140)

        case _ =>
            var388;
            ((var392&127)..=(var392&127):((var58|1)));
            var397

        case _ : Rune =>
            -UInt8(173)

        case caseVar406 : Range<Int16> =>
            ((UInt8(220)&127)..=(UInt8(229)&127):(103|1));
            UInt8(200) >> ((var397) & 7)

        case _ =>
            UInt8(137)

    }|>{ lambdaParameter233 : UInt8 => param121.func240(namedParam241 : Option<Bool>.Some(false))[3] };
    func416(namedParam419 : func510(((UInt16(252)&127)..=(var482&127):((var58|1))), namedParam512 : var545, optionalParam513 : var545).func549(var149, namedParam551 : var149, namedParam552 : ((Int8(-23)&127)..=(Int8(77)&127):(119|1))));
    if (func560(r'T', { lambdaParameter749 : Interface10<Range<UInt32>, Range<Int16>>, lambdaParameter750 : Bool => if ((Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>.None ?? (true, false, [UInt16(89), UInt16(135), UInt16(64), UInt16(129), UInt16(218), UInt16(107), UInt16(227), UInt16(223), UInt16(69), UInt16(144)], [var622, UInt16(4), UInt16(159), var482, UInt16(181), var482, var482, UInt16(44), var622, UInt16(126)], var777))[0]) { // block id: 780
        var loopTimeVar785 : Int64 = 0;
        while ((lambdaParameter750) && loopTimeVar785 < 100 ) {
            loopTimeVar785++;

        }
    } }, namedParam566 : if (var222) { // block id: 788
        ();
        var var793 : Rune = r'g';
        if (true) { var793 } else { var793 } ;
        UInt32(190) >> ((var727) & 7)
    } else if (false) { // block id: 800
        var802;
        UInt32(80)
    } else { // block id: 805
        var727
    }, optionalParam567 : (var813 ?? Class7()))) { // block id: 817
        [false, false, false, true, true, false, false, true, true, true][9]
    } else { // block id: 821
        var loopTimeVar856 : Int64 = 0;
        do {
            loopTimeVar856++;
            if (var222) { Option<Rune>.None } else { Option<Rune>.None }
        } while ((var824) && loopTimeVar856 < 100 ) ;
        func560(r'b', func416, namedParam566 : var727, optionalParam567 : Class7())
    }
}

public func func960(param961 : Option<Bool>, optionalParam962 ! : Option<Bool> = Option<Bool>.Some((((Int16(59)&127)..=(Int16(15)&127):((-96)|1)) is (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>))), namedParam966 ! : (Range<UInt8>) -> Int64) : Range<UInt32> { // block id: 969
    var loopTimeVar976 : Int64 = 0;
    do {
        loopTimeVar976++;

    } while (((func525(var337) is Range<UInt32>)) && loopTimeVar976 < 100 ) ;
    try { // block id: 978
        if (var222) { ((var727&127)..(var727&127):(((-108)|1))) } else { ((var727&127)..(var727&127):((var58|1))) }
    } catch (_) { // block id: 989
        [((UInt32(174)&127)..=(UInt32(212)&127):((-57)|1)), ((UInt32(140)&127)..(UInt32(32)&127):((-78)|1)), ((UInt32(4)&127)..(UInt32(124)&127):(122|1)), ((UInt32(133)&127)..(UInt32(19)&127):(22|1)), var998, ((UInt32(166)&127)..(UInt32(131)&127):((var58|1))), ((UInt32(168)&127)..(UInt32(189)&127):((var58|1))), ((UInt32(69)&127)..(UInt32(182)&127):(21|1)), ((var727&127)..=(var1021&127):((var58|1))), ((UInt32(139)&127)..=(UInt32(27)&127):(100|1))][2]
    }
}



public func func1141(param1142 : Array<Option<Bool>>) : Int64 { // block id: 1143
    var1145
}

public func func1163(optionalParam1164 ! : (Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>) = (false, false, [UInt16(156), UInt16(169), UInt16(18), UInt16(38), UInt16(146), UInt16(139), UInt16(190), UInt16(42), UInt16(223), UInt16(159)], [UInt16(74), UInt16(175), UInt16(49), UInt16(Int16(80)), UInt16(207), UInt16(239), UInt16(173), UInt16(100), UInt16(Int8(29)), UInt16(Int8(-65))], [false, true, true, false, true, false, false, false, false, false]), namedParam1184 ! : Range<UInt32>, optionalParam1185 ! : Option<Option<Option<Bool>>> = Option<Option<Option<Bool>>>.Some((Int8(115) as Option<Bool>))) : Interface11 { // block id: 1189
    let var1207 : Float32 = Float32(Float32(-112.0));
    var var1253 : Range<Int8> = ((Int8(Int8(UInt8(Int8(7))))&127)..(Int8(-13)&127):((Int64(UInt8(219))|1)));
    var var1264 : (Range<Int16>, Int32) = (((Int16(-110)&127)..=(Int16(123)&127):((-95)|1)), Int32(UInt8(UInt8(Int8(-90)))));
    var var1298 : Interface14 = Class7();
    try { // block id: 1191
        var149;
        var149;
        var var1211 : Int64 = 52;
        (false, (((Int32(-2)&127)..(Int32(-88)&127):((70|1))), (var58, (var1207, var1211, UInt64(136), """
TZ/x8
+HxDg
""", [var149, var802, (), (), (), var149, var149, var149, var802, ()], var1227, 121.0, UInt32(98))), var601, ((Int16(113)&127)..(var392&127):((62|1))), var284, Int16(-80), ((UInt8(18)&127)..=(var737&127):(((-62)|1))), var777), var1244, var1207, Class7(), var1253, var955, var1264, var1272)[4]
    } finally { // block id: 1283
        var loopTimeVar1304 : Int64 = 0;
        do {
            loopTimeVar1304++;
            if (var1068) { ((UInt32(171)&127)..=(UInt32(123)&127):(65|1)) } else { ((UInt32(153)&127)..=(var727&127):((116|1))) } ;
            Option<(String, Interface14, Float64, Int64, Rune)>.Some(("""
g.Tl-
v#OU<
""", var1298, var53, var1145, r'z'))
        } while ((var824) && loopTimeVar1304 < 100 ) ;
        try { // block id: 1306
            ();
            (-40);
            var159
        } catch (e: Exception) { // block id: 1310
            var337--;
            var159
        }
    }
}




public func func1927<T0, T1>(param1928 : Range<UInt8>) : Array<Range<Int64>> { // block id: 1929
    [((19&127)..((-99)&127):((-94)|1)), ((102&127)..((-67)&127):((-11)|1)), ((15&127)..=((-63)&127):((-11)|1)), (((-91)&127)..((-30)&127):(45|1)), ((112&127)..(67&127):(75|1)), (((-94)&127)..(88&127):((-4)|1)), ((105&127)..=((-95)&127):((-24)|1)), ((123&127)..(121&127):(14|1)), (((-82)&127)..((-73)&127):((-95)|1)), ((70&127)..(75&127):(83|1))]
}

public func func1954(optionalParam1955 ! : Array<Range<UInt32>> = [((UInt32(188)&127)..=(UInt32(100)&127):(3|1)), ((UInt32(82)&127)..(UInt32(2)&127):((-124)|1)), ((UInt32(62)&127)..(UInt32(138)&127):(95|1)), ((UInt32(54)&127)..=(UInt32(198)&127):(53|1)), ((UInt32(213)&127)..=(UInt32(175)&127):(120|1)), ((UInt32(156)&127)..(UInt32(198)&127):((-25)|1)), ((UInt32(45)&127)..(UInt32(143)&127):((-47)|1)), ((UInt32(70)&127)..=(UInt32(230)&127):(75|1)), ((UInt32(39)&127)..=(UInt32(219)&127):(48|1)), ((UInt32(137)&127)..=(UInt32(87)&127):((-18)|1))], namedParam1957 ! : Int32, optionalParam1958 ! : UInt8 = UInt8(180), namedParam1960 ! : (Unit, Bool, Int8, Range<Int32>)) : Unit { // block id: 1961

}

public func func1964(param1965 : Float64, optionalParam1966 ! : UInt8 = UInt8(UInt8(UInt8(4))), optionalParam1970 ! : UInt8 = UInt8(99), namedParam1972 ! : Array<Range<UInt32>>) : UInt8 { // block id: 1973
    var737
}


public func func2215(param2216 : Option<Option<Option<Bool>>>) : Interface13 { // block id: 2217
    var545
}

public func func2126(param2127 : Range<UInt32>, param2128 : Range<UInt16>) : Class7 { // block id: 2129
    let var2152 : Int8 = Int8(Int8(Int8(123)));
    let var2203 : Range<UInt8> = ((UInt8(173)&127)..(UInt8(200)&127):((-6)|1));
    let var2251 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) = (Float32(6.0), (-48), UInt64(131), "oK0IZm\\`R}", [(), (), (), (), (), (), (), (), (), ()], r'F', Float64(Float32(-12.0)), UInt32(Int8(Int8(62))));
    try { // block id: 2131
        var var2172 : Array<Int8> = [Int8(124), Int8(-25), Int8(88), Int8(113), Int8(111), Int8(-28), Int8(-55), Int8(68), Int8(-65), Int8(122)];
        match (Option<Bool>.Some(var824)) {
            case caseVar2137 : Option<Option<Bool>> =>
                ();
                if (true) { [Int8(13), Int8(-17), Int8(-82), Int8(-3), Int8(-17), Int8(-119), Int8(52), Int8(-3), Int8(-3), Int8(68)] } else { [Int8(-7), var1480, Int8(39), var1480, var2152, var1480, Int8(-19), Int8(98), var2160, Int8(58)] }

            case _ =>
                ();
                var737 >>= ((var737) & 7);
                var2172

        };
        (((Int32(-70)&127)..(Int32(2)&127):(91|1)), (var58, (var1688, 96, var2182, "a+yPH^ca{AH", [(), (), (), (), (), (), (), (), (), ()], r'f', var53, UInt32(168))), (var802, var824, Int8(-61), ((Int32(-38)&127)..(Int32(-10)&127):(73|1))), ((var1641&127)..(Int16(-33)&127):((var2198|1))), """
~D`Mw
c[^W0
""", Int16(-17), var2203, [true, true, false, true, true, false, false, false, true, false]);
        var545
    } catch (_) { // block id: 2207
        var53 += var53;
        var1688 += var1688;
        var var2220 : (Option<Option<Option<Bool>>>) -> Interface13 = func2215;
        var1537|>var2220
    } finally { // block id: 2223
        let var2225 : (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)) = (122, (Float32(82.0), (-110), UInt64(UInt64(161)), """
|^P3v
v6clE
""", [(), (), (), (), (), (), (), (), (), ()], r'5', Float64(Float32(Float32(-118.0))), UInt32(UInt16(Int16(-111)))));
        var2225;
        var var2246 : Range<Int16> = ((Int16(87)&127)..(Int16(-43)&127):(20|1));
        (var2246, (var1494, var2251), (var1272, var2225, var601, ((Int16(16)&127)..(Int16(31)&127):(75|1)), ###"T|&0a.qH75"###, Int16(64), ((UInt8(231)&127)..(UInt8(131)&127):((-85)|1)), [true, false, false, var153, true, false, var824, var824, false, var824]), var2246, var149, Float32(73.0), var2152, ((UInt64(1)&127)..=(UInt64(114)&127):((-67)|1)), param2127)[4];
        try { // block id: 2301
            if (var153) { var545 } else { Class7(Option<Rune>.Some(var1227)) }
        } finally { // block id: 2308
            UInt16(47);
            Option<Int16>.Some(var1641);
            Class7(var2314)
        }
    };
    var2320[1]
}


public func func1650(param1651 : UInt64) : (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32) { // block id: 1652
    var var2019 : ?Rune = ([false, false, true, false, false, true, false, false, false, false] as Rune);
    var var2054 : Bool = false;
    var var2106 : Unit = ();
    var var2123 : (Class7) -> Bool = func120;
    if ((match (var1054) {
        case _ =>
            Option<Bool>.Some(false);
            var1667

        case caseVar1671 =>
            ();
            var1675

        case caseVar1679 =>
            Class7();
            Option<Bool>.Some(true)

        case _ : Interface13 =>
            var1688;
            [false, true, true, true, true, false, true, false, true, true];
            if (true) { Option<Bool>.Some(var153) } else { Option<Bool>.Some(true) }

        case _ =>
            var var1703 : Array<UInt16> = [UInt16(UInt8(58)), UInt16(Int16(Int16(-37))), UInt16(Int8(UInt8(UInt8(3)))), UInt16(UInt8(Int8(UInt8(36)))), UInt16(237), UInt16(230), UInt16(171), UInt16(UInt8(242)), UInt16(216), UInt16(142)];
            if (true) { var1703 } else { [UInt16(196), var622, UInt16(177), var1730, UInt16(224), UInt16(251), var1730, UInt16(90), var622, UInt16(254)] } ;
            var1675

    } ?? match (Class7(var2019)) {
        case caseVar2024 : Option<Int16> =>
            true

        case caseVar2029 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) =>
            if (false) { "Z0ZH$?_cY<" } else { var284 } ;
            var824

        case _ =>
            var222

        case _ : Option<Bool> =>
            false

        case _ =>
            if (var824) { var2049 } else { ((71&127)..(39&127):(49|1)) } ;
            var802;
            var2054

    })) { // block id: 2056
        var loopTimeVar2061 : Range<UInt64> = ((UInt64(Int16(102))&127)..(UInt64(46)&127):((Int64(UInt32(236))|1)));
        for (i in loopTimeVar2061 where var1068) {
            var1244
        };
        (Option<(UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)>.None ?? (var482, var2077, (var1688, (-54), UInt64(203), """
pqB^B
nl4>K
""", [(), (), var2106, var1438, var2106, (), (), (), var802, var149], var1227, var53, UInt32(239)), [false, false, true, false, true, true, false, true, false, false], var813, Int32(40)))
    } else if ((func2126(var998, ((UInt16(67)&127)..=(UInt16(95)&127):((-111)|1)))|>var2123)) { // block id: 2333
        (var2340 ?? [var2345, Option<Int16>.None, var1397, Option<Int16>.Some(Int16(8)), Option<Int16>.None, Option<Int16>.Some(var1641), Option<Int16>.Some(var392), var2345, Option<Int16>.None, var1633]);
        var var2371 : (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32) = (Float32(-40.0), Int64(Int32(Int16(55))), UInt64(UInt64(198)), """
yGG3^
JLm;|
""", [(), (), (), (), (), (), (), (), (), ()], r'2', (-8.0), UInt32(Int8(UInt8(40))));
        (var2364, var2077, var2371, [false, false, true, false, true, false, false, false, true, true], var813, Int32(116))
    } else { // block id: 2399
        Class7();
        (Option<(UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)>.None ?? (var1730, (var1494, var2408), var2408, var777, Option<Interface14>.None, var1485))
    }
}

func func1647() : (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32) { // block id: 1648
    try { // block id: 2437
        var1419
    } catch (_) { // block id: 2442
        ();
        if (var222) { Option<(String, Interface14, Float64, Int64, Rune)>.None } else { var39 } ;
        UInt64(18)
    }|>func1650
}


func func1542(param1543 : Option<Int16>) : Option<Interface14> { // block id: 1544
    var loopTimeVar1564 : Int64 = 0;
    (var1551 ?? do {
        loopTimeVar1564++;
        ();
        var222
    } while ((Class7.var1558) && loopTimeVar1564 < 100 ) );
    func func1568(param1569 : Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>) : (UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32) { // block id: 1570
        let var2456 : ?Interface10<Range<UInt32>, Range<Int16>> = (UInt16(Int16(UInt8(Int8(-87)))) as Interface10<Range<UInt32>, Range<Int16>>);
        let var2463 : Interface10<Range<UInt32>, Range<Int16>> = Class7();
        if (match (var1054) {
            case caseVar1576 : Option<(String, Interface14, Float64, Int64, Rune)> =>
                var824

            case _ =>
                var153

            case _ =>
                var813;
                var1068

        }) { // block id: 1587
            match (((Int16(120)&127)..=(Int16(-44)&127):((-55)|1))) {
                case caseVar1592 =>
                    var802;
                    [true, false, true, true, false, true, true, true, true, false];
                    var1597

                case _ =>
                    0.0 ** Float64(Int32(98.0) & 3);
                    ();
                    [Option<Int16>.None, param1543, Option<Int16>.Some(Int16(106)), Option<Int16>.Some(Int16(-25)), var1633, Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(var1641), param1543, Option<Int16>.Some(var1641)]

            };
            func1647()
        } else { // block id: 2449
            (var2456 ?? var2463);
            if (true) { // block id: 2467
                Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>.Some(var2470);
                var802;
                var222 &&= var824
            } else if (true) { // block id: 2499
                var140 %= ((UInt64(208)) | 1);
                Class7();
                var1641 /= ((Int16(10)) | 1)
            };
            var2508
        }
    }
;
    func1568(try { // block id: 2556
        var var2560 : Bool = ([((UInt32(UInt32(188))&127)..=(UInt32(Int32(-115))&127):((Int64(Int32(-122))|1))), ((UInt32(188)&127)..(UInt32(164)&127):(23|1)), ((UInt32(142)&127)..=(UInt32(194)&127):(92|1)), ((UInt32(31)&127)..(UInt32(97)&127):(124|1)), ((UInt32(133)&127)..=(UInt32(170)&127):((11|1))), ((UInt32(Int32(44))&127)..=(UInt32(Int32(-127))&127):((Int64(UInt16(10))|1))), ((UInt32(Int8(80))&127)..=(UInt32(220)&127):((Int64((-4))|1))), ((UInt32(135)&127)..(UInt32(Int32(74))&127):((0|1))), ((UInt32(63)&127)..(UInt32(40)&127):((-17)|1)), ((UInt32(58)&127)..(UInt32(66)&127):((-64)|1))] is Array<Option<Bool>>);
        var222 ||= var2560;
        (var1688, (-52), var2601, var284, var2606, var1227, var53, UInt32(108));
        var2612
    } catch (_) { // block id: 2637
        var737 | UInt8(63);
        Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>.None
    } finally { // block id: 2642
        UInt32(205);
        if (true) { var2612 } else { Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>.Some(var2470) }
    })[4]
}

public func func1157(param1158 : Range<UInt8>) : Array<Option<Bool>> { // block id: 1159
    if ((func1163(optionalParam1164 : var1315, namedParam1184 : var998).func1375(namedParam1376 : var1537, namedParam1377 : func78))) { (Option<Int16>.None|>func1542) } else { Option<Interface14>.Some(var2654) } ;
    ();
    var var2749 : Bool = ((((UInt32(UInt16(121))&127)..(UInt32(UInt8(1))&127):((Int64((-88))|1))) as Option<Option<Bool>>) is Float32);
    var var2870 : ?Bool = Option<Bool>.None;
    [if (match ([((110&127)..=((-74)&127):((-15)|1)), ((51&127)..((-88)&127):(68|1)), ((80&127)..=(83&127):((-58)|1)), ((58&127)..=(119&127):((-43)|1)), ((12&127)..((-35)&127):((var1494|1))), var2049, var1764, ((63&127)..(var1494&127):((var58|1))), var2049, ((122&127)..((-52)&127):(53|1))]) {
        case caseVar2679 =>
            true

        case caseVar2684 =>
            var222 &&= true;
            true

        case caseVar2692 : Float32 =>
            var337 %= ((var337) | 1);
            false

        case _ =>
            (var149, true, Int8(-38), ((Int32(97)&127)..=(Int32(-25)&127):((var58|1))));
            var727 = var2712;
            var1068 && true

        case _ =>
            var1641 = var2724;
            Int16(44) > Int16(-76)

    }) { try { // block id: 2731
        if (true) { var1227 } else { r'w' } ;
        var284;
        var var2743 : ?Bool = Option<Bool>.Some((Class7() is Array<Range<UInt32>>));
        if (var2739) { var2743 } else { Option<Bool>.Some(var2749) }
    } finally { // block id: 2759
        var622 = var482;
        if (true) { Option<Bool>.Some(var153) } else { var1054 }
    } } else { (((UInt16(216)&127)..(UInt16(170)&127):(9|1)) as Bool) } , var1054, (try { // block id: 2773
        if (var1068) { var2049 } else { var2049 }
    } catch (e: Exception) { // block id: 2778
        ((118&127)..((-56)&127):(92|1))
    } as Bool), Option<Bool>.None, (((Int8(-31)&127)..(Int8(-77)&127):((-33)|1)) as Bool), var1054, Option<Bool>.None, var1054, try { // block id: 2787
        var802;
        var1054
    } catch (e: Exception) { // block id: 2790
        var1641 |= var2724;
        if (false) { var2654 } else { Class7() } ;
        var var2801 : ?Bool = ((((Class7() is Array<UInt16>), (((Int32(9)&127)..(Int32(76)&127):(34|1)), (5, (Float32(-86.0), (-67), UInt64(250), """
0|rFs
z,>Ek
""", [(), (), (), (), (), (), (), (), (), ()], r's', (-59.0), UInt32(44))), ((), true, Int8(-16), ((Int32(-72)&127)..=(Int32(-54)&127):(96|1))), ((Int16(78)&127)..=(Int16(69)&127):(((-90)|1))), """
W/3vu
s88OM
""", Int16(-117), ((UInt8(19)&127)..=(UInt8(35)&127):((53|1))), [false, false, false, false, false, false, false, false, false, true]), ((UInt16(126)&127)..=(UInt16(181)&127):((44|1))), Float32(43.0), Class7(), ((Int8(54)&127)..=(Int8(2)&127):(40|1)), Int32(53), (((Int16(-101)&127)..=(Int16(56)&127):(30|1)), Int32(-13)), ((Int32(6)&127)..=(Int32(58)&127):((-10)|1))) as Unit) as Bool);
        if (false) { var2801 } else { var2870 }
    }, (match ([false, var2749, true, var153, true, true, var222, var2739, var824, var824]) {
        case _ =>
            if (var2739) { ((var737&127)..(var737&127):((33|1))) } else { ((var737&127)..=(UInt8(16)&127):((16|1))) } ;
            var1041

    } ?? match (var1688) {
        case caseVar2902 : Option<(UInt16, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32), Array<Bool>, Option<Interface14>, Int32)> =>
            [(), (), (), var802, (), (), (), (), var802, var149];
            Option<Rune>.Some(var1227);
            Option<Bool>.Some(var2749)

        case -93.0 | -95.0 | 56.0 | -1.0 =>
            ();
            if (false) { Option<Bool>.None } else { Option<Bool>.None }

        case _ =>
            if (var222) { Option<Bool>.None } else { Option<Bool>.Some(true) }

    })]
}



func func870(param871 : Range<Int8>) : Array<Int8> { // block id: 872
    let var879 : (Range<Int32>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Unit, Bool, Int8, Range<Int32>), Range<Int16>, String, Int16, Range<UInt8>, Array<Bool>) = (((Int32(-43)&127)..(Int32(UInt32(Int16(68)))&127):((50|1))), (Int64(Int16(-12)), (Float32(Float32(-4.0)), 113, UInt64(48), "#/<S/}Oa{|]", [(), (), (), (), (), (), (), (), (), ()], r'A', Float64(95.0), UInt32(7))), ((), false, Int8(54), ((Int32(-37)&127)..=(Int32(-64)&127):(93|1))), ((Int16(0)&127)..=(Int16(112)&127):(34|1)), "Zlo@ngCBJ2", Int16(77), ((UInt8(59)&127)..=(UInt8(UInt8(Int8(-100)))&127):((Int64(UInt16(189))|1))), [(Class7() is Interface10<Range<UInt32>, Range<Int16>>), (Int8(Int8(-118)) is (String, Interface14, Float64, Int64, Rune)), true, false, (Option<Bool>.None is (Rune, (Interface10<Range<UInt32>, Range<Int16>>, Bool) -> Unit, UInt32, Interface14) -> Bool), true, true, true, ([(), (), (), (), (), (), (), (), (), ()] is Bool), false]);
    (var879[3], var955)[1];
    var var1149 : (Array<Option<Bool>>) -> Int64 = { lambdaParameter1152 : Array<Option<Bool>> => Int64(Int8(Int8(120))) };
    func960(((Option<Option<Option<Bool>>>.None ?? var1041) ?? [var1054, var1054, Option<Bool>.None, var1054, Option<Bool>.Some(false), Option<Bool>.Some(var222), Option<Bool>.Some(true), var1054, Option<Bool>.Some(var1068), var1054][8]), namedParam966 : (func1157~>var1149));
    [Int8(73), Int8(-21), var2160, var1480, ((var2951 ?? var2958) ?? match (var727) {
        case 195 | 165 | 61 | 68 =>
            ();
            var1480

        case 15 =>
            var337;
            Int8(70)

        case _ : Array<Range<Int64>> =>
            var1480

        case _ =>
            ((Int8(-97)&127)..(Int8(111)&127):(86|1));
            var1485 *= var1485;
            var2160

    }), try { // block id: 2990
        if (var1068) { [var2345, Option<Int16>.None, Option<Int16>.None, var2345, Option<Int16>.Some(var392), Option<Int16>.Some(var2724), Option<Int16>.Some(Int16(17)), var1633, var1633, var2345] } else { [var2345, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(Int16(20)), Option<Int16>.Some(var392), Option<Int16>.Some(var2724), Option<Int16>.None, var1633] } ;
        [false, true, true, false, true, false, true, false, false, true];
        Int8(-42)
    } catch (_) { // block id: 3023
        Int8(-86)
    } finally { // block id: 3025
        var2340;
        Int8(76)
    }, (Int8(119) << ((Int8(109)) & 7)) >> ((match {
        case false =>
        var222 ||= true;
        var2160
        case true =>
        ();
        var802;
        var1480
        case _ =>
        if (var222) { var3048 } else { var3048 } ;
        var1494++;
        Int8(41)
    }) & 7), Int8(-12), try { // block id: 3058
        if (true) { var284 } else { ###"8^[3n1n^wg"### } ;
        var2739 &&= false;
        var1480
    } finally { // block id: 3067
        UInt16(164);
        var2160 >> ((var1480) & 7)
    }, Int8(23)]
}

public func func863<T0, T1>(param864 : Unit) : Bool { // block id: 865
    let var3080 : (Range<Int8>) -> Array<Int8> = func870;
    (((var1480&127)..(var2160&127):((var58|1)))|>var3080)[7] == Int8(try { // block id: 3089
        var var3106 : (Range<Int32>, (Int64, (Float32, Int64, UInt64, String, Array<Unit>, Rune, Float64, UInt32)), (Unit, Bool, Int8, Range<Int32>), Range<Int16>, String, Int16, Range<UInt8>, Array<Bool>) = (((Int32(UInt16(Int16(-121)))&127)..(Int32(8)&127):((Int64(UInt8(UInt8(141)))|1))), ((-127), (Float32(43.0), 62, UInt64(112), "0\\tn;gZE;t", [(), (), (), (), (), (), (), (), (), ()], r'v', (-107.0), UInt32(UInt32(90)))), ((), true, Int8(-46), ((Int32(108)&127)..=(Int32(-79)&127):((Int64(Int16(114))|1)))), ((Int16(-50)&127)..=(Int16(95)&127):(87|1)), ":DUx|gPz;^", Int16(-82), ((UInt8(UInt8(UInt8(110)))&127)..(UInt8(Int8(51))&127):((Int64(Int32(21))|1))), [false, false, false, true, true, true, false, true, false, false]);
        var var3160 : Range<Int16> = ((Int16(95)&127)..(Int16(-29)&127):((-45)|1));
        if (var2739) { (((Int16(96)&127)..(Int16(59)&127):(66|1)), ((-114), (Float32(125.0), (-18), UInt64(240), var284, [(), (), (), (), (), (), (), (), (), ()], var1227, var53, var1947)), var3106, var3160, (), var1688, var1480, ((UInt64(3)&127)..(UInt64(229)&127):((-10)|1)), ((UInt32(80)&127)..(UInt32(198)&127):((var58|1)))) } else { var3171 } ;
        var1480
    } catch (e: Exception) { // block id: 3299
        var1480
    } finally { // block id: 3301
        var1054;
        var149;
        var1480
    })
}

public func func3306(param3307 : Class7) : Unit { // block id: 3308
    ();
    var var3320 : UInt32 = UInt32(147);
    var2739 ||= try { // block id: 3313
        (-24) < 45
    } finally { // block id: 3317
        var3320 >> ((UInt32(197)) & 7);
        var802;
        false
    }
}

public func func104(namedParam105 ! : Int64, optionalParam106 ! : Option<(String, Interface14, Float64, Int64, Rune)> = ((-12) as (String, Interface14, Float64, Int64, Rune)), optionalParam109 ! : Interface13 = Class7(), optionalParam111 ! : Range<Int32> = ((Int32(Int16(5))&127)..(Int32(74)&127):((Int64((-118))|1)))) : Bool { // block id: 118
    var530|>(func3306~>func863<Option<(Bool, Bool, Array<UInt16>, Array<UInt16>, Array<Bool>)>, Option<Interface10<Range<UInt32>, Range<Int16>>>>)
}

func func78(param79 : Option<Bool>) : Unit { // block id: 80
    func func92(namedParam93 ! : Int8, optionalParam94 ! : (String, Interface14, Float64, Int64, Rune) = ("""
&@-u8
MKbE[
""", Class7(), (-64.0), (-92), r'0')) : Array<Unit> { // block id: 101
        var var3355 : Bool = false;
        var loopTimeVar3373 : Int64 = 0;
        while ((func104(namedParam105 : try { // block id: 3328
            var2198 * var58
        } catch (e: Exception) { // block id: 3332
            43
        } finally { // block id: 3334
            if (true) { var3338 } else { Option<Interface10<Range<UInt32>, Range<Int16>>>.None } ;
            var1688;
            var1145
        }, optionalParam109 : var545, optionalParam111 : ((var955&127)..=(Int32(-85)&127):(((-116)|1))))) && loopTimeVar3373 < 100 ) {
            loopTimeVar3373++;
            var loopTimeVar3361 : Range<UInt64> = ((UInt64(UInt32(Int16(UInt16(15))))&127)..(UInt64(Int8(Int8(-95)))&127):((Int64(Int8(-11))|1)));
            for (i in loopTimeVar3361 where var3355) {
                Int8(-124) * Int8(-76)
            }
        };
        if (false) { try { // block id: 3377
            if (var1068) { [(), (), var1438, (), (), (), var802, (), var1438, var149] } else { [(), (), (), (), (), (), (), (), (), ()] }
        } catch (e: Exception) { // block id: 3392
            var2160 >>= ((Int8(-43)) & 7);
            var2606
        } } else { [(), (), (), (), (), (), (), (), (), ()] }
    }
;
    func92(namedParam93 : Int8(-63) - Int8(-22))[1];
    try (resource = Class7()) { // block id: 3403

    } catch (e: Exception) { // block id: 3404

    };
    var loopTimeVar3410 : Int64 = 0;
    do {
        loopTimeVar3410++;

    } while (((var2951 is (Unit, Bool, Int8, Range<Int32>))) && loopTimeVar3410 < 100 )
}


public func func16(param17 : UInt16, param18 : Int8) : Class7 { // block id: 19
    var loopTimeVar3427 : Int64 = 0;
    while ((func78(UInt8(160)).func64(namedParam65 : 79.0)) && loopTimeVar3427 < 100 ) {
        loopTimeVar3427++;
        if (true) { // block id: 3420

        };
        var loopTimeVar3425 : Int64 = 0;
        do {
            loopTimeVar3425++;

        } while ((false) && loopTimeVar3425 < 100 )
    };
    var var3460 : UInt16 = UInt16(16);
    try (resource = Class7()) { // block id: 3429
        var2160;
        try (resource = Class7()) { // block id: 3432
            let var3436 : Int8 = Int8(74);
            ((param18&127)..(var3436&127):((var58|1)));
            var2739;
            var1480 &= Int8(-99)
        } finally { // block id: 3443
            var3076 *= var3076
        }
    } catch (_) { // block id: 3447
        if (var2739) { // block id: 3450
            var802;
            ()
        } else if (false) { // block id: 3454

        };
        var loopTimeVar3465 : Int64 = 0;
        while ((var2739) && loopTimeVar3465 < 100 ) {
            loopTimeVar3465++;
            var3460 &= var2364;
            ()
        };
        var loopTimeVar3470 : Int64 = 0;
        do {
            loopTimeVar3470++;

        } while ((true) && loopTimeVar3470 < 100 )
    };
    let var3517 : Range<UInt64> = ((UInt64(83)&127)..=(UInt64(182)&127):((-45)|1));
    try { // block id: 3472
        var var3489 : UInt32 = UInt32(232);
        match (((UInt8(102)&127)..(UInt8(178)&127):((-125)|1))) {
            case _ =>
                [var998, var998, var998, var998, ((UInt32(232)&127)..(UInt32(88)&127):(16|1)), ((UInt32(42)&127)..=(var2712&127):((93|1))), ((var3489&127)..(var1947&127):(((-64)|1))), ((UInt32(47)&127)..(var2712&127):(((-108)|1))), var998, ((UInt32(70)&127)..=(UInt32(169)&127):(9|1))];
                if (true) { var3502 } else { Class7() }

        };
        match (var3171) {
            case _ =>
                var1485 <<= ((Int32(6)) & 7);
                var149;
                if (var824) { var426 } else { var3517 }

        };
        try { // block id: 3520
            var802;
            r'P';
            var530
        } catch (_) { // block id: 3524
            if (true) { Class7() } else { Class7() }
        }
    } finally { // block id: 3532
        (Option<Class7>.Some(Class7()) ?? var530)
    }
}

main(): Int64 {
    try {
        func16(var482, Int8(33)).var3544
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var58*var58), 64)
        crccheck.updateBuffer(UInt64(var392*var392), 64)
        crccheck.updateBuffer(UInt64(var482*var482), 64)
        crccheck.updateBuffer(UInt64(var727*var727), 64)
        crccheck.updateBuffer(UInt64(var955*var955), 64)
        crccheck.updateBuffer(UInt64(var1021*var1021), 64)
        crccheck.updateBuffer(UInt64(var1145*var1145), 64)
        crccheck.updateBuffer(UInt64(var1494*var1494), 64)
        crccheck.updateBuffer(UInt64(var1730*var1730), 64)
        crccheck.updateBuffer(UInt64(var1947*var1947), 64)
        crccheck.updateBuffer(UInt64(var2198*var2198), 64)
        crccheck.updateBuffer(UInt64(var3076*var3076), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class7 {

}

