/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1754850184721_21: (Float64, Float32, (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)) = (Float64(Float32(Float32(40.0))),
    Float32(-74.0), (VArray<Unit, $4>({i => ()}), Int8(-4), r'B', ((UInt64(UInt64(Int64(56))) & 127)..=(UInt64(UInt64(61)) &
            127) : (Int64(94) | 1))))
public const var_1754850184721_47: Bool = false
public var var_1754850184721_106: Float64 = Float64(111.0)
@Deprecated
public const var_1754850184721_138: UInt32 = 86
public var var_1754850184721_149: UInt16 = UInt16(160)
public var var_1754850184721_155: UInt = UInt64(238)
@Deprecated
public var var_1754850184721_167: Unit = ()
@Deprecated
public let var_1754850184721_192: Option<Rune> = Option<Rune>.None
public var var_1754850184721_213: Rune = r'5'
@Deprecated
var var_1754850184721_217: Option<Range<UInt16>> = (() as Range<UInt16>)
@Deprecated
public var var_1754850184721_223: Range<UInt16> = ((UInt16(UInt16(Int16(-127))) & 127)..=(UInt16(UInt16(170)) & 127) : (Int64(UInt8(Int8(UInt8(184)))) |
    1))
internal var var_1754850184721_248: Unit = ()
@Deprecated
public var var_1754850184721_258: UInt32 = UInt32(UInt16(2))
@Deprecated
public let var_1754850184721_273: Range<UInt64> = ((UInt64(UInt64(165)) & 127)..=(UInt64(UInt64(117)) & 127) : (Int64(-105) |
    1))
@Deprecated
internal var var_1754850184721_281: Int = Int64(-120)
@Deprecated
public let var_1754850184721_368: VArray<Unit, $4> = [(), (), (), ()]
@Deprecated
public var var_1754850184721_476: Int64 = Int64(Int32(Int8(Int8(-78))))
public let var_1754850184721_509: Unit = ()
@Deprecated
public var var_1754850184721_560: Bool = false
var var_1754850184721_566: Interface_1754850184721_433 = Class_1754850184721_430<Range<UInt16>>()
public let var_1754850184721_626: VArray<Int8, $6> = [Int8(34), Int8(-27), Int8(120), Int8(12), Int8(32), Int8(60)]
@Deprecated
let var_1754850184721_633: ?Bool = Option<Bool>.None
@Deprecated
internal let var_1754850184721_656: Option<Range<UInt16>> = Option<Range<UInt16>>.None
@Deprecated
public let var_1754850184721_682: Class_1754850184721_678 = Class_1754850184721_678()
public var var_1754850184721_702: Option<Option<Bool>> = ((Float32(Float32(Float32(55.0))) as Range<UInt16>) as Option<Bool>)
public let var_1754850184721_713: Array<Bool> = [true, true, true, true, true, false, true, true, true, false]
internal var var_1754850184721_740: Bool = true
public let var_1754850184721_787: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
@Deprecated
public let var_1754850184721_900: Unit = ()
public let var_1754850184721_913: Range<Int16> = ((Int16(Int16(-96)) & 127)..=(Int16(Int16(21)) & 127) : (Int64(89) | 1))
public let var_1754850184721_917: (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
    Bool, Float32, Option<Bool>) = (((UInt16(UInt16(220)) & 127)..(UInt16(UInt16(Int8(-25))) & 127) : (Int64(-125) | 1)),
    VArray<Unit, $4>({i => ()}), VArray<Unit, $4>(repeat: ()), [UInt8(63), UInt8(225), UInt8(61), UInt8(251), UInt8(0),
        UInt8(189), UInt8(253), UInt8(171), UInt8(187), UInt8(10)], (), VArray<Int8, $6>(repeat: Int8(-119)), (Option<Bool>
        .None is Option<Bool>), Float32(-110.0), Option<Bool>.None)
@Deprecated
internal var var_1754850184721_953: UInt8 = UInt8(UInt8(UInt8(UInt8(108))))
public var var_1754850184721_1122: Int8 = Int8(UInt8(117))
@Deprecated
public let var_1754850184721_1151: ?Bool = (UInt64(UInt8(150)) as Bool)
var var_1754850184721_1163: ((Range<Int16>, Float64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), Interface_1754850184721_433, UInt8), (Float64, Float32, (VArray<Unit, $4>, 
    Int8, Rune, Range<UInt64>)), Rune, Float32, Range<UInt16>, UInt16, (Range<Int16>, Float64, (Range<UInt16>, VArray<Unit, $4>, 
    VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), (Range<UInt16>, VArray<Unit, $4>, 
    VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), Interface_1754850184721_433, 
    UInt8), Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
    VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>) = ((((Int16(Int16(-109)) & 127)..(Int16(Int16(-64)) &
            127) : (Int64(-60) | 1)), Float64(81.0), (((UInt16(UInt16(31)) & 127)..=(UInt16(UInt16(112)) & 127) : (Int64(58) |
                1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({i => ()}), [UInt8(234), UInt8(96), UInt8(79),
                UInt8(226), UInt8(185), UInt8(32), UInt8(117), UInt8(74), UInt8(42), UInt8(167)], (), VArray<Int8, $6>({
                    i => Int8(107)
                }), (Option<Struct_1754850184721_587>.None is UInt32), Float32(Float32(64.0)), ((Float64(-14.0), Int32(-113),
                (VArray<Unit, $4>({i => ()}), Int8(51), r'Y', ((UInt64(UInt64(182)) & 127)..(UInt64(UInt64(143)) & 127) : (Int64(-107) |
                        1))), VArray<Int8, $6>(repeat: Int8(-72)), true, UInt32(29), ((Int64(Int64(61)) & 127)..(Int64(Int64(-108)) &
                    127) : (Int64(110) | 1)), ((Int8(Int8(22)) & 127)..=(Int8(Int8(124)) & 127) : (Int64(36) | 1))) as Bool)),
        (((UInt16(UInt16(246)) & 127)..(UInt16(UInt16(139)) & 127) : (Int64(68) | 1)), VArray<Unit, $4>({i => ()}),
            VArray<Unit, $4>({i => ()}), [UInt8(15), UInt8(86), UInt8(141), UInt8(92), UInt8(7), UInt8(168), UInt8(154),
                UInt8(21), UInt8(187), UInt8(203)], (), VArray<Int8, $6>(repeat: Int8(-46)), true, Float32(71.0), ((((UInt16(UInt16(42)) &
                    127)..=(UInt16(UInt16(241)) & 127) : (Int64(33) | 1)), VArray<Unit, $4>(repeat: ()), VArray<Unit, $4>({
                        i => ()
                    }), [UInt8(170), UInt8(234), UInt8(193), UInt8(81), UInt8(240), UInt8(186), UInt8(111), UInt8(113),
                    UInt8(136), UInt8(202)], (), VArray<Int8, $6>({i => Int8(-32)}), false, Float32(109.0), Option<Bool>
                    .None) as Bool)), Class_1754850184721_678(), UInt8(UInt8(146))), (Float64(99.0), Float32(54.0), (VArray<Unit, $4>({
                    i => ()
                }), Int8(Int8(-94)), r'3', ((UInt64(UInt64(74)) & 127)..(UInt64(UInt64(128)) & 127) : (Int64(-33) | 1)))),
    r'U', Float32(125.0), ((UInt16(UInt16(31)) & 127)..(UInt16(UInt16(230)) & 127) : (Int64(112) | 1)), UInt16(Int8(Int8(Int8(48)))),
    (((Int16(Int16(123)) & 127)..=(Int16(Int16(-104)) & 127) : (Int64(38) | 1)), Float64(Float32(Float32(-8.0))), (((UInt16(UInt16(226)) &
                127)..=(UInt16(UInt16(141)) & 127) : (Int64(17) | 1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({
                    i => ()
                }), [UInt8(7), UInt8(222), UInt8(175), UInt8(159), UInt8(29), UInt8(72), UInt8(235), UInt8(49),
                UInt8(121), UInt8(254)], (), VArray<Int8, $6>({i => Int8(122)}), false, Float32(Float32(21.0)), Option<Bool>
                .None), (((UInt16(UInt16(135)) & 127)..=(UInt16(UInt16(43)) & 127) : (Int64(54) | 1)), VArray<Unit, $4>(repeat: ()),
            VArray<Unit, $4>({i => ()}), [UInt8(135), UInt8(150), UInt8(47), UInt8(190), UInt8(136), UInt8(180),
                UInt8(53), UInt8(168), UInt8(117), UInt8(154)], (), VArray<Int8, $6>({i => Int8(98)}), ((Float64(43.0),
                Int32(41), (VArray<Unit, $4>({i => ()}), Int8(-31), r'H', ((UInt64(UInt64(210)) & 127)..=(UInt64(UInt64(188)) &
                        127) : (Int64(-47) | 1))), VArray<Int8, $6>({i => Int8(-94)}), false, UInt32(196), ((Int64(Int64(-40)) &
                    127)..(Int64(Int64(-34)) & 127) : (Int64(-23) | 1)), ((Int8(Int8(-27)) & 127)..(Int8(Int8(-126)) &
                    127) : (Int64(-124) | 1))) is Rune), Float32(Float32(43.0)), ([UInt64(52), UInt64(137), UInt64(225),
                UInt64(245), UInt64(154), UInt64(3), UInt64(160), UInt64(225), UInt64(64), UInt64(57)] as Bool)),
        Class_1754850184721_678(), UInt8(80)), Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
            Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
            VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None)
public var var_1754850184721_1449: ?Struct_1754850184721_587 = Option<Struct_1754850184721_587>.None
var var_1754850184721_1459: UInt8 = UInt8(227)
public let var_1754850184721_1480: ?(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)) = Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))>.None
public let var_1754850184721_1494: (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)) = (VArray<Int8, $6>({i => Int8(16)}), (Class_1754850184721_678() as (Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)), (((UInt64(UInt64(73)) &
        127)..=(UInt64(UInt64(253)) & 127) : (Int64(106) | 1)) is ((Range<Int16>, Float64, (Range<UInt16>, VArray<Unit, $4>, 
        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), (Range<UInt16>, VArray<Unit, $4>, 
        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), 
        Interface_1754850184721_433, UInt8), (Float64, Float32, (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)), Rune, 
        Float32, Range<UInt16>, UInt16, (Range<Int16>, Float64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>), Interface_1754850184721_433, UInt8), Option<(VArray<Int8, $6>, 
        Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
        Bool, Float32, Option<Bool>))>)), UInt64(76), (((UInt16(UInt16(124)) & 127)..(UInt16(UInt16(233)) & 127) : (Int64(71) |
            1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({i => ()}), [UInt8(193), UInt8(UInt8(121)), UInt8(69),
            UInt8(45), UInt8(234), UInt8(139), UInt8(Int8(-10)), UInt8(243), UInt8(240), UInt8(UInt8(127))], (), VArray<Int8, $6>({
                i => Int8(-102)
            }), ((VArray<Int8, $6>({i => Int8(111)}), Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.None, false, UInt64(66), (((UInt16(UInt16(155)) &
                    127)..(UInt16(UInt16(38)) & 127) : (Int64(34) | 1)), VArray<Unit, $4>(repeat: ()), VArray<Unit, $4>({
                        i => ()
                    }), [UInt8(115), UInt8(130), UInt8(57), UInt8(120), UInt8(44), UInt8(44), UInt8(160), UInt8(224),
                    UInt8(198), UInt8(156)], (), VArray<Int8, $6>({i => Int8(-16)}), true, Float32(23.0), Option<Bool>
                    .None)) is UInt64), Float32(Float32(-107.0)), ((Float64(42.0), Int32(29), (VArray<Unit, $4>(repeat: ()),
                Int8(30), r'y', ((UInt64(UInt64(85)) & 127)..=(UInt64(UInt64(98)) & 127) : (Int64(65) | 1))), VArray<Int8, $6>({
                    i => Int8(47)
                }), false, UInt32(247), ((Int64(Int64(-116)) & 127)..=(Int64(Int64(-41)) & 127) : (Int64(-22) | 1)), ((Int8(Int8(35)) &
                127)..=(Int8(Int8(87)) & 127) : (Int64(75) | 1))) as Bool)))
public let var_1754850184721_1765: Option<Rune> = Option<Rune>.None
public let var_1754850184721_1836: VArray<Unit, $3> = [(), (), ()]
public let var_1754850184721_1847: Option<Range<UInt16>> = Option<Range<UInt16>>.None
public let var_1754850184721_1858: UInt16 = UInt16(UInt16(176))
public var var_1754850184721_1863: Int8 = Int8(Int8(-122))
public var var_1754850184721_1872: Float32 = Float32(-115.0)
public var var_1754850184721_1923: (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)) = (VArray<Int8, $6>({i => Int8(74)}), (Int16(Int16(UInt8(108))) as (Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)), true,
    UInt64(UInt16(UInt8(177))), (((UInt16(UInt16(82)) & 127)..=(UInt16(UInt16(UInt8(45))) & 127) : (Int64(74) | 1)),
        VArray<Unit, $4>({i => ()}), VArray<Unit, $4>(repeat: ()), [UInt8(56), UInt8(239), UInt8(29), UInt8(28),
            UInt8(51), UInt8(3), UInt8(34), UInt8(157), UInt8(70), UInt8(224)], (), VArray<Int8, $6>({i => Int8(-62)}),
        false, Float32(27.0), Option<Bool>.None))
let var_1754850184721_2002: (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)) = (VArray<Int8, $6>(repeat: Int8(-88)), Option<(Range<UInt16>, 
            VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.None,
    (UInt16(Int8(Int8(-12))) is UInt8), UInt64(Int32(19)), (((UInt16(UInt16(30)) & 127)..(UInt16(UInt16(202)) & 127) : (Int64(-76) |
            1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>(repeat: ()), [UInt8(Int8(97)), UInt8(178),
            UInt8(UInt8(245)), UInt8(Int8(113)), UInt8(121), UInt8(UInt8(215)), UInt8(Int8(-7)), UInt8(UInt8(50)),
            UInt8(Int8(-32)), UInt8(15)], (), VArray<Int8, $6>({i => Int8(-61)}), true, Float32(-87.0), Option<Bool>
            .None))
public let var_1754850184721_2086: VArray<Unit, $4> = [(), (), (), ()]
let var_1754850184721_2100: ?Bool = Option<Bool>.None
public let var_1754850184721_2160: Int16 = Int16(Int8(Int8(81)))
var var_1754850184721_2185: Int64 = Int64(UInt8(25))
public let var_1754850184721_2197: Range<UInt16> = ((UInt16(UInt16(75)) & 127)..(UInt16(UInt16(26)) & 127) : (Int64(-68) |
    1))
public var var_1754850184721_2273: Int32 = Int32(Int32(UInt32(123)))
var var_1754850184721_2334: UInt64 = UInt64(212)
public const var_1754850184721_2361: Int8 = -96
public let var_1754850184721_2389: Array<UInt8> = [UInt8(46), UInt8(248), UInt8(78), UInt8(41), UInt8(168), UInt8(247),
    UInt8(51), UInt8(75), UInt8(195), UInt8(245)]

@Frozen
@Deprecated
func func_1754850184721_86(param_1754850184721_87: Range<Int32>): String { // block id: 88
    let var_1754850184721_110: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>) = (VArray<Unit, $4>({i => ()}), Int8(UInt8(192)),
        r'M', ((UInt64(UInt64(53)) & 127)..(UInt64(UInt64(UInt8(Int8(-107)))) & 127) : (Int64(Int16(-31)) | 1)));
    const var_1754850184721_130: Int8 = 116;
    var loopTimeVar_1754850184721_182: Int = 0;
    do {
        loopTimeVar_1754850184721_182++;
        let var_1754850184721_176: Unit = ();
        [var_1754850184721_167, (), (), (), (), var_1754850184721_167, var_1754850184721_167, var_1754850184721_176,
            var_1754850184721_176, var_1754850184721_176][6]
    } while ((if ((Option<Bool>.Some(true) ?? false)) { // block id: 99
        Int32(105);
        false
    } else if ((var_1754850184721_106, Int32(-49), var_1754850184721_110, VArray<Int8, $6>({i => Int8(-16)}), false,
        var_1754850184721_138, ((Int64(Int64(-51)) & 127)..(Int64(Int64(38)) & 127) : (Int64(-36) | 1)), ((Int8(var_1754850184721_130) &
            127)..(Int8(var_1754850184721_130) & 127) : (Int64(-85) | 1)))[4]) { // block id: 146
        var_1754850184721_149 *= UInt16(207)
        """
#a{<v4
$p/h#
""";
        var_1754850184721_155 == UInt64(66)
    } else { // block id: 158
        ();
        ();
        var_1754850184721_47
    }) && loopTimeVar_1754850184721_182 < 100);
    const var_1754850184721_206: Rune = r'l';
    match ((if (false) {
        var_1754850184721_192
    } else {
        Option<Rune>.None
    } ?? if (true) { // block id: 197
        VArray<Int8, $6>({i => Int8(-57)});
        var_1754850184721_206
    } else if (false) { // block id: 209
        if (false) {
            var_1754850184721_213
        } else {
            r'l'
        };
        var_1754850184721_217;
        r'V'
    } else { // block id: 221
        var_1754850184721_223;
        if (true) {
            var_1754850184721_213
        } else {
            r'Z'
        }
    })) {
        case caseVar_1754850184721_238: Array<UInt8> =>
            var var_1754850184721_245: Unit = ();
            [(), (), var_1754850184721_167, var_1754850184721_245, var_1754850184721_248, var_1754850184721_167, (),
                var_1754850184721_167, var_1754850184721_167, ()];
            ();
            var_1754850184721_258 %= ((UInt32(94)) | 1)

        case _ => ()
    };
    const var_1754850184721_292: String = ###"/vDA<}kX\\W"###;
    match (try { // block id: 268
        var_1754850184721_155 = UInt64(214)
        var_1754850184721_273;
        var_1754850184721_217
    } catch (e: Exception) { // block id: 276
        var_1754850184721_217
    } finally { // block id: 278
        var_1754850184721_281 = Int64(17)
        var_1754850184721_217
    }) {
        case _ =>
            ();
            if (var_1754850184721_47) {
                var_1754850184721_292
            } else {
                var_1754850184721_292
            }
    }
}

public interface Interface_1754850184721_433 {}

public interface Interface_1754850184721_437 <: Interface_1754850184721_433 {
    static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 462
        var var_1754850184721_468: ?Bool = (r'h' as Bool);
        var loopTimeVar_1754850184721_488: Int = 0;
        do {
            loopTimeVar_1754850184721_488++;
        } while (((try { // block id: 466
            var_1754850184721_468
        } finally { // block id: 471
            ((Int8(Int8(-11)) & 127)..=(Int8(Int8(96)) & 127) : (var_1754850184721_476 | 1));
            Int8(-72);
            Option<Bool>.None
        } ?? (var_1754850184721_468 ?? var_1754850184721_47))) && loopTimeVar_1754850184721_488 < 100);
        var var_1754850184721_1116: (Option<Rune>) -> Array<Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, 
            VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, 
            VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>> = func_1754850184721_492;
        ((((Int8(Int8(124)) & 127)..=(Int8(var_1754850184721_1122) & 127) : (Int64(52) | 1)) as Rune) |>
            var_1754850184721_1116)[0]
    }
}

public interface Interface_1754850184721_436<T0, T1> <: Interface_1754850184721_433 & Interface_1754850184721_437 {
    @Frozen
    static func func_1754850184721_573(namedParam_1754850184721_574!: Option<Range<UInt16>>,
        namedParam_1754850184721_575!: Option<Range<UInt16>>,
        namedParam_1754850184721_576!: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)): Float64 { // block id: 577
        var loopTimeVar_1754850184721_693: Int64 = 0;
        do {
            loopTimeVar_1754850184721_693++;
        } while ((((Option<Rune>.Some(r'a') |> func_1754850184721_581) ?? var_1754850184721_682.var_1754850184721_685)) &&
            loopTimeVar_1754850184721_693 < 100);
        const var_1754850184721_719: Int8 = 57;
        const var_1754850184721_747: Float64 = -104.0;
        const var_1754850184721_757: Float64 = -111.0;
        var var_1754850184721_831: (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
            VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)) = (VArray<Int8, $6>({
                    i => Int8(-10)
                }), Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
                    Bool, Float32, Option<Bool>)>.None, false, UInt64(241), (((UInt16(UInt16(109)) & 127)..=(UInt16(UInt16(27)) &
                    127) : (Int64(67) | 1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({i => ()}), [UInt8(126),
                    UInt8(247), UInt8(97), UInt8(243), UInt8(200), UInt8(18), UInt8(170), UInt8(149), UInt8(85),
                    UInt8(213)], (), VArray<Int8, $6>(repeat: Int8(Int8(63))), false, Float32(90.0), (Struct_1754850184721_587() as Bool)));
        if (((var_1754850184721_702 ?? Option<Bool>.Some(false)) ?? var_1754850184721_713[3])) { // block id: 716
            match (var_1754850184721_719) {
                case caseVar_1754850184721_723 => ()

                case _ => var_1754850184721_509

                case _ => var_1754850184721_509
            };
            let var_1754850184721_752: Float64 = Float64(Float32(Float32(-48.0)));
            if (false) { // block id: 736
                var_1754850184721_509;
                var_1754850184721_106
            } else if (var_1754850184721_740) { // block id: 742
                var_1754850184721_509;
                ();
                -var_1754850184721_747
            } else { // block id: 749
                var_1754850184721_752 - var_1754850184721_757
            }
        } else { // block id: 759
            var_1754850184721_21;
            var var_1754850184721_782: UInt64 = UInt64(201);
            try { // block id: 762
                var var_1754850184721_764: Array<UInt64> = [UInt64(79), UInt64(203), UInt64(139), UInt64(98), UInt64(91),
                    UInt64(62), UInt64(2), UInt64(222), UInt64(35), UInt64(131)];
                var_1754850184721_764;
                var var_1754850184721_776: Unit = ();
                [(), (), (), var_1754850184721_167, var_1754850184721_509, var_1754850184721_509, var_1754850184721_167,
                    (), var_1754850184721_776, ()]
            } catch (_) { // block id: 779
                var_1754850184721_782 = var_1754850184721_155
                ();
                var_1754850184721_787
            } finally { // block id: 799
                ();
                Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
                        VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None;
                [(), var_1754850184721_167, var_1754850184721_167, (), (), var_1754850184721_167, (), (),
                    var_1754850184721_167, ()]
            };
            match (Option<Struct_1754850184721_587>.None) {
                case _: Array<Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                        Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>> => var_1754850184721_747

                case caseVar_1754850184721_821 =>
                    ();
                    var_1754850184721_106 - Float64(100.0)

                case _ =>
                    var_1754850184721_831;
                    var_1754850184721_747

                case _: Option<Struct_1754850184721_587> => Float64(100.0) / Float64((Int32(var_1754850184721_747)) | 1)

                case _ =>
                    ((UInt32(var_1754850184721_138) & 127)..(UInt32(UInt32(21)) & 127) : (var_1754850184721_476 | 1));
                    ();
                    var_1754850184721_106
            }
        }
    };

    static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 1443
        ();
        var var_1754850184721_1452: Struct_1754850184721_587 = Struct_1754850184721_587();
        if (match ((var_1754850184721_1449 ?? var_1754850184721_1452)) {
            case _: Option<Range<UInt16>> =>
                var_1754850184721_1459 |= UInt8(36)
                ();
                var_1754850184721_47

            case _ => false

            case _ =>
                UInt8(197);
                false
        }) {
            (if ([true, true, false, false, false, true, false, false, false, false][3]) {
                (if (var_1754850184721_560) {
                    var_1754850184721_1480
                } else {
                    var_1754850184721_1480
                })
            } else {
                Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
                        VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None
            })
        } else {
            try { // block id: 1485
                if (true) {
                    var_1754850184721_1151
                } else {
                    var_1754850184721_633
                };
                var_1754850184721_1480
            } catch (_) { // block id: 1491
                Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
                        VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
                    var_1754850184721_1494)
            }
        }
    }
}

public interface Interface_1754850184721_435 <: Interface_1754850184721_433 & Interface_1754850184721_436<Range<UInt16>,
        Bool> {
    static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 1624
        let var_1754850184721_1636: Int32 = Int32(82);
        var var_1754850184721_1661: (Array<UInt8>, String) = ([UInt8(139), UInt8(152), UInt8(UInt8(93)),
                UInt8(UInt8(90)), UInt8(112), UInt8(UInt8(UInt8(121))), UInt8(Int8(57)), UInt8(114), UInt8(139),
                UInt8(122)], "\\2 <}UN-)N");
        var loopTimeVar_1754850184721_1681: Range<UInt64> = ((UInt64(UInt64(Int32(11))) & 127)..(UInt64(UInt64(110)) &
            127) : (Int64(Int8(-97)) | 1));
        for (i in loopTimeVar_1754850184721_1681 where if (var_1754850184721_560) { // block id: 1629
            var_1754850184721_213 = r'A'
            var_1754850184721_900;
            var_1754850184721_1636 < var_1754850184721_1636
        } else { // block id: 1639
            false
        } && (Float64(-12.0) is Float64)) {
            var loopTimeVar_1754850184721_1648: Range<UInt64> = ((UInt64(UInt64(UInt8(145))) & 127)..=(UInt64(UInt64(UInt8(Int8(113)))) &
                127) : (Int64(UInt32(Int32(101))) | 1));
            for (i in loopTimeVar_1754850184721_1648 where false) {
                r'5'
            };
            var_1754850184721_1661[0]
        };
        var_1754850184721_1480
    };

    static func func_1754850184721_573(namedParam_1754850184721_574!: Option<Range<UInt16>>,
        namedParam_1754850184721_575!: Option<Range<UInt16>>,
        namedParam_1754850184721_576!: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)): Float64 { // block id: 2109
        Float64(-94.0)
    }
}

public interface Interface_1754850184721_434 <: Interface_1754850184721_433 & Interface_1754850184721_435 {
    static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 1773
        var var_1754850184721_1824: Bool = (Option<Range<UInt16>>.None is Struct_1754850184721_587);
        if ([true, true, false, var_1754850184721_560, var_1754850184721_560, false, var_1754850184721_47, false, false,
            var_1754850184721_47][9]) { // block id: 1788
            let var_1754850184721_1795: Int16 = Int16(123);
            let var_1754850184721_1799: Unit = ();
            if (true) { // block id: 1791
                Int16(-108) & var_1754850184721_1795
            } else { // block id: 1797
                var_1754850184721_1799;
                Int16(-54)
            };
            if (true) { // block id: 1804
                Float64(29.0)
            } else { // block id: 1806
                Float64(-121.0) / Float64((Int32(Float64(-62.0))) | 1)
            };
            var loopTimeVar_1754850184721_1814: Range<UInt64> = ((UInt64(UInt64(67)) & 127)..=(UInt64(UInt64(62)) & 127) : (Int64(68) |
                1));
            for (i in loopTimeVar_1754850184721_1814 where true) {
                ()
            }
        } else if (if ((var_1754850184721_476 is (Option<Rune>) -> Option<Bool>)) { // block id: 1822
            var_1754850184721_1824
        } else { // block id: 1827
            var var_1754850184721_1829: VArray<Int8, $6> = [Int8(-89), Int8(-32), Int8(82), Int8(52), Int8(-98),
                Int8(26)];
            var_1754850184721_1829;
            var_1754850184721_1824
        }) { // block id: 1832
            var_1754850184721_1836[1];
            try { // block id: 1840
                var_1754850184721_1122 -= Int8(-20)
            } finally { // block id: 1844
                UInt64(153);
                var_1754850184721_1847;
                ()
            }
        };
        if (if ((var_1754850184721_1847 is Bool)) { // block id: 1854
            var_1754850184721_149 |= var_1754850184721_1858
            var_1754850184721_1863 |= var_1754850184721_1122
            const var_1754850184721_1868: Bool = false;
            var_1754850184721_1868
        } else if (var_1754850184721_1872 > var_1754850184721_1872) { // block id: 1875
            ();
            if (var_1754850184721_560) {
                VArray<Int8, $6>({i => Int8(53)})
            } else {
                VArray<Int8, $6>(repeat: var_1754850184721_1122)
            };
            var_1754850184721_47
        } else { // block id: 1894
            ();
            var_1754850184721_1824
        }) { // block id: 1897
            var var_1754850184721_1900: Range<Int16> = ((Int16(Int16(-87)) & 127)..=(Int16(Int16(-10)) & 127) : (Int64(11) |
                1));
            match (var_1754850184721_1900) {
                case caseVar_1754850184721_1904 =>
                    var_1754850184721_476 ^= var_1754850184721_476
                    if (var_1754850184721_47) {
                        var_1754850184721_1480
                    } else {
                        var_1754850184721_1480
                    }

                case _: Range<Int64> =>
                    if (false) {
                        r'r'
                    } else {
                        r'5'
                    };
                    var_1754850184721_167;
                    Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                            VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>
                        .Some(var_1754850184721_1923)

                case _ =>
                    var_1754850184721_713;
                    var_1754850184721_560 ||= true
                    Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                            VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None

                case _ =>
                    var_1754850184721_633;
                    var_1754850184721_1480

                case _ => var_1754850184721_1480
            }
        } else { // block id: 1992
            Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
                    VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                    VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
                var_1754850184721_1494)
        }
    };

    static func func_1754850184721_573(namedParam_1754850184721_574!: Option<Range<UInt16>>,
        namedParam_1754850184721_575!: Option<Range<UInt16>>,
        namedParam_1754850184721_576!: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)): Float64 { // block id: 2133
        let var_1754850184721_2140: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>) = (VArray<Unit, $4>({i => ()}), Int8(Int8(UInt8(UInt8(83)))),
            r'D', ((UInt64(UInt64(102)) & 127)..(UInt64(UInt64(65)) & 127) : (Int64(UInt8(UInt8(140))) | 1)));
        var var_1754850184721_2168: Int32 = Int32(UInt32(150));
        let var_1754850184721_2206: Array<UInt8> = [UInt8(14), UInt8(167), UInt8(45), UInt8(190), UInt8(222), UInt8(37),
            UInt8(173), UInt8(78), UInt8(9), UInt8(217)];
        var loopTimeVar_1754850184721_2264: Int64 = 0;
        do {
            loopTimeVar_1754850184721_2264++;
            var loopTimeVar_1754850184721_2259: Int64 = 0;
            do {
                loopTimeVar_1754850184721_2259++;
                ();
                var_1754850184721_509
            } while ((false) && loopTimeVar_1754850184721_2259 < 100);
            var_1754850184721_2168 += Int32(-120)
        } while ((if (if (var_1754850184721_560) { // block id: 2138
            var_1754850184721_2140;
            ((Int16(var_1754850184721_2160) & 127)..=(Int16(Int16(43)) & 127) : (Int64(-2) | 1));
            var_1754850184721_2168 > Int32(34)
        } else if (var_1754850184721_560) { // block id: 2173
            var_1754850184721_213;
            if (var_1754850184721_47) {
                var_1754850184721_1151
            } else {
                Option<Bool>.None
            };
            Int16(-28) < Int16(-126)
        } else { // block id: 2182
            var_1754850184721_2185 &= Int64(79)
            var_1754850184721_47
        }) { // block id: 2190
            let var_1754850184721_2220: Bool = (() is (Float64, Int32, (VArray<Unit, $4>, Int8, Rune, Range<UInt64>), 
                VArray<Int8, $6>, Bool, UInt32, Range<Int64>, Range<Int8>));
            var var_1754850184721_2232: Unit = ();
            Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
                    VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
                    VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
                (var_1754850184721_626,
                    Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
                            Bool, Float32, Option<Bool>)>.Some(
                        (var_1754850184721_2197, var_1754850184721_2086, VArray<Unit, $4>(repeat: var_1754850184721_509),
                            var_1754850184721_2206, (), VArray<Int8, $6>({i => Int8(-99)}), true, Float32(80.0), Option<Bool>
                                .None)), var_1754850184721_2220, UInt64(135), (var_1754850184721_2197,
                        var_1754850184721_368, VArray<Unit, $4>({i => ()}), var_1754850184721_2206, (), VArray<Int8, $6>(repeat: var_1754850184721_1122),
                        false, Float32(9.0), Option<Bool>.None)));
            Int16(31) != Int16(28)
        } else { // block id: 2249
            ();
            false
        }) && loopTimeVar_1754850184721_2264 < 100);
        var_1754850184721_106
    }
}

@Deprecated
public open class Class_1754850184721_430<T0> <: Interface_1754850184721_433 & Interface_1754850184721_434 & Resource {
    @Frozen
    public init() { // block id: 432

    }

    @Frozen
    public prop var_1754850184721_685: Bool { // block id: 686
        get() { // block id: 688
            Float32(92.0);
            true
        }
    }
    public static func func_1754850184721_440<T0, T1>(
        optionalParam_1754850184721_441!: Range<UInt16> = ((UInt16(UInt16(224)) & 127)..=(UInt16(UInt16(209)) & 127) : (Int64(7) |
            1)), optionalParam_1754850184721_443!: (Range<Int32>) -> String = {
            lambdaParameter_1754850184721_446: Range<Int32> => "]J!@>si`P)"
        }): Bool { // block id: 451
        (func_1754850184721_460(UInt32(164)) ?? (var_1754850184721_626, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
                    Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.None, var_1754850184721_560,
            UInt64(4), (var_1754850184721_223, VArray<Unit, $4>(repeat: var_1754850184721_167), VArray<Unit, $4>(repeat: var_1754850184721_900),
                [UInt8(55), UInt8(160), UInt8(172), UInt8(243), UInt8(141), UInt8(25), UInt8(252), UInt8(168),
                    UInt8(191), UInt8(22)], (), var_1754850184721_626, false, Float32(41.0), var_1754850184721_1151)))[2]
    };

    static mut prop var_1754850184721_1725: Option<Rune> { // block id: 1726
        get() { // block id: 1728
            ();
            Option<Rune>.None
        }
        set(Value) { // block id: 1733
            Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, 
                    Float32, Option<Bool>)>.None;
            ()
        }
    }
    static prop var_1754850184721_1739: Struct_1754850184721_587 { // block id: 1740
        get() { // block id: 1742
            Struct_1754850184721_587()
        }
    }
    static const var_1754850184721_2070: Float64 = 40.0;
    public static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 1996
        const var_1754850184721_2104: UInt64 = 24;
        Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
                Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
            (var_1754850184721_2002, var_1754850184721_258, var_1754850184721_2070, [UInt64(123), UInt64(204),
                    UInt64(30), UInt64(101), UInt64(209), UInt64(12), UInt64(25), UInt64(33), UInt64(108), UInt64(28)], (VArray<Int8, $6>({
                            i => Int8(67)
                        }),
                    Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
                            Bool, Float32, Option<Bool>)>.Some(
                        (((UInt16(UInt16(184)) & 127)..=(UInt16(UInt16(248)) & 127) : (Int64(-27) | 1)),
                            var_1754850184721_368, var_1754850184721_2086, [UInt8(76), UInt8(23), UInt8(202), UInt8(5),
                                UInt8(148), UInt8(184), UInt8(124), UInt8(188), UInt8(41), UInt8(67)],
                            var_1754850184721_509, VArray<Int8, $6>({i => Int8(54)}), var_1754850184721_47, Float32(27.0),
                            var_1754850184721_2100)), true, var_1754850184721_2104, var_1754850184721_917))[4])
    };

    private static prop var_1754850184721_2314: UInt8 { // block id: 2315
        get() { // block id: 2317
            UInt8(67)
        }
    }
    public static func func_1754850184721_573(namedParam_1754850184721_574!: Option<Range<UInt16>>,
        namedParam_1754850184721_575!: Option<Range<UInt16>>,
        namedParam_1754850184721_576!: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)): Float64 { // block id: 2267
        var_1754850184721_1923;
        const var_1754850184721_2344: Unit = ();
        let var_1754850184721_2394: Int8 = Int8(UInt8(UInt8(UInt8(UInt8(202)))));
        var loopTimeVar_1754850184721_2412: Int64 = 0;
        do {
            loopTimeVar_1754850184721_2412++;
            var loopTimeVar_1754850184721_2286: Range<UInt64> = ((UInt64(UInt64(136)) & 127)..=(UInt64(UInt64(71)) & 127) : (Int64(UInt64(Int16(UInt8(199)))) |
                1));
            for (i in loopTimeVar_1754850184721_2286 where true) {
                var_1754850184721_155 >>= ((UInt64(96)) & 7)
            };
            var var_1754850184721_2409: Unit = ();
            try (resource = Class_1754850184721_430<Range<UInt16>>()) { // block id: 2295
                var_1754850184721_476 |= Int64(84)
            } catch (_) { // block id: 2299
                var var_1754850184721_2338: Range<UInt16> = ((UInt16(UInt16(227)) & 127)..(UInt16(UInt16(189)) & 127) : (Int64(47) |
                    1));
                (var_1754850184721_626,
                    Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
                            Bool, Float32, Option<Bool>)>.Some(
                        (((UInt16(UInt16(46)) & 127)..(UInt16(UInt16(39)) & 127) : (Int64(-24) | 1)),
                            var_1754850184721_2086, VArray<Unit, $4>({i => ()}), [UInt8(247), var_1754850184721_2314,
                                UInt8(10), UInt8(56), var_1754850184721_2314, UInt8(72), UInt8(172),
                                var_1754850184721_2314, UInt8(127), var_1754850184721_2314], var_1754850184721_167,
                            var_1754850184721_626, true, Float32(25.0), Option<Bool>.None)), var_1754850184721_560,
                    var_1754850184721_2334, (var_1754850184721_2338, VArray<Unit, $4>({i => ()}), VArray<Unit, $4>(repeat: ()),
                        [UInt8(156), UInt8(23), UInt8(99), UInt8(225), UInt8(181), UInt8(203), UInt8(185), UInt8(71),
                            UInt8(40), UInt8(130)], (), VArray<Int8, $6>(repeat: var_1754850184721_1863), true, Float32(23.0),
                        var_1754850184721_2100));
                (VArray<Int8, $6>(repeat: var_1754850184721_2361), Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
                            Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.None, false, UInt64(227),
                    (((UInt16(var_1754850184721_149) & 127)..=(UInt16(UInt16(194)) & 127) : (var_1754850184721_476 | 1)),
                        VArray<Unit, $4>(repeat: var_1754850184721_167), var_1754850184721_368, var_1754850184721_2389,
                        (), VArray<Int8, $6>(repeat: var_1754850184721_2394), var_1754850184721_560, Float32(-97.0),
                        var_1754850184721_1151));
                var_1754850184721_2409
            }
        } while (((((Int32(var_1754850184721_2273) & 127)..(Int32(Int32(-6)) & 127) : (Int64(-38) | 1)) is Range<Int32>)) &&
            loopTimeVar_1754850184721_2412 < 100);
        var_1754850184721_106
    }

    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

public struct Struct_1754850184721_587 {
    @Frozen
    public init() { // block id: 589

    }

    @Frozen
    public mut prop var_1754850184721_659: (Int64, Option<Bool>, Interface_1754850184721_437) { // block id: 660
        get() { // block id: 662
            (Int64(UInt32(Int32(-113))), Option<Bool>.None, Class_1754850184721_430<Range<UInt16>>());
            var_1754850184721_1433
        }
        set(Value) { // block id: 671
            ();
            var_1754850184721_1433 = Value
        }
    }
    var var_1754850184721_1433: (Int64, Option<Bool>, Interface_1754850184721_437) = (Int64(-12), Option<Bool>.None,
        Class_1754850184721_430<Range<UInt16>>())
}

@Deprecated
func func_1754850184721_581(param_1754850184721_582: Option<Rune>): Option<Bool> { // block id: 583
    let var_1754850184721_641: Option<Interface_1754850184721_437> = Option<Interface_1754850184721_437>.Some(
        Class_1754850184721_430<Range<UInt16>>());
    func func_1754850184721_591<T0>(param_1754850184721_592: Unit, param_1754850184721_593: Range<Int32>,
        param_1754850184721_594: Option<Range<UInt16>>): Struct_1754850184721_587 { // block id: 595
        let var_1754850184721_603: Rune = r'Y';
        try { // block id: 597
            (Option<Rune>.Some(var_1754850184721_603), Struct_1754850184721_587(), Float64(17.0), ((Int32(Int32(19)) &
                    127)..(Int32(Int32(14)) & 127) : (Int64(-34) | 1)))[1]
        } finally { // block id: 609
            var var_1754850184721_622: Array<UInt8> = [UInt8(155), UInt8(51), UInt8(66), UInt8(205), UInt8(125),
                UInt8(176), UInt8(79), UInt8(78), UInt8(199), UInt8(160)];
            var var_1754850184721_630: Float32 = Float32(98.0);
            (((UInt16(UInt16(46)) & 127)..(UInt16(var_1754850184721_149) & 127) : (Int64(-126) | 1)),
                var_1754850184721_368, VArray<Unit, $4>({i => ()}), var_1754850184721_622, var_1754850184721_509,
                var_1754850184721_626, false, var_1754850184721_630, var_1754850184721_633);
            (var_1754850184721_641 ?? Class_1754850184721_430<Range<UInt16>>());
            (Option<Struct_1754850184721_587>.Some(Struct_1754850184721_587()) ?? Struct_1754850184721_587())
        }
    };

    func_1754850184721_591<Range<Int8>>((), ((Int32(Int32(5)) & 127)..=(Int32(Int32(40)) & 127) : (Int64(11) | 1)),
        var_1754850184721_656).var_1754850184721_659[1]
}

@Deprecated
public open class Class_1754850184721_678 <: Class_1754850184721_430<Range<UInt16>> & Interface_1754850184721_436<Range<UInt16>,
    Bool> {
    public init() { // block id: 680

    }

    public static func func_1754850184721_460(param_1754850184721_461: UInt32): Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))> { // block id: 1690
        var_1754850184721_509;
        let var_1754850184721_1750: UInt8 = UInt8(Int8(79));
        ((if (match (var_1754850184721_476) {
            case 9 =>
                var_1754850184721_167;
                Int8(17) != Int8(-117)

            case _ =>
                var_1754850184721_917;
                ();
                true
        }) {
            try { // block id: 1710
                Option<Rune>.None
            } finally { // block id: 1712
                [(), var_1754850184721_509, var_1754850184721_167, var_1754850184721_900, var_1754850184721_509,
                    var_1754850184721_167, var_1754850184721_900, var_1754850184721_900, (), var_1754850184721_900];
                var_1754850184721_1725
            }
        } else {
            match (Option<Struct_1754850184721_587>.Some(var_1754850184721_1739)) {
                case caseVar_1754850184721_1746: (Option<Rune>, Struct_1754850184721_587, Float64, Range<Int32>) =>
                    [var_1754850184721_1750, var_1754850184721_1750, var_1754850184721_1750, var_1754850184721_1750,
                        var_1754850184721_1750, var_1754850184721_1750, UInt8(18), UInt8(139), UInt8(108),
                        var_1754850184721_1750];
                    if (var_1754850184721_47) {
                        var_1754850184721_1765
                    } else {
                        Option<Rune>.None
                    }

                case _ => var_1754850184721_1765
            }
        }) as (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
            Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)))
    };

    public static func func_1754850184721_573(namedParam_1754850184721_574!: Option<Range<UInt16>>,
        namedParam_1754850184721_575!: Option<Range<UInt16>>,
        namedParam_1754850184721_576!: (VArray<Unit, $4>, Int8, Rune, Range<UInt64>)): Float64 { // block id: 2112
        var var_1754850184721_2115: UInt8 = UInt8(Int8(UInt8(12)));
        var_1754850184721_2115 >>= ((UInt8(if (false) { // block id: 2122
            var_1754850184721_167;
            UInt8(209) >> ((UInt8(69)) & 7)
        } else { // block id: 2127
            var_1754850184721_1480;
            UInt8(219)
        })) & 7)
        -Float64(50.0)
    }

    static init() {
    }
}

public func func_1754850184721_492(param_1754850184721_493: Option<Rune>): Array<Option<(VArray<Int8, $6>, Option<(Range<UInt16>, 
    VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
    UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
    Option<Bool>))>> { // block id: 494
    const var_1754850184721_516: UInt8 = 109;
    const var_1754850184721_520: Byte = 225;
    const var_1754850184721_530: Int8 = -57;
    let var_1754850184721_539: Float32 = Float32(42.0);
    var loopTimeVar_1754850184721_959: Array<UInt64> = [UInt64(136), UInt64(Int8(UInt8(208))), UInt64(50),
        UInt64(UInt32(36)), UInt64(Int64(13)), UInt64(UInt8(UInt8(165))), UInt64(229), UInt64(Int32(Int32(-36))),
        UInt64(178), UInt64(27)];
    for (i in loopTimeVar_1754850184721_959 where (((Int16(Int16(34)) & 127)..(Int16(Int16(106)) & 127) : (Int64(104) | 1)),
        var_1754850184721_106, (var_1754850184721_223, var_1754850184721_368, VArray<Unit, $4>({i => ()}), [UInt8(104),
                UInt8(241), var_1754850184721_516, var_1754850184721_516, var_1754850184721_520, UInt8(199),
                var_1754850184721_516, UInt8(5), var_1754850184721_516, var_1754850184721_520], (), VArray<Int8, $6>(repeat: var_1754850184721_530),
            var_1754850184721_47, var_1754850184721_539, Option<Bool>.Some(var_1754850184721_47)), (((UInt16(var_1754850184721_149) &
                127)..=(UInt16(var_1754850184721_149) & 127) : (Int64(-70) | 1)), var_1754850184721_368,
            var_1754850184721_368, [UInt8(133), UInt8(159), UInt8(42), UInt8(59), UInt8(227), UInt8(179), UInt8(206),
                UInt8(220), UInt8(69), UInt8(122)], var_1754850184721_167, VArray<Int8, $6>(repeat: var_1754850184721_530),
            var_1754850184721_560, var_1754850184721_539, Option<Bool>.Some(false)), var_1754850184721_566, UInt8(67))[1] ==
        (Interface_1754850184721_436<Range<UInt16>, Bool>.func_1754850184721_573(
        namedParam_1754850184721_574: var_1754850184721_656, namedParam_1754850184721_575: var_1754850184721_656,
        namedParam_1754850184721_576: (VArray<Unit, $4>(repeat: ()), var_1754850184721_530, r'u', ((UInt64(UInt64(149)) &
                127)..=(UInt64(var_1754850184721_155) & 127) : (var_1754850184721_476 | 1)))))) {
        (var_1754850184721_913, Float64(11.0), var_1754850184721_917, var_1754850184721_917, var_1754850184721_566,
            UInt8(147));
        var_1754850184721_953 = UInt8(211)
    };
    var var_1754850184721_980: Unit = ();
    var_1754850184721_980;
    var var_1754850184721_983: Array<Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>> = [(Class_1754850184721_678() as (VArray<Int8, $6>, 
        Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
        Bool, Float32, Option<Bool>))),
        Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
            Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None,
        (Class_1754850184721_430<Range<UInt16>>() as (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, 
        VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))),
        (((Int32(Int32(-29)) & 127)..(Int32(Int32(100)) & 127) : (Int64(-35) | 1)) as (VArray<Int8, $6>, Option<(Range<UInt16>, 
        VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, 
        UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
        Option<Bool>))),
        Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
            Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
        (VArray<Int8, $6>({i => Int8(108)}),
            Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, 
                    Float32, Option<Bool>)>.Some(
                (((UInt16(UInt16(9)) & 127)..(UInt16(UInt16(189)) & 127) : (Int64(-65) | 1)), VArray<Unit, $4>({i => ()}),
                    VArray<Unit, $4>({i => ()}), [UInt8(130), UInt8(56), UInt8(108), UInt8(90), UInt8(10), UInt8(93),
                        UInt8(253), UInt8(228), UInt8(113), UInt8(139)], (), VArray<Int8, $6>(repeat: Int8(-44)), false,
                    Float32(-17.0), Option<Bool>.None)), true, UInt64(107), (((UInt16(UInt16(194)) & 127)..(UInt16(UInt16(13)) &
                    127) : (Int64(7) | 1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({i => ()}), [UInt8(227),
                    UInt8(68), UInt8(225), UInt8(161), UInt8(145), UInt8(120), UInt8(9), UInt8(128), UInt8(227),
                    UInt8(14)], (), VArray<Int8, $6>({i => Int8(-80)}), true, Float32(41.0), Option<Bool>.Some(false)))),
        Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
            Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.None,
        (Float64(48.0) as (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
        Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))),
        Option<(VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
            Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
            Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))>.Some(
        (VArray<Int8, $6>({i => Int8(36)}), Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
                    Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.None, (true is UInt64), UInt64(247), (((UInt16(UInt16(242)) &
                    127)..=(UInt16(UInt16(6)) & 127) : (Int64(-29) | 1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({
                        i => ()
                    }), [UInt8(207), UInt8(131), UInt8(37), UInt8(161), UInt8(210), UInt8(23), UInt8(146), UInt8(202),
                    UInt8(196), UInt8(32)], (), VArray<Int8, $6>({i => Int8(-127)}), false, Float32(-35.0),
                Option<Bool>.Some(true)))),
        (Int32(UInt32(168)) as (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, 
        Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>))),
        (false as (VArray<Int8, $6>, Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
        VArray<Int8, $6>, Bool, Float32, Option<Bool>)>, Bool, UInt64, (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, 
        Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, Option<Bool>)))];
    var_1754850184721_983
}

@Frozen
public func func_1754850184721_304(param_1754850184721_305: Range<UInt64>): Range<UInt16> { // block id: 306
    let var_1754850184721_318: Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
        Bool, Float32, Option<Bool>)> = Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, 
            VArray<Int8, $6>, Bool, Float32, Option<Bool>)>.Some(
        (((UInt16(UInt16(68)) & 127)..(UInt16(UInt16(63)) & 127) : (Int64(-14) | 1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>({
                    i => ()
                }), [UInt8(133), UInt8(25), UInt8(175), UInt8(146), UInt8(31), UInt8(67), UInt8(184), UInt8(117),
                UInt8(31), UInt8(89)], (), VArray<Int8, $6>({i => Int8(-119)}), ([UInt64(27), UInt64(85), UInt64(132),
                UInt64(226), UInt64(210), UInt64(221), UInt64(138), UInt64(186), UInt64(249), UInt64(186)] is Int32),
            Float32(Float32(Float32(87.0))), Option<Bool>.None));
    var var_1754850184721_373: (Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, 
        Bool, Float32, Option<Bool>) = (((UInt16(UInt16(Int8(118))) & 127)..=(UInt16(UInt16(148)) & 127) : (Int64(Int32(-90)) |
            1)), VArray<Unit, $4>({i => ()}), VArray<Unit, $4>(repeat: ()), [UInt8(Int8(119)), UInt8(110), UInt8(33),
            UInt8(198), UInt8(UInt8(16)), UInt8(230), UInt8(UInt8(Int8(53))), UInt8(125), UInt8(78),
            UInt8(UInt8(Int8(69)))], (), VArray<Int8, $6>({i => Int8(-39)}), (Int64(Int16(42)) is Int8), Float32(48.0),
        Option<Bool>.Some(true));
    (if (var_1754850184721_47) { // block id: 316
        var_1754850184721_318
    } else if (false) { // block id: 361
        Option<(Range<UInt16>, VArray<Unit, $4>, VArray<Unit, $4>, Array<UInt8>, Unit, VArray<Int8, $6>, Bool, Float32, 
                Option<Bool>)>.None
    } else { // block id: 363
        var_1754850184721_167;
        if (var_1754850184721_47) {
            var_1754850184721_368
        } else {
            var_1754850184721_368
        };
        var_1754850184721_318
    } ?? var_1754850184721_373)[4];
    var loopTimeVar_1754850184721_1159: Int64 = 0;
    while ((Class_1754850184721_430<Range<UInt16>>.func_1754850184721_440<Range<UInt32>, Bool>()) &&
            loopTimeVar_1754850184721_1159 < 100) {
        loopTimeVar_1754850184721_1159++;
        var_1754850184721_900
    };
    var_1754850184721_1163[4]
}

main(): Int64 {
    try {
        var_1754850184721_21[2][0][1];
        var var_1754850184721_78: Option<Range<UInt16>> = Option<Range<UInt16>>.None;
        let var_1754850184721_297: Range<Int32> = ((Int32(Int32(19)) & 127)..=(Int32(Int32(111)) & 127) : (Int64(UInt8(78)) |
            1));
        try { // block id: 44
            var var_1754850184721_52: Int8 = Int8(54);
            var var_1754850184721_57: Byte = UInt8(69);
            var loopTimeVar_1754850184721_61: Int64 = 0;
            do {
                loopTimeVar_1754850184721_61++;
                var_1754850184721_52 <<= ((var_1754850184721_52) & 7)
                var_1754850184721_57 |= var_1754850184721_57
            } while ((var_1754850184721_47) && loopTimeVar_1754850184721_61 < 100);
            VArray<Int8, $6>(repeat: var_1754850184721_52)[0];
            var_1754850184721_78.getOrThrow()
        } finally { // block id: 80
            [UInt8(223), UInt8(94), UInt8(252), UInt8(253), UInt8(34), UInt8(59), UInt8(152), UInt8(23), UInt8(153),
                UInt8(50)][9];
            var_1754850184721_297 |> func_1754850184721_86;
            var var_1754850184721_1427: (Range<UInt64>) -> Range<UInt16> = func_1754850184721_304;
            ((UInt64(UInt64(63)) & 127)..=(UInt64(UInt64(5)) & 127) : (Int64(-42) | 1)) |> var_1754850184721_1427
        };
        Int64(-59)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1754850184721_281 * var_1754850184721_281), 64)
        crcCheck.updateBuffer(UInt64(var_1754850184721_1122 * var_1754850184721_1122), 64)
        crcCheck.updateBuffer(UInt64(var_1754850184721_1858 * var_1754850184721_1858), 64)
        crcCheck.updateBuffer(UInt64(var_1754850184721_2160 * var_1754850184721_2160), 64)
        crcCheck.updateBuffer(UInt64(var_1754850184721_2334 * var_1754850184721_2334), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Struct_1754850184721_587 {}

extend Class_1754850184721_678 {}
