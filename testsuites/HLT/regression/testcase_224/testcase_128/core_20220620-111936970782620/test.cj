/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output


public let var26 : Bool = ("""
Gr>1]
REa\"x
""" is Bool)
let var43 : UInt32 = UInt32(UInt16(221))
var var137 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var152 : Int16 = Int16(UInt8(Int8(107)))
public var var258 : Class251 = Class251()
public var var277 : Unit = ()
public var var285 : Float32 = Float32(Float32(49.0))
let var295 : Int8 = Int8(-86)
let var320 : Float32 = Float32(-5.0)
let var341 : Range<Int64> = (19&127..=(-111)&127:81|1)
public var var357 : Enum354 = Enum354.defaultValue
public let var473 : Array<Range<Int64>> = [(50&127..71&127:26|1), (4&127..105&127:(-57)|1), (34&127..=(-17)&127:(-5)|1), (22&127..=87&127:93|1), ((-82)&127..(-93)&127:(-48)|1), (47&127..=(-62)&127:(-47)|1), (46&127..=19&127:14|1), ((-79)&127..(-62)&127:(-24)|1), ((-91)&127..=47&127:42|1), (122&127..(-84)&127:106|1)]
public let var517 : Int64 = Int64(UInt8(UInt8(28)))
public var var788 : (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune) = (Class251(), UInt16(Int16(118)), (Int32(Int16(UInt8(121)))&127..=Int32(Int8(87))&127:(Int64(UInt16(107))|1)), ((Int16(-82)&127..Int16(UInt16(150))&127:(Int64(UInt32(175))|1)), (), (3&127..=81&127:45|1), UInt8(80), Float32(44.0), Int8(Int8(Int8(92))), (UInt8(40), (Enum354.defaultValue is Interface255), Int8(UInt8(109)))), 'X')
var var833 : Array<Array<Bool>> = [[true, false, false, true, true, false, true, false, false, false], [false, false, true, false, true, true, false, false, false, false], [true, false, true, false, true, true, true, false, true, true], [false, true, true, false, true, false, false, false, false, false], [false, true, false, true, true, false, true, true, true, true], [false, true, true, true, true, false, false, false, true, true], [true, true, false, false, false, false, false, false, false, false], [false, false, true, true, true, true, false, true, true, false], [true, false, true, true, true, false, false, false, false, false], [true, true, false, false, true, false, true, false, true, false]]
let var850 : UInt8 = UInt8(43)
let var953 : UInt32 = UInt32(120)
public let var1034 : Float64 = Float64(Float32(13.0))
let var1112 : ?Bool = (Enum354.defaultValue as Bool)
public var var1131 : Array<Range<UInt32>> = Array<Range<UInt32>>(10){ i => (UInt32(112)&127..=UInt32(183)&127:(Int64(Int8(Int8(65)))|1)) }
let var1187 : Range<Int8> = (Int8(36)&127..=Int8(Int8(Int8(-10)))&127:(Int64(UInt16(122))|1))
public var var1247 : UInt16 = UInt16(UInt8(241))
public var var1354 : Int32 = Int32(70)
let var1400 : (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>) = ([(-75.0), 121.0, 1.0, 42.0, (-114.0), 68.0, 124.0, (-50.0), (-56.0), 99.0], (((Int16(17)&127..Int16(-28)&127:106|1), (), (102&127..=(-124)&127:61|1), UInt8(69), Float32(62.0), Int8(UInt8(107)), (UInt8(182), true, Int8(-21))) as Interface256), Int32(-34), [false, false, true, false, true, false, true, true, false, true], [[true, true, false, true, true, true, true, false, false, true], [true, true, true, false, false, false, true, true, false, false], [true, false, false, true, false, true, false, false, true, true], [false, true, true, false, true, false, true, false, true, true], [false, false, false, true, false, false, false, true, true, true], [true, false, true, true, false, true, false, true, true, false], [false, true, true, false, false, false, false, false, false, false], [true, true, false, true, false, true, false, false, false, false], [false, true, true, false, false, true, true, true, false, false], [false, true, false, false, true, true, true, true, true, false]])
public var var1501 : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32) = ((UInt8(Int8(Int8(32))), Int16(56), UInt16(Int16(Int16(16))), Float32(-105.0), (), 'G', true, Int64(Int16(Int8(-101)))), Aggregate104(), 103.0, [[true, (Float32(30.0) is Interface255), false, (Option<UInt32>.None is Range<Int32>), (Option<UInt32>.None is Array<Array<Float64>>), (((UInt8(132), Int16(-69), UInt16(209), Float32(-100.0), (), 'C', false, 94), Aggregate104(), (-35.0), [[false, false, false, true, true, true, true, false, true, true], [false, true, true, false, false, false, true, true, false, false], [true, false, false, false, true, true, false, true, false, false], [true, false, true, false, true, true, true, true, false, true], [true, false, true, false, true, true, true, true, true, true], [false, false, true, true, false, true, false, true, true, true], [true, true, true, false, true, true, false, true, true, false], [true, true, true, false, false, true, false, false, true, true], [true, true, true, false, true, false, true, false, false, false], [true, true, true, false, true, false, false, false, false, false]], (UInt32(233)&127..UInt32(31)&127:(100|1)), UInt32(242)) is Option<Float64>), (Enum158.defaultValue is Range<UInt8>), true, ((Int8(89)&127..Int8(9)&127:18|1) is (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)), (Class251() is (Range<Int16>) -> Bool)], [true, true, false, true, false, true, false, false, false, false], [(Enum354.defaultValue is Range<UInt64>), false, true, false, false, ((Int8(-115)&127..=Int8(-65)&127:(105|1)) is Range<Int64>), (Enum158.defaultValue is (Range<Int16>) -> Bool), true, false, ((UInt8(87), true, Int8(82)) is (String) -> Range<Int8>)], [false, false, true, true, true, false, true, false, true, false], [false, true, false, true, false, false, true, true, true, false], [([[1.0, (-69.0), (-91.0), (-52.0), 68.0, 124.0, 18.0, 28.0, (-69.0), (-84.0)], [(-14.0), 69.0, 48.0, (-88.0), (-12.0), 30.0, 52.0, (-46.0), 76.0, 68.0], [80.0, 6.0, 97.0, 86.0, 106.0, 52.0, (-3.0), 52.0, (-45.0), 30.0], [(-66.0), 113.0, 106.0, 96.0, 85.0, 49.0, (-74.0), (-106.0), (-25.0), 54.0], [81.0, 121.0, (-119.0), 95.0, 31.0, 81.0, 10.0, (-62.0), 76.0, (-70.0)], [28.0, 9.0, (-15.0), 3.0, 53.0, 117.0, (-87.0), (-14.0), 95.0, (-1.0)], [(-116.0), 52.0, 87.0, 35.0, (-55.0), 63.0, (-89.0), 90.0, (-98.0), 45.0], [(-95.0), (-68.0), (-113.0), (-44.0), (-44.0), (-48.0), 114.0, 81.0, 40.0, (-3.0)], [(-85.0), (-17.0), 82.0, 40.0, 0.0, 38.0, 118.0, 47.0, 74.0, 33.0], [(-59.0), (-124.0), 92.0, 88.0, (-122.0), (-103.0), (-21.0), (-49.0), 75.0, (-102.0)]] is (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)), (Option<Option<UInt32>>.None is Float32), (Float32(-81.0) is Enum354), (UInt8(245) is Range<Int8>), true, false, true, true, (Int8(-55) is Option<Enum354>), true], [((UInt8(244), Int16(-67), UInt16(192), Float32(102.0), (), 'D', true, 114) is Range<UInt16>), (() is Interface256), (Int32(21) is Int8), false, (UInt32(30) is Unit), ((Int8(-51)&127..=Int8(-112)&127:(3|1)) is Option<Enum354>), true, ((Class251(), UInt16(245), (Int32(19)&127..Int32(38)&127:(120|1)), ((Int16(-77)&127..=Int16(-38)&127:(47|1)), (), ((-65)&127..(-117)&127:(38|1)), UInt8(228), Float32(119.0), Int8(52), (UInt8(78), false, Int8(-90))), 's') is Int16), ([27.0, 40.0, (-86.0), 102.0, 72.0, (-39.0), 53.0, 101.0, (-109.0), (-86.0)] is Option<Unit>), true], [false, false, false, true, false, true, false, true, true, false], [((UInt16(101)&127..=UInt16(41)&127:69|1) is (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>)), false, ((UInt8(125), Int16(68), UInt16(219), Float32(62.0), (), 'J', true, 91) is Interface254), (Option<Float64>.None is Int8), (Int16(-31) is Range<Int8>), true, false, true, true, true], [(Option<Option<UInt32>>.None is (String) -> Range<Int8>), false, (Option<Enum354>.None is Int32), (Class251() is UInt16), true, false, true, (Option<Unit>.None is Rune), ([((-97)&127..(-10)&127:(-35)|1), (123&127..50&127:(-40)|1), ((-119)&127..=(-15)&127:30|1), (45&127..=69&127:91|1), (34&127..=107&127:(-14)|1), (9&127..(-74)&127:107|1), (119&127..(-94)&127:63|1), ((-6)&127..=81&127:(-94)|1), ((-101)&127..26&127:(-88)|1), (51&127..(-109)&127:(-20)|1)] is Array<Range<Int8>>), true]], (UInt32(205)&127..UInt32(99)&127:16|1), UInt32(Int32(73)))
let var1864 : Unit = ()
var var2033 : Int64 = Int64(Int8(UInt8(UInt8(132))))
let var2085 : Range<UInt8> = (UInt8(174)&127..=UInt8(36)&127:(-6)|1)
public var var2176 : Range<Int16> = (Int16(-44)&127..Int16(UInt16(72))&127:((-91)|1))
var var2471 : ?Option<Interface254> = ((UInt16(146)&127..UInt16(194)&127:(-105)|1) as Option<Interface254>)
var var2552 : Option<Range<Int16>> = Option<Range<Int16>>.None
public let var2723 : ?Interface256 = Option<Interface256>.None
public var var2794 : Range<UInt32> = (UInt32(Int32(UInt32(UInt32(95))))&127..UInt32(UInt16(UInt8(UInt8(243))))&127:(Int64(UInt8(UInt8(UInt8(86))))|1))
var var2825 : Array<Bool> = [(UInt8(Int8(-87)) is Array<Unit>), true, ([(Int8(-52)&127..=Int8(104)&127:5|1), (Int8(20)&127..=Int8(-43)&127:((-55)|1)), (Int8(68)&127..Int8(100)&127:(92|1)), (Int8(-67)&127..=Int8(-18)&127:(-39)|1), (Int8(-100)&127..=Int8(-119)&127:(103|1)), (Int8(57)&127..Int8(75)&127:(-3)|1), (Int8(38)&127..Int8(-124)&127:101|1), (Int8(20)&127..=Int8(116)&127:51|1), (Int8(-26)&127..=Int8(-64)&127:((-81)|1)), (Int8(96)&127..Int8(-65)&127:(-80)|1)] is Option<Option<Interface254>>), (([(-118.0), (-64.0), 90.0, (-59.0), 95.0, (-42.0), 6.0, 39.0, 38.0, (-99.0)], Option<Interface256>.None, Int32(UInt8(60)), [true, false, false, true, true, false, false, true, true, false], [[false, true, false, false, true, false, true, true, true, true], [false, false, false, false, false, true, true, true, true, true], [true, true, true, true, true, true, false, true, true, true], [false, false, false, false, true, false, false, true, false, true], [true, false, false, false, false, true, false, true, true, true], [true, false, false, false, true, true, true, true, false, true], [false, false, false, true, true, true, false, true, true, false], [false, true, false, false, false, true, true, true, false, true], [true, false, true, true, true, false, false, false, false, true], [false, true, false, false, false, true, true, true, true, false]]) is (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune)), false, true, false, ((UInt8(190), true, Int8(-38)) is Float64), (([(UInt32(182)&127..=UInt32(132)&127:(-12)|1), (UInt32(93)&127..=UInt32(112)&127:(-55)|1), (UInt32(76)&127..=UInt32(230)&127:(-22)|1), (UInt32(132)&127..=UInt32(141)&127:(-26)|1), (UInt32(159)&127..=UInt32(183)&127:30|1), (UInt32(73)&127..=UInt32(161)&127:(-86)|1), (UInt32(163)&127..=UInt32(83)&127:(-116)|1), (UInt32(213)&127..UInt32(99)&127:113|1), (UInt32(173)&127..=UInt32(128)&127:(-37)|1), (UInt32(71)&127..UInt32(245)&127:33|1)] as Interface256) is Option<Range<Int16>>), ((Int32(-87)&127..Int32(UInt16(207))&127:(Int64(UInt64(57))|1)) is Option<Rune>)]
public var var2905 : Rune = 'p'
let var2929 : Int64 = 67
public var var3063 : Array<Float64> = [(-65.0), (-7.0), (-121.0), (-26.0), (-106.0), (-96.0), 65.0, 125.0, 116.0, 4.0]
var var3176 : Float64 = Float64(Float32(75.0))
var var3199 : ((Array<Range<Int8>>, Array<Array<Bool>>), Int8, Int8) = (([(Int8(-127)&127..=Int8(126)&127:(-58)|1), (Int8(-53)&127..Int8(-107)&127:(-58)|1), (Int8(-72)&127..Int8(88)&127:(-67)|1), (Int8(-51)&127..Int8(87)&127:(-18)|1), (Int8(6)&127..=Int8(-50)&127:41|1), (Int8(-126)&127..=Int8(-104)&127:(-125)|1), (Int8(-45)&127..Int8(80)&127:(-21)|1), (Int8(77)&127..Int8(-45)&127:125|1), (Int8(77)&127..=Int8(-30)&127:(-5)|1), (Int8(13)&127..=Int8(-29)&127:(-98)|1)], [[true, true, false, true, false, false, true, false, false, false], [true, false, true, false, true, true, false, false, true, true], [true, true, true, false, false, false, false, true, true, true], [true, false, true, true, false, true, false, true, true, true], [true, true, false, false, false, true, true, false, false, true], [false, false, true, false, true, true, true, false, false, true], [true, false, true, false, false, true, false, false, false, true], [true, true, true, false, true, true, true, false, true, false], [true, false, false, true, false, true, false, true, false, false], [false, true, false, true, true, true, false, true, true, false]]), Int8(-75), Int8(UInt8(UInt8(201))))
var var3290 : Bool = (((), 'c', Int16(Int8(-7)), [(Option<Option<UInt32>>.None is (UInt32) -> Int16), true, false, (29 is (Array<Array<Bool>>, Unit) -> Option<Unit>), (Option<Range<Int16>>.None is Array<Float64>), true, (Option<Interface254>.None is Range<Int16>), (Option<Range<Int16>>.None is Option<UInt32>), true, false], (Int8(30)&127..Int8(-56)&127:(-79)|1), (Int8(Int8(-55))&127..=Int8(Int8(-115))&127:(59|1))) is ((Array<Range<Int8>>, Array<Array<Bool>>), Int8, Int8))
public let var3342 : ?UInt8 = ((Option<UInt8>.None as Rune) as UInt8)
var var3382 : UInt64 = UInt64(247)
public let var3434 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64) = (UInt8(UInt8(39)), Int16(-34), UInt16(250), Float32(106.0), (), 'f', true, Int64(Int8(Int8(-60))))
public let var3454 : ?Rune = (([(Int8(-75)&127..Int8(-64)&127:(-104)|1), (Int8(-76)&127..=Int8(-121)&127:62|1), (Int8(-113)&127..Int8(-66)&127:(-58)|1), (Int8(-79)&127..=Int8(-99)&127:3|1), (Int8(-1)&127..Int8(-88)&127:(-127)|1), (Int8(-76)&127..Int8(-65)&127:16|1), (Int8(-99)&127..=Int8(54)&127:70|1), (Int8(-115)&127..Int8(91)&127:(-47)|1), (Int8(6)&127..=Int8(65)&127:106|1), (Int8(-36)&127..Int8(36)&127:(-99)|1)] as Option<UInt32>) as Rune)
var var3575 : (UInt8, Bool, Int8) = (UInt8(139), true, Int8(Int8(-98)))
public let var3601 : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(21)&127..=Int16(-85)&127:(-118)|1), (), (Int64(Int16(109))&127..53&127:((-116)|1)), UInt8(112), Float32(Float32(101.0)), Int8(UInt8(194)), (UInt8(192), ((UInt64(253)&127..=UInt64(158)&127:((-87)|1)) is Float32), Int8(UInt8(Int8(53)))))
public let var3631 : Interface255 = Class251()
public var var3645 : ?Enum354 = (Option<Float64>.None as Enum354)
let var3697 : ?Unit = (Option<Enum354>.None as Unit)
public var var3715 : Interface254 = Class251()
var var3880 : Interface256 = Class251()
var var4024 : ??(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = (Option<Enum158>.None as Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>)
public let var4058 : Bool = false
let var4481 : Unit = ()
var var4502 : Range<UInt8> = (UInt8(147)&127..UInt8(147)&127:(-73)|1)
let var4524 : (Bool, Float64, Range<UInt8>, Array<Float64>, Bool) = (true, (-63.0), (UInt8(55)&127..UInt8(70)&127:((-107)|1)), [Float64((-101.0)), (-43.0), Float64(22.0), Float64(Float64(Float32(-66.0))), Float64(Float32(-91.0)), 54.0, (-20.0), 24.0, 86.0, Float64(Float64(Float32(-111.0)))], (Option<Enum158>.None is Option<Option<UInt8>>))
let var4585 : Bool = false
let var4732 : Range<Int32> = (Int32(67)&127..Int32(110)&127:(-14)|1)
public let var5115 : UInt32 = UInt32(89)
public var var5124 : UInt32 = UInt32(4)
public let var5141 : UInt32 = UInt32(UInt16(68))
public var var5161 : ?Unit = Option<Unit>.None


public struct Aggregate104 {
    public init() { // block id: 106

    }
;
    static func func230(namedParam231 ! : Range<UInt16>, namedParam232 ! : UInt32, optionalParam233 ! : Float32 = Float32(Float32(Float32(Float32(Float32(-15.0))))), optionalParam239 ! : Unit = ()) : Unit { // block id: 241
        ((UInt8(171)&127..=UInt8(143)&127:(-29)|1)|>func244)[2]
    }
;
    static func func117(namedParam118 ! : UInt8, optionalParam119 ! : Option<Option<UInt32>> = Option<Option<UInt32>>.Some(('s' as UInt32))) : Int8 { // block id: 123
        var var179 : Int8 = Int8(UInt8(78));
        var var204 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64) = (UInt8(246), Int16(Int8(Int8(84))), UInt16(UInt16(UInt8(81))), Float32(Float32(107.0)), (), 'g', false, Int64(UInt16(UInt8(79))));
        func func223(param224 : Array<Unit>, param225 : Int8, param226 : UInt32, param227 : Float64) : Unit { // block id: 228
            var var5090 : String = """
 B.Cc
iG]jB
""";
            func230(namedParam231 : (Option<Range<UInt16>>.None ?? (UInt16(226)&127..UInt16(83)&127:((-5)|1))), namedParam232 : if ((Option<Bool>.Some(true) ?? true)) { // block id: 5082
                ();
                Enum158.defaultValue;
                UInt32(254)
            } else { // block id: 5086
                if (false) { var5090 } else { "r.+NK_W\\F]" } ;
                param226 ** (UInt32(10) & 3)
            });
            var loopTimeVar5128 : Range<UInt64> = (UInt64(24)&127..=UInt64(Int8(Int8(UInt8(64))))&127:(Int64(Int8(Int8(-62)))|1));
            for (i in loopTimeVar5128 where if (var4585) { // block id: 5100
                UInt32(84)
            } else if (true) { // block id: 5103
                Option<Option<Rune>>.None;
                ((), var2905, Int16(-67), var2825, var1187, (Int8(73)&127..=Int8(120)&127:(-37)|1));
                var43 % ((var5115) | 1)
            } else { // block id: 5117
                UInt32(29) - var953
            } != (Option<UInt32>.Some(var5124) ?? UInt32(208))) {

            }
        }
;
        [var137[2], (var152 -= var152), match (Enum158.defaultValue) {
            case defaultValue => 
                var var166 : Int64 = Int64(Int16(UInt16(172)));
                var166++
            
            case defaultValue => 
                var var174 : Float32 = Float32(-113.0);
                var174;
                UInt32(115);
                var179 >>= ((Int8(55)) & 7)
            
            case caseVar185 => 
                (Int8(-60)&127..=Int8(-80)&127:((-26)|1));
                var var193 : Int64 = Int64(Int16(28));
                var193 += 70
            
            case _ => 
                ()
            
        }, (), var204[4], func223(var137, var295, var5141, var1034), (), try (resource = Class251()) { // block id: 5147
            if (var26) { Option<UInt8>.None } else { var3342 } ;
            let var5153 : Unit = ();
            var5153
        } finally { // block id: 5155
            var3290 &&= var4058
        }, (var5161 ?? var1864), ()][5];
        (Int8(39)&127..Int8(87)&127:50|1);
        var179
    }
;
    public static var var5179 : Option<Option<Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>>> = Option<Option<Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>>>.None;
    static func func109(optionalParam110 ! : UInt8 = UInt8(Int8(52)), namedParam113 ! : Rune) : Int64 { // block id: 114
        UInt64(func117(namedParam118 : UInt8(Int8(119))));
        match (if (var4585) { (var5179 ?? var4024) } else { (Option<Option<Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>>>.None ?? var4024) } ) {
            case caseVar5187 => 
                var2033 |= (-39);
                var1864;
                Option<Rune>.Some('8')
            
            case caseVar5197 => 
                ();
                (var3715, UInt16(185), (Int32(-5)&127..=Int32(-69)&127:(18|1)), var3601, namedParam113);
                Option<Rune>.None
            
            case _ => 
                if (true) { Option<Rune>.None } else { var3454 } 
            
            case _ => 
                var3454
            
        };
        (-92)
    }

}

public enum Enum158 {
    defaultValue |
    enumValue2715(Option<Range<Int16>>)
}
public interface Interface255 {

}

public interface Interface256 {
    func func962(namedParam963 ! : Rune, namedParam964 ! : Unit) : String { // block id: 965
        var var972 : Range<UInt32> = (UInt32(UInt16(205))&127..=UInt32(UInt16(UInt16(UInt16(47))))&127:(Int64(UInt32(Int8(Int8(119))))|1));
        var var4490 : ?Interface255 = (((Option<Array<Range<Int8>>>.None as Unit) as Rune) as Interface255);
        var loopTimeVar4496 : Int64 = 0;
        do {
            loopTimeVar4496++;
            UInt8(106)|>func986;
            try { // block id: 4477
                Option<Interface255>.None
            } catch (_) { // block id: 4479
                var4481;
                var3290 &&= var4058;
                if (true) { Option<Interface255>.None } else { var4490 } 
            }
        } while ((((if (false) { (UInt32(236)&127..UInt32(51)&127:(-124)|1) } else { var972 } ) is UInt8)) && loopTimeVar4496 < 100 ) ;
        var loopTimeVar4506 : Int64 = 0;
        do {
            loopTimeVar4506++;
            (var4502 as UInt8);
            var1864
        } while ((var26) && loopTimeVar4506 < 100 ) ;
        var var4562 : Option<Array<Range<Int8>>> = Option<Array<Range<Int8>>>.None;
        var var4575 : String = "fJn-r.|~GB";
        let var4591 : Int64 = 0;
        var var4618 : ??Rune = Option<Option<Rune>>.Some(((51&127..56&127:((-7)|1)) as Rune));
        var var4636 : Unit = ();
        match {
            case (match {
            case var3290 => 
            (-116.0)
            case _ => 
            var4481;
            if (var4058) { (var3290, (-59.0), (UInt8(36)&127..UInt8(190)&127:(-100)|1), [(-41.0), 70.0, 10.0, 29.0, (-92.0), (-88.0), 55.0, (-103.0), (-4.0), 42.0], var3290) } else { var4524 } ;
            60.0 / Float64((Int32((-69.0))) | 1)
        } is Option<Enum354>) => 
            var loopTimeVar4566 : Int64 = 0;
            while ((true) && loopTimeVar4566 < 100 ) {
                loopTimeVar4566++;
                if (false) { var4562 } else { Option<Array<Range<Int8>>>.None } 
            };
            (Option<String>.Some("""
gFakK
'kD<c
""") ?? var4575)
            case try { // block id: 4578
            namedParam964;
            var3290
        } finally { // block id: 4581
            UInt8(223);
            if (var4585) { (UInt32(59)&127..=var43&127:(var4591|1)) } else { (UInt32(230)&127..UInt32(28)&127:(var2033|1)) } ;
            true
        } => 
            if (false) { Option<Array<Bool>>.None } else { Option<Array<Bool>>.None } ;
            try { // block id: 4604
                if (var3290) { var4575 } else { "(Ao9da)'p2" } 
            } catch (e: Exception) { // block id: 4609
                var152++;
                if (var26) { Option<Option<Rune>>.Some(Option<Rune>.Some('O')) } else { var4618 } ;
                var4575
            } finally { // block id: 4626
                ();
                var4575
            }
            case _ => 
            match (var1131) {
                case _ : UInt16 => 
                    var4636;
                    var1247 ^= var1247;
                    Option<Option<Rune>>.None
                
                case _ => 
                    ();
                    var4618
                
            };
            let var4660 : Option<Range<Int16>> = (Option<Enum158>.None as Range<Int16>);
            if (true) { // block id: 4648
                var1354--;
                (var850, true, Int8(63));
                "sU3.<~5wfy"
            } else { // block id: 4656
                if (var4585) { var4660 } else { Option<Range<Int16>>.None } ;
                if (true) { Option<String>.Some("""
p7p-G
a#mOJ
""") } else { Option<String>.Some(###"gMEaXu>u+J"###) } ;
                var4575
            }
        }
    }
;
    func func4735() : Bool { // block id: 4736
        ();
        var var4752 : (Array<Range<Int8>>, Array<Array<Bool>>) = ([(Int8(-82)&127..Int8(-117)&127:114|1), (Int8(-16)&127..Int8(88)&127:(-63)|1), (Int8(31)&127..Int8(7)&127:(-76)|1), (Int8(53)&127..Int8(125)&127:(-87)|1), (Int8(-78)&127..=Int8(-83)&127:71|1), (Int8(94)&127..Int8(-13)&127:96|1), (Int8(-19)&127..=Int8(62)&127:(-67)|1), (Int8(-97)&127..=Int8(-32)&127:2|1), (Int8(-40)&127..Int8(66)&127:120|1), (Int8(-126)&127..Int8(34)&127:40|1)], [[true, false, true, true, false, true, true, true, false, false], [(UInt64(81) is ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Option<Interface254>), false, true, ([((-81)&127..(-97)&127:(-99)|1), (61&127..(-51)&127:114|1), ((-64)&127..=(-73)&127:(-125)|1), ((-56)&127..9&127:(-117)|1), ((-55)&127..=121&127:(-101)|1), ((-75)&127..=63&127:97|1), ((-5)&127..65&127:7|1), (1&127..=40&127:67|1), ((-116)&127..(-56)&127:(-57)|1), (115&127..26&127:(-42)|1)] is UInt8), true, (Option<Range<Int16>>.Some((Int16(103)&127..Int16(14)&127:((-89)|1))) is Class251), (Option<Unit>.Some(()) is (Array<Range<Int8>>, (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Float64) -> UInt8), false, (UInt32(149) is Option<Option<Interface254>>), true], [false, true, false, true, false, false, true, false, false, true], [true, false, false, false, true, true, false, false, true, false], [false, false, false, false, false, true, true, false, false, false], [true, true, true, (Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None is Range<Int32>), true, ([[(-106.0), 104.0, 106.0, (-117.0), (-36.0), (-4.0), 47.0, (-95.0), (-48.0), (-94.0)], [110.0, 118.0, 24.0, (-109.0), 84.0, (-46.0), 14.0, (-47.0), 8.0, 2.0], [86.0, (-32.0), (-85.0), (-96.0), 103.0, 123.0, 46.0, 85.0, 70.0, 89.0], [56.0, (-63.0), 30.0, 17.0, (-8.0), (-85.0), (-17.0), 57.0, (-95.0), (-120.0)], [(-72.0), (-8.0), 75.0, 61.0, 107.0, (-36.0), (-76.0), (-3.0), 47.0, (-38.0)], [53.0, (-93.0), 8.0, 4.0, (-111.0), (-65.0), 47.0, (-62.0), (-90.0), (-57.0)], [32.0, (-76.0), (-93.0), 31.0, (-32.0), 75.0, 32.0, (-83.0), 3.0, (-127.0)], [(-125.0), (-87.0), (-52.0), 14.0, 25.0, (-28.0), 21.0, (-108.0), 40.0, 48.0], [(-76.0), (-86.0), 79.0, 53.0, 74.0, 38.0, 7.0, 102.0, 9.0, 44.0], [104.0, (-17.0), 13.0, 7.0, (-48.0), 6.0, (-75.0), 12.0, 106.0, (-119.0)]] is Class251), true, (Option<Float64>.None is (Option<Float64>) -> Array<Bool>), (Option<Option<Option<Interface255>>>.None is Range<UInt8>), ((UInt8(145)&127..=UInt8(130)&127:((-120)|1)) is Option<Interface256>)], [false, false, false, false, false, true, false, true, false, true], [(Option<Option<Interface255>>.Some(Option<Interface255>.Some(Class251())) is Option<Array<Range<Int8>>>), true, false, (Option<Enum354>.None is Array<Array<Float64>>), ((UInt8(193), true, Int8(-29)) is ((Array<Range<Int8>>, Array<Array<Bool>>), Int8, Int8)), false, false, (Option<Range<Int16>>.None is (Interface256) -> Option<Enum354>), ([(), (), (), (), (), (), (), (), (), ()] is UInt64), false], [false, true, false, true, false, false, true, false, false, false], [true, true, true, false, false, true, ((Int32(56)&127..Int32(29)&127:(-68)|1) is Option<UInt8>), true, false, false]]);
        (match (var4524) {
            case (_ : (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune),caseVar4743,_,_,caseVar4744 : Array<Bool>) => 
                var277;
                var1864;
                if (true) { (var4752, Int8(105), var295) } else { var3199 } 
            
            case _ => 
                var4481;
                var1864;
                if (var3290) { (([(Int8(46)&127..=Int8(-76)&127:(-87)|1), (Int8(23)&127..Int8(71)&127:(-94)|1), (Int8(89)&127..Int8(-1)&127:(-50)|1), (Int8(87)&127..=Int8(-91)&127:70|1), (Int8(-51)&127..Int8(55)&127:20|1), (Int8(-112)&127..Int8(114)&127:33|1), (Int8(117)&127..=Int8(66)&127:(-16)|1), (Int8(23)&127..=Int8(103)&127:46|1), (Int8(-128)&127..=Int8(92)&127:(-56)|1), (Int8(-53)&127..Int8(75)&127:(-45)|1)], [[true, true, true, true, false, false, false, true, false, false], [true, true, false, false, false, false, true, true, false, false], [false, true, false, false, true, false, false, true, false, true], [true, false, false, true, true, false, true, false, true, true], [true, false, false, false, false, false, true, true, false, true], [false, false, false, true, true, false, true, true, false, true], [true, false, false, true, false, false, false, false, false, true], [true, true, false, true, false, false, false, false, false, true], [false, false, false, true, true, true, true, false, false, false], [true, true, true, true, true, true, false, false, true, false]]), Int8(44), var295) } else { var3199 } 
            
            case (_,_ : Array<Array<Float64>>,caseVar4854 : Int64,_ : Unit,caseVar4855) => 
                var1864;
                (var4752, Int8(-126), Int8(-94))
            
            case _ => 
                var var4866 : UInt32 = UInt32(224);
                var4866 *= var953;
                var4481;
                var3199
            
        } is Option<Unit>)
    }

}

public interface Interface254 <: Interface255 & Interface256 {

}

public open class Class251 <: Interface254 & Resource {
    public init() { // block id: 253

    }
;
    public var var261 : UInt8 = UInt8(104);
    static let var867 : (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune) = (Class251(), UInt16(84), (Int32(15)&127..=Int32(77)&127:(122|1)), ((Int16(113)&127..Int16(51)&127:(64|1)), (), ((-30)&127..=(-37)&127:90|1), UInt8(13), Float32(-45.0), Int8(-71), (UInt8(186), false, Int8(-24))), 'x')
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public enum Enum354 {
    defaultValue |
    enumValue1436(Range<Int32>, Array<Array<Bool>>)
}
public func func465(param466 : Range<Int16>) : Bool { // block id: 467
    if ((var473[7] is Range<Int8>)) { // block id: 476
        var loopTimeVar481 : Range<UInt64> = (UInt64(15)&127..=UInt64(56)&127:((-38)|1));
        for (i in loopTimeVar481 where var26) {
            ()
        }
    };
    var var499 : UInt8 = UInt8(Int8(-36));
    match (Option<UInt32>.Some(UInt32(75))) {
        case _ => 
            (Int16(32)&127..=Int16(-26)&127:(-63)|1);
            var499 &= UInt8(23);
            var var504 : Array<Array<Bool>> = [[false, true, true, true, true, true, true, true, false, true], [false, false, true, true, true, true, false, false, false, false], [true, false, false, true, false, false, false, false, false, false], [true, true, false, true, true, false, false, true, false, true], [false, true, false, false, false, false, true, false, false, false], [false, true, false, false, true, false, true, false, false, true], [false, false, false, true, true, false, true, false, false, false], [true, true, false, true, false, false, false, true, true, true], [true, true, false, true, true, false, false, true, false, true], [false, false, false, false, false, true, false, false, false, false]];
            var504
        
        case caseVar508 => 
            if (false) { [var341, ((-38)&127..(-64)&127:(-121)|1), (var517&127..var517&127:(92|1)), (var517&127..=48&127:(var517|1)), (108&127..=116&127:40|1), var341, ((-126)&127..=(-46)&127:89|1), (40&127..(-121)&127:123|1), (var517&127..=94&127:(var517|1)), (var517&127..=var517&127:(30|1))] } else { var473 } ;
            [[false, true, true, true, false, false, true, true, false, true], [false, false, true, false, true, false, false, true, true, false], [false, false, true, true, false, false, true, false, true, true], [false, false, false, false, false, false, true, true, false, true], [true, false, true, true, false, false, true, false, false, true], [false, false, false, true, false, false, true, true, true, false], [false, true, true, false, false, true, false, true, true, false], [false, false, false, true, true, true, false, false, false, false], [false, true, true, false, true, false, false, false, false, true], [true, false, false, true, true, false, true, false, true, true]]
        
        case _ => 
            var277;
            ();
            var var595 : Array<Bool> = [true, true, false, false, false, false, false, false, true, false];
            if (false) { [[true, true, true, true, false, false, true, true, true, false], [true, false, false, false, false, true, false, false, false, true], [false, false, false, false, false, true, false, false, false, true], [false, true, false, true, true, true, true, false, true, false], [true, false, true, true, true, true, false, false, true, false], [false, false, true, false, false, true, true, false, true, false], [true, false, true, false, false, false, false, true, false, true], [false, false, false, false, true, true, true, false, true, false], [true, false, true, false, false, true, false, true, true, false], [true, true, false, false, true, true, false, false, true, false]] } else { [[var26, true, true, true, var26, var26, var26, true, var26, var26], [true, true, true, false, true, false, false, false, false, false], [false, var26, false, false, false, false, true, var26, true, true], [false, false, var26, true, false, true, true, true, true, var26], [false, false, true, var26, var26, var26, false, var26, var26, false], var595, [true, false, true, true, false, false, true, true, false, true], [false, true, true, false, true, true, false, true, false, false], [false, false, true, false, true, false, false, true, true, true], [true, var26, false, false, false, true, true, true, var26, var26]] } 
        
    }[8][8]
}


public func func824(param825 : Int32) : Unit { // block id: 826
    try (resource = Class251()) { // block id: 828

    } catch (_) { // block id: 829
        if (var26) { var833 } else { [[false, false, false, true, false, false, false, true, true, true], [true, false, false, true, false, false, true, true, false, true], [false, true, true, true, false, false, true, false, false, true], [false, true, false, true, true, false, true, true, false, false], [true, false, true, false, true, true, false, true, true, false], [true, true, false, false, true, false, false, true, true, false], [false, false, true, true, false, false, false, true, false, false], [true, false, true, true, true, true, false, false, true, false], [false, false, false, true, true, false, true, false, true, true], [true, false, false, true, true, false, true, true, true, false]] } ;
        ();
        try (resource = Class251()) { // block id: 838
            var var846 : Int8 = Int8(-83);
            ((Int16(34)&127..=Int16(-84)&127:106|1), (), ((-42)&127..(-62)&127:68|1), UInt8(129), var320, var846, (var850, false, var295));
            var277
        } finally { // block id: 855
            let var857 : Interface256 = Class251();
            var857;
            var277
        }
    }
}

public func func892(param893 : String) : Range<Int8> { // block id: 894
    var277;
    var var897 : Range<Int8> = (Int8(110)&127..=Int8(12)&127:25|1);
    var897
}

func func906(param907 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) : Enum354 { // block id: 908
    Enum354.defaultValue
}













public func func2479(param2480 : UInt64) : Option<Interface254> { // block id: 2481
    func func2490(optionalParam2491 ! : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32) = ((UInt8(79), Int16(UInt8(UInt8(244))), UInt16(Int16(Int8(16))), Float32(-82.0), (), 'p', true, (-40)), Aggregate104(), 33.0, [[false, false, true, false, true, true, false, true, true, true], [true, true, true, false, false, true, false, false, false, false], [true, true, false, true, true, true, false, true, false, false], [false, false, false, true, false, false, false, true, true, true], [false, true, true, true, true, true, false, true, false, false], [false, false, true, true, true, true, false, false, true, false], [false, true, false, false, true, true, false, false, true, false], [false, false, false, false, true, true, true, false, true, false], [false, false, false, true, false, false, false, true, true, true], [false, false, true, false, false, true, true, true, false, true]], (UInt32(Int32(-50))&127..=UInt32(54)&127:(81|1)), UInt32(Int32(-118))), namedParam2516 ! : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32), namedParam2517 ! : Array<Float64>, optionalParam2518 ! : (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>) = ([5.0, 122.0, (-36.0), 87.0, (-59.0), (-19.0), 17.0, (-107.0), (-71.0), (-65.0)], Option<Interface256>.Some(Class251()), Int32(-48), [true, false, false, true, false, false, true, false, false, false], [[true, false, false, false, true, false, true, true, true, true], [false, true, false, true, true, false, false, true, true, false], [true, true, true, false, false, false, true, false, false, true], [false, false, true, true, false, true, false, true, true, true], [true, true, true, true, true, false, false, true, false, false], [false, true, false, true, true, false, true, true, false, true], [false, true, false, true, false, false, false, false, false, false], [true, false, false, false, false, false, true, false, true, false], [true, false, true, false, true, false, false, false, true, false], [true, true, false, true, false, true, true, true, false, true]])) : Range<Int16> { // block id: 2526
        try { // block id: 2528
            let var2535 : ?Range<Int16> = ([false, true, false, true, false, false, false, true, true, true] as Range<Int16>);
            (var2535 ?? var2176)
        } catch (_) { // block id: 2539
            ();
            var1354|>func824;
            var2176
        } finally { // block id: 2545
            (var2552 ?? var2176)
        }
    }
;
    let var2694 : Array<Float64> = [(-10.0), (-26.0), 49.0, (-120.0), (-117.0), (-115.0), 92.0, (-50.0), 44.0, (-90.0)];
    var var2713 : Enum158 = Enum158.enumValue2715(Option<Range<Int16>>.None);
    var var2730 : Int32 = Int32(-70);
    match (if (true) { var2713 } else { var2713 } ) {
        case defaultValue => 
            var2723;
            Int32(29)
        
        case _ : Interface255 => 
            var2730
        
        case defaultValue => 
            Int32(-128)
        
        case _ => 
            Int32(68) % ((var2730) | 1)
        
        case _ => 
            var1864;
            Int32(-17) / ((var1354) | 1)
        
    }|>{ lambdaParameter2485 : Int32 => let var2556 : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32) = ((UInt8(192), Int16(UInt16(44)), UInt16(156), Float32(Float32(-103.0)), (), 'U', (Aggregate104() is ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32)), (-66)), Aggregate104(), Float64(Float32(47.0)), [[true, false, false, true, true, false, true, false, true, false], [false, true, true, true, false, true, true, true, true, true], [false, (UInt32(232) is () -> Option<Unit>), false, false, (Float32(0.0) is Array<Unit>), (UInt32(37) is ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32)), true, ([false, true, false, true, false, false, true, false, true, true] is Range<Int8>), ((-29) is (String) -> Range<Int8>), false], [true, false, true, true, true, false, false, false, ([false, false, false, false, true, true, false, false, false, false] is Class251), ((Int8(-99)&127..=Int8(99)&127:((-120)|1)) is (Array<Bool>, Array<Unit>, Array<Range<UInt32>>, Int8, Array<Range<Int64>>, Int16, Array<Array<Float64>>, UInt16))], [true, false, false, (Option<Interface256>.Some(Class251()) is Int64), true, (true is Array<Range<UInt32>>), true, true, false, false], [true, true, true, false, false, true, true, true, true, false], [true, false, false, true, false, true, true, true, false, true], [false, true, false, false, true, false, false, false, false, true], [false, true, false, true, false, false, false, true, false, true], [false, ((true, 74.0, (UInt8(247)&127..UInt8(209)&127:(75|1)), [82.0, (-8.0), (-127.0), 73.0, (-95.0), (-108.0), (-9.0), 105.0, (-99.0), (-87.0)], true) is Range<UInt16>), (Option<Interface256>.Some(Class251()) is Range<Int16>), false, true, (Option<Range<Int16>>.None is (UInt32) -> (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune)), false, true, ((UInt8(50), Int16(-52), UInt16(3), Float32(-18.0), (), 'l', false, (-44)) is Option<Range<Int16>>), ("7=eOa<KAc8" is (((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354, (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), (Int32) -> Unit, Option<UInt32>) -> Interface256)]], (UInt32(201)&127..UInt32(211)&127:(-107)|1), UInt32(131)); let var2702 : Array<Bool> = [false, true, true, true, false, true, false, true, false, false]; var loopTimeVar2708 : Int64 = 0; while ((func465(func2490(optionalParam2491 : var2556, namedParam2516 : var2556, namedParam2517 : var2694, optionalParam2518 : ([(-112.0), (-44.0), (-9.0), (-44.0), (-10.0), 38.0, 92.0, (-9.0), (-45.0), 97.0], Option<Interface256>.Some(Class251()), Int32(114), var2702, var833)))) && loopTimeVar2708 < 100 ) {
        loopTimeVar2708++;
        [(Int8(1)&127..Int8(87)&127:58|1), (Int8(9)&127..Int8(27)&127:(-62)|1), (Int8(-65)&127..Int8(-55)&127:(-84)|1), (Int8(-123)&127..Int8(-84)&127:(-120)|1), (Int8(85)&127..=Int8(-102)&127:(-33)|1), (Int8(-41)&127..Int8(90)&127:14|1), (Int8(-74)&127..Int8(83)&127:87|1), (Int8(87)&127..=Int8(-123)&127:96|1), (Int8(54)&127..Int8(26)&127:(-86)|1), (Int8(-116)&127..Int8(-68)&127:(-19)|1)]
    } };
    (true as Interface254)
}

func func2272(param2273 : UInt32) : Int16 { // block id: 2274
    let var2281 : (Array<Bool>, Array<Unit>, Array<Range<UInt32>>, Int8, Array<Range<Int64>>, Int16, Array<Array<Float64>>, UInt16) = ([true, false, false, true, true, true, true, true, false, false], [(), (), (), (), (), (), (), (), (), ()], [(UInt32(242)&127..=UInt32(205)&127:(-87)|1), (UInt32(223)&127..UInt32(96)&127:75|1), (UInt32(17)&127..=UInt32(109)&127:56|1), (UInt32(155)&127..UInt32(225)&127:(-15)|1), (UInt32(243)&127..UInt32(90)&127:71|1), (UInt32(50)&127..UInt32(94)&127:(-25)|1), (UInt32(216)&127..=UInt32(84)&127:(-66)|1), (UInt32(99)&127..=UInt32(168)&127:(-82)|1), (UInt32(203)&127..=UInt32(135)&127:109|1), (UInt32(213)&127..=UInt32(251)&127:(-14)|1)], Int8(Int8(65)), [(Int64(Int32(16))&127..114&127:(Int64(UInt32(252))|1)), (84&127..=3&127:(-93)|1), ((-120)&127..=105&127:((-83)|1)), ((-109)&127..(-54)&127:110|1), (Int64(Int32(93))&127..=Int64(UInt16(167))&127:((-72)|1)), (Int64(UInt16(82))&127..Int64(Int32(-68))&127:(Int64(UInt32(188))|1)), ((-41)&127..=(-8)&127:121|1), ((-61)&127..=22&127:(-5)|1), (20&127..=(-81)&127:(-37)|1), ((-48)&127..=(-121)&127:42|1)], Int16(Int16(-125)), [[Float64((-45.0)), 68.0, Float64(Float32(110.0)), Float64((-70.0)), 80.0, 106.0, (-70.0), Float64((-34.0)), Float64(Float32(104.0)), Float64(78.0)], [11.0, Float64((-30.0)), (-28.0), 117.0, (-3.0), Float64(Float32(-35.0)), Float64(Float32(-62.0)), 26.0, Float64((-21.0)), Float64(Float32(27.0))], [59.0, 22.0, 0.0, 98.0, (-38.0), Float64(Float32(-96.0)), Float64(Float32(-59.0)), 103.0, (-23.0), (-78.0)], [(-105.0), 76.0, 108.0, (-100.0), (-82.0), (-8.0), 19.0, 121.0, 59.0, (-115.0)], [Float64(30.0), (-108.0), Float64(27.0), Float64((-119.0)), Float64(Float32(94.0)), 45.0, Float64(Float32(-15.0)), 25.0, 95.0, (-114.0)], [(-118.0), (-43.0), (-24.0), 55.0, (-32.0), 12.0, (-23.0), 111.0, (-22.0), (-3.0)], [Float64(20.0), Float64(Float32(49.0)), (-113.0), Float64((-13.0)), Float64(Float32(-119.0)), 2.0, Float64(47.0), (-59.0), (-15.0), 116.0], [Float64(Float32(-124.0)), 102.0, 82.0, 77.0, (-123.0), Float64(16.0), Float64(Float32(-6.0)), Float64(Float32(122.0)), Float64(Float32(0.0)), Float64(Float32(121.0))], [(-65.0), 98.0, (-20.0), (-28.0), 24.0, (-43.0), (-34.0), 11.0, 28.0, (-115.0)], [(-122.0), (-80.0), (-68.0), 78.0, 71.0, 98.0, (-126.0), 67.0, (-118.0), 46.0]], UInt16(UInt16(195)));
    try (resource = Class251()) { // block id: 2276

    } finally { // block id: 2277
        var2281[3];
        let var2442 : Bool = ((Int16(UInt8(87))&127..Int16(40)&127:((-118)|1)) is Array<Float64>);
        try (resource = Class251()) { // block id: 2434
            var277;
            ();
            var var2439 : Bool = false;
            var2439 &&= var2442
        } finally { // block id: 2449
            var2033 -= var2033;
            var277
        }
    };
    func func2475(param2476 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) : Option<Interface254> { // block id: 2477
        let var2751 : (UInt64) -> Option<Interface254> = func2479;
        UInt64(106)|>var2751
    }
;
    (((Option<Option<Option<Interface254>>>.None ?? var2471) ?? func2475((UInt8(16), var152, var1247, var320, var1864, '4', true, (-51)))) ?? Class251());
    let var2773 : Enum158 = Enum158.defaultValue;
    var var2781 : ?Rune = Option<Rune>.None;
    (match (";v/j+,A$/a") {
        case ")Y6hUO<nws" => 
            var2773;
            ()
        
        case _ => 
            ()
        
    }, (var2781 ?? 'o'), try { // block id: 2785
        var152 /= ((Int16(118)) | 1);
        var152
    } finally { // block id: 2790
        var2773;
        [var2794, (UInt32(123)&127..=param2273&127:(14|1)), (UInt32(122)&127..UInt32(142)&127:65|1), var2794, (UInt32(184)&127..=UInt32(60)&127:55|1), (UInt32(74)&127..=UInt32(52)&127:94|1), (UInt32(107)&127..=UInt32(185)&127:56|1), (param2273&127..var953&127:(var517|1)), (UInt32(183)&127..=UInt32(57)&127:27|1), var2794];
        Int16(-108)
    }, var2825, (var1864, var2905, Int16(2), [true, false, true, false, false, var26, var26, var26, var26, true], var1187, var1187)[4], if (true) { var1187 } else { (var295&127..=var295&127:(var2929|1)) } )[2]
}

func func2135(param2136 : Option<Float64>) : Array<Bool> { // block id: 2137
    var var2150 : Bool = ((Int16(-54)&127..=Int16(-13)&127:0|1) is Array<Array<Bool>>);
    var var2169 : UInt64 = UInt64(144);
    let var2241 : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(94)&127..=Int16(Int8(57))&127:((-51)|1)), (), (Int64(Int8(-126))&127..Int64(Int16(Int16(-45)))&127:((-107)|1)), UInt8(UInt8(Int8(13))), Float32(Float32(Float32(22.0))), Int8(-119), (UInt8(UInt8(62)), false, Int8(-22)));
    if (if (false) { // block id: 2142
        var26
    } else if (var26) { // block id: 2145
        var var2147 : Range<Int16> = (Int16(-94)&127..Int16(104)&127:(-5)|1);
        var2147;
        var2150
    } else { // block id: 2153
        (var850, Int16(-43), var1247, var320, var277, 't', false, (-53));
        Float32(-31.0) >= var285
    }) { // block id: 2166
        var2169 <<= ((var2169) & 7);
        var var2188 : (UInt8, Bool, Int8) = (UInt8(UInt8(UInt8(193))), (Enum158.defaultValue is Option<Unit>), Int8(Int8(UInt8(Int8(-60)))));
        if (var2150) { (var2176, var277, (55&127..(-62)&127:(-37)|1), var850, Float32(-98.0), var295, var2188) } else { ((var152&127..=Int16(62)&127:(0|1)), (), ((-21)&127..(-82)&127:(-79)|1), var850, var320, Int8(-91), var2188) } 
    } else if (var2150) { // block id: 2211
        var152++;
        var var2215 : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(-11)&127..=Int16(UInt8(UInt8(194)))&127:((-116)|1)), (), (106&127..=(-122)&127:81|1), UInt8(156), Float32(Float32(43.0)), Int8(30), (UInt8(121), ((Int32(67)&127..Int32(-108)&127:(96|1)) is Option<UInt32>), Int8(8)));
        var2215
    } else { // block id: 2237
        if (var2150) { var2241 } else { var2241 } 
    }[1];
    match ((UInt32(45)|>func2272)) {
        case caseVar2936 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64) => 
            Int32(90)
        
        case caseVar2941 => 
            var1354 ^ var1354
        
        case _ => 
            let var2951 : Rune = 'Y';
            (var277, var2951, var152, [true, var2150, var2150, var26, true, var2150, var26, true, false, false], (Int8(-82)&127..=Int8(-88)&127:(113|1)), (Int8(-1)&127..=Int8(83)&127:15|1));
            var1354
        
    };
    [false, false, false, true, false, true, true, true, true, true]
}

public func func1329(param1330 : Option<Rune>) : Array<Float64> { // block id: 1331
    let var1335 : Range<UInt16> = (UInt16(106)&127..=UInt16(167)&127:(-128)|1);
    let var1427 : Interface256 = Class251();
    func func1380(param1381 : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354, param1384 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), param1385 : (Int32) -> Unit, param1388 : Option<UInt32>) : Interface256 { // block id: 1389
        (if (var26) { var1400 } else { var1400 } [1] ?? (Option<Interface256>.None ?? if (var26) { Class251() } else { var1427 } ))
    }
;
    let var1430 : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354 = { lambdaParameter1433 : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64) => Enum354.enumValue1436((Int32(-74)&127..=Int32(UInt16(163))&127:(Int64(Int32(-2))|1)), [[false, false, false, true, true, false, false, false, true, true], [true, true, true, true, true, false, false, true, true, false], [false, false, false, false, false, true, true, false, true, false], [true, false, false, true, false, true, false, false, false, true], [false, true, true, true, false, true, false, false, false, false], [true, false, true, false, true, false, true, true, false, true], [true, false, false, false, true, true, false, false, false, false], [false, false, true, true, false, false, true, true, false, true], [true, true, false, true, false, false, true, false, true, true], [false, false, false, true, true, false, true, false, true, true]]) };
    let var1453 : Rune = 'I';
    let var1458 : (Int32) -> Unit = { lambdaParameter1461 : Int32 =>  };
    let var1920 : Array<Bool> = Array<Bool>(10){ i => (Class251() is Unit) };
    let var1974 : Array<Range<Int64>> = [(1&127..=(-128)&127:(45|1)), ((-42)&127..=44&127:46|1), (7&127..=(-122)&127:65|1), (Int64(UInt8(134))&127..98&127:(63|1)), ((-60)&127..Int64(Int32(45))&127:(Int64(UInt64(32))|1)), ((-48)&127..104&127:(Int64(UInt8(Int8(-21)))|1)), ((-99)&127..=(-82)&127:(29|1)), (Int64(UInt16(77))&127..=38&127:(19|1)), ((-9)&127..=106&127:10|1), (Int64(UInt16(UInt16(93)))&127..=3&127:((-126)|1))];
    let var2055 : Bool = (UInt16(101) is Option<Interface256>);
    func func1338() : Array<Float64> { // block id: 1339
        var var1365 : Interface256 = Class251();
        try { // block id: 1341
            var var1360 : Int16 = Int16(Int8(-52));
            match (Option<Float64>.Some((-94.0))) {
                case caseVar1347 : Rune => 
                    var152
                
                case _ => 
                    var1354 ^= Int32(-36);
                    var152 << ((var1360) & 7)
                
            };
            ();
            var1365
        } finally { // block id: 1367
            var var1373 : UInt64 = UInt64(Int8(-29));
            var loopTimeVar1378 : Int64 = 0;
            while ((false) && loopTimeVar1378 < 100 ) {
                loopTimeVar1378++;
                var1373 >>= ((UInt64(58)) & 7)
            };
            func1380(var1430, (var850, Int16(-36), UInt16(160), Float32(17.0), (), var1453, var26, var517), var1458, Option<UInt32>.None)
        };
        func func1494(param1495 : Array<Array<Bool>>, param1496 : Unit) : Option<Unit> { // block id: 1497
            var1501[1];
            var var1764 : ?Unit = Option<Unit>.None;
            var1764
        }
;
        let var1791 : Int8 = Int8(103);
        let var1842 : Option<Array<Bool>> = Option<Array<Bool>>.Some([('L' is Array<Bool>), false, (Option<UInt32>.Some(UInt32(216)) is Range<Int32>), (UInt64(97) is Range<Int32>), false, true, ([(Int8(34)&127..=Int8(55)&127:(-29)|1), (Int8(-89)&127..=Int8(-27)&127:(-68)|1), (Int8(-102)&127..=Int8(73)&127:(-108)|1), (Int8(121)&127..Int8(-46)&127:62|1), (Int8(-48)&127..Int8(-2)&127:118|1), (Int8(-60)&127..Int8(-78)&127:76|1), (Int8(-110)&127..Int8(-9)&127:(-96)|1), (Int8(-128)&127..Int8(-32)&127:(-91)|1), (Int8(-92)&127..Int8(33)&127:(-116)|1), (Int8(-24)&127..Int8(-73)&127:(-102)|1)] is Array<Range<Int8>>), false, (Int8(UInt8(204)) is (Interface255) -> Interface254), false]);
        let var1945 : (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>) = ([(-52.0), (-31.0), 41.0, 65.0, (-41.0), (-65.0), (-74.0), 88.0, 88.0, 112.0], (Enum158.defaultValue as Interface256), Int32(UInt32(237)), [true, true, false, true, false, true, false, false, true, true], [[true, true, false, true, true, true, true, false, false, false], [true, true, true, true, false, false, false, true, false, true], [false, true, false, true, true, true, false, false, false, true], [false, true, true, false, true, true, false, false, true, false], [false, true, true, false, false, true, false, true, false, true], [false, true, true, true, true, false, false, false, true, false], [false, true, true, true, false, true, false, false, false, false], [true, true, false, false, true, true, true, true, true, true], [true, true, false, true, false, false, false, false, false, true], [false, false, true, true, true, true, true, true, false, false]]);
        var loopTimeVar3060 : Int64 = 0;
        do {
            loopTimeVar3060++;
            let var1960 : (Range<Int16>) -> Bool = { lambdaParameter1963 : Range<Int16> => false };
            let var2973 : (Option<Float64>) -> Array<Bool> = func2135;
            let var2993 : ?Float64 = Option<Float64>.Some(56.0);
            let var3013 : Option<Option<UInt32>> = Option<Option<UInt32>>.Some(((Enum158.enumValue2715(Option<Range<Int16>>.Some((Int16(78)&127..Int16(115)&127:(-59)|1))) as Interface254) as UInt32));
            let var3049 : ?Float64 = Option<Float64>.None;
            func func1482(param1483 : Interface255) : Array<Array<Bool>> { // block id: 1484
                func func1491() : Option<Unit> { // block id: 1492
                    func1494(match ([true, true, true, var26, true, true, false, false, true, var26]) {
                        case _ => 
                            var833
                        
                        case caseVar1784 : Array<Range<UInt32>> => 
                            ();
                            (var850, var26, var1791);
                            [[false, false, true, true, false, true, false, true, false, false], [false, true, false, true, true, true, true, true, false, true], [true, true, false, true, false, true, true, false, true, false], [true, false, true, false, false, true, false, true, true, true], [false, false, false, true, false, true, false, false, false, false], [false, false, false, false, true, true, false, true, false, false], [false, true, false, false, false, true, false, true, false, false], [false, true, false, false, true, false, false, false, false, false], [true, false, false, false, false, false, false, false, false, true], [false, true, false, true, false, false, false, true, false, false]]
                        
                        case caseVar1796 : Option<Bool> => 
                            var833
                        
                        case _ => 
                            [[false, true, true, false, false, false, false, true, true, true], [false, false, true, false, false, false, true, true, false, false], [true, false, true, false, false, true, true, true, false, true], [true, true, false, false, false, false, true, false, false, true], [false, false, true, true, true, false, false, false, true, false], [false, true, false, false, true, true, false, false, false, true], [false, false, true, true, false, true, false, true, false, true], [true, false, true, true, false, false, true, true, true, true], [false, false, true, false, true, false, true, true, true, false], [false, true, false, false, true, false, false, false, false, false]]
                        
                    }, ())
                }
;
                var loopTimeVar1827 : Int64 = 0;
                (func1491() ?? while ((match (Int32(-39)) {
                    case -43 | -108 | 116 => 
                        Int16(-47);
                        false
                    
                    case 73 => 
                        ();
                        var1247 >>= ((var1247) & 7);
                        Float32(-36.0) <= Float32(45.0)
                    
                    case _ => 
                        var26
                    
                }) && loopTimeVar1827 < 100 ) {
                    loopTimeVar1827++;
                    var1453
                });
                var var1969 : Int32 = Int32(-101);
                [(try { // block id: 1835
                    Option<Unit>.None;
                    (var953&127..var953&127:(91|1));
                    var1842
                } finally { // block id: 1862
                    var1864;
                    var277;
                    var1842
                } ?? try { // block id: 1869
                    if (false) { [(), var1864, var1864, var1864, var1864, var277, var1864, (), var277, ()] } else { [var277, (), (), (), (), (), (), var1864, var1864, ()] } ;
                    var1400;
                    [var26, var26, true, false, var26, var26, false, var26, false, var26]
                } finally { // block id: 1906
                    var285;
                    [var26, var26, true, var26, var26, true, var26, false, var26, false]
                }), var1920, [(Option<Enum354>.None is Array<Range<Int8>>), (var1945 is Aggregate104), (Option<Bool>.Some(true) ?? var26), ((Int16(-90)&127..Int16(44)&127:49|1)|>var1960), (var1969 is Range<UInt16>), var26, (var1974 is Array<Array<Float64>>), (Option<Rune>.Some(var1453) is Option<Unit>), var26, (var1034 is Range<UInt8>)], if (try { // block id: 2023
                    var1864;
                    var var2028 : Float64 = 42.0;
                    8.0 == var2028
                } catch (e: Exception) { // block id: 2030
                    var2033 -= 75;
                    !var26
                }) { var1920 } else { (if (true) { [false, false, false, true, var26, var26, true, true, var26, var2055] } else { var1920 } ) } , [(Option<Bool>.None ?? var26), match ([[(-24.0), 31.0, 105.0, (-100.0), (-55.0), (-101.0), 18.0, 36.0, (-5.0), (-122.0)], [(-68.0), 89.0, 73.0, (-4.0), (-72.0), 43.0, (-81.0), 123.0, (-57.0), 7.0], [4.0, (-12.0), (-20.0), 115.0, (-82.0), 73.0, 108.0, 97.0, (-66.0), 2.0], [52.0, (-109.0), 41.0, (-57.0), (-99.0), 12.0, (-29.0), (-90.0), (-16.0), 102.0], [(-23.0), 2.0, 65.0, 15.0, 91.0, 3.0, 99.0, (-40.0), (-109.0), (-35.0)], [(-97.0), 70.0, (-100.0), (-1.0), 51.0, 8.0, (-100.0), (-36.0), 56.0, (-103.0)], [(-93.0), 63.0, (-90.0), 9.0, (-125.0), 85.0, 18.0, (-111.0), 27.0, (-124.0)], [89.0, 96.0, 47.0, 44.0, (-53.0), 121.0, 107.0, 11.0, 57.0, 89.0], [70.0, (-110.0), 4.0, (-26.0), 124.0, (-28.0), (-45.0), (-64.0), 89.0, 21.0], [56.0, (-12.0), 52.0, 92.0, (-31.0), (-36.0), (-117.0), 101.0, (-127.0), 69.0]]) {
                    case _ => 
                        48.0 < (-31.0)
                    
                }, !var2055, true, match (var1501) {
                    case _ => 
                        UInt16(48);
                        true
                    
                }, (var26, 107.0, var2085, [(-7.0), 96.0, 6.0, 119.0, (-2.0), 78.0, 20.0, 114.0, (-15.0), 90.0], var2055)[4], if (false) { // block id: 2092
                    var26
                } else if (false) { // block id: 2095
                    ();
                    UInt64(157) > UInt64(117)
                } else { // block id: 2100
                    true
                }, true, (Option<Bool>.Some(var2055) ?? var26), match (var137) {
                    case _ : Array<Float64> => 
                        false
                    
                    case _ : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32) => 
                        var285 != var285
                    
                    case _ => 
                        var152 &= Int16(-111);
                        var var2126 : UInt64 = UInt64(UInt64(50));
                        var2126 += var2126;
                        var2126 < UInt64(50)
                    
                }], var1920, (match (var277) {
                    case _ => 
                        ();
                        var850;
                        if (false) { Option<Float64>.Some(38.0) } else { Option<Float64>.None } 
                    
                    case () | () | () | () => 
                        if (true) { var2993 } else { Option<Float64>.None } 
                    
                    case caseVar2999 => 
                        if (true) { var2993 } else { Option<Float64>.Some(var1034) } 
                    
                    case () => 
                        var2993
                    
                    case _ => 
                        var3013;
                        [(Int8(107)&127..Int8(15)&127:30|1), (var295&127..Int8(-80)&127:(var2033|1)), (Int8(86)&127..Int8(29)&127:(var2033|1)), (var1791&127..=Int8(2)&127:((-8)|1)), var1187, (Int8(-80)&127..=Int8(-101)&127:90|1), (Int8(-91)&127..Int8(37)&127:46|1), (Int8(-23)&127..Int8(-74)&127:(var2033|1)), (var1791&127..=Int8(107)&127:(29|1)), var1187];
                        if (var26) { var3049 } else { Option<Float64>.None } 
                    
                }|>var2973), var1920, ((Option<Option<UInt32>>.None as Array<Bool>) ?? var1920), [true, false, true, false, true, false, false, false, true, true]]
            }
;
            func1482(Class251())
        } while (((var1112 ?? if (false) { // block id: 1469
            true
        } else { // block id: 1471
            var152 ^= Int16(84);
            ((-22)&127..(-27)&127:((-89)|1));
            true
        })) && loopTimeVar3060 < 100 ) ;
        [(-59.0), 101.0, (-33.0), (-7.0), 91.0, (-109.0), 123.0, 19.0, (-60.0), (-66.0)]
    }
;
    if ((var1335 is Interface254)) { func1338() } else { var3063 } 
}






func func1220(param1221 : Option<Enum354>) : Option<UInt32> { // block id: 1222
    let var1304 : Array<Float64> = Array<Float64>(10){ i => Float64(Float64((-81.0))) };
    let var3074 : Option<Array<Float64>> = (Option<Range<Int16>>.Some((Int16(UInt16(55))&127..=Int16(Int8(113))&127:(17|1))) as Array<Float64>);
    let var3116 : Float64 = 43.0;
    let var3125 : Float64 = Float64(Float64((-70.0)));
    let var3171 : Float64 = (-109.0);
    let var3266 : ?Enum158 = (UInt8(Int8(UInt8(163))) as Enum158);
    let var3279 : ?Range<Int16> = (Class251() as Range<Int16>);
    func func1273(param1274 : Interface254) : Enum158 { // block id: 1275
        var var3103 : Float64 = (-80.0);
        [if (var26) { [var1034, var1034, var1034, (-107.0), (-55.0), var1034, (-121.0), var1034, (-60.0), var1034] } else { [98.0, (-16.0), (-53.0), (-34.0), var1034, 69.0, var1034, var1034, var1034, (-60.0)] } , var1304, (Option<Rune>.None|>func1329), [64.0, (-77.0), 39.0, 33.0, 31.0, (-106.0), (-106.0), 4.0, 37.0, (-33.0)], (var3074 ?? [(-89.0), 64.0, 9.0, (-34.0), 60.0, (-93.0), 94.0, 28.0, 82.0, 91.0]), match (UInt64(80)) {
            case _ => 
                var var3091 : UInt64 = UInt64(110);
                var3091 += UInt64(209);
                (UInt64(184)&127..=UInt64(8)&127:100|1);
                var3063
            
            case _ => 
                if (true) { [61.0, var3103, 34.0, var1034, (-82.0), var1034, var3103, (-61.0), var3103, var1034] } else { [(-45.0), 83.0, (-87.0), (-23.0), (-32.0), 84.0, (-68.0), (-94.0), (-46.0), (-29.0)] } ;
                [var3116, var1034, var3116, (-70.0), (-55.0), (-26.0), (-84.0), var3125, (-20.0), 22.0]
            
        }, try { // block id: 3132
            var1247;
            ();
            if (false) { var1304 } else { [1.0, (-49.0), (-63.0), 97.0, 36.0, 60.0, (-34.0), 115.0, 56.0, (-23.0)] } 
        } catch (e: Exception) { // block id: 3139
            [58.0, (-30.0), var3116, (-43.0), var3116, var1034, (-21.0), var3103, 88.0, 3.0]
        } finally { // block id: 3151
            var1304
        }, [var1034, 40.0, (-54.0), var3125, (-104.0), var3125, var3103, 58.0, 36.0, var1034], [(-106.0), (-9.0), var3125, var3116, var3116, var3171, 99.0, var3103, var3176, (-77.0)], (var3074 ?? var3063)][6];
        var var3192 : (Array<Range<Int8>>, Array<Array<Bool>>) = ([(Int8(51)&127..=Int8(1)&127:89|1), (Int8(36)&127..=Int8(-29)&127:(-14)|1), (Int8(111)&127..=Int8(-31)&127:125|1), (Int8(84)&127..=Int8(76)&127:(-118)|1), (Int8(-46)&127..Int8(41)&127:124|1), (Int8(86)&127..Int8(-97)&127:40|1), (Int8(118)&127..=Int8(-39)&127:113|1), (Int8(-2)&127..Int8(123)&127:121|1), (Int8(-104)&127..Int8(115)&127:(-83)|1), (Int8(-44)&127..=Int8(-32)&127:(-8)|1)], [[true, false, false, false, false, true, true, false, false, true], [false, false, false, true, false, false, true, true, true, true], [false, true, false, true, true, true, true, true, false, false], [true, false, false, false, true, false, false, true, true, false], [true, true, true, false, false, false, true, false, false, true], [true, true, false, true, true, true, true, true, false, false], [true, true, true, false, false, true, false, true, true, false], [false, false, false, false, true, false, false, false, false, false], [true, true, true, true, true, false, false, true, false, false], [true, false, true, false, false, false, true, true, true, false]]);
        if (var26) { (var3192, Int8(-43), var295) } else { var3199 } [0][1];
        (var3266 ?? Enum158.enumValue2715((Option<Option<Range<Int16>>>.Some(var3279) ?? var3279)))
    }
;
    let var3350 : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(-4)&127..=Int16(107)&127:(114|1)), (), ((-82)&127..Int64(Int8(UInt8(238)))&127:((-6)|1)), UInt8(193), Float32(-107.0), Int8(-85), (UInt8(Int8(Int8(-88))), ((true, 8.0, (UInt8(170)&127..UInt8(20)&127:(-61)|1), [85.0, (-36.0), (-10.0), (-108.0), (-84.0), (-107.0), 6.0, (-90.0), 60.0, (-33.0)], true) is (Interface255) -> Interface254), Int8(87)));
    func func1225(namedParam1226 ! : Array<Range<Int8>>, optionalParam1227 ! : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64) = (UInt8(38), Int16(91), UInt16(223), Float32(Float32(Float32(Float32(-33.0)))), (), 'E', (Float64(Float32(-64.0)) is Enum158), (-69)), optionalParam1242 ! : Float64 = 35.0) : UInt8 { // block id: 1244
        let var1258 : ?Unit = Option<Unit>.Some(());
        var1247 /= ((if (if (var26) { // block id: 1253
            if (var26) { Option<Unit>.None } else { var1258 } ;
            var26
        } else { // block id: 1262
            var285;
            ();
            true
        }) { // block id: 1266
            UInt16(18)
        } else { // block id: 1268
            Class251();
            var1247
        }) | 1);
        let var3284 : Interface254 = Class251();
        match (func1273(var3284)) {
            case _ => 
                var3290 &&= true
            
        };
        (try { // block id: 3327
            Option<Bool>.None;
            var1247 **= (UInt16(60) & 3);
            var var3337 : ?UInt8 = (Int8(-30) as UInt8);
            if (false) { Option<UInt8>.Some(var850) } else { var3337 } 
        } finally { // block id: 3340
            var3342
        } ?? match (try { // block id: 3348
                var3350
            } finally { // block id: 3378
                var277;
                var3382 += UInt64(184);
                if (false) { (var2176, var1864, var341, var850, Float32(-58.0), Int8(-116), (UInt8(112), false, Int8(-75))) } else { var3350 } 
            }) {
            case _ => 
                let var3405 : ?Unit = Option<Unit>.Some(());
                if (true) { Option<Unit>.None } else { var3405 } ;
                var850
            
        })
    }
;
    (func1225(namedParam1226 : (Option<Array<Range<Int8>>>.Some([(Int8(112)&127..=var295&127:(var2929|1)), (Int8(-19)&127..=Int8(21)&127:38|1), (Int8(-103)&127..Int8(-37)&127:(-52)|1), (Int8(27)&127..Int8(60)&127:(-51)|1), (Int8(-51)&127..Int8(-72)&127:(-13)|1), (Int8(80)&127..=Int8(-114)&127:(-10)|1), (Int8(118)&127..=Int8(-22)&127:((-16)|1)), var1187, (Int8(5)&127..=Int8(3)&127:122|1), (Int8(74)&127..Int8(8)&127:33|1)]) ?? [(Int8(2)&127..Int8(35)&127:(-23)|1), (Int8(-98)&127..Int8(-14)&127:71|1), (Int8(-85)&127..=Int8(69)&127:(-87)|1), (Int8(88)&127..Int8(45)&127:28|1), (Int8(-54)&127..Int8(34)&127:47|1), (Int8(-49)&127..=Int8(-22)&127:115|1), (Int8(-20)&127..=Int8(-40)&127:21|1), (Int8(100)&127..=Int8(7)&127:93|1), (Int8(16)&127..Int8(84)&127:90|1), (Int8(109)&127..Int8(-64)&127:8|1)]), optionalParam1227 : var3434, optionalParam1242 : (Option<Float64>.None ?? var3171)) as UInt32)
}

func func1067(optionalParam1068 ! : UInt32 = UInt32(53), optionalParam1070 ! : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(UInt8(Int8(-118)))&127..=Int16(Int16(69))&127:(Int64(UInt64(Int8(-91)))|1)), (), ((-47)&127..(-52)&127:(-8)|1), UInt8(UInt8(234)), Float32(Float32(97.0)), Int8(Int8(Int8(Int8(70)))), (UInt8(Int8(-12)), (([(), (), (), (), (), (), (), (), (), ()] as Float64) is UInt16), Int8(UInt8(UInt8(249))))), namedParam1100 ! : (String) -> Range<Int8>) : Option<UInt32> { // block id: 1103
    var var1126 : Int32 = Int32(21);
    ((if ((var1112 ?? true)) { try { // block id: 1117
        var277;
        (Int8(47)&127..=var295&127:(var517|1))
    } finally { // block id: 1123
        (var1126&127..Int32(-125)&127:(var517|1));
        var1131;
        if (false) { (var295&127..var295&127:(var517|1)) } else { var1187 } 
    } } else { [(Int8(43)&127..Int8(89)&127:6|1), (Int8(58)&127..Int8(43)&127:(-18)|1), (Int8(42)&127..Int8(106)&127:7|1), (Int8(-42)&127..Int8(-82)&127:65|1), (Int8(125)&127..Int8(26)&127:(-53)|1), (Int8(-53)&127..=Int8(53)&127:105|1), (Int8(-107)&127..=Int8(126)&127:78|1), (Int8(-40)&127..=Int8(52)&127:21|1), (Int8(57)&127..=Int8(50)&127:2|1), (Int8(97)&127..=Int8(19)&127:27|1)][1] } ) as Rune);
    var loopTimeVar1218 : Int64 = 0;
    while (([var26, var26, false, var26, var26, var26, false, var26, var26, var26][9]) && loopTimeVar1218 < 100 ) {
        loopTimeVar1218++;
        Int32(49)|>func824
    };
    let var3470 : ?Enum158 = ([(21&127..(-51)&127:(Int64(UInt8(165))|1)), (Int64(Int8(-110))&127..=(-1)&127:(Int64(Int8(46))|1)), ((-11)&127..Int64((-14))&127:((-82)|1)), (71&127..(-88)&127:((-92)|1)), ((-79)&127..=(-97)&127:(-49)|1), (7&127..Int64(UInt8(129))&127:(Int64(Int32(35))|1)), ((-109)&127..(-47)&127:(-38)|1), ((-37)&127..=Int64(Int8(102))&127:(21|1)), (Int64(UInt8(73))&127..=Int64(UInt16(14))&127:(Int64((-64))|1)), ((-122)&127..(-84)&127:((-110)|1))] as Enum158);
    match (match (var3454) {
            case caseVar3460 => 
                var3176 += (-112.0);
                let var3467 : Bool = false;
                if (var3467) { var3470 } else { var3470 } 
            
            case _ : Array<Range<Int64>> => 
                if (true) { var3470 } else { Option<Enum158>.None } 
            
            case _ => 
                var1247 /= ((UInt16(4)) | 1);
                Option<Enum158>.Some(Enum158.defaultValue)
            
        }) {
        case _ => 
            [(Int8(-32)&127..Int8(-7)&127:119|1), (var295&127..=var295&127:((-38)|1)), (Int8(119)&127..=var295&127:(18|1)), var1187, (Int8(87)&127..=Int8(-101)&127:10|1), var1187, (Int8(63)&127..=Int8(67)&127:28|1), (Int8(69)&127..Int8(32)&127:(-101)|1), var1187, (var295&127..=Int8(118)&127:((-45)|1))];
            Option<Enum354>.None
        
    }|>func1220
}

public func func1063(param1064 : Bool) : Option<Enum354> { // block id: 1065
    var var3627 : (String) -> Range<Int8> = func892;
    func1067(optionalParam1068 : var953, optionalParam1070 : if (((UInt32(10)&127..UInt32(173)&127:117|1) is Range<UInt8>)) { (if (var3290) { ((Int16(-20)&127..=Int16(62)&127:(4|1)), (), (27&127..=21&127:((-74)|1)), var850, Float32(-89.0), Int8(-32), var3575) } else { ((var152&127..=var152&127:(var2033|1)), (), ((-76)&127..=var2033&127:(81|1)), var850, Float32(-29.0), var295, (var850, param1064, var295)) } ) } else { (if (true) { var3601 } else { var3601 } ) } , namedParam1100 : var3627);
    match (var3631) {
        case _ => 
            Int16(32);
            Option<Enum354>.None
        
        case _ => 
            if (false) { var2723 } else { Option<Interface256>.None } ;
            var3645
        
    }
}


public func func1022(param1023 : (String) -> Range<Int8>) : Option<Rune> { // block id: 1026
    ();
    let var1054 : Float64 = Float64(Float32(Float32(Float32(Float32(-52.0)))));
    var var3649 : (Bool) -> Option<Enum354> = func1063;
    var loopTimeVar3653 : Int64 = 0;
    do {
        loopTimeVar3653++;
        true|>var3649
    } while (([var1034, var1034, 0.0, 120.0, var1034, var1034, 107.0, var1034, var1034, var1034][4] < (Option<Float64>.Some(var1054) ?? (-69.0))) && loopTimeVar3653 < 100 ) ;
    let var3685 : ??Rune = Option<Option<Rune>>.Some(((UInt8(215)&127..=UInt8(101)&127:(-111)|1) as Rune));
    let var3735 : Range<Int32> = (Int32(20)&127..Int32(44)&127:(Int64(UInt16(Int8(UInt8(55))))|1));
    (if (var26) { match (var2471) {
        case _ => 
            Option<Option<Rune>>.None
        
        case caseVar3669 => 
            Option<Option<Rune>>.None
        
        case _ => 
            Option<Option<Rune>>.Some(Option<Rune>.None)
        
        case _ => 
            ();
            if (false) { Option<Option<Rune>>.None } else { Option<Option<Rune>>.None } 
        
    } } else { var3685 }  ?? match (Option<Array<Float64>>.Some(var3063)) {
        case caseVar3694 : (Unit, Rune, Int16, Array<Bool>, Range<Int8>, Range<Int8>) => 
            var3697;
            var277;
            if (true) { var3454 } else { var3454 } 
        
        case caseVar3707 : Option<Option<Option<Interface254>>> => 
            var1034 + (-113.0);
            if (var26) { var3715 } else { Class251() } ;
            if (var3290) { Option<Rune>.None } else { var3454 } 
        
        case caseVar3724 : Option<Interface256> => 
            if (true) { Option<Rune>.None } else { Option<Rune>.None } 
        
        case _ : Int8 => 
            ();
            var3735;
            Option<Rune>.None
        
        case _ => 
            Option<Rune>.None
        
    })
}

public func func3748(param893 : String) : Range<Int8> { // block id: 894
    var277;
    var var897 : Range<Int8> = (Int8(110)&127..=Int8(12)&127:25|1);
    var897
}


func func1012(param1013 : Interface256) : Option<Enum354> { // block id: 1014
    let var3751 : (String) -> Range<Int8> = func3748;
    var var3759 : UInt8 = UInt8(55);
    let var3776 : Int8 = Int8(UInt8(30));
    var var3788 : Int64 = Int64(UInt16(235));
    match (((var3751|>func1022) ?? if (false) { // block id: 3755
            var2825;
            var3759++;
            if (true) { var2905 } else { 'x' } 
        } else { // block id: 3765
            ((var152&127..Int16(23)&127:(var517|1)), (), var341, UInt8(192), var285, var3776, var3575);
            Option<UInt8>.Some(UInt8(70));
            var2905
        })) {
        case _ => 
            var3788 /= ((var3788) | 1);
            [(-7.0), (-107.0), 50.0, (-49.0), 9.0, (-37.0), (-27.0), 99.0, 8.0, 66.0];
            ()
        
        case 'w' | 'V' | 'i' | 'O' => 
            ()
        
        case 'K' => 
            var3290 &&= false
        
        case _ => 
            var1864;
            ()
        
    };
    var loopTimeVar3812 : Int64 = 0;
    while ((var26) && loopTimeVar3812 < 100 ) {
        loopTimeVar3812++;

    };
    let var3821 : Option<Interface254> = Option<Interface254>.Some(Class251());
    var var3851 : Int8 = Int8(-47);
    match (((var3821 as Option<UInt8>) ?? try { // block id: 3825
            ();
            ();
            if (false) { Option<UInt8>.Some(UInt8(229)) } else { var3342 } 
        } finally { // block id: 3833
            if (true) { Option<UInt8>.None } else { Option<UInt8>.Some(var3759) } 
        })) {
        case _ : (Array<Bool>, Array<Unit>, Array<Range<UInt32>>, Int8, Array<Range<Int64>>, Int16, Array<Array<Float64>>, UInt16) => 
            if (var26) { var3645 } else { var3645 } 
        
        case _ : Array<Range<UInt32>> => 
            var3851 ^= Int8(88);
            var1864;
            Option<Enum354>.Some(Enum354.defaultValue)
        
        case _ => 
            var43;
            var152 ** (Int16(121) & 3);
            var3645
        
    }
}

public func func2135(param1009 : UInt64) : Option<Enum354> { // block id: 1010
    let var3865 : (Interface256) -> Option<Enum354> = func1012;
    var var3874 : Bool = false;
    try { // block id: 3868
        var3290 &&= true;
        var3874 ||= var26;
        if (false) { var3880 } else { Class251() } 
    } catch (_) { // block id: 3883
        [var1187, (var295&127..=var295&127:((-65)|1)), (Int8(-76)&127..var295&127:(var2929|1)), (Int8(-37)&127..Int8(63)&127:60|1), (Int8(4)&127..var295&127:((-61)|1)), (Int8(-28)&127..=Int8(80)&127:(-98)|1), (Int8(-27)&127..=Int8(-22)&127:94|1), (Int8(-13)&127..Int8(44)&127:(-65)|1), var1187, (var295&127..=var295&127:(97|1))];
        var var3912 : Int32 = Int32(UInt16(231));
        if (var3874) { (var1354&127..var3912&127:((-40)|1)) } else { (var3912&127..=var3912&127:(117|1)) } ;
        Class251()
    }|>var3865
}




public func func991(param992 : (Range<Int16>) -> Bool, namedParam995 ! : Int8, namedParam996 ! : (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), namedParam997 ! : Array<Range<Int64>>) : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) { // block id: 998
    var var3949 : UInt8 = UInt8(197);
    var var3956 : UInt16 = UInt16(122);
    (if ((Class251() is Array<Array<Bool>>)) { func2135(var3382) } else { (Option<Option<Enum354>>.None ?? Option<Enum354>.None) }  ?? Enum354.enumValue1436(try { // block id: 3931
        (var1354&127..=var1354&127:(var2929|1))
    } catch (e: Exception) { // block id: 3936
        ();
        (Int32(-15)&127..var1354&127:(23|1))
    }, match (var3382) {
        case 177 | 33 | 143 => 
            var3949 |= UInt8(246);
            var833
        
        case _ => 
            var3956;
            let var3959 : (Array<Range<Int8>>, Array<Array<Bool>>) = ([(Int8(Int8(74))&127..=Int8(Int8(-75))&127:((-45)|1)), (Int8(UInt8(108))&127..=Int8(-123)&127:(Int64(Int16(-118))|1)), (Int8(35)&127..Int8(-38)&127:(-58)|1), (Int8(UInt8(86))&127..Int8(Int8(-92))&127:((-81)|1)), (Int8(UInt8(36))&127..=Int8(57)&127:(Int64(UInt32(153))|1)), (Int8(-51)&127..Int8(93)&127:97|1), (Int8(120)&127..=Int8(-44)&127:(Int64(UInt16(164))|1)), (Int8(UInt8(133))&127..=Int8(-22)&127:(Int64(Int32(-120))|1)), (Int8(45)&127..=Int8(-109)&127:(-118)|1), (Int8(Int8(-48))&127..=Int8(UInt8(216))&127:(Int64(UInt16(212))|1))], [[true, true, false, true, true, false, false, false, true, true], [false, true, false, false, false, true, true, false, false, false], [false, true, true, true, false, true, false, false, false, true], [false, false, false, false, false, true, false, true, false, true], [false, false, true, true, true, false, false, true, false, true], [true, false, true, false, false, true, false, true, true, false], [true, false, false, false, false, true, false, true, false, true], [true, false, false, true, false, false, false, false, true, false], [true, false, true, false, false, true, false, false, false, false], [true, true, true, false, false, true, true, true, false, true]]);
            var3959;
            var833
        
    }));
    let var4034 : ?(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None;
    (if ((var1112 ?? true)) { (var4024 ?? Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None) } else { match (var137) {
        case _ => 
            var4034
        
        case _ : (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>) => 
            var277;
            var var4045 : Bool = true;
            if (var3290) { [var26, var4045, var3290, false, false, false, false, false, true, true] } else { [false, var4058, var26, true, true, false, false, false, var3290, var4045] } ;
            Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.Some(((Int16(38)&127..=Int16(18)&127:105|1), var277, var341, var850, Float32(53.0), var295, var3575))
        
        case _ : Int8 => 
            if (true) { Option<Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>>.None } else { Option<Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>>.Some(var4034) } ;
            ();
            Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.Some(var3601)
        
        case _ : Array<Array<Float64>> => 
            (Class251(), var3956, (Int32(-97)&127..Int32(102)&127:93|1), var3601, var2905);
            if (var3290) { Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None } else { Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None } 
        
        case _ => 
            Option<Float64>.None;
            ();
            Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None
        
    } }  ?? var3601)
}




func func986(param987 : UInt8) : Interface255 { // block id: 988
    let var4108 : (Range<Int16>) -> Bool = func465;
    let var4114 : Unit = ();
    func991(var4108, namedParam995 : match {
        case true => 
        var4114;
        Int8(-101)
        case _ => 
        Aggregate104();
        var295
    }, namedParam996 : if (var4058) { // block id: 4122
        var3434
    } else if (var3290) { // block id: 4125
        var1864;
        var3434
    } else { // block id: 4128
        var137;
        var277;
        var3434
    }, namedParam997 : match (Int8(-9)) {
        case caseVar4136 => 
            var4114;
            var473
        
        case caseVar4142 : Option<Array<Float64>> => 
            var3382 = var3382;
            if (var4058) { var473 } else { [(27&127..6&127:(-29)|1), (30&127..(-32)&127:85|1), ((-66)&127..(-53)&127:124|1), ((-19)&127..106&127:(-8)|1), ((-26)&127..113&127:38|1), ((-113)&127..45&127:(-94)|1), (106&127..111&127:(-118)|1), ((-93)&127..105&127:115|1), ((-41)&127..39&127:10|1), ((-14)&127..58&127:(-56)|1)] } 
        
        case caseVar4153 : Option<Interface256> => 
            [((-81)&127..84&127:(-123)|1), (3&127..=(-55)&127:16|1), ((-3)&127..=(-40)&127:84|1), ((-61)&127..=(-75)&127:37|1), ((-12)&127..=49&127:105|1), (91&127..=(-95)&127:19|1), ((-105)&127..7&127:(-85)|1), ((-4)&127..(-31)&127:(-2)|1), ((-113)&127..12&127:82|1), ((-11)&127..(-78)&127:(-65)|1)]
        
        case _ => 
            [(6&127..44&127:55|1), ((-73)&127..=(-22)&127:(-42)|1), ((-4)&127..(-36)&127:(-106)|1), (49&127..(-62)&127:39|1), ((-48)&127..=(-63)&127:102|1), ((-55)&127..=118&127:126|1), ((-34)&127..=71&127:(-17)|1), (104&127..6&127:(-41)|1), (68&127..(-78)&127:5|1), ((-68)&127..72&127:(-33)|1)]
        
    })[1];
    let var4163 : ?(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None;
    var var4174 : (Array<Range<Int8>>, Array<Array<Bool>>) = ([(Int8(55)&127..Int8(56)&127:(Int64(Int8(-26))|1)), (Int8(43)&127..Int8(93)&127:(-93)|1), (Int8(116)&127..Int8(27)&127:70|1), (Int8(-91)&127..Int8(33)&127:83|1), (Int8(UInt8(193))&127..Int8(-55)&127:((-126)|1)), (Int8(Int8(99))&127..=Int8(UInt8(83))&127:(Int64(UInt64(140))|1)), (Int8(98)&127..=Int8(116)&127:74|1), (Int8(Int8(-80))&127..=Int8(-10)&127:(Int64(56)|1)), (Int8(106)&127..Int8(96)&127:(Int64(UInt32(130))|1)), (Int8(-120)&127..=Int8(51)&127:(-117)|1)], [[((122&127..(-103)&127:(104|1)) is Interface256), false, true, ([false, true, true, false, true, false, true, false, true, false] is Array<Range<UInt32>>), ((Class251(), UInt16(248), (Int32(-56)&127..=Int32(-72)&127:51|1), ((Int16(-96)&127..=Int16(4)&127:(15|1)), (), (25&127..68&127:(42|1)), UInt8(165), Float32(103.0), Int8(-42), (UInt8(94), false, Int8(-108))), 'b') is Array<Array<Bool>>), (UInt8(109) is Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>), (((), 'v', Int16(82), [false, false, true, true, false, true, false, true, false, true], (Int8(112)&127..=Int8(108)&127:(64|1)), (Int8(-24)&127..Int8(74)&127:(-7)|1)) is Int16), true, (Option<Option<UInt8>>.Some(Option<UInt8>.None) is Option<Unit>), true], [true, true, false, true, false, true, true, false, false, true], [false, false, true, true, false, true, true, true, false, false], [(Option<Option<UInt32>>.Some(Option<UInt32>.None) is ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354), ((UInt8(52)&127..=UInt8(184)&127:(-67)|1) is Interface254), false, false, true, false, true, ([(12&127..(-16)&127:(-14)|1), (126&127..(-127)&127:(5|1)), ((-114)&127..=(-83)&127:(61|1)), (115&127..(-102)&127:((-43)|1)), ((-36)&127..17&127:106|1), (76&127..(-98)&127:(34|1)), (35&127..=(-76)&127:((-102)|1)), ((-17)&127..=(-116)&127:(-125)|1), (101&127..=48&127:(13|1)), (63&127..125&127:(-100)|1)] is (Int32) -> Unit), true, (true is ((String) -> Range<Int8>) -> Option<Rune>)], [((UInt32(177)&127..UInt32(54)&127:(39|1)) is Aggregate104), ((Int8(-29)&127..Int8(-8)&127:(16|1)) is Range<UInt8>), false, (Option<Range<Int16>>.Some((Int16(10)&127..Int16(25)&127:121|1)) is (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune)), true, false, true, (Option<Enum354>.Some(Enum354.enumValue1436((Int32(119)&127..=Int32(-59)&127:((-68)|1)), [[false, false, false, true, true, false, false, true, false, true], [false, true, false, true, false, true, false, true, false, false], [false, false, true, true, false, true, true, true, false, true], [true, true, true, false, false, false, true, false, true, true], [true, true, false, true, true, true, true, true, true, true], [false, true, false, false, true, false, true, false, false, false], [true, false, false, true, false, false, true, false, false, true], [true, false, false, false, false, true, false, true, false, false], [true, true, true, false, false, true, true, true, false, false], [false, true, false, true, false, true, false, true, false, true]])) is (Interface254) -> Enum158), ((UInt8(187), Int16(-23), UInt16(197), Float32(71.0), (), 'h', false, (-34)) is Option<Option<UInt8>>), (Option<Option<Range<Int16>>>.Some(Option<Range<Int16>>.None) is (String) -> Range<Int8>)], [true, true, false, true, false, false, false, true, false, true], [true, false, false, false, true, true, true, true, false, false], [true, true, true, (Enum354.enumValue1436((Int32(-74)&127..Int32(-10)&127:117|1), [[true, true, false, false, true, false, true, true, false, true], [false, false, false, true, false, true, true, false, false, false], [false, false, false, false, true, true, false, false, false, true], [true, false, false, false, true, false, false, true, true, false], [true, false, true, false, false, false, true, true, false, false], [true, true, false, false, false, false, true, true, true, false], [false, false, false, false, true, false, true, false, true, true], [true, true, true, false, false, true, false, true, false, true], [true, true, false, true, false, false, false, false, true, false], [true, true, true, true, false, false, true, false, true, true]]) is Option<Range<Int16>>), false, true, true, ((-32.0) is (UInt64) -> Option<Interface254>), (Option<UInt32>.Some(UInt32(177)) is Array<Float64>), (Option<Option<UInt32>>.None is Option<Unit>)], [true, false, false, true, false, false, true, true, false, false], [(Option<UInt32>.Some(UInt32(105)) is Option<Option<Range<Int16>>>), false, (Option<Option<Range<Int16>>>.None is Option<Option<UInt32>>), (Float32(-124.0) is (((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354, (UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), (Int32) -> Unit, Option<UInt32>) -> Interface256), true, true, ([[false, true, true, false, false, true, true, false, true, false], [false, false, true, false, true, true, false, true, true, false], [false, true, false, false, true, false, true, true, false, true], [true, true, true, true, false, true, true, false, true, false], [false, false, true, false, true, false, false, false, false, false], [true, true, false, false, false, true, true, false, false, false], [true, true, true, false, true, false, false, false, false, true], [false, true, false, true, true, true, false, true, true, true], [false, true, false, false, false, false, false, true, false, true], [true, false, false, true, true, false, false, false, false, false]] is (Unit, Rune, Int16, Array<Bool>, Range<Int8>, Range<Int8>)), false, false, false]]);
    if ((var4163 is Range<UInt8>)) { // block id: 4165
        if (var26) { // block id: 4168

        }
    } else if (UInt64(var43) > match (var4174) {
        case (_,caseVar4396) => 
            ();
            UInt64(224) ** (var3382 & 3)
        
        case _ : Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))> => 
            var4114;
            Enum158.enumValue2715(Option<Range<Int16>>.Some((Int16(41)&127..=Int16(10)&127:(var517|1))));
            var3382
        
        case caseVar4415 : Interface256 => 
            (var2033&127..var2929&127:(5|1));
            UInt64(132)
        
        case _ => 
            ();
            UInt64(245)
        
    }) { // block id: 4426
        var var4437 : ?Enum158 = ((Option<Option<UInt32>>.None as Range<Int16>) as Enum158);
        var loopTimeVar4442 : Int64 = 0;
        do {
            loopTimeVar4442++;
            var var4433 : Int64 = Int64((-68));
            var2033 **= (var4433 & 3);
            var4437
        } while ((true) && loopTimeVar4442 < 100 ) ;
        var3382 >>= ((UInt64(11)) & 7)
    };
    let var4463 : ??Interface255 = Option<Option<Interface255>>.Some(Option<Interface255>.None);
    let var4468 : Interface255 = Class251();
    (((Option<Option<Option<Interface255>>>.None ?? var4463) ?? Option<Interface255>.Some(var4468)) ?? if (var26) { var3631 } else { var3631 } )
}




public func func438(optionalParam439 ! : Option<Option<UInt32>> = Option<Option<UInt32>>.Some(((Int16(UInt16(121))&127..Int16(32)&127:(34|1)) as UInt32)), optionalParam447 ! : Range<Int32> = (Int32(Int16(UInt16(122)))&127..Int32(-85)&127:(Int64(UInt64(1))|1))) : Class251 { // block id: 455
    let var666 : Array<Bool> = [true, true, true, false, false, true, true, true, false, true];
    let var729 : ?Unit = Option<Unit>.None;
    let var932 : (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)) = ((Int16(101)&127..=Int16(-23)&127:71|1), (), (119&127..=(-89)&127:76|1), UInt8(24), Float32(83.0), Int8(59), (UInt8(122), false, Int8(UInt8(UInt8(233)))));
    func func619(param620 : UInt32) : (Interface254, UInt16, Range<Int32>, (Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8)), Rune) { // block id: 621
        var var695 : Range<UInt8> = (UInt8(231)&127..UInt8(20)&127:70|1);
        let var738 : Array<Range<UInt32>> = Array<Range<UInt32>>(10){ i => (UInt32(201)&127..=UInt32(50)&127:(Int64(UInt64(232))|1)) };
        try (resource = Class251()) { // block id: 623
            var var660 : Interface255 = Class251();
            match (Option<UInt32>.None) {
                case _ : Interface254 => 
                    var var630 : Array<Bool> = Array<Bool>(10){ i => true };
                    var630;
                    var660;
                    ((-70)&127..(-88)&127:36|1)
                
                case _ => 
                    var666;
                    var341
                
            };
            var var671 : ?UInt32 = ((UInt8(Int8(UInt8(214))), Int16(Int8(UInt8(198))), UInt16(Int16(70)), Float32(Float32(Float32(104.0))), (), 'g', true, (-28)) as UInt32);
            match (var671) {
                case _ => 
                    if (true) { var695 } else { (UInt8(254)&127..=UInt8(169)&127:98|1) } 
                
                case caseVar700 : Array<Array<Bool>> => 
                    (UInt8(66)&127..=UInt8(40)&127:(-38)|1)
                
                case caseVar705 => 
                    var695
                
                case _ : Int32 => 
                    var277;
                    (UInt8(149)&127..=UInt8(116)&127:36|1)
                
                case _ => 
                    if (var26) { (UInt16(181)&127..UInt16(12)&127:((-55)|1)) } else { (UInt16(5)&127..UInt16(99)&127:(-114)|1) } ;
                    (UInt8(204)&127..=UInt8(46)&127:80|1)
                
            };
            var var732 : Unit = ();
            (var729 ?? var732)
        } finally { // block id: 734
            var738[3];
            ();
            ()
        };
        var277;
        try { // block id: 786
            var788
        } catch (_) { // block id: 822
            let var862 : Int32 = Int32(-102);
            var862|>func824;
            Class251.var867
        } finally { // block id: 890
            var var900 : (String) -> Range<Int8> = func892;
            var var903 : String = "7a{H?\"le@ZM";
            var903|>var900;
            let var911 : ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64)) -> Enum354 = func906;
            var var922 : Int64 = 8;
            (var850, var152, UInt16(164), var285, (), '5', var26, var922)|>var911;
            match {
                case false => 
                (Class251(), UInt16(232), optionalParam447, var932, 'C')
                case _ => 
                if (true) { var788 } else { var788 } 
            }
        }
    }
;
    func func458(namedParam459 ! : Interface255) : Interface254 { // block id: 460
        if (((Int16(-75)&127..Int16(96)&127:(var517|1))|>func465)) { func619(var953) } else { (if (true) { var788 } else { var788 } ) } [0]
    }
;
    func458(namedParam459 : Class251()).func962(namedParam963 : (Option<Rune>.Some(var2905) ?? 'u'), namedParam964 : ());
    (match ([var1864, (), (), (), (), var1864, (), (), (), ()]) {
        case _ => 
            var1864;
            var var4699 : Option<Class251> = Option<Class251>.None;
            if (false) { var4699 } else { Option<Class251>.None } 
        
    } ?? ((var3575 as Class251) ?? match (var1864) {
        case () | () => 
            Option<Interface254>.None;
            var3290 &&= var4058;
            if (var3290) { var258 } else { var258 } 
        
        case _ => 
            var258
        
    }))
}


func func424(optionalParam425 ! : Range<UInt64> = (UInt64(UInt8(225))&127..UInt64(Int32(41))&127:(14|1)), namedParam432 ! : Enum354, optionalParam433 ! : UInt32 = UInt32(62)) : Bool { // block id: 435
    func438(optionalParam447 : (Option<Range<Int32>>.None ?? var4732)).func4735()
}

func func244(param245 : Range<UInt8>) : Array<Unit> { // block id: 246
    var26;
    let var267 : Range<Int16> = (Int16(UInt8(UInt8(26)))&127..Int16(UInt16(43))&127:(Int64(UInt64(234))|1));
    let var281 : UInt8 = UInt8(Int8(-42));
    let var291 : UInt8 = UInt8(63);
    var var312 : Int64 = 41;
    var loopTimeVar332 : Int64 = 0;
    let var347 : (UInt8, Bool, Int8) = (UInt8(161), false, Int8(-2));
    var var369 : Int8 = Int8(68);
    var var393 : Interface254 = Class251();
    var loopTimeVar401 : Int64 = 0;
    let var407 : Interface255 = Class251();
    var var415 : UInt16 = UInt16(214);
    var loopTimeVar4883 : Range<UInt64> = (UInt64(UInt64(152))&127..UInt64(UInt64(UInt16(218)))&127:(Int64(Int16(25))|1));
    [(var258.var261 >>= (((var267, var277, (31&127..=(-84)&127:(-121)|1), var281, var285, Int8(124), (var291, true, var295))[3]) & 7)), while ((if (var26) { // block id: 301
        var26
    } else if (true) { // block id: 304
        (UInt8(76)&127..UInt8(237)&127:77|1);
        if (var26) { (var152&127..var152&127:(var312|1)) } else { var267 } ;
        true
    } else { // block id: 316
        var277;
        var320 > var285
    }) && loopTimeVar332 < 100 ) {
        loopTimeVar332++;
        var var326 : Bool = (UInt8(21) is Rune);
        var326 ||= false;
        Class251()
    }, ((var152&127..=Int16(76)&127:(var312|1)), var277, var341, UInt8(234), Float32(-47.0), var295, var347)[1], match (var357) {
        case defaultValue => 
            'y';
            ()
        
        case defaultValue => 
            var369 |= var369;
            var369 %= ((Int8(-85)) | 1)
        
        case _ => 
            ()
        
        case caseVar381 => 
            ()
        
        case _ => 
            var341;
            var277
        
    }, var277, do {
        loopTimeVar401++;

    } while ((try { // block id: 391
        var393;
        true
    } finally { // block id: 396
        ();
        var26
    }) && loopTimeVar401 < 100 ) , if (if (var26) { // block id: 405
        var407;
        Int8(80);
        false
    } else if (var26) { // block id: 412
        var415 %= ((UInt16(107)) | 1);
        var26
    } else { // block id: 419
        !false
    }) { // block id: 422

    } else if (func424(namedParam432 : Enum354.defaultValue)) { // block id: 4872
        var var4875 : Range<Int32> = (Int32(-45)&127..=Int32(96)&127:(-13)|1);
        Enum354.enumValue1436(var4875, var833);
        var1864
    }, for (i in loopTimeVar4883 where var26) {
        ()
    }, if (var295 != Int8(122)) { // block id: 4896
        Enum158.defaultValue;
        Option<Option<Range<Int16>>>.None;
        var1864
    } else if (match {
        case false => 
        var var4950 : (Array<Bool>, Array<Unit>, Array<Range<UInt32>>, Int8, Array<Range<Int64>>, Int16, Array<Array<Float64>>, UInt16) = ([true, (Option<String>.None is ((UInt8, Int16, UInt16, Float32, Unit, Rune, Bool, Int64), Aggregate104, Float64, Array<Array<Bool>>, Range<UInt32>, UInt32)), (Class251() is (Option<Float64>) -> Array<Bool>), (Option<Array<Bool>>.None is String), (Option<(Range<Int16>, Unit, Range<Int64>, UInt8, Float32, Int8, (UInt8, Bool, Int8))>.None is Option<Class251>), (Option<Enum158>.Some(Enum158.enumValue2715(Option<Range<Int16>>.None)) is Option<Option<Range<Int16>>>), (Option<Class251>.Some(Class251()) is Interface256), ((Option<Option<Option<Interface254>>>.Some(Option<Option<Interface254>>.None) as Option<Rune>) is (Array<Float64>, Option<Interface256>, Int32, Array<Bool>, Array<Array<Bool>>)), false, true], [(), (), (), (), (), (), (), (), (), ()], [(UInt32(Int8(-1))&127..=UInt32(UInt32(48))&127:(42|1)), (UInt32(110)&127..UInt32(177)&127:68|1), (UInt32(101)&127..=UInt32(33)&127:(Int64(UInt32(201))|1)), (UInt32(205)&127..=UInt32(UInt32(229))&127:(Int64(Int32(-119))|1)), (UInt32(Int32(49))&127..=UInt32(145)&127:((-41)|1)), (UInt32(141)&127..UInt32(23)&127:2|1), (UInt32(117)&127..=UInt32(104)&127:60|1), (UInt32(219)&127..=UInt32(18)&127:((-100)|1)), (UInt32(220)&127..=UInt32(91)&127:(42|1)), (UInt32(251)&127..=UInt32(43)&127:(15|1))], Int8(9), [((-57)&127..(-65)&127:(Int64(Int8(100))|1)), (33&127..22&127:(-100)|1), ((-75)&127..=123&127:(-119)|1), (100&127..=(-73)&127:3|1), ((-89)&127..(-68)&127:19|1), ((-113)&127..=122&127:52|1), (49&127..=47&127:34|1), ((-47)&127..=35&127:(-93)|1), (Int64(UInt16(222))&127..119&127:(Int64((-47))|1)), (102&127..(-75)&127:(-2)|1)], Int16(77), [[(-89.0), 9.0, 32.0, 76.0, (-25.0), (-101.0), (-128.0), 18.0, (-81.0), (-7.0)], [125.0, 82.0, (-21.0), (-40.0), (-119.0), (-104.0), 63.0, (-39.0), 116.0, 55.0], [81.0, 97.0, 74.0, (-81.0), 21.0, 60.0, (-65.0), 96.0, 121.0, (-26.0)], [(-58.0), 98.0, 126.0, 124.0, (-62.0), 97.0, (-105.0), 80.0, (-10.0), (-18.0)], [116.0, (-79.0), 81.0, (-11.0), (-124.0), 57.0, 62.0, (-63.0), 12.0, 86.0], [88.0, (-15.0), 24.0, (-24.0), 10.0, (-52.0), 23.0, 89.0, 82.0, (-25.0)], [(-48.0), (-85.0), (-43.0), (-73.0), (-22.0), (-127.0), (-43.0), (-42.0), 41.0, 39.0], [(-27.0), (-40.0), 71.0, 28.0, (-127.0), 47.0, 110.0, 80.0, 0.0, (-89.0)], [(-25.0), (-63.0), 101.0, (-124.0), 84.0, (-33.0), (-116.0), (-58.0), 67.0, (-23.0)], [(-61.0), (-43.0), (-72.0), (-106.0), 27.0, (-52.0), 87.0, (-48.0), 115.0, (-43.0)]], UInt16(UInt8(UInt8(Int8(-5)))));
        if (var3290) { ([true, var4585, true, var4058, var26, var4058, var3290, var4585, false, var4585], [(), (), (), (), (), (), (), (), (), ()], var1131, var369, [((-50)&127..var2929&127:(var312|1)), var341, (var312&127..=(-20)&127:(var2929|1)), (88&127..118&127:((-48)|1)), var341, var341, var341, (var312&127..35&127:(var2033|1)), var341, ((-114)&127..var2929&127:(23|1))], Int16(-128), [[(-9.0), (-92.0), 55.0, 55.0, (-120.0), (-103.0), 10.0, (-92.0), (-126.0), (-49.0)], [101.0, 28.0, (-75.0), 32.0, 110.0, 103.0, 114.0, 58.0, (-106.0), (-116.0)], [35.0, 93.0, 53.0, (-107.0), (-75.0), 101.0, (-84.0), (-73.0), 7.0, 104.0], [(-115.0), (-28.0), 50.0, 86.0, 39.0, (-6.0), (-94.0), (-4.0), 79.0, (-65.0)], [(-87.0), 25.0, (-24.0), 14.0, (-70.0), (-30.0), (-127.0), (-12.0), 65.0, (-86.0)], [93.0, 122.0, 15.0, 14.0, (-57.0), 2.0, (-33.0), (-13.0), 27.0, 118.0], [53.0, (-56.0), (-118.0), 76.0, 31.0, (-45.0), 125.0, (-87.0), 105.0, (-34.0)], [(-87.0), (-56.0), (-83.0), (-46.0), (-113.0), (-81.0), 75.0, (-11.0), 50.0, 8.0], [122.0, 63.0, (-96.0), (-37.0), 113.0, (-125.0), (-54.0), (-113.0), (-1.0), (-29.0)], [(-35.0), 95.0, 30.0, 65.0, (-92.0), 22.0, (-125.0), 74.0, (-128.0), (-69.0)]], UInt16(194)) } else { var4950 } ;
        !var4585
        case _ => 
        var4585
    }) { // block id: 5045
        Option<Enum354>.None;
        ()
    }, if (var26) { // block id: 5050
        ();
        [var3176, (-78.0), 93.0, 49.0, (-92.0), var1034, var3176, 23.0, 33.0, var3176];
        ()
    }]
}



main(): Int64 {
    try {
        var var17 : ?UInt32 = (UInt64(UInt8(Int8(Int8(0)))) as UInt32);
        let var33 : Int64 = 6;
        var var38 : UInt32 = UInt32(UInt8(Int8(-97)));
        ((Option<Option<UInt32>>.Some(var17) ?? var17) ?? if (var26) { // block id: 29
            UInt16(211);
            var33 > 10;
            var38 | var43
        } else if (var26) { // block id: 47
            UInt32(77)
        } else { // block id: 49
            ();
            UInt32(84)
        });
        let var57 : String = "V/~M(o~R<y";
        let var65 : (UInt8, Bool, Int8) = (UInt8(Int8(UInt8(Int8(29)))), true, Int8(-119));
        var var84 : UInt32 = UInt32(223);
        try { // block id: 55
            var57;
            var var60 : UInt16 = UInt16(124);
            var60;
            let var75 : UInt8 = UInt8(UInt8(UInt8(Int8(-100))));
            if (false) { var65 } else { (var75, var26, Int8(116)) } 
        } catch (e: Exception) { // block id: 82
            var84;
            (UInt8(37), var26, Int8(95))
        } finally { // block id: 90
            ();
            if (var26) { (UInt8(136), false, Int8(67)) } else { (UInt8(198), var26, Int8(22)) } 
        }[0];
        Aggregate104.func109(namedParam113 : 'e')
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var33*var33), 64)
        crccheck.updateBuffer(UInt64(var38*var38), 64)
        crccheck.updateBuffer(UInt64(var43*var43), 64)
        crccheck.updateBuffer(UInt64(var84*var84), 64)
        crccheck.updateBuffer(UInt64(var152*var152), 64)
        crccheck.updateBuffer(UInt64(var295*var295), 64)
        crccheck.updateBuffer(UInt64(var517*var517), 64)
        crccheck.updateBuffer(UInt64(var850*var850), 64)
        crccheck.updateBuffer(UInt64(var953*var953), 64)
        crccheck.updateBuffer(UInt64(var1247*var1247), 64)
        crccheck.updateBuffer(UInt64(var1354*var1354), 64)
        crccheck.updateBuffer(UInt64(var2033*var2033), 64)
        crccheck.updateBuffer(UInt64(var2929*var2929), 64)
        crccheck.updateBuffer(UInt64(var3382*var3382), 64)
        crccheck.updateBuffer(UInt64(var5115*var5115), 64)
        crccheck.updateBuffer(UInt64(var5124*var5124), 64)
        crccheck.updateBuffer(UInt64(var5141*var5141), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum158 {

}

extend Enum354 {

}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_unexpected_declaration_in_scope
// ASSERT: scan parse_unmatched_right_delimiter
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_expected_expr_or_decl_in


