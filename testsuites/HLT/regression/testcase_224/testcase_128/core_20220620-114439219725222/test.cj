/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output


public var var36 : (Range<UInt32>, Range<Int8>, Array<Unit>, Array<Unit>, Enum31, UInt16) = ((UInt32(191)&127..UInt32(83)&127:64|1), (Int8(3)&127..=Int8(UInt8(217))&127:(Int64(Int16(Int8(114)))|1)), [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], Enum31.defaultValue, UInt16(UInt16(UInt16(Int16(21)))))
public var var70 : UInt8 = UInt8(Int8(-102))
var var92 : Int64 = (-80)
public let var119 : Range<UInt8> = (UInt8(2)&127..UInt8(138)&127:(-54)|1)
public var var131 : Array<Option<Unit>> = Array<Option<Unit>>(10){ i => Option<Unit>.None }
public let var372 : UInt32 = UInt32(Int8(-59))
let var418 : Bool = false
public var var427 : Int32 = Int32(2)
public let var453 : Int16 = Int16(-125)
let var456 : Int16 = Int16(84)
public let var500 : ?Enum31 = Option<Enum31>.None
public var var503 : Enum31 = Enum31.defaultValue
public var var512 : Interface390 = Class382()
public var var585 : Interface392 = Class382()
public let var609 : Int8 = Int8(UInt8(174))
let var634 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var670 : UInt16 = UInt16(214)
var var722 : ?Enum31 = Option<Enum31>.None
public var var762 : UInt32 = UInt32(UInt16(242))
var var818 : (Class382, Range<Int16>, Range<UInt8>) = (Class382(), (Int16(Int16(Int16(-75)))&127..Int16(Int16(Int8(-44)))&127:(Int64(UInt8(UInt8(16)))|1)), (UInt8(UInt8(Int8(-7)))&127..UInt8(126)&127:((-47)|1)))
public let var900 : (Array<Unit>, Option<Enum31>, Range<UInt8>) = ([(), (), (), (), (), (), (), (), (), ()], (Class382() as Enum31), (UInt8(128)&127..UInt8(213)&127:90|1))
public var var996 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
public let var1094 : (Range<UInt8>, Rune, Array<Unit>, UInt32, Unit) = ((UInt8(189)&127..=UInt8(162)&127:33|1), 'a', [(), (), (), (), (), (), (), (), (), ()], UInt32(28), ())
public let var1120 : Unit = ()
public let var1340 : (Int32, Float32, (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)), (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)), Option<Bool>, (Bool, Array<Array<Unit>>, UInt8, UInt8), (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8))) = (Int32(UInt8(98)), Float32(Float32(Float32(-102.0))), ((-46.0), 'i', UInt64(14), (), (###"fXnLcq?|\"w"###, false, """
mqiO0
&e6RN
"""), ((Enum31.defaultValue is (Range<Int32>) -> Unit), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(UInt8(1)), UInt8(172))), (Float64(8.0), 'q', UInt64(Int16(18)), (), ("Z%f3pccD2%", false, "-Vnr_E_7$o"), (((UInt16(151), ###"S3:6}((6+!"###, (UInt64(10)&127..UInt64(246)&127:65|1), UInt8(171), (UInt16(122)&127..=UInt16(215)&127:(-58)|1), 17.0) is Float64), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(-21)), UInt8(UInt8(3)))), (Class382() as Bool), (((Class382() as Interface385) is Option<Enum31>), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(43), UInt8(155)), (Float64(33.0), 'Y', UInt64(83), (), (###"`b1C\\MI8ye"###, false, ###"ucSjW>5xaG"###), ((Option<Enum31>.None is String), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(UInt8(36)), UInt8(UInt8(192)))))
public let var1521 : Rune = 'w'
public let var1526 : Float32 = Float32(Float32(-29.0))
var var1744 : Option<(Class382, Range<Int16>, Range<UInt8>)> = Option<(Class382, Range<Int16>, Range<UInt8>)>.None
public let var1748 : (Array<Unit>, Option<Enum31>, Range<UInt8>) = ([(), (), (), (), (), (), (), (), (), ()], Option<Enum31>.None, (UInt8(139)&127..UInt8(12)&127:(Int64(UInt64(UInt8(64)))|1)))
var var1793 : Array<UInt32> = [UInt32(229), UInt32(127), UInt32(35), UInt32(162), UInt32(210), UInt32(231), UInt32(79), UInt32(158), UInt32(185), UInt32(24)]
public let var1807 : ?UInt64 = (((Option<Enum31>.None is (Int32, Float32, (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)), (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)), Option<Bool>, (Bool, Array<Array<Unit>>, UInt8, UInt8), (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)))), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(-107)), UInt8(Int8(Int8(37)))) as UInt64)
var var2270 : ?Bool = Option<Bool>.None
public let var2366 : Range<Int8> = (Int8(-34)&127..=Int8(-44)&127:(-108)|1)
public var var2394 : Bool = false
var var2489 : Bool = (((((">~0B8l:R9N", false, ###"(0UJ;WhOqv"###) as (Class382, Range<Int16>, Range<UInt8>)) is Interface387), Int16(UInt8(212)), 'X', (UInt8(220)&127..UInt8(115)&127:(-6)|1), Int32(UInt32(23)), Float32(-96.0), (Int32(Int8(104))&127..=Int32(12)&127:(4|1)), (Int32(104)&127..=Int32(72)&127:(-81)|1)) is Bool)
public let var2555 : UInt16 = UInt16(UInt16(UInt8(123)))
var var2598 : Range<UInt8> = (UInt8(Int8(Int8(UInt8(30))))&127..=UInt8(53)&127:(31|1))
var var2615 : Range<UInt8> = (UInt8(137)&127..UInt8(131)&127:((-24)|1))
public var var2796 : ?Aggregate431 = Option<Aggregate431>.None
public var var2835 : ?Unit = ([[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] as Unit)
var var2891 : Interface389 = Class382()
public let var2911 : Option<Interface385> = (Option<Enum31>.None as Interface385)
var var3125 : Unit = ()
public let var3168 : Array<Float64> = [(-93.0), 119.0, (-120.0), (-50.0), (-109.0), (-6.0), (-83.0), (-34.0), 26.0, 74.0]
public var var3171 : Array<Float64> = [55.0, (-14.0), (-96.0), (-128.0), 25.0, 8.0, (-16.0), 29.0, 99.0, 102.0]
public var var3181 : Float64 = 25.0
let var3290 : Range<UInt64> = (UInt64(193)&127..=UInt64(109)&127:78|1)
public let var3313 : ??Unit = (Int8(Int8(94)) as Option<Unit>)
public let var3346 : Unit = ()
public let var3386 : Interface385 = Class382()
public let var3407 : Option<Option<Bool>> = (Class382() as Option<Bool>)
let var3422 : Bool = (((UInt16(91), "OB2A]Y&&nS", (UInt64(205)&127..=UInt64(62)&127:70|1), UInt8(29), (UInt16(180)&127..UInt16(75)&127:(-66)|1), (-115.0)) as (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)) is (Range<UInt8>) -> Array<Unit>)
let var3508 : Unit = ()
public var var3675 : UInt64 = UInt64(207)
var var3681 : UInt32 = UInt32(66)
let var3692 : Range<UInt32> = (UInt32(162)&127..=UInt32(UInt16(UInt8(UInt8(1))))&127:((-20)|1))
var var3829 : Bool = ((Option<Aggregate431>.None as Enum31) is Range<UInt8>)
public var var3954 : Unit = ()
let var3959 : Array<Float64> = [112.0, 59.0, (-14.0), 5.0, (-58.0), (-38.0), (-50.0), (-51.0), 24.0, 26.0]
let var4005 : Range<Int32> = (Int32(13)&127..=Int32(Int8(-32))&127:((-50)|1))
public var var4013 : ??Enum31 = (Class382() as Option<Enum31>)
var var4065 : String = "@2B+4UJp_#"
public var var4133 : Unit = ()
var var4199 : Int16 = Int16(UInt16(UInt8(133)))
var var4205 : ?Unit = Option<Unit>.None
var var4210 : UInt8 = UInt8(201)
public let var4251 : Float64 = Float64(Float64(Float32(Float32(Float32(-72.0)))))
public let var4272 : (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)) = (51.0, 'b', UInt64(UInt32(69)), (), ("Gev>w(o@${var4065}@j", (Option<Enum31>.None is Option<Bool>), "N${var4065}?%X49WS*j"), (true, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(UInt8(131))), UInt8(196)))
var var4358 : (Bool, Array<Array<Unit>>, UInt8, UInt8) = (((Int16(UInt16(81)), Option<Interface385>.None, Float64(Float32(-53.0)), (-123), (UInt64(42)&127..UInt64(55)&127:((-90)|1)), ()) is Range<UInt16>), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(-78)), UInt8(UInt8(40)))
public enum Enum31 {
    defaultValue
}

public func func225(param226 : Range<Int32>) : Unit { // block id: 227

}

public func func2662(param115 : Bool, param116 : Range<UInt16>) : Unit { // block id: 117
    var119;
    (if (false) { var131 } else { var131 } [7] ?? ((Int32(53)&127..=Int32(97)&127:((-19)|1))|>func225))
}


public interface Interface390 {

}

public interface Interface392 <: Interface390 {
    static func func877(namedParam878 ! : UInt64, namedParam879 ! : Bool, namedParam880 ! : Range<Int8>, namedParam881 ! : Array<Array<Unit>>) : (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) { // block id: 882
        var var3320 : (Option<Array<Unit>>) -> (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) = func884;
        var var3323 : ?Array<Unit> = Option<Array<Unit>>.None;
        var3323|>var3320
    }

}

public interface Interface391 <: Interface390 & Interface392 {

}

public interface Interface389 <: Interface390 & Interface391 {

}

public interface Interface388 <: Interface389 {

}

public interface Interface387 <: Interface388 {

}

public interface Interface386<T0> <: Interface387 & Interface390 {

}

public interface Interface385 <: Interface386<Rune> {

}

public open class Class382 <: Interface385 & Interface389 & Resource {
    public init() { // block id: 384

    }
;
    private static var var521 : Float32 = Float32(-17.0);
    public init(param516 : Option<Unit>, param517 : Range<Int32>) { // block id: 518
        var loopTimeVar530 : Int64 = 0;
        var var536 : UInt16 = UInt16(220);
        let var546 : Unit = ();
        var521 /= Float32((Int32(match (while ((var418) && loopTimeVar530 < 100 ) {
                loopTimeVar530++;
                ();
                "|( Cgk}p:A"
            }) {
            case () | () | () | () => 
                var536 << ((UInt16(1)) & 7);
                var536 <<= ((UInt16(174)) & 7);
                Float32(18.0)
            
            case _ => 
                var546;
                ();
                var521
            
        })) | 1)
    }
;
    static var var3349 : Unit = ();
    public init(namedParam856 ! : Option<Array<Unit>>, optionalParam857 ! : Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)> = ('a' as (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)), namedParam860 ! : Enum31, namedParam861 ! : UInt32) { // block id: 862
        let var866 : Array<Range<UInt8>> = [(UInt8(163)&127..=UInt8(109)&127:46|1), (UInt8(218)&127..=UInt8(10)&127:(-38)|1), (UInt8(108)&127..UInt8(228)&127:(-78)|1), (UInt8(197)&127..=UInt8(76)&127:(-102)|1), (UInt8(69)&127..UInt8(240)&127:32|1), (UInt8(109)&127..UInt8(200)&127:21|1), (UInt8(204)&127..=UInt8(194)&127:(-45)|1), (UInt8(179)&127..=UInt8(250)&127:103|1), (UInt8(182)&127..UInt8(64)&127:72|1), (UInt8(173)&127..UInt8(135)&127:7|1)];
        var866[6];
        let var3352 : Unit = ();
        var var3394 : Interface385 = Class382();
        (func877(namedParam878 : UInt64(157), namedParam879 : var2394, namedParam880 : (Int8(109)&127..Int8(101)&127:57|1), namedParam881 : [[(), (), (), (), (), (), (), (), (), ()], var634, var634, [(), var1120, (), (), var1120, var3125, (), var3125, var3125, var1120], [var3125, var3346, var3349, var3352, (), (), (), var3349, var3346, ()], [var3349, (), (), var3125, (), (), var3352, (), var1120, var3352], var634, [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]])[1] ?? ((Option<Option<Interface385>>.Some(var2911) ?? Option<Interface385>.Some(var3386)) ?? try { // block id: 3389
            if (false) { Class382() } else { var3394 } 
        } catch (e: Exception) { // block id: 3396
            Class382()
        } finally { // block id: 3398
            var1521;
            ();
            Class382()
        }));
        var loopTimeVar3468 : Int64 = 0;
        (try { // block id: 3404
            var1120;
            var3407;
            Option<Unit>.Some(var3125)
        } finally { // block id: 3412
            var2835
        } ?? do {
            loopTimeVar3468++;

        } while ((match (UInt8(66)) {
            case 196 => 
                let var3433 : ??Enum31 = (Option<Interface385>.Some(Class382()) as Option<Enum31>);
                if (var3422) { var3433 } else { var3433 } ;
                var453 * var456;
                Int16(87) != var453
            
            case caseVar3446 : UInt16 => 
                ((-11)&127..=99&127:2|1);
                var2489
            
            case 110 => 
                var3422
            
            case 251 | 177 | 245 => 
                var762 = UInt32(172);
                false
            
            case _ => 
                var1526 >= var521
            
        }) && loopTimeVar3468 < 100 ) )
    }
;
    public var var3613 : Int32 = Int32(-84);
    public static var var3988 : ??Enum31 = Option<Option<Enum31>>.None;
    public init(param3966 : Array<Array<Float64>>) { // block id: 3967
        ();
        var loopTimeVar3973 : Range<UInt64> = (UInt64(213)&127..UInt64(10)&127:(Int64(UInt8(46))|1));
        for (i in loopTimeVar3973 where (Option<Bool>.None is Array<Float64>)) {

        };
        let var3994 : Bool = (Class382() is () -> Array<Range<UInt8>>);
        if (try { // block id: 3981
            var1120;
            var1120;
            var3829
        } finally { // block id: 3985
            true
        }) { var3988 } else { try { // block id: 3991
            if (var3994) { Class382(namedParam856 : Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()]), namedParam860 : Enum31.defaultValue, namedParam861 : UInt32(235)) } else { Class382(var2835, var4005) } ;
            [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]];
            var4013
        } finally { // block id: 4016
            ();
            var3988
        } } 
    }
;
    public static func func877(namedParam878 ! : UInt64, namedParam879 ! : Bool, namedParam880 ! : Range<Int8>, namedParam881 ! : Array<Array<Unit>>) : (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) { // block id: 882
        var var3320 : (Option<Array<Unit>>) -> (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) = func884;
        var var3323 : ?Array<Unit> = Option<Array<Unit>>.None;
        var3323|>var3320
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public struct Aggregate431 {
    public init() { // block id: 433

    }
;
    static let var436 : Unit = ()
}












func func979(param980 : Range<UInt8>) : Array<Unit> { // block id: 981
    var var990 : Array<Range<UInt8>> = [(UInt8(81)&127..UInt8(2)&127:51|1), (UInt8(177)&127..UInt8(20)&127:(-124)|1), (UInt8(161)&127..UInt8(30)&127:(-93)|1), (UInt8(71)&127..=UInt8(52)&127:(-65)|1), (UInt8(82)&127..UInt8(168)&127:(-98)|1), (UInt8(252)&127..UInt8(146)&127:(-51)|1), (UInt8(167)&127..=UInt8(234)&127:(-77)|1), (UInt8(97)&127..UInt8(169)&127:(-5)|1), (UInt8(56)&127..=UInt8(249)&127:(-113)|1), (UInt8(134)&127..UInt8(163)&127:(-79)|1)];
    let var1024 : Unit = ();
    var var1035 : Unit = ();
    var var1045 : Unit = ();
    try { // block id: 985
        var585;
        if (true) { var990 } else { [(UInt8(26)&127..UInt8(170)&127:(-8)|1), (UInt8(116)&127..UInt8(50)&127:(-32)|1), (UInt8(85)&127..=UInt8(128)&127:34|1), (UInt8(6)&127..UInt8(84)&127:72|1), (UInt8(35)&127..UInt8(191)&127:26|1), (UInt8(208)&127..=UInt8(63)&127:83|1), (UInt8(249)&127..UInt8(154)&127:126|1), (UInt8(39)&127..UInt8(17)&127:(-88)|1), (UInt8(184)&127..UInt8(202)&127:(-119)|1), (UInt8(107)&127..=UInt8(254)&127:42|1)] } ;
        (var418, var996, var70, UInt8(143))
    } catch (_) { // block id: 1000
        var var1003 : Int16 = Int16(Int8(Int8(Int8(UInt8(37)))));
        var1003 *= var1003;
        Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>.None;
        (var418, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], var70, UInt8(171))
    } finally { // block id: 1016
        (var418, [var634, [(), (), (), (), (), (), (), (), (), ()], [var1024, (), (), (), var1024, (), (), (), (), var1035], var634, [(), (), (), (), (), (), (), (), (), ()], var634, [(), (), (), (), (), (), (), (), (), ()], [(), var1024, var1045, var1035, (), (), (), var1024, var1045, var1045], [var1035, (), (), var1045, (), var1045, (), (), (), var1035], var634], UInt8(167), var70)
    }[2];
    var var1132 : Class382 = Class382();
    match (((true as (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)) as Enum31)) {
        case Some(defaultValue) => 
            var1035;
            var var1079 : Int16 = Int16(Int8(-84));
            var1079 **= (Int16(-83) & 3);
            [(), (), (), (), (), (), (), (), (), ()]
        
        case caseVar1086 => 
            var670 %= ((UInt16(222)) | 1);
            let var1104 : Rune = 'd';
            if (var418) { var1094 } else { (param980, var1104, var634, var372, ()) } ;
            [(), (), (), (), (), (), (), (), (), ()]
        
        case caseVar1112 => 
            [var1045, (), var1045, (), var1120, var1035, (), var1120, (), ()]
        
        case _ => 
            Option<Class382>.Some(var1132);
            var70++;
            [(), (), (), (), (), (), (), (), (), ()]
        
        case _ => 
            let var1149 : Unit = ();
            if (false) { var634 } else { [(), var1045, var1045, (), (), var1149, var1120, var1045, (), var1024] } 
        
    }
}


public func func1218(namedParam1219 ! : (Range<UInt8>, Rune, Array<Unit>, UInt32, Unit)) : Class382 { // block id: 1220
    var var1241 : (Bool, Int16, Rune, Range<UInt8>, Int32, Float32, Range<Int32>, Range<Int32>) = ((() is () -> Array<Unit>), Int16(Int8(-114)), 'Y', (UInt8(UInt8(11))&127..=UInt8(Int8(Int8(100)))&127:(Int64(UInt8(176))|1)), Int32(Int32(-40)), Float32(-58.0), (Int32(-34)&127..Int32(-59)&127:(-10)|1), (Int32(-89)&127..=Int32(20)&127:10|1));
    try (resource = Class382()) { // block id: 1222
        var loopTimeVar1226 : Range<UInt64> = (UInt64(UInt8(113))&127..=UInt64(52)&127:((-60)|1));
        for (i in loopTimeVar1226 where var418) {

        }
    } finally { // block id: 1232
        var loopTimeVar1237 : Int64 = 0;
        do {
            loopTimeVar1237++;

        } while ((true) && loopTimeVar1237 < 100 ) ;
        var1241[4];
        let var1265 : (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)) = (101.0, '4', UInt64(142), (), ("J4lnRn6g#8", false, "A9&vu*@4[4"), (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(Int8(-127))), UInt8(UInt8(179))));
        var1265[3]
    };
    var var1285 : Class382 = Class382();
    var1285
}


func func1194(optionalParam1195 ! : (Range<Int32>) -> Unit = { lambdaParameter1198 : Range<Int32> =>  }) : Array<UInt32> { // block id: 1202
    let var1620 : (Bool, Array<Array<Unit>>, UInt8, UInt8) = (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(UInt8(74)), UInt8(UInt8(61)));
    func func1210(optionalParam1211 ! : Option<(Class382, Range<Int16>, Range<UInt8>)> = (Option<Unit>.Some(()) as (Class382, Range<Int16>, Range<UInt8>)), namedParam1215 ! : Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>) : Option<Bool> { // block id: 1216
        let var1290 : (Range<UInt8>, Rune, Array<Unit>, UInt32, Unit) = ((UInt8(Int8(UInt8(121)))&127..=UInt8(147)&127:((-61)|1)), 'z', [(), (), (), (), (), (), (), (), (), ()], UInt32(Int16(107)), ());
        func1218(namedParam1219 : try { // block id: 1288
            var1290
        } finally { // block id: 1313
            var1094
        });
        var var1531 : Range<Int32> = (Int32(108)&127..=Int32(62)&127:(-50)|1);
        var var1537 : (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)) = ((-88.0), 'O', UInt64(49), (), ("N,_WL2#7^J", true, ###"I~+mq$uV.9"###), ((((-107)&127..=(-102)&127:(-82)|1) is Array<UInt32>), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(UInt8(138))), UInt8(58)));
        var var1735 : String = """
OzsX7
O`$ze
""";
        ((((var762&127..=UInt32(117)&127:(7|1)), (Int8(-77)&127..=var609&127:((-45)|1)), [(), (), (), (), (), (), (), (), (), ()], var634, var503, var670) as Option<Bool>) ?? try { // block id: 1337
            var996;
            var1340
        } finally { // block id: 1515
            ();
            (true, Int16(-25), var1521, (UInt8(61)&127..UInt8(22)&127:43|1), var427, var1526, (Int32(-22)&127..Int32(51)&127:117|1), var1531);
            let var1617 : ?Bool = Option<Bool>.None;
            let var1738 : Bool = false;
            (Int32(54), var1526, var1537, var1537, var1617, var1620, ((-84.0), 'y', UInt64(167), var1120, (var1735, var1738, var1735), var1620))
        }[4])
    }
;
    match ((func1210(optionalParam1211 : var1744, namedParam1215 : Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some(var1748)) ?? if (false) { // block id: 1770
            var418 || true
        } else if (var418) { // block id: 1775
            ();
            var418
        } else { // block id: 1778
            let var1780 : ?Unit = (UInt8(194) as Unit);
            var1780;
            var418
        })) {
        case caseVar1786 : Float64 => 
            if (false) { Class382() } else { Class382() } ;
            var1793
        
        case caseVar1797 : Interface389 => 
            [UInt32(29), UInt32(110), UInt32(129), UInt32(133), UInt32(87), UInt32(77), UInt32(166), UInt32(10), UInt32(219), UInt32(101)]
        
        case false | true | true => 
            if (var418) { Option<UInt64>.None } else { var1807 } ;
            var1793
        
        case _ => 
            var var1882 : Interface387 = Class382();
            var1882;
            [UInt32(21), UInt32(78), UInt32(130), UInt32(207), UInt32(225), UInt32(122), UInt32(65), UInt32(95), UInt32(205), UInt32(28)]
        
    }
}

public func func1902(param1903 : UInt64, optionalParam1904 ! : Option<Unit> = (((UInt32(163)&127..=UInt32(69)&127:113|1), (Int8(31)&127..=Int8(111)&127:(-12)|1), [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], Enum31.defaultValue, UInt16(151)) as Unit), namedParam1923 ! : Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>, namedParam1924 ! : (Bool, Array<Array<Unit>>, UInt8, UInt8)) : Int16 { // block id: 1925
    Int16(-121)
}

func func2359() : Array<Range<UInt8>> { // block id: 2360
    [(UInt8(42)&127..UInt8(81)&127:25|1), (UInt8(96)&127..UInt8(98)&127:122|1), (UInt8(61)&127..=UInt8(160)&127:58|1), (UInt8(54)&127..=UInt8(152)&127:(-98)|1), (UInt8(4)&127..UInt8(54)&127:(-109)|1), (UInt8(245)&127..UInt8(160)&127:63|1), (UInt8(76)&127..=UInt8(243)&127:108|1), (UInt8(138)&127..UInt8(247)&127:(-53)|1), (UInt8(177)&127..UInt8(230)&127:5|1), (UInt8(124)&127..UInt8(209)&127:(-67)|1)]
}

public func func2342(param2343 : Range<Int8>) : Array<Range<UInt8>> { // block id: 2344
    var var2348 : Range<Int32> = (Int32(UInt16(Int8(-95)))&127..Int32(UInt32(Int8(-63)))&127:((-70)|1));
    var2348|>func225;
    'X';
    func2359()
}


func func2670(param2671 : ((Range<UInt8>, Rune, Array<Unit>, UInt32, Unit)) -> Class382) : UInt8 { // block id: 2674
    var var2688 : Aggregate431 = Aggregate431();
    var var2698 : ?Aggregate431 = Option<Aggregate431>.Some(Aggregate431());
    var var2717 : Int64 = Int64(Int16(Int8(UInt8(UInt8(179)))));
    let var2744 : Array<Range<UInt8>> = [(UInt8(122)&127..=UInt8(131)&127:(-18)|1), (UInt8(97)&127..=UInt8(40)&127:(-63)|1), (UInt8(220)&127..=UInt8(237)&127:(-26)|1), (UInt8(217)&127..UInt8(95)&127:53|1), (UInt8(246)&127..UInt8(88)&127:(-47)|1), (UInt8(85)&127..=UInt8(185)&127:(-125)|1), (UInt8(8)&127..=UInt8(136)&127:(-87)|1), (UInt8(71)&127..=UInt8(154)&127:(-66)|1), (UInt8(239)&127..UInt8(20)&127:26|1), (UInt8(252)&127..=UInt8(77)&127:94|1)];
    match ((try { // block id: 2682
            if (var2489) { Option<Aggregate431>.None } else { Option<Aggregate431>.Some(var2688) } 
        } finally { // block id: 2690
            var2555 / ((var670) | 1);
            Option<Aggregate431>.Some(Aggregate431())
        } ?? (var2698 ?? Aggregate431()))) {
        case caseVar2704 => 
            let var2709 : Range<UInt64> = (UInt64(145)&127..UInt64(144)&127:(-99)|1);
            if (var418) { var2709 } else { var2709 } ;
            [(var70&127..var70&127:(var2717|1)), (var70&127..UInt8(0)&127:((-2)|1)), (var70&127..=var70&127:((-27)|1)), (var70&127..=UInt8(204)&127:(82|1)), (UInt8(30)&127..UInt8(2)&127:(-34)|1), var119, (UInt8(102)&127..=UInt8(153)&127:55|1), var119, var119, var2615]
        
        case _ => 
            var2744
        
    };
    UInt8(241)
}

public func func2750(namedParam1219 : (Range<UInt8>, Rune, Array<Unit>, UInt32, Unit)) : Class382 { // block id: 1220
    var var1241 : (Bool, Int16, Rune, Range<UInt8>, Int32, Float32, Range<Int32>, Range<Int32>) = ((() is () -> Array<Unit>), Int16(Int8(-114)), 'Y', (UInt8(UInt8(11))&127..=UInt8(Int8(Int8(100)))&127:(Int64(UInt8(176))|1)), Int32(Int32(-40)), Float32(-58.0), (Int32(-34)&127..Int32(-59)&127:(-10)|1), (Int32(-89)&127..=Int32(20)&127:10|1));
    try (resource = Class382()) { // block id: 1222
        var loopTimeVar1226 : Range<UInt64> = (UInt64(UInt8(113))&127..=UInt64(52)&127:((-60)|1));
        for (i in loopTimeVar1226 where var418) {

        }
    } finally { // block id: 1232
        var loopTimeVar1237 : Int64 = 0;
        do {
            loopTimeVar1237++;

        } while ((true) && loopTimeVar1237 < 100 ) ;
        var1241[4];
        let var1265 : (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)) = (101.0, '4', UInt64(142), (), ("J4lnRn6g#8", false, "A9&vu*@4[4"), (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(Int8(Int8(-127))), UInt8(UInt8(179))));
        var1265[3]
    };
    var var1285 : Class382 = Class382();
    var1285
}

func func2662(param2663 : Array<UInt32>) : Int32 { // block id: 2664
    var762++;
    let var2748 : (((Range<UInt8>, Rune, Array<Unit>, UInt32, Unit)) -> Class382) -> UInt8 = func2670;
    match ((func2750|>var2748)) {
        case _ => 
            var var2757 : Float32 = Float32(-48.0);
            var2757 += Float32(8.0);
            ();
            Int32(99)
        
    } | Int32(if (true) { // block id: 2765
        var var2767 : Interface389 = Class382();
        var2767;
        UInt8(207)
    } else if (true) { // block id: 2771
        UInt8(137) - var70
    } else { // block id: 2775
        -var70
    })
}

public func func954<T0>(param955 : Option<Interface385>) : (Array<Unit>, Option<Enum31>, Range<UInt8>) where T0 <: Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)> { // block id: 956
    let var1940 : UInt64 = UInt64(12);
    func func959(optionalParam960 ! : (Bool, Range<UInt16>) -> Unit = func2662, namedParam965 ! : Array<Range<UInt8>>) : Bool { // block id: 966
        let var1886 : (Range<Int32>) -> Unit = func225;
        var loopTimeVar1893 : Int64 = 0;
        (try { // block id: 969
            if (var418) { var503 } else { Enum31.defaultValue } ;
            (UInt8(193)&127..=UInt8(32)&127:(-72)|1)
        } finally { // block id: 975
            (UInt8(33)&127..=UInt8(76)&127:111|1)
        }, 'n', (match (Float32(107.0)) {
            case 35.0 => 
                (UInt8(252)&127..UInt8(159)&127:125|1)
            
            case 24.0 => 
                (UInt8(177)&127..UInt8(179)&127:(-117)|1)
            
            case _ => 
                Option<Array<Unit>>.Some(var634);
                var670 ^= var670;
                if (var418) { (UInt8(158)&127..var70&127:(60|1)) } else { (var70&127..var70&127:(var92|1)) } 
            
        }|>{ lambdaParameter1157 : Range<UInt8> => let var1161 : (Range<UInt8>) -> Array<Unit> = func979; lambdaParameter1157|>var1161 }), func1194(optionalParam1195 : var1886)[2], do {
            loopTimeVar1893++;

        } while ((var418) && loopTimeVar1893 < 100 ) );
        try { // block id: 1896
            var453
        } catch (_) { // block id: 1898
            ();
            var456
        } < func1902(if (var418) { // block id: 1929
            var1120;
            UInt64(51)
        } else if (var418) { // block id: 1933
            if (var418) { Class382() } else { Class382() } ;
            ();
            var1940
        } else { // block id: 1942
            Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some((var634, Option<Enum31>.Some(Enum31.defaultValue), (UInt8(183)&127..=UInt8(224)&127:(-50)|1)));
            var1940
        }, namedParam1923 : (Option<Unit>.Some(()) as (Array<Unit>, Option<Enum31>, Range<UInt8>)), namedParam1924 : (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(19), var70))
    }
;
    var loopTimeVar1988 : Int64 = 0;
    do {
        loopTimeVar1988++;
        (Option<Unit>.Some(()) ?? var1120)
    } while ((func959(namedParam965 : try { // block id: 1959
        [(UInt8(212)&127..UInt8(95)&127:114|1), (UInt8(231)&127..UInt8(252)&127:56|1), (UInt8(246)&127..UInt8(242)&127:(-98)|1), (UInt8(247)&127..=UInt8(65)&127:(-54)|1), (UInt8(69)&127..=UInt8(138)&127:(-18)|1), (UInt8(128)&127..=UInt8(208)&127:(-128)|1), (UInt8(19)&127..=UInt8(100)&127:111|1), (UInt8(196)&127..=UInt8(144)&127:119|1), (UInt8(190)&127..UInt8(222)&127:(-106)|1), (UInt8(2)&127..UInt8(125)&127:21|1)]
    } finally { // block id: 1961
        ();
        let var1964 : (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64) = (UInt16(UInt8(245)), "fl~mZz'[MO", (UInt64(7)&127..UInt64(Int8(UInt8(180)))&127:(Int64(Int16(-18))|1)), UInt8(220), (UInt16(252)&127..=UInt16(173)&127:105|1), (-123.0));
        var1964;
        let var1980 : Array<Range<UInt8>> = [(UInt8(88)&127..=UInt8(203)&127:(-43)|1), (UInt8(18)&127..UInt8(217)&127:55|1), (UInt8(151)&127..=UInt8(20)&127:17|1), (UInt8(17)&127..=UInt8(2)&127:117|1), (UInt8(44)&127..UInt8(242)&127:(-95)|1), (UInt8(160)&127..=UInt8(43)&127:40|1), (UInt8(231)&127..UInt8(2)&127:8|1), (UInt8(235)&127..UInt8(87)&127:(-76)|1), (UInt8(20)&127..UInt8(64)&127:(-104)|1), (UInt8(101)&127..UInt8(164)&127:(-42)|1)];
        var1980
    })) && loopTimeVar1988 < 100 ) ;
    var var2000 : ?Unit = ((Int32(-40), Float32(-10.0), (Float64(40.0), 'G', UInt64(89), (), (###"uXYY6FO9#o"###, true, "v`Ci5!=\\08"), (true, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(122), UInt8(4))), ((-67.0), 'h', UInt64(92), (), ("""
4=2>#
m|]By
""", false, "+KAcT Fg4h"), (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(232), UInt8(198))), ((UInt32(153)&127..UInt32(120)&127:((-85)|1)) as Bool), (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(197), UInt8(87)), (62.0, 'Q', UInt64(198), (), ("""
,y^Q0
Q~HH0
""", true, ###"xz'w\"o8bjq"###), (false, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(2), UInt8(178)))) as Unit);
    let var2301 : Bool = ((###"mh0(?Ei+i$"###, (([(), (), (), (), (), (), (), (), (), ()] as (Array<Unit>, Option<Enum31>, Range<UInt8>)) is Interface388), ###"N$s3l^(Ekd"###) is String);
    var var2363 : (Range<Int8>) -> Array<Range<UInt8>> = func2342;
    var var2371 : Range<Int8> = (Int8(UInt8(91))&127..=Int8(UInt8(Int8(-39)))&127:(123|1));
    let var2478 : Rune = 'U';
    let var2517 : Float64 = 13.0;
    let var2625 : Array<Range<UInt8>> = Array<Range<UInt8>>(10){ i => (UInt8(222)&127..UInt8(41)&127:(-24)|1) };
    func func2543() : (Array<Unit>, Option<Enum31>, Range<UInt8>) { // block id: 2544
        let var2581 : UInt8 = UInt8(UInt8(150));
        let var2783 : ?Unit = ((Int32(UInt16(195))&127..=Int32(-125)&127:(Int64(UInt8(208))|1)) as Unit);
        if (func959(namedParam965 : match (var818) {
            case _ => 
                var670 / ((var2555) | 1);
                if (var2394) { [(UInt8(118)&127..=UInt8(40)&127:82|1), (UInt8(114)&127..=UInt8(176)&127:(-117)|1), (UInt8(190)&127..=UInt8(19)&127:(-72)|1), (UInt8(50)&127..=UInt8(110)&127:(-51)|1), (UInt8(132)&127..UInt8(24)&127:(-108)|1), (UInt8(5)&127..=UInt8(221)&127:(-121)|1), (UInt8(216)&127..UInt8(246)&127:81|1), (UInt8(76)&127..=UInt8(194)&127:(-89)|1), (UInt8(104)&127..=UInt8(113)&127:(-115)|1), (UInt8(53)&127..=UInt8(107)&127:(-57)|1)] } else { [(UInt8(198)&127..=UInt8(177)&127:(-47)|1), (UInt8(155)&127..=UInt8(139)&127:82|1), (UInt8(239)&127..UInt8(40)&127:(-22)|1), (UInt8(214)&127..=UInt8(40)&127:(-57)|1), (UInt8(14)&127..=UInt8(4)&127:(-26)|1), (UInt8(211)&127..=UInt8(151)&127:94|1), (UInt8(201)&127..UInt8(147)&127:94|1), (UInt8(205)&127..=UInt8(118)&127:(-102)|1), (UInt8(213)&127..UInt8(41)&127:(-58)|1), (UInt8(154)&127..=UInt8(223)&127:2|1)] } 
            
            case _ => 
                ();
                [(UInt8(236)&127..=UInt8(246)&127:35|1), (UInt8(17)&127..UInt8(168)&127:(var92|1)), (UInt8(189)&127..=UInt8(229)&127:((-38)|1)), (UInt8(46)&127..UInt8(164)&127:102|1), (UInt8(228)&127..UInt8(26)&127:98|1), (var70&127..=var2581&127:((-35)|1)), var119, var119, (UInt8(194)&127..UInt8(36)&127:(-114)|1), (UInt8(24)&127..var2581&127:(68|1))];
                if (false) { [(UInt8(229)&127..UInt8(149)&127:(-21)|1), (UInt8(191)&127..UInt8(32)&127:109|1), var2598, var2598, var119, (UInt8(3)&127..=UInt8(125)&127:(-90)|1), var2598, (UInt8(187)&127..=UInt8(226)&127:(38|1)), var2615, (var2581&127..=var70&127:(var92|1))] } else { var2625 } 
            
        })) { // block id: 2660
            [UInt32(138), UInt32(50), UInt32(230), UInt32(109), UInt32(90), UInt32(230), UInt32(249), UInt32(126), UInt32(130), UInt32(253)]|>func2662;
            ();
            (var2783 ?? ())
        } else if ((Option<Enum31>.None is Float64)) { // block id: 2794
            var2796;
            let var2805 : Bool = false;
            if (false) { // block id: 2800
                UInt8(100);
                ();
                var1120
            } else if (var2805) { // block id: 2807
                var1120;
                var1120;
                var762++
            }
        };
        if (var2394) { // block id: 2814
            match {
                case var418 => 
                Aggregate431();
                if (var2301) { var900 } else { (var634, Option<Enum31>.None, (var2581&127..=UInt8(195)&127:((-78)|1))) } 
                case _ => 
                var1120;
                var900
            }
        } else { // block id: 2832
            (var2835 ?? ());
            var634[2];
            var var2899 : Float64 = 94.0;
            match (Float32(60.0)) {
                case -23.0 | -51.0 | -108.0 => 
                    var1120;
                    if (false) { var2891 } else { Class382() } ;
                    var900
                
                case _ => 
                    var2899 += 77.0;
                    (var634, Option<Enum31>.Some(var503), var2615)
                
            }
        }
    }
;
    if (if (true) { // block id: 1992
        if (false) { Option<(Class382, Range<Int16>, Range<UInt8>)>.None } else { var1744 } ;
        if (var418) { var2000 } else { Option<Unit>.Some(()) } ;
        Int16(-58) >= var456
    } else { // block id: 2264
        if (var418) { Option<Option<Bool>>.None } else { Option<Option<Bool>>.Some(var2270) } ;
        Int32(123) > Int32(125)
    }) { // block id: 2275
        var var2278 : Class382 = Class382();
        let var2320 : String = ###"0vB|KdR8&9"###;
        let var2326 : ?Enum31 = (((-99) as Interface385) as Enum31);
        match (var2278) {
            case caseVar2282 => 
                (Int8(19)&127..=var609&127:((-44)|1));
                var1748
            
            case _ : Option<UInt64> => 
                var var2294 : UInt64 = UInt64(Int16(Int8(-90)));
                var2294 = UInt64(227);
                if (var2301) { var2320 } else { var2320 } ;
                ([(), (), (), (), (), (), (), (), (), ()], var2326, (UInt8(73)&127..UInt8(158)&127:(-99)|1))
            
            case _ => 
                var1120;
                var1120;
                if (true) { var900 } else { var1748 } 
            
        }
    } else if (func959(optionalParam960 : func2662, namedParam965 : (var2366|>var2363))) { // block id: 2368
        match (var2371) {
            case caseVar2381 : Option<Array<Unit>> => 
                var1940;
                var762 -= UInt32(50);
                'e'
            
            case caseVar2390 => 
                var2394 &&= true;
                var1521
            
            case _ : Range<Int32> => 
                var2270;
                if (var2394) { var1521 } else { var1521 } 
            
            case _ : Interface387 => 
                var1807;
                var1120;
                var1521
            
            case _ => 
                var var2415 : (Bool, Array<Array<Unit>>, UInt8, UInt8) = (((Int16(116)&127..=Int16(-65)&127:(Int64(Int16(-93))|1)) is Option<Class382>), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(116), UInt8(Int8(-123)));
                var2415;
                var2478
            
        };
        var var2532 : Unit = ();
        let var2536 : ?Enum31 = Option<Enum31>.Some(Enum31.defaultValue);
        try { // block id: 2481
            var92 |= var92;
            var900
        } catch (e: Exception) { // block id: 2486
            if (var2489) { var900 } else { var900 } 
        } finally { // block id: 2513
            54.0 ** Float64(Int32(var2517) & 3);
            if (false) { ([(), (), var1120, var1120, var1120, var1120, var1120, var1120, var2532, ()], var2536, var119) } else { var900 } 
        }
    } else { // block id: 2541
        func2543()
    }
}



public func func884(param885 : Option<Array<Unit>>) : (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) { // block id: 886
    var var2908 : (Option<Interface385>) -> (Array<Unit>, Option<Enum31>, Range<UInt8>) = func954<Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>>;
    (try { // block id: 895
        var var917 : ?(Array<Unit>, Option<Enum31>, Range<UInt8>) = Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some(([(), (), (), (), (), (), (), (), (), ()], Option<Enum31>.None, (UInt8(UInt8(144))&127..UInt8(UInt8(138))&127:(Int64(UInt16(0))|1))));
        if (var418) { Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some(var900) } else { var917 } 
    } finally { // block id: 929
        Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>.None;
        var var932 : Class382 = Class382();
        var932;
        let var938 : Unit = ();
        let var950 : ?Enum31 = Option<Enum31>.None;
        Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some(([var938, var938, (), var938, var938, var938, (), var938, (), var938], var950, var119))
    } ?? (var2911|>var2908))[1];
    var var2929 : Aggregate431 = Aggregate431();
    let var2963 : (Float64, Rune, UInt64, Unit, (String, Bool, String), (Bool, Array<Array<Unit>>, UInt8, UInt8)) = (Float64(Float32(Float32(-9.0))), 'd', UInt64(Int16(-109)), (), (###"Ka{'hl,Ubn3"###, (Int32(-15) is (Range<Int32>) -> Unit), "wdNCWk||kb"), ((((UInt32(136)&127..UInt32(240)&127:78|1), (Int8(103)&127..Int8(-65)&127:(76|1)), [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], Enum31.defaultValue, UInt16(35)) is Enum31), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(99), UInt8(189)));
    (match (match (Option<Interface388>.Some(Class382())) {
            case caseVar2922 : Option<UInt64> => 
                let var2925 : UInt64 = UInt64(Int16(-98));
                var2925;
                var2929
            
            case _ : Option<Array<Unit>> => 
                Aggregate431()
            
            case _ => 
                var2929
            
            case _ => 
                if (false) { Aggregate431() } else { Aggregate431() } 
            
        }) {
        case _ : Interface385 => 
            Option<Unit>.Some(var1120);
            let var2951 : Option<Option<Bool>> = ((((81&127..(-44)&127:(107|1)) as Array<Unit>) as Class382) as Option<Bool>);
            var2951;
            (var427, var1526, var2963, var2963, var2270, (var418, [[(), (), var1120, var1120, (), var1120, (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [var1120, var1120, (), var1120, (), (), (), (), var1120, var1120], [(), (), (), (), (), var1120, (), var1120, (), var1120], var634, [(), (), (), (), (), (), (), (), (), ()], [(), (), var1120, var1120, (), (), (), var1120, (), var1120], [(), (), var1120, (), var1120, var1120, (), var1120, var1120, var3125], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(227), UInt8(195)), var2963)
        
        case _ => 
            (UInt64(14)&127..=UInt64(154)&127:(73|1));
            var1340
        
    } as Interface385);
    let var3165 : Array<Float64> = [(-94.0), (-25.0), (-21.0), 108.0, 43.0, (-19.0), (-117.0), 11.0, 105.0, 59.0];
    let var3216 : Float64 = (-123.0);
    let var3226 : Float64 = 26.0;
    let var3259 : UInt64 = UInt64(Int16(23));
    let var3302 : ?(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64) = ((-15) as (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64));
    (Int16(-107), try { // block id: 3142
        Int16(102) / ((var456) | 1);
        if (var2489) { Option<Interface385>.None } else { var2911 } 
    } catch (e: Exception) { // block id: 3150
        var2911
    } finally { // block id: 3152
        ();
        ();
        var var3157 : Interface385 = Class382();
        Option<Interface385>.Some(var3157)
    }, [var3165, var3168, var3171, [(-53.0), 65.0, (-75.0), (-121.0), (-86.0), 17.0, var3181, (-85.0), var3181, var3181], [(-83.0), (-101.0), (-36.0), (-64.0), (-45.0), var3181, var3181, 9.0, (-38.0), var3181], [(-79.0), (-83.0), (-35.0), 93.0, var3181, var3181, (-53.0), var3181, var3181, var3181], var3168, [(-97.0), 6.0, var3181, 61.0, (-21.0), var3216, (-101.0), 67.0, var3216, 66.0], [37.0, var3216, var3226, (-67.0), (-74.0), var3181, var3216, (-27.0), 1.0, 27.0], [(-90.0), 112.0, 101.0, 33.0, (-68.0), (-45.0), 6.0, 3.0, 23.0, (-14.0)]][4][4], Int64((Option<UInt8>.Some(UInt8(65)) ?? var70)), match (match (Int8(72)) {
            case _ => 
                var131
            
        }) {
        case _ : Interface387 => 
            ();
            var var3263 : UInt64 = UInt64(190);
            (var3259&127..var3263&127:(var92|1))
        
        case _ => 
            (Int32(80)&127..Int32(110)&127:(-73)|1);
            (UInt64(237)&127..=UInt64(57)&127:32|1)
        
        case _ => 
            var3125;
            [(-89.0), var3226, var3181, 25.0, 56.0, (-25.0), var3216, var3226, 113.0, (-63.0)];
            if (false) { (UInt64(84)&127..UInt64(186)&127:(-23)|1) } else { var3290 } 
        
        case _ : Array<Range<UInt8>> => 
            var3290
        
        case _ => 
            if (var2394) { Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>.None } else { var3302 } ;
            (UInt64(238)&127..UInt64(248)&127:(-9)|1)
        
    }, ((var3313 ?? var2835) ?? ()))
}


public func func776(param777 : Range<Int16>, optionalParam778 ! : UInt32 = UInt32(Int32(Int32(-66))), namedParam782 ! : Option<Enum31>) : (Class382, Range<Int16>, Range<UInt8>) { // block id: 783
    var var802 : UInt64 = UInt64(UInt16(110));
    let var806 : Int64 = 110;
    let var842 : String = """
l*ukP
'I3fa{
""";
    let var853 : Class382 = Class382(namedParam856 : Option<Array<Unit>>.None, optionalParam857 : Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>.Some((UInt16(Int16(74)), ###"SG${var842}7>Y)h}:["###, (UInt64(220)&127..UInt64(199)&127:(116|1)), UInt8(Int8(-42)), (UInt16(2)&127..=UInt16(106)&127:(-127)|1), 86.0)), namedParam860 : Enum31.defaultValue, namedParam861 : UInt32(Int16(-2)));
    let var3523 : ?Enum31 = Option<Enum31>.Some(Enum31.defaultValue);
    (match ((Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>.None ?? (UInt16(67), ###"kh4Yxhvd7\\"###, (UInt64(145)&127..=var802&127:(var806|1)), var70, (UInt16(206)&127..var670&127:(var806|1)), 18.0))) {
        case _ => 
            Option<(Class382, Range<Int16>, Range<UInt8>)>.Some(var818)
        
    } ?? if ((var842, var418, "*R${var842}NU${var842}oTza{`f")[1]) { // block id: 847
        Int16(-68);
        var var3493 : Enum31 = Enum31.defaultValue;
        if (var418) { (var853, param777, (UInt8(211)&127..=UInt8(251)&127:104|1)) } else { (Class382(namedParam856 : Option<Array<Unit>>.Some(var634), namedParam860 : var3493, namedParam861 : UInt32(123)), (Int16(-102)&127..=Int16(9)&127:(-89)|1), (UInt8(156)&127..UInt8(214)&127:(-81)|1)) } 
    } else if (match (Option<Interface385>.None) {
        case _ => 
            var92 = (-100);
            var418
        
    }) { // block id: 3506
        var3508;
        ([(), (), (), (), (), var3346, var1120, var3125, var3346, ()], var3523, (var70&127..var70&127:(var92|1)));
        (var853, param777, (var70&127..=UInt8(31)&127:(111|1)))
    } else { // block id: 3537
        var670 &= UInt16(170);
        var3346;
        if (true) { (Class382(), (Int16(111)&127..=Int16(-122)&127:(var806|1)), (UInt8(138)&127..=UInt8(47)&127:(-18)|1)) } else { var818 } 
    })
}

public func func571(namedParam572 ! : Range<UInt32>, namedParam573 ! : Float32, optionalParam574 ! : Range<UInt64> = (UInt64(229)&127..UInt64(70)&127:(-79)|1)) : Class382 { // block id: 576
    let var631 : Range<Int8> = (Int8(114)&127..=Int8(18)&127:72|1);
    let var658 : Unit = ();
    var var678 : Int8 = Int8(Int8(UInt8(165)));
    match (((var585 as UInt64) ?? if (false) { // block id: 589
            ();
            let var593 : UInt64 = UInt64(Int16(Int16(-111)));
            var593 * UInt64(167)
        } else { // block id: 598
            UInt64(135)
        })) {
        case 113 | 185 => 
            var var615 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            if (true) { (namedParam572, (var609&127..=var609&127:(104|1)), var615, [(), (), (), (), (), (), (), (), (), ()], Enum31.defaultValue, UInt16(200)) } else { var36 } 
        
        case caseVar623 => 
            ();
            var427++;
            (namedParam572, var631, var634, [(), (), (), (), (), (), (), (), (), ()], var503, UInt16(27))
        
        case 111 | 125 | 192 | 148 => 
            var70 += UInt8(37);
            ();
            if (true) { ((UInt32(219)&127..var372&127:((-51)|1)), (Int8(1)&127..=Int8(105)&127:(-111)|1), var634, [(), var658, (), (), var658, (), var658, var658, var658, var658], var503, var670) } else { var36 } 
        
        case _ : Array<Unit> => 
            var678 /= ((var609) | 1);
            ();
            (namedParam572, (Int8(18)&127..=var678&127:(23|1)), var634, var634, Enum31.defaultValue, UInt16(251))
        
        case _ => 
            var var698 : UInt64 = UInt64(Int16(UInt8(91)));
            var698 ^= var698;
            !var418;
            if (true) { var36 } else { var36 } 
        
    };
    var var738 : ?Unit = Option<Unit>.Some(());
    var var744 : Float32 = Float32(-1.0);
    var var749 : Bool = true;
    match (((Option<Option<Enum31>>.None ?? var722) ?? try { // block id: 725
            if (var418) { var503 } else { Enum31.defaultValue } 
        } finally { // block id: 730
            Enum31.defaultValue
        })) {
        case defaultValue => 
            if (true) { var738 } else { Option<Unit>.None } ;
            var744 *= namedParam573;
            var749 &&= var749
        
        case defaultValue => 
            ()
        
        case defaultValue => 
            ();
            var762 &= var762
        
        case _ => 
            ();
            ();
            ()
        
    };
    if (var749) { func776((Int16(-84)&127..var453&127:(var92|1)), optionalParam778 : var762, namedParam782 : var722) } else { match {
        case true => 
        var1120;
        var818
        case _ => 
        var3346;
        ();
        if (var2489) { var818 } else { var818 } 
    } } [0]
}


public func func483(param484 : Float64) : Class382 { // block id: 485
    var var551 : ?Unit = Option<Unit>.Some(());
    let var561 : Range<Int8> = (Int8(87)&127..=Int8(-58)&127:(-34)|1);
    match (((Class382() as Enum31) ?? (var500 ?? var503))) {
        case _ : Float64 => 
            ();
            if (var418) { var512 } else { Class382(var551, (Int32(27)&127..=Int32(-43)&127:32|1)) } 
        
        case _ => 
            if (false) { (Int8(-2)&127..Int8(48)&127:(-88)|1) } else { var561 } ;
            var var565 : Float32 = Float32(Float32(63.0));
            var565 *= var565;
            var512
        
    };
    var var3600 : Float32 = Float32(-36.0);
    func571(namedParam572 : if ((var2270 ?? true)) { try { // block id: 3576
        var3386;
        if (true) { Class382() } else { var512 } ;
        (var372&127..var372&127:(var92|1))
    } finally { // block id: 3586
        Option<(Class382, Range<Int16>, Range<UInt8>)>.None;
        (var372&127..var762&127:(var92|1))
    } } else { (Option<Range<UInt32>>.None ?? (UInt32(177)&127..UInt32(92)&127:31|1)) } , namedParam573 : var3600)
}

func func394(optionalParam395 ! : Range<Int16> = (Int16(64)&127..Int16(UInt16(UInt8(UInt8(64))))&127:((-41)|1)), optionalParam403 ! : Rune = 'F', namedParam405 ! : Interface385, optionalParam406 ! : Class382 = Class382()) : Class382 { // block id: 408
    var var421 : Interface388 = Class382();
    let var444 : ?Interface388 = Option<Interface388>.None;
    try { // block id: 410
        var var413 : ?Unit = Option<Unit>.None;
        (var413 ?? ());
        if (var418) { var421 } else { var421 } 
    } finally { // block id: 424
        var427 <<= ((Int32(-104)) & 7);
        Aggregate431.var436;
        (var444 ?? Class382())
    };
    var var464 : Option<Class382> = ([(), (), (), (), (), (), (), (), (), ()] as Class382);
    if ((Option<Unit>.None is Interface386<Rune>)) { (if ((var453 != var456)) { (var464 ?? Class382()) } else { (if (var418) { optionalParam406 } else { optionalParam406 } ) } ) } else { (66.0|>func483) } 
}

public func func379() : (Range<UInt8>, Rune, Array<Unit>, UInt32, Unit) { // block id: 380
    func394(optionalParam395 : if (var2394) { (Int16(-111)&127..Int16(-107)&127:(-66)|1) } else { (var456&127..=var456&127:((-34)|1)) } , namedParam405 : var3386).var3613;
    var1094
}

public func func348(param349 : Option<Unit>, namedParam350 ! : Option<Array<Unit>>) : Array<Unit> { // block id: 351
    var var354 : Unit = ();
    let var368 : Rune = 'z';
    var loopTimeVar3666 : Range<UInt64> = (UInt64(UInt16(62))&127..=UInt64(9)&127:((-31)|1));
    let var3752 : UInt32 = UInt32(175);
    [var354, match (Int8(45) / ((Int8(65)) | 1)) {
        case _ => 
            ()
        
    }, ((UInt8(44)&127..UInt8(16)&127:(-102)|1), var368, [(), (), (), (), (), (), (), (), (), ()], var372, var354)[4], func379()[4], var1120, match (var1744) {
        case _ => 
            var3346;
            var354;
            if (false) { var634 } else { [(), (), (), (), (), (), (), (), (), ()] } 
        
        case _ : Interface391 => 
            var var3643 : Unit = ();
            [(), (), (), var354, (), var3125, var3346, (), var3643, var3643]
        
        case _ => 
            var var3659 : Unit = ();
            [(), (), var3346, (), var354, var1120, (), (), var3508, var3659]
        
    }[6], for (i in loopTimeVar3666 where var2489) {
        var3508
    }, if (var3675 != UInt64(247)) { // block id: 3678
        var3681 *= UInt32(141)
    } else if (match {
        case var2394 => 
        var3508;
        true
        case true => 
        var3692;
        var3675;
        var2489
        case _ => 
        ();
        true
    }) { // block id: 3705
        let var3707 : Float32 = Float32(68.0);
        var3707;
        var354
    }, if (try { // block id: 3712
        Option<Enum31>.Some(var503);
        Option<Range<UInt32>>.Some((var3681&127..=UInt32(115)&127:(15|1)));
        true
    } catch (e: Exception) { // block id: 3721
        var var3723 : Range<Int16> = (Int16(17)&127..Int16(-10)&127:61|1);
        var3723;
        false
    } finally { // block id: 3726
        var372 < var3681
    }) { // block id: 3730
        if (false) { "4\\]1+RDa{>l" } else { """
x^}ii
m|q~S
""" } ;
        var3346
    }, if (if (var3422) { // block id: 3739
        false
    } else if (var2489) { // block id: 3742
        var70 -= var70;
        false
    } else { // block id: 3747
        true
    }) { // block id: 3749

    } else if (var3752 != UInt32(195)) { // block id: 3755
        var1120;
        var92 <<= ((var92) & 7);
        ()
    }]
}

func func338() : Enum31 { // block id: 339
    let var3763 : ?Array<Unit> = Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()]);
    (Option<Array<Unit>>.None ?? func348(var2835, namedParam350 : var3763))[3];
    var503
}


func func27(param28 : UInt32) : Bool { // block id: 29
    let var77 : Int16 = Int16(84);
    var var86 : UInt32 = UInt32(Int8(32));
    match (var36[4]) {
        case caseVar66 => 
            var70--
        
        case defaultValue => 
            var77;
            Enum31.defaultValue;
            ()
        
        case _ => 
            ();
            var86 *= UInt32(172);
            var92 >>= ((var92) & 7)
        
    };
    let var249 : Range<UInt16> = (UInt16(93)&127..UInt16(Int8(UInt8(Int8(-78))))&127:(Int64(Int16(64))|1));
    let var265 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    func func262() : Array<Unit> { // block id: 263
        var265
    }
;
    let var276 : (Range<Int32>) -> Unit = func225;
    let var282 : Int32 = Int32(UInt8(32));
    let var3815 : Option<Bool> = (Class382(namedParam856 : Option<Array<Unit>>.None, optionalParam857 : (((-123)&127..124&127:((-22)|1)) as (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)), namedParam860 : Enum31.defaultValue, namedParam861 : UInt32(41)) as Bool);
    let var3840 : ?Enum31 = (Int32(UInt32(175)) as Enum31);
    let var3879 : Range<Int8> = (Int8(74)&127..=Int8(-29)&127:74|1);
    let var3901 : UInt64 = UInt64(UInt64(UInt64(163)));
    func func97(optionalParam98 ! : Int16 = Int16(-85), optionalParam100 ! : String = "%'AAf'7_z>", optionalParam102 ! : Int8 = Int8(Int8(UInt8(Int8(UInt8(158))))), optionalParam108 ! : String = "8vLAD#[Yzl") : Float64 { // block id: 110
        false;
        var var242 : UInt64 = UInt64(Int16(-112));
        var var270 : ?Unit = Option<Unit>.Some(());
        func func297(optionalParam298 ! : (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64) = (UInt16(188), "o~tyo)PKsG", (UInt64(161)&127..=UInt64(193)&127:(-4)|1), UInt8(64), (UInt16(174)&127..=UInt16(67)&127:104|1), (-107.0)), optionalParam306 ! : Int32 = Int32(-49), optionalParam308 ! : (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64) = (UInt16(188), """
JvWj~
+8Bkc
""", (UInt64(Int32(UInt16(189)))&127..=UInt64(44)&127:((-17)|1)), UInt8(Int8(UInt8(Int8(118)))), (UInt16(187)&127..=UInt16(220)&127:109|1), Float64(Float32(-95.0))), optionalParam325 ! : Range<Int8> = (Int8(UInt8(UInt8(6)))&127..=Int8(Int8(Int8(-57)))&127:(Int64(UInt32(206))|1))) : Bool { // block id: 335
            let var3785 : (Class382, Range<Int16>, Range<UInt8>) = (Class382(), (Int16(-73)&127..=Int16(36)&127:82|1), (UInt8(195)&127..=UInt8(127)&127:(35|1)));
            match (func338()) {
                case _ => 
                    var var3773 : Int16 = Int16(UInt8(41));
                    var3773--;
                    Int8(-99)
                
                case _ => 
                    optionalParam102
                
                case defaultValue => 
                    var3785;
                    ();
                    var609
                
                case caseVar3797 : Array<Range<UInt8>> => 
                    if (true) { Option<Enum31>.None } else { Option<Enum31>.Some(var503) } ;
                    Int8(-92)
                
                case _ => 
                    Option<(Class382, Range<Int16>, Range<UInt8>)>.None;
                    Int8(-107)
                
            };
            let var3849 : Range<Int16> = (Int16(90)&127..=Int16(Int8(47))&127:(102|1));
            (var3815 ?? if ((var3829 is Range<Int32>)) { // block id: 3833
                UInt16(146) < UInt16(143)
            } else if (try { // block id: 3838
                var3840;
                var456 <= optionalParam98
            } catch (e: Exception) { // block id: 3847
                var3849;
                var92 != var92
            }) { // block id: 3858
                false
            } else { // block id: 3860
                ();
                var var3864 : Int16 = Int16(Int8(36));
                var3864 <<= ((Int16(107)) & 7);
                var418 || false
            })
        }
;
        [func2662((true is Bool), (UInt16(42), """
4M#xS
%ry*&
""", (var242&127..UInt64(136)&127:(0|1)), UInt8(55), var249, 83.0)[4]), func262()[2], (var270 ?? ()), (if (true) { (var282&127..Int32(-98)&127:((-60)|1)) } else { (Int32(38)&127..=var282&127:(var92|1)) } |>var276), if (true) { // block id: 293
            optionalParam108;
            ()
        } else if (func297(optionalParam298 : (var670, optionalParam108, (UInt64(178)&127..=UInt64(162)&127:(-95)|1), UInt8(142), var249, 25.0), optionalParam325 : var3879)) { // block id: 3881
            var3508
        }, var1120, try { // block id: 3885
            var2366;
            var1120
        } catch (_) { // block id: 3888
            var70++;
            ()
        } finally { // block id: 3892
            if (var3829) { var500 } else { Option<Enum31>.None } ;
            (Int8(-81)&127..Int8(7)&127:(-45)|1);
            var242 += var3901
        }, match (Float64(Float32(-110.0))) {
            case caseVar3910 => 
                var2270;
                (var2394, var996, var70, UInt8(48));
                ()
            
            case 88.0 | -66.0 => 
                UInt64(159);
                var92 -= 31
            
            case 110.0 | -84.0 | -32.0 => 
                ();
                var3840;
                var92 ^= (-104)
            
            case _ => 
                var3675 <<= ((var3675) & 7);
                var3346;
                var var3942 : Int8 = Int8(UInt8(Int8(Int8(-76))));
                var3942 |= optionalParam102
            
        }, if (true) { // block id: 3950
            var818;
            ()
        }, var3954];
        var3959[7]
    }
;
    var var4041 : (Int16, Option<Interface385>, Float64, Int64, Range<UInt64>, Unit) = (Int16(Int8(125)), (((UInt8(153)&127..UInt8(101)&127:((-22)|1)), 'T', [(), (), (), (), (), (), (), (), (), ()], UInt32(123), ()) as Interface385), Float64(11.0), 23, (UInt64(181)&127..=UInt64(216)&127:118|1), ());
    (func97(optionalParam98 : try { // block id: 3963
        Class382([[(-23.0), 80.0, (-69.0), 78.0, (-77.0), (-97.0), (-72.0), (-117.0), (-32.0), 59.0], [91.0, (-64.0), (-64.0), (-53.0), (-82.0), (-46.0), 51.0, 21.0, 1.0, (-17.0)], [(-82.0), (-76.0), 33.0, (-101.0), (-54.0), (-26.0), 116.0, (-6.0), 19.0, (-117.0)], [(-6.0), (-81.0), (-26.0), 11.0, (-116.0), (-68.0), 39.0, (-70.0), (-88.0), 93.0], [106.0, (-52.0), (-117.0), 0.0, (-74.0), 3.0, 103.0, 33.0, (-91.0), 96.0], [(-71.0), (-15.0), 124.0, 72.0, (-99.0), (-121.0), 82.0, 51.0, 57.0, 2.0], [(-85.0), (-70.0), 2.0, 63.0, 97.0, (-40.0), 98.0, 30.0, 88.0, 29.0], [(-13.0), (-3.0), (-3.0), (-60.0), (-51.0), (-120.0), 22.0, (-111.0), (-40.0), (-76.0)], [5.0, 4.0, (-128.0), 38.0, (-33.0), (-77.0), 41.0, 86.0, (-84.0), (-47.0)], [(-7.0), 112.0, (-86.0), (-72.0), 48.0, 101.0, (-80.0), (-87.0), (-40.0), (-75.0)]]);
        var92;
        var453
    } finally { // block id: 4022
        var3681;
        var3829;
        Int16(-58) | Int16(-118)
    }, optionalParam102 : try { // block id: 4029
        (var92&127..=var92&127:((-28)|1));
        var3125;
        var609
    } finally { // block id: 4036
        ();
        if (true) { var4041 } else { var4041 } ;
        Int8(92) % ((Int8(-42)) | 1)
    }, optionalParam108 : var4065) is (Array<Unit>, Option<Enum31>, Range<UInt8>))
}

public func func16(param17 : Float64) : Array<Unit> { // block id: 18
    [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]][6][3];
    let var4068 : (UInt32) -> Bool = func27;
    let var4077 : ?Array<Unit> = Option<Array<Unit>>.None;
    var loopTimeVar4154 : Range<UInt64> = (UInt64(19)&127..=UInt64(40)&127:(Int64(Int8(76))|1));
    let var4177 : Option<Range<UInt32>> = ([[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] as Range<UInt32>);
    if ((try { // block id: 4071
        var92--;
        Option<Class382>.Some(Class382(namedParam856 : var4077, namedParam860 : Enum31.defaultValue, namedParam861 : UInt32(191)));
        UInt32(119)
    } catch (_) { // block id: 4082
        ();
        let var4085 : UInt32 = UInt32(174);
        var4085
    }|>var4068)) { match ('W') {
        case 'v' | '3' | 'z' => 
            var3346;
            var var4094 : (UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64) = (UInt16(UInt8(Int8(112))), "&W9SPayGem", (UInt64(24)&127..UInt64(26)&127:(Int64(5)|1)), UInt8(Int8(UInt8(UInt8(190)))), (UInt16(152)&127..UInt16(251)&127:89|1), (-92.0));
            var4094;
            if (false) { var634 } else { [var3346, var3954, var3954, (), (), (), var3954, (), var1120, var3346] } 
        
        case caseVar4128 : UInt64 => 
            [(), var4133, var3954, (), (), (), var3346, (), var4133, var3125]
        
        case _ => 
            var634
        
    } } else { [var1120, for (i in loopTimeVar4154 where true) {
        var70 *= UInt8(237)
    }, match (UInt16(89)) {
        case _ => 
            var3508
        
    }, if (true) { // block id: 4167
        var92 -= var92;
        ();
        var1120
    } else if (true) { // block id: 4174

    }, match (var4177) {
        case _ => 
            var670 += UInt16(213);
            let var4189 : Int32 = Int32(-70);
            if (false) { (var4189&127..=Int32(-114)&127:((-120)|1)) } else { (var427&127..Int32(47)&127:((-125)|1)) } ;
            var4199++
        
    }, (var4205 ?? var4133), (var4210 *= UInt8(224)), var4133, try (resource = Class382()) { // block id: 4215
        var70 / ((UInt8(5)) | 1);
        Option<Enum31>.Some(Enum31.defaultValue);
        var3346
    } finally { // block id: 4222

    }, match ((var418, var453, '5', var2598, var427, var1526, (Int32(115)&127..=Int32(-112)&127:76|1), var4005)) {
        case (_ : Option<(UInt16, String, Range<UInt64>, UInt8, Range<UInt16>, Float64)>,_ : UInt8,_,caseVar4235,_,caseVar4236,caseVar4237 : UInt64,_ : Class382) => 
            var3508
        
        case caseVar4242 => 
            let var4261 : (String, Bool, String) = (###"?KN&oKJ$Q_"###, false, "8WqEcy(]=x");
            if (var2489) { (var427, var1526, (var4251, var1521, UInt64(201), var3125, var4261, (true, [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], UInt8(86), var70)), var4272, Option<Bool>.Some(var3422), (var3829, var996, var70, var4210), (83.0, 'X', UInt64(38), var1120, ("efo^.w?3$6", true, var4065), var4358)) } else { var1340 } ;
            var427 += var427
        
        case _ => 
            var3181 **= Float64(Int32(param17) & 3);
            if (true) { Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.None } else { Option<(Array<Unit>, Option<Enum31>, Range<UInt8>)>.Some(var900) } ;
            ()
        
    }] } 
}

main(): Int64 {
    try {
        var var4464 : (Float64) -> Array<Unit> = func16;
        (var3181|>var4464)[8];
        Int64(var4210) | 97
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var70*var70), 64)
        crccheck.updateBuffer(UInt64(var92*var92), 64)
        crccheck.updateBuffer(UInt64(var372*var372), 64)
        crccheck.updateBuffer(UInt64(var427*var427), 64)
        crccheck.updateBuffer(UInt64(var453*var453), 64)
        crccheck.updateBuffer(UInt64(var456*var456), 64)
        crccheck.updateBuffer(UInt64(var609*var609), 64)
        crccheck.updateBuffer(UInt64(var670*var670), 64)
        crccheck.updateBuffer(UInt64(var762*var762), 64)
        crccheck.updateBuffer(UInt64(var2555*var2555), 64)
        crccheck.updateBuffer(UInt64(var3675*var3675), 64)
        crccheck.updateBuffer(UInt64(var3681*var3681), 64)
        crccheck.updateBuffer(UInt64(var4199*var4199), 64)
        crccheck.updateBuffer(UInt64(var4210*var4210), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_expected_character
// ASSERT: scan parse_expected_expr_or_decl_in
// ASSERT: scan parse_unexpected_declaration_in_scope


