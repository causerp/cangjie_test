/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output

public var var16 : Enum13 = Enum13.defaultValue
public var var36 : Unit = ()
let var56 : ?Float32 = Option<Float32>.None
let var59 : Float32 = Float32(-56.0)
public let var89 : (Float32, Bool, Float32) = (Float32(-50.0), false, Float32(-49.0))
let var284 : Class263<Option<Range<Int32>>, Bool, UInt32> = Class263<Option<Range<Int32>>, Bool, UInt32>()
public var var310 : Bool = true
let var313 : ?Bool = (Int8(Int8(Int8(Int8(-101)))) as Bool)
var var558 : Array<(Float32, Bool, Float32)> = [(Float32(47.0), true, Float32(Float32(Float32(56.0)))), (Float32(Float32(Float32(-65.0))), ((###"9yu.h;rvj'"###, Int16(99), [(Float32(65.0), true, Float32(0.0)), (Float32(-17.0), true, Float32(-103.0)), (Float32(76.0), true, Float32(0.0)), (Float32(120.0), false, Float32(-51.0)), (Float32(-36.0), false, Float32(45.0)), (Float32(-35.0), true, Float32(5.0)), (Float32(-32.0), false, Float32(40.0)), (Float32(-86.0), true, Float32(-105.0)), (Float32(88.0), false, Float32(8.0)), (Float32(98.0), true, Float32(-49.0))], false, Class263<Option<Range<Int32>>, Bool, UInt32>()) is UInt8), Float32(-96.0)), (Float32(Float32(Float32(98.0))), false, Float32(Float32(-110.0))), (Float32(Float32(Float32(121.0))), ([(Float32(101.0), true, Float32(55.0)), (Float32(-53.0), false, Float32(11.0)), (Float32(9.0), true, Float32(22.0)), (Float32(-13.0), true, Float32(52.0)), (Float32(44.0), true, Float32(63.0)), (Float32(-87.0), true, Float32(-127.0)), (Float32(38.0), true, Float32(58.0)), (Float32(54.0), true, Float32(16.0)), (Float32(79.0), true, Float32(35.0)), (Float32(99.0), true, Float32(77.0))] is String), Float32(Float32(Float32(71.0)))), (Float32(84.0), (Int32(UInt8(191)) is Range<UInt32>), Float32(-81.0)), (Float32(-80.0), (Int32(84) is Interface267), Float32(Float32(30.0))), (Float32(81.0), false, Float32(-54.0)), (Float32(-82.0), false, Float32(66.0)), (Float32(72.0), (((UInt64(100)&127)..(UInt64(198)&127):((13|1))) is Range<UInt64>), Float32(-76.0)), (Float32(Float32(60.0)), true, Float32(-15.0))]
public var var724 : UInt32 = UInt32(UInt32(UInt16(UInt8(Int8(-55)))))
public let var885 : Interface271 = Class263<Option<Range<Int32>>, Bool, UInt32>()
var var916 : UInt16 = UInt16(61)
public let var935 : Interface266 = Class263<Option<Range<Int32>>, Bool, UInt32>()
public var var940 : Int16 = Int16(Int16(Int8(-93)))
public let var947 : (String, Int16, Array<(Float32, Bool, Float32)>, Bool, Interface267) = ("J+\\\"l*c^ |", Int16(Int8(107)), [(Float32(-30.0), true, Float32(Float32(-15.0))), (Float32(Float32(83.0)), (((UInt8(149)&127)..=(UInt8(211)&127):((-51)|1)) is Range<UInt8>), Float32(-120.0)), (Float32(-81.0), ("""
=*DSC
9;j$3
""" is (Float64, Int64, Int64)), Float32(25.0)), (Float32(-54.0), (((UInt64(115)&127)..=(UInt64(164)&127):((-53)|1)) is Option<Bool>), Float32(Float32(-110.0))), (Float32(-82.0), (Enum13.defaultValue is Float64), Float32(-89.0)), (Float32(Float32(-3.0)), ([((Int16(64)&127)..=(Int16(89)&127):(34|1)), ((Int16(121)&127)..(Int16(-113)&127):(69|1)), ((Int16(126)&127)..=(Int16(23)&127):(73|1)), ((Int16(60)&127)..=(Int16(-64)&127):((-81)|1)), ((Int16(-29)&127)..(Int16(-36)&127):((-40)|1)), ((Int16(-80)&127)..(Int16(-48)&127):((-55)|1)), ((Int16(94)&127)..(Int16(-67)&127):(30|1)), ((Int16(9)&127)..=(Int16(55)&127):((-37)|1)), ((Int16(7)&127)..(Int16(66)&127):((-107)|1)), ((Int16(56)&127)..(Int16(-16)&127):((-108)|1))] is UInt32), Float32(Float32(102.0))), (Float32(-118.0), ([(Float32(-79.0), false, Float32(-57.0)), (Float32(84.0), true, Float32(-115.0)), (Float32(78.0), true, Float32(53.0)), (Float32(105.0), true, Float32(44.0)), (Float32(-54.0), true, Float32(56.0)), (Float32(-67.0), false, Float32(98.0)), (Float32(121.0), false, Float32(-102.0)), (Float32(93.0), false, Float32(-72.0)), (Float32(44.0), false, Float32(-38.0)), (Float32(-47.0), false, Float32(41.0))] is Option<Bool>), Float32(Float32(47.0))), (Float32(120.0), ([((Int16(-97)&127)..=(Int16(60)&127):((-101)|1)), ((Int16(123)&127)..=(Int16(-74)&127):((-83)|1)), ((Int16(60)&127)..=(Int16(50)&127):(62|1)), ((Int16(83)&127)..=(Int16(-17)&127):((-65)|1)), ((Int16(-110)&127)..(Int16(18)&127):((-103)|1)), ((Int16(35)&127)..=(Int16(13)&127):(86|1)), ((Int16(53)&127)..(Int16(-104)&127):((-123)|1)), ((Int16(-8)&127)..(Int16(-121)&127):(0|1)), ((Int16(33)&127)..=(Int16(71)&127):(88|1)), ((Int16(16)&127)..(Int16(-116)&127):((-74)|1))] is Option<Bool>), Float32(Float32(-115.0))), (Float32(Float32(-36.0)), true, Float32(Float32(-45.0))), (Float32(125.0), true, Float32(Float32(-85.0)))], (((Int32(-13)&127)..=(Int32(UInt32(11))&127):((Int64(UInt8(204))|1))) is Range<UInt32>), Class263<Option<Range<Int32>>, Bool, UInt32>())
public let var1200 : Enum1197 = Enum1197.defaultValue
var var1294 : UInt8 = UInt8(209)
var var1324 : Array<Range<Int16>> = [((Int16(-97)&127)..(Int16(66)&127):(86|1)), ((Int16(-68)&127)..=(Int16(-6)&127):((-94)|1)), ((Int16(-18)&127)..(Int16(-6)&127):(89|1)), ((Int16(-44)&127)..(Int16(42)&127):((-28)|1)), ((Int16(-85)&127)..(Int16(-61)&127):(68|1)), ((Int16(-113)&127)..=(Int16(46)&127):((-21)|1)), ((Int16(59)&127)..=(Int16(16)&127):(49|1)), ((Int16(-46)&127)..(Int16(46)&127):(92|1)), ((Int16(-79)&127)..=(Int16(99)&127):(91|1)), ((Int16(26)&127)..(Int16(-88)&127):(75|1))]
public var var1394 : ((Bool, Range<Int64>, Range<UInt64>, Int16, String), Int32, (UInt32, Range<UInt32>, Range<Int16>, Array<Range<Int16>>, Range<UInt8>, Int8), Int16) = ((((UInt64(225), ((UInt16(157)&127)..=(UInt16(243)&127):(83|1)), 28, (), Int32(19)) is Array<(Float32, Bool, Float32)>), (((-123)&127)..((-119)&127):(92|1)), ((UInt64(Int32(-115))&127)..=(UInt64(91)&127):((Int64(120)|1))), Int16(Int8(Int8(20))), ###"O%4cjOQ(9\\"###), Int32(47), (UInt32(Int16(39)), ((UInt32(78)&127)..(UInt32(100)&127):(34|1)), ((Int16(-108)&127)..=(Int16(-68)&127):((36|1))), [((Int16(-31)&127)..=(Int16(-63)&127):((97|1))), ((Int16(-69)&127)..(Int16(84)&127):(4|1)), ((Int16(-88)&127)..(Int16(119)&127):((-117)|1)), ((Int16(13)&127)..=(Int16(-105)&127):((-121)|1)), ((Int16(-79)&127)..=(Int16(-25)&127):((114|1))), ((Int16(43)&127)..=(Int16(-59)&127):(((-78)|1))), ((Int16(99)&127)..=(Int16(-87)&127):(48|1)), ((Int16(46)&127)..(Int16(99)&127):(((-108)|1))), ((Int16(-45)&127)..=(Int16(-5)&127):(8|1)), ((Int16(99)&127)..=(Int16(88)&127):(((-28)|1)))], ((UInt8(211)&127)..(UInt8(242)&127):((-88)|1)), Int8(Int8(94))), Int16(68))
var var1483 : Option<Interface266> = (((UInt32(156)&127)..(UInt32(152)&127):((-79)|1)) as Interface266)
public let var1496 : Int64 = Int64(UInt64(Int8(Int8(Int8(53)))))
public var var1519 : Int8 = Int8(81)
public let var1601 : UInt8 = UInt8(58)
public var var1619 : Range<Int64> = ((35&127)..(77&127):((-54)|1))
var var1629 : Array<Bool> = [false, false, false, false, (((UInt32(179) is Unit), (((-63)&127)..(21&127):(50|1)), ((UInt64(19)&127)..(UInt64(183)&127):(37|1)), Int16(-7), "A'>V\"(/EFY") is (Interface266) -> Range<Int16>), true, (() is UInt8), false, (((UInt32(UInt16(230))&127)..=(UInt32(Int32(-77))&127):(((-56)|1))) is Float64), (Enum1197.defaultValue is Enum13)]
public var var1729 : Float32 = Float32(121.0)
public let var1744 : ?(Float64, Int64, Int64) = (UInt32(168) as (Float64, Int64, Int64))
public let var1779 : Float64 = Float64(Float32(23.0))
public let var1844 : Range<UInt8> = ((UInt8(230)&127)..(UInt8(88)&127):(113|1))
public enum Enum13 {
    defaultValue |
    enumValue201(UInt8)
}

func func44(param45 : Rune) : Bool { // block id: 46
    ();
    (Float64((var56 ?? var59)) is UInt32)
}

public interface Interface271 {

}

public interface Interface270<T0> <: Interface271 {

}

public interface Interface269 <: Interface270<Array<Int8>> {
    func func290(namedParam295 ! : Range<UInt32>, namedParam296 ! : Int16) : Range<Int16> { // block id: 297
        let var849 : (Interface266) -> Range<Int16> = func299;
        let var855 : Range<Int8> = ((Int8(-84)&127)..=(Int8(20)&127):((-55)|1));
        var var859 : Int8 = Int8(23);
        let var913 : Float64 = 19.0;
        var var922 : Int64 = Int64(Int32(UInt16(189)));
        match (if (false) { var855 } else { ((var859&127)..(var859&127):(((-10)|1))) } ) {
            case _ => 
                Class263<Option<Range<Int32>>, Bool, UInt32>(var913, namedParam869 : var916, namedParam870 : ((var859&127)..=(var859&127):((var922|1))))
            
            case _ : Range<UInt8> => 
                ();
                if (false) { ((Int8(6)&127)..=(Int8(-97)&127):(91|1)) } else { var855 } ;
                var935
            
            case _ => 
                var940;
                let var1059 : (String, Int16, Array<(Float32, Bool, Float32)>, Bool, Interface267) = ("""
~qYQ[
6ORkC
""", Int16(-122), [(Float32(108.0), (Option<Bool>.Some(true) is (Interface268) -> UInt64), Float32(Float32(60.0))), (Float32(-110.0), (UInt32(253) is Class263<Option<Range<Int32>>, Bool, UInt32>), Float32(Float32(-117.0))), (Float32(Float32(-27.0)), (UInt64(211) is Range<UInt16>), Float32(19.0)), (Float32(-87.0), false, Float32(-49.0)), (Float32(Float32(97.0)), true, Float32(79.0)), (Float32(Float32(-74.0)), ("""
+<5XP
$&}`6
""" is (Rune) -> Bool), Float32(Float32(78.0))), (Float32(Float32(-110.0)), (Int8(37) is (UInt64) -> Unit), Float32(45.0)), (Float32(Float32(5.0)), false, Float32(121.0)), (Float32(Float32(16.0)), false, Float32(Float32(-80.0))), (Float32(67.0), (false is Range<UInt8>), Float32(Float32(-44.0)))], (r'x' is Option<Float32>), Class263<Option<Range<Int32>>, Bool, UInt32>());
                if (true) { var947 } else { var1059 } ;
                var935
            
        }|>var849
    }
;
    func func290(namedParam291 ! : Bool) : Float32 { // block id: 292
        func290(namedParam295 : var284.var1131[1], namedParam296 : try { // block id: 1172
            var var1183 : Float64 = Float64(Float32(57.0));
            if (true) { var947 } else { ("R?^mZxUGv+", var940, var558, false, Class263<Option<Range<Int32>>, Bool, UInt32>(var1183, namedParam869 : var916, namedParam870 : ((Int8(-115)&127)..=(Int8(17)&127):(112|1)))) } ;
            Int32(8);
            Int16(78) % ((var940) | 1)
        } finally { // block id: 1192
            ();
            var940
        });
        var var1267 : Unit = ();
        var var1308 : String = "1pTJ&34-5e";
        var var1314 : Int32 = Int32(UInt32(UInt8(Int8(99))));
        var var1340 : Int64 = (-16);
        var var1345 : (Bool, Range<Int64>, Range<UInt64>, Int16, String) = ((Int32(-1) is UInt32), ((30&127)..=(125&127):(46|1)), ((UInt64(39)&127)..=(UInt64(169)&127):(45|1)), Int16(UInt16(238)), "6sZ:sq${var1308}OKFM");
        var var1361 : (Bool, Range<Int64>, Range<UInt64>, Int16, String) = (true, ((Int64(UInt16(UInt16(113)))&127)..(Int64(Int16(Int8(90)))&127):((Int64(UInt64(168))|1))), ((UInt64(70)&127)..=(UInt64(32)&127):(31|1)), Int16(43), ###"8j(e&Bon(T"###);
        if (match (var1200) {
            case caseVar1204 : Float64 => 
                !namedParam291
            
            case defaultValue => 
                true
            
            case _ => 
                var var1216 : Int8 = Int8(12);
                var1216 ^= var1216;
                false
            
        }) { // block id: 1220
            let var1224 : Bool = ((UInt32(UInt32(21)), ((UInt32(155)&127)..(UInt32(94)&127):(5|1)), ((Int16(UInt8(33))&127)..=(Int16(-24)&127):((Int64(UInt64(197))|1))), [((Int16(-124)&127)..(Int16(-54)&127):(62|1)), ((Int16(-16)&127)..=(Int16(50)&127):((-89)|1)), ((Int16(13)&127)..(Int16(-107)&127):((-47)|1)), ((Int16(5)&127)..=(Int16(63)&127):((63|1))), ((Int16(104)&127)..(Int16(-105)&127):(((-86)|1))), ((Int16(112)&127)..=(Int16(2)&127):((102|1))), ((Int16(-2)&127)..(Int16(-101)&127):((28|1))), ((Int16(-128)&127)..(Int16(-117)&127):(88|1)), ((Int16(-66)&127)..=(Int16(44)&127):(45|1)), ((Int16(14)&127)..=(Int16(32)&127):((-21)|1))], ((UInt8(Int8(-100))&127)..(UInt8(120)&127):((76|1))), Int8(102)) is Option<Float32>);
            (Float32(-21.0), var1224, Float32(77.0));
            var1267;
            let var1272 : (UInt64, Range<UInt16>, Int64, Unit, Int32) = (UInt64(59), ((UInt16(UInt8(UInt8(37)))&127)..=(UInt16(UInt8(188))&127):(((-33)|1))), Int64(Int32(36)), (), Int32(-67));
            var1272[3]
        } else if (if (namedParam291) { // block id: 1291
            var1294 |= var1294;
            var1267;
            var var1303 : Int16 = Int16(UInt8(Int8(75)));
            (false, (((-48)&127)..(70&127):((-68)|1)), ((UInt64(199)&127)..(UInt64(176)&127):(44|1)), var1303, var1308)
        } else if (false) { // block id: 1311
            var1314 >>= ((Int32(56)) & 7);
            if (var310) { [((Int16(20)&127)..(Int16(78)&127):((-33)|1)), ((Int16(102)&127)..(Int16(-22)&127):((-86)|1)), ((Int16(-9)&127)..=(Int16(37)&127):(74|1)), ((Int16(-126)&127)..=(Int16(-7)&127):(61|1)), ((Int16(74)&127)..=(Int16(29)&127):(81|1)), ((Int16(-29)&127)..(Int16(-27)&127):((-79)|1)), ((Int16(46)&127)..(Int16(-101)&127):((-51)|1)), ((Int16(-10)&127)..=(Int16(-65)&127):(101|1)), ((Int16(-35)&127)..(Int16(-24)&127):((-55)|1)), ((Int16(-85)&127)..=(Int16(3)&127):((-64)|1))] } else { var1324 } ;
            var var1330 : Bool = (Enum13.defaultValue is Enum13);
            let var1334 : Range<Int64> = ((64&127)..(8&127):(32|1));
            if (true) { (var1330, var1334, ((UInt64(62)&127)..(UInt64(176)&127):((var1340|1))), var940, "$)csGT P!}") } else { var1345 } 
        } else { // block id: 1354
            var310 &&= var310;
            if (false) { var1361 } else { var1361 } 
        }[0]) { // block id: 1378
            var var1702 : (UInt32) -> UInt32 = func1380;
            UInt32(21)|>var1702;
            var1294;
            ()
        };
        Float32(23.0)
    }

}

public interface Interface268 <: Interface269 {

}

public interface Interface267 <: Interface268 {

}

public interface Interface266 <: Interface267 & Interface268 {
    func func877(namedParam878 ! : UInt64) : Unit { // block id: 879

    }
;
    func func287() : (Float64, Int64, Int64) { // block id: 288
        func290(namedParam291 : match {
            case true => 
            var724 &= var724;
            var724 <= var724
            case _ => 
            r'g';
            ((UInt32(231)&127)..=(UInt32(30)&127):(75|1));
            Int16(12) <= var940
        } && (r'F'|>func44));
        var1729 /= Float32((Int32(var1729)) | 1);
        var var1736 : UInt64 = UInt64(113);
        let var1769 : (Float64) -> (Float64, Int64, Int64) = func1758;
        var var1785 : Bool = true;
        let var1858 : Range<Int16> = ((Int16(12)&127)..=(Int16(-9)&127):((-42)|1));
        try { // block id: 1733
            var1736--;
            var1744.getOrThrow()
        } catch (e: Exception) { // block id: 1747
            let var1754 : Option<Range<Int32>> = Option<Range<Int32>>.None;
            (var1754 ?? ((Int32(-49)&127)..=(Int32(-40)&127):(67|1)));
            var var1772 : Float64 = 10.0;
            var1772|>var1769
        } finally { // block id: 1774
            let var1827 : Int16 = Int16(UInt8(149));
            let var1863 : UInt8 = UInt8(Int8(UInt8(Int8(UInt8(120)))));
            let var1874 : (UInt32, Range<UInt32>, Range<Int16>, Array<Range<Int16>>, Range<UInt8>, Int8) = (UInt32(Int32(Int8(-4))), ((UInt32(UInt16(UInt16(207)))&127)..(UInt32(UInt32(238))&127):((Int64(Int64(UInt8(72)))|1))), ((Int16(-108)&127)..(Int16(Int16(UInt16(204)))&127):((66|1))), [((Int16(-46)&127)..=(Int16(-37)&127):(47|1)), ((Int16(-83)&127)..(Int16(-81)&127):((-7)|1)), ((Int16(115)&127)..(Int16(-106)&127):(42|1)), ((Int16(-114)&127)..(Int16(UInt16(209))&127):((26|1))), ((Int16(-35)&127)..(Int16(109)&127):((-38)|1)), ((Int16(UInt16(190))&127)..=(Int16(Int16(59))&127):((95|1))), ((Int16(90)&127)..(Int16(Int8(-82))&127):((34|1))), ((Int16(-97)&127)..(Int16(-21)&127):((-3)|1)), ((Int16(-38)&127)..(Int16(Int8(44))&127):((Int64(Int16(-71))|1))), ((Int16(-46)&127)..=(Int16(119)&127):(61|1))], ((UInt8(29)&127)..(UInt8(108)&127):((Int64((-3))|1))), Int8(UInt8(5)));
            if (true) { // block id: 1777
                var1779;
                ();
                let var1796 : Int16 = Int16(Int16(Int8(-39)));
                let var1810 : Range<Int16> = ((Int16(Int16(Int16(-32)))&127)..(Int16(96)&127):(((-51)|1)));
                var var1823 : Range<Int16> = ((Int16(-32)&127)..(Int16(-107)&127):(86|1));
                if (var1785) { (UInt32(118), ((UInt32(194)&127)..=(UInt32(136)&127):((var1496|1))), ((var940&127)..=(var1796&127):((var1496|1))), [((Int16(-12)&127)..=(Int16(42)&127):(31|1)), ((Int16(60)&127)..=(Int16(123)&127):((-121)|1)), ((var940&127)..(Int16(33)&127):((var1496|1))), ((Int16(-56)&127)..(Int16(11)&127):(114|1)), var1810, ((Int16(58)&127)..(Int16(-107)&127):((-58)|1)), ((var940&127)..(var940&127):(((-112)|1))), var1823, ((var1827&127)..=(var1796&127):(((-58)|1))), ((Int16(-4)&127)..=(Int16(26)&127):((-75)|1))], ((UInt8(35)&127)..(UInt8(96)&127):(103|1)), Int8(123)) } else { (UInt32(98), ((UInt32(29)&127)..=(var724&127):((52|1))), ((Int16(79)&127)..=(Int16(85)&127):((-90)|1)), [((Int16(-59)&127)..(Int16(-5)&127):((-106)|1)), ((Int16(-89)&127)..=(Int16(25)&127):(124|1)), ((Int16(-93)&127)..(Int16(-38)&127):((-11)|1)), ((Int16(111)&127)..(Int16(-71)&127):(20|1)), ((Int16(92)&127)..=(Int16(80)&127):((-56)|1)), ((Int16(91)&127)..(Int16(-27)&127):((-77)|1)), ((Int16(74)&127)..(Int16(-90)&127):(31|1)), ((Int16(-99)&127)..=(Int16(94)&127):(106|1)), ((Int16(-89)&127)..(Int16(76)&127):((-122)|1)), ((Int16(-99)&127)..=(Int16(11)&127):((-66)|1))], var1844, Int8(76)) } 
            } else if (false) { // block id: 1848
                ();
                var36;
                (UInt32(237), ((var724&127)..=(var724&127):((var1496|1))), var1858, var1324, ((var1863&127)..(UInt8(193)&127):((var1496|1))), var1519)
            } else { // block id: 1872
                var1874
            };
            var var1931 : (Float64, Int64, Int64) = (Float64(Float32(-111.0)), Int64(Int64(Int32(-37))), 19);
            var1931
        }
    }
;
    func func290(namedParam295 ! : Range<UInt32>, namedParam296 ! : Int16) : Range<Int16> { // block id: 297
        let var849 : (Interface266) -> Range<Int16> = func299;
        let var855 : Range<Int8> = ((Int8(-84)&127)..=(Int8(20)&127):((-55)|1));
        var var859 : Int8 = Int8(23);
        let var913 : Float64 = 19.0;
        var var922 : Int64 = Int64(Int32(UInt16(189)));
        match (if (false) { var855 } else { ((var859&127)..(var859&127):(((-10)|1))) } ) {
            case _ => 
                Class263<Option<Range<Int32>>, Bool, UInt32>(var913, namedParam869 : var916, namedParam870 : ((var859&127)..=(var859&127):((var922|1))))
            
            case _ : Range<UInt8> => 
                ();
                if (false) { ((Int8(6)&127)..=(Int8(-97)&127):(91|1)) } else { var855 } ;
                var935
            
            case _ => 
                var940;
                let var1059 : (String, Int16, Array<(Float32, Bool, Float32)>, Bool, Interface267) = ("""
~qYQ[
6ORkC
""", Int16(-122), [(Float32(108.0), (Option<Bool>.Some(true) is (Interface268) -> UInt64), Float32(Float32(60.0))), (Float32(-110.0), (UInt32(253) is Class263<Option<Range<Int32>>, Bool, UInt32>), Float32(Float32(-117.0))), (Float32(Float32(-27.0)), (UInt64(211) is Range<UInt16>), Float32(19.0)), (Float32(-87.0), false, Float32(-49.0)), (Float32(Float32(97.0)), true, Float32(79.0)), (Float32(Float32(-74.0)), ("""
+<5XP
$&}`6
""" is (Rune) -> Bool), Float32(Float32(78.0))), (Float32(Float32(-110.0)), (Int8(37) is (UInt64) -> Unit), Float32(45.0)), (Float32(Float32(5.0)), false, Float32(121.0)), (Float32(Float32(16.0)), false, Float32(Float32(-80.0))), (Float32(67.0), (false is Range<UInt8>), Float32(Float32(-44.0)))], (r'x' is Option<Float32>), Class263<Option<Range<Int32>>, Bool, UInt32>());
                if (true) { var947 } else { var1059 } ;
                var935
            
        }|>var849
    }
;
    func func290(namedParam291 ! : Bool) : Float32 { // block id: 292
        func290(namedParam295 : var284.var1131[1], namedParam296 : try { // block id: 1172
            var var1183 : Float64 = Float64(Float32(57.0));
            if (true) { var947 } else { ("R?^mZxUGv+", var940, var558, false, Class263<Option<Range<Int32>>, Bool, UInt32>(var1183, namedParam869 : var916, namedParam870 : ((Int8(-115)&127)..=(Int8(17)&127):(112|1)))) } ;
            Int32(8);
            Int16(78) % ((var940) | 1)
        } finally { // block id: 1192
            ();
            var940
        });
        var var1267 : Unit = ();
        var var1308 : String = "1pTJ&34-5e";
        var var1314 : Int32 = Int32(UInt32(UInt8(Int8(99))));
        var var1340 : Int64 = (-16);
        var var1345 : (Bool, Range<Int64>, Range<UInt64>, Int16, String) = ((Int32(-1) is UInt32), ((30&127)..=(125&127):(46|1)), ((UInt64(39)&127)..=(UInt64(169)&127):(45|1)), Int16(UInt16(238)), "6sZ:sq${var1308}OKFM");
        var var1361 : (Bool, Range<Int64>, Range<UInt64>, Int16, String) = (true, ((Int64(UInt16(UInt16(113)))&127)..(Int64(Int16(Int8(90)))&127):((Int64(UInt64(168))|1))), ((UInt64(70)&127)..=(UInt64(32)&127):(31|1)), Int16(43), ###"8j(e&Bon(T"###);
        if (match (var1200) {
            case caseVar1204 : Float64 => 
                !namedParam291
            
            case defaultValue => 
                true
            
            case _ => 
                var var1216 : Int8 = Int8(12);
                var1216 ^= var1216;
                false
            
        }) { // block id: 1220
            let var1224 : Bool = ((UInt32(UInt32(21)), ((UInt32(155)&127)..(UInt32(94)&127):(5|1)), ((Int16(UInt8(33))&127)..=(Int16(-24)&127):((Int64(UInt64(197))|1))), [((Int16(-124)&127)..(Int16(-54)&127):(62|1)), ((Int16(-16)&127)..=(Int16(50)&127):((-89)|1)), ((Int16(13)&127)..(Int16(-107)&127):((-47)|1)), ((Int16(5)&127)..=(Int16(63)&127):((63|1))), ((Int16(104)&127)..(Int16(-105)&127):(((-86)|1))), ((Int16(112)&127)..=(Int16(2)&127):((102|1))), ((Int16(-2)&127)..(Int16(-101)&127):((28|1))), ((Int16(-128)&127)..(Int16(-117)&127):(88|1)), ((Int16(-66)&127)..=(Int16(44)&127):(45|1)), ((Int16(14)&127)..=(Int16(32)&127):((-21)|1))], ((UInt8(Int8(-100))&127)..(UInt8(120)&127):((76|1))), Int8(102)) is Option<Float32>);
            (Float32(-21.0), var1224, Float32(77.0));
            var1267;
            let var1272 : (UInt64, Range<UInt16>, Int64, Unit, Int32) = (UInt64(59), ((UInt16(UInt8(UInt8(37)))&127)..=(UInt16(UInt8(188))&127):(((-33)|1))), Int64(Int32(36)), (), Int32(-67));
            var1272[3]
        } else if (if (namedParam291) { // block id: 1291
            var1294 |= var1294;
            var1267;
            var var1303 : Int16 = Int16(UInt8(Int8(75)));
            (false, (((-48)&127)..(70&127):((-68)|1)), ((UInt64(199)&127)..(UInt64(176)&127):(44|1)), var1303, var1308)
        } else if (false) { // block id: 1311
            var1314 >>= ((Int32(56)) & 7);
            if (var310) { [((Int16(20)&127)..(Int16(78)&127):((-33)|1)), ((Int16(102)&127)..(Int16(-22)&127):((-86)|1)), ((Int16(-9)&127)..=(Int16(37)&127):(74|1)), ((Int16(-126)&127)..=(Int16(-7)&127):(61|1)), ((Int16(74)&127)..=(Int16(29)&127):(81|1)), ((Int16(-29)&127)..(Int16(-27)&127):((-79)|1)), ((Int16(46)&127)..(Int16(-101)&127):((-51)|1)), ((Int16(-10)&127)..=(Int16(-65)&127):(101|1)), ((Int16(-35)&127)..(Int16(-24)&127):((-55)|1)), ((Int16(-85)&127)..=(Int16(3)&127):((-64)|1))] } else { var1324 } ;
            var var1330 : Bool = (Enum13.defaultValue is Enum13);
            let var1334 : Range<Int64> = ((64&127)..(8&127):(32|1));
            if (true) { (var1330, var1334, ((UInt64(62)&127)..(UInt64(176)&127):((var1340|1))), var940, "$)csGT P!}") } else { var1345 } 
        } else { // block id: 1354
            var310 &&= var310;
            if (false) { var1361 } else { var1361 } 
        }[0]) { // block id: 1378
            var var1702 : (UInt32) -> UInt32 = func1380;
            UInt32(21)|>var1702;
            var1294;
            ()
        };
        Float32(23.0)
    }

}

public class Class263<T0, T1, T2> <: Interface266 & Interface270<Array<Int8>> {
    public init() { // block id: 265

    }
;
    static let var274 : Rune = r'b';
    public static var var709 : Interface267 = Class263<Option<Range<Int32>>, Bool, UInt32>();
    private static let var741 : Int64 = 109;
    public init(param425 : Range<Int32>, namedParam426 ! : Enum13, optionalParam427 ! : Range<Int16> = ((Int16(Int16(-87))&127)..(Int16(-4)&127):((45|1)))) { // block id: 433
        let var438 : (String, Int16, Array<(Float32, Bool, Float32)>, Bool, Interface267) = ("<M.\"_D1yVF", Int16(UInt8(Int8(Int8(104)))), [(Float32(66.0), (Option<Bool>.None is Int32), Float32(-113.0)), (Float32(Float32(87.0)), (((Int8(66)&127)..=(Int8(29)&127):(((-3)|1))) is (Float32, Bool, Float32)), Float32(-104.0)), (Float32(110.0), (Class263<Option<Range<Int32>>, Bool, UInt32>() is Array<(Float32, Bool, Float32)>), Float32(60.0)), (Float32(37.0), (("Tr)E_L =FL", Int16(-5), [(Float32(-50.0), false, Float32(11.0)), (Float32(71.0), true, Float32(-20.0)), (Float32(55.0), false, Float32(-118.0)), (Float32(-70.0), true, Float32(9.0)), (Float32(-87.0), false, Float32(26.0)), (Float32(59.0), false, Float32(-65.0)), (Float32(29.0), false, Float32(81.0)), (Float32(-100.0), true, Float32(126.0)), (Float32(-107.0), false, Float32(-118.0)), (Float32(72.0), true, Float32(-87.0))], true, Class263<Option<Range<Int32>>, Bool, UInt32>()) is Interface269), Float32(104.0)), (Float32(11.0), false, Float32(69.0)), (Float32(Float32(-11.0)), false, Float32(-101.0)), (Float32(109.0), (((Int32(-14)&127)..(Int32(-54)&127):((52|1))) is Int64), Float32(Float32(-61.0))), (Float32(-6.0), (Int32(41) is Int8), Float32(Float32(-111.0))), (Float32(66.0), (() is Int16), Float32(Float32(-48.0))), (Float32(-26.0), (UInt32(229) is Range<Int16>), Float32(-55.0))], true, Class263<Option<Range<Int32>>, Bool, UInt32>());
        let var733 : Int16 = Int16(UInt8(4));
        match (try { // block id: 436
                var438
            } finally { // block id: 552
                Class263<Option<Range<Int32>>, Bool, UInt32>();
                ("eYJO0KBEKf", Int16(50), var558, var310, var709)
            }) {
            case caseVar713 => 
                var36;
                ();
                ()
            
            case (_ : String,_,caseVar720,_ : String,_ : Range<UInt16>) => 
                ((var724&127)..=(UInt32(253)&127):((12|1)));
                var733;
                ()
            
            case _ => 
                var36;
                var741;
                var310 ||= false
            
        }
    }
;
    public init(param868 : Float64, namedParam869 ! : UInt16, namedParam870 ! : Range<Int8>, optionalParam871 ! : String = """
()W)..(`
)+X#\\v
""") { // block id: 873
        this.func877(namedParam878 : (Class263<Option<Range<Int32>>, Bool, UInt32>(((Int32(50)&127)..(Int32(37)&127):(101|1)), namedParam426 : var16, optionalParam427 : ((Int16(-77)&127)..=(Int16(18)&127):(91|1)))|>func881));
        var310;
        let var899 : Int32 = Int32(Int8(Int8(19)));
        var loopTimeVar911 : Int64 = 0;
        while ((try { // block id: 896
            var899 << ((Int32(116)) & 7);
            false
        } catch (_) { // block id: 905
            var310
        } finally { // block id: 907
            var310
        }) && loopTimeVar911 < 100 ) {
            loopTimeVar911++;

        }
    }
;
    public var var1131 : (UInt32, Range<UInt32>, Range<Int16>, Array<Range<Int16>>, Range<UInt8>, Int8) = (UInt32(2), ((UInt32(6)&127)..(UInt32(101)&127):((-2)|1)), ((Int16(-73)&127)..(Int16(-123)&127):(86|1)), [((Int16(-48)&127)..=(Int16(-71)&127):((-7)|1)), ((Int16(-36)&127)..(Int16(-64)&127):((37|1))), ((Int16(-44)&127)..=(Int16(121)&127):((-82)|1)), ((Int16(-57)&127)..=(Int16(89)&127):(((-3)|1))), ((Int16(21)&127)..=(Int16(-16)&127):((-30)|1)), ((Int16(114)&127)..(Int16(54)&127):(((-92)|1))), ((Int16(111)&127)..(Int16(-127)&127):((47|1))), ((Int16(24)&127)..=(Int16(58)&127):((32|1))), ((Int16(-107)&127)..(Int16(-42)&127):(((-65)|1))), ((Int16(-47)&127)..=(Int16(-123)&127):((104|1)))], ((UInt8(209)&127)..=(UInt8(6)&127):((-31)|1)), Int8(82))
}



func func299(param300 : Interface266) : Range<Int16> { // block id: 301
    var var326 : Option<Bool> = (Int16(68) as Bool);
    let var377 : Int16 = Int16(108);
    let var387 : Range<Int16> = ((Int16(Int8(66))&127)..(Int16(Int8(Int8(-69)))&127):((Int64(Int64(Int8(Int8(-45))))|1)));
    if ((if (var310) { var313 } else { Option<Bool>.None }  ?? (var326 ?? var310))) { // block id: 330
        var var367 : Interface267 = Class263<Option<Range<Int32>>, Bool, UInt32>();
        ("V=wxtvSdq%", Int16(-63), [(Float32(-74.0), var310, var59), var89, var89, var89, (var59, true, var59), (Float32(-85.0), var310, var59), (var59, false, Float32(-40.0)), (var59, var310, Float32(96.0)), var89, (var59, var310, Float32(60.0))], var310, var367)[4];
        try { // block id: 371
            ();
            if (true) { ((var377&127)..=(Int16(-12)&127):((14|1))) } else { ((Int16(-27)&127)..=(Int16(71)&127):(74|1)) } 
        } finally { // block id: 382
            if (false) { ((Int16(-7)&127)..=(Int16(-67)&127):(66|1)) } else { var387 } 
        };
        var36
    };
    var var421 : Bool = (Class263<Option<Range<Int32>>, Bool, UInt32>(((Int32(-86)&127)..=(Int32(-64)&127):((59|1))), namedParam426 : Enum13.defaultValue) is Enum13);
    var var778 : Int64 = (-41);
    try { // block id: 402
        var var405 : String = "`XFth80^dl";
        var var772 : UInt8 = UInt8(189);
        (var405, Int16(67), [(var59, var310, Float32(-105.0)), (var59, var310, Float32(-76.0)), var89, (Float32(-43.0), var421, var59), (var59, var310, Float32(93.0)), (var59, var421, Float32(38.0)), (Float32(75.0), var310, var59), var89, var89, var89], var310, Class263<Option<Range<Int32>>, Bool, UInt32>(((Int32(-49)&127)..(Int32(-79)&127):((-108)|1)), namedParam426 : Enum13.enumValue201(var772), optionalParam427 : ((Int16(22)&127)..=(Int16(32)&127):((var778|1)))));
        var var783 : Array<Range<Int16>> = Array<Range<Int16>>(10){ i => ((Int16(-98)&127)..=(Int16(78)&127):(37|1)) };
        if (true) { var783 } else { [((Int16(-23)&127)..(Int16(-57)&127):(47|1)), ((Int16(-22)&127)..=(Int16(75)&127):(78|1)), ((Int16(88)&127)..=(Int16(-92)&127):(48|1)), ((Int16(3)&127)..=(Int16(-7)&127):(96|1)), ((Int16(-50)&127)..=(Int16(-95)&127):((-74)|1)), ((Int16(-52)&127)..=(Int16(47)&127):((-123)|1)), ((Int16(-94)&127)..(Int16(37)&127):(36|1)), ((Int16(77)&127)..=(Int16(116)&127):((-94)|1)), ((Int16(-31)&127)..(Int16(-11)&127):((-70)|1)), ((Int16(48)&127)..=(Int16(100)&127):(52|1))] } 
    } finally { // block id: 826
        Option<Bool>.Some(var421);
        ();
        [((Int16(22)&127)..=(Int16(-23)&127):((-79)|1)), var387, ((var377&127)..(Int16(82)&127):((var778|1))), var387, var387, ((Int16(-61)&127)..(Int16(57)&127):(78|1)), ((Int16(20)&127)..(Int16(-16)&127):(55|1)), ((Int16(70)&127)..(Int16(-47)&127):((-126)|1)), ((var377&127)..(Int16(73)&127):((var778|1))), ((Int16(82)&127)..=(Int16(46)&127):((-18)|1))]
    }[0]
}

public func func881(param882 : Interface268) : UInt64 { // block id: 883
    var885;
    UInt64(246)
}

public enum Enum1197 {
    defaultValue
}

public func func1380(param1381 : UInt32) : UInt32 { // block id: 1382
    func func1385(optionalParam1386 ! : UInt8 = UInt8(171)) : Class263<Option<Range<Int32>>, Bool, UInt32> { // block id: 1388
        var var1472 : Int64 = 35;
        Class263<Option<Range<Int32>>, Bool, UInt32>((var1394[1]&127)..(Int32(-111)&127):(try { // block id: 1457
            91
        } catch (e: Exception) { // block id: 1459
            var var1462 : Int64 = Int64(Int32(UInt16(Int8(102))));
            var1462 / ((var1462) | 1)
        } finally { // block id: 1468
            "Pb8~=+i4Ly";
            var1472 | (-6)
        }|1), namedParam426 : var16, optionalParam427 : func299((var1483 ?? Class263<Option<Range<Int32>>, Bool, UInt32>())))
    }
;
    let var1510 : Range<UInt32> = ((UInt32(126)&127)..=(UInt32(74)&127):((-114)|1));
    var var1525 : Range<Int16> = ((Int16(UInt16(23))&127)..(Int16(Int8(-65))&127):((Int64(Int32(UInt16(Int16(-110))))|1)));
    var var1574 : UInt32 = UInt32(Int8(116));
    var var1590 : UInt64 = UInt64(Int32(Int16(-65)));
    func1385(optionalParam1386 : match (Class263<Option<Range<Int32>>, Bool, UInt32>(((Int32(-14)&127)..(Int32(71)&127):((-109)|1)), namedParam426 : Enum13.enumValue201(var1294), optionalParam427 : ((Int16(94)&127)..(var940&127):((var1496|1))))) {
        case _ : Int8 => 
            let var1559 : Range<UInt8> = ((UInt8(173)&127)..=(UInt8(39)&127):((-84)|1));
            if (var310) { (UInt32(176), var1510, ((var940&127)..=(var940&127):((var1496|1))), [((Int16(-9)&127)..=(Int16(-78)&127):((-81)|1)), ((Int16(98)&127)..(Int16(-63)&127):((-21)|1)), ((Int16(-55)&127)..=(Int16(-111)&127):((-124)|1)), ((Int16(125)&127)..(Int16(12)&127):((-64)|1)), ((Int16(30)&127)..=(Int16(-18)&127):((-33)|1)), ((Int16(45)&127)..=(Int16(-12)&127):((-76)|1)), ((Int16(104)&127)..=(Int16(0)&127):((-125)|1)), ((Int16(27)&127)..=(Int16(125)&127):((-46)|1)), ((Int16(-20)&127)..=(Int16(22)&127):(44|1)), ((Int16(103)&127)..(Int16(-60)&127):(99|1))], ((UInt8(80)&127)..(UInt8(209)&127):((-71)|1)), var1519) } else { (UInt32(127), ((UInt32(155)&127)..=(UInt32(132)&127):(72|1)), var1525, [((Int16(-105)&127)..(Int16(-118)&127):((-85)|1)), ((Int16(-86)&127)..=(Int16(72)&127):((var1496|1))), var1525, ((var940&127)..=(Int16(38)&127):((var1496|1))), ((Int16(23)&127)..(Int16(-101)&127):((var1496|1))), var1525, ((Int16(81)&127)..(Int16(20)&127):((-25)|1)), var1525, var1525, ((Int16(76)&127)..=(Int16(-6)&127):(((-37)|1)))], var1559, Int8(25)) } ;
            if (true) { var1525 } else { var1525 } ;
            UInt8(110)
        
        case caseVar1569 => 
            var724 %= ((var1574) | 1);
            var var1579 : Int64 = (-97);
            var1579 ^= var1579;
            -UInt8(250)
        
        case caseVar1586 => 
            var1590 ^= var1590;
            if (true) { Option<Float32>.Some(Float32(97.0)) } else { var56 } ;
            var1601
        
        case _ => 
            var1294
        
    }).func877(namedParam878 : UInt64(var1519));
    let var1610 : Range<Int32> = ((Int32(51)&127)..=(Int32(51)&127):((-61)|1));
    var1610;
    let var1670 : Int32 = Int32(-11);
    try { // block id: 1614
        Int8(67) & Int8(64);
        var1619;
        UInt32(226)
    } catch (e: Exception) { // block id: 1622
        var1525;
        UInt32(210)
    } | if (var1629[7]) { // block id: 1657
        UInt32(145)
    } else if (if (true) { // block id: 1661
        ();
        var940 > var940
    } else { // block id: 1666
        Class263<Option<Range<Int32>>, Bool, UInt32>(((var1670&127)..(Int32(-107)&127):(((-79)|1))), namedParam426 : Enum13.defaultValue, optionalParam427 : ((var940&127)..(Int16(-59)&127):((var1496|1))));
        false
    }) { // block id: 1680
        let var1687 : Enum13 = Enum13.enumValue201(UInt8(Int8(Int8(-21))));
        if (false) { Class263<Option<Range<Int32>>, Bool, UInt32>() } else { Class263<Option<Range<Int32>>, Bool, UInt32>(((Int32(-74)&127)..(Int32(-125)&127):((-70)|1)), namedParam426 : var1687, optionalParam427 : ((Int16(94)&127)..(Int16(68)&127):(94|1))) } ;
        param1381
    } else { // block id: 1694
        var1590 &= UInt64(111);
        UInt32(0) * param1381
    }
}



func func1758(param1759 : Float64) : (Float64, Int64, Int64) { // block id: 1760
    param1759;
    (Float64(Float32(Float32(36.0))), var1496, 86)
}

main(): Int64 {
    try {
        func func67<T0, T1, T2>(optionalParam68 ! : Float64 = 68.0, optionalParam70 ! : UInt16 = UInt16(136), namedParam72 ! : UInt32) : Rune { // block id: 73
            let var97 : Bool = ([(Float32(Float32(4.0)), (((UInt64(160)&127)..=(UInt64(26)&127):((91|1))) is UInt64), Float32(-54.0)), (Float32(-91.0), (false is UInt32), Float32(-63.0)), (Float32(-57.0), false, Float32(11.0)), (Float32(Float32(10.0)), false, Float32(-34.0)), (Float32(-81.0), (() is (Rune) -> Bool), Float32(99.0)), (Float32(Float32(59.0)), (() is Range<Int16>), Float32(Float32(-123.0))), (Float32(Float32(-118.0)), (Enum13.defaultValue is Bool), Float32(-78.0)), (Float32(Float32(-24.0)), (r'p' is Range<Int32>), Float32(Float32(29.0))), (Float32(1.0), false, Float32(Float32(-69.0))), (Float32(Float32(-71.0)), false, Float32(Float32(73.0)))] is Range<Int16>);
            var var172 : Float32 = Float32(Float32(Float32(Float32(72.0))));
            let var191 : Array<(Float32, Bool, Float32)> = [(Float32(6.0), false, Float32(-16.0)), (Float32(56.0), (Enum13.enumValue201(UInt8(184)) is UInt16), Float32(-72.0)), (Float32(Float32(Float32(-98.0))), false, Float32(Float32(Float32(-112.0)))), (Float32(-60.0), true, Float32(58.0)), (Float32(-100.0), (((UInt16(208)&127)..=(UInt16(197)&127):((-41)|1)) is Bool), Float32(-20.0)), (Float32(-118.0), (25.0 is Range<Int16>), Float32(33.0)), (Float32(Float32(Float32(-118.0))), (Int8(89) is Range<Int16>), Float32(Float32(Float32(100.0)))), (Float32(Float32(Float32(-49.0))), true, Float32(Float32(96.0))), (Float32(83.0), true, Float32(-76.0)), (Float32(Float32(Float32(-107.0))), (Int32(Int16(97)) is Range<UInt16>), Float32(-25.0))];
            match ([var89, (var59, var97, Float32(-112.0)), var89, var89, var89, var89, (Float32(36.0), var97, var59), var89, var89, (var172, var97, Float32(-92.0))]) {
                case caseVar181 => 
                    caseVar181
                
                case caseVar186 : Range<Int8> => 
                    var36;
                    var36;
                    var191
                
                case _ => 
                    var36;
                    ();
                    var191
                
            }[5][0];
            Class263<Option<Range<Int32>>, Bool, UInt32>.var274
        }
;
        func func6(optionalParam7 ! : Int8 = Int8(-116), namedParam9 ! : Int64, namedParam10 ! : Int8) : Int64 { // block id: 11
            match (var16) {
                case defaultValue => 
                    var var23 : UInt8 = UInt8(187);
                    var23 = UInt8(237);
                    ();
                    var var29 : Float64 = 55.0;
                    var29 *= var29
                
                case defaultValue => 
                    var36
                
                case _ => 
                    namedParam9;
                    ()
                
            };
            var loopTimeVar279 : Int64 = 0;
            do {
                loopTimeVar279++;

            } while (((func67<UInt64, Rune, UInt32>(namedParam72 : UInt32(190))|>{ lambdaParameter63 : Rune => false })) && loopTimeVar279 < 100 ) ;
            var284.func287()[1]
        }
;
        func6(optionalParam7 : [Int8(43), Int8(24), Int8(68), Int8(108), Int8(-20), Int8(84), Int8(-103), Int8(-82), Int8(-99), Int8(-84)][2], namedParam9 : func6(namedParam9 : var1496, namedParam10 : Int8(-102)), namedParam10 : [Int8(115), Int8(-122), Int8(95), Int8(-125), Int8(26), Int8(-67), Int8(-111), Int8(-2), Int8(-42), Int8(77)][2])
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var724*var724), 64)
        crccheck.updateBuffer(UInt64(var916*var916), 64)
        crccheck.updateBuffer(UInt64(var940*var940), 64)
        crccheck.updateBuffer(UInt64(var1294*var1294), 64)
        crccheck.updateBuffer(UInt64(var1496*var1496), 64)
        crccheck.updateBuffer(UInt64(var1519*var1519), 64)
        crccheck.updateBuffer(UInt64(var1601*var1601), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0, T1, T2> Class263<T0, T1, T2> {

}

extend Enum1197 {

}
// ASSERT: scan sema_unreachable_pattern
// ASSERT: scan chir_typecast_overflow
// ASSERT: scan chir_dce_unused_variable
// ASSERT: scan chir_dce_unused_expression
// ASSERT: scan chir_arithmetic_operator_overflow
// ASSERT: scan chir_dce_unused_operator


