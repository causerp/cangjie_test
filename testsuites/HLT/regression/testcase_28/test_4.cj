/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output


let var51 : Bool = (UInt8(41) is Range<Int64>)
var var58 : UInt16 = UInt16(UInt16(Int8(-49)))
public let var218 : Array<UInt32> = Array<UInt32>(10){ i => UInt32(Int8(12)) }
var var248 : Int64 = Int64(UInt16(Int8(Int8(-18))))
public var var274 : Range<Int32> = (Int32(-41)&127..Int32(75)&127:(-105)|1)
let var277 : Unit = ()
public let var282 : Interface97 = Class92()
let var318 : ?Bool = (Float32(32.0) as Bool)
public let var386 : Range<Int64> = (18&127..=42&127:(-26)|1)
let var418 : Class92 = Class92()
var var432 : (Float64, Unit) = (75.0, ())
public var var438 : Int8 = Int8(-85)
public let var499 : Bool = (UInt16(Int16(74)) is (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune))
public var var514 : UInt32 = UInt32(105)
var var524 : UInt8 = UInt8(UInt8(Int8(73)))
var var535 : Range<Int8> = (Int8(Int8(56))&127..=Int8(107)&127:(Int64(Int16(18))|1))
public var var553 : Rune = 'B'
public let var612 : Array<Range<Int16>> = [(Int16(-71)&127..=Int16(28)&127:82|1), (Int16(-89)&127..=Int16(-101)&127:42|1), (Int16(-2)&127..=Int16(-102)&127:12|1), (Int16(-51)&127..Int16(-34)&127:(-46)|1), (Int16(78)&127..=Int16(115)&127:(-48)|1), (Int16(40)&127..Int16(-124)&127:(-53)|1), (Int16(-51)&127..Int16(71)&127:3|1), (Int16(-21)&127..Int16(30)&127:25|1), (Int16(-110)&127..Int16(35)&127:(-96)|1), (Int16(-118)&127..=Int16(32)&127:(-60)|1)]
var var656 : Class92 = Class92()
var var680 : Enum675 = Enum675.defaultValue
var var699 : Int16 = Int16(Int8(UInt8(UInt8(121))))
public let var756 : Interface96 = Class92()
var var794 : (Rune, Option<Class92>, Array<Bool>, Float32, Range<Int64>, UInt32) = ('V', Option<Class92>.None, [false, true, false, false, false, true, true, false, false, true], Float32(Float32(Float32(19.0))), ((-51)&127..=43&127:((-25)|1)), UInt32(UInt32(142)))
let var810 : ?Bool = Option<Bool>.None
public var var817 : Int16 = Int16(Int16(77))
public var var824 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String) = (false, UInt32(Int16(96)), (UInt8(189)&127..=UInt8(Int8(125))&127:(Int64(UInt8(Int8(-74)))|1)), Option<Bool>.None, ###"i4Y(n\"<&<,"###)
public var var881 : Bool = true
let var999 : Float32 = Float32(Float32(-110.0))
var var1017 : ??Unit = Option<Option<Unit>>.None
let var1022 : ?Unit = (UInt64(73) as Unit)
let var1046 : (Range<Int64>, Interface95) = ((Int64(UInt16(Int8(53)))&127..Int64(Int8(-72))&127:(47|1)), Class92())
public let var1142 : String = "5RzZ,YsrHC"
public let var1235 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8) = (Int32(51), Int32(87), "<\\ 7${var1142}gEpi5${var1142}B${var1142}", UInt16(225), (UInt64(241)&127..=UInt64(191)&127:115|1), UInt8(Int8(Int8(-34))))
var var1313 : Array<Bool> = Array<Bool>(10){ i => ([Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92()] is (Range<UInt32>, Option<Bool>, Int64, Range<UInt8>) -> Bool) }
var var1838 : (Range<Int16>, UInt16, Rune) = ((Int16(-87)&127..Int16(-3)&127:60|1), UInt16(48), '3')
var var1931 : Range<UInt8> = (UInt8(57)&127..UInt8(112)&127:(-119)|1)
var var2056 : ???Unit = ([true, true, true, true, true, false, false, false, false, true] as Option<Option<Unit>>)
public var var2398 : Bool = false
var var2410 : Range<Int16> = (Int16(-26)&127..Int16(33)&127:(-128)|1)
let var2524 : Range<Int16> = (Int16(-48)&127..Int16(-115)&127:18|1)
public var var2596 : ??Bool = Option<Option<Bool>>.None
let var2599 : ?Bool = (Int8(Int8(Int8(121))) as Bool)
public var var2626 : UInt64 = UInt64(66)
public let var2751 : ?Interface96 = Option<Interface96>.None
var var2764 : ?Interface96 = ((-92.0) as Interface96)
public let var2861 : Option<Range<UInt16>> = (Float64(Float32(-39.0)) as Range<UInt16>)
public var var2874 : ?Enum675 = ((Int32(Int16(75)), Int32(-71), "$>)R|@${var1142}~${var1142}B*i", UInt16(Int16(Int16(19))), (UInt64(60)&127..=UInt64(254)&127:(123|1)), UInt8(UInt8(Int8(-34)))) as Enum675)
var var3216 : Bool = (((Int16(125)&127..=Int16(-66)&127:0|1) as Option<Bool>) is ((Int32, Int32, String, UInt16, Range<UInt64>, UInt8), Range<UInt16>, ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool>) -> Unit)
public var var3343 : Int32 = Int32(6)
let var3349 : Float64 = 122.0
public let var3435 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String) = (((Int8(Int8(27))&127..Int8(11)&127:(27|1)) is (UInt64) -> String), UInt32(Int8(UInt8(Int8(107)))), (UInt8(132)&127..UInt8(UInt8(Int8(-94)))&127:(Int64(UInt32(121))|1)), Option<Bool>.None, "WtHWsSe*=${var1142}|${var1142}")
let var3505 : Range<UInt64> = (UInt64(46)&127..=UInt64(237)&127:((-124)|1))
let var3731 : ??Interface97 = ((UInt16(241)&127..=UInt16(Int16(-97))&127:((-108)|1)) as Option<Interface97>)
var var3740 : ?Interface97 = ((Int32(39)&127..Int32(-78)&127:(11|1)) as Interface97)
let var3830 : Int64 = (-87)
let var3911 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var3925 : Range<Int8> = (Int8(88)&127..Int8(0)&127:(-118)|1)
public var var4098 : Bool = ((###"P$[${var1142}z2>${var1142}Or./"###, ((Int16(-20)&127..Int16(86)&127:(-76)|1), UInt16(166), '5'), UInt8(UInt8(52)), UInt8(20), '9') is (Array<UInt32>) -> Option<Range<UInt16>>)
public var var4135 : ?Array<Bool> = ((-91.0) as Array<Bool>)
public let var4141 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("ar${var1142}ZG6&${var1142}J*${var1142}Y!${var1142}", ((UInt32(165)&127..=UInt32(3)&127:(42|1)) is Option<Bool>), Int8(Int8(UInt8(248))), (Int16(-31)&127..=Int16(78)&127:126|1), UInt8(Int8(45)), Int16(-22), (Float32(Float32(-115.0)), ((-38)&127..(-87)&127:(-1)|1), UInt32(UInt8(251)), Float32(26.0), [true, ([(), (), (), (), (), (), (), (), (), ()] is Option<Array<Bool>>), ([true, false, true, false, false, true, false, true, false, false] is Int8), (('n', Option<Class92>.None, [true, true, true, true, true, true, false, true, true, false], Float32(67.0), (30&127..50&127:((-93)|1)), UInt32(1)) is Option<Unit>), ([(Int8(99)&127..Int8(78)&127:((-30)|1)), (Int8(14)&127..Int8(17)&127:(-24)|1), (Int8(65)&127..=Int8(63)&127:47|1), (Int8(-128)&127..=Int8(-124)&127:((-63)|1)), (Int8(30)&127..=Int8(-85)&127:((-4)|1)), (Int8(3)&127..Int8(71)&127:(-38)|1), (Int8(93)&127..=Int8(-74)&127:(18|1)), (Int8(-128)&127..=Int8(76)&127:63|1), (Int8(105)&127..=Int8(120)&127:(-17)|1), (Int8(77)&127..=Int8(8)&127:(-23)|1)] is (Interface96) -> Interface97), ((UInt64(141)&127..UInt64(230)&127:((-44)|1)) is (Interface97, Bool, Class92) -> Unit), true, (Int32(88) is Int32), true, true]), (Int64(Int8(UInt8(175)))&127..9&127:(52|1)))
var var4320 : Interface95 = Class92()
var var4351 : ?Array<Class92> = Option<Array<Class92>>.None
public interface Interface97 {
    func func407(namedParam408 ! : Range<UInt32>, namedParam409 ! : Option<Bool>, namedParam410 ! : Int64, namedParam411 ! : Range<UInt8>) : Bool { // block id: 412
        var loopTimeVar424 : Int64 = 0;
        while ((false) && loopTimeVar424 < 100 ) {
            loopTimeVar424++;
            var418.var421
        };
        if (try { // block id: 427
            var51
        } catch (_) { // block id: 429
            var277;
            var432;
            var438 >= var438
        } finally { // block id: 441
            var248 += namedParam410;
            false
        }) { // block id: 446
            var var462 : UInt8 = UInt8(8);
            if (false) { // block id: 449
                if (true) { ((-9)&127..113&127:((-63)|1)) } else { var386 } ;
                Int8(-81) % ((var438) | 1);
                var462 &= UInt8(166)
            };
            var loopTimeVar486 : Int64 = 0;
            while ((true) && loopTimeVar486 < 100 ) {
                loopTimeVar486++;
                (Float32(-33.0), var386, UInt32(6), Float32(58.0), [true, true, false, var51, true, false, false, var51, var51, var51]);
                ()
            };
            ((false, UInt32(157), (UInt8(40)&127..=UInt8(69)&127:94|1), Option<Bool>.None, """
8:'n0
Dkjx]
""") is Option<Bool>)
        } else { // block id: 494
            [true, var499, var51, false, var51, false, true, false, var51, false][4]
        }
    }
;
    func func2605(param2606 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8), namedParam2607 ! : Range<UInt16>, namedParam2608 ! : ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool>) : Unit { // block id: 2611
        Option<Enum675>.None;
        var var2622 : Unit = ();
        var var2638 : Bool = (Option<Unit>.None is (Int64, Int64, Unit, Int64) -> Unit);
        var loopTimeVar2643 : Range<UInt64> = (UInt64(UInt16(34))&127..=UInt64(Int16(17))&127:(Int64(UInt8(208))|1));
        var loopTimeVar2711 : Int64 = 0;
        var loopTimeVar2727 : Int64 = 0;
        [try (resource = Class92()) { // block id: 2617
            var535;
            var277
        } catch (_) { // block id: 2620
            var2622;
            var2626 **= (UInt64(100) & 3)
        } finally { // block id: 2630
            var881 &&= false;
            ();
            var2622
        }, for (i in loopTimeVar2643 where var2638) {
            123.0
        }, if (var881) { // block id: 2653
            var58 >>= ((UInt16(171)) & 7);
            var1022;
            var2626 >>= ((var2626) & 7)
        }, var277, do {
            loopTimeVar2711++;
            var var2668 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("= P!')oKk<", false, Int8(-107), (Int16(-38)&127..Int16(-85)&127:105|1), UInt8(133), Int16(Int16(-24)), (Float32(-26.0), ((-44)&127..=101&127:(-40)|1), UInt32(148), Float32(Float32(-102.0)), [false, ((Int32(-11), Int32(19), ###"V)a:*Fzj)Q"###, UInt16(111), (UInt64(219)&127..UInt64(109)&127:((-65)|1)), UInt8(217)) is Array<UInt64>), (Option<Unit>.Some(()) is Array<Range<Int8>>), false, true, (UInt64(127) is () -> Rune), true, ([false, false, false, false, true, true, false, true, false, true] is Array<Range<Int8>>), true, true]), ((-3)&127..=(-115)&127:87|1));
            if (var51) { var2668 } else { var2668 } 
        } while ((var2638) && loopTimeVar2711 < 100 ) , (Option<Unit>.Some(()) ?? var277), (Option<Unit>.None ?? var2622), while ((var51) && loopTimeVar2727 < 100 ) {
            loopTimeVar2727++;

        }, (Option<Unit>.None ?? ()), try (resource = Class92()) { // block id: 2732

        } finally { // block id: 2733
            UInt8(91) >> ((var524) & 7);
            var881 &&= var2398
        }][9]
    }

}

public interface Interface96 <: Interface97 {
    func func139() : Rune { // block id: 140
        let var146 : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>) = (Float32(Float32(Float32(-73.0))), (87&127..=(-53)&127:(-87)|1), UInt32(UInt16(Int8(-73))), Float32(Float32(-26.0)), [((Int16(34)&127..=Int16(126)&127:(-49)|1) is Range<Int16>), (Int64(Int32(91)) is Range<Int32>), true, true, ((Int16(109)&127..Int16(-50)&127:12|1) is Range<UInt64>), true, true, true, false, (Int64(Int32(-60)) is Range<UInt32>)]);
        let var182 : String = "|m4\\=`L?KN";
        var var185 : (Range<Int16>, UInt16, Rune) = ((Int16(Int8(-47))&127..=Int16(Int16(Int16(70)))&127:(Int64(Int32(UInt8(180)))|1)), UInt16(244), 'U');
        let var199 : UInt8 = UInt8(Int8(60));
        if (var146[4][2]) { (var182, var185, var199, var199, 'b')[1][2] } else { 'q' } 
    }

}

public interface Interface95 <: Interface96 & Interface97 {
    func func407(namedParam408 ! : Range<UInt32>, namedParam409 ! : Option<Bool>, namedParam410 ! : Int64, namedParam411 ! : Range<UInt8>) : Bool { // block id: 412
        var loopTimeVar424 : Int64 = 0;
        while ((false) && loopTimeVar424 < 100 ) {
            loopTimeVar424++;
            var418.var421
        };
        match {
            case try { // block id: 427
            var51
        } catch (_) { // block id: 429
            var277;
            var432;
            var438 >= var438
        } finally { // block id: 441
            var248 += namedParam410;
            false
        } => 
            var var462 : UInt8 = UInt8(8);
            if (false) { // block id: 449
                if (true) { ((-9)&127..113&127:((-63)|1)) } else { var386 } ;
                Int8(-81) % ((var438) | 1);
                var462 &= UInt8(166)
            };
            var loopTimeVar486 : Int64 = 0;
            while ((true) && loopTimeVar486 < 100 ) {
                loopTimeVar486++;
                (Float32(-33.0), var386, UInt32(6), Float32(58.0), [true, true, false, var51, true, false, false, var51, var51, var51]);
                ()
            };
            ((false, UInt32(157), (UInt8(40)&127..=UInt8(69)&127:94|1), Option<Bool>.None, """
8:'n0
Dkjx]
""") is Option<Bool>)
            case _ => 
            [true, var499, var51, false, var51, false, true, false, var51, false][4]
        }
    }
;
    func func2605(param2606 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8), namedParam2607 ! : Range<UInt16>, namedParam2608 ! : ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool>) : Unit { // block id: 2611
        Option<Enum675>.None;
        var var2622 : Unit = ();
        var var2638 : Bool = (Option<Unit>.None is (Int64, Int64, Unit, Int64) -> Unit);
        var loopTimeVar2643 : Range<UInt64> = (UInt64(UInt16(34))&127..=UInt64(Int16(17))&127:(Int64(UInt8(208))|1));
        var loopTimeVar2711 : Int64 = 0;
        var loopTimeVar2727 : Int64 = 0;
        [try (resource = Class92()) { // block id: 2617
            var535;
            var277
        } catch (_) { // block id: 2620
            var2622;
            var2626 **= (UInt64(100) & 3)
        } finally { // block id: 2630
            var881 &&= false;
            ();
            var2622
        }, for (i in loopTimeVar2643 where var2638) {
            123.0
        }, if (var881) { // block id: 2653
            var58 >>= ((UInt16(171)) & 7);
            var1022;
            var2626 >>= ((var2626) & 7)
        }, var277, do {
            loopTimeVar2711++;
            var var2668 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("= P!')oKk<", false, Int8(-107), (Int16(-38)&127..Int16(-85)&127:105|1), UInt8(133), Int16(Int16(-24)), (Float32(-26.0), ((-44)&127..=101&127:(-40)|1), UInt32(148), Float32(Float32(-102.0)), [false, ((Int32(-11), Int32(19), ###"V)a:*Fzj)Q"###, UInt16(111), (UInt64(219)&127..UInt64(109)&127:((-65)|1)), UInt8(217)) is Array<UInt64>), (Option<Unit>.Some(()) is Array<Range<Int8>>), false, true, (UInt64(127) is () -> Rune), true, ([false, false, false, false, true, true, false, true, false, true] is Array<Range<Int8>>), true, true]), ((-3)&127..=(-115)&127:87|1));
            if (var51) { var2668 } else { var2668 } 
        } while ((var2638) && loopTimeVar2711 < 100 ) , (Option<Unit>.Some(()) ?? var277), (Option<Unit>.None ?? var2622), while ((var51) && loopTimeVar2727 < 100 ) {
            loopTimeVar2727++;

        }, (Option<Unit>.None ?? ()), try (resource = Class92()) { // block id: 2732

        } finally { // block id: 2733
            UInt8(91) >> ((var524) & 7);
            var881 &&= var2398
        }][9]
    }

}

public open class Class92 <: Interface95 & Interface96 & Resource {
    public init() { // block id: 94

    }
;
    public static var var339 : Interface96 = Class92();
    public static var var344 : Float64 = (-41.0);
    public init(namedParam286 ! : Interface97, namedParam287 ! : Range<Int8>) { // block id: 288
        var var294 : Float32 = Float32(Float32(-112.0));
        var var300 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String) = (false, UInt32(UInt8(15)), (UInt8(101)&127..UInt8(UInt8(UInt8(232)))&127:(66|1)), (Int16(UInt16(177)) as Bool), "Mgi4372KIz");
        let var326 : Int16 = Int16(-62);
        var var359 : Bool = ((###"%$VOrsz%r0"###, ((Int16(-112)&127..=Int16(-100)&127:(-59)|1), UInt16(133), 'r'), UInt8(117), UInt8(Int8(89)), 'A') is Interface95);
        let var391 : Array<Bool> = [true, true, true, false, false, true, false, true, false, true];
        match (if ((Float32(-29.0) == var294)) { var300[3] } else { match (var318) {
                case caseVar323 => 
                    var326;
                    var318
                
                case _ => 
                    Option<Bool>.Some(var51)
                
            } } ) {
            case _ => 
                if (var51) { var339 } else { Class92() } ;
                var344 *= 30.0;
                let var348 : ?Bool = Option<Bool>.Some(false);
                var348
            
            case _ : Range<UInt64> => 
                var277;
                if (false) { Option<Bool>.Some(var359) } else { var318 } 
            
            case _ => 
                if (var51) { Class92() } else { var282 } ;
                """
$^i+\"
vzDY-
""";
                var318
            
            case _ => 
                (var294, var386, UInt32(254), var294, var391);
                var318
            
        }
    }
;
    public var var421 : Float64 = 104.0;
    public var var628 : Unit = ();
    private static var var2402 : Int8 = Int8(81);
    public static let var2507 : (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune) = ("""
]6*d9
2MOkv
""", ((Int16(-12)&127..Int16(-24)&127:((-72)|1)), UInt16(134), 't'), UInt8(90), UInt8(102), 'P');
    static var var2536 : Int8 = Int8(53);
    public init(param2389 : Int16, param2390 : Option<Unit>, optionalParam2391 ! : Range<UInt8> = (UInt8(37)&127..UInt8(202)&127:6|1)) { // block id: 2393
        match {
            case match {
            case var2398 => 
            var2402
            case _ => 
            UInt8(29);
            var438
        } <= match ([var2410, var2410, (Int16(4)&127..=param2389&127:((-4)|1)), (Int16(-82)&127..=Int16(-95)&127:(16|1)), var2410, var2410, (var817&127..=var699&127:(26|1)), (Int16(31)&127..=var699&127:((-113)|1)), (Int16(-48)&127..Int16(-24)&127:19|1), (Int16(69)&127..Int16(43)&127:(-29)|1)]) {
            case _ => 
                var2402 | Int8(-128)
            
        } => 
            var loopTimeVar2444 : Range<UInt64> = (UInt64(169)&127..UInt64(44)&127:(55|1));
            for (i in loopTimeVar2444 where false) {
                var58++
            };
            var var2455 : Unit = ();
            let var2480 : Int32 = Int32(66);
            match ((Int16(-17)&127..=Int16(58)&127:121|1)) {
                case _ => 
                    var2455;
                    [var656, this, Class92(), this, this, var418, var656, Class92(), Class92(), this];
                    UInt8(104)
                
                case _ => 
                    var277;
                    UInt8(19)
                
                case caseVar2476 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) => 
                    (var2480&127..=Int32(49)&127:(var248|1));
                    var524
                
                case _ : (Float64, Unit) => 
                    var817;
                    if (false) { var794 } else { var794 } ;
                    UInt8(77)
                
                case _ => 
                    var524;
                    var524++;
                    UInt8(53)
                
            }
            case _ => 
            UInt8(234)
        };
        match (match (if (true) { var2507 } else { ("E2!2*9H}'H", (var2524, UInt16(71), 'p'), var524, UInt8(177), var553) } ) {
                case _ => 
                    var2402 - var2536
                
            }) {
            case _ => 
                var1046;
                var277;
                var553
            
        }
    }
;
    public static var var2904 : Unit = ();
    static let var2983 : Bool = true;
    public init(optionalParam2013 ! : Interface97 = Class92(namedParam286 : Class92(), namedParam287 : (Int8(110)&127..=Int8(-104)&127:(-124)|1)), namedParam2017 ! : Float64) { // block id: 2018
        let var2897 : (Int8) -> Option<Range<UInt16>> = func2064<Range<Int64>>;
        let var2921 : Array<Range<Int8>> = [(Int8(-8)&127..=Int8(-9)&127:(-78)|1), (Int8(-126)&127..=Int8(-33)&127:52|1), (Int8(-92)&127..Int8(55)&127:(-116)|1), (Int8(65)&127..Int8(7)&127:(-115)|1), (Int8(9)&127..=Int8(107)&127:104|1), (Int8(26)&127..Int8(6)&127:(-28)|1), (Int8(-68)&127..=Int8(-106)&127:8|1), (Int8(90)&127..=Int8(-12)&127:121|1), (Int8(28)&127..=Int8(35)&127:(-70)|1), (Int8(51)&127..=Int8(-42)&127:113|1)];
        func func2029(namedParam2030 ! : Array<UInt32>) : Option<Range<UInt16>> { // block id: 2031
            func func2033<T0, T1>(optionalParam2034 ! : ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool> = { lambdaParameter2037 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String) => Option<Bool>.None }, optionalParam2042 ! : Range<Int64> = ((-88)&127..=100&127:(Int64(UInt64(UInt32(98)))|1))) : Option<Range<UInt16>> { // block id: 2049
                (var2056 ?? ((var438 >= Int8(-14)) as Option<Unit>));
                if (var881) { // block id: 2901
                    var277;
                    var2904;
                    -Int8(114)
                } else { // block id: 2908
                    (var58&127..=var58&127:(42|1));
                    '9';
                    var438 ** (var2536 & 3)
                }|>var2897
            }
;
            var var2939 : Int64 = Int64((-41));
            func2033<UInt8, Array<Unit>>(optionalParam2042 : match (if (var2398) { var2921 } else { [(Int8(49)&127..Int8(3)&127:(-11)|1), (Int8(-86)&127..=Int8(52)&127:(-56)|1), var535, (Int8(42)&127..Int8(86)&127:100|1), (Int8(-57)&127..Int8(-87)&127:(-81)|1), var535, (Int8(-123)&127..Int8(65)&127:72|1), (var438&127..Int8(-104)&127:((-7)|1)), (Int8(40)&127..Int8(75)&127:(var2939|1)), (Int8(-85)&127..Int8(57)&127:(-4)|1)] } ) {
                case _ : (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune) => 
                    if (true) { Option<Option<Unit>>.None } else { Option<Option<Unit>>.None } ;
                    var386
                
                case caseVar2953 : Interface96 => 
                    ();
                    var277;
                    if (var51) { ((-85)&127..=15&127:85|1) } else { var386 } 
                
                case _ => 
                    (120&127..var248&127:(var248|1))
                
            })
        }
;
        if ([false, false, false, true, false, true, false, true, false, false][1]) { (func2029(namedParam2030 : var218) ?? if (var499) { (UInt16(142)&127..UInt16(77)&127:(var248|1)) } else { (UInt16(141)&127..UInt16(172)&127:83|1) } ) } else { (var58 ** (UInt16(186) & 3)&127..try { // block id: 2980
            if (var2983) { Class92() } else { Class92() } ;
            var277;
            UInt16(209)
        } catch (e: Exception) { // block id: 2989
            UInt16(173)
        }&127:(Int64(UInt32(53))|1)) } 
    }
;
    protected init(optionalParam1824 ! : Range<Int8> = (Int8(102)&127..Int8(26)&127:(-24)|1), namedParam1826 ! : Int64) { // block id: 1827
        let var1951 : (UInt64) -> String = func13;
        var var1961 : Enum675 = Enum675.defaultValue;
        func1829(namedParam1832 : try { // block id: 1935
            [Enum675.enumValue1938(func13, var999, Class92()), var680, var680, Enum675.enumValue1938(var1951, Float32(32.0), Class92()), Enum675.enumValue1557(true, var514, var756, func978), var1961, var680, var680, Enum675.enumValue1938(var1951, Float32(-110.0), var756), var680]
        } finally { // block id: 1970
            'c';
            let var1978 : Interface95 = Class92();
            ((namedParam1826&127..=(-11)&127:((-40)|1)), var1978);
            let var1981 : Array<Enum675> = [Enum675.enumValue1984("""
*s|ZU
mTF}^
""", (((Int8(3)&127..=Int8(7)&127:(33|1)) is (Rune, Option<Class92>, Array<Bool>, Float32, Range<Int64>, UInt32)), UInt32(201), (UInt8(54)&127..UInt8(241)&127:(16|1)), Option<Bool>.Some(false), """
qyDGU
N|qR2
"""), Option<Array<Class92>>.None, (Option<Bool>.Some(true) as Option<Unit>)), Enum675.enumValue1557(false, UInt32(191), Class92(optionalParam2013 : Class92(namedParam286 : Class92(), namedParam287 : (Int8(-76)&127..=Int8(29)&127:((-44)|1))), namedParam2017 : Float64((-28.0))), func978), Enum675.enumValue1520(func1196), Enum675.enumValue1557(((UInt64(152)&127..=UInt64(6)&127:(-105)|1) is Array<Range<Int16>>), UInt32(Int32(108)), Class92(), func978), Enum675.enumValue3018, Enum675.enumValue1148(UInt32(211), ('P', Option<Class92>.Some(Class92()), [true, false, false, true, false, false, false, true, true, false], Float32(59.0), ((-30)&127..123&127:(69|1)), UInt32(Int32(-61))), Float32(Float32(Float32(60.0))), ('M', (Option<Option<Unit>>.Some(Option<Unit>.None) as Class92), [false, false, true, false, true, true, true, true, false, true], Float32(Float32(-12.0)), (92&127..120&127:((-33)|1)), UInt32(Int32(-57)))), Enum675.defaultValue, Enum675.enumValue3072(((Int16(115)&127..Int16(-65)&127:58|1), UInt16(187), 'L'), ((Option<Interface96>.Some(Class92(namedParam2017 : 120.0)) as Bool) as Unit), UInt32(248)), Enum675.enumValue1984("|1TJZLzsy]", (((Float32(-83.0), ((-41)&127..=101&127:(-114)|1), UInt32(133), Float32(26.0), [false, false, false, true, true, false, false, true, true, false]) is ((Int32, Int32, String, UInt16, Range<UInt64>, UInt8), Range<UInt16>, ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool>) -> Unit), UInt32(Int8(-93)), (UInt8(129)&127..UInt8(62)&127:110|1), ((Int16(-121)&127..=Int16(-51)&127:(82|1)) as Bool), "D-cu.NoFyd"), Option<Array<Class92>>.Some([Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92()]), (((UInt64(147)&127..UInt64(112)&127:81|1), (Int16(-23)&127..=Int16(60)&127:(-46)|1), (Float32(100.0), (97&127..=(-24)&127:((-9)|1)), UInt32(178), Float32(-37.0), [true, true, true, false, false, true, false, false, false, true]), Option<Option<Unit>>.None, (-91)) as Option<Unit>)), Enum675.enumValue1557((() is (Range<Int16>, UInt16, Rune)), UInt32(120), Class92(optionalParam2013 : Class92(), namedParam2017 : Float64(Float32(-37.0))), func978)];
            var1981
        });
        let var3180 : Range<UInt64> = (UInt64(33)&127..UInt64(214)&127:113|1);
        var var3184 : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>) = (Float32(-13.0), (18&127..=(-128)&127:(Int64(Int16(-67))|1)), UInt32(69), Float32(123.0), [true, true, true, true, true, true, true, true, true, true]);
        ((try { // block id: 3168
            if (true) { var282 } else { Class92(namedParam286 : Class92(), namedParam287 : (Int8(-113)&127..=Int8(97)&127:(-88)|1)) } 
        } finally { // block id: 3175
            var282
        } as Unit) ?? match ((var3180, (Int16(56)&127..=Int16(-87)&127:(-113)|1), var3184, Option<Option<Unit>>.Some(var1022), namedParam1826)) {
            case _ => 
                ();
                (UInt32(175)&127..UInt32(138)&127:70|1);
                var2904
            
            case (_,caseVar3206 : Range<UInt64>,(_ : Float32,caseVar3207 : (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune),caseVar3208 : Array<Enum675>,_,_ : Array<Enum675>),caseVar3209,_) => 
                var277
            
            case _ => 
                if (var3216) { var274 } else { var274 } ;
                var277
            
        })
    }
;
    public static let var3239 : (Float64, Unit) = (35.0, ());
    public init(optionalParam1731 ! : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("4rj^#CEAu6", true, Int8(UInt8(UInt8(Int8(-99)))), (Int16(102)&127..=Int16(UInt16(UInt16(75)))&127:((-36)|1)), UInt8(Int8(24)), Int16(76), (Float32(Float32(54.0)), ((-41)&127..(-27)&127:(-20)|1), UInt32(UInt8(124)), Float32(-87.0), [true, true, (Option<Bool>.Some(false) is Enum675), (Class92() is Range<Int8>), (true is Range<Int32>), ((Int32(-21)&127..Int32(15)&127:(-75)|1) is (Range<UInt32>, Option<Bool>, Int64, Range<UInt8>) -> Bool), false, ((UInt8(40)&127..UInt8(46)&127:(106|1)) is Float64), ([(Int16(-10)&127..=Int16(-77)&127:(37|1)), (Int16(-86)&127..Int16(55)&127:((-52)|1)), (Int16(43)&127..=Int16(-116)&127:((-53)|1)), (Int16(63)&127..=Int16(9)&127:(-121)|1), (Int16(-16)&127..=Int16(122)&127:((-20)|1)), (Int16(30)&127..=Int16(91)&127:(14|1)), (Int16(-119)&127..=Int16(63)&127:((-73)|1)), (Int16(-106)&127..=Int16(-107)&127:((-5)|1)), (Int16(-35)&127..=Int16(35)&127:68|1), (Int16(23)&127..Int16(39)&127:(54|1))] is Interface97), ((UInt16(51)&127..=UInt16(51)&127:(-106)|1) is (UInt64) -> String)]), (93&127..=24&127:126|1)), optionalParam1812 ! : UInt64 = UInt64(158), namedParam1814 ! : Range<UInt16>, optionalParam1815 ! : Enum675 = Enum675.enumValue1520({ lambdaParameter1819 : Interface97, lambdaParameter1820 : Option<Bool> => Class92(namedParam1826 : 46) })) { // block id: 3224
        var var3230 : ?Unit = Option<Unit>.Some(());
        try { // block id: 3226
            var2904;
            (var3230 ?? var277);
            (var344, var2904)
        } finally { // block id: 3237
            var3239
        };
        ()
    }
;
    private static let var3489 : Range<UInt16> = (UInt16(234)&127..UInt16(241)&127:((-76)|1));
    private static var var3759 : Bool = true;
    public static var var3768 : Bool = false;
    private static let var3800 : Bool = false;
    static var var3807 : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>) = (Float32(-108.0), ((-4)&127..=(-71)&127:((-75)|1)), UInt32(124), Float32(87.0), [true, false, false, true, true, false, false, true, true, false]);
    public init(param3384 : Option<Option<Bool>>, namedParam3385 ! : Option<Unit>, optionalParam3386 ! : ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool> = func762, namedParam3390 ! : (Range<UInt64>, Range<Int16>, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Option<Option<Unit>>, Int64)) { // block id: 3391
        try (resource = Class92()) { // block id: 3393
            match ((var438&127..=var2402&127:(var248|1))) {
                case _ => 
                    var2904;
                    var817 /= ((Int16(38)) | 1);
                    var2904
                
            };
            ();
            match (Int16(-37)) {
                case _ => 
                    ()
                
                case 106 | 56 | -47 => 
                    (var3343&127..Int32(56)&127:((-43)|1));
                    ()
                
                case 109 | 38 => 
                    ();
                    var2536 <<= ((var2536) & 7)
                
                case _ => 
                    var3343++
                
            }
        } catch (_) { // block id: 3432
            match (var3435) {
                case (_,caseVar3458 : Bool,caseVar3459,caseVar3460 : (Float64, Unit),caseVar3461) => 
                    var277;
                    var2626 **= (UInt64(41) & 3)
                
                case caseVar3469 : Array<Range<Int16>> => 
                    Int32(-104) < Int32(21);
                    ()
                
                case _ => 
                    var2507;
                    var2904
                
                case _ => 
                    var499;
                    var2904
                
            }
        } finally { // block id: 3484

        };
        match (try { // block id: 3487
                var3489
            } catch (e: Exception) { // block id: 3494
                var2904;
                if (var2398) { (var58&127..var58&127:((-5)|1)) } else { (UInt16(125)&127..UInt16(86)&127:62|1) } 
            } finally { // block id: 3503
                var3505;
                if (false) { var3489 } else { (UInt16(230)&127..UInt16(43)&127:((-111)|1)) } 
            }) {
            case _ : Option<Bool> => 
                if (false) { var318 } else { Option<Bool>.Some(true) } ;
                var1142
            
            case _ => 
                var var3529 : Array<Enum675> = Array<Enum675>(10){ i => Enum675.enumValue3264(UInt16(Int16(5))) };
                var3529;
                var1142
            
        };
        var var3666 : Array<Range<Int8>> = Array<Range<Int8>>(10){ i => (Int8(Int8(Int8(97)))&127..Int8(Int8(-12))&127:(13|1)) };
        let var3762 : Bool = true;
        var var3790 : UInt16 = UInt16(61);
        (try { // block id: 3664
            var3666;
            ();
            "X.kO$cdFom"
        } catch (e: Exception) { // block id: 3720
            [UInt64(118), UInt64(43), UInt64(153), UInt64(146), UInt64(45), UInt64(67), UInt64(225), UInt64(167), UInt64(173), UInt64(247)];
            ###"/QgQ6Bm~z~"###
        } finally { // block id: 3723
            if (false) { var2751 } else { var2764 } ;
            if (true) { var3731 } else { Option<Option<Interface97>>.Some(var3740) } ;
            if (false) { "682x]%%0Gt" } else { var1142 } 
        }, match ((Option<Array<Bool>>.Some([var3759, var3762, var3762, var2983, false, var3768, var51, false, var2983, var3216]) ?? var1313)) {
            case caseVar3777 => 
                if (false) { var1838 } else { var1838 } 
            
            case caseVar3785 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String) => 
                ((Int16(76)&127..Int16(-106)&127:102|1), var3790, '9')
            
            case _ => 
                if (false) { ("""
WBEB8
f[tvP
""", var3800, var2536, var2524, UInt8(242), var699, var3807, (var248&127..=var3830&127:(var248|1))) } else { ("MG8$Jf,Di`", var3762, Int8(32), (Int16(-73)&127..Int16(109)&127:116|1), var524, var817, (var999, (var3830&127..=var3830&127:(var3830|1)), var514, Float32(79.0), [false, false, false, true, false, true, true, true, true, true]), ((-70)&127..20&127:(var248|1))) } ;
                var2904;
                ((Int16(-42)&127..Int16(-30)&127:(-7)|1), UInt16(252), 'U')
            
        }, var524, try { // block id: 3860
            var524
        } catch (e: Exception) { // block id: 3862
            var2599;
            Float32(11.0);
            UInt8(103) ^ UInt8(74)
        } finally { // block id: 3868
            [UInt64(13), UInt64(173), UInt64(232), UInt64(251), UInt64(69), UInt64(218), UInt64(207), UInt64(136), UInt64(246), UInt64(220)];
            if (var3759) { var1046 } else { (var386, Class92(optionalParam1731 : (var1142, false, var2402, (var699&127..=Int16(-91)&127:(45|1)), var524, Int16(41), (Float32(-76.0), (16&127..=112&127:(-122)|1), var514, Float32(-39.0), [var2983, true, var3762, var499, false, var3768, var51, true, true, true]), var386), optionalParam1812 : UInt64(125), namedParam1814 : (UInt16(194)&127..UInt16(174)&127:7|1))) } ;
            UInt8(216) * var524
        }, if ((var3911 is Int32)) { // block id: 3923
            var3925;
            'j'
        } else { // block id: 3928
            if (var3759) { 'v' } else { var553 } 
        })
    }
;
    public func func407(namedParam408 ! : Range<UInt32>, namedParam409 ! : Option<Bool>, namedParam410 ! : Int64, namedParam411 ! : Range<UInt8>) : Bool { // block id: 412
        var loopTimeVar424 : Int64 = 0;
        while ((false) && loopTimeVar424 < 100 ) {
            loopTimeVar424++;
            var418.var421
        };
        if (try { // block id: 427
            var51
        } catch (_) { // block id: 429
            var277;
            var432;
            var438 >= var438
        } finally { // block id: 441
            var248 += namedParam410;
            false
        }) { // block id: 446
            var var462 : UInt8 = UInt8(8);
            if (false) { // block id: 449
                if (true) { ((-9)&127..113&127:((-63)|1)) } else { var386 } ;
                Int8(-81) % ((var438) | 1);
                var462 &= UInt8(166)
            };
            var loopTimeVar486 : Int64 = 0;
            while ((true) && loopTimeVar486 < 100 ) {
                loopTimeVar486++;
                (Float32(-33.0), var386, UInt32(6), Float32(58.0), [true, true, false, var51, true, false, false, var51, var51, var51]);
                ()
            };
            ((false, UInt32(157), (UInt8(40)&127..=UInt8(69)&127:94|1), Option<Bool>.None, """
8:'n0
Dkjx]
""") is Option<Bool>)
        } else { // block id: 494
            [true, var499, var51, false, var51, false, true, false, var51, false][4]
        }
    }
;
    public func func2605(param2606 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8), namedParam2607 ! : Range<UInt16>, namedParam2608 ! : ((Bool, UInt32, Range<UInt8>, Option<Bool>, String)) -> Option<Bool>) : Unit { // block id: 2611
        Option<Enum675>.None;
        var var2622 : Unit = ();
        var var2638 : Bool = (Option<Unit>.None is (Int64, Int64, Unit, Int64) -> Unit);
        var loopTimeVar2643 : Range<UInt64> = (UInt64(UInt16(34))&127..=UInt64(Int16(17))&127:(Int64(UInt8(208))|1));
        var loopTimeVar2711 : Int64 = 0;
        var loopTimeVar2727 : Int64 = 0;
        [try (resource = Class92()) { // block id: 2617
            var535;
            var277
        } catch (_) { // block id: 2620
            var2622;
            var2626 **= (UInt64(100) & 3)
        } finally { // block id: 2630
            var881 &&= false;
            ();
            var2622
        }, for (i in loopTimeVar2643 where var2638) {
            123.0
        }, if (var881) { // block id: 2653
            var58 >>= ((UInt16(171)) & 7);
            var1022;
            var2626 >>= ((var2626) & 7)
        }, var277, do {
            loopTimeVar2711++;
            var var2668 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("= P!')oKk<", false, Int8(-107), (Int16(-38)&127..Int16(-85)&127:105|1), UInt8(133), Int16(Int16(-24)), (Float32(-26.0), ((-44)&127..=101&127:(-40)|1), UInt32(148), Float32(Float32(-102.0)), [false, ((Int32(-11), Int32(19), ###"V)a:*Fzj)Q"###, UInt16(111), (UInt64(219)&127..UInt64(109)&127:((-65)|1)), UInt8(217)) is Array<UInt64>), (Option<Unit>.Some(()) is Array<Range<Int8>>), false, true, (UInt64(127) is () -> Rune), true, ([false, false, false, false, true, true, false, true, false, true] is Array<Range<Int8>>), true, true]), ((-3)&127..=(-115)&127:87|1));
            if (var51) { var2668 } else { var2668 } 
        } while ((var2638) && loopTimeVar2711 < 100 ) , (Option<Unit>.Some(()) ?? var277), (Option<Unit>.None ?? var2622), while ((var51) && loopTimeVar2727 < 100 ) {
            loopTimeVar2727++;

        }, (Option<Unit>.None ?? ()), try (resource = Class92()) { // block id: 2732

        } finally { // block id: 2733
            UInt8(91) >> ((var524) & 7);
            var881 &&= var2398
        }][9]
    }
;
    public func func139() : Rune { // block id: 140
        let var146 : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>) = (Float32(Float32(Float32(-73.0))), (87&127..=(-53)&127:(-87)|1), UInt32(UInt16(Int8(-73))), Float32(Float32(-26.0)), [((Int16(34)&127..=Int16(126)&127:(-49)|1) is Range<Int16>), (Int64(Int32(91)) is Range<Int32>), true, true, ((Int16(109)&127..Int16(-50)&127:12|1) is Range<UInt64>), true, true, true, false, (Int64(Int32(-60)) is Range<UInt32>)]);
        let var182 : String = "|m4\\=`L?KN";
        var var185 : (Range<Int16>, UInt16, Rune) = ((Int16(Int8(-47))&127..=Int16(Int16(Int16(70)))&127:(Int64(Int32(UInt8(180)))|1)), UInt16(244), 'U');
        let var199 : UInt8 = UInt8(Int8(60));
        if (var146[4][2]) { (var182, var185, var199, var199, 'b')[1][2] } else { 'q' } 
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}



public func func1196(param211 : Interface97, param212 : Option<Bool>) : Interface97 { // block id: 213
    UInt32(42);
    var218[1];
    match (try { // block id: 239
            if (true) { Option<Bool>.Some(false) } else { Option<Bool>.None } 
        } catch (e: Exception) { // block id: 245
            var248 - (-102);
            if (var51) { param212 } else { Option<Bool>.Some(var51) } 
        } finally { // block id: 259
            if (var51) { param212 } else { param212 } 
        }) {
        case _ => 
            let var268 : Rune = 'R';
            var268;
            Class92()
        
        case _ => 
            var274;
            var277;
            if (var51) { var282 } else { Class92(namedParam286 : param211, namedParam287 : (Int8(74)&127..=Int8(17)&127:121|1)) } 
        
    }
}

func func130(param131 : Interface97, param132 : Bool, param133 : Class92) : Unit { // block id: 134
    UInt16(50);
    param133.func139();
    let var400 : Int8 = Int8(123);
    var loopTimeVar531 : Int64 = 0;
    do {
        loopTimeVar531++;

    } while ((func1196(Class92(namedParam286 : Class92(), namedParam287 : (var400&127..=var400&127:(var248|1))), Option<Bool>.Some(false)).func407(namedParam408 : (var514&127..var514&127:(96|1)), namedParam409 : Option<Bool>.Some(true), namedParam410 : 48, namedParam411 : (UInt8(55)&127..=var524&127:(var248|1)))) && loopTimeVar531 < 100 ) 
}




public enum Enum675 {
    defaultValue |
    enumValue1148(UInt32, (Rune, Option<Class92>, Array<Bool>, Float32, Range<Int64>, UInt32), Float32, (Rune, Option<Class92>, Array<Bool>, Float32, Range<Int64>, UInt32)) |
    enumValue1520((Interface97, Option<Bool>) -> Interface97) |
    enumValue1557(Bool, UInt32, Interface96, (Interface95) -> Option<Bool>) |
    enumValue1938((UInt64) -> String, Float32, Interface96) |
    enumValue1984(String, (Bool, UInt32, Range<UInt8>, Option<Bool>, String), Option<Array<Class92>>, Option<Option<Unit>>) |
    enumValue3018 |
    enumValue3072((Range<Int16>, UInt16, Rune), Option<Unit>, UInt32) |
    enumValue3264(UInt16) |
    enumValue3537((Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Interface97) |
    enumValue4035(Array<UInt32>, (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune), Bool)
}
func func670(param671 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8)) : Range<Int16> { // block id: 672
    match (match (if (true) { var680 } else { var680 } ) {
            case _ => 
                let var688 : Int64 = Int64(UInt32(36));
                (var248&127..var688&127:(var248|1))
            
        }) {
        case caseVar694 => 
            Int16(3) >> ((var699) & 7);
            (Int16(74)&127..=Int16(-106)&127:34|1)
        
        case _ : Class92 => 
            (var699&127..Int16(-107)&127:(var248|1))
        
        case _ => 
            if (var51) { Enum675.defaultValue } else { Enum675.defaultValue } ;
            var277;
            if (var51) { (Int16(-79)&127..Int16(-103)&127:119|1) } else { (Int16(-63)&127..Int16(64)&127:22|1) } 
        
    }
}

func func762(param763 : (Bool, UInt32, Range<UInt8>, Option<Bool>, String)) : Option<Bool> { // block id: 764
    match ((if (var499) { // block id: 769
            (Int32(74)&127..=Int32(109)&127:30|1);
            UInt8(50)
        } else if (var51) { // block id: 773
            var var775 : UInt8 = UInt8(Int8(-67));
            var775
        } else { // block id: 778
            var524 >> ((UInt8(61)) & 7)
        } as Array<Class92>)) {
        case _ => 
            var318
        
        case _ => 
            var277;
            var318
        
        case _ => 
            var794;
            ();
            var810
        
    }
}

public func func13(param14 : UInt64) : String { // block id: 15
    let var559 : Bool = false;
    func func99(param100 : String, param101 : Range<Int16>, optionalParam102 ! : Interface96 = Class92(), optionalParam104 ! : Range<Int16> = (Int16(18)&127..=Int16(UInt8(Int8(35)))&127:(21|1))) : Class92 { // block id: 111
        if (((UInt32(78) as Bool) ?? (Option<Bool>.Some(var51) ?? true))) { // block id: 128
            func130(Class92(namedParam286 : var282, namedParam287 : var535), var51, Class92())
        };
        ((var553, Option<Class92>.None, [var499, var559, var559, false, var499, false, var51, false, false, var51], Float32(-111.0), var386, var514)[1] ?? (Option<Array<Class92>>.None ?? [var418, Class92(), var418, Class92(), var418, var418, var418, Class92(), var418, var418])[1])
    }
;
    let var618 : Range<Int16> = (Int16(-4)&127..Int16(-113)&127:(-96)|1);
    try (resource = Class92()) { // block id: 17
        let var63 : UInt16 = UInt16(UInt16(Int8(-49)));
        func func19(param20 : Int64, param21 : Int64, param22 : Unit, namedParam23 ! : Int64) : Unit { // block id: 24
            let var41 : Bool = false;
            match {
                case [true, var41, false, var41, false, true, true, true, true, var51][2] => 
                var58 += var63;
                let var68 : (Float64, Unit) = ((-127.0), ());
                var68
                case var41 => 
                let var75 : (Float64, Unit) = (3.0, ());
                var75
                case _ => 
                let var81 : (Float64, Unit) = (Float64(Float32(26.0)), ());
                var81
            }[0];
            let var88 : Float64 = Float64(Float32(103.0));
            var88;
            var var596 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8) = (Int32(Int16(-46)), Int32(Int8(55)), """
<k[@[
+E[Ji
""", UInt16(Int8(UInt8(108))), (UInt64(22)&127..=UInt64(199)&127:47|1), UInt8(140));
            var var621 : UInt16 = UInt16(Int16(UInt16(174)));
            func99(var596[2], var612[5], optionalParam104 : (var618, var621, var553)[0]).var628
        }
;
        func19((-67), 65, (), namedParam23 : 91);
        Option<Unit>.Some(var277).getOrThrow()
    } catch (_) { // block id: 641
        var524 <<= ((var524) & 7);
        var loopTimeVar650 : Int64 = 0;
        while ((false) && loopTimeVar650 < 100 ) {
            loopTimeVar650++;
            Class92()
        }
    } finally { // block id: 651
        [var418, var418, var656, var418, var656, Class92(), var418, var418, var418, var418];
        var277
    };
    let var725 : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8) = (Int32(-103), Int32(Int32(-97)), """
\\2/>/
,UI4A
""", UInt16(Int8(Int8(Int8(-76)))), (UInt64(50)&127..=UInt64(151)&127:(-31)|1), UInt8(Int8(Int8(Int8(-72)))));
    match (func99("""
<]%\"i
Kpjb+
""", (var725|>func670), optionalParam104 : (var699&127..=Int16(22)&127:((-88)|1)))) {
        case _ : Int8 => 
            ();
            var277;
            if (true) { var318 } else { var318 } 
        
        case _ => 
            var756;
            ();
            var318
        
    };
    var var860 : String = ###"WA W}^x`Ez"###;
    match (func762(match {
            case var499 => 
            var817 <<= ((Int16(29)) & 7);
            if (var559) { var824 } else { var824 } 
            case _ => 
            ();
            if (var499) { (true, var514, (var524&127..=UInt8(24)&127:((-17)|1)), var810, ###"!a{q`kj5|26"###) } else { var824 } 
        })) {
        case caseVar855 : Option<Unit> => 
            var277;
            '0';
            var860
        
        case caseVar864 : UInt16 => 
            ();
            var var869 : Bool = (Int16(Int16(14)) is () -> Rune);
            if (var869) { var860 } else { var860 } 
        
        case _ => 
            (Int8(-46)&127..Int8(58)&127:(-69)|1);
            var881 &&= var51;
            if (var51) { var860 } else { var860 } 
        
        case _ => 
            var277;
            if (var499) { ###"9mN|g~L7_4"### } else { """
Rd0=B
*@5j!
""" } 
        
    }
}


public func func978(param979 : Interface95) : Option<Bool> { // block id: 980
    let var991 : Range<UInt64> = (UInt64(159)&127..=UInt64(111)&127:121|1);
    var loopTimeVar1032 : Int64 = 0;
    (((var991, (Int16(-2)&127..var817&127:(var248|1)), (var999, var386, var514, var999, [var51, false, var51, var51, var499, true, var881, true, true, var499]), var1017, var248)[3] ?? var1022) ?? while ((false) && loopTimeVar1032 < 100 ) {
        loopTimeVar1032++;
        var817 **= (Int16(71) & 3)
    });
    var318;
    Option<Bool>.None
}



public func func1829(optionalParam1830 ! : Interface96 = Class92(), namedParam1832 ! : Array<Enum675>) : Int16 { // block id: 1833
    var var1848 : (UInt64, Unit, Range<Int8>, Rune, (Range<UInt64>, Range<Int16>, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Option<Option<Unit>>, Int64), (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>)) = (UInt64(83), (), (Int8(-53)&127..=Int8(Int8(-102))&127:(113|1)), 'W', ((UInt64(151)&127..=UInt64(Int8(-13))&127:(58|1)), (Int16(20)&127..=Int16(35)&127:27|1), (Float32(Float32(31.0)), ((-23)&127..=(-9)&127:67|1), UInt32(UInt8(81)), Float32(Float32(-34.0)), [false, true, true, false, false, true, true, false, false, true]), Option<Option<Unit>>.Some((Option<Class92>.None as Unit)), (-67)), ("Om$KZ02akF", (Enum675.enumValue1557(false, UInt32(108), Class92(), func978) is Array<Bool>), Int8(UInt8(Int8(-2))), (Int16(-33)&127..Int16(22)&127:((-68)|1)), UInt8(Int8(105)), Int16(UInt16(UInt16(119))), (Float32(124.0), ((-60)&127..=(-19)&127:(-7)|1), UInt32(Int8(-33)), Float32(35.0), [false, true, true, false, false, false, true, false, true, false]), (103&127..70&127:(-126)|1)));
    Int16(var1838[1]) % ((match (var1848[4]) {
        case _ => 
            ();
            var1931;
            Int16(6)
        
    }) | 1)
}





public func func2088(param2089 : Option<Option<Unit>>) : Bool { // block id: 2090
    var var2099 : ??Interface97 = Option<Option<Interface97>>.None;
    try { // block id: 2092
        var2099.getOrThrow();
        (Option<Bool>.None ?? var499)
    } finally { // block id: 2104
        true || false
    }
}

func func2083(param2084 : String) : Interface97 { // block id: 2085
    var var2109 : (Option<Option<Unit>>) -> Bool = func2088;
    var var2113 : UInt64 = UInt64(UInt64(UInt32(UInt8(95))));
    var var2135 : Range<UInt64> = (UInt64(77)&127..UInt64(189)&127:(-122)|1);
    let var2138 : Range<Int16> = (Int16(Int16(UInt8(Int8(69))))&127..Int16(UInt8(UInt8(UInt8(115))))&127:(Int64(UInt64(35))|1));
    var var2160 : (Range<UInt64>, Range<Int16>, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Option<Option<Unit>>, Int64) = ((UInt64(152)&127..=UInt64(109)&127:(Int64(Int32(Int32(-118)))|1)), (Int16(48)&127..Int16(52)&127:(Int64(Int64(UInt64(54)))|1)), (Float32(Float32(54.0)), (2&127..=63&127:(-67)|1), UInt32(120), Float32(-31.0), [((Int32(6), Int32(-117), "Zx`-}oRc$_", UInt16(53), (UInt64(222)&127..UInt64(35)&127:(-56)|1), UInt8(78)) is Option<Option<Interface97>>), true, false, (Class92() is Unit), (Option<Unit>.None is Unit), (((-33.0), ()) is Array<UInt32>), (UInt8(106) is Int8), true, (Option<Enum675>.Some(Enum675.enumValue1984("3x<t)/}qRL", (true, UInt32(84), (UInt8(88)&127..=UInt8(39)&127:(-92)|1), Option<Bool>.None, "#0+NShB#)A"), Option<Array<Class92>>.None, Option<Option<Unit>>.None)) is (Option<Option<Unit>>) -> Bool), (Float32(-77.0) is Option<Range<UInt16>>)]), (Int16(UInt16(173)) as Option<Unit>), (-69));
    var loopTimeVar2237 : Int64 = 0;
    do {
        loopTimeVar2237++;

    } while (((match (var2113) {
        case 166 => 
            if (var881) { var1017 } else { var1017 } 
        
        case 11 | 105 => 
            var524 &= UInt8(117);
            if (false) { (var2135, var2138, (Float32(16.0), var386, var514, Float32(-67.0), [false, false, true, true, true, true, false, true, false, true]), Option<Option<Unit>>.Some(var1022), 22) } else { var2160 } ;
            var1017
        
        case 50 | 176 => 
            ();
            var277;
            var1017
        
        case _ => 
            if (true) { Option<Option<Unit>>.Some(var1022) } else { Option<Option<Unit>>.Some(Option<Unit>.None) } 
        
    }|>var2109)) && loopTimeVar2237 < 100 ) ;
    var var2299 : Enum675 = Enum675.defaultValue;
    let var2311 : ?Class92 = Option<Class92>.None;
    let var2364 : Array<Class92> = [Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92(), Class92()];
    try { // block id: 2239
        var var2243 : ?Interface97 = Option<Interface97>.Some(Class92());
        if (true) { var2243 } else { var2243 } ;
        match ((UInt32(178)&127..=UInt32(5)&127:(124|1))) {
            case caseVar2254 : Unit => 
                var248 ^= (-57);
                let var2260 : ?Class92 = ((Int32(71)&127..Int32(-74)&127:17|1) as Class92);
                var2260;
                if (var51) { Class92() } else { Class92() } 
            
            case caseVar2269 => 
                var277;
                var282
            
            case _ => 
                var2113 ^= UInt64(11);
                let var2345 : (Interface95) -> Option<Bool> = func978;
                var var2350 : (Interface97, Option<Bool>) -> Interface97 = func1196;
                if (var51) { [var680, Enum675.enumValue1148(UInt32(182), var794, var999, var794), Enum675.enumValue1938(func13, var999, Class92()), var680, var680, var680, Enum675.enumValue1520(func1196), var680, var2299, Enum675.enumValue1938(func13, Float32(-104.0), var756)] } else { [Enum675.enumValue1148(var514, ('N', var2311, [false, false, true, true, var499, var881, var881, var499, false, var51], var999, ((-12)&127..=(-6)&127:17|1), UInt32(167)), Float32(58.0), (var553, var2311, [true, true, false, false, true, true, false, true, false, true], var999, (9&127..=(-44)&127:(81|1)), var514)), var680, var680, Enum675.enumValue1557(var499, var514, Class92(), var2345), var2299, Enum675.enumValue1520(var2350), var2299, Enum675.defaultValue, Enum675.enumValue1984(param2084, (true, UInt32(157), var1931, Option<Bool>.None, param2084), Option<Array<Class92>>.Some(var2364), var1017), Enum675.defaultValue] } ;
                if (var881) { Class92(namedParam286 : var282, namedParam287 : var535) } else { Class92() } 
            
            case _ => 
                Class92(Int16(26), Option<Unit>.Some(var277), optionalParam2391 : (UInt8(121)&127..=UInt8(3)&127:111|1))
            
        }
    } finally { // block id: 2547
        Class92(Int16(-12), Option<Unit>.Some(var277), optionalParam2391 : (UInt8(239)&127..=UInt8(223)&127:105|1))
    }
}

public func func2070<T0>(param2071 : Interface96) : Interface97 where T0 <: Array<Class92> { // block id: 2072
    var var2079 : ?Interface97 = Option<Interface97>.None;
    var var2573 : Range<Int8> = (Int8(8)&127..Int8(UInt8(UInt8(Int8(49))))&127:((-127)|1));
    (var2079 ?? Class92(namedParam286 : (var1142|>func2083), namedParam287 : [(var438&127..Int8(-124)&127:(var248|1)), (Int8(-44)&127..=Int8(-63)&127:(var248|1)), var535, (Int8(-27)&127..=Int8(22)&127:43|1), (Int8(66)&127..=Int8(-4)&127:(-8)|1), (Int8(-47)&127..=Int8(-1)&127:24|1), var535, var535, var2573, (var438&127..=Int8(-110)&127:(var248|1))][3]))
}



public func func2064<T0>(param2065 : Int8) : Option<Range<UInt16>> where T0 <: Range<Int64> { // block id: 2066
    let var2587 : (Interface96) -> Interface97 = func2070<Array<Class92>>;
    func1196((var756|>var2587), (var2596 ?? var2599)).func2605(var1235, namedParam2607 : (UInt16(200)&127..UInt16(59)&127:(var248|1)), namedParam2608 : func762);
    (try { // block id: 2749
        var2751
    } finally { // block id: 2753
        Class92(var699, var1022, optionalParam2391 : (UInt8(136)&127..UInt8(2)&127:14|1));
        var535;
        if (false) { Option<Interface96>.Some(Class92()) } else { var2764 } 
    } as Interface96);
    var var2776 : ???Unit = (Class92() as Option<Option<Unit>>);
    match (try { // block id: 2769
            var277;
            var277;
            if (true) { var2056 } else { var2776 } 
        } catch (e: Exception) { // block id: 2779
            var277;
            if (var2398) { Option<Option<Option<Unit>>>.Some(Option<Option<Unit>>.Some(var1022)) } else { var2776 } 
        } finally { // block id: 2787
            [var277, (), var277, (), var277, var277, (), var277, var277, var277];
            Option<Option<Option<Unit>>>.Some(Option<Option<Unit>>.None)
        }) {
        case _ => 
            var var2805 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = ("""
V1K4(
u]GBd
""", ([(Int16(79)&127..Int16(-109)&127:(-128)|1), (Int16(-47)&127..Int16(-21)&127:(-121)|1), (Int16(125)&127..Int16(92)&127:(-67)|1), (Int16(50)&127..=Int16(-40)&127:43|1), (Int16(94)&127..Int16(-124)&127:65|1), (Int16(59)&127..Int16(21)&127:(-109)|1), (Int16(39)&127..Int16(-70)&127:(-21)|1), (Int16(-108)&127..=Int16(61)&127:108|1), (Int16(-121)&127..Int16(125)&127:(-4)|1), (Int16(-104)&127..=Int16(-31)&127:8|1)] is Range<Int64>), Int8(68), (Int16(UInt16(11))&127..Int16(Int8(-14))&127:(Int64(Int16(59))|1)), UInt8(175), Int16(UInt16(Int8(UInt8(147)))), (Float32(Float32(-86.0)), (Int64(UInt16(194))&127..Int64(UInt32(229))&127:(Int64(UInt32(132))|1)), UInt32(168), Float32(-58.0), [false, true, true, false, false, true, false, false, true, false]), (Int64(Int64((-6)))&127..=Int64(UInt16(Int16(120)))&127:(Int64(UInt8(24))|1)));
            var2805;
            var var2848 : Option<Range<UInt16>> = (Option<Range<UInt16>>.None as Range<UInt16>);
            if (var881) { var2848 } else { Option<Range<UInt16>>.Some((var58&127..var58&127:((-42)|1))) } 
        
        case _ : UInt16 => 
            var680;
            var2861
        
        case caseVar2867 => 
            var2861
        
        case _ => 
            ();
            var2874;
            if (var499) { var2861 } else { Option<Range<UInt16>>.Some((UInt16(38)&127..=UInt16(187)&127:(-110)|1)) } 
        
    }
}


func func1196(param1197 : UInt32) : Enum675 { // block id: 1198
    let var1202 : (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>) = (###"#KMxw#]#VF"###, ((Int32(-101)&127..=Int32(105)&127:(-11)|1) is String), Int8(UInt8(139)), (Int16(-95)&127..=Int16(-99)&127:(Int64(UInt16(UInt8(58)))|1)), UInt8(76), Int16(Int8(123)), (Float32(-12.0), ((-97)&127..=20&127:92|1), UInt32(Int8(Int8(35))), Float32(Float32(92.0)), [true, false, false, false, false, false, true, true, false, true]), (32&127..45&127:(-67)|1));
    var1202[3];
    let var1682 : Array<Enum675> = Array<Enum675>(10){ i => Enum675.enumValue1557(true, UInt32(64), Class92(), { lambdaParameter1690 : Interface95 => Option<Bool>.None }) };
    let var3298 : Enum675 = Enum675.enumValue1938(func13, Float32(Float32(-18.0)), Class92(optionalParam2013 : Class92(), namedParam2017 : Float64(Float64(Float32(78.0)))));
    match (if (false) { var1235 } else { var1235 } ) {
        case (_,_ : (Bool, UInt32, Range<UInt8>, Option<Bool>, String),caseVar1248 : (String, (Range<Int16>, UInt16, Rune), UInt8, UInt8, Rune),_,caseVar1249 : Option<Interface96>,caseVar1250 : Interface96) => 
            ();
            [var680, var680, Enum675.defaultValue, var680, Enum675.enumValue1148(UInt32(68), var794, Float32(71.0), var794), Enum675.defaultValue, Enum675.enumValue1148(var514, var794, var999, var794), var680, Enum675.enumValue1148(var514, var794, Float32(68.0), (var553, Option<Class92>.Some(Class92()), [var499, false, var499, var51, true, var499, var881, true, var881, var499], Float32(-20.0), (12&127..=(-17)&127:(-114)|1), UInt32(141))), var680]
        
        case (caseVar1295,caseVar1296 : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>),caseVar1297 : Int8,_,_,_ : Option<Unit>) => 
            let var1395 : Array<Enum675> = Array<Enum675>(10){ i => Enum675.defaultValue };
            if (false) { [var680, var680, Enum675.defaultValue, var680, Enum675.defaultValue, Enum675.enumValue1148(UInt32(114), (var553, Option<Class92>.None, var1313, Float32(102.0), (1&127..114&127:(var248|1)), param1197), var999, var794), Enum675.enumValue1148(param1197, var794, Float32(113.0), ('G', Option<Class92>.Some(Class92()), var1313, Float32(20.0), var386, param1197)), Enum675.enumValue1148(UInt32(28), (var553, Option<Class92>.Some(var656), var1313, Float32(-48.0), ((-122)&127..=var248&127:(var248|1)), UInt32(104)), var999, var794), var680, var680] } else { var1395 } 
        
        case _ => 
            let var1480 : Array<Enum675> = [Enum675.enumValue1148(UInt32(UInt32(239)), ('F', Option<Class92>.None, [false, true, false, false, true, true, false, true, false, true], Float32(122.0), (51&127..126&127:((-118)|1)), UInt32(Int8(-76))), Float32(66.0), ('g', Option<Class92>.None, [true, true, true, false, false, false, true, true, true, true], Float32(Float32(12.0)), (31&127..50&127:((-60)|1)), UInt32(UInt16(74)))), Enum675.enumValue1520(func1196), Enum675.enumValue1148(UInt32(UInt32(238)), ('l', (Option<Enum675>.None as Class92), [true, false, false, false, false, true, true, false, true, false], Float32(-56.0), (109&127..(-39)&127:((-112)|1)), UInt32(21)), Float32(Float32(94.0)), ('F', Option<Class92>.Some(Class92()), [true, false, false, false, false, true, false, false, false, false], Float32(Float32(24.0)), ((-37)&127..=(-117)&127:((-92)|1)), UInt32(13))), Enum675.enumValue1520(func1196), Enum675.enumValue1557(false, UInt32(186), Class92(), func978), Enum675.enumValue1520(func1196), Enum675.enumValue1520({ lambdaParameter1573 : Interface97, lambdaParameter1574 : Option<Bool> => Class92() }), Enum675.enumValue1520({ lambdaParameter1580 : Interface97, lambdaParameter1581 : Option<Bool> => Class92(namedParam286 : Class92(), namedParam287 : (Int8(UInt8(14))&127..=Int8(UInt8(156))&127:(96|1))) }), Enum675.enumValue1520({ lambdaParameter1594 : Interface97, lambdaParameter1595 : Option<Bool> => Class92() }), Enum675.enumValue1520(func1196)];
            var1480
        
        case (caseVar1602,_,caseVar1603,_,caseVar1604,_ : (Int32, Int32, String, UInt16, Range<UInt64>, UInt8)) => 
            var277;
            let var1632 : Bool = false;
            let var1642 : UInt32 = UInt32(109);
            let var1652 : ?Class92 = (Class92() as Class92);
            if (false) { [var680, Enum675.defaultValue, Enum675.defaultValue, var680, var680, var680, Enum675.enumValue1148(UInt32(39), (var553, Option<Class92>.None, [true, true, false, var499, true, var881, true, false, var881, var1632], var999, (76&127..=(-107)&127:6|1), UInt32(13)), var999, var794), Enum675.enumValue1557(false, var1642, Class92(), func978), var680, Enum675.enumValue1148(UInt32(145), (var553, var1652, [var51, var499, false, var1632, var499, var499, false, var499, true, false], Float32(100.0), (47&127..61&127:35|1), UInt32(210)), Float32(87.0), ('1', Option<Class92>.Some(var656), [false, true, false, true, true, true, false, true, false, false], Float32(40.0), (66&127..=(-86)&127:(var248|1)), UInt32(1)))] } else { var1682 } 
        
        case _ => 
            let var3315 : UInt8 = UInt8(37);
            let var3322 : ?Array<Class92> = Option<Array<Class92>>.None;
            var var3329 : (UInt64) -> String = func13;
            var var3335 : (Interface97, Option<Bool>) -> Interface97 = func1196;
            [Enum675.enumValue3072(var1838, var1022, UInt32(88)), var680, Enum675.defaultValue, var680, var3298, Enum675.enumValue1984(var1142, (var499, UInt32(182), (var3315&127..=UInt8(166)&127:((-60)|1)), Option<Bool>.None, """
)r]NI
*!Ku7
"""), var3322, var1017), var680, var3298, Enum675.enumValue1938(var3329, Float32(51.0), var756), Enum675.enumValue1520(var3335)]
        
    }[1]
}


func func1078(param1079 : Option<Array<Class92>>) : Bool { // block id: 1080
    var var1093 : ?Interface96 = Option<Interface96>.Some(Class92());
    let var1106 : ?Enum675 = (('F', Option<Class92>.Some(Class92()), [false, false, false, false, (false is Int32), false, true, false, ((Int8(-39)&127..Int8(101)&127:95|1) is (UInt64) -> String), false], Float32(Float32(Float32(73.0))), (Int64((-7))&127..=(-53)&127:((-7)|1)), UInt32(UInt16(Int8(-103)))) as Enum675);
    let var3339 : (UInt32) -> Enum675 = func1196;
    (match ((var1093 ?? Class92())) {
        case caseVar1099 => 
            var282;
            var524 = var524;
            var1106
        
        case caseVar1138 => 
            ();
            var1142;
            let var1159 : ?Class92 = Option<Class92>.Some(Class92());
            let var1163 : Array<Bool> = [true, true, false, false, true, false, false, false, false, true];
            if (false) { Option<Enum675>.Some(Enum675.enumValue1148(UInt32(148), var794, Float32(17.0), (var553, var1159, var1163, Float32(16.0), (32&127..=var248&127:((-75)|1)), var514))) } else { var1106 } 
        
        case _ => 
            var277;
            var1106
        
        case _ => 
            var277;
            var var1185 : Enum675 = Enum675.defaultValue;
            if (true) { Option<Enum675>.Some(var1185) } else { var1106 } 
        
        case _ => 
            ();
            if (true) { var1106 } else { var1106 } 
        
    } ?? (UInt32(var3343)|>var3339));
    let var4246 : (Range<UInt64>, Range<Int16>, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Option<Option<Unit>>, Int64) = ((UInt64(25)&127..UInt64(67)&127:((-101)|1)), (Int16(-79)&127..Int16(-53)&127:(-99)|1), (Float32(120.0), (17&127..=84&127:100|1), UInt32(205), Float32(Float32(Float32(40.0))), [(Class92() is (Interface96, Array<Enum675>) -> Int16), (Class92() is (Range<UInt32>, Option<Bool>, Int64, Range<UInt8>) -> Bool), (UInt8(28) is Option<Option<Interface97>>), (Option<Bool>.None is UInt8), false, (Option<Unit>.Some(()) is Int8), false, ('k' is Interface97), false, true]), Option<Option<Unit>>.None, 60);
    match (if ((var3349 is Option<Interface96>)) { (if (var2398) { (UInt8(246)&127..=UInt8(59)&127:(-115)|1) } else { (UInt8(191)&127..UInt8(9)&127:(-87)|1) } ) } else { try { // block id: 3356
            var var3358 : Array<Class92> = Array<Class92>(10){ i => Class92(optionalParam1731 : ("Z6]#lhuLjT", false, Int8(2), (Int16(-110)&127..Int16(3)&127:94|1), UInt8(86), Int16(36), (Float32(-105.0), ((-103)&127..=72&127:((-85)|1)), UInt32(71), Float32(-46.0), [true, true, false, false, true, true, true, true, false, true]), (72&127..(-101)&127:(115|1))), namedParam1814 : (UInt16(34)&127..UInt16(250)&127:(-99)|1)) };
            var3358;
            if (var4098) { (UInt8(68)&127..UInt8(147)&127:86|1) } else { var1931 } 
        } catch (e: Exception) { // block id: 4112
            var999;
            var277;
            var1931
        } } ) {
        case _ : (UInt64, Unit, Range<Int8>, Rune, (Range<UInt64>, Range<Int16>, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Option<Option<Unit>>, Int64), (String, Bool, Int8, Range<Int16>, UInt8, Int16, (Float32, Range<Int64>, UInt32, Float32, Array<Bool>), Range<Int64>)) => 
            let var4128 : Unit = ();
            [var277, (), var277, (), var277, (), (), var4128, (), ()];
            if (false) { var4135 } else { var4135 } ;
            Class92(optionalParam1731 : var4141, namedParam1814 : (UInt16(138)&127..UInt16(149)&127:(var3830|1)), optionalParam1815 : Enum675.enumValue3072(((Int16(-53)&127..Int16(-13)&127:(-97)|1), UInt16(27), var553), var1022, var514))
        
        case _ : Range<UInt32> => 
            (var248&127..27&127:(var3830|1));
            if (var2398) { 'T' } else { var553 } ;
            Class92(Option<Option<Bool>>.None, namedParam3385 : Option<Unit>.None, namedParam3390 : var4246)
        
        case caseVar4282 : Array<Range<Int8>> => 
            if (true) { var274 } else { (Int32(50)&127..=var3343&127:((-117)|1)) } ;
            var524 |= var524;
            var var4295 : Interface95 = Class92(optionalParam1812 : UInt64(56), namedParam1814 : (UInt16(20)&127..UInt16(UInt8(Int8(-11)))&127:((-63)|1)), optionalParam1815 : Enum675.enumValue3072(((Int16(-31)&127..Int16(71)&127:(-71)|1), UInt16(233), 'c'), Option<Unit>.Some(()), UInt32(UInt8(125))));
            var4295
        
        case _ => 
            var277;
            if (var2398) { Class92() } else { var4320 } 
        
    };
    var var4343 : Int32 = Int32(UInt8(UInt8(Int8(Int8(40)))));
    (var3343 * try { // block id: 4326
        var248 /= ((var3830) | 1);
        var277;
        -Int32(-66)
    } finally { // block id: 4333
        var277;
        Int32(-107) - Int32(-121)
    }) < try { // block id: 4339
        Int32(-69)
    } finally { // block id: 4341
        var4343
    }
}

func func973(param974 : Float64) : Bool { // block id: 975
    let var1036 : (Interface95) -> Option<Bool> = { lambdaParameter1039 : Interface95 => ((UInt8(250)&127..=UInt8(213)&127:55|1) as Bool) };
    match ((var1046[1]|>var1036)) {
        case _ : (Float32, Range<Int64>, UInt32, Float32, Array<Bool>) => 
            ()
        
        case caseVar1063 => 
            var248 &= (-34)
        
        case _ => 
            var524 ^= UInt8(90);
            Option<Bool>.None;
            var277
        
    };
    (if ((var4351|>func1078)) { // block id: 4353
        (Int16(17)&127..=Int16(59)&127:(-39)|1);
        ();
        var553
    } else { // block id: 4357
        var553
    } is (Interface97, Option<Bool>) -> Interface97)
}

public func func967(param968 : Range<Int8>) : UInt16 { // block id: 969
    let var4360 : (Float64) -> Bool = func973;
    (if ((var3349|>var4360)) { // block id: 4363
        var var4369 : ?Unit = ((Class92(namedParam1814 : (UInt16(58)&127..=UInt16(28)&127:(33|1)), optionalParam1815 : Enum675.enumValue3264(UInt16(150))) as Bool) as Unit);
        if (var4098) { Option<Unit>.Some(()) } else { var4369 } ;
        var277;
        var524
    } else if (try { // block id: 4382
        var3731;
        var2398
    } finally { // block id: 4385
        true
    }) { // block id: 4387
        var277;
        UInt8(97)
    } else { // block id: 4390
        UInt8(75) % ((var524) | 1)
    } as Array<Class92>);
    UInt16(190)
}

public func func8(param9 : Int32) : UInt16 { // block id: 10
    ();
    let var896 : (UInt64) -> String = { lambdaParameter899 : UInt64 => "7aP1zWFILp" };
    var var908 : UInt64 = UInt64(UInt8(UInt8(149)));
    try { // block id: 905
        var908 /= ((var908) | 1);
        var var914 : Array<UInt64> = [UInt64(145), UInt64(96), UInt64(Int64(Int16(87))), UInt64(UInt8(Int8(101))), UInt64(UInt8(86)), UInt64(Int8(51)), UInt64(Int16(UInt16(248))), UInt64(12), UInt64(Int16(UInt16(UInt16(95)))), UInt64(92)];
        var914
    } finally { // block id: 938
        var418;
        var524;
        if (var51) { [var908, var908, var908, UInt64(113), var908, var908, UInt64(15), var908, UInt64(163), UInt64(42)] } else { [UInt64(214), UInt64(109), UInt64(187), UInt64(3), var908, UInt64(154), var908, var908, var908, UInt64(111)] } 
    }[4]|>var896;
    var var4396 : (Range<Int8>) -> UInt16 = func967;
    try { // block id: 4399
        var277;
        ();
        (var438&127..=var438&127:(59|1))
    } catch (_) { // block id: 4406
        ();
        var3925
    }|>var4396
}

main(): Int64 {
    try {
        var var4410 : (Int32) -> UInt16 = func8;
        Int64((Int32(36)|>var4410))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum675 {

}

extend Class92 {

}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_expected_while_in_do_while
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_trailing_closure_only_follow_name
// ASSERT: scan parse_expected_expr_or_decl_in
// ASSERT: scan parse_expected_left_brace
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_unexpected_declaration_in_scope
// ASSERT: scan parse_expected_character


