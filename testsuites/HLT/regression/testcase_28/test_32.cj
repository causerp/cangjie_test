/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output


public var var15 : UInt32 = UInt32(Int8(14))
var var34 : Enum31 = Enum31.defaultValue
let var130 : Bool = (() is Option<Unit>)
var var149 : UInt16 = UInt16(Int16(Int8(-88)))
public let var222 : Unit = ()
var var240 : Rune = 'm'
public var var315 : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) = (Int8(107), UInt8(Int8(UInt8(141))), ("""
DOuZ@
Nd8HX
""" as Rune), (), """
L5,uY
lgYKE
""", UInt16(UInt16(Int16(105))), ((), Int64(UInt32(Int16(38))), (Int8(UInt8(183)), Int16(Int8(-28)), (), Int8(UInt8(208)), UInt16(59), "`G./Ah@L \\"), UInt64(223), UInt32(247), ###":(<B:<-OKj"###, UInt16(134)))
let var402 : UInt8 = UInt8(Int8(-73))
public let var417 : Int8 = Int8(UInt8(33))
public let var422 : ?Rune = Option<Rune>.None
let var426 : String = """
T3jm 
xpg_U
"""
var var474 : Rune = 'u'
public let var493 : Enum483 = Enum483.defaultValue
let var546 : Int64 = 117
public let var575 : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(Int8(53)), Int16(79), (), Int8(1), UInt16(Int8(Int8(UInt8(178)))), """
[G'${var426}^~
(${var426}q${var426}\\7r${var426}
""")
public var var615 : ?Enum31 = (Int64(Int8(-102)) as Enum31)
public var var633 : Int16 = Int16(-86)
public var var657 : Range<Int16> = (Int16(-55)&127..Int16(51)&127:(65|1))
let var695 : UInt64 = UInt64(UInt16(114))
let var772 : Enum31 = Enum31.defaultValue
public let var779 : Enum31 = Enum31.defaultValue
public var var893 : Interface458 = Class455()
let var928 : Array<Interface458> = [Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455()]
let var1003 : Range<Int8> = (Int8(-29)&127..=Int8(-8)&127:80|1)
let var1045 : Int32 = Int32(-75)
public let var1054 : Int8 = Int8(Int8(-60))
let var1153 : Array<Int32> = [Int32(112), Int32(81), Int32(-76), Int32(10), Int32(-22), Int32(-64), Int32(106), Int32(-51), Int32(115), Int32(-13)]
public var var1265 : Enum1262 = Enum1262.defaultValue
public let var1273 : Class455 = Class455()
var var1284 : Bool = ('5' is Array<Interface458>)
public let var1430 : Array<Range<Int32>> = [(Int32(52)&127..Int32(-1)&127:(-31)|1), (Int32(114)&127..Int32(115)&127:(-24)|1), (Int32(-41)&127..=Int32(-30)&127:(-44)|1), (Int32(-39)&127..Int32(-18)&127:(-1)|1), (Int32(-54)&127..Int32(-10)&127:61|1), (Int32(124)&127..=Int32(-29)&127:64|1), (Int32(-116)&127..Int32(-44)&127:42|1), (Int32(-52)&127..=Int32(28)&127:60|1), (Int32(38)&127..=Int32(-104)&127:(-106)|1), (Int32(-63)&127..=Int32(-117)&127:(-17)|1)]
var var1501 : (Range<UInt64>, UInt32, ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16), Range<Int8>, Float64, UInt32) = ((UInt64((-62))&127..=UInt64(134)&127:((-97)|1)), UInt32(UInt32(Int16(UInt16(21)))), (((), 48, (Int8(-111), Int16(60), (), Int8(-104), UInt16(172), "BF$p${var426} vZmaA"), UInt64(252), UInt32(157), ###"ND${var426}gmpFD|/z"###, UInt16(Int16(42))), (), Int16(-41)), (Int8(Int8(-39))&127..Int8(112)&127:(Int64(UInt16(23))|1)), (-63.0), UInt32(UInt8(UInt8(Int8(-27)))))
public var var1587 : ?Array<Array<Unit>> = ((Int8(2), UInt8(180), ("""
W?${var426}:${var426} l
r6%${var426}(l
""" as Rune), (), ###"K~S&~${var426}4fV@${var426}r"###, UInt16(UInt16(Int16(80))), ((), Int64(Int16(-79)), (Int8(41), Int16(-37), (), Int8(94), UInt16(181), "N6J!\"koj`${var426}*"), UInt64(UInt32(180)), UInt32(UInt8(48)), """
C|${var426}Ma${var426}f${var426}
^fK${var426}\\=
""", UInt16(Int16(-39)))) as Array<Array<Unit>>)
public var var1655 : ?Range<Int16> = ((UInt16(48)&127..UInt16(Int16(-1))&127:(Int64(Int32(UInt8(67)))|1)) as Range<Int16>)
public let var1665 : Array<Option<Unit>> = Array<Option<Unit>>(10){ i => Option<Unit>.None }
public var var1734 : Int8 = Int8(Int8(Int8(Int8(UInt8(39)))))
var var1759 : ?Unit = Option<Unit>.None
var var1770 : Array<UInt8> = Array<UInt8>(10){ i => UInt8(UInt8(58)) }
var var1798 : Int64 = (-41)
public let var1918 : Float32 = Float32(Float32(Float32(Float32(Float32(52.0)))))
var var1978 : Range<UInt64> = (UInt64(79)&127..=UInt64(1)&127:109|1)
var var2128 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var2151 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), Int64(Int16(Int8(68))), (Int8(-10), Int16(UInt16(207)), (), Int8(Int8(-59)), UInt16(126), ";`L*${var426}Ifg94}${var426}"), UInt64(UInt16(190)), UInt32(UInt8(207)), "c73o${var426}mqE${var426}N${var426}2x", UInt16(81)), (), Int16(-1))
var var2341 : ?Range<UInt64> = (UInt16(158) as Range<UInt64>)
public var var2353 : UInt16 = UInt16(29)
var var2359 : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(-106), Int16(78), (), Int8(-52), UInt16(173), "' 7IT5qP(${var426}T")
let var2410 : Option<UInt32> = ([(), (), (), (), (), (), (), (), (), ()] as UInt32)
public let var2453 : ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>) = ((Int8(35), Int16(UInt16(187)), (), Int8(Int8(7)), UInt16(Int8(25)), "`c-2${var426}7C^S>$"), (Int32(50)&127..Int32(-117)&127:(-37)|1), UInt8(UInt8(UInt8(175))), [UInt8(UInt8(Int8(-18))), UInt8(28), UInt8(192), UInt8(203), UInt8(UInt8(UInt8(212))), UInt8(151), UInt8(61), UInt8(13), UInt8(21), UInt8(85)], Int32(30), (UInt64(87)&127..UInt64(130)&127:(-65)|1))
public let var2503 : Int64 = 91
var var2510 : (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32) = ((Int8(UInt8(46))&127..=Int8(110)&127:(Int64(Int16(Int8(111)))|1)), (UInt16(221)&127..=UInt16(42)&127:55|1), ((Int8(86), Int16(UInt16(254)), (), Int8(19), UInt16(Int16(17)), "`${var426}X+${var426}U,ZQ}>O"), (Int32(-105)&127..Int32(28)&127:51|1), UInt8(Int8(UInt8(37))), [UInt8(193), UInt8(185), UInt8(15), UInt8(39), UInt8(66), UInt8(132), UInt8(40), UInt8(228), UInt8(45), UInt8(230)], Int32(Int32(-45)), (UInt64(240)&127..UInt64(193)&127:18|1)), [Int32(UInt8(47)), Int32(Int8(UInt8(250))), Int32(Int32(17)), Int32(Int32(-99)), Int32(UInt8(213)), Int32(Int16(-79)), Int32(-94), Int32(20), Int32(UInt8(122)), Int32(-75)], [(), (), (), (), (), (), (), (), (), ()], (Int16(-117)&127..=Int16(-109)&127:(-38)|1), UInt8(96), false, Float32(Float32(Float32(Float32(85.0)))))
public let var2614 : Bool = (Option<Enum1262>.None is Option<Unit>)
public let var2683 : ?Int16 = Option<Int16>.None
var var2699 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var2776 : (UInt64, (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32), UInt64, Int32, Int16, Array<Unit>) = (UInt64(20), ((Int8(-12)&127..Int8(Int8(63))&127:(69|1)), (UInt16(Int16(-43))&127..UInt16(26)&127:((-98)|1)), ((Int8(-103), Int16(37), (), Int8(-90), UInt16(46), ###"IZx8=W9*g${var426}m${var426}"###), (Int32(108)&127..=Int32(-114)&127:37|1), UInt8(44), [UInt8(133), UInt8(250), UInt8(163), UInt8(147), UInt8(23), UInt8(231), UInt8(24), UInt8(41), UInt8(102), UInt8(153)], Int32(-2), (UInt64(145)&127..UInt64(141)&127:(94|1))), [Int32(-11), Int32(124), Int32(95), Int32(124), Int32(-75), Int32(85), Int32(104), Int32(-85), Int32(-16), Int32(54)], [(), (), (), (), (), (), (), (), (), ()], (Int16(UInt8(102))&127..Int16(Int8(-6))&127:(62|1)), UInt8(188), false, Float32(Float32(-70.0))), UInt64(Int8(UInt8(108))), Int32(UInt16(242)), Int16(UInt16(222)), [(), (), (), (), (), (), (), (), (), ()])
var var2937 : Bool = (Float32(-3.0) is (Int16, ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16), (Int8, Int16, Unit, Int8, UInt16, String), UInt8) -> Range<Int32>)
let var2949 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), 29, (Int8(68), Int16(Int16(UInt16(55))), (), Int8(Int8(77)), UInt16(Int8(-39)), "8#O2${var426}mbWrxh"), UInt64(Int32(98)), UInt32(127), ###")R${var426}-!27t;[E"###, UInt16(UInt8(Int8(Int8(125)))))
var var2987 : Int32 = Int32(89)
var var2992 : Range<Int32> = (Int32(-88)&127..=Int32(5)&127:55|1)
var var3020 : ?Bool = ((Int8(-16)&127..Int8(-97)&127:((-121)|1)) as Bool)
public var var3056 : Range<Int64> = (74&127..=28&127:(118|1))
public let var3077 : ?((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = ((Option<Bool>.None as UInt32) as ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16))
public let var3125 : Array<Unit> = Array<Unit>(10){ i => () }
let var3269 : ?Unit = Option<Unit>.None
public var var3364 : ?Unit = (true as Unit)
public let var3488 : Unit = ()
public var var3725 : UInt64 = UInt64(71)
public let var3741 : Unit = ()
let var3753 : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(Int8(-48)), Int16(UInt16(Int16(6))), (), Int8(105), UInt16(Int16(Int8(8))), ###"BF/r${var426}~:Eukb"###)
var var3867 : Float64 = Float64((-78.0))
public var var3913 : Unit = ()
public let var4191 : ?Unit = Option<Unit>.None
let var4232 : ?(Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) = (((UInt32(Int16(10))&127..UInt32(77)&127:(Int64(UInt16(96))|1)) as (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16))) as (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)))
let var4264 : ?Bool = (Float32(-88.0) as Bool)
public var var4466 : ((Int8, Int16, Unit, Int8, UInt16, String), Bool, Bool, Array<Unit>) = ((Int8(UInt8(6)), Int16(Int16(Int16(-8))), (), Int8(Int8(UInt8(125))), UInt16(130), ";)vei;6(${var426}\"W"), ([(), (), (), (), (), (), (), (), (), ()] is ((Range<UInt8>, Array<Unit>, UInt32, Int16, Range<UInt32>, Range<Int8>, Range<Int8>)) -> Float32), ([Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455(), Class455()] is (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32)), [(), (), (), (), (), (), (), (), (), ()])
var var4716 : Interface458 = Class455()
public var var4748 : Option<Rune> = Option<Rune>.None
var var4860 : ?((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>) = Option<((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>)>.None
let var4890 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), 31, (Int8(UInt8(24)), Int16(UInt8(235)), (), Int8(Int8(36)), UInt16(UInt16(241)), ")tAM${var426}\\MlW!#"), UInt64(Int32(Int8(-111))), UInt32(Int8(UInt8(147))), "5N/sI&k${var426}q[\\", UInt16(22)), (), Int16(UInt16(143)))
var var4991 : ?Interface458 = ((Int8(Int8(UInt8(87))), Int16(-24), (), Int8(92), UInt16(Int8(Int8(-12))), "llqIV2@ir${var426}q") as Interface458)
public let var5042 : ??Unit = ([[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] as Option<Unit>)

public enum Enum31 {
    defaultValue |
    enumValue650(Int32, Range<Int16>, Rune, UInt16) |
    enumValue2306(UInt8, UInt8) |
    enumValue2975(Float64, Array<Range<Int32>>, (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)))
}



func func174(param175 : UInt8) : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) { // block id: 176
    let var187 : ?((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (Float32(Float32(83.0)) as ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16));
    let var199 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), Int64(UInt32(Int8(Int8(42)))), (Int8(Int8(-109)), Int16(Int16(-76)), (), Int8(UInt8(224)), UInt16(UInt16(59)), ###"d_];G5~s$D"###), UInt64(188), UInt32(93), ".\\w7I/h7g,", UInt16(237));
    var var244 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), Int64(Int32(Int32(-26))), (Int8(26), Int16(42), (), Int8(7), UInt16(214), "dmb~D&;3$]"), UInt64(UInt16(156)), UInt32(Int8(Int8(-63))), """
OdHpX
y&;0C
""", UInt16(UInt16(Int16(-65)))), (), Int16(UInt16(UInt8(40))));
    (try { // block id: 185
        var187
    } catch (_) { // block id: 191
        ();
        let var225 : Int16 = Int16(110);
        if (false) { var187 } else { Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.Some((var199, var222, var225)) } 
    } finally { // block id: 227
        var222;
        var187
    } ?? try { // block id: 231
        var var235 : ?Rune = ("*PN@Jw?O'j" as Rune);
        if (false) { var235 } else { Option<Rune>.Some(var240) } ;
        param175;
        var244
    } catch (e: Exception) { // block id: 271
        var244
    } finally { // block id: 273
        var var281 : Int16 = Int16(UInt16(48));
        if (var130) { var244 } else { (var199, (), var281) } 
    })[2];
    try { // block id: 286
        if (var130) { // block id: 289
            (-52) ** ((-49) & 3);
            let var296 : Int16 = Int16(37);
            Int16(19) - var296;
            ()
        };
        Option<Unit>.None.getOrThrow();
        let var307 : ?Rune = ('F' as Rune);
        if (var130) { (Int8(33), UInt8(158), var307, (), ###"$Ec^MwHb\\>"###, UInt16(152), var199) } else { var315 } 
    } finally { // block id: 347
        var loopTimeVar352 : Range<UInt64> = (UInt64(UInt32(177))&127..UInt64(UInt64(189))&127:(51|1));
        for (i in loopTimeVar352 where false) {
            var34
        };
        var loopTimeVar371 : Range<UInt64> = (UInt64(176)&127..UInt64(221)&127:(Int64(Int32(UInt32(84)))|1));
        for (i in loopTimeVar371 where true) {
            ()
        };
        let var393 : ?Rune = Option<Rune>.None;
        try { // block id: 379
            var315
        } finally { // block id: 381
            param175;
            let var387 : Int8 = Int8(Int8(Int8(-95)));
            if (var130) { (var387, UInt8(248), var393, (), """
Rv]8W
P4a{zu
""", UInt16(65), var199) } else { (var387, var402, var393, (), """
5Nokk
/A.!X
""", var149, var199) } 
        }
    }
}

public interface Interface458 {

}

public open class Class455 <: Interface458 & Resource {
    public init() { // block id: 457

    }
;
    static let var461 : Bool = true;
    public init(namedParam904 ! : (Int8, Int16, Unit, Int8, UInt16, String), namedParam905 ! : Option<Range<UInt64>>) { // block id: 906
        let var910 : Array<Unit> = Array<Unit>(10){ i => () };
        var910[8];
        var var986 : Unit = ();
        try { // block id: 944
            let var946 : (Range<UInt8>, Array<Unit>, UInt32, Int16, Range<UInt32>, Range<Int8>, Range<Int8>) = ((UInt8(UInt8(Int8(-117)))&127..UInt8(UInt8(UInt8(162)))&127:(124|1)), [(), (), (), (), (), (), (), (), (), ()], UInt32(141), Int16(63), (UInt32(18)&127..UInt32(252)&127:(-103)|1), (Int8(UInt8(75))&127..Int8(-36)&127:(121|1)), (Int8(-31)&127..Int8(118)&127:20|1));
            var946
        } finally { // block id: 976
            ((var402&127..var402&127:(74|1)), [(), var222, var986, var222, (), var986, var222, var986, (), ()], var15, var633, (UInt32(89)&127..=UInt32(172)&127:95|1), (Int8(-120)&127..var417&127:(var546|1)), var1003)
        }[4]|>func924
    }
;
    static var var1203 : UInt8 = UInt8(163);
    static let var1484 : ((Int8, Int16, Unit, Int8, UInt16, String), Bool, Bool, Array<Unit>) = ((Int8(43), Int16(7), (), Int8(-29), UInt16(182), ###"7cSd(~.F=."###), false, false, [(), (), (), (), (), (), (), (), (), ()]);
    public static var var3491 : ?Unit = Option<Unit>.None;
    public init(param3257 : () -> Range<Int16>) { // block id: 3259
        ();
        let var3423 : ?Bool = (((UInt8(167)&127..=UInt8(173)&127:(Int64(Int8(-78))|1)), [(), (), (), (), (), (), (), (), (), ()], UInt32(47), Int16(42), (UInt32(233)&127..=UInt32(94)&127:(-113)|1), (Int8(-16)&127..=Int8(-128)&127:123|1), (Int8(-118)&127..=Int8(-39)&127:(-15)|1)) as Bool);
        let var3477 : Option<Array<Option<Unit>>> = Option<Array<Option<Unit>>>.None;
        try { // block id: 3262
            (var3269 ?? var222);
            var var3288 : ?Unit = Option<Unit>.Some(());
            match ((UInt64(44), var2510, UInt64(96), Int32(69), var633, var2699)) {
                case _ => 
                    [var1759, Option<Unit>.None, var1759, var1759, var3288, var3288, var1759, Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.Some(())]
                
            }
        } catch (_) { // block id: 3298
            var loopTimeVar3303 : Int64 = 0;
            while ((true) && loopTimeVar3303 < 100 ) {
                loopTimeVar3303++;

            };
            if (var1284) { // block id: 3306
                (var149&127..var2353&127:(var546|1));
                ();
                var149 >>= ((UInt16(47)) & 7)
            } else if (false) { // block id: 3316
                var149 /= ((var149) | 1);
                ()
            };
            var var3324 : Range<UInt64> = (UInt64(182)&127..=UInt64(132)&127:(-60)|1);
            let var3346 : Float64 = (-117.0);
            match ((var3324, UInt32(91), (((), 26, (var417, var633, var222, var417, var2353, var426), UInt64(20), UInt32(242), var426, var2353), (), var633), var1003, var3346, var15)) {
                case caseVar3351 => 
                    var422;
                    ();
                    [Option<Unit>.None, var1759, Option<Unit>.None, Option<Unit>.Some(var222), var1759, var1759, var3364, Option<Unit>.None, var1759, var3364]
                
                case (_ : Option<Unit>,_ : (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32),((_,_,(_,caseVar3372 : (Int8, Int16, Unit, Int8, UInt16, String),caseVar3373,caseVar3374,_,caseVar3375 : Array<Unit>),caseVar3376,_ : Option<Rune>,_,caseVar3377),caseVar3378,_),_,_ : Rune,_ : Unit) => 
                    if (var2937) { [Option<Unit>.Some(()), var1759, var1759, var1759, var3364, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()), var1759] } else { var1665 } 
                
                case caseVar3398 : (Enum483, Int32) => 
                    if (false) { var3020 } else { var3020 } ;
                    [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]];
                    [Option<Unit>.Some(var222), Option<Unit>.Some(var222), var3364, Option<Unit>.Some(()), var1759, Option<Unit>.None, var1759, Option<Unit>.None, Option<Unit>.Some(var222), Option<Unit>.None]
                
                case _ => 
                    var3423;
                    if (var2614) { var1003 } else { (Int8(124)&127..Int8(52)&127:(-89)|1) } ;
                    if (var461) { var1665 } else { var1665 } 
                
            }
        } finally { // block id: 3455
            var loopTimeVar3470 : Int64 = 0;
            while ((false) && loopTimeVar3470 < 100 ) {
                loopTimeVar3470++;
                (var575, true, var2614, var3125);
                if (var130) { var3020 } else { Option<Bool>.Some(var1284) } 
            };
            (var3477 ?? [var1759, var1759, Option<Unit>.Some(var222), Option<Unit>.Some(var222), Option<Unit>.Some(var3488), var3491, Option<Unit>.None, var1759, var3491, var3364])
        }
    }
;
    public init(param4579 : Enum31, param4580 : Rune) { // block id: 4581
        var var4596 : ?Unit = Option<Unit>.None;
        ((if (var130) { Option<Option<Unit>>.Some(var4596) } else { Option<Option<Unit>>.Some(var4596) }  ?? if (var461) { Option<Unit>.None } else { var4596 } ) ?? if (var2937) { // block id: 4606
            var149 %= ((var2353) | 1);
            if (true) { var2453 } else { ((var1054, Int16(19), (), Int8(46), var2353, var426), (Int32(18)&127..=Int32(18)&127:37|1), UInt8(51), [UInt8(175), UInt8(59), UInt8(250), UInt8(221), UInt8(152), UInt8(177), UInt8(184), UInt8(229), UInt8(34), UInt8(41)], var2987, (UInt64(104)&127..=UInt64(50)&127:(-11)|1)) } ;
            ()
        } else if (try { // block id: 4628
            var2937
        } catch (_) { // block id: 4630
            ();
            !var130
        }) { // block id: 4634
            if (true) { var3269 } else { Option<Unit>.None } ;
            ()
        });
        let var4664 : Unit = ();
        match (try { // block id: 4642
                if (true) { Option<(Enum483, Int32)>.None } else { Option<(Enum483, Int32)>.None } ;
                var3913;
                var493
            } catch (_) { // block id: 4649
                if (false) { Enum483.defaultValue } else { Enum483.defaultValue } 
            }) {
            case caseVar4656 : Range<Int16> => 
                var1798 <<= ((85) & 7)
            
            case _ => 
                var4664
            
        }
    }

    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public enum Enum483 {
    defaultValue
}


public func func666(param667 : Interface458) : Enum31 { // block id: 668
    let var705 : Range<UInt16> = (UInt16(234)&127..=UInt16(15)&127:(97|1));
    func func678(param679 : Int64, param680 : Float32) : Unit { // block id: 681
        var var688 : UInt64 = UInt64(Int32(UInt8(UInt8(Int8(-90)))));
        try (resource = Class455()) { // block id: 683
            try { // block id: 685
                var688 |= var695;
                var222;
                (var149&127..var149&127:((-15)|1))
            } catch (e: Exception) { // block id: 703
                var705
            } finally { // block id: 710
                (UInt16(85)&127..UInt16(38)&127:(-98)|1)
            };
            Option<Enum31>.None.getOrThrow();
            ()
        } catch (e: Exception) { // block id: 719
            if (var130) { // block id: 722
                ((-57)&127..=47&127:((-20)|1));
                Option<Enum31>.None;
                var417 - Int8(-16)
            } else { // block id: 731
                if (var130) { 'C' } else { var474 } ;
                var222;
                Int8(10)
            };
            var222
        }
    }
;
    let var741 : Float32 = Float32(Float32(Float32(3.0)));
    var loopTimeVar746 : Int64 = 0;
    do {
        loopTimeVar746++;
        func678((-121), var741)
    } while ((((Option<Option<Unit>>.Some(Option<Unit>.Some(var222)) ?? Option<Unit>.None) is ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16))) && loopTimeVar746 < 100 ) ;
    let var758 : Int32 = Int32(Int16(Int8(-75)));
    match ((var575, (Int32(-47)&127..Int32(53)&127:21|1), var402, [UInt8(86), UInt8(60), UInt8(149), UInt8(211), UInt8(186), UInt8(103), UInt8(254), UInt8(179), UInt8(135), UInt8(248)], var758, (UInt64(242)&127..var695&127:(79|1)))[3][3]) {
        case 145 | 215 => 
            var772
        
        case caseVar776 => 
            var779
        
        case 135 => 
            var222;
            var772
        
        case _ => 
            ();
            Enum31.enumValue650(Int32(-84), var657, 'u', var149)
        
    }
}



func func924(param925 : Range<UInt32>) : Array<Interface458> { // block id: 926
    var928
}

public struct Aggregate1206 {
    init() { // block id: 1208

    }
;
    static func func1211(param1212 : Int64, param1213 : Range<Int64>, param1214 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16), optionalParam1215 ! : (Enum483, Int32) = (Enum483.defaultValue, Int32(-103))) : UInt8 { // block id: 1219
        let var1229 : Int8 = Int8(-107);
        var loopTimeVar1254 : Int64 = 0;
        while ((true) && loopTimeVar1254 < 100 ) {
            loopTimeVar1254++;
            ();
            match {
                case var130 => 
                (var1229, UInt8(159), Option<Rune>.None, (), """
y|.%t
*L?+\"
""", UInt16(84), (var222, 96, var575, var695, UInt32(228), "<UBdO&g]sQ", UInt16(91)))
                case _ => 
                var222;
                var var1248 : Int8 = Int8(UInt8(135));
                var1248 *= var417;
                var315
            }
        };
        let var1301 : ?Range<Int16> = ((Int32(59) as Option<Unit>) as Range<Int16>);
        (match (match (var1265) {
                case defaultValue => 
                    Int16(51);
                    ();
                    var1273
                
                case _ => 
                    var149;
                    var1273
                
                case _ => 
                    if (var1284) { var1273 } else { var1273 } 
                
            }) {
            case caseVar1291 : Range<UInt8> => 
                var1284 &&= var1284;
                if (var130) { Class455() } else { Class455() } ;
                var1301
            
            case _ => 
                if (true) { var1301 } else { Option<Range<Int16>>.Some((Int16(71)&127..=Int16(-63)&127:(param1212|1))) } 
            
        } ?? func486());
        UInt8(UInt8(187))
    }

}


public enum Enum1262 {
    defaultValue
}
func func486() : Range<Int16> { // block id: 1317
    var657
}


func func1575(param1576 : Range<Int8>) : Array<Option<Unit>> { // block id: 1577
    var var1619 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    (var1587 ?? [var1619, [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], var1619, [(), (), (), (), (), (), (), (), (), ()], var1619, [(), (), (), (), (), (), (), (), (), ()], var1619, [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]])[7][9];
    var var1752 : ?Unit = Option<Unit>.None;
    match (try { // block id: 1634
            var var1637 : Float32 = Float32(Float32(Float32(17.0)));
            var1637 *= var1637;
            var1054 ** (Int8(73) & 3)
        } catch (_) { // block id: 1645
            ();
            Int8(59)
        }) {
        case -3 => 
            if (false) { Option<Range<Int16>>.None } else { var1655 } ;
            var1665
        
        case _ => 
            var1665
        
        case -99 | -13 | -19 | 16 => 
            [Int32(111), Int32(94), Int32(-26), Int32(-84), Int32(122), Int32(-122), Int32(-30), Int32(53), Int32(115), Int32(74)];
            var1734 -= var1054;
            var1665
        
        case caseVar1744 => 
            UInt64(181);
            [Option<Unit>.Some(var222), Option<Unit>.None, var1752, Option<Unit>.None, var1752, Option<Unit>.Some(var222), var1759, var1759, Option<Unit>.None, var1759]
        
        case _ => 
            var222;
            if (false) { var1770 } else { var1770 } ;
            var1665
        
    }
}


func func1934(param1935 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)) : Option<Enum1262> { // block id: 1936
    var240;
    var var2009 : Float32 = Float32(Float32(Float32(-123.0)));
    let var2020 : ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>) = ((Int8(-101), Int16(31), (), Int8(-121), UInt16(243), "Ax&YX}=z0T"), (Int32(-127)&127..=Int32(-92)&127:11|1), UInt8(UInt8(Int8(21))), [UInt8(250), UInt8(81), UInt8(167), UInt8(225), UInt8(226), UInt8(167), UInt8(104), UInt8(128), UInt8(160), UInt8(61)], Int32(84), (UInt64(214)&127..=UInt64(201)&127:(Int64(UInt8(Int8(-28)))|1)));
    var var2049 : Unit = ();
    var var2065 : (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32) = ((Int8(Int8(UInt8(8)))&127..Int8(-50)&127:(Int64(UInt32(209))|1)), (UInt16(Int16(-31))&127..UInt16(187)&127:(68|1)), ((Int8(-78), Int16(29), (), Int8(125), UInt16(UInt8(73)), "*Ze:t#w4uW"), (Int32(-29)&127..=Int32(125)&127:12|1), UInt8(4), [UInt8(67), UInt8(103), UInt8(123), UInt8(140), UInt8(21), UInt8(9), UInt8(181), UInt8(65), UInt8(168), UInt8(253)], Int32(123), (UInt64(240)&127..UInt64(74)&127:2|1)), [Int32(61), Int32(126), Int32(51), Int32(109), Int32(-96), Int32(-128), Int32(8), Int32(70), Int32(95), Int32(-91)], [(), (), (), (), (), (), (), (), (), ()], (Int16(94)&127..Int16(Int8(UInt8(83)))&127:((-37)|1)), UInt8(Int8(28)), (UInt64(85) is Int16), Float32(-97.0));
    if (((if (true) { var1759 } else { var1759 } ) is Range<Int64>)) { match (try { // block id: 1946
            var var1953 : Range<UInt16> = (UInt16(214)&127..=UInt16(210)&127:(Int64(Int16(97))|1));
            var var1968 : Range<Int32> = (Int32(-69)&127..=Int32(Int8(-110))&127:((-36)|1));
            ((Int8(-15)&127..var1734&127:(var1798|1)), var1953, ((Int8(-117), var633, var222, var417, UInt16(170), """
\\\"6w 
Kd85/
"""), var1968, var402, [UInt8(87), UInt8(220), UInt8(20), UInt8(109), UInt8(234), UInt8(241), UInt8(196), UInt8(244), UInt8(210), UInt8(154)], Int32(83), var1978), [Int32(-12), var1045, Int32(59), Int32(-122), var1045, Int32(-93), Int32(-76), var1045, Int32(-1), var1045], [(), (), (), (), (), var222, var222, var222, (), ()], (var633&127..Int16(-48)&127:(110|1)), UInt8(28), false, var2009)
        } finally { // block id: 2013
            var var2054 : Unit = ();
            if (true) { ((Int8(-29)&127..=Int8(84)&127:(-1)|1), (UInt16(153)&127..UInt16(80)&127:39|1), var2020, var1153, [var222, (), var222, (), var222, var2049, (), (), var2054, ()], (var633&127..=var633&127:(31|1)), var402, var1284, Float32(-124.0)) } else { var2065 } 
        }) {
        case _ => 
            if (var1284) { (var1045&127..=var1045&127:(107|1)) } else { (Int32(-38)&127..=Int32(33)&127:62|1) } ;
            var1759
        
    } } else { (var2128 as Unit) } ;
    ((Option<Range<Int16>>.None as Enum31) as Enum1262)
}






func func2199(namedParam2200 ! : Range<UInt16>, namedParam2201 ! : (UInt64, (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32), UInt64, Int32, Int16, Array<Unit>), namedParam2202 ! : (Interface458) -> Enum31) : Option<UInt32> { // block id: 2205
    var var2241 : ?(Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) = (() as (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)));
    let var2252 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), 88, (Int8(84), Int16(-103), (), Int8(-35), UInt16(153), "Gz ;oGA$c*"), UInt64(Int32(Int8(Int8(37)))), UInt32(130), """
CP}+T
*t)za
""", UInt16(UInt16(147)));
    var var2283 : Unit = ();
    try { // block id: 2207
        var var2220 : ((Int8, Int16, Unit, Int8, UInt16, String), Bool, Bool, Array<Unit>) = ((Int8(UInt8(127)), Int16(-27), (), Int8(23), UInt16(UInt8(UInt8(229))), ###"a/RO$,V.W["###), true, true, [(), (), (), (), (), (), (), (), (), ()]);
        match (var1918) {
            case _ => 
                if (var130) { (var575, false, false, [(), (), (), (), (), (), (), (), (), ()]) } else { var2220 } 
            
        };
        (var2241 ?? (Int8(-48), var402, Option<Rune>.None, (), """
#r=O@
N,.h\\
""", var149, var2252))
    } catch (_) { // block id: 2271
        (Option<Unit>.Some(()) ?? var222);
        (Option<Unit>.None ?? var2283);
        if (true) { (var1734, UInt8(170), var422, (), "<GzdMa{c(sG", var149, var2252) } else { var315 } 
    };
    let var2491 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    let var2660 : Int32 = Int32(74);
    func func2298(param2299 : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)), optionalParam2300 ! : (Interface458) -> Enum31 = { lambdaParameter2303 : Interface458 => Enum31.enumValue2306(UInt8(240), UInt8(UInt8(UInt8(48)))) }) : (UInt64, (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32), UInt64, Int32, Int16, Array<Unit>) { // block id: 2315
        var loopTimeVar2327 : Int64 = 0;
        while ((try { // block id: 2318
            UInt16(1) != var149
        } finally { // block id: 2322
            var222;
            var1284
        }) && loopTimeVar2327 < 100 ) {
            loopTimeVar2327++;

        };
        var var2400 : Float32 = Float32(-77.0);
        let var2611 : ?Bool = Option<Bool>.None;
        var var2619 : Float32 = Float32(123.0);
        (var695, ((Int8(-60)&127..=Int8(119)&127:17|1), match ([var893, var893, var893, var893, Class455(namedParam904 : var575, namedParam905 : var2341), var893, var893, Class455(namedParam904 : (var1734, var633, (), Int8(109), var2353, var426), namedParam905 : Option<Range<UInt64>>.None), Class455(namedParam904 : var2359, namedParam905 : var2341), var893]) {
            case _ : Range<Int32> => 
                ((), var1798, (Int8(-116), var633, var222, Int8(62), UInt16(195), "[mJr\\uTdB!"), UInt64(144), var15, "#juES_^gfA", var2353);
                (UInt16(147)&127..var149&127:((-27)|1))
            
            case caseVar2392 => 
                (var1054&127..Int8(83)&127:((-110)|1));
                var2400 = var2400;
                if (var1284) { (UInt16(58)&127..UInt16(126)&127:(-51)|1) } else { (UInt16(197)&127..=UInt16(168)&127:(-34)|1) } 
            
            case _ => 
                var2410;
                if (true) { (UInt16(182)&127..var149&127:(112|1)) } else { (UInt16(174)&127..=var2353&127:((-6)|1)) } 
            
        }, try { // block id: 2434
            ((var1734, Int16(87), (), var1054, var2353, var426), (Int32(27)&127..var1045&127:(var1798|1)), UInt8(9), [UInt8(161), UInt8(110), UInt8(12), UInt8(216), UInt8(161), UInt8(221), UInt8(15), UInt8(59), UInt8(72), UInt8(93)], var1045, var1978)
        } catch (e: Exception) { // block id: 2451
            var2453
        } finally { // block id: 2486
            var2252;
            var2453
        }, [Int32(-34), Int32(120), Int32(-125), Int32(-67), Int32(84), Int32(44), Int32(-69), Int32(25), Int32(78), Int32(45)], var2491, if (true) { (Int16(40)&127..=Int16(-117)&127:6|1) } else { var657 } , if (false) { // block id: 2499
            var1798 *= var2503;
            UInt8(251)
        } else { // block id: 2506
            var var2579 : Int32 = Int32(Int8(UInt8(93)));
            if (var1284) { var2510 } else { ((Int8(5)&127..=Int8(-10)&127:2|1), namedParam2200, var2453, [var1045, Int32(-35), Int32(120), Int32(35), var1045, var1045, var1045, Int32(76), var2579, var1045], [(), (), (), (), (), var222, (), var222, var222, var222], (Int16(-113)&127..var633&127:(4|1)), UInt8(56), false, var1918) } ;
            UInt8(228) | UInt8(10)
        }, (var2611 ?? var2614), match (var2619) {
            case _ => 
                ();
                var222;
                Float32(-38.0)
            
        }), if (var2614) { // block id: 2628
            UInt64(156) - var695
        } else if (var15 <= UInt32(172)) { // block id: 2635
            if (true) { [(), (), (), (), (), (), (), (), (), ()] } else { [(), (), (), (), (), (), (), (), (), ()] } ;
            ();
            var695
        } else { // block id: 2642
            ();
            var695
        }, match ((UInt8(19)&127..=var402&127:(69|1))) {
            case _ => 
                ();
                var1284 ||= true;
                Int32(34) | var2660
            
            case _ => 
                var222;
                ();
                Int32(-100)
            
        }, (match ((var493, Int32(-58))) {
            case caseVar2678 : Option<Array<Array<Unit>>> => 
                if (false) { var2683 } else { var2683 } 
            
            case _ => 
                UInt64(160);
                if (true) { Option<Enum31>.Some(var772) } else { Option<Enum31>.Some(Enum31.defaultValue) } ;
                Option<Int16>.None
            
        } ?? Int16(var402)), var2699)
    }
;
    var var2703 : Range<UInt8> = (UInt8(44)&127..UInt8(23)&127:((-10)|1));
    (func2298(match (var2703) {
        case _ => 
            var222;
            (var417, var402, var422, var222, var426, var2353, var2252)
        
        case _ => 
            if (var2614) { (Int8(-68), var402, Option<Rune>.None, var2283, "@iZwtp]b(^", var2353, (var222, var546, (Int8(-59), Int16(1), var222, var1734, UInt16(149), var426), var695, UInt32(133), "?\"5G4@/]SG", UInt16(40))) } else { (var417, UInt8(192), Option<Rune>.Some('l'), var222, """
4Wo5p
.0kI2
""", var149, ((), 17, var575, var695, var15, var426, UInt16(195))) } 
        
    }, optionalParam2300 : namedParam2202) as UInt32)
}


func func2189(param2190 : Enum1262) : Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)> { // block id: 2191
    ();
    let var2885 : Array<UInt8> = [UInt8(189), UInt8(242), UInt8(22), UInt8(230), UInt8(231), UInt8(136), UInt8(221), UInt8(181), UInt8(232), UInt8(175)];
    var var2905 : Range<Int16> = (Int16(UInt16(Int8(69)))&127..Int16(Int8(UInt8(Int8(43))))&127:(Int64(Int8(Int8(-4)))|1));
    var var3011 : (Interface458) -> Enum31 = func666;
    var var3030 : UInt64 = UInt64(UInt8(Int8(116)));
    let var3042 : Range<Int8> = (Int8(UInt8(UInt8(UInt8(156))))&127..=Int8(UInt8(213))&127:(60|1));
    (func2199(namedParam2200 : (UInt16(126)&127..UInt16(97)&127:(var1798|1)), namedParam2201 : match (Option<Bool>.Some(false)) {
        case caseVar2771 : UInt64 => 
            if (var130) { var2776 } else { var2776 } 
        
        case _ : Range<UInt64> => 
            ();
            if (var1284) { (var695, ((Int8(-35)&127..=Int8(-60)&127:((-86)|1)), (var149&127..=UInt16(79)&127:(var2503|1)), ((Int8(-76), Int16(-8), (), Int8(-105), var2353, var426), (Int32(108)&127..Int32(41)&127:88|1), var402, var2885, var1045, (UInt64(77)&127..UInt64(157)&127:(50|1))), var1153, [(), var222, var222, var222, var222, var222, (), (), (), ()], var2905, var402, var130, var1918), var695, var1045, var633, var2128) } else { var2776 } 
        
        case caseVar2927 => 
            var15 **= (UInt32(85) & 3);
            var2776
        
        case _ => 
            if (var2937) { var315 } else { (var1734, UInt8(190), var422, (), ###"5i~v!zeh,7"###, var2353, var2949) } ;
            if (var2614) { Enum31.enumValue2975((-106.0), [(Int32(-56)&127..=Int32(-18)&127:(32|1)), (var2987&127..=var2987&127:(var2503|1)), var2992, var2992, (Int32(8)&127..=Int32(-61)&127:(-50)|1), var2992, var2992, var2992, var2992, (Int32(-57)&127..=Int32(6)&127:(23|1))], var315) } else { var772 } ;
            if (false) { var2776 } else { var2776 } 
        
    }, namedParam2202 : var3011) ?? if ((var3020 ?? false)) { // block id: 3027
        var3030 >>= ((UInt64(44)) & 7);
        if (var2937) { (Int8(107)&127..=Int8(-114)&127:(var2503|1)) } else { var3042 } ;
        UInt32(205)
    } else { // block id: 3052
        if (var1284) { var3056 } else { (46&127..var1798&127:(var1798|1)) } ;
        var3056;
        var15
    });
    let var3069 : Option<Unit> = Option<Unit>.Some(());
    match (var3069) {
        case caseVar3074 : Option<Enum31> => 
            var3077
        
        case caseVar3083 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) => 
            Option<Int16>.None;
            if (false) { var2992 } else { (var2987&127..Int32(-63)&127:(118|1)) } ;
            var3077
        
        case _ => 
            var222;
            var var3099 : ?((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (UInt16(Int16(UInt16(UInt16(227)))) as ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16));
            var3099
        
        case _ => 
            var3077
        
        case _ => 
            Class455(namedParam904 : var575, namedParam905 : var2341);
            var3077
        
    }
}

func func2176(param2177 : Array<Interface458>) : Enum1262 { // block id: 2178
    ();
    Int32(Int32(4));
    func func2183(namedParam2184 ! : Int8, namedParam2185 ! : Option<Option<Unit>>) : Enum1262 { // block id: 2186
        match ((Enum1262.defaultValue|>func2189)) {
            case caseVar3119 : Range<Int16> => 
                if (var130) { [(), (), (), (), (), (), (), (), (), ()] } else { var3125 } ;
                Enum1262.defaultValue
            
            case _ => 
                ();
                if (false) { var2151 } else { var2151 } ;
                Enum1262.defaultValue
            
        }
    }
;
    let var3195 : Range<UInt32> = (UInt32(108)&127..=UInt32(163)&127:118|1);
    func2183(namedParam2184 : match (match ((UInt8(210)&127..UInt8(144)&127:76|1)) {
            case _ => 
                ();
                Enum1262.defaultValue
            
            case caseVar3156 => 
                var1265
            
            case caseVar3161 => 
                var1265
            
            case caseVar3166 : Range<Int64> => 
                var1798 **= ((-48) & 3);
                if (true) { Enum1262.defaultValue } else { var1265 } 
            
            case _ => 
                Enum1262.defaultValue
            
        }) {
        case caseVar3180 : Range<Int8> => 
            var var3183 : Int8 = Int8(20);
            var3183
        
        case caseVar3187 => 
            Int8(-54)
        
        case _ => 
            var222;
            var3195;
            Int8(107) / ((var417) | 1)
        
        case _ => 
            var222;
            Int8(14) & Int8(116)
        
    }, namedParam2185 : try { // block id: 3207
        var2937 ||= var130;
        let var3215 : ??Unit = Option<Option<Unit>>.None;
        if (var130) { Option<Option<Unit>>.None } else { var3215 } 
    } finally { // block id: 3217
        if (false) { Enum1262.defaultValue } else { Enum1262.defaultValue } ;
        var633 = var633;
        if (false) { Option<Option<Unit>>.None } else { Option<Option<Unit>>.None } 
    })
}



public func func1911(param1912 : (Int8, Int16, Unit, Int8, UInt16, String)) : Bool { // block id: 1913
    if (Float32(var1918) == (Float32(97.0) ** Float32(Int32(Float32(9.0)) & 3))) { // block id: 1927

    };
    var var2144 : (((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)) -> Option<Enum1262> = { lambdaParameter2147 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) => Option<Enum1262>.None };
    let var3498 : () -> Range<Int16> = func486;
    ((var2151|>var2144) ?? (if (false) { var928 } else { [Class455(), var893, Class455(), Class455(namedParam904 : (var1734, Int16(-55), (), Int8(-63), var2353, var426), namedParam905 : var2341), Class455(namedParam904 : (Int8(58), Int16(-59), var222, var1054, UInt16(137), "Q=Qa{N07YK!"), namedParam905 : var2341), Class455(var3498), Class455(namedParam904 : (var1734, Int16(0), var222, Int8(-12), var2353, "}u`%oTPa{9`"), namedParam905 : Option<Range<UInt64>>.None), var893, Class455(), Class455(namedParam904 : var575, namedParam905 : var2341)] } |>func2176));
    false
}

func func1903(namedParam1904 ! : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)), optionalParam1905 ! : Option<Range<UInt64>> = (67.0 as Range<UInt64>)) : Float32 { // block id: 1908
    var var3561 : ((Int8, Int16, Unit, Int8, UInt16, String)) -> Bool = func1911;
    if ((if (true) { var2359 } else { var575 } |>var3561)) { if (match (var1918) {
        case _ => 
            Option<Unit>.Some(var3488);
            var var3576 : UInt64 = UInt64(137);
            var3576++;
            var130
        
    }) { // block id: 3579
        if (true) { '3' } else { var240 } 
    } else { // block id: 3584
        if (false) { 'm' } else { var474 } 
    } } else { try { // block id: 3590
        if (true) { 'H' } else { var240 } 
    } finally { // block id: 3595
        ();
        if (true) { var240 } else { 'R' } 
    } } ;
    var var3625 : Range<UInt16> = (UInt16(72)&127..=UInt16(92)&127:3|1);
    if (try { // block id: 3603
        Int32(-8) <= Int32(79)
    } finally { // block id: 3607
        var222;
        var3488;
        true
    }) { // block id: 3611
        var var3670 : UInt64 = UInt64(124);
        try (resource = Class455()) { // block id: 3613

        } finally { // block id: 3614
            var var3620 : Int8 = Int8(2);
            let var3653 : UInt8 = UInt8(80);
            if (true) { ((var3620&127..=Int8(107)&127:(var1798|1)), var3625, var2453, var1153, [(), (), (), (), (), (), (), (), (), ()], var657, var402, false, var1918) } else { (var1003, var3625, (var575, (Int32(40)&127..=Int32(9)&127:(var1798|1)), var402, [var402, UInt8(101), var402, var402, var402, UInt8(178), var402, var3653, UInt8(199), var3653], Int32(3), (UInt64(172)&127..UInt64(31)&127:107|1)), var1153, [(), (), (), (), (), (), (), (), (), ()], (Int16(70)&127..=var633&127:((-87)|1)), UInt8(62), var2614, var1918) } ;
            var3670 ^= var3670
        };
        var var3678 : UInt8 = UInt8(Int8(-66));
        if (true) { // block id: 3675
            var3678 += var402;
            var1918
        } else { // block id: 3683
            -Int8(-127);
            var1918
        }
    } else if (match {
        case (Option<Bool>.Some(var1284) ?? true) => 
        var2453;
        var2937
        case _ => 
        ();
        var15--;
        var1284
    }) { // block id: 3700
        var loopTimeVar3708 : Int64 = 0;
        while ((true) && loopTimeVar3708 < 100 ) {
            loopTimeVar3708++;
            Option<Array<Array<Unit>>>.None;
            var633--
        };
        Float32(var1918)
    } else { // block id: 3711
        try (resource = Class455()) { // block id: 3713
            var2151;
            var1798 **= (var1798 & 3);
            var633 >>= ((var633) & 7)
        } finally { // block id: 3721
            var3488;
            var3725 *= var3725
        };
        ((80&127..=12&127:92|1) as (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)));
        var1918 ** Float32(Int32(Float32(-91.0)) & 3)
    }
}


public func func1851(param1852 : (Range<UInt8>, Array<Unit>, UInt32, Int16, Range<UInt32>, Range<Int8>, Range<Int8>)) : Float32 { // block id: 1853
    let var1863 : Unit = ();
    var var1867 : UInt64 = UInt64(141);
    var var1893 : ?Enum31 = (Int8(UInt8(154)) as Enum31);
    func1575(match ((Enum1262.defaultValue as (Enum483, Int32))) {
        case caseVar1860 : Enum483 => 
            var1863;
            var1867 **= (UInt64(91) & 3);
            (var417&127..=Int8(-106)&127:(var1798|1))
        
        case _ => 
            [UInt8(118), UInt8(174), var402, UInt8(246), UInt8(245), UInt8(165), var402, UInt8(75), var402, UInt8(119)];
            Float32(88.0);
            var1003
        
        case _ => 
            var1893;
            var222;
            let var1899 : Range<Int8> = (Int8(-124)&127..Int8(-72)&127:(-105)|1);
            var1899
        
    });
    var var3745 : UInt16 = UInt16(UInt16(Int16(-93)));
    let var3771 : Bool = true;
    let var3830 : String = "UK(1S5=bV5";
    func1903(namedParam1904 : if (var130) { // block id: 3735
        (var1734, UInt8(94), Option<Rune>.None, var3741, var426, var3745, (var3741, (-96), var3753, UInt64(85), var15, var426, var3745))
    } else if (var3771) { // block id: 3773
        var928;
        ();
        let var3777 : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) = (Int8(101), UInt8(2), Option<Rune>.Some('g'), (), "%yrMpBC#z3", UInt16(101), ((), (-57), (Int8(-39), Int16(Int16(-16)), (), Int8(11), UInt16(91), "Q6a{HT@0_|a"), UInt64(UInt16(UInt8(249))), UInt32(Int8(Int8(-81))), "~[:eoIyuDb", UInt16(UInt16(Int16(28)))));
        var3777
    } else { // block id: 3807
        [(Int32(119)&127..=Int32(-52)&127:91|1), (Int32(-32)&127..=Int32(109)&127:(-30)|1), (Int32(7)&127..Int32(116)&127:(-89)|1), (Int32(-57)&127..Int32(-79)&127:(-123)|1), (Int32(120)&127..Int32(35)&127:(-83)|1), (Int32(-117)&127..=Int32(44)&127:71|1), (Int32(47)&127..Int32(-105)&127:(-68)|1), (Int32(-41)&127..Int32(-19)&127:(-75)|1), (Int32(51)&127..=Int32(59)&127:28|1), (Int32(-92)&127..=Int32(18)&127:(-61)|1)];
        var222;
        let var3824 : UInt8 = UInt8(UInt8(172));
        if (var2937) { (var417, UInt8(95), Option<Rune>.Some('9'), (), var426, var3745, var2949) } else { (Int8(-25), var3824, Option<Rune>.None, (), var3830, UInt16(104), (var3488, var1798, var2359, var695, UInt32(209), """
JB.Zs
HMpVa{
""", var3745)) } 
    }) - if (true) { // block id: 3843
        var var3845 : Unit = ();
        var3845;
        Float32(56.0)
    } else { // block id: 3848
        var1918
    };
    let var3898 : Unit = ();
    var var3901 : Bool = false;
    var var3935 : ?Unit = Option<Unit>.None;
    var var3976 : Float32 = Float32(53.0);
    if (if (try { // block id: 3853
        var222;
        false && var130
    } catch (_) { // block id: 3858
        var222;
        var222;
        var2614 || false
    }) { // block id: 3864
        var3867 %= Float64((Int32(40.0)) | 1);
        var2353 == UInt16(175)
    } else if (match {
        case var2937 => 
        var402 < var402
        case true => 
        ((var417, var633, (), Int8(21), UInt16(223), """
Y42\\W
9dXP:
"""), true, false, [(), (), (), (), (), (), (), (), (), ()]);
        var1054 > var1054
        case _ => 
        var3898;
        var3901
    }) { // block id: 3903
        if (var130) { [var222, (), (), var3488, var222, var3913, (), (), (), var3913] } else { [(), var3488, (), (), var3913, var3488, (), var3741, var1863, ()] } ;
        let var3943 : ?Unit = ((Enum483.defaultValue, Int32(UInt8(199))) as Unit);
        [Option<Unit>.Some(()), var1759, var3935, Option<Unit>.Some(()), var3364, var3935, var1759, var3943, Option<Unit>.Some(()), var1759];
        true
    } else { // block id: 3953
        false
    }) { // block id: 3955
        Float32(Float32(-126.0))
    } else if (false) { // block id: 3959
        (var3269 ?? ());
        (Option<Unit>.Some(var222) ?? ());
        var1918 / Float32((Int32(var1918)) | 1)
    } else { // block id: 3974
        var3976
    }
}

public func func1820(optionalParam1821 ! : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), Int64((-28)), (Int8(Int8(112)), Int16(95), (), Int8(-70), UInt16(UInt8(160)), "s&*c:Xy6Kx"), UInt64(97), UInt32(64), ###"Uix.u+)a{ $"###, UInt16(UInt16(Int8(73)))), (), Int16(20)), optionalParam1844 ! : Range<UInt64> = (UInt64(91)&127..UInt64(198)&127:(125|1))) : Float32 { // block id: 1849
    let var4048 : () -> Range<Int16> = func486;
    try { // block id: 3980
        var var4005 : (Range<UInt8>, Array<Unit>, UInt32, Int16, Range<UInt32>, Range<Int8>, Range<Int8>) = ((UInt8(UInt8(UInt8(240)))&127..UInt8(UInt8(147))&127:(67|1)), [(), (), (), (), (), (), (), (), (), ()], UInt32(199), Int16(-80), (UInt32(252)&127..=UInt32(Int32(41))&127:(Int64(UInt8(26))|1)), (Int8(-27)&127..=Int8(Int8(Int8(69)))&127:((-66)|1)), (Int8(-94)&127..Int8(73)&127:(Int64(Int16(-41))|1)));
        if (true) { ((var402&127..=UInt8(9)&127:((-122)|1)), [(), (), var222, var3488, (), var3488, var222, (), var222, ()], UInt32(166), Int16(-124), (UInt32(202)&127..UInt32(141)&127:70|1), (Int8(-93)&127..=Int8(28)&127:(-120)|1), (Int8(-12)&127..Int8(3)&127:107|1)) } else { var4005 } 
    } finally { // block id: 4034
        var var4043 : () -> Range<Int16> = func486;
        [Class455(), var893, Class455(func486), var893, Class455(var4043), var893, Class455(var4048), var893, Class455(namedParam904 : var2359, namedParam905 : var2341), var893];
        var var4058 : (Range<UInt8>, Array<Unit>, UInt32, Int16, Range<UInt32>, Range<Int8>, Range<Int8>) = ((UInt8(216)&127..=UInt8(UInt8(49))&127:(Int64(UInt32(Int16(124)))|1)), [(), (), (), (), (), (), (), (), (), ()], UInt32(147), Int16(Int16(Int8(-97))), (UInt32(100)&127..UInt32(168)&127:0|1), (Int8(Int8(UInt8(203)))&127..Int8(12)&127:((-24)|1)), (Int8(-18)&127..=Int8(-94)&127:((-26)|1)));
        var var4094 : Range<Int8> = (Int8(-75)&127..Int8(-65)&127:(29|1));
        if (false) { var4058 } else { ((UInt8(134)&127..UInt8(232)&127:(-13)|1), var2128, UInt32(0), var633, (var15&127..=UInt32(159)&127:(var546|1)), (Int8(-98)&127..Int8(70)&127:44|1), var4094) } 
    }|>func1851
}

func func1475(param1476 : Range<Int32>) : (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) { // block id: 1477
    let var4128 : ?Unit = ([Class455(), Class455(), Class455(), Class455(func486), Class455(func486), Class455(), Class455(namedParam904 : (Int8(-26), Int16(-9), (), Int8(118), UInt16(169), ###"jb<4IgZC-x"###), namedParam905 : (false as Range<UInt64>)), Class455(), Class455(func486), Class455(namedParam904 : (Int8(-118), Int16(-108), (), Int8(30), UInt16(72), "2eF$2MLKJ\""), namedParam905 : (Option<UInt32>.Some(UInt32(144)) as Range<UInt64>))] as Unit);
    let var4206 : Float64 = 57.0;
    if (Class455.var1484[1]) { // block id: 1497
        var1501[2];
        let var1550 : ?Enum31 = (Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.Some((((), (-60), (Int8(77), Int16(-118), (), Int8(45), UInt16(234), """
J=;1-
CcBx$
"""), UInt64(28), UInt32(228), """
ZPw=3
Hm$uX
""", UInt16(164)), (), Int16(Int8(-106)))) as Enum31);
        let var1792 : (Range<Int8>) -> Array<Option<Unit>> = func1575;
        func func1543<T0, T1>(namedParam1544 ! : Option<Range<Int16>>, namedParam1545 ! : Array<Int32>, optionalParam1546 ! : Rune = '2') : Unit where T0 <: Int64, T1 <: Enum31 { // block id: 1548
            var1550;
            (((var417&127..=Int8(93)&127:(var1798|1))|>var1792)[4] ?? var222)
        }
;
        func1543<Int64, Enum31>(namedParam1544 : var1655, namedParam1545 : [Int32(-85), Int32(94), Int32(-127), Int32(62), Int32(-73), Int32(-9), Int32(-105), Int32(-4), Int32(44), Int32(-80)]);
        var loopTimeVar1808 : Range<UInt64> = (UInt64(UInt64(Int16(Int8(49))))&127..=UInt64(241)&127:(Int64(Int32(UInt8(67)))|1));
        for (i in loopTimeVar1808 where false) {
            continue
        }
    } else if (func1820() > match (var695) {
        case _ => 
            -var1918
        
        case 253 => 
            var3725 ^= UInt64(150);
            if (var130) { Option<Range<UInt64>>.Some((UInt64(75)&127..=UInt64(54)&127:(-67)|1)) } else { Option<Range<UInt64>>.None } ;
            var1918
        
        case _ => 
            if (true) { var1665 } else { [var1759, Option<Unit>.Some(()), var4128, var3364, Option<Unit>.None, var1759, var3364, var1759, var1759, var4191] } ;
            var1918 % Float32((Int32(Float32(56.0))) | 1)
        
    }) { // block id: 4196
        ((UInt64(43)&127..=UInt64(32)&127:(-113)|1), var15, (var2949, (), Int16(87)), (Int8(-63)&127..Int8(-110)&127:(-116)|1), var4206, UInt32(221));
        var loopTimeVar4212 : Range<UInt64> = (UInt64(UInt8(28))&127..=UInt64(Int64(UInt64(UInt32(227))))&127:((-12)|1));
        for (i in loopTimeVar4212 where var2937) {

        }
    };
    var var4226 : Int16 = Int16(UInt16(191));
    (try { // block id: 4223
        var4226 ^= Int16(30);
        ();
        var4232
    } finally { // block id: 4241
        Option<(Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16))>.Some((var417, UInt8(120), Option<Rune>.Some('l'), var3741, var426, var2353, var2949))
    } ?? var315)
}

public func func4256(param4257 : UInt8) : Range<Int32> { // block id: 4258
    var loopTimeVar4285 : Range<UInt64> = (UInt64(206)&127..=UInt64(150)&127:((-63)|1));
    for (i in loopTimeVar4285 where (if (false) { var4264 } else { Option<Bool>.None }  ?? (Option<Option<Unit>>.None is Enum31))) {
        if (true) { // block id: 4273
            Int16(118)
        } else if (false) { // block id: 4276
            var3913;
            Int16(112)
        } else { // block id: 4279
            [(Int32(15)&127..=Int32(-50)&127:(-95)|1), (Int32(-110)&127..Int32(123)&127:(-92)|1), (Int32(75)&127..Int32(108)&127:(-49)|1), (Int32(-86)&127..Int32(-84)&127:(-106)|1), (Int32(70)&127..=Int32(-60)&127:93|1), (Int32(-14)&127..=Int32(-38)&127:81|1), (Int32(19)&127..Int32(-28)&127:(-7)|1), (Int32(-25)&127..=Int32(84)&127:(-75)|1), (Int32(-50)&127..Int32(-77)&127:23|1), (Int32(-94)&127..Int32(-4)&127:(-126)|1)];
            [Int32(-59), Int32(116), Int32(-125), Int32(122), Int32(80), Int32(-56), Int32(25), Int32(-15), Int32(65), Int32(104)];
            Int16(57) / ((Int16(-92)) | 1)
        }
    };
    var var4348 : Unit = ();
    var var4384 : Int32 = Int32(-11);
    if ((try { // block id: 4293
        Int16(-76);
        UInt16(52);
        UInt8(43)
    } catch (e: Exception) { // block id: 4297
        let var4299 : ??Unit = ([(), (), (), (), (), (), (), (), (), ()] as Option<Unit>);
        var4299;
        ();
        var402 - var402
    } finally { // block id: 4306
        var2987 |= Int32(-117);
        UInt8(154)
    } <= if (var1284) { // block id: 4313
        var var4342 : Unit = ();
        if (false) { (Int8(39), UInt8(50), var422, var3488, "?j34p>a!2#", var2353, (var3913, 20, (Int8(-71), var633, var3741, var1054, UInt16(203), var426), var3725, UInt32(148), """
B#jay
Amn-!
""", var2353)) } else { (var417, var402, var422, var4342, "#U=]1oXym.", UInt16(220), var2949) } ;
        var4348;
        UInt8(182)
    } else if (false) { // block id: 4352
        ();
        param4257 | param4257
    } else { // block id: 4357
        var493;
        [(), (), (), (), (), (), (), (), (), ()];
        var402
    })) { match ([var3913, (), var222, (), (), (), (), var222, var4348, var3488]) {
        case _ : Option<Unit> => 
            if (true) { Option<Int16>.Some(var633) } else { var2683 } ;
            (var1045&127..=var4384&127:((-115)|1))
        
        case _ => 
            ();
            (Int32(94)&127..Int32(-128)&127:(var2503|1))
        
    } } else { var2992 } 
}




public func func851(param852 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16), param853 : Enum483, optionalParam854 ! : Bool = false, namedParam856 ! : Rune) : Array<Interface458> { // block id: 857
    func func859(param860 : Range<Int32>, optionalParam861 ! : Range<UInt64> = (UInt64(Int8(UInt8(206)))&127..=UInt64(Int32(Int32(Int8(94))))&127:(Int64(UInt32(Int16(UInt16(196))))|1)), namedParam874 ! : (UInt8) -> (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16))) : Unit { // block id: 877
        var var1128 : UInt16 = UInt16(UInt8(14));
        (try { // block id: 884
            ();
            Option<Range<UInt64>>.None
        } finally { // block id: 887
            var var1007 : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(28), Int16(-91), (), Int8(UInt8(Int8(-110))), UInt16(UInt8(UInt8(Int8(114)))), "-Pu.1:v(,`");
            let var1021 : ?Range<UInt64> = ((Enum483.defaultValue, Int32(103)) as Range<UInt64>);
            if (false) { [Class455(), var893, var893, Class455(), var893, var893, var893, Class455(), Class455(), Class455(namedParam904 : var1007, namedParam905 : var1021)] } else { var928 } ;
            let var1062 : Array<UInt8> = Array<UInt8>(10){ i => UInt8(Int8(44)) };
            if (optionalParam854) { (var575, (Int32(-76)&127..Int32(-109)&127:(-83)|1), var402, [var402, UInt8(176), var402, UInt8(98), var402, UInt8(72), UInt8(235), var402, UInt8(227), UInt8(237)], var1045, optionalParam861) } else { ((var417, Int16(-7), var222, var1054, UInt16(93), var426), param860, UInt8(234), var1062, var1045, optionalParam861) } ;
            Option<Range<UInt64>>.None
        } ?? match (try { // block id: 1086
                (param853, var1045);
                var633 << ((var633) & 7)
            } catch (e: Exception) { // block id: 1093
                var222;
                var222;
                -var633
            }) {
            case _ : Range<Int16> => 
                (UInt64(108)&127..=UInt64(201)&127:19|1)
            
            case -115 => 
                ();
                optionalParam861
            
            case -115 => 
                var var1112 : UInt8 = UInt8(UInt8(95));
                var1112--;
                param853;
                optionalParam861
            
            case -88 | -3 => 
                if (optionalParam854) { optionalParam861 } else { optionalParam861 } 
            
            case _ => 
                var1128 %= ((var149) | 1);
                if (false) { (UInt64(151)&127..=UInt64(108)&127:((-68)|1)) } else { (var695&127..UInt64(36)&127:((-101)|1)) } 
            
        });
        match (if (optionalParam854) { Enum483.defaultValue } else { Enum483.defaultValue } ) {
            case _ : Array<Unit> => 
                var1153
            
            case defaultValue => 
                var222;
                [var1045, Int32(47), var1045, Int32(-43), Int32(-1), var1045, Int32(99), Int32(-77), var1045, var1045]
            
            case defaultValue => 
                [Int32(-47), Int32(70), Int32(-44), Int32(-75), Int32(108), var1045, var1045, Int32(-96), Int32(83), Int32(-33)]
            
            case caseVar1186 : Int32 => 
                let var1189 : Float32 = Float32(115.0);
                var1189;
                var633 + Int16(114);
                var1153
            
            case _ => 
                [Int32(102), Int32(-111), Int32(-80), Int32(66), Int32(-38), Int32(72), Int32(-60), Int32(64), Int32(121), Int32(89)]
            
        }[9];
        Class455.var1203 >>= ((Aggregate1206.func1211(43, (20&127..var546&127:(var546|1)), param852)) & 7)
    }
;
    let var1422 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    func func1328(namedParam1329 ! : Int16, namedParam1330 ! : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16), optionalParam1331 ! : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(Int8(UInt8(UInt8(75)))), Int16(-75), (), Int8(-24), UInt16(176), "l/<Gza{qJ>C"), optionalParam1342 ! : UInt8 = UInt8(93)) : Range<Int32> { // block id: 1344
        Option<Unit>.None;
        let var1355 : (Range<Int8>, Range<UInt16>, ((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>), Array<Int32>, Array<Unit>, Range<Int16>, UInt8, Bool, Float32) = ((Int8(-69)&127..=Int8(-83)&127:(100|1)), (UInt16(166)&127..UInt16(Int16(UInt8(241)))&127:(56|1)), ((Int8(Int8(104)), Int16(81), (), Int8(5), UInt16(UInt16(78)), """
8i\\:A
5G&;\"
"""), (Int32(77)&127..Int32(Int16(-110))&127:(85|1)), UInt8(178), [UInt8(114), UInt8(155), UInt8(150), UInt8(104), UInt8(118), UInt8(14), UInt8(159), UInt8(143), UInt8(145), UInt8(18)], Int32(UInt16(Int8(108))), (UInt64(108)&127..=UInt64(232)&127:116|1)), [Int32(37), Int32(34), Int32(27), Int32(-36), Int32(65), Int32(-48), Int32(14), Int32(117), Int32(82), Int32(-104)], [(), (), (), (), (), (), (), (), (), ()], (Int16(Int8(-8))&127..Int16(Int8(UInt8(240)))&127:(Int64(Int32(Int32(116)))|1)), UInt8(UInt8(UInt8(UInt8(72)))), true, Float32(Float32(Float32(Float32(-7.0)))));
        (UInt64(210), var1355, UInt64(119), Int32(-66), Int16(49), var1422)[1][4][4];
        var1430[4]
    }
;
    let var1436 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), Int64(UInt16(68)), (Int8(UInt8(134)), Int16(Int8(62)), (), Int8(-103), UInt16(194), "9pfocPb<9j"), UInt64(130), UInt32(64), ###":n]>y9-(3Y"###, UInt16(10));
    let var1469 : Unit = ();
    let var4254 : (Range<Int32>) -> (Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16)) = func1475;
    func859(func1328(namedParam1329 : var633, namedParam1330 : (var1436, (), var633), optionalParam1331 : if (var1284) { (Int8(-29), var633, var222, var1054, UInt16(253), "e*5pt6E>:+") } else { (Int8(14), var633, var1469, var1054, UInt16(194), var426) } ), namedParam874 : (func4256~>var4254));
    var var4554 : () -> Range<Int16> = func486;
    try { // block id: 4397
        var var4417 : UInt16 = UInt16(133);
        var var4424 : Int64 = Int64(Int32(Int8(Int8(UInt8(189)))));
        if (optionalParam854) { // block id: 4400
            Option<Unit>.None;
            ((Int8(-123), var633, var1469, Int8(64), UInt16(21), var426), var1284, true, [(), (), (), (), (), (), (), (), (), ()])
        } else if (var130) { // block id: 4414
            var4417 >>= ((var4417) & 7);
            (4&127..var1798&127:(var4424|1));
            var var4433 : ((Int8, Int16, Unit, Int8, UInt16, String), Bool, Bool, Array<Unit>) = ((Int8(77), Int16(-56), (), Int8(45), UInt16(UInt8(168)), """
$qHz?
0V!BI
"""), true, true, [(), (), (), (), (), (), (), (), (), ()]);
            if (true) { var4433 } else { (var3753, var1284, var2614, [(), (), (), var222, var3913, var3913, (), var3488, (), var1469]) } 
        } else { // block id: 4461
            var3913;
            if (true) { var4466 } else { var4466 } 
        };
        Option<Array<Interface458>>.None.getOrThrow()
    } finally { // block id: 4522
        ();
        let var4536 : Interface458 = Class455(namedParam904 : (Int8(-30), Int16(-73), (), Int8(Int8(UInt8(44))), UInt16(UInt8(Int8(-5))), "Vx-XbffQ6q"), namedParam905 : (Option<(Int8, UInt8, Option<Rune>, Unit, String, UInt16, (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16))>.None as Range<UInt64>));
        var var4719 : Interface458 = Class455(namedParam904 : (Int8(Int8(112)), Int16(55), (), Int8(103), UInt16(UInt16(6)), """
#]-#[
HE',9
"""), namedParam905 : (Enum483.defaultValue as Range<UInt64>));
        try { // block id: 4525
            if (var130) { var657 } else { var657 } ;
            if (false) { var928 } else { [Class455(), var4536, Class455(), Class455(var4554), var4536, Class455(), Class455(var4554), Class455(var4554), Class455(func486), Class455()] } 
        } catch (_) { // block id: 4566
            let var4574 : Interface458 = Class455(func486);
            if (var130) { [Class455(), var893, var4574, Class455(Enum31.enumValue650(var2987, (Int16(55)&127..Int16(113)&127:62|1), var474, UInt16(76)), 'h'), Class455(namedParam904 : (var1734, Int16(0), (), var417, UInt16(30), "25^X!cxik'"), namedParam905 : var2341), var4574, var4536, Class455(namedParam904 : var2359, namedParam905 : var2341), var4574, var893] } else { [Class455(), var893, Class455(var34, 'l'), var893, var893, var4536, Class455(var779, 'v'), var4574, var893, var4574] } 
        } finally { // block id: 4703
            var var4733 : Interface458 = Class455();
            if (false) { [var893, Class455(var34, 'N'), Class455(), var893, Class455(), var893, var4716, var4719, var4733, var4536] } else { var928 } 
        }
    }
}


func func823(optionalParam824 ! : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), 79, (Int8(-57), Int16(Int8(58)), (), Int8(Int8(98)), UInt16(Int8(118)), "bW)5)zm9mh"), UInt64(78), UInt32(78), "xa{6\\a{;9 cQ", UInt16(24)), (), Int16(UInt16(186))), namedParam846 ! : Option<Rune>) : Interface458 { // block id: 847
    func851(var2151, if (true) { Enum483.defaultValue } else { var493 } , namedParam856 : (var4748 ?? var240))[5]
}






func func804(optionalParam805 ! : (Int8, Int16, Unit, Int8, UInt16, String) = (Int8(95), Int16(UInt8(126)), (), Int8(84), UInt16(Int8(-24)), "b>%}rcwlZc"), optionalParam815 ! : Enum31 = Enum31.defaultValue, namedParam817 ! : UInt32) : Option<(Enum483, Int32)> { // block id: 818
    var222;
    var var4773 : ?Interface458 = (Option<Unit>.None as Interface458);
    if (false) { func823(namedParam846 : (Option<Option<Rune>>.Some(var422) ?? Option<Rune>.Some('a'))) } else { (match (Option<Int16>.Some(Int16(-15))) {
        case _ => 
            var4773
        
        case caseVar4778 => 
            Option<Interface458>.None
        
        case caseVar4783 => 
            var3741;
            var1045 / ((Int32(-21)) | 1);
            var4773
        
        case _ => 
            if (true) { var4773 } else { var4773 } 
        
        case _ => 
            ();
            var var4806 : Rune = '0';
            var var4809 : ?Interface458 = (UInt64(78) as Interface458);
            if (true) { Option<Interface458>.Some(Class455(var772, var4806)) } else { var4809 } 
        
    } ?? if (true) { Class455(Enum31.enumValue2975(var3867, [(Int32(120)&127..Int32(-37)&127:(-97)|1), (Int32(30)&127..Int32(4)&127:16|1), (Int32(35)&127..Int32(-67)&127:82|1), (Int32(-17)&127..Int32(-18)&127:88|1), (Int32(-97)&127..Int32(-80)&127:(-22)|1), (Int32(-84)&127..Int32(-20)&127:123|1), (Int32(-56)&127..Int32(60)&127:(-128)|1), (Int32(64)&127..Int32(98)&127:(-69)|1), (Int32(-29)&127..=Int32(42)&127:40|1), (Int32(-81)&127..Int32(126)&127:(-88)|1)], (Int8(-21), UInt8(6), Option<Rune>.Some(var474), (), var426, var2353, (var3741, (-99), var2359, UInt64(6), namedParam817, var426, UInt16(143)))), '0') } else { Class455(Enum31.enumValue2306(var402, UInt8(124)), 'P') } ) } ;
    (((Option<Option<((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>)>>.None ?? Option<((Int8, Int16, Unit, Int8, UInt16, String), Range<Int32>, UInt8, Array<UInt8>, Int32, Range<UInt64>)>.Some(var2453)) ?? (var4860 ?? ((var1734, var633, var222, Int8(77), UInt16(2), "vv$b9Ao4?<"), (Int32(-34)&127..=Int32(122)&127:(var546|1)), var402, [UInt8(220), UInt8(211), UInt8(6), UInt8(237), UInt8(224), UInt8(189), UInt8(122), UInt8(198), UInt8(122), UInt8(189)], var2987, var1978))) as (Enum483, Int32))
}

func func486(param487 : Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>) : Enum483 { // block id: 488
    var var515 : Interface458 = Class455();
    var var557 : UInt16 = UInt16(UInt16(148));
    Option<Rune>.Some(match (match (var493) {
            case _ => 
                var var499 : Int32 = Int32(-10);
                var499 += var499;
                var499 + Int32(9);
                var493
            
        }) {
        case defaultValue => 
            ();
            'j'
        
        case defaultValue => 
            var515;
            let var520 : ((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16) = (((), (-36), (Int8(-6), Int16(Int16(4)), (), Int8(29), UInt16(Int8(-78)), """
QSnC@
k(?GT
"""), UInt64(225), UInt32(UInt32(Int32(22))), """
H4sD\"
=~,a'
""", UInt16(225)), (), Int16(77));
            var var551 : Int16 = Int16(UInt16(91));
            if (true) { var520 } else { (((), var546, (Int8(100), var551, var222, var417, var557, var426), UInt64(17), var15, var426, UInt16(108)), var222, Int16(11)) } ;
            'i'
        
        case defaultValue => 
            ();
            if (true) { var575 } else { var575 } ;
            'T'
        
        case _ => 
            Enum31.defaultValue;
            var222;
            '7'
        
    });
    var var606 : UInt8 = UInt8(UInt8(161));
    (if (try { // block id: 601
        var130
    } finally { // block id: 603
        var606 |= var402;
        (-101);
        false
    }) { (if (var130) { var615 } else { var615 } ) } else { (if (var130) { Option<Enum31>.None } else { Option<Enum31>.Some(Enum31.defaultValue) } ) }  ?? if (var130) { match (Option<Option<Unit>>.None) {
        case _ => 
            var633;
            if (false) { var34 } else { var34 } 
        
        case _ : Rune => 
            var222;
            Enum31.defaultValue
        
        case _ => 
            ();
            if (true) { Enum31.enumValue650(Int32(-1), var657, var240, UInt16(101)) } else { var34 } 
        
    } } else { (Class455()|>func666) } );
    (func804(optionalParam805 : var575, optionalParam815 : var779, namedParam817 : UInt32(216)) ?? (Enum483.defaultValue, var1045))[0]
}

public func func161(param162 : UInt8, optionalParam163 ! : UInt8 = UInt8(135)) : Option<Option<Unit>> { // block id: 165
    var var430 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), Int64(Int8(123)), (Int8(UInt8(UInt8(114))), Int16(Int8(-26)), (), Int8(33), UInt16(191), """
OQ7-n
mPtfB
"""), UInt64(Int8(-98)), UInt32(170), "5&a{z6Tu~(h", UInt16(85));
    ((optionalParam163|>func174)[2] ?? if (((var417, param162, var422, (), var426, UInt16(16), var430) is Range<Int16>)) { // block id: 450
        "[XrwY/Xy}p";
        ();
        'G'
    } else if (Class455.var461) { // block id: 463
        20;
        var var467 : Int64 = (-88);
        var467 &= var467;
        if (var130) { var240 } else { var474 } 
    } else { // block id: 476
        var222;
        if (true) { var240 } else { 'f' } 
    });
    let var4934 : Unit = ();
    match ((try { // block id: 4887
            Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.Some(var4890)
        } catch (_) { // block id: 4917
            Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.None
        } finally { // block id: 4919
            if (false) { Option<Bool>.None } else { Option<Bool>.None } ;
            if (false) { Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.Some(var4890) } else { Option<((Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16), Unit, Int16)>.None } 
        }|>func486)) {
        case _ => 
            var1655;
            [var4934, (), (), var4934, var4934, var3741, var4934, var222, (), ()];
            (Int8(45), UInt8(229), var422, (), "Aj,Ws`*~JX", UInt16(173), var2949)
        
    };
    try { // block id: 4954
        let var4957 : ?Unit = ((UInt8(Int8(UInt8(82)))&127..UInt8(159)&127:(Int64(Int64(Int8(70)))|1)) as Unit);
        var var4973 : ?Interface458 = Option<Interface458>.None;
        match (var4957) {
            case caseVar4969 => 
                var222;
                var4973
            
            case caseVar4977 : Option<Enum1262> => 
                if (true) { Option<Interface458>.Some(var4716) } else { var4973 } 
            
            case _ : ((Int8, Int16, Unit, Int8, UInt16, String), Bool, Bool, Array<Unit>) => 
                if (var2614) { var4973 } else { var4991 } 
            
            case _ => 
                if (true) { var4973 } else { Option<Interface458>.Some(Class455(func486)) } 
            
        };
        if (false) { // block id: 5014
            var3741;
            var1798 << ((94) & 7)
        } else { // block id: 5019
            Option<Unit>.None;
            (-10) % ((var2503) | 1)
        };
        try { // block id: 5025
            var3488;
            if (var1284) { (Int16(-9)&127..=Int16(-3)&127:(-114)|1) } else { (var633&127..var633&127:(var546|1)) } ;
            Option<Option<Unit>>.None
        } finally { // block id: 5035
            var var5038 : Float32 = Float32(13.0);
            var5038 = var5038;
            var5042
        }
    } finally { // block id: 5105
        UInt64(251) ** (var695 & 3);
        var5042
    }
}

public func func27(param28 : String) : Option<Unit> { // block id: 29
    var var40 : Unit = ();
    match (var34) {
        case defaultValue => 
            var40
        
        case caseVar44 => 
            var40;
            ()
        
        case _ : Int32 => 
            ();
            (-125);
            var40
        
        case _ => 
            ()
        
    };
    let var79 : (Unit, Int64, (Int8, Int16, Unit, Int8, UInt16, String), UInt64, UInt32, String, UInt16) = ((), (-23), (Int8(-73), Int16(86), (), Int8(5), UInt16(UInt8(Int8(-36))), "&bEnsyRiJA"), UInt64(126), UInt32(UInt32(Int16(UInt8(20)))), "M3Hteo}a:^", UInt16(Int16(Int8(-10))));
    var var106 : Int64 = Int64(Int16(UInt16(UInt8(UInt8(170)))));
    let var115 : Int16 = Int16(-122);
    var var135 : Int8 = Int8(UInt8(127));
    if (if (false) { // block id: 62
        var34;
        UInt64(47) / ((UInt64(20)) | 1);
        true
    } else { // block id: 68
        var40;
        var var71 : Int32 = Int32(98);
        var71;
        true && false
    }) { var79[2] } else { try { // block id: 103
        var106 *= var106;
        var115 & Int16(-82);
        var var120 : Int8 = Int8(-32);
        (var120, Int16(-71), var40, Int8(67), UInt16(136), param28)
    } finally { // block id: 127
        if (var130) { (var135, var115, var40, var135, UInt16(188), param28) } else { (var135, var115, (), Int8(-105), var149, param28) } 
    } } [2];
    (func161(UInt8(117)) ?? var4191)
}

main(): Int64 {
    try {
        let var9 : Bool = ('X' is UInt64);
        var loopTimeVar20 : Int64 = 0;
        while ((true && var9) && loopTimeVar20 < 100 ) {
            loopTimeVar20++;
            var15 /= ((UInt32(99)) | 1)
        };
        var loopTimeVar5118 : Int64 = 0;
        ((###"!etb<m?Ly4"###|>func27) ?? while ((false) && loopTimeVar5118 < 100 ) {
            loopTimeVar5118++;

        });
        if (true) { // block id: 5122
            ();
            ();
            var2503
        } else if (var9) { // block id: 5127
            var2987--;
            Option<Int16>.None;
            82 & var2503
        } else { // block id: 5134
            77 | var1798
        } ^ var1798
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var15*var15), 64)
        crccheck.updateBuffer(UInt64(var149*var149), 64)
        crccheck.updateBuffer(UInt64(var402*var402), 64)
        crccheck.updateBuffer(UInt64(var417*var417), 64)
        crccheck.updateBuffer(UInt64(var546*var546), 64)
        crccheck.updateBuffer(UInt64(var633*var633), 64)
        crccheck.updateBuffer(UInt64(var695*var695), 64)
        crccheck.updateBuffer(UInt64(var1045*var1045), 64)
        crccheck.updateBuffer(UInt64(var1054*var1054), 64)
        crccheck.updateBuffer(UInt64(var1734*var1734), 64)
        crccheck.updateBuffer(UInt64(var1798*var1798), 64)
        crccheck.updateBuffer(UInt64(var2353*var2353), 64)
        crccheck.updateBuffer(UInt64(var2503*var2503), 64)
        crccheck.updateBuffer(UInt64(var2987*var2987), 64)
        crccheck.updateBuffer(UInt64(var3725*var3725), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum1262 {

}

extend Aggregate1206 {

}

extend Class455 {

}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_unexpected_declaration_in_scope
// ASSERT: scan parse_expected_left_brace
// ASSERT: scan parse_expected_case


