/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// ERRCHECK: %compiler %cmp_opt %f -o %output


public var var37 : Bool = ((-62) is Int16)
var var101 : Array<UInt16> = [UInt16(143), UInt16(45), UInt16(83), UInt16(244), UInt16(120), UInt16(127), UInt16(226), UInt16(151), UInt16(30), UInt16(64)]
public var var129 : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = (UInt8(74), Int32(UInt32(UInt8(Int8(-88)))), UInt64(UInt64(Int16(-123))), "WMRFrCZQC!", UInt16(23), UInt32(167), "z\\W,\">qP_%", ())
let var220 : Int64 = Int64(Int32(Int32(-66)))
public var var303 : UInt16 = UInt16(Int16(5))
let var327 : UInt64 = UInt64(47)
public var var377 : Int32 = Int32(-124)
public let var391 : UInt16 = UInt16(UInt16(UInt16(203)))
let var396 : UInt32 = UInt32(UInt8(UInt8(Int8(UInt8(50)))))
var var441 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var500 : Aggregate496 = Aggregate496()
public let var562 : Unit = ()
let var577 : String = """
$ZKW-
O\\b\\ 
"""
var var699 : Class690 = Class690()
public let var848 : Interface693 = Class690()
let var856 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit) = ([UInt16(Int16(54)), UInt16(UInt8(UInt8(242))), UInt16(UInt16(206)), UInt16(Int16(Int8(21))), UInt16(42), UInt16(4), UInt16(9), UInt16(UInt16(3)), UInt16(Int16(Int8(-53))), UInt16(UInt8(Int8(-120)))], (UInt8(228)&127..=UInt8(19)&127:(Int64(UInt32(245))|1)), (UInt8(113), Int32(-116), UInt64(186), "^<fc:${var577}%${var577}DG-${var577}@", UInt16(10), UInt32(Int16(-128)), ###"p${var577}g4E=1${var577}G|R${var577}a"###, ()), (UInt8(51)&127..UInt8(73)&127:50|1), ())
let var920 : Int8 = Int8(54)
public var var1003 : UInt8 = UInt8(1)
public var var1045 : Option<Array<Int8>> = Option<Array<Int8>>.None
public var var1084 : Int8 = Int8(UInt8(Int8(-5)))
public var var1319 : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) = (Int16(-111), UInt64(172), (UInt8(UInt8(Int8(121))), Int32(UInt16(86)), UInt64(Int8(UInt8(42))), "}HZ${var577}b@VLW(5", UInt16(225), UInt32(Int16(-125)), """
_${var577}}!\"a{
9I8${var577}SJ
""", ()), (UInt8(Int8(UInt8(227))), Int32(-118), UInt64(UInt64(185)), ###".Q&${var577}M0${var577}/${var577}37%y"###, UInt16(122), UInt32(76), """
OMGpi
El^dI
""", ()), UInt64(20), (UInt8(129)&127..=UInt8(140)&127:(Int64(UInt64(236))|1)))
let var1468 : Bool = (Class690() is Int32)
let var1507 : Interface695 = Class690()
public let var1628 : Range<Int8> = (Int8(20)&127..=Int8(-79)&127:(66|1))
public let var1673 : Int64 = 91
var var1676 : Bool = false
var var1679 : Array<Rune> = Array<Rune>(10){ i => 'g' }
var var1788 : Array<Range<Int16>> = [(Int16(101)&127..=Int16(-25)&127:126|1), (Int16(98)&127..Int16(-78)&127:100|1), (Int16(21)&127..Int16(-76)&127:70|1), (Int16(-91)&127..=Int16(-121)&127:(-13)|1), (Int16(125)&127..Int16(-39)&127:71|1), (Int16(59)&127..Int16(-42)&127:42|1), (Int16(-58)&127..=Int16(57)&127:102|1), (Int16(-40)&127..=Int16(33)&127:(-69)|1), (Int16(-121)&127..=Int16(71)&127:68|1), (Int16(110)&127..Int16(31)&127:(-121)|1)]
public var var1794 : Int64 = Int64(Int16(UInt8(208)))
public var var1835 : Range<UInt64> = (UInt64(213)&127..UInt64(204)&127:(-93)|1)
var var1841 : (Range<UInt8>, Array<UInt16>, UInt64, Unit) = ((UInt8(Int8(90))&127..UInt8(Int8(UInt8(195)))&127:((-54)|1)), [UInt16(81), UInt16(22), UInt16(94), UInt16(101), UInt16(238), UInt16(19), UInt16(229), UInt16(30), UInt16(50), UInt16(237)], UInt64(Int32(-47)), ())
public var var1871 : Range<UInt8> = (UInt8(52)&127..=UInt8(57)&127:44|1)
var var1893 : Range<Int16> = (Int16(103)&127..Int16(-24)&127:79|1)
let var1908 : Int16 = Int16(UInt8(UInt8(Int8(UInt8(194)))))
let var1966 : Int16 = Int16(33)
var var2001 : Int8 = Int8(12)
var var2406 : Interface696 = Class690()
var var2480 : UInt32 = UInt32(UInt16(UInt8(Int8(UInt8(94)))))
let var2498 : Option<Unit> = Option<Unit>.None
let var2505 : (Int8, Bool, UInt32, Option<Bool>, Array<Unit>) = (Int8(16), ((UInt8(126)&127..=UInt8(191)&127:(125|1)) is UInt8), UInt32(Int16(-97)), (Option<Interface695>.None as Bool), [(), (), (), (), (), (), (), (), (), ()])
let var2538 : Option<(UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)> = Option<(UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)>.None
public var var2684 : (Float64, (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>), Float64, Range<UInt64>, Range<Int32>) = (42.0, (Int16(99), UInt64(71), (UInt8(UInt8(165)), Int32(-38), UInt64(UInt64(129)), "4y*S`n=uZ@", UInt16(253), UInt32(UInt8(95)), ###"%NYCft(${var577}9 ${var577}z"###, ()), (UInt8(Int8(-127)), Int32(UInt32(67)), UInt64(81), "ESsp.BoRbz", UInt16(UInt16(41)), UInt32(197), """
GOjM%${var577}
k${var577}`${var577}T[/${var577}
""", ()), UInt64(2), (UInt8(24)&127..UInt8(212)&127:(-58)|1)), Float64(Float64(Float32(-22.0))), (UInt64(8)&127..=UInt64(182)&127:((-50)|1)), (Int32(60)&127..Int32(48)&127:((-71)|1)))
let var2751 : ?String = ((([UInt16(253), UInt16(84), UInt16(66), UInt16(177), UInt16(166), UInt16(106), UInt16(156), UInt16(159), UInt16(97), UInt16(121)], (UInt8(119)&127..=UInt8(73)&127:(-33)|1), (UInt8(185), Int32(38), UInt64(140), "W)85${var577}Kf${var577}#${var577}uG${var577}v", UInt16(57), UInt32(22), """
-X<-9${var577}
ZJ${var577}ny*
""", ()), (UInt8(143)&127..UInt8(163)&127:((-21)|1)), ()), UInt32(55), 'y', (Int8(UInt8(105))&127..Int8(-76)&127:((-5)|1)), (UInt64(115)&127..=UInt64(252)&127:(-79)|1), (Int8(67)&127..Int8(-106)&127:16|1), UInt16(UInt16(71)), ((Int32(99)&127..Int32(95)&127:(80|1)), 4.0, Int64(Int16(-33)), true, ['l', 'a', 'Y', 'm', 'b', 'i', 'y', '5', 'f', '1'], ((UInt8(109)&127..UInt8(7)&127:((-43)|1)), [(Int16(-23)&127..Int16(31)&127:(-74)|1), (Int16(123)&127..Int16(-76)&127:(-37)|1), (Int16(-5)&127..Int16(-62)&127:101|1), (Int16(15)&127..=Int16(3)&127:(-13)|1), (Int16(-68)&127..Int16(6)&127:84|1), (Int16(-28)&127..=Int16(-74)&127:76|1), (Int16(27)&127..=Int16(-24)&127:(-79)|1), (Int16(27)&127..Int16(-63)&127:18|1), (Int16(-30)&127..=Int16(65)&127:110|1), (Int16(-39)&127..=Int16(56)&127:(-42)|1)]), (Int32(7)&127..=Int32(-96)&127:((-53)|1)))) as String)
var var2814 : Float32 = Float32(15.0)
let var3208 : Option<Array<Class690>> = Option<Array<Class690>>.None
var var3452 : UInt64 = UInt64(240)
public let var3617 : Bool = (Class690() is (Range<UInt8>, Array<UInt16>, UInt64, Unit))
var var3846 : Array<Array<Bool>> = [[true, false, false, true, true, true, false, true, true, true], [true, false, true, true, false, true, false, false, true, true], [true, true, true, false, true, false, false, false, false, false], [false, true, false, true, false, false, false, true, true, false], [false, false, true, true, false, false, true, false, false, true], [false, true, true, false, true, false, true, true, true, false], [true, false, false, true, false, false, false, true, false, false], [false, false, false, false, false, false, true, false, true, false], [false, false, false, false, false, false, true, true, true, false], [true, true, true, false, true, false, true, false, false, true]]
var var3869 : Range<Int32> = (Int32(21)&127..=Int32(-94)&127:91|1)
let var3952 : (Float64, Array<Range<Int16>>, Range<UInt64>, Array<UInt16>, (Float64, (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>), Float64, Range<UInt64>, Range<Int32>), (Range<UInt8>, Array<UInt16>, UInt64, Unit), Int64, ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)), (Range<UInt8>, Array<UInt16>, UInt64, Unit)) = (77.0, [(Int16(-88)&127..=Int16(-25)&127:56|1), (Int16(UInt16(168))&127..Int16(Int16(83))&127:((-95)|1)), (Int16(UInt16(170))&127..Int16(-43)&127:((-114)|1)), (Int16(10)&127..Int16(-21)&127:((-30)|1)), (Int16(83)&127..=Int16(78)&127:109|1), (Int16(UInt16(66))&127..=Int16(85)&127:(Int64(UInt8(142))|1)), (Int16(118)&127..Int16(83)&127:(-94)|1), (Int16(85)&127..Int16(-61)&127:(-15)|1), (Int16(-43)&127..=Int16(UInt8(148))&127:(Int64(UInt16(11))|1)), (Int16(UInt16(141))&127..=Int16(UInt16(145))&127:(Int64(Int32(38))|1))], (UInt64(142)&127..=UInt64(159)&127:((-76)|1)), [UInt16(192), UInt16(60), UInt16(254), UInt16(197), UInt16(228), UInt16(119), UInt16(118), UInt16(79), UInt16(52), UInt16(135)], (110.0, (Int16(60), UInt64(33), (UInt8(67), Int32(-47), UInt64(116), ###"YS${var577}tFRK25<${var577}O${var577}"###, UInt16(240), UInt32(177), "<X${var577}G${var577}xB${var577}%IV=V", ()), (UInt8(142), Int32(-54), UInt64(50), "|`!${var577}Vf${var577}.)${var577}Y2n${var577}", UInt16(50), UInt32(185), """
.;%\\4${var577}
.d${var577}4e>
""", ()), UInt64(Int16(64)), (UInt8(151)&127..=UInt8(189)&127:(73|1))), 126.0, (UInt64(Int8(30))&127..UInt64(112)&127:(Int64(UInt64(195))|1)), (Int32(-81)&127..=Int32(43)&127:(-61)|1)), ((UInt8(UInt8(252))&127..UInt8(UInt8(83))&127:(53|1)), [UInt16(79), UInt16(UInt8(52)), UInt16(UInt16(25)), UInt16(9), UInt16(UInt16(78)), UInt16(UInt8(126)), UInt16(UInt16(239)), UInt16(251), UInt16(100), UInt16(22)], UInt64(UInt32(5)), ()), Int64(UInt64(Int16(79))), (([UInt16(81), UInt16(200), UInt16(48), UInt16(153), UInt16(129), UInt16(62), UInt16(18), UInt16(147), UInt16(105), UInt16(212)], (UInt8(103)&127..UInt8(219)&127:((-53)|1)), (UInt8(22), Int32(-72), UInt64(47), ###"5${var577}='V0WS${var577}&4Z"###, UInt16(127), UInt32(54), """
+a{${var577}RuK
BU]'${var577}*
""", ()), (UInt8(125)&127..=UInt8(203)&127:((-92)|1)), ()), UInt32(Int8(107)), 'H', (Int8(-20)&127..=Int8(5)&127:(Int64(Int16(-18))|1)), (UInt64(83)&127..=UInt64(148)&127:(-98)|1), (Int8(-53)&127..=Int8(125)&127:(-44)|1), UInt16(35), ((Int32(-119)&127..=Int32(-24)&127:(78|1)), (-4.0), Int64(Int16(52)), true, ['W', 'k', 'v', 'r', 'G', 'p', 'E', 'd', '9', 'Y'], ((UInt8(174)&127..UInt8(164)&127:85|1), [(Int16(98)&127..=Int16(95)&127:(-31)|1), (Int16(32)&127..Int16(24)&127:(-70)|1), (Int16(15)&127..Int16(109)&127:90|1), (Int16(97)&127..Int16(-46)&127:67|1), (Int16(-33)&127..=Int16(-15)&127:6|1), (Int16(86)&127..=Int16(106)&127:(-77)|1), (Int16(-67)&127..=Int16(82)&127:99|1), (Int16(105)&127..=Int16(15)&127:(-43)|1), (Int16(15)&127..Int16(49)&127:(-45)|1), (Int16(-54)&127..Int16(-8)&127:36|1)]), (Int32(17)&127..=Int32(-71)&127:104|1))), ((UInt8(81)&127..UInt8(80)&127:(-87)|1), [UInt16(187), UInt16(61), UInt16(Int16(85)), UInt16(62), UInt16(Int16(-114)), UInt16(163), UInt16(Int16(-63)), UInt16(234), UInt16(Int16(124)), UInt16(UInt16(143))], UInt64(UInt32(39)), ()))
let var4201 : (Range<UInt8>, Array<UInt16>, UInt64, Unit) = ((UInt8(155)&127..UInt8(100)&127:9|1), [UInt16(88), UInt16(0), UInt16(144), UInt16(124), UInt16(248), UInt16(80), UInt16(154), UInt16(36), UInt16(223), UInt16(144)], UInt64(195), ())
public var var4246 : (Range<UInt8>, Array<UInt16>, UInt64, Unit) = ((UInt8(UInt8(240))&127..UInt8(UInt8(140))&127:(Int64(Int32(-53))|1)), [UInt16(97), UInt16(237), UInt16(UInt16(33)), UInt16(UInt8(109)), UInt16(1), UInt16(117), UInt16(18), UInt16(74), UInt16(UInt8(20)), UInt16(UInt8(UInt8(157)))], UInt64((-116)), ())
var var4329 : Bool = false
let var4573 : Int64 = Int64(Int32(-98))
public var var4620 : UInt64 = UInt64(UInt8(UInt8(2)))
public let var4722 : UInt64 = UInt64(UInt32(UInt8(116)))
let var4784 : Unit = ()
public let var4833 : Rune = 'N'
var var4845 : (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>) = ((Int32(82)&127..=Int32(90)&127:(-36)|1), Float64(Float32(-83.0)), Int64(UInt16(Int8(Int8(-44)))), ((UInt8(61), Int32(-118), UInt64((-22)), "aWu_kgb${var577}J${var577}m8", UInt16(234), UInt32(Int32(3)), "[Br?f${var577}.${var577}a{${var577}yO${var577}J", ()) is () -> Unit), ['C', 'T', 'm', 'D', 'u', 'C', 'f', 'F', 'N', 'H'], ((UInt8(74)&127..=UInt8(148)&127:(Int64(Int32(34))|1)), [(Int16(-107)&127..Int16(31)&127:((-38)|1)), (Int16(4)&127..Int16(-84)&127:((-22)|1)), (Int16(100)&127..=Int16(-105)&127:(-91)|1), (Int16(21)&127..=Int16(19)&127:(-67)|1), (Int16(12)&127..=Int16(57)&127:(13|1)), (Int16(39)&127..Int16(-86)&127:(124|1)), (Int16(16)&127..Int16(32)&127:(56|1)), (Int16(-31)&127..Int16(-58)&127:((-13)|1)), (Int16(14)&127..=Int16(109)&127:(22|1)), (Int16(88)&127..Int16(-17)&127:(92|1))]), (Int32(-112)&127..Int32(29)&127:(-83)|1))
public var var5006 : Rune = 'j'
var var5010 : Rune = 'Z'
public let var5076 : Int8 = Int8(-12)
let var5104 : ?Int32 = (Class690() as Int32)
let var5292 : Range<Int64> = (Int64(Int16(UInt8(75)))&127..(-28)&127:(4|1))

public func func31(param32 : Int32) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 33
    Int8(-99);
    var var54 : UInt16 = UInt16(UInt8(61));
    if (var37) { // block id: 40
        let var43 : ?Unit = Option<Unit>.None;
        match (var43) {
            case _ : UInt32 => 
                UInt16(162)
            
            case _ => 
                var54 - UInt16(58)
            
            case _ : Option<Unit> => 
                var var63 : Int16 = Int16(-10);
                var63--;
                var54
            
            case caseVar68 : Option<Unit> => 
                ();
                UInt16(66) ** (var54 & 3)
            
            case _ => 
                var54
            
        }
    } else { // block id: 77
        Int8(-2);
        var loopTimeVar82 : Range<UInt64> = (UInt64(Int16(86))&127..=UInt64(183)&127:(Int64(UInt16(Int16(5)))|1));
        for (i in loopTimeVar82 where var37) {

        };
        var101[9]
    };
    var var105 : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = (UInt8(148), Int32(-63), UInt64(117), "#BP.1a{i:G;", UInt16(UInt8(Int8(Int8(56)))), UInt32(Int32(47)), """
2sykM
_r:@8
""", ());
    var105
}

public func func27(param28 : Unit) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 29
    var var124 : Int32 = Int32(-87);
    try { // block id: 121
        ();
        var124
    } catch (e: Exception) { // block id: 126
        ();
        var129;
        Int32(-64) * Int32(90)
    }|>func31
}

func func148(param149 : Range<Int16>) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 150
    var var154 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit) = ([UInt16(26), UInt16(233), UInt16(77), UInt16(215), UInt16(242), UInt16(91), UInt16(196), UInt16(173), UInt16(186), UInt16(167)], (UInt8(127)&127..=UInt8(UInt8(225))&127:(64|1)), (UInt8(UInt8(67)), Int32(UInt8(UInt8(109))), UInt64(Int32(UInt16(143))), "H@'a8tNjwt", UInt16(0), UInt32(UInt8(UInt8(167))), "!A^a{vB,ktU", ()), (UInt8(159)&127..UInt8(88)&127:111|1), ());
    var154[2]
}


func func188(param189 : Bool) : Int8 { // block id: 190
    var129;
    let var202 : Array<Int8> = [Int8(-83), Int8(-68), Int8(-83), Int8(-46), Int8(8), Int8(-109), Int8(56), Int8(-36), Int8(6), Int8(98)];
    Int8((Option<Array<Int8>>.None ?? var202)[4])
}

public func func182<T0>(param183 : Unit) : Range<Int16> { // block id: 184
    var var206 : (Bool) -> Int8 = { lambdaParameter209 : Bool => Int8(98) };
    Int32(UInt8((true|>var206)));
    var var246 : Range<Int16> = (Int16(-40)&127..=Int16(-34)&127:29|1);
    let var257 : Int64 = Int64(Int32(-2));
    try { // block id: 214
        param183;
        try { // block id: 217
            var220 < var220;
            (Int16(-8)&127..=Int16(-3)&127:108|1)
        } catch (e: Exception) { // block id: 226
            (Int16(73)&127..Int16(-103)&127:33|1)
        }
    } catch (_) { // block id: 228
        try { // block id: 230
            (66&127..=var220&127:(60|1));
            ()
        } catch (_) { // block id: 236
            param183;
            UInt64(143);
            param183
        } finally { // block id: 240
            ();
            param183
        };
        if (false) { var246 } else { (Int16(6)&127..Int16(95)&127:80|1) } 
    } finally { // block id: 249
        let var263 : Int16 = Int16(-126);
        [(Int16(-75)&127..Int16(87)&127:(var257|1)), (Int16(21)&127..=Int16(-29)&127:(-46)|1), (var263&127..=var263&127:(var257|1)), (Int16(27)&127..var263&127:(83|1)), var246, (Int16(-45)&127..Int16(14)&127:(-3)|1), (var263&127..Int16(-65)&127:(35|1)), var246, (Int16(-127)&127..Int16(-85)&127:(-120)|1), (Int16(61)&127..Int16(-112)&127:(var220|1))][6]
    }
}

public struct Aggregate496 {
    public init() { // block id: 498

    }
;
    var var503 : Unit = ()
}


public enum Enum654 {
    defaultValue |
    enumValue4399(((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)))
}
public interface Interface695 {

}

public interface Interface696 {

}

public interface Interface694<T0> <: Interface695 & Interface696 {

}

public interface Interface693 <: Interface694<Array<UInt16>> {

}

public interface Interface697<T0, T1> {

}

public open class Class690 <: Interface693 & Interface697<Range<Int8>, Range<Int32>> & Resource {
    public init() { // block id: 692

    }
;
    public var var702 : Bool = true;
    static var var3241 : Float64 = 30.0;
    public init(namedParam2093 ! : Rune, optionalParam2094 ! : (Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = { lambdaParameter2097 : Range<Int16> => (UInt8(UInt8(142)), Int32(33), UInt64(45), "#2B*a{U\\=%v", UInt16(Int16(UInt16(40))), UInt32(Int16(73)), "Zr9Pt>\\*>&", ()) }) { // block id: 2114
        func1938((UInt8(45)&127..UInt8(116)&127:123|1));
        let var2520 : ((Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) -> Bool = { lambdaParameter2523 : (Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) => true };
        match {
            case ((func3160~>func2529)|>var2520) => 
            var var3237 : Int64 = (-8);
            if (var1676) { ((-40.0), var1319, 79.0, (UInt64(216)&127..UInt64(122)&127:104|1), (var377&127..=Int32(43)&127:(var3237|1))) } else { (var3241, var1319, (-98.0), (UInt64(8)&127..=UInt64(188)&127:101|1), (Int32(79)&127..Int32(123)&127:(-102)|1)) } 
            case if ((Option<Unit>.None is Array<Unit>)) { // block id: 3250
            if (true) { Aggregate496() } else { var500 } ;
            [true, true, false, false, false, false, true, true, true, true];
            true
        } else { // block id: 3257
            var37
        } => 
            var var3289 : Float64 = Float64(Float32(17.0));
            let var3321 : Range<Int32> = (Int32(Int16(Int8(Int8(-52))))&127..Int32(Int8(Int8(UInt8(198))))&127:(99|1));
            if (var1468) { // block id: 3262
                ['k', '0', 'E', 'P', 'H', 'h', '5', 'S', 'm', 'D'];
                ();
                var2684
            } else if (var1676) { // block id: 3267
                if (var1468) { ((UInt8(193)&127..UInt8(141)&127:((-113)|1)), [UInt16(11), UInt16(126), UInt16(183), UInt16(102), UInt16(176), UInt16(49), UInt16(78), UInt16(144), UInt16(120), UInt16(51)], var327, ()) } else { var1841 } ;
                if (false) { var2684 } else { var2684 } 
            } else { // block id: 3283
                if (var1468) { var2684 } else { (var3289, (Int16(47), var327, (UInt8(205), var377, UInt64(100), """
HIab4
J?7BZ
""", UInt16(82), UInt32(193), var577, ()), (var1003, Int32(117), var327, var577, UInt16(240), UInt32(30), var577, var562), UInt64(191), (UInt8(46)&127..UInt8(26)&127:((-85)|1))), var3289, var1835, var3321) } 
            }
            case _ => 
            var var3344 : Int8 = Int8(UInt8(209));
            match (var1679) {
                case _ => 
                    ###"BQA1~6yVz>"###;
                    Option<Array<Int8>>.Some([var2001, var1084, var3344, Int8(53), var3344, var920, var920, Int8(-111), var920, var2001])
                
                case _ => 
                    Option<Array<Int8>>.Some([Int8(60), Int8(-78), Int8(99), Int8(57), Int8(-27), Int8(-109), Int8(40), Int8(3), Int8(32), Int8(-117)])
                
            };
            var loopTimeVar3364 : Int64 = 0;
            while ((var1676) && loopTimeVar3364 < 100 ) {
                loopTimeVar3364++;
                Class690();
                ()
            };
            var2684
        };
        ()
    }
;
    static var var3422 : Interface695 = Class690();
    public init(param3410 : Int64, param3411 : Array<Int8>) { // block id: 3412
        let var3419 : Rune = '1';
        try { // block id: 3414
            if (var37) { Class690(namedParam2093 : var3419) } else { var3422 } ;
            Option<((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>))>.None.getOrThrow();
            try { // block id: 3431
                -var2814;
                (var1871, [var303, var303, UInt16(159), UInt16(74), UInt16(64), var391, UInt16(40), var303, var303, UInt16(149)], var327, ())
            } finally { // block id: 3449
                var3452--;
                var var3459 : Int64 = 99;
                ((UInt8(110)&127..=var1003&127:(var3459|1)), [UInt16(244), UInt16(139), UInt16(185), UInt16(150), UInt16(26), UInt16(5), UInt16(137), UInt16(187), UInt16(83), UInt16(15)], UInt64(104), ())
            }
        } finally { // block id: 3464
            var2001 ^= Int8(-17);
            match ([UInt16(32), UInt16(156), UInt16(226), UInt16(240), UInt16(97), UInt16(236), UInt16(12), UInt16(189), UInt16(148), UInt16(40)]) {
                case caseVar3472 => 
                    ();
                    if (var1468) { ((UInt8(112)&127..=UInt8(50)&127:4|1), [UInt16(86), UInt16(195), UInt16(113), UInt16(5), UInt16(152), UInt16(83), UInt16(80), UInt16(209), UInt16(49), UInt16(235)], var327, var562) } else { var1841 } 
                
                case _ : UInt32 => 
                    if (var1676) { var1841 } else { ((UInt8(111)&127..UInt8(213)&127:(31|1)), [UInt16(108), UInt16(144), UInt16(11), UInt16(179), UInt16(237), UInt16(88), UInt16(139), UInt16(43), UInt16(34), UInt16(31)], var327, ()) } 
                
                case _ => 
                    (var920, var1468, var396, Option<Bool>.None, [(), (), (), (), (), (), (), (), (), ()]);
                    var var3508 : UInt8 = UInt8(97);
                    ((var3508&127..UInt8(206)&127:(57|1)), var101, UInt64(173), ())
                
            }
        };
        ()
    }
;
    public static let var4346 : Array<Int8> = Array<Int8>(10){ i => Int8(-121) };
    static let var4501 : Int64 = (-22);
    private static var var4570 : Int8 = Int8(-24);
    static var var4634 : Rune = 'Q';
    public static var var4648 : (Range<UInt8>, Array<Range<Int16>>) = ((UInt8(90)&127..UInt8(206)&127:(-24)|1), [(Int16(-108)&127..=Int16(32)&127:((-88)|1)), (Int16(25)&127..=Int16(0)&127:(124|1)), (Int16(108)&127..Int16(-114)&127:((-90)|1)), (Int16(74)&127..=Int16(122)&127:(5|1)), (Int16(-60)&127..=Int16(29)&127:(106|1)), (Int16(-76)&127..Int16(79)&127:((-126)|1)), (Int16(13)&127..Int16(14)&127:((-63)|1)), (Int16(-95)&127..Int16(12)&127:(-15)|1), (Int16(43)&127..=Int16(82)&127:((-55)|1)), (Int16(-94)&127..Int16(-125)&127:((-69)|1))]);
    public static var var4729 : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)) = (([UInt16(232), UInt16(86), UInt16(61), UInt16(238), UInt16(38), UInt16(200), UInt16(248), UInt16(182), UInt16(15), UInt16(72)], (UInt8(0)&127..UInt8(232)&127:(40|1)), (UInt8(172), Int32(76), UInt64(157), """
74D[X
,b*+}
""", UInt16(221), UInt32(61), """
5-|Jo
klyS!
""", ()), (UInt8(109)&127..=UInt8(10)&127:(114|1)), ()), UInt32(178), '4', (Int8(72)&127..=Int8(51)&127:(122|1)), (UInt64(183)&127..=UInt64(212)&127:((-25)|1)), (Int8(31)&127..Int8(-19)&127:(41|1)), UInt16(252), ((Int32(-99)&127..Int32(27)&127:((-76)|1)), 16.0, (-12), true, ['p', 'q', 'g', '8', 'b', 'N', '7', 'z', 'L', 'd'], ((UInt8(216)&127..=UInt8(80)&127:80|1), [(Int16(-101)&127..Int16(40)&127:(-53)|1), (Int16(-115)&127..=Int16(3)&127:(-60)|1), (Int16(117)&127..=Int16(-33)&127:101|1), (Int16(-16)&127..=Int16(97)&127:21|1), (Int16(107)&127..Int16(125)&127:115|1), (Int16(-79)&127..=Int16(85)&127:110|1), (Int16(6)&127..=Int16(64)&127:46|1), (Int16(85)&127..=Int16(44)&127:0|1), (Int16(-120)&127..=Int16(4)&127:29|1), (Int16(-42)&127..Int16(-5)&127:123|1)]), (Int32(-58)&127..=Int32(116)&127:101|1)));
    public init(namedParam4289 ! : Array<UInt16>, optionalParam4290 ! : Interface695 = Class690(Int64(Int32(38)), [Int8(-50), Int8(-113), Int8(-40), Int8(-49), Int8(-85), Int8(53), Int8(39), Int8(-114), Int8(-124), Int8(-94)]), namedParam4295 ! : Array<Rune>) { // block id: 4296
        var var4320 : Int16 = Int16(-68);
        ((if (match (Option<Interface695>.Some(Class690(namedParam2093 : 'P'))) {
            case _ => 
                Option<(UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)>.None;
                var37
            
        }) { match ((UInt32(168)&127..=UInt32(2)&127:117|1)) {
            case caseVar4311 : Option<(Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)> => 
                var1045
            
            case caseVar4316 : Range<Int16> => 
                var4320 >>= ((Int16(-119)) & 7);
                var1045
            
            case _ : Bool => 
                if (var4329) { Option<Array<Int8>>.None } else { Option<Array<Int8>>.None } 
            
            case _ => 
                var2814 %= Float32((Int32(var2814)) | 1);
                if (true) { var1045 } else { var1045 } 
            
        } } else { (if (var1468) { Option<Array<Int8>>.Some(var4346) } else { Option<Array<Int8>>.None } ) } ) as Unit);
        var var4385 : Bool = ((Int32(118)&127..=Int32(-114)&127:108|1) is Float64);
        let var4490 : Range<Int16> = (Int16(UInt8(127))&127..=Int16(Int8(99))&127:((-50)|1));
        var var4515 : Range<UInt64> = (UInt64(252)&127..=UInt64(185)&127:(-33)|1);
        var var4540 : UInt16 = UInt16(233);
        var var4597 : Int16 = Int16(70);
        let var4607 : Int16 = Int16(-10);
        let var4642 : Rune = 'K';
        let var4712 : UInt16 = UInt16(110);
        match (if (match (var441) {
                case caseVar4365 : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) => 
                    if (var37) { (var4320&127..var1908&127:(27|1)) } else { (Int16(-56)&127..var1908&127:(var220|1)) } ;
                    !true
                
                case caseVar4381 => 
                    !var4385
                
                case _ => 
                    var920 != var920
                
                case _ => 
                    var var4397 : Enum654 = Enum654.enumValue4399((([UInt16(197), UInt16(63), UInt16(31), UInt16(231), UInt16(68), UInt16(163), UInt16(251), UInt16(224), UInt16(53), UInt16(151)], (UInt8(135)&127..=UInt8(11)&127:(-45)|1), (UInt8(224), Int32(-53), UInt64(162), """
Arm8X
Q7\\=O
""", UInt16(79), UInt32(121), "Gs%tx*F2fL", ()), (UInt8(75)&127..UInt8(178)&127:(88|1)), ()), UInt32(Int32(121)), 'l', (Int8(72)&127..Int8(16)&127:((-67)|1)), (UInt64(126)&127..UInt64(157)&127:(-60)|1), (Int8(14)&127..=Int8(-101)&127:6|1), UInt16(Int8(-106)), ((Int32(-94)&127..=Int32(-107)&127:((-23)|1)), Float64((-28.0)), Int64(UInt32(245)), ((Int8(70), false, UInt32(235), Option<Bool>.None, [(), (), (), (), (), (), (), (), (), ()]) is Option<Unit>), ['k', 'r', 'i', 'J', 'A', 'I', '7', 'D', 'i', 'V'], ((UInt8(21)&127..UInt8(105)&127:((-120)|1)), [(Int16(46)&127..Int16(48)&127:(-114)|1), (Int16(-60)&127..Int16(77)&127:(-24)|1), (Int16(91)&127..Int16(-31)&127:122|1), (Int16(-115)&127..=Int16(-1)&127:(-118)|1), (Int16(-34)&127..Int16(-65)&127:56|1), (Int16(45)&127..Int16(4)&127:(-91)|1), (Int16(10)&127..=Int16(64)&127:(-69)|1), (Int16(114)&127..=Int16(125)&127:71|1), (Int16(126)&127..=Int16(-74)&127:(-128)|1), (Int16(115)&127..Int16(-107)&127:(-114)|1)]), (Int32(47)&127..Int32(0)&127:(71|1)))));
                    var4397;
                    let var4555 : String = """
-!l7W
X}N\\M
""";
                    (var3241, [(Int16(-61)&127..=Int16(116)&127:(var1673|1)), var1893, (var1908&127..Int16(79)&127:(var1673|1)), var4490, (var1966&127..=Int16(13)&127:(var4501|1)), var1893, (Int16(-106)&127..var4320&127:((-2)|1)), var1893, var4490, (Int16(-52)&127..=Int16(-34)&127:(94|1))], var4515, [UInt16(11), UInt16(133), UInt16(198), var303, UInt16(225), var303, var303, UInt16(174), UInt16(64), UInt16(185)], var2684, var4201, 79, (([var391, var391, var391, UInt16(198), UInt16(16), var4540, UInt16(78), var4540, UInt16(124), UInt16(126)], var1871, (UInt8(247), var377, UInt64(122), var577, var303, UInt32(225), var4555, var562), var1871, ()), UInt32(35), '7', (var2001&127..Int8(122)&127:(var1794|1)), var4515, (Int8(-108)&127..=var4570&127:(var4573|1)), UInt16(168), (var3869, (-122.0), (-23), false, ['b', 'M', 'N', 'Y', 'K', 'D', 'g', 's', '1', 'g'], (var1871, [(Int16(73)&127..=Int16(8)&127:85|1), var4490, (Int16(-22)&127..=Int16(4)&127:(-81)|1), (Int16(-112)&127..var1908&127:((-94)|1)), var4490, (Int16(-103)&127..=Int16(64)&127:91|1), (var4597&127..Int16(39)&127:((-111)|1)), (var1908&127..Int16(-84)&127:(var4501|1)), (var4607&127..=var1908&127:(52|1)), (Int16(-81)&127..=Int16(32)&127:(-9)|1)]), (Int32(5)&127..=Int32(-118)&127:(-104)|1))), ((var1003&127..=var1003&127:((-85)|1)), namedParam4289, var4620, var562));
                    false
                
            }) { // block id: 4626
                ((Int32(-97)&127..Int32(-81)&127:(-6)|1), var3241, (-91), var4329, [var4634, 'A', var4634, 'B', 'w', 'o', var4642, 'd', var4634, '2'], var4648, (Int32(-75)&127..=Int32(-102)&127:(var1794|1)))
            } else if (match ([(), (), (), (), (), (), (), (), (), ()]) {
                case _ => 
                    let var4702 : Range<UInt64> = (UInt64(193)&127..=UInt64(1)&127:(-122)|1);
                    (90.0, var1788, var4702, [UInt16(233), UInt16(69), UInt16(61), UInt16(112), UInt16(40), UInt16(232), UInt16(32), UInt16(224), UInt16(195), UInt16(137)], var2684, (var1871, [var391, UInt16(62), var4712, var303, UInt16(147), UInt16(8), UInt16(129), var4712, UInt16(99), var303], var4722, ()), 18, var4729, (var1871, namedParam4289, UInt64(118), var4784));
                    (UInt8(205)&127..=UInt8(160)&127:(70|1));
                    var396 > var396
                
                case caseVar4795 => 
                    if (var1468) { [false, true, false, false, true, false, true, false, false, true] } else { [false, false, false, false, true, true, true, false, true, true] } ;
                    65.0 <= (-23.0)
                
                case caseVar4806 => 
                    false
                
                case caseVar4811 => 
                    var562;
                    var37
                
                case _ => 
                    var4385
                
            }) { // block id: 4818
                ((Int32(-115)&127..=var377&127:(35|1)), var3241, var1673, true, ['0', var4642, var4642, '3', var4833, 'j', 'S', 'h', var4642, 'x'], var4648, var3869)
            } else { // block id: 4842
                var4385;
                var4845
            }) {
            case caseVar4921 : Range<Int64> => 
                -var3241;
                if (var37) { var129 } else { (UInt8(62), Int32(37), UInt64(203), "J(QSk=}2<5", UInt16(142), UInt32(5), ###"zXs^gK9gMv"###, var4784) } 
            
            case caseVar4939 => 
                var303 |= UInt16(81);
                var129
            
            case _ => 
                ();
                ();
                (var1003, var377, UInt64(95), ###"fA--Ko<>(."###, UInt16(15), UInt32(147), """
&@_hc
gEL a
""", var562)
            
            case caseVar4961 => 
                var4784;
                if (false) { var1045 } else { Option<Array<Int8>>.Some(var4346) } ;
                let var4970 : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = (UInt8(252), Int32(Int16(-58)), UInt64(141), "h Hmdv7L(5", UInt16(179), UInt32(Int16(-100)), ###"4ar[5A_V*V"###, ());
                var4970
            
            case _ => 
                if (true) { var129 } else { (UInt8(56), var377, UInt64(148), var577, UInt16(57), var2480, var577, ()) } 
            
        };
        var4784
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


func func706(param707 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) : Interface695 { // block id: 708
    match ((UInt16(19)&127..UInt16(177)&127:(54|1))) {
        case _ => 
            if (false) { (UInt8(166)&127..=UInt8(45)&127:(-56)|1) } else { (UInt8(126)&127..=UInt8(43)&127:(var220|1)) } ;
            ['u', 'r', 't', 's', '3', 'e', 'b', 'm', 'X', 'D']
        
    }[2];
    var562;
    let var738 : Int8 = Int8(Int8(UInt8(Int8(-107))));
    let var746 : ?Bool = Option<Bool>.Some(false);
    let var784 : Interface695 = Class690();
    let var793 : Bool = false;
    (match ((var738, var37, UInt32(41), var746, [var562, (), var562, var562, var562, (), var562, var562, var562, ()])[3]) {
        case _ : Int64 => 
            let var767 : Range<UInt8> = (UInt8(162)&127..=UInt8(39)&127:(-78)|1);
            ([UInt16(7), UInt16(229), UInt16(66), UInt16(105), UInt16(172), UInt16(3), UInt16(140), UInt16(143), UInt16(22), UInt16(7)], var767, (UInt8(16), var377, var327, """
s&\\Kh
whJ9d
""", var391, var396, "cyB'(z&=b8", ()), var767, var562);
            if (true) { Option<Interface695>.Some(var784) } else { Option<Interface695>.None } 
        
        case caseVar789 : Range<Int16> => 
            if (var793) { Option<Interface695>.None } else { Option<Interface695>.Some(var784) } 
        
        case _ => 
            [Int8(-68), Int8(19), Int8(-8), Int8(-86), Int8(-110), Int8(-22), Int8(65), Int8(-39), Int8(-101), Int8(115)];
            Option<Interface695>.Some(var784)
        
        case _ => 
            var var807 : Array<Range<Int16>> = Array<Range<Int16>>(10){ i => (Int16(6)&127..=Int16(Int8(Int8(-105)))&127:((-80)|1)) };
            var807;
            if (var793) { var848 } else { Class690() } ;
            Option<Interface695>.Some(Class690())
        
    } ?? Class690())
}

func func644(param645 : Range<Int64>) : UInt64 { // block id: 646
    let var657 : Enum654 = Enum654.defaultValue;
    var var678 : UInt32 = UInt32(UInt8(Int8(35)));
    var loopTimeVar904 : Range<UInt64> = (UInt64(218)&127..=UInt64(100)&127:(45|1));
    for (i in loopTimeVar904 where (match (var657) {
        case defaultValue => 
            UInt64(56);
            if (var37) { Option<Bool>.Some(true) } else { Option<Bool>.Some(true) } 
        
        case defaultValue => 
            (UInt32(122)&127..=UInt32(50)&127:(-106)|1);
            Option<Bool>.None
        
        case _ => 
            let var683 : UInt32 = UInt32(Int16(-6));
            var678 **= (var683 & 3);
            Enum654.defaultValue;
            Option<Bool>.Some(true)
        
    } ?? var699.var702)) {
        var856|>func706;
        var var899 : UInt64 = UInt64(Int64(Int32(-55)));
        var899 = UInt64(128)
    };
    UInt64(try { // block id: 911
        var var915 : Int8 = Int8(-92);
        Int8(37) ** (var915 & 3)
    } catch (_) { // block id: 917
        var562;
        var920
    } finally { // block id: 922
        var377 %= ((Int32(107)) | 1);
        var920
    })
}

public func func928(param929 : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) : UInt64 { // block id: 930
    var562;
    let var943 : Range<UInt8> = (UInt8(130)&127..=UInt8(46)&127:6|1);
    var var952 : (Range<UInt8>, Array<Range<Int16>>) = ((UInt8(60)&127..UInt8(30)&127:(Int64(Int32(UInt8(108)))|1)), [(Int16(37)&127..=Int16(-68)&127:(-31)|1), (Int16(-75)&127..Int16(92)&127:78|1), (Int16(-124)&127..=Int16(-99)&127:(-75)|1), (Int16(108)&127..Int16(18)&127:71|1), (Int16(-93)&127..=Int16(116)&127:69|1), (Int16(64)&127..=Int16(-40)&127:93|1), (Int16(-128)&127..Int16(-76)&127:122|1), (Int16(-68)&127..=Int16(62)&127:62|1), (Int16(77)&127..=Int16(118)&127:(-25)|1), (Int16(-47)&127..Int16(18)&127:27|1)]);
    if (false) { // block id: 934
        var327 ** (var327 & 3)
    } else { // block id: 938
        (var943, var101, var327, var562)[3];
        var952[1];
        UInt64(210)
    }
}



func func1501(param1502 : Range<Int8>) : Interface695 { // block id: 1503
    if (var37) { var1507 } else { Class690() } 
}

public func func1515(param1516 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) : Range<Int8> { // block id: 1517
    var var1609 : Bool = true;
    try { // block id: 1519
        var var1529 : Float32 = Float32(-57.0);
        try { // block id: 1521
            var303 / ((var391) | 1);
            var377
        } finally { // block id: 1526
            var1529 = var1529;
            var1084 /= ((Int8(8)) | 1);
            var377
        };
        var var1539 : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)) = (([UInt16(149), UInt16(217), UInt16(53), UInt16(72), UInt16(100), UInt16(13), UInt16(8), UInt16(27), UInt16(136), UInt16(217)], (UInt8(114)&127..UInt8(172)&127:(120|1)), (UInt8(UInt8(69)), Int32(UInt32(104)), UInt64(Int16(-28)), "$YH4T)Hp?Q", UInt16(UInt16(18)), UInt32(UInt32(74)), """
/(nVB
gyno5
""", ()), (UInt8(UInt8(175))&127..UInt8(67)&127:((-103)|1)), ()), UInt32(UInt32(113)), 'M', (Int8(UInt8(Int8(11)))&127..=Int8(-74)&127:((-128)|1)), (UInt64(197)&127..=UInt64(37)&127:(Int64(UInt8(14))|1)), (Int8(Int8(-23))&127..Int8(41)&127:((-107)|1)), UInt16(Int16(Int8(UInt8(3)))), ((Int32(Int16(120))&127..Int32(Int8(-127))&127:((-121)|1)), 21.0, 87, false, ['m', 'c', 'G', '6', 'F', 'e', 'Y', 'U', 'b', 'E'], ((UInt8(228)&127..=UInt8(121)&127:(-97)|1), [(Int16(-71)&127..=Int16(60)&127:(-9)|1), (Int16(-109)&127..=Int16(98)&127:123|1), (Int16(-126)&127..Int16(11)&127:(-68)|1), (Int16(124)&127..Int16(-31)&127:22|1), (Int16(76)&127..Int16(-76)&127:(-35)|1), (Int16(102)&127..Int16(101)&127:60|1), (Int16(-106)&127..Int16(-82)&127:49|1), (Int16(83)&127..Int16(12)&127:107|1), (Int16(-77)&127..Int16(51)&127:23|1), (Int16(-71)&127..Int16(-38)&127:(-76)|1)]), (Int32(101)&127..=Int32(-55)&127:80|1)));
        var1539[3]
    } catch (e: Exception) { // block id: 1606
        let var1613 : Int16 = Int16(-74);
        if (var1609) { // block id: 1611
            var1613;
            if (var1609) { Aggregate496() } else { Aggregate496() } ;
            ()
        } else if (true) { // block id: 1621
            var562;
            ()
        };
        if (true) { (Int8(-124)&127..Int8(-5)&127:(-22)|1) } else { var1628 } 
    } finally { // block id: 1633
        var1628
    }
}



public func func1645(param1646 : Float64, optionalParam1647 ! : Array<Int8> = [Int8(-84), Int8(38), Int8(-74), Int8(-113), Int8(90), Int8(85), Int8(-75), Int8(-65), Int8(-114), Int8(73)], optionalParam1649 ! : Array<Rune> = ['n', '5', 'B', 'x', 'X', 'o', 'z', 'T', 'M', 'j']) : Class690 { // block id: 1651
    let var1665 : Int64 = Int64(UInt16(UInt8(Int8(UInt8(108)))));
    let var1692 : (Range<UInt8>, Array<Range<Int16>>) = ((UInt8(11)&127..UInt8(202)&127:((-95)|1)), [(Int16(-109)&127..=Int16(51)&127:93|1), (Int16(53)&127..Int16(-3)&127:(Int64(UInt16(119))|1)), (Int16(-112)&127..=Int16(56)&127:(Int64(UInt16(164))|1)), (Int16(Int16(-70))&127..Int16(Int8(-13))&127:(Int64(Int16(-115))|1)), (Int16(-35)&127..=Int16(Int16(-7))&127:(37|1)), (Int16(UInt8(109))&127..=Int16(27)&127:((-2)|1)), (Int16(Int8(-110))&127..=Int16(-33)&127:(75|1)), (Int16(-14)&127..=Int16(-103)&127:(-34)|1), (Int16(23)&127..=Int16(7)&127:60|1), (Int16(-125)&127..Int16(1)&127:63|1)]);
    if ((Option<(Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)>.None ?? ((Int32(-52)&127..Int32(88)&127:(var1665|1)), (-27.0), var1673, var1676, var1679, var1692, (var377&127..Int32(-54)&127:(39|1))))[3]) { try { // block id: 1741
        param1646;
        var562;
        var var1745 : Class690 = Class690();
        var1745
    } catch (_) { // block id: 1747
        (UInt8(142), var377, UInt64(243), "sCpua{2A08/", UInt16(67), UInt32(43), "g(fbOorZ?y", ());
        Class690()
    } finally { // block id: 1758
        var699
    } } else { (Option<Array<Class690>>.None ?? [var699, Class690(), Class690(), Class690(), Class690(), var699, var699, var699, Class690(), var699])[9] } 
}


func func1938(param1939 : Range<UInt8>) : Unit { // block id: 1940
    if (false) { // block id: 1943

    } else if ((UInt8(Int8(119)) is Interface697<Range<Int8>, Range<Int32>>)) { // block id: 1947
        var var2006 : Int64 = Int64(Int16(UInt8(97)));
        match (var848) {
            case caseVar1952 => 
                var377 / ((var377) | 1);
                var var1959 : Int16 = Int16(UInt16(64));
                var1959 &= var1959;
                var1959 &= var1966
            
            case caseVar1970 : Interface696 => 
                if (false) { [(Int16(82)&127..Int16(-43)&127:(-103)|1), (Int16(-128)&127..=Int16(91)&127:5|1), (Int16(-24)&127..=Int16(-58)&127:24|1), (Int16(102)&127..=Int16(27)&127:39|1), (Int16(-112)&127..Int16(55)&127:(-109)|1), (Int16(111)&127..=Int16(-28)&127:(-89)|1), (Int16(35)&127..Int16(20)&127:(-100)|1), (Int16(98)&127..Int16(-64)&127:49|1), (Int16(-77)&127..=Int16(22)&127:(-43)|1), (Int16(54)&127..Int16(-62)&127:18|1)] } else { [(Int16(112)&127..=Int16(-15)&127:38|1), (Int16(-58)&127..Int16(-68)&127:(-65)|1), (Int16(33)&127..=Int16(-4)&127:47|1), (Int16(74)&127..Int16(31)&127:36|1), (Int16(17)&127..Int16(91)&127:47|1), (Int16(-101)&127..Int16(43)&127:(-32)|1), (Int16(114)&127..=Int16(61)&127:(-38)|1), (Int16(-126)&127..Int16(-9)&127:(-91)|1), (Int16(-21)&127..Int16(-46)&127:81|1), (Int16(65)&127..Int16(-65)&127:(-98)|1)] } ;
                var1676 &&= false
            
            case caseVar1981 => 
                if (true) { (Int32(-11)&127..=Int32(79)&127:45|1) } else { (var377&127..Int32(-87)&127:((-89)|1)) } ;
                ();
                var1676 &&= false
            
            case caseVar1996 => 
                var562;
                var2001 &= var1084;
                var2006 **= ((-43) & 3)
            
            case _ => 
                ()
            
        };
        func func2015() : Unit { // block id: 2016

        }
;
        func2015()
    };
    ();
    var1676 ||= !if (true) { // block id: 2023
        ();
        true
    } else { // block id: 2026
        var303 += var391;
        UInt64(191) < var327
    }
}

func func2398(param2399 : Range<Int16>) : Unit { // block id: 2400
    let var2409 : Interface696 = Class690();
    var var2415 : Interface697<Range<Int8>, Range<Int32>> = Class690();
    match (((if (true) { var2406 } else { var2409 } ) as Unit)) {
        case _ => 
            var2415;
            var856;
            ()
        
        case _ => 
            Int32(-89);
            var562
        
    };
    ()
}


func func2119(param2120 : (Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) : Bool { // block id: 2123
    let var2149 : (Float64, Array<Range<Int16>>, Range<UInt64>, Array<UInt16>, (Float64, (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>), Float64, Range<UInt64>, Range<Int32>), (Range<UInt8>, Array<UInt16>, UInt64, Unit), Int64, ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)), (Range<UInt8>, Array<UInt16>, UInt64, Unit)) = (Float64(118.0), [(Int16(104)&127..Int16(UInt16(198))&127:(Int64((-28))|1)), (Int16(105)&127..=Int16(-74)&127:(-7)|1), (Int16(94)&127..Int16(-41)&127:107|1), (Int16(-5)&127..=Int16(-24)&127:44|1), (Int16(-86)&127..Int16(Int16(-58))&127:((-91)|1)), (Int16(-113)&127..Int16(3)&127:((-56)|1)), (Int16(-56)&127..=Int16(-92)&127:23|1), (Int16(-26)&127..=Int16(81)&127:(117|1)), (Int16(33)&127..=Int16(81)&127:(-95)|1), (Int16(51)&127..=Int16(-82)&127:125|1)], (UInt64(218)&127..=UInt64(25)&127:(-112)|1), [UInt16(174), UInt16(UInt8(98)), UInt16(138), UInt16(177), UInt16(80), UInt16(14), UInt16(71), UInt16(UInt8(180)), UInt16(UInt16(79)), UInt16(UInt16(UInt16(159)))], ((-99.0), (Int16(-126), UInt64((-50)), (UInt8(29), Int32(119), UInt64(227), """
=03Z0
\\+(A<
""", UInt16(17), UInt32(152), "oga{}6_~.M]", ()), (UInt8(135), Int32(2), UInt64(89), ###"sDZLv#~wOx"###, UInt16(176), UInt32(131), ###"P2F?/WZnoX"###, ()), UInt64(107), (UInt8(83)&127..UInt8(204)&127:((-20)|1))), (-48.0), (UInt64(194)&127..UInt64(52)&127:48|1), (Int32(Int16(116))&127..=Int32(-56)&127:(Int64(Int16(58))|1))), ((UInt8(152)&127..UInt8(Int8(95))&127:(Int64(UInt64(46))|1)), [UInt16(81), UInt16(254), UInt16(39), UInt16(122), UInt16(236), UInt16(141), UInt16(120), UInt16(188), UInt16(208), UInt16(81)], UInt64(84), ()), Int64(UInt64(143)), (([UInt16(225), UInt16(216), UInt16(176), UInt16(73), UInt16(158), UInt16(107), UInt16(135), UInt16(73), UInt16(164), UInt16(171)], (UInt8(11)&127..=UInt8(220)&127:(-114)|1), (UInt8(24), Int32(93), UInt64(214), "^UFz;<QiEW", UInt16(122), UInt32(188), "g\"H1()X/ b", ()), (UInt8(1)&127..UInt8(57)&127:97|1), ()), UInt32(40), 'C', (Int8(UInt8(59))&127..Int8(UInt8(5))&127:(20|1)), (UInt64(203)&127..UInt64(38)&127:(-17)|1), (Int8(-60)&127..Int8(-31)&127:(Int64((-15))|1)), UInt16(212), ((Int32(40)&127..Int32(-90)&127:((-97)|1)), Float64((-100.0)), Int64(Int32(75)), ('M' is Option<Interface695>), ['Q', '3', 'D', 'G', 'h', 'q', 'A', 'T', 'g', 'y'], ((UInt8(28)&127..UInt8(15)&127:(-53)|1), [(Int16(1)&127..Int16(-69)&127:((-80)|1)), (Int16(-38)&127..=Int16(57)&127:(55|1)), (Int16(-36)&127..Int16(53)&127:101|1), (Int16(-21)&127..Int16(104)&127:((-119)|1)), (Int16(17)&127..=Int16(113)&127:(31|1)), (Int16(-78)&127..Int16(67)&127:(40|1)), (Int16(-45)&127..Int16(13)&127:(-100)|1), (Int16(116)&127..Int16(124)&127:(-39)|1), (Int16(9)&127..=Int16(-125)&127:(-125)|1), (Int16(-32)&127..=Int16(-49)&127:(-35)|1)]), (Int32(104)&127..=Int32(16)&127:(4|1)))), ((UInt8(52)&127..=UInt8(198)&127:57|1), [UInt16(UInt8(13)), UInt16(Int8(77)), UInt16(UInt8(202)), UInt16(66), UInt16(Int16(38)), UInt16(179), UInt16(44), UInt16(UInt16(20)), UInt16(UInt8(171)), UInt16(UInt16(138))], UInt64(201), ()));
    var loopTimeVar2372 : Int64 = 0;
    var loopTimeVar2396 : Int64 = 0;
    let var2425 : (Range<Int16>) -> Unit = func2398;
    var var2477 : UInt32 = UInt32(142);
    let var2490 : Unit = ();
    [match (Option<Interface696>.None) {
        case caseVar2130 => 
            ();
            var562;
            var562
        
        case _ => 
            var var2143 : ?Unit = Option<Unit>.None;
            if (false) { Option<Unit>.Some(var562) } else { var2143 } ;
            ()
        
        case _ => 
            var2149;
            var377--;
            ()
        
    }, [var562, var562, var562, (), (), var562, var562, (), var562, ()][5], while ((var1676) && loopTimeVar2372 < 100 ) {
        loopTimeVar2372++;
        Class690()
    }, (), try (resource = Class690()) { // block id: 2375
        if (true) { var1893 } else { (var1908&127..Int16(53)&127:(var1794|1)) } ;
        var1841;
        var562
    } finally { // block id: 2385
        var1794 = var220;
        ();
        ()
    }, while ((false) && loopTimeVar2396 < 100 ) {
        loopTimeVar2396++;
        var562
    }, ((Int16(73)&127..=Int16(-78)&127:(-2)|1)|>var2425), try { // block id: 2429
        var var2433 : (Int8, Bool, UInt32, Option<Bool>, Array<Unit>) = (Int8(3), false, UInt32(149), ((Int16(33), UInt64(106), (UInt8(138), Int32(-94), UInt64(170), """
Ha{Y^m
VMgS>
""", UInt16(165), UInt32(34), "2juRJ31E*E", ()), (UInt8(22), Int32(75), UInt64(98), """
`lAk5
U<LKp
""", UInt16(180), UInt32(19), "cKRG$]Zx_U", ()), UInt64(170), (UInt8(53)&127..=UInt8(128)&127:((-1)|1))) as Bool), [(), (), (), (), (), (), (), (), (), ()]);
        let var2471 : ?Bool = (Class690() as Bool);
        if (true) { var2433 } else { (Int8(-61), var1676, UInt32(168), var2471, [(), (), (), (), (), (), (), (), (), ()]) } ;
        var2477 ^= var2480;
        ()
    } finally { // block id: 2487
        ()
    }, var2490, (var2498 ?? ())][3];
    ();
    var2505[1]
}

public func func2526(param149 : Range<Int16>) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 150
    var var154 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit) = ([UInt16(26), UInt16(233), UInt16(77), UInt16(215), UInt16(242), UInt16(91), UInt16(196), UInt16(173), UInt16(186), UInt16(167)], (UInt8(127)&127..=UInt8(UInt8(225))&127:(64|1)), (UInt8(UInt8(67)), Int32(UInt8(UInt8(109))), UInt64(Int32(UInt16(143))), "H@'a8tNjwt", UInt16(0), UInt32(UInt8(UInt8(167))), "!A^a{vB,ktU", ()), (UInt8(159)&127..UInt8(88)&127:111|1), ());
    var154[2]
}


func func2671(param2672 : Range<UInt32>) : Option<Unit> { // block id: 2673
    var loopTimeVar2821 : Int64 = 0;
    do {
        loopTimeVar2821++;

    } while ((if (try { // block id: 2677
        ();
        ();
        true
    } catch (e: Exception) { // block id: 2681
        ();
        var2684;
        true
    } finally { // block id: 2728
        ();
        !true
    }) { // block id: 2732
        (UInt32(254)&127..UInt32(2)&127:(-55)|1);
        UInt64(155) <= var327
    } else if (!var1676) { // block id: 2739
        if (true) { Option<Unit>.Some(()) } else { Option<Unit>.None } ;
        Option<Unit>.Some(());
        !var1676
    } else { // block id: 2749
        var2751;
        var2814 += Float32(-82.0);
        !var1468
    }) && loopTimeVar2821 < 100 ) ;
    var loopTimeVar2850 : Int64 = 0;
    Option<Unit>.Some(while ((func2119(func148)) && loopTimeVar2850 < 100 ) {
        loopTimeVar2850++;
        (Int32(-62)&127..var377&127:(var220|1));
        ((-19.0), (Int16(-71), UInt64(109), var129, var129, UInt64(94), (var1003&127..var1003&127:((-77)|1))), 13.0, (UInt64(179)&127..=UInt64(19)&127:36|1), (Int32(103)&127..Int32(56)&127:(105|1)))
    })
}

func func2529(param2530 : Array<Unit>) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 2531
    func func2622(namedParam2623 ! : UInt8) : Bool { // block id: 2624
        let var2852 : (Range<UInt32>) -> Option<Unit> = func2671;
        let var2926 : ?Bool = (([UInt16(229), UInt16(108), UInt16(216), UInt16(234), UInt16(133), UInt16(1), UInt16(3), UInt16(160), UInt16(13), UInt16(74)] as String) as Bool);
        let var2969 : Array<Bool> = [((UInt16(57)&127..UInt16(Int8(72))&127:(Int64(UInt16(142))|1)) is Option<Unit>), ((56&127..=(-20)&127:(Int64(Int8(-69))|1)) is (Range<UInt32>) -> Option<Unit>), ((UInt8(UInt8(214)), Int32(-79), UInt64(Int8(126)), """
lhD0@
?\"SzE
""", UInt16(UInt16(43)), UInt32(33), "qy6-Y.vs\"'", ()) is Option<Array<Int8>>), (((Int32(70)&127..Int32(119)&127:(16|1)), 84.0, Int64((-18)), ((Int16(112), UInt64(156), (UInt8(14), Int32(55), UInt64(147), """
wSLRn
bW(]x
""", UInt16(175), UInt32(218), """
 YCyQ
R V'6
""", ()), (UInt8(194), Int32(-46), UInt64(233), "lKM)h=]I?<", UInt16(253), UInt32(33), ")~Y=&oP|0@", ()), UInt64(222), (UInt8(65)&127..UInt8(93)&127:(-16)|1)) is Interface693), ['p', 'u', 'J', 'H', 'h', 'a', 't', 'O', 'l', 'A'], ((UInt8(8)&127..UInt8(54)&127:(18|1)), [(Int16(109)&127..Int16(-121)&127:((-72)|1)), (Int16(-36)&127..=Int16(47)&127:8|1), (Int16(123)&127..=Int16(99)&127:(59|1)), (Int16(42)&127..=Int16(-34)&127:((-27)|1)), (Int16(112)&127..=Int16(42)&127:(-70)|1), (Int16(-18)&127..=Int16(-15)&127:98|1), (Int16(-107)&127..Int16(68)&127:((-45)|1)), (Int16(89)&127..Int16(115)&127:(78|1)), (Int16(-80)&127..Int16(-37)&127:(-69)|1), (Int16(-94)&127..=Int16(-98)&127:(-59)|1)]), (Int32(24)&127..=Int32(28)&127:((-50)|1))) is Range<UInt8>), (Option<Unit>.None is Option<Bool>), true, ((Int8(Int8(62)), true, UInt32(111), Option<Bool>.None, [(), (), (), (), (), (), (), (), (), ()]) is ((UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) -> UInt64), true, ((UInt64(37)&127..UInt64(232)&127:78|1) is ((UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) -> UInt64), true];
        func func2634(optionalParam2635 ! : Option<Unit> = Option<Unit>.Some(()), namedParam2638 ! : Class690, optionalParam2639 ! : Array<UInt16> = Array<UInt16>(10){ i => UInt16(100) }) : Bool { // block id: 2666
            let var2855 : Range<UInt32> = (UInt32(UInt8(219))&127..UInt32(UInt16(UInt16(212)))&127:((-69)|1));
            match ((var2855|>var2852)) {
                case _ => 
                    var562;
                    Int32(29) ** (var377 & 3);
                    var var2870 : (Int64, Array<Int8>, Unit, (Range<UInt8>, Array<Range<Int16>>), Int16) = (37, [Int8(49), Int8(-66), Int8(-41), Int8(12), Int8(-108), Int8(UInt8(86)), Int8(94), Int8(Int8(-97)), Int8(Int8(20)), Int8(Int8(-87))], (), ((UInt8(Int8(42))&127..UInt8(Int8(4))&127:(Int64(122)|1)), [(Int16(72)&127..Int16(3)&127:122|1), (Int16(-26)&127..Int16(-32)&127:77|1), (Int16(-66)&127..=Int16(40)&127:((-22)|1)), (Int16(119)&127..=Int16(-39)&127:(5|1)), (Int16(-49)&127..Int16(11)&127:((-69)|1)), (Int16(67)&127..Int16(64)&127:38|1), (Int16(31)&127..=Int16(-53)&127:((-33)|1)), (Int16(-88)&127..=Int16(63)&127:(-7)|1), (Int16(43)&127..=Int16(59)&127:(-19)|1), (Int16(-2)&127..=Int16(-48)&127:40|1)]), Int16(31));
                    var2870
                
            }[2];
            if ((var2926 ?? true)) { // block id: 2931
                var1676
            } else { // block id: 2933
                var500;
                var var2936 : Bool = ((((Int16(-60), UInt64(122), (UInt8(155), Int32(69), UInt64(232), "(Z!7[h?xVd", UInt16(12), UInt32(94), "yufhoToS&\\", ()), (UInt8(106), Int32(2), UInt64(62), "\\|:J=I[ua-", UInt16(178), UInt32(252), """
$dGR5
uY4QC
""", ()), UInt64(169), (UInt8(238)&127..UInt8(200)&127:50|1)) as (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)) as (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) is Option<Unit>);
                var2936
            } && [var2969, var2969, [var1468, true, false, true, false, false, var37, var1468, var1676, true], [true, var37, false, true, var37, true, var1676, var1468, false, false], [true, true, false, true, true, false, true, false, false, true], var2969, [true, false, var37, true, false, true, true, true, var37, false], [true, false, true, true, true, true, true, false, false, true], var2969, [true, false, false, false, true, false, true, false, true, true]][6][8]
        }
;
        try { // block id: 2626
            var var2629 : ?Unit = ((UInt64(93)&127..UInt64(136)&127:(-99)|1) as Unit);
            (var2629 ?? var562);
            func2634(namedParam2638 : var699)
        } finally { // block id: 3133
            (var2926 ?? false)
        }
    }
;
    (var2538 ?? if (Float32(114.0) >= Float32(-42.0)) { // block id: 2544
        var var2546 : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)) = (([UInt16(160), UInt16(213), UInt16(159), UInt16(133), UInt16(39), UInt16(5), UInt16(Int8(-119)), UInt16(Int16(-50)), UInt16(UInt8(206)), UInt16(Int16(122))], (UInt8(182)&127..=UInt8(125)&127:(-65)|1), (UInt8(UInt8(130)), Int32(5), UInt64(58), """
XeY;v
Q[fAQ
""", UInt16(Int8(34)), UInt32(104), ###"8O$m%UERd6"###, ()), (UInt8(15)&127..=UInt8(252)&127:112|1), ()), UInt32(UInt8(Int8(-114))), '5', (Int8(-121)&127..Int8(-70)&127:(-121)|1), (UInt64(88)&127..UInt64(49)&127:((-119)|1)), (Int8(92)&127..=Int8(39)&127:(-93)|1), UInt16(UInt16(UInt8(155))), ((Int32(5)&127..Int32(UInt8(121))&127:(Int64(UInt32(65))|1)), (-57.0), Int64(UInt8(Int8(-34))), (Float32(37.0) is (Interface696, (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>), String, ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) -> Interface695) -> Unit), ['l', '9', 'W', 'K', 'u', 'A', 'G', 'j', '2', 'V'], ((UInt8(13)&127..=UInt8(56)&127:(-74)|1), [(Int16(-123)&127..Int16(103)&127:70|1), (Int16(-125)&127..=Int16(-58)&127:44|1), (Int16(32)&127..Int16(-69)&127:(-93)|1), (Int16(27)&127..Int16(-99)&127:(-71)|1), (Int16(-40)&127..Int16(69)&127:31|1), (Int16(103)&127..Int16(-14)&127:48|1), (Int16(-23)&127..=Int16(87)&127:(-110)|1), (Int16(57)&127..=Int16(79)&127:(-101)|1), (Int16(-7)&127..Int16(20)&127:(-88)|1), (Int16(103)&127..Int16(126)&127:95|1)]), (Int32(89)&127..Int32(-30)&127:(-125)|1)));
        var2546;
        if (false) { (var1003, Int32(73), UInt64(205), var577, var391, var396, var577, ()) } else { var129 } 
    } else if (func2622(namedParam2623 : var1003)) { // block id: 3138
        let var3140 : Range<UInt8> = (UInt8(109)&127..=UInt8(105)&127:(-4)|1);
        var3140;
        var1045;
        var var3147 : UInt64 = UInt64(Int8(UInt8(7)));
        (var1003, Int32(-39), var3147, ###".6c0&a\"+V-"###, var303, UInt32(234), "oZ8yy^qdR+", var562)
    } else { // block id: 3156
        var856;
        var129
    })
}

public func func3160(param3161 : Range<Int16>) : Array<Unit> { // block id: 3162
    var var3212 : Bool = (Option<Array<Class690>>.None is Float64);
    var loopTimeVar3222 : Int64 = 0;
    while (((Option<Bool>.None ?? if (true) { // block id: 3168
        let var3172 : (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>) = ((Int32(-73)&127..Int32(Int8(UInt8(59)))&127:(61|1)), Float64(Float32(-57.0)), Int64(UInt64(84)), ((Option<Array<Int8>>.None as (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) is Range<UInt8>), ['n', 'V', 'u', 'Z', 'p', 'm', 'h', 'W', '1', 'e'], ((UInt8(70)&127..=UInt8(159)&127:(-80)|1), [(Int16(68)&127..Int16(-35)&127:(-97)|1), (Int16(29)&127..Int16(-99)&127:102|1), (Int16(36)&127..=Int16(-126)&127:(-33)|1), (Int16(15)&127..Int16(53)&127:(-22)|1), (Int16(25)&127..Int16(99)&127:52|1), (Int16(-57)&127..=Int16(-38)&127:59|1), (Int16(-20)&127..=Int16(122)&127:67|1), (Int16(-101)&127..=Int16(-56)&127:18|1), (Int16(26)&127..=Int16(43)&127:(-40)|1), (Int16(5)&127..=Int16(79)&127:(-89)|1)]), (Int32(-128)&127..=Int32(-95)&127:81|1));
        if (false) { var3172 } else { var3172 } ;
        UInt8(229) <= UInt8(50)
    } else { // block id: 3206
        var3208;
        !var3212
    })) && loopTimeVar3222 < 100 ) {
        loopTimeVar3222++;
        var loopTimeVar3220 : Int64 = 0;
        while ((false) && loopTimeVar3220 < 100 ) {
            loopTimeVar3220++;

        }
    };
    var441
}



public func func1641(param1642 : Array<Rune>) : Range<Int8> { // block id: 1643
    let var1811 : Float64 = Float64(Float32(Float32(-76.0)));
    var var1825 : UInt32 = UInt32(Int32(89));
    var var1838 : Range<Int32> = (Int32(-125)&127..Int32(-61)&127:58|1);
    var var1855 : Int64 = (-122);
    let var1884 : Int64 = Int64(UInt64(94));
    func1645(((-28.0), var1788, (UInt64(51)&127..var327&127:(var1794|1)), [var391, var391, UInt16(225), UInt16(243), UInt16(99), var303, var391, UInt16(139), var391, var391], (var1811, (Int16(74), var327, (UInt8(206), Int32(-73), UInt64(216), var577, UInt16(185), var1825, var577, var562), var129, UInt64(79), (UInt8(75)&127..=UInt8(169)&127:76|1)), (-21.0), var1835, var1838), var1841, var1855, ((var101, (UInt8(121)&127..=UInt8(103)&127:(-25)|1), (var1003, Int32(-89), UInt64(139), var577, UInt16(120), var1825, var577, ()), var1871, ()), var396, '5', (Int8(24)&127..Int8(-73)&127:(-63)|1), (UInt64(20)&127..=UInt64(171)&127:28|1), (Int8(36)&127..Int8(57)&127:(-47)|1), UInt16(230), ((Int32(-114)&127..Int32(73)&127:(-67)|1), 89.0, var1884, true, ['9', '0', 'Z', 'M', 'Y', 'a', 'S', 'x', 's', 'D'], (var1871, [var1893, (Int16(123)&127..Int16(-91)&127:(var1884|1)), (Int16(87)&127..=Int16(-69)&127:78|1), (Int16(-36)&127..Int16(65)&127:((-113)|1)), (Int16(-73)&127..=Int16(-55)&127:(-125)|1), (Int16(126)&127..=Int16(99)&127:48|1), (var1908&127..Int16(-37)&127:(var1855|1)), var1893, (Int16(-92)&127..Int16(-28)&127:(-125)|1), (Int16(-6)&127..Int16(-76)&127:58|1)]), (Int32(-66)&127..Int32(-2)&127:(-2)|1))), (var1871, var101, var327, ()))[4][2], optionalParam1649 : param1642);
    let var2062 : Range<UInt32> = (UInt32(Int16(-26))&127..UInt32(34)&127:(Int64(UInt8(114))|1));
    var var3392 : Rune = '3';
    var var3395 : Class690 = Class690();
    var var3522 : (Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = func148;
    let var3544 : Array<Int8> = [Int8(29), Int8(21), Int8(61), Int8(76), Int8(68), Int8(-64), Int8(-82), Int8(-53), Int8(-96), Int8(40)];
    try (resource = Class690()) { // block id: 1929
        (Option<Unit>.None ?? var562);
        (UInt8(49)&127..=UInt8(185)&127:(var1855|1))|>func1938;
        ()
    } catch (e: Exception) { // block id: 2039
        try (resource = Class690()) { // block id: 2041
            ();
            ()
        } catch (_) { // block id: 2044
            var562;
            var var2048 : Int16 = Int16(-112);
            var2048 %= ((Int16(10)) | 1)
        };
        ([UInt16(172), UInt16(249), UInt16(243), UInt16(148), UInt16(224), UInt16(199), UInt16(244), UInt16(33), UInt16(15), UInt16(9)], (UInt8(32)&127..=UInt8(252)&127:50|1), var129, var1871, var562)[4]
    } finally { // block id: 2059
        let var2081 : Array<Class690> = Array<Class690>(10){ i => Class690() };
        var var3384 : Class690 = Class690(namedParam2093 : '9', optionalParam2094 : func148);
        match (var2062) {
            case caseVar2071 => 
                let var2077 : Enum654 = Enum654.defaultValue;
                if (var1676) { Enum654.defaultValue } else { var2077 } ;
                ();
                var2081
            
            case _ : UInt32 => 
                [UInt16(128), UInt16(222), UInt16(13), UInt16(186), UInt16(30), UInt16(31), UInt16(201), UInt16(50), UInt16(186), UInt16(117)];
                if (false) { var1871 } else { (UInt8(121)&127..=UInt8(77)&127:(-57)|1) } ;
                [Class690(), var699, var3384, var699, Class690(), Class690(namedParam2093 : var3392), var3395, var3395, Class690(), var3384]
            
            case _ : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) => 
                var303;
                if (var37) { var2081 } else { [Class690(var1673, [Int8(22), Int8(26), Int8(-20), Int8(-32), Int8(34), Int8(-96), Int8(-62), Int8(69), Int8(44), Int8(-59)]), var699, Class690(namedParam2093 : 'i', optionalParam2094 : var3522), var699, Class690(), Class690(var1884, [var920, Int8(-21), var1084, var1084, var1084, var2001, var920, var1084, Int8(-53), var2001]), Class690(namedParam2093 : 'a'), Class690(3, var3544), Class690(), Class690(namedParam2093 : var3392, optionalParam2094 : func148)] } 
            
            case _ => 
                ();
                [[true, false, true, true, false, true, true, false, true, false], [true, false, false, false, true, false, true, true, false, false], [false, true, false, false, false, false, false, false, false, true], [false, true, true, false, true, false, true, false, false, false], [true, false, true, false, false, true, true, true, false, true], [true, false, false, true, true, false, true, true, true, true], [false, true, true, false, false, true, true, false, false, true], [false, false, false, true, false, false, false, true, false, false], [false, true, true, true, false, false, false, false, false, false], [false, false, false, true, true, false, true, false, false, false]];
                var2081
            
            case _ => 
                var2001 /= ((Int8(-90)) | 1);
                if (var1676) { [var3395, Class690(var1884, [var2001, var1084, var1084, var2001, var2001, var1084, Int8(-111), Int8(-89), var2001, Int8(94)]), Class690(namedParam2093 : var3392), Class690(namedParam2093 : 't'), Class690(namedParam2093 : var3392), var3395, Class690(), Class690(90, [Int8(18), var1084, Int8(-113), var2001, var1084, Int8(-124), var920, var1084, var1084, var920]), var3384, var3395] } else { var2081 } 
            
        };
        UInt32(57) > var396;
        let var3607 : Unit = ();
        var3607
    };
    var var3634 : ?Range<Int8> = Option<Range<Int8>>.None;
    if (try { // block id: 3611
        ();
        false
    } catch (e: Exception) { // block id: 3614
        (UInt32(156)&127..=UInt32(191)&127:(-65)|1);
        var3617
    } finally { // block id: 3620
        var3617
    }) { (Option<Range<Int8>>.None ?? (Int8(1)&127..Int8(-106)&127:(84|1))) } else { (var3634 ?? var1628) } 
}

public func func3640(param3641 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) : Array<Rune> { // block id: 3642
    match (Int16(var1003)) {
        case -63 => 
            var562;
            if (false) { ['r', 'G', 'a', '6', 'l', 'a', 'p', 'M', '6', '3'] } else { ['t', 'I', 'f', 'L', '0', 'k', 'f', 'm', 'H', 'm'] } 
        
        case -71 => 
            var var3660 : Rune = 'F';
            ['q', var3660, 'u', var3660, 'D', 'D', 'C', 'I', var3660, var3660]
        
        case _ => 
            (Int8(94)&127..Int8(-44)&127:(-27)|1);
            var var3674 : ?Bool = ((Int32(20)&127..=Int32(75)&127:121|1) as Bool);
            var3674;
            var1679
        
    }
}

public func func966<T0, T1>(param967 : Range<Int64>) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) where T0 <: Array<Unit>, T1 <: Interface695 { // block id: 968
    let var974 : Interface696 = Class690();
    var var985 : Float64 = Float64(Float32(Float32(Float32(119.0))));
    var var994 : Bool = true;
    let var1075 : Interface695 = Class690();
    let var1405 : UInt8 = UInt8(UInt8(Int8(Int8(UInt8(243)))));
    let var1454 : Int16 = Int16(Int8(104));
    let var3679 : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) -> Array<Rune> = func3640;
    func func1136<T0>(param1137 : Rune, param1138 : Aggregate496, param1139 : Array<Range<Int16>>) : Range<Int16> { // block id: 1140
        func func1142(param1143 : Interface696, optionalParam1144 ! : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) = (Int16(-12), UInt64(UInt8(66)), (UInt8(24), Int32(119), UInt64(Int32(Int32(-44))), "fOG5*}zVtY", UInt16(UInt16(158)), UInt32(Int16(UInt8(98))), "FbwuE}Eb5o", ()), (UInt8(UInt8(UInt8(27))), Int32(-22), UInt64(UInt32(UInt8(55))), "=^eEEF\\iEn", UInt16(Int8(115)), UInt32(62), "dr|Y`>f:t*", ()), UInt64(106), (UInt8(241)&127..UInt8(Int8(UInt8(54)))&127:((-91)|1))), namedParam1184 ! : String, namedParam1185 ! : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) -> Interface695) : Unit { // block id: 1188
            [(), (), (), (), (), (), (), (), (), ()][6]
        }
;
        let var1207 : (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>) = ((Int32(-10)&127..=Int32(109)&127:34|1), Float64(6.0), Int64(UInt8(173)), false, ['n', 'n', 'F', 'z', 'V', '7', 'c', 'k', 'b', 'B'], ((UInt8(UInt8(213))&127..=UInt8(95)&127:(Int64(UInt8(201))|1)), [(Int16(99)&127..=Int16(-80)&127:(-75)|1), (Int16(104)&127..Int16(4)&127:103|1), (Int16(64)&127..Int16(46)&127:(-38)|1), (Int16(101)&127..Int16(-105)&127:124|1), (Int16(-56)&127..Int16(-81)&127:82|1), (Int16(-40)&127..Int16(61)&127:55|1), (Int16(53)&127..=Int16(-2)&127:67|1), (Int16(48)&127..=Int16(48)&127:(-32)|1), (Int16(118)&127..=Int16(-43)&127:(-82)|1), (Int16(102)&127..=Int16(75)&127:(-112)|1)]), (Int32(UInt16(UInt8(205)))&127..=Int32(61)&127:(Int64(UInt8(UInt8(159)))|1)));
        var var1249 : Float32 = Float32(Float32(Float32(Float32(Float32(70.0)))));
        var var1358 : (Range<UInt8>, Array<Range<Int16>>) = ((UInt8(Int8(UInt8(152)))&127..UInt8(104)&127:(71|1)), [(Int16(118)&127..=Int16(-12)&127:120|1), (Int16(-58)&127..=Int16(Int8(-92))&127:(97|1)), (Int16(-61)&127..Int16(74)&127:85|1), (Int16(92)&127..Int16(89)&127:38|1), (Int16(87)&127..Int16(-39)&127:18|1), (Int16(118)&127..Int16(-72)&127:(-12)|1), (Int16(UInt16(118))&127..Int16(UInt8(146))&127:(Int64(UInt64(124))|1)), (Int16(-58)&127..Int16(98)&127:(-123)|1), (Int16(Int16(105))&127..=Int16(Int8(-37))&127:(Int64(UInt32(69))|1)), (Int16(77)&127..=Int16(5)&127:(-94)|1)]);
        var var1478 : Int16 = Int16(UInt16(Int8(UInt8(211))));
        func1142((Option<Interface696>.Some(var974) ?? if (var37) { Class690() } else { Class690() } ), optionalParam1144 : if (var1207[3]) { // block id: 1243
            UInt32(13) != UInt32(194);
            var1249 %= Float32((Int32(Float32(31.0))) | 1);
            let var1257 : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) = (Int16(UInt16(Int16(UInt16(196)))), UInt64(225), (UInt8(UInt8(29)), Int32(-57), UInt64(Int8(39)), """
GMgoM
A6=<P
""", UInt16(220), UInt32(UInt8(UInt8(202))), " [U]*49E.!", ()), (UInt8(188), Int32(Int8(-107)), UInt64(153), "[]<m(D+^r4", UInt16(144), UInt32(0), """
pLJ]+
N89!0
""", ()), UInt64(95), (UInt8(22)&127..UInt8(16)&127:((-84)|1)));
            var1257
        } else if (var37) { // block id: 1293
            if (var37) { ['9', param1137, param1137, param1137, param1137, 'N', 'U', param1137, param1137, 'e'] } else { ['z', 'R', param1137, 'b', param1137, 'a', '8', param1137, param1137, 'z'] } ;
            var1319
        } else { // block id: 1356
            var1358;
            var1084 ^= Int8(-49);
            let var1400 : Int16 = Int16(-3);
            let var1436 : Range<UInt8> = (UInt8(117)&127..=UInt8(162)&127:(-86)|1);
            if (var37) { (var1400, UInt64(155), (var1405, var377, var327, """
 yna{2
Bh.(f
""", var303, UInt32(52), var577, var562), (var1405, var377, UInt64(183), var577, UInt16(180), UInt32(230), var577, var562), var327, (UInt8(30)&127..=UInt8(92)&127:(-11)|1)) } else { (var1400, var327, var129, var129, var327, var1436) } 
        }, namedParam1184 : (try { // block id: 1444
            var377;
            Option<String>.Some(var577)
        } catch (e: Exception) { // block id: 1448
            if (false) { (Int16(-94)&127..=var1454&127:(8|1)) } else { (Int16(42)&127..Int16(-47)&127:(34|1)) } ;
            var var1463 : ?String = Option<String>.None;
            var1463
        } finally { // block id: 1465
            let var1472 : ?Interface695 = Option<Interface695>.Some(Class690());
            if (var1468) { var1472 } else { var1472 } ;
            var1478 |= var1454;
            Option<String>.Some("""
IL.:Y
r_0MW
""")
        } ?? if (true) { // block id: 1488
            var562;
            if (var37) { ###"R_':7\\!(RU"### } else { var577 } 
        } else if (false) { // block id: 1495
            var577
        } else { // block id: 1497
            var562;
            var577
        }), namedParam1185 : ({ lambdaParameter1637 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit) => let var3638 : (Array<Rune>) -> Range<Int8> = func1641; ([UInt16(112), UInt16(139), UInt16(243), UInt16(119), UInt16(238), UInt16(144), UInt16(193), UInt16(58), UInt16(41), UInt16(173)], if (false) { var1871 } else { (var1003&127..var1003&127:((-68)|1)) } , match (var699) {
            case _ => 
                (var1405, var377, var327, var577, var303, UInt32(13), var577, var562)
            
        }, try { // block id: 3704
            if (false) { var1871 } else { var1871 } 
        } catch (e: Exception) { // block id: 3709
            if (false) { (UInt8(43)&127..=var1003&127:(34|1)) } else { (var1003&127..var1405&127:(var220|1)) } 
        }, ())|>(var3679~>var3638) }~>{ lambdaParameter1512 : Range<Int8> => var1507 }));
        match (var3208) {
            case _ : Array<Rune> => 
                (Int32(-30)&127..=Int32(-38)&127:7|1);
                ();
                if (false) { (Int16(-17)&127..Int16(90)&127:(-77)|1) } else { (Int16(70)&127..Int16(-50)&127:(var220|1)) } 
            
            case _ => 
                var1893
            
        }
    }
;
    if (try { // block id: 971
        var562;
        var974;
        true
    } catch (e: Exception) { // block id: 977
        var377 - Int32(68);
        var37
    } finally { // block id: 982
        var985 -= (-61.0);
        false || var994
    }) { try { // block id: 997
        var var1009 : UInt16 = UInt16(UInt16(Int8(-51)));
        if (var37) { var129 } else { (var1003, Int32(75), var327, var577, var1009, UInt32(249), var577, var562) } 
    } catch (_) { // block id: 1016
        (var1003, var377, UInt64(235), ###"+=&km:Iy@w"###, var391, UInt32(127), "Is,5Kv;# ~", var562)
    } finally { // block id: 1026
        ();
        (UInt8(126), Int32(-87), UInt64(181), var577, var303, UInt32(19), var577, ())
    } } else { (func1136<Int32>('2', var500, var1788)|>{ lambdaParameter1040 : Range<Int16> => match {
        case match (var1045) {
        case _ => 
            var562;
            Option<Interface695>.None;
            true
        
        case _ => 
            var396 > UInt32(116)
        
    } => 
        let var1078 : ?Interface695 = (UInt8(UInt8(67)) as Interface695);
        try { // block id: 1060
            (UInt8(215), var377, UInt64(224), var577, UInt16(207), UInt32(254), "#rJ9yG^?g+", var562)
        } finally { // block id: 1070
            if (var37) { Option<Interface695>.Some(var1075) } else { var1078 } ;
            var1084 >>= ((Int8(76)) & 7);
            (var1003, var377, UInt64(35), var577, UInt16(78), UInt32(207), var577, var562)
        }
        case _ => 
        var var1102 : Array<Int8> = Array<Int8>(10){ i => Int8(UInt8(195)) };
        (var1045 ?? var1102);
        [var1084, Int8(113), var1084, Int8(-127), Int8(37), Int8(34), Int8(-111), var920, Int8(29), Int8(92)][7];
        if (var37) { var129 } else { var129 } 
    } }) } 
}

func func492(param493 : Float64) : Float32 { // block id: 494
    var500.var503;
    var var510 : Float32 = Float32(Float32(25.0));
    var var518 : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) = (Int16(63), UInt64(245), (UInt8(82), Int32(Int32(UInt8(144))), UInt64(249), "k8%OXJK8xo", UInt16(Int8(Int8(-84))), UInt32(Int32(105)), "^,q'e2|V%+", ()), (UInt8(200), Int32(UInt32(159)), UInt64(109), """
#,BQ 
+Ry`0
""", UInt16(213), UInt32(Int8(51)), "!+<OpdjQmp", ()), UInt64(130), (UInt8(Int8(UInt8(225)))&127..UInt8(19)&127:(Int64((-92))|1)));
    let var570 : Int32 = Int32(98);
    var var591 : Range<UInt8> = (UInt8(84)&127..UInt8(85)&127:(-8)|1);
    let var964 : ((UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit)) -> UInt64 = func928;
    match (var510) {
        case -26.0 | -93.0 | -116.0 => 
            ();
            var518
        
        case _ => 
            var303 /= ((UInt16(28)) | 1);
            var562;
            (Int16(124), UInt64(33), (UInt8(11), var570, var327, """
]=V~N
C'DHP
""", var391, var396, var577, ()), (UInt8(251), var377, UInt64(208), "i,eR4yh3tH", var391, UInt32(88), var577, ()), var327, var591)
        
        case -8.0 | -55.0 | -125.0 | 97.0 => 
            var518
        
        case -15.0 | 16.0 | -52.0 | -110.0 => 
            var562;
            param493;
            var518
        
        case _ => 
            if (true) { """
^7Q_^
\\\"W<M
""" } else { ".HGJZb7J`o" } ;
            Int8(-7);
            let var611 : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>) = (Int16(103), UInt64(211), (UInt8(Int8(-48)), Int32(UInt32(UInt16(222))), UInt64(201), ###"$R26HcaN1D"###, UInt16(UInt16(29)), UInt32(74), "7#%%u[Uzm2", ()), (UInt8(221), Int32(-81), UInt64(2), ###"HqU$+)8fW\\"###, UInt16(Int16(Int16(38))), UInt32(161), """
H(X$p
zhSxz
""", ()), UInt64(UInt8(251)), (UInt8(166)&127..=UInt8(135)&127:81|1));
            var611
        
    }[1] << (((try { // block id: 3743
        (-15.0) >= 115.0;
        (106&127..=var1794&127:(var1794|1))
    } catch (_) { // block id: 3751
        (103&127..11&127:6|1)
    }|>(func966<Array<Unit>, Interface695>~>var964))) & 7);
    let var3756 : Interface694<Array<UInt16>> = Class690();
    var var3762 : ?Unit = Option<Unit>.None;
    var var3788 : Bool = true;
    var var3804 : Bool = false;
    let var3821 : Bool = (Option<Interface695>.Some(Class690((-54), [Int8(-63), Int8(5), Int8(-84), Int8(-56), Int8(-51), Int8(-101), Int8(-72), Int8(1), Int8(-96), Int8(125)])) is Array<Bool>);
    if ((var3756 is Array<Unit>)) { // block id: 3758
        var1045;
        (var3762 ?? ());
        Float32(-95.0)
    } else { // block id: 3766
        var var3782 : Bool = (Enum654.defaultValue is Int8);
        try { // block id: 3768
            ();
            (Int32(-104)&127..Int32(45)&127:(-30)|1);
            let var3772 : Array<Array<Bool>> = [[true, true, true, false, false, false, false, false, true, false], [true, true, false, true, false, false, true, true, true, true], [true, true, false, false, false, true, false, true, false, true], [true, false, true, false, true, false, false, false, false, false], [false, true, true, true, true, false, true, false, false, true], [true, true, false, true, false, false, false, true, true, true], [true, false, true, true, true, true, true, true, true, true], [true, true, true, false, false, true, false, false, false, false], [false, true, false, false, true, false, true, false, false, false], [true, false, true, true, true, true, false, false, true, false]];
            var3772
        } catch (e: Exception) { // block id: 3774
            let var3796 : Array<Bool> = [true, false, false, false, false, true, false, false, true, true];
            if (false) { [[false, true, false, true, true, true, false, true, true, false], [false, true, false, false, true, true, false, false, false, false], [false, true, true, true, false, true, false, false, false, false], [true, true, false, false, false, false, false, true, false, false], [false, false, false, false, true, false, false, false, true, false], [false, true, false, true, false, false, true, false, true, true], [false, false, false, true, false, true, false, true, false, true], [true, false, true, true, false, true, true, false, false, false], [false, false, false, false, true, false, true, true, false, true], [true, false, false, false, false, true, true, false, true, false]] } else { [[true, var3782, false, true, var3788, false, var1468, var1468, false, false], var3796, [false, false, false, false, false, false, true, true, false, true], [false, false, var1676, var3804, var3788, true, var1468, false, false, var1676], var3796, var3796, [var1468, false, var3788, false, true, var3821, var1676, true, true, var3788], [true, true, true, true, false, false, true, true, false, false], var3796, [false, var3821, false, true, var37, var3617, true, var3788, var3782, false]] } 
        } finally { // block id: 3844
            var3846
        };
        var562;
        Float32(-106.0) + var2814
    }
}


public func func8(param9 : Float32) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 10
    let var335 : String = ###"\\r/*b%|%%i"###;
    func func21(param22 : Float32, optionalParam23 ! : Unit = ()) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 25
        try (resource = Class690()) { // block id: 286
            var220;
            (UInt16(220)&127..=UInt16(56)&127:(var220|1));
            var var294 : Float64 = 22.0;
            var var297 : Float64 = Float64(Float32(-64.0));
            var294 %= Float64((Int32(var297)) | 1)
        } finally { // block id: 300
            var303 >>= ((var303) & 7)
        }|>(func182<Option<Unit>>~>func148);
        var loopTimeVar314 : Int64 = 0;
        match (Option<Unit>.Some(while ((var37) && loopTimeVar314 < 100 ) {
                loopTimeVar314++;
                optionalParam23
            })) {
            case _ => 
                ();
                var129
            
            case _ => 
                optionalParam23;
                let var332 : UInt32 = UInt32(207);
                (UInt8(205), Int32(14), var327, "[\\^iw}AS6K", UInt16(99), var332, var335, ())
            
        }
    }
;
    let var339 : Float32 = Float32(Float32(-38.0));
    var var347 : Unit = ();
    let var352 : UInt8 = UInt8(183);
    var var371 : Bool = (true is Range<Int16>);
    let var407 : Float64 = 99.0;
    let var3921 : ?(Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>) = (([UInt16(Int16(37)), UInt16(74), UInt16(222), UInt16(UInt16(234)), UInt16(UInt8(198)), UInt16(Int8(-70)), UInt16(92), UInt16(81), UInt16(146), UInt16(UInt8(171))] as Unit) as (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>));
    let var4220 : (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>) = ((Int32(67)&127..=Int32(-75)&127:(-97)|1), (-16.0), Int64(Int16(118)), (['Z', '3', 'E', 'B', 't', 'd', '8', 'G', 'D', 'm'] is Option<Range<Int8>>), ['p', 'x', 'Z', 'X', 'o', 'C', 'x', 'U', 'E', 'i'], ((UInt8(120)&127..=UInt8(UInt8(142))&127:(Int64(Int8(-111))|1)), [(Int16(-106)&127..Int16(-23)&127:(-85)|1), (Int16(20)&127..=Int16(109)&127:(-97)|1), (Int16(74)&127..Int16(59)&127:84|1), (Int16(84)&127..=Int16(62)&127:87|1), (Int16(101)&127..Int16(105)&127:(-28)|1), (Int16(-57)&127..=Int16(49)&127:(-87)|1), (Int16(-16)&127..Int16(-113)&127:55|1), (Int16(29)&127..Int16(-121)&127:14|1), (Int16(-55)&127..=Int16(-34)&127:44|1), (Int16(-12)&127..Int16(-10)&127:(-31)|1)]), (Int32(96)&127..Int32(Int32(UInt16(51)))&127:(Int64(UInt64(Int16(40)))|1)));
    func func484<T0, T1, T2>(optionalParam485 ! : UInt16 = UInt16(20), optionalParam487 ! : Bool = false) : Unit { // block id: 489
        51;
        Float64(try { // block id: 3855
            var562;
            var562;
            Float32(-44.0)
        } catch (_) { // block id: 3859
            ();
            Option<Unit>.None;
            Float32(-40.0) % Float32((Int32(Float32(-94.0))) | 1)
        })|>func492;
        if (match ((var3869 as Range<Int8>)) {
            case _ => 
                ();
                var3452 = UInt64(10);
                var327 < UInt64(11)
            
        }) { // block id: 3880
            let var3883 : ?Unit = Option<Unit>.None;
            let var3886 : Unit = ();
            (var3883 ?? var3886);
            var loopTimeVar3895 : Range<UInt64> = (UInt64(207)&127..=UInt64(61)&127:(101|1));
            for (i in loopTimeVar3895 where optionalParam487) {
                var1794 |= var220;
                var129
            };
            match (var2406) {
                case _ => 
                    if (var1468) { (var1673&127..=var1794&127:(var1673|1)) } else { ((-68)&127..=39&127:(-78)|1) } ;
                    [Int8(121), Int8(81), Int8(50), Int8(-36), Int8(-31), Int8(-102), Int8(-96), Int8(-16), Int8(-55), Int8(58)];
                    ()
                
                case caseVar3916 => 
                    if (true) { var3921 } else { Option<(Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)>.None } ;
                    var1003 &= UInt8(47)
                
                case caseVar3946 : Unit => 
                    var3886;
                    if (optionalParam487) { var3952 } else { (102.0, [var1893, var1893, (Int16(-101)&127..Int16(-42)&127:66|1), var1893, (var1966&127..=var1908&127:(var1673|1)), (Int16(87)&127..Int16(1)&127:126|1), (Int16(-117)&127..Int16(97)&127:(-50)|1), var1893, (var1966&127..=var1908&127:(94|1)), (var1908&127..Int16(76)&127:(var1673|1))], var1835, var101, (var407, (Int16(-81), var3452, var129, (UInt8(74), var377, UInt64(114), var577, UInt16(61), UInt32(238), """
(+nZ6
|s^64
""", ()), UInt64(76), var1871), 94.0, var1835, (var377&127..Int32(99)&127:(var1794|1))), var4201, var1673, (var856, UInt32(169), 'l', var1628, (UInt64(105)&127..UInt64(54)&127:(25|1)), (Int8(-90)&127..Int8(-39)&127:102|1), UInt16(45), var4220), var4246) } ;
                    var2480 ^= UInt32(57)
                
                case _ => 
                    var3921;
                    var3886
                
            }
        }
    }
;
    let var5024 : (Int64, Array<Int8>, Unit, (Range<UInt8>, Array<Range<Int16>>), Int16) = (Int64(25), [Int8(-111), Int8(Int8(39)), Int8(-70), Int8(-1), Int8(UInt8(123)), Int8(UInt8(Int8(56))), Int8(UInt8(161)), Int8(UInt8(56)), Int8(-10), Int8(UInt8(145))], (), ((UInt8(7)&127..UInt8(29)&127:124|1), [(Int16(-18)&127..Int16(122)&127:(-32)|1), (Int16(-112)&127..Int16(-36)&127:(5|1)), (Int16(-44)&127..Int16(-57)&127:(-52)|1), (Int16(-106)&127..Int16(-24)&127:64|1), (Int16(-110)&127..=Int16(-40)&127:(-118)|1), (Int16(123)&127..Int16(-46)&127:(115|1)), (Int16(-126)&127..=Int16(22)&127:79|1), (Int16(64)&127..=Int16(-79)&127:(-107)|1), (Int16(-27)&127..Int16(118)&127:(54|1)), (Int16(77)&127..=Int16(54)&127:(-111)|1)]), Int16(114));
    let var5163 : ?Unit = ((Int8(-91)&127..Int8(5)&127:10|1) as Unit);
    func func447(param448 : (Int32) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), param451 : Range<UInt8>, optionalParam452 ! : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit) = ([UInt16(188), UInt16(45), UInt16(220), UInt16(179), UInt16(164), UInt16(8), UInt16(55), UInt16(7), UInt16(52), UInt16(90)], (UInt8(UInt8(UInt8(143)))&127..UInt8(Int8(UInt8(127)))&127:(Int64(UInt32(Int16(71)))|1)), (UInt8(71), Int32(UInt8(198)), UInt64(UInt16(UInt8(248))), """
MKW*a
K(]Ce
""", UInt16(Int8(31)), UInt32(176), "gyCG:ymsnM", ()), (UInt8(67)&127..=UInt8(158)&127:(-22)|1), ()), optionalParam480 ! : Range<UInt8> = (UInt8(244)&127..UInt8(102)&127:106|1)) : Int32 { // block id: 482
        func484<Int16, String, Range<Int32>>(optionalParam487 : Int8(-115) == Int8(var1003));
        if (false) { Class690(namedParam4289 : [UInt16(41), UInt16(124), UInt16(221), UInt16(190), UInt16(153), UInt16(246), UInt16(189), UInt16(69), UInt16(200), UInt16(141)], namedParam4295 : ['d', 'a', 'b', var4833, var4833, var4833, var5006, 'c', var5010, 'd']) } else { var1507 } ;
        let var5188 : ?Bool = Option<Bool>.Some((Option<((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>))>.Some((([UInt16(35), UInt16(235), UInt16(112), UInt16(105), UInt16(38), UInt16(142), UInt16(195), UInt16(168), UInt16(73), UInt16(182)], (UInt8(229)&127..UInt8(19)&127:(-32)|1), (UInt8(244), Int32(100), UInt64(188), "oq|('~o7-l", UInt16(218), UInt32(77), "$J|7/y^,>q", ()), (UInt8(46)&127..=UInt8(62)&127:(112|1)), ()), UInt32(26), '0', (Int8(39)&127..=Int8(-100)&127:123|1), (UInt64(225)&127..=UInt64(136)&127:(-66)|1), (Int8(73)&127..Int8(-75)&127:(3|1)), UInt16(157), ((Int32(100)&127..Int32(-107)&127:(-21)|1), (-21.0), 51, true, ['g', 'r', 'v', 'R', 'd', 'M', 'L', 'J', 'a', 'W'], ((UInt8(197)&127..UInt8(213)&127:94|1), [(Int16(16)&127..=Int16(-88)&127:(-106)|1), (Int16(19)&127..=Int16(66)&127:(-53)|1), (Int16(2)&127..Int16(-53)&127:121|1), (Int16(103)&127..=Int16(106)&127:(-44)|1), (Int16(-90)&127..Int16(-110)&127:(-96)|1), (Int16(-100)&127..Int16(-30)&127:107|1), (Int16(12)&127..=Int16(-64)&127:(-38)|1), (Int16(12)&127..Int16(-78)&127:30|1), (Int16(-26)&127..Int16(-49)&127:44|1), (Int16(-33)&127..=Int16(61)&127:(-28)|1)]), (Int32(69)&127..Int32(-40)&127:(64|1))))) is (Option<Unit>, Class690, Array<UInt16>) -> Bool));
        (match (if (false) { // block id: 5022
                var5024
            } else { // block id: 5070
                (8, [Int8(95), var5076, var5076, Int8(124), var2001, Int8(58), Int8(86), var5076, Int8(-12), var920], var562, (var1871, var1788), Int16(-128))
            }) {
            case caseVar5093 : Option<Interface696> => 
                Option<Int32>.None
            
            case (_ : Range<Int64>,_,_,_ : Option<((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>))>,_) => 
                if (var4329) { Option<Int32>.Some(var377) } else { var5104 } 
            
            case (caseVar5109,_,_,caseVar5110 : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit),caseVar5111 : Range<Int32>) => 
                Option<Int32>.None
            
            case (_ : (Float64, (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>), Float64, Range<UInt64>, Range<Int32>),_ : Option<Array<Class690>>,caseVar5116 : Array<Int8>,(_,_ : Option<(Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)>),_ : (Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit)) => 
                var3952;
                Class690(var1794, caseVar5116);
                Option<Int32>.Some(var377)
            
            case _ => 
                if (false) { Option<Int32>.None } else { var5104 } 
            
        } ?? match (try { // block id: 5132
                var1908 / ((Int16(-16)) | 1);
                var var5139 : ?Unit = (Class690(Int64(UInt8(Int8(76))), [Int8(-7), Int8(UInt8(154)), Int8(9), Int8(Int8(114)), Int8(UInt8(63)), Int8(-100), Int8(120), Int8(-53), Int8(UInt8(88)), Int8(-86)]) as Unit);
                if (true) { var5139 } else { var5139 } 
            } catch (e: Exception) { // block id: 5161
                var5163
            }) {
            case _ => 
                var377
            
            case caseVar5172 => 
                var2751;
                ();
                Int32(-10) / ((var377) | 1)
            
            case _ => 
                Int32(-4) ^ Int32(90)
            
            case _ => 
                var5188;
                var2480 **= (UInt32(57) & 3);
                Int32(-89) >> ((Int32(7)) & 7)
            
        })
    }
;
    func func411(param412 : Range<UInt64>, namedParam413 ! : Int16, namedParam414 ! : Array<Int8>) : (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) { // block id: 415
        var var418 : Int64 = (-68);
        var418 ^= var418;
        match (Option<Array<Int8>>.None) {
            case caseVar427 => 
                var var430 : Unit = ();
                var430;
                [(), (), (), (), (), (), (), (), (), ()]
            
            case _ => 
                ();
                -var407;
                if (var37) { var441 } else { var441 } 
            
        }[4];
        func31(func447(func31, match (var699) {
            case caseVar5263 : String => 
                ();
                caseVar5263;
                (var352&127..var352&127:(var418|1))
            
            case _ => 
                if (false) { Aggregate496() } else { Aggregate496() } ;
                if (false) { var1871 } else { (UInt8(222)&127..UInt8(158)&127:18|1) } 
            
            case _ => 
                var var5286 : UInt16 = UInt16(Int8(-81));
                var5286++;
                if (false) { var5292 } else { var5292 } ;
                (UInt8(134)&127..UInt8(220)&127:(-42)|1)
            
        }, optionalParam452 : try { // block id: 5302
            var303 -= UInt16(185);
            var4329 &&= var1676;
            var856
        } catch (e: Exception) { // block id: 5310
            ();
            let var5314 : Bool = ((UInt32(126)&127..=UInt32(86)&127:33|1) is Int16);
            let var5324 : UInt16 = UInt16(UInt16(UInt16(Int16(-105))));
            if (var5314) { ([UInt16(59), UInt16(76), var391, var303, var5324, var5324, UInt16(4), UInt16(202), UInt16(53), var303], var1871, var129, var1871, var562) } else { ([UInt16(45), UInt16(7), UInt16(27), UInt16(124), UInt16(49), UInt16(180), UInt16(242), UInt16(113), UInt16(135), UInt16(131)], (UInt8(102)&127..UInt8(154)&127:(-47)|1), var129, (UInt8(209)&127..UInt8(251)&127:18|1), var4784) } 
        }, optionalParam480 : match ((var101, (UInt8(244)&127..=UInt8(123)&127:(-84)|1), var129, var1871, ())) {
            case _ => 
                if (true) { Option<String>.Some("xpsyh]vDAX") } else { var2751 } ;
                if (var1468) { (UInt8(7)&127..=UInt8(194)&127:(-13)|1) } else { (UInt8(112)&127..=UInt8(226)&127:49|1) } 
            
        }))
    }
;
    try { // block id: 12
        Option<Unit>.Some(()).getOrThrow();
        func21(var339)
    } catch (_) { // block id: 342
        if (false) { // block id: 345
            var347;
            ();
            var var359 : UInt32 = UInt32(UInt16(34));
            (var352, Int32(56), var327, var335, var303, var359, var335, ())
        } else { // block id: 364
            3 << ((var220) & 7);
            ();
            if (var371) { (UInt8(55), var377, UInt64(227), """
&[dZi
3uat:
""", var303, UInt32(40), """
)4@FG
[5*JU
""", var347) } else { (UInt8(99), Int32(108), var327, var335, var391, var396, var335, var347) } 
        }
    } finally { // block id: 404
        var407 - var407;
        func411(var1835, namedParam413 : Int16(114), namedParam414 : [Int8(-64), Int8(79), Int8(77), Int8(61), Int8(-3), Int8(-60), Int8(56), Int8(25), Int8(25), Int8(-124)])
    }
}

main(): Int64 {
    try {
        let var5366 : (Float32) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = func8;
        (var2814|>var5366)[3];
        var var5399 : (Range<Int16>) -> (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit) = func148;
        Int64(match (var2684) {
            case (caseVar5375,(_,_,_,_ : (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>),_ : UInt16,_),caseVar5376,caseVar5377 : Rune,caseVar5378) => 
                [false, false, var4329, false, var37, true, false, var1676, false, false];
                UInt16(213)
            
            case (_,caseVar5394,_,_,_ : Option<Unit>) => 
                Class690(namedParam2093 : var4833, optionalParam2094 : var5399);
                var562;
                var303
            
            case (_ : Interface693,(_,_ : Range<UInt32>,(_,caseVar5405,caseVar5406 : Enum654,_ : Range<Int64>,caseVar5407 : Range<UInt32>,_ : UInt64,caseVar5408 : (Int8, Bool, UInt32, Option<Bool>, Array<Unit>),_ : Interface693),(caseVar5409 : Float32,caseVar5410,_,_,_ : (Int16, UInt64, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), UInt64, Range<UInt8>),caseVar5411 : (Int8, Bool, UInt32, Option<Bool>, Array<Unit>),_,caseVar5412),_ : ((Array<UInt16>, Range<UInt8>, (UInt8, Int32, UInt64, String, UInt16, UInt32, String, Unit), Range<UInt8>, Unit), UInt32, Rune, Range<Int8>, Range<UInt64>, Range<Int8>, UInt16, (Range<Int32>, Float64, Int64, Bool, Array<Rune>, (Range<UInt8>, Array<Range<Int16>>), Range<Int32>)),caseVar5413 : Array<Rune>),caseVar5414,_,caseVar5415) => 
                var1893;
                var303
            
            case (_,_ : Int32,caseVar5421 : Option<Range<Int8>>,caseVar5422 : Float64,caseVar5423) => 
                UInt16(200)
            
            case _ => 
                Int16(-29);
                UInt16(132) >> ((var391) & 7)
            
        })
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var220*var220), 64)
        crccheck.updateBuffer(UInt64(var303*var303), 64)
        crccheck.updateBuffer(UInt64(var327*var327), 64)
        crccheck.updateBuffer(UInt64(var377*var377), 64)
        crccheck.updateBuffer(UInt64(var391*var391), 64)
        crccheck.updateBuffer(UInt64(var396*var396), 64)
        crccheck.updateBuffer(UInt64(var920*var920), 64)
        crccheck.updateBuffer(UInt64(var1003*var1003), 64)
        crccheck.updateBuffer(UInt64(var1084*var1084), 64)
        crccheck.updateBuffer(UInt64(var1673*var1673), 64)
        crccheck.updateBuffer(UInt64(var1794*var1794), 64)
        crccheck.updateBuffer(UInt64(var1908*var1908), 64)
        crccheck.updateBuffer(UInt64(var1966*var1966), 64)
        crccheck.updateBuffer(UInt64(var2001*var2001), 64)
        crccheck.updateBuffer(UInt64(var2480*var2480), 64)
        crccheck.updateBuffer(UInt64(var3452*var3452), 64)
        crccheck.updateBuffer(UInt64(var4573*var4573), 64)
        crccheck.updateBuffer(UInt64(var4620*var4620), 64)
        crccheck.updateBuffer(UInt64(var4722*var4722), 64)
        crccheck.updateBuffer(UInt64(var5076*var5076), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class690 {

}

extend Aggregate496 {

}
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_unexpected_declaration_in_scope
// ASSERT: scan parse_expected_expr_or_decl_in
// ASSERT: scan parse_expected_catch_or_finally_in_try
// ASSERT: scan parse_expected_left_brace
// ASSERT: scan parse_expected_case
// ASSERT: scan parse_expected_character
// ASSERT: scan parse_unmatched_right_delimiter
