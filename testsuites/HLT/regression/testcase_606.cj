/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

var var_1713698739688_36 : Bool = (match (()) {
    case _: Bool => true
    case _ => false
})
var var_1713698739688_270 : Struct_1713698739688_266<Int16, Int16> = Struct_1713698739688_266<Int16, Int16>()
public var var_1713698739688_307 : Enum_1713698739688_304<Range<UInt32>> = Enum_1713698739688_304<Range<UInt32>>.enumValue_1713698739688_309(Int32(94))
let var_1713698739688_339 : Class_1713698739688_335 = Class_1713698739688_335()
public var var_1713698739688_354 : Int8 = Int8(-3)
public let var_1713698739688_377 : UInt64 = UInt64(33)
public var var_1713698739688_395 : Unit = ()
const var_1713698739688_407 : UInt32 = 141
public const var_1713698739688_457 : Int = 90
let var_1713698739688_581 : ?(Option<Int64>, UInt8, String, UInt64, Option<Int64>) = (match (((Int32(Int32(124))&127)..=(Int32(Int32(-25))&127):(Int64(50)|1))) {
    case newVar: (Option<Int64>, UInt8, String, UInt64, Option<Int64>) => Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.Some(newVar)
    case _ => Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.None
})
public var var_1713698739688_597 : Range<UInt8> = ((UInt8(UInt8(124))&127)..(UInt8(UInt8(194))&127):(Int64(86)|1))
public var var_1713698739688_604 : UInt16 = UInt16(UInt16(Int8(Int8(-33))))
public let var_1713698739688_643 : Array<Struct_1713698739688_77> = [Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77()]
public const var_1713698739688_664 : UInt8 = 127
var var_1713698739688_691 : Int16 = Int16(40)
public var var_1713698739688_780 : UInt = UInt64(97)
var var_1713698739688_882 : Int = Int64(Int64(Int16(UInt16(153))))
public open class Class_1713698739688_27 {
    public init() { // block id: 29

    }
;
    static const var_1713698739688_32 : Int = 102;
    public static var var_1713698739688_151 : Rune = r'N';
    public Class_1713698739688_27(param_1713698739688_331 : Range<UInt8>) { // block id: 332
        let var_1713698739688_358 : Int = Int64(UInt64(43));
        var var_1713698739688_382 : Option<Int32> = Option<Int32>.Some(Int32(UInt16(210)));
        let var_1713698739688_398 : ?(Option<Int64>, UInt8, String, UInt64, Option<Int64>) = (match ((match (Float32(-31.0)) {
            case newVar: Array<Struct_1713698739688_77> => Option<Array<Struct_1713698739688_77>>.Some(newVar)
            case _ => Option<Array<Struct_1713698739688_77>>.None
        })) {
            case newVar: (Option<Int64>, UInt8, String, UInt64, Option<Int64>) => Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.Some(newVar)
            case _ => Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.None
        });
        var_1713698739688_339.var_1713698739688_342 >>= ((match ((match (Option<Range<Int8>>.Some(((Int8(Int8(88))&127)..=(Int8(Int8(-118))&127):(Int64(-115)|1)))) {
            case Some(num) => num
            case None => ((Int8(var_1713698739688_354)&127)..(Int8(Int8(123))&127):(var_1713698739688_358|1))
        })) {
            case caseVar_1713698739688_363 : Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)> => 
                Int16(-106) * Int16(56)
            
            case caseVar_1713698739688_370 => 
                if (var_1713698739688_36) { ((UInt64(UInt64(15))&127)..=(UInt64(UInt64(249))&127):(Int64(-70)|1)) } else { ((UInt64(var_1713698739688_377)&127)..(UInt64(UInt64(169))&127):(Int64(-56)|1)) } ;
                var_1713698739688_382;
                const var_1713698739688_388 : Int16 = 91;
                var_1713698739688_388 - var_1713698739688_388
            
            case _ => 
                var_1713698739688_395;
                var_1713698739688_398;
                Int16(-67)
            
        }) & 7)
    }
;
    public mut prop var_1713698739688_569 : Unit { // block id: 570
        get() { // block id: 572
            ();
            ();
            ()
        }

        set(Value) { // block id: 578
            ()
        }

    }
}




public struct Struct_1713698739688_77 {
    public Struct_1713698739688_77() { // block id: 79

    }
;
    static const var_1713698739688_192 : Unit = ();
    public init(param_1713698739688_134 : Range<UInt8>, param_1713698739688_135 : Option<Int32>, optionalParam_1713698739688_136 ! : String = """
vvMs8
[:mvy
""", namedParam_1713698739688_138 ! : Int16) { // block id: 139
        let var_1713698739688_159 : Enum_1713698739688_156<Array<Struct_1713698739688_77>, Option<Int64>, Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>> = Enum_1713698739688_156<Array<Struct_1713698739688_77>, Option<Int64>, Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>>.enumValue_1713698739688_161([UInt64(235), UInt64(Int32(Int32(21))), UInt64(215), UInt64(Int64(118)), UInt64(UInt16(137)), UInt64(147), UInt64(229), UInt64(87), UInt64(167), UInt64(Int32(Int32(-93)))], Class_1713698739688_27(), ((Int32(Int32(11))&127)..(Int32(Int32(123))&127):(Int64(-78)|1)), Int32(UInt32(Int32(35))));
        let var_1713698739688_195 : Array<Int16> = [Int16(UInt16(232)), Int16(6), Int16(Int16(Int16(Int16(-115)))), Int16(Int16(Int16(Int16(-58)))), Int16(Int16(Int16(11))), Int16(-44), Int16(Int8(-111)), Int16(-38), Int16(Int16(117)), Int16(UInt8(UInt8(Int8(110))))];
        func_1713698739688_141<Rune>(Class_1713698739688_27.var_1713698739688_151, optionalParam_1713698739688_143 : match (var_1713698739688_159) {
            case _ => 
                var_1713698739688_192;
                var_1713698739688_195
            
        }[8])
    }
;
    static mut prop var_1713698739688_284 : Int8 { // block id: 285
        get() { // block id: 287
            ();
            Int8(Int8(UInt8(UInt8(44))))
        }

        set(Value) { // block id: 295
            ();
            ((UInt64(UInt64(142))&127)..=(UInt64(UInt64(130))&127):(Int64(5)|1));
            ()
        }

    };
    init(optionalParam_1713698739688_254 ! : Class_1713698739688_27 = Class_1713698739688_27(), namedParam_1713698739688_256 ! : Class_1713698739688_27, optionalParam_1713698739688_257 ! : Range<UInt16> = ((UInt16(UInt16(25))&127)..=(UInt16(UInt16(231))&127):(Int64(47)|1)), namedParam_1713698739688_262 ! : UInt32) { // block id: 263
        (var_1713698739688_270.var_1713698739688_273)(var_1713698739688_284)
    }
;
    private static var var_1713698739688_529 : Array<UInt64> = [UInt64(173), UInt64(162), UInt64(226), UInt64(131), UInt64(189), UInt64(175), UInt64(146), UInt64(9), UInt64(93), UInt64(216)];
    private static let var_1713698739688_543 : Range<UInt16> = ((UInt16(UInt16(100))&127)..(UInt16(UInt16(41))&127):(Int64(33)|1));
    private static var var_1713698739688_548 : Int32 = Int32(-57);
    public init(namedParam_1713698739688_508 ! : Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>) { // block id: 509
        let var_1713698739688_520 : Struct_1713698739688_516<Array<UInt64>, Range<UInt16>> = Struct_1713698739688_516<Array<UInt64>, Range<UInt16>>();
        (match (var_1713698739688_520.var_1713698739688_523) {
            case Some(num) => num
            case None => try { // block id: 526
            Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.None;
            var_1713698739688_529
        } finally { // block id: 531
            [UInt64(102), UInt64(189), UInt64(170), UInt64(115), UInt64(224), UInt64(80), UInt64(80), UInt64(45), UInt64(7), UInt64(233)]
        }
        });
        match ((match ([Int32(115), Int32(-71), Int32(94), Int32(25), Int32(-109), Int32(35), Int32(86), Int32(-122), Int32(-64), Int32(-119)][8]) {
            case newVar: Range<Int8> => Option<Range<Int8>>.Some(newVar)
            case _ => Option<Range<Int8>>.None
        })) {
            case _ : Range<Int16> => 
                var_1713698739688_543;
                ((Int32(Int32(-10))&127)..(Int32(var_1713698739688_548)&127):(var_1713698739688_457|1));
                [var_1713698739688_377, var_1713698739688_377, UInt64(15), var_1713698739688_377, UInt64(202), UInt64(226), UInt64(252), UInt64(96), var_1713698739688_377, var_1713698739688_377]
            
            case _ => 
                var_1713698739688_529
            
        };
        var_1713698739688_339.var_1713698739688_569
    }
;
    init(param_1713698739688_587 : UInt64, param_1713698739688_588 : Range<Int64>) { // block id: 589
        var_1713698739688_395
    }
;
    init(param_1713698739688_708 : Int16, param_1713698739688_709 : String) { // block id: 710
        var var_1713698739688_715 : Array<Range<UInt8>> = [((UInt8(UInt8(166))&127)..(UInt8(UInt8(95))&127):(Int64(49)|1)), ((UInt8(UInt8(139))&127)..(UInt8(UInt8(203))&127):(Int64(75)|1)), ((UInt8(UInt8(66))&127)..(UInt8(UInt8(66))&127):(Int64(-65)|1)), ((UInt8(UInt8(240))&127)..(UInt8(UInt8(133))&127):(Int64(-71)|1)), ((UInt8(UInt8(166))&127)..(UInt8(UInt8(145))&127):(Int64(-4)|1)), ((UInt8(UInt8(203))&127)..=(UInt8(UInt8(95))&127):(Int64(Int8(-88))|1)), ((UInt8(UInt8(UInt8(230)))&127)..(UInt8(UInt8(125))&127):(Int64(Int64(Int16(-56)))|1)), ((UInt8(UInt8(108))&127)..(UInt8(UInt8(9))&127):(Int64(29)|1)), ((UInt8(UInt8(65))&127)..(UInt8(UInt8(76))&127):(Int64(91)|1)), ((UInt8(UInt8(180))&127)..(UInt8(UInt8(78))&127):(Int64(79)|1))];
        Class_1713698739688_27(var_1713698739688_715[2])
    }
;
    init(optionalParam_1713698739688_742 ! : Range<UInt16> = ((UInt16(UInt16(224))&127)..(UInt16(UInt16(141))&127):(Int64(-62)|1)), optionalParam_1713698739688_744 ! : Option<Int32> = (match ("""
LA;8s
}^nft
""") {
        case newVar: Int32 => Option<Int32>.Some(newVar)
        case _ => Option<Int32>.None
    }), namedParam_1713698739688_747 ! : Array<Int32>, namedParam_1713698739688_748 ! : (Rune, Int16, Range<UInt32>) -> Unit) { // block id: 753
        var loopTimeVar_1713698739688_785 : Range<UInt64> = ((UInt64(UInt64(Int32(30)))&127)..=(UInt64(UInt64(Int64(-31)))&127):(Int64(97)|1));
        (match (Option<Unit>.Some(())) {
            case Some(num) => num
            case None => for (i in loopTimeVar_1713698739688_785 where if (false) { // block id: 764
            var var_1713698739688_767 : UInt16 = UInt16(UInt8(92));
            var_1713698739688_767 = var_1713698739688_767 ^ (var_1713698739688_767);
            ();
            false
        } else { // block id: 773
            var_1713698739688_192;
            var_1713698739688_192;
            var_1713698739688_36
        }) {
            var_1713698739688_780 = var_1713698739688_780 / ((UInt64(54)) | 1);
            var_1713698739688_691 = var_1713698739688_691 - 1
        }
        })
    }
;
    mut prop var_1713698739688_894 : Int64 { // block id: 895
        get() { // block id: 897
            ();
            Int64(111);
            var_1713698739688_907
        }

        set(Value) { // block id: 902
            ();
            var_1713698739688_907 = Value
        }

    };
    mut prop var_1713698739688_907 : Int64 { // block id: 908
        get() { // block id: 910
            [((UInt8(UInt8(198))&127)..=(UInt8(UInt8(212))&127):(Int64(48)|1)), ((UInt8(UInt8(171))&127)..=(UInt8(UInt8(221))&127):(Int64(82)|1)), ((UInt8(UInt8(154))&127)..(UInt8(UInt8(219))&127):(Int64(99)|1)), ((UInt8(UInt8(116))&127)..(UInt8(UInt8(198))&127):(Int64(35)|1)), ((UInt8(UInt8(193))&127)..(UInt8(UInt8(227))&127):(Int64(56)|1)), ((UInt8(UInt8(165))&127)..(UInt8(UInt8(209))&127):(Int64(78)|1)), ((UInt8(UInt8(132))&127)..=(UInt8(UInt8(159))&127):(Int64(94)|1)), ((UInt8(UInt8(195))&127)..=(UInt8(UInt8(175))&127):(Int64(-90)|1)), ((UInt8(UInt8(41))&127)..(UInt8(UInt8(43))&127):(Int64(-94)|1)), ((UInt8(UInt8(0))&127)..=(UInt8(UInt8(179))&127):(Int64(-61)|1))];
            Int64(Int32(125))
        }

        set(Value) { // block id: 916
            UInt8(238);
            ();
            ()
        }

    }
}


func func_1713698739688_141<T0>(param_1713698739688_142 : T0, optionalParam_1713698739688_143 ! : Int16 = Int16(104), optionalParam_1713698739688_145 ! : Range<UInt32> = ((UInt32(UInt32(122))&127)..=(UInt32(UInt32(50))&127):(Int64(-10)|1))) : Unit { // block id: 147

    return
}

public enum Enum_1713698739688_156<T0, T1, T2> {
    defaultValue |
    enumValue_1713698739688_161(Array<UInt64>, Class_1713698739688_27, Range<Int32>, Int32)
}
public struct Struct_1713698739688_266<T0, T1> {
    public init() { // block id: 268

    }
;
    public mut prop var_1713698739688_273 : Int8 { // block id: 274
        get() { // block id: 276
            ();
            Int8(102)
        }

        set(Value) { // block id: 281
            ()
        }

    }
}

public enum Enum_1713698739688_304<T0> {
    defaultValue |
    enumValue_1713698739688_309(Int32)
}
public open class Class_1713698739688_335 <: Class_1713698739688_27 {
    public init() { // block id: 337

    }
;
    public var var_1713698739688_342 : Int16 = Int16(102);
    public prop var_1713698739688_635 : Struct_1713698739688_77 { // block id: 636
        get() { // block id: 638
            Struct_1713698739688_77()
        }

    }
}



public struct Struct_1713698739688_516<T0, T1> {
    public init() { // block id: 518

    }
;
    var var_1713698739688_523 : Option<Array<UInt64>> = Option<Array<UInt64>>.None
}


public func func_1713698739688_103<T0, T1>(param_1713698739688_104 : Int8) : Array<Struct_1713698739688_77> { // block id: 105
    var var_1713698739688_128 : Array<Struct_1713698739688_77> = [Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(((UInt8(UInt8(78))&127)..(UInt8(UInt8(123))&127):(Int64(Int8(10))|1)), Option<Int32>.None, optionalParam_1713698739688_136 : "Y%d;j\\&S0w", namedParam_1713698739688_138 : Int16(Int8(71))), Struct_1713698739688_77(), Struct_1713698739688_77(((UInt8(UInt8(213))&127)..=(UInt8(UInt8(161))&127):(Int64(93)|1)), Option<Int32>.Some(Int32(52)), namedParam_1713698739688_138 : Int16(Int8(114))), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(), Struct_1713698739688_77(((UInt8(UInt8(UInt8(206)))&127)..=(UInt8(UInt8(161))&127):(Int64(Int8(-118))|1)), (match (UInt64(32)) {
        case newVar: Int32 => Option<Int32>.Some(newVar)
        case _ => Option<Int32>.None
    }), optionalParam_1713698739688_136 : ###"-<,PIR+o*>"###, namedParam_1713698739688_138 : Int16(0)), Struct_1713698739688_77(optionalParam_1713698739688_254 : Class_1713698739688_27(), namedParam_1713698739688_256 : Class_1713698739688_27(), namedParam_1713698739688_262 : UInt32(195))];
    var var_1713698739688_326 : Class_1713698739688_27 = Class_1713698739688_27();
    let var_1713698739688_415 : Struct_1713698739688_77 = Struct_1713698739688_77(((UInt8(UInt8(195))&127)..=(UInt8(UInt8(139))&127):(Int64(74)|1)), (match (Class_1713698739688_335()) {
        case newVar: Int32 => Option<Int32>.Some(newVar)
        case _ => Option<Int32>.None
    }), optionalParam_1713698739688_136 : """
|+G`^
*n~f<
""", namedParam_1713698739688_138 : Int16(UInt16(UInt8(165))));
    var var_1713698739688_460 : (Option<Int64>, UInt8, String, UInt64, Option<Int64>) = ((match (r'M') {
        case newVar: Int64 => Option<Int64>.Some(newVar)
        case _ => Option<Int64>.None
    }), UInt8(UInt8(29)), "TbajXH}(qy", UInt64(Int16(-36)), Option<Int64>.Some(Int64(-105)));
    var var_1713698739688_500 : ?Int64 = Option<Int64>.None;
    let var_1713698739688_656 : Range<Int8> = ((Int8(Int8(-96))&127)..(Int8(Int8(-23))&127):(Int64(11)|1));
    let var_1713698739688_677 : Option<Int32> = (match ((Option<Int64>.Some(Int64(Int16(81))), UInt8(244), ###"N&q)z9[CYc"###, UInt64(Int32(Int16(92))), Option<Int64>.None)) {
        case newVar: Int32 => Option<Int32>.Some(newVar)
        case _ => Option<Int32>.None
    });
    let var_1713698739688_696 : Range<Int64> = ((Int64(Int64(103))&127)..(Int64(Int64(-114))&127):(Int64(-123)|1));
    var var_1713698739688_704 : Array<Struct_1713698739688_77> = [Struct_1713698739688_77(Int16(124), """
Gp58C
1J0P1
"""), Struct_1713698739688_77(namedParam_1713698739688_747 : [Int32(UInt32(127)), Int32(UInt16(17)), Int32(5), Int32(-103), Int32(63), Int32(44), Int32(UInt8(6)), Int32(1), Int32(UInt16(203)), Int32(UInt32(174))], namedParam_1713698739688_748 : func_1713698739688_141<Rune>), Struct_1713698739688_77(namedParam_1713698739688_747 : [Int32(8), Int32(-108), Int32(-15), Int32(61), Int32(-48), Int32(-125), Int32(123), Int32(-47), Int32(36), Int32(-114)], namedParam_1713698739688_748 : func_1713698739688_141<Rune>), Struct_1713698739688_77(Int16(-106), "o5~Ty^a!E2"), Struct_1713698739688_77(namedParam_1713698739688_508 : Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.Some((Option<Int64>.None, UInt8(135), "<OJPVv^+oY", UInt64(34), Option<Int64>.Some(Int64(25))))), Struct_1713698739688_77(namedParam_1713698739688_508 : Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.Some((Option<Int64>.Some(Int64(-80)), UInt8(119), "YrNoe8zBnU", UInt64(164), Option<Int64>.Some(Int64(99))))), Struct_1713698739688_77(UInt64(Int32(UInt32(66))), ((Int64(Int64(-98))&127)..=(Int64(Int64(-56))&127):(Int64(64)|1))), Struct_1713698739688_77(((UInt8(UInt8(37))&127)..(UInt8(UInt8(132))&127):(Int64(-55)|1)), Option<Int32>.Some(Int32(116)), optionalParam_1713698739688_136 : """
}AU+6
a4-tR
""", namedParam_1713698739688_138 : Int16(Int16(Int16(109)))), Struct_1713698739688_77(namedParam_1713698739688_508 : Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.Some((Option<Int64>.None, UInt8(251), """
Tn@:B
|9]e7
""", UInt64(75), Option<Int64>.Some(Int64(-102))))), Struct_1713698739688_77(((UInt8(UInt8(214))&127)..=(UInt8(UInt8(254))&127):(Int64(UInt8(9))|1)), (match (Class_1713698739688_335()) {
        case newVar: Int32 => Option<Int32>.Some(newVar)
        case _ => Option<Int32>.None
    }), namedParam_1713698739688_138 : Int16(38))];
    (match (try { // block id: 112
        ();
        var var_1713698739688_115 : ?Array<Struct_1713698739688_77> = (match (UInt16(UInt16(Int8(Int8(-59))))) {
            case newVar: Array<Struct_1713698739688_77> => Option<Array<Struct_1713698739688_77>>.Some(newVar)
            case _ => Option<Array<Struct_1713698739688_77>>.None
        });
        var_1713698739688_115
    } catch (e: Exception) { // block id: 121
        var var_1713698739688_123 : ?Array<Struct_1713698739688_77> = Option<Array<Struct_1713698739688_77>>.None;
        var_1713698739688_123
    } finally { // block id: 125
        Option<Array<Struct_1713698739688_77>>.Some(var_1713698739688_128)
    }) {
        case Some(num) => num
        case None => [match (var_1713698739688_307) {
        case caseVar_1713698739688_314 => 
            var var_1713698739688_318 : Byte = UInt8(UInt8(Int8(Int8(UInt8(209)))));
            var_1713698739688_318 = var_1713698739688_318 << ((var_1713698739688_318) & 7);
            var_1713698739688_326;
            Struct_1713698739688_77(optionalParam_1713698739688_254 : Class_1713698739688_27(((UInt8(UInt8(188))&127)..(UInt8(UInt8(234))&127):(Int64(-2)|1))), namedParam_1713698739688_256 : var_1713698739688_326, optionalParam_1713698739688_257 : ((UInt16(UInt16(209))&127)..=(UInt16(UInt16(141))&127):(Int64(14)|1)), namedParam_1713698739688_262 : var_1713698739688_407)
        
        case enumValue_1713698739688_309(caseVar_1713698739688_411 : Class_1713698739688_335) => 
            var_1713698739688_395;
            var_1713698739688_415
        
        case enumValue_1713698739688_309(caseVar_1713698739688_426) => 
            Option<Range<Int8>>.Some(((Int8(Int8(88))&127)..(Int8(Int8(-9))&127):(Int64(-121)|1)));
            var var_1713698739688_435 : Int16 = Int16(57);
            Struct_1713698739688_77(((UInt8(UInt8(77))&127)..=(UInt8(UInt8(221))&127):(Int64(5)|1)), Option<Int32>.Some(Int32(29)), namedParam_1713698739688_138 : var_1713698739688_435)
        
        case _ => 
            if (false) { Class_1713698739688_27(((UInt8(UInt8(216))&127)..=(UInt8(UInt8(5))&127):(Int64(-5)|1))) } else { var_1713698739688_326 } ;
            Struct_1713698739688_77()
        
    }, (var_1713698739688_128, ((Int8(var_1713698739688_354)&127)..(Int8(var_1713698739688_354)&127):(var_1713698739688_457|1)), var_1713698739688_460, Int64(-80), var_1713698739688_415, UInt8(162), Class_1713698739688_335())[4], if (var_1713698739688_36) { var_1713698739688_415 } else { var_1713698739688_415 } , if (true) { // block id: 483
        var var_1713698739688_485 : Struct_1713698739688_77 = Struct_1713698739688_77(((UInt8(UInt8(187))&127)..(UInt8(UInt8(191))&127):(Int64(-68)|1)), (match (r'Z') {
            case newVar: Int32 => Option<Int32>.Some(newVar)
            case _ => Option<Int32>.None
        }), optionalParam_1713698739688_136 : "+kzZFi-[Kj", namedParam_1713698739688_138 : Int16(114));
        var_1713698739688_485
    } else if (var_1713698739688_36) { // block id: 493
        if (true) { var_1713698739688_415 } else { var_1713698739688_415 } 
    } else { // block id: 498
        var_1713698739688_500;
        ();
        var_1713698739688_415
    }, [Struct_1713698739688_77(namedParam_1713698739688_508 : var_1713698739688_581), var_1713698739688_415, Struct_1713698739688_77(UInt64(87), ((Int64(Int64(-54))&127)..=(Int64(Int64(-77))&127):(Int64(30)|1))), var_1713698739688_415, Struct_1713698739688_77(namedParam_1713698739688_256 : Class_1713698739688_27(var_1713698739688_597), optionalParam_1713698739688_257 : ((UInt16(var_1713698739688_604)&127)..(UInt16(UInt16(112))&127):(var_1713698739688_457|1)), namedParam_1713698739688_262 : var_1713698739688_407), Struct_1713698739688_77(), Struct_1713698739688_77(optionalParam_1713698739688_254 : var_1713698739688_326, namedParam_1713698739688_256 : var_1713698739688_326, optionalParam_1713698739688_257 : ((UInt16(UInt16(83))&127)..=(UInt16(var_1713698739688_604)&127):(Int64(-125)|1)), namedParam_1713698739688_262 : UInt32(106)), Struct_1713698739688_77(namedParam_1713698739688_256 : Class_1713698739688_335(), namedParam_1713698739688_262 : UInt32(230)), var_1713698739688_415, Struct_1713698739688_77(UInt64(169), ((Int64(Int64(-27))&127)..=(Int64(var_1713698739688_457)&127):(var_1713698739688_457|1)))][5], var_1713698739688_339.var_1713698739688_635, (var_1713698739688_643, var_1713698739688_656, var_1713698739688_460, Int64(-59), Struct_1713698739688_77(namedParam_1713698739688_256 : Class_1713698739688_27(((UInt8(var_1713698739688_664)&127)..=(UInt8(UInt8(5))&127):(var_1713698739688_457|1))), namedParam_1713698739688_262 : var_1713698739688_407), var_1713698739688_664, Class_1713698739688_335())[4], if (true) { Struct_1713698739688_77(var_1713698739688_597, var_1713698739688_677, optionalParam_1713698739688_136 : ###"FD2|M^(QUa"###, namedParam_1713698739688_138 : var_1713698739688_691) } else { Struct_1713698739688_77(UInt64(189), var_1713698739688_696) } , var_1713698739688_339.var_1713698739688_635, var_1713698739688_704[2]]
    })
}

main(): Int64 {
    try {
        const func func_1713698739688_7<T0>(namedParam_1713698739688_8 ! : Int32, namedParam_1713698739688_9 ! : UInt64, optionalParam_1713698739688_10 ! : Int8 = 96, optionalParam_1713698739688_12 ! : Float32 = -118.0) : Unit { // block id: 14

            return
        }
;
        try { // block id: 5
            var var_1713698739688_16 : Int32 = Int32(102);
            func_1713698739688_7<Unit>(namedParam_1713698739688_8 : var_1713698739688_16, namedParam_1713698739688_9 : UInt64(72), optionalParam_1713698739688_12 : Float32(42.0));
            if (false) { // block id: 22
                ()
            };
            Int32(16)
        } finally { // block id: 25
            Class_1713698739688_27.var_1713698739688_32;
            var var_1713698739688_40 : Class_1713698739688_27 = Class_1713698739688_27();
            if (var_1713698739688_36) { var_1713698739688_40 } else { Class_1713698739688_27() } ;
            let var_1713698739688_50 : Int32 = Int32(78);
            (match (Option<Int32>.None) {
                case Some(num) => num
                case None => var_1713698739688_50
            })
        };
        let var_1713698739688_67 : ?Int64 = Option<Int64>.Some(Int64(Int16(36)));
        func func_1713698739688_81<T0>(param_1713698739688_82 : Unit, param_1713698739688_83 : Rune, optionalParam_1713698739688_84 ! : Bool = (match (Float64(Float64(Float32(Float32(124.0))))) {
            case _: Option<Int32> => true
            case _ => false
        })) : Struct_1713698739688_77 { // block id: 90
            var var_1713698739688_874 : Int8 = Int8(UInt8(Int8(UInt8(159))));
            (func_1713698739688_103<Option<Range<Int8>>, Option<Array<UInt64>>>(if (true) { // block id: 869
                Int8(96)
            } else if (true) { // block id: 872
                var_1713698739688_874
            } else { // block id: 879
                var_1713698739688_882 = var_1713698739688_882 - 1;
                ();
                Int8(118)
            }))[4]
        }
;
        (match ((match (Option<(Option<Int64>, UInt8, String, UInt64, Option<Int64>)>.None) {
            case Some(num) => num
            case None => (var_1713698739688_67, UInt8(217), "x P((,~pa{1", UInt64(0), var_1713698739688_67)
        })[4]) {
            case Some(num) => num
            case None => func_1713698739688_81<Range<UInt32>>((), r'0', optionalParam_1713698739688_84 : true).var_1713698739688_894
        })
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1713698739688_354*var_1713698739688_354), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_377*var_1713698739688_377), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_407*var_1713698739688_407), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_457*var_1713698739688_457), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_604*var_1713698739688_604), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_664*var_1713698739688_664), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_691*var_1713698739688_691), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_780*var_1713698739688_780), 64)
        crcCheck.updateBuffer(UInt64(var_1713698739688_882*var_1713698739688_882), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Int8 {
    operator func ()(x: Int8): Int8 {
        return this - x
    }
}

extend<T0, T1, T2> Enum_1713698739688_156<T0, T1, T2> {

}

extend<T0, T1> Struct_1713698739688_516<T0, T1> {

}

extend Class_1713698739688_27 {

}

