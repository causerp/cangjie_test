/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1735048483908_32: Class_1735048483908_28<Rune, Range<Int64>, Float64> = Class_1735048483908_28<Rune, Range<Int64>, Float64>()
public let var_1735048483908_118: Int = Int64(-9)
public let var_1735048483908_132: Option<Unit> = (match ((match (((Int64(Int64(UInt8(63))) & 127)..=(Int64(Int64(UInt16(76))) &
    127) : (Int64(UInt64(80)) | 1))) {
    case _: Range<UInt16> => true
    case _ => false
})) {
    case newVar: Unit => Option<Unit>.Some(newVar)
    case _ => Option<Unit>.None
})
internal var var_1735048483908_182: UInt16 = UInt16(225)
public let var_1735048483908_191: Unit = ()
@Deprecated
public var var_1735048483908_201: Int64 = Int64(-111)
let var_1735048483908_285: Range<UInt32> = ((UInt32(UInt32(Int8(-7))) & 127)..=(UInt32(UInt32(Int16(UInt16(107)))) & 127) : (Int64(97) |
    1))
var var_1735048483908_303: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) = (((Int32(Int32(Int8(71))) & 127)..(Int32(Int32(UInt32(26))) &
        127) : (Int64(UInt64(UInt32(112))) | 1)), ((UInt16(UInt16(90)) & 127)..=(UInt16(UInt16(149)) & 127) : (Int64(121) |
        1)), Float32(Float32(91.0)), (match (Float64(-33.0)) {
        case _: Range<UInt64> => true
        case _ => false
    }), ((UInt32(UInt32(191)) & 127)..(UInt32(UInt32(92)) & 127) : (Int64(30) | 1)))
@Deprecated
public let var_1735048483908_320: Range<Int64> = ((Int64(Int64(99)) & 127)..=(Int64(Int64(7)) & 127) : (Int64(96) | 1))
internal let var_1735048483908_323: UInt = UInt64(Int16(-81))
var var_1735048483908_349: Unit = ()
public const var_1735048483908_373: Float32 = 108.0
internal let var_1735048483908_486: UInt32 = UInt32(Int16(Int8(Int8(UInt8(195)))))
public let var_1735048483908_536: (String, Range<Int64>, Range<UInt64>, Int16, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), 
    Range<UInt64>, Struct_1735048483908_162, Bool) = (###".qX^ef5$|Q"###, ((Int64(Int64(76)) & 127)..=(Int64(Int64(-30)) &
        127) : (Int64(-83) | 1)), ((UInt64(UInt64(27)) & 127)..(UInt64(UInt64(94)) & 127) : (Int64(-35) | 1)), Int16(-30),
    ((match ((match ((true, r'B', ";dIC9Kj0JA", Int8(22), [(), (), (), (), (), (), (), (), (), ()], (((Int32(Int32(85)) &
                    127)..=(Int32(Int32(56)) & 127) : (Int64(-54) | 1)), ((UInt16(UInt16(168)) & 127)..=(UInt16(UInt16(224)) &
                    127) : (Int64(49) | 1)), Float32(-85.0), true, ((UInt32(UInt32(6)) & 127)..(UInt32(UInt32(44)) & 127) : (Int64(83) |
                    1))), ((Int64(Int64(116)) & 127)..=(Int64(Int64(-70)) & 127) : (Int64(95) | 1)), UInt64(102))) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        })) {
            case _: Array<Unit> => true
            case _ => false
        }), VArray<Unit, $8>({i => ()}), Float64(-56.0), ((UInt32(UInt32(87)) & 127)..(UInt32(UInt32(32)) & 127) : (Int64(105) |
            1))), ((UInt64(UInt64(192)) & 127)..(UInt64(UInt64(UInt64(24))) & 127) : (Int64(Int64(93)) | 1)),
    Struct_1735048483908_162(), (match (UInt32(Int8(Int8(-15)))) {
        case _: Class_1735048483908_416 => true
        case _ => false
    }))
internal var var_1735048483908_762: Class_1735048483908_758<Rune, Int8, Option<Range<Int8>>> = Class_1735048483908_758<Rune, Int8, Option<Range<Int8>>>()
var var_1735048483908_836: String = """
7vK'/
\\]$jm
"""
internal let var_1735048483908_873: (Int8, Range<Int64>, Range<UInt32>, Class_1735048483908_845, Unit) = (Int8(Int8(UInt8(UInt8(10)))),
    ((Int64(Int64(UInt32(118))) & 127)..=(Int64(Int64(126)) & 127) : (Int64(Int64(Int32(-44))) | 1)), ((UInt32(UInt32(Int8(-20))) &
        127)..=(UInt32(UInt32(Int8(-44))) & 127) : (Int64(Int32(-37)) | 1)), Class_1735048483908_845(), ())
@Deprecated
internal const var_1735048483908_908: UInt64 = 243
let var_1735048483908_915: Range<Int32> = ((Int32(Int32(-126)) & 127)..=(Int32(Int32(Int16(86))) & 127) : (Int64(-54) | 1))
@Deprecated
internal const var_1735048483908_929: Bool = false
internal let var_1735048483908_935: Int = Int64(-4)
@Deprecated
public var var_1735048483908_938: ?Range<Int8> = Option<Range<Int8>>.None
var var_1735048483908_953: UInt8 = UInt8(Int8(-32))
public let var_1735048483908_1026: Unit = ()
public let var_1735048483908_1041: Option<UInt8> = (match (Int64(UInt64(230))) {
    case newVar: UInt8 => Option<UInt8>.Some(newVar)
    case _ => Option<UInt8>.None
})
@Deprecated
var var_1735048483908_1114: Unit = ()
internal let var_1735048483908_1180: VArray<Unit, $8> = [(), (), (), (), (), (), (), ()]
internal let var_1735048483908_1219: Class_1735048483908_845 = Class_1735048483908_845()
public let var_1735048483908_1243: Class_1735048483908_1237 = Class_1735048483908_1237()
@Deprecated
internal let var_1735048483908_1441: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()]
var var_1735048483908_1493: Int16 = Int16(-47)
public var var_1735048483908_1753: Range<UInt16> = ((UInt16(UInt16(168)) & 127)..(UInt16(UInt16(42)) & 127) : (Int64(78) |
    1))
@Deprecated
public var var_1735048483908_1758: Int16 = Int16(7)
public let var_1735048483908_1883: Option<(String, Bool, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Int64, (UInt16, 
    Range<UInt32>, Array<Unit>))> = Option<(String, Bool, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Int64, (UInt16, 
        Range<UInt32>, Array<Unit>))>.None
@Deprecated
internal let var_1735048483908_1913: (String, Bool, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Int64, (UInt16, 
    Range<UInt32>, Array<Unit>)) = ("w${var_1735048483908_836}P*${var_1735048483908_836}d?${var_1735048483908_836}a{qr${var_1735048483908_836}p${var_1735048483908_836}0",
    true, ((match (Struct_1735048483908_162()) {
            case _: UInt16 => true
            case _ => false
        }), VArray<Unit, $8>({i => ()}), Float64(-100.0), ((UInt32(UInt32(117)) & 127)..(UInt32(UInt32(238)) & 127) : (Int64(-30) |
            1))), Int64(-89), (UInt16(160), ((UInt32(UInt32(Int32(-111))) & 127)..=(UInt32(UInt32(251)) & 127) : (Int64(95) |
            1)), [(), (), (), (), (), (), (), (), (), ()]))
const var_1735048483908_1986: Float64 = 69.0
let var_1735048483908_2018: Array<UInt64> = [UInt64(124), UInt64(82), UInt64(140), UInt64(201), UInt64(251), UInt64(180),
    UInt64(125), UInt64(81), UInt64(79), UInt64(231)]
internal let var_1735048483908_2066: Int32 = Int32(-22)
internal let var_1735048483908_2105: Range<UInt8> = ((UInt8(UInt8(93)) & 127)..=(UInt8(UInt8(119)) & 127) : (Int64(UInt32(UInt32(Int16(115)))) |
    1))
var var_1735048483908_2117: Bool = (match (((Int32(Int32(98)) & 127)..=(Int32(Int32(22)) & 127) : (Int64(-100) | 1))) {
    case _: Class_1735048483908_758<Rune, Int8, Option<Range<Int8>>> => true
    case _ => false
})
public let var_1735048483908_2253: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) = (false, VArray<Unit, $8>(repeat: ()),
    Float64(-62.0), ((UInt32(UInt32(Int8(Int8(-113)))) & 127)..=(UInt32(UInt32(194)) & 127) : (Int64(-4) | 1)))
@Deprecated
var var_1735048483908_2319: Unit = ()
internal let var_1735048483908_2330: (Array<UInt64>, Int32, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), 
    Option<Range<Int8>>, Array<VArray<Unit, $8>>, Range<UInt8>) = ([UInt64(Int16(-110)), UInt64(Int8(Int8(-126))),
        UInt64(157), UInt64(UInt32(Int16(22))), UInt64(236), UInt64(Int8(Int8(96))), UInt64(UInt16(140)), UInt64(218),
        UInt64(56), UInt64(3)], Int32(90), (((Int32(Int32(-17)) & 127)..(Int32(Int32(UInt16(31))) & 127) : (Int64(-77) |
            1)), ((UInt16(UInt16(81)) & 127)..=(UInt16(UInt16(UInt8(106))) & 127) : (Int64(-74) | 1)), Float32(Float32(Float32(77.0))),
        (match (UInt8(45)) {
            case _: Option<Int32> => true
            case _ => false
        }), ((UInt32(UInt32(173)) & 127)..=(UInt32(UInt32(77)) & 127) : (Int64(93) | 1))), (match (((Int32(Int32(19)) &
        127)..(Int32(Int32(-39)) & 127) : (Int64(50) | 1))) {
        case newVar: Range<Int8> => Option<Range<Int8>>.Some(newVar)
        case _ => Option<Range<Int8>>.None
    }), [VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()})], ((UInt8(UInt8(75)) & 127)..(UInt8(UInt8(252)) & 127) : (Int64(-16) | 1)))
const var_1735048483908_2709: Bool = true
internal let var_1735048483908_2720: Option<Option<Range<Int8>>> = (match (Class_1735048483908_845()) {
    case newVar: Option<Range<Int8>> => Option<Option<Range<Int8>>>.Some(newVar)
    case _ => Option<Option<Range<Int8>>>.None
})
var var_1735048483908_2804: Float32 = Float32(109.0)
const var_1735048483908_2877: Bool = false
@Deprecated
public let var_1735048483908_2899: Option<(Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>)> = (match (("X`${var_1735048483908_836}qa{ p^l#,",
    ((Int64(Int64(51)) & 127)..=(Int64(Int64(87)) & 127) : (Int64(40) | 1)), ((UInt64(UInt64(136)) & 127)..=(UInt64(UInt64(84)) &
        127) : (Int64(102) | 1)), Int16(97), (false, VArray<Unit, $8>(repeat: ()), Float64(Float32(-49.0)), ((UInt32(UInt32(94)) &
            127)..(UInt32(UInt32(101)) & 127) : (Int64(22) | 1))), ((UInt64(UInt64(Int8(-105))) & 127)..=(UInt64(UInt64(Int64(124))) &
        127) : (Int64(-96) | 1)), Struct_1735048483908_162(), (match (((Int64(Int64(86)) & 127)..(Int64(Int64(-106)) &
        127) : (Int64(-52) | 1))) {
        case _: Class_1735048483908_845 => true
        case _ => false
    }))) {
    case newVar: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) => Option<(Range<Int32>, Range<UInt16>, 
            Float32, Bool, Range<UInt32>)>.Some(newVar)
    case _ => Option<(Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>)>.None
})
const var_1735048483908_2944: Int8 = 62
@Deprecated
let var_1735048483908_2967: Bool = true
internal let var_1735048483908_3014: ?Unit = Option<Unit>.None
let var_1735048483908_3035: Struct_1735048483908_162 = Struct_1735048483908_162()
public let var_1735048483908_3063: (Range<Int32>, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Array<VArray<Unit, $8>>) = (((Int32(Int32(-127)) &
        127)..=(Int32(Int32(13)) & 127) : (Int64(55) | 1)), (true, VArray<Unit, $8>(repeat: ()), Float64(Float32(113.0)),
        ((UInt32(UInt32(Int8(37))) & 127)..=(UInt32(UInt32(130)) & 127) : (Int64(123) | 1))), [VArray<Unit, $8>({
            i => ()
        }), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()})])
@Deprecated
public let var_1735048483908_3184: Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()],
    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
internal var var_1735048483908_3188: UInt64 = UInt64(47)
@Deprecated
internal const var_1735048483908_3357: Bool = true
@Deprecated
public var var_1735048483908_3461: Bool = (match ((((Int32(Int32(-85)) & 127)..=(Int32(Int32(16)) & 127) : (Int64(54) | 1)),
    ((match (Int64(23)) {
            case _: Option<Unit> => true
            case _ => false
        }), VArray<Unit, $8>(repeat: ()), Float64(-82.0), ((UInt32(UInt32(42)) & 127)..=(UInt32(UInt32(218)) & 127) : (Int64(-19) |
            1))), [VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
        VArray<Unit, $8>({i => ()})])) {
    case _: UInt8 => true
    case _ => false
})
@Deprecated
var var_1735048483908_3591: VArray<Unit, $8> = [(), (), (), (), (), (), (), ()]
@Deprecated
public var var_1735048483908_3595: Unit = ()
@Deprecated
public let var_1735048483908_3610: String = "!BGBl<MZU&"
@Deprecated
public var var_1735048483908_3616: Unit = ()
public let var_1735048483908_3632: Option<VArray<Unit, $8>> = (match (Int16(-74)) {
    case newVar: VArray<Unit, $8> => Option<VArray<Unit, $8>>.Some(newVar)
    case _ => Option<VArray<Unit, $8>>.None
})
@Deprecated
public var var_1735048483908_3649: UInt32 = UInt32(129)
@Deprecated
public var var_1735048483908_3678: Float32 = Float32(31.0)
let var_1735048483908_3690: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) = (((Int32(Int32(104)) & 127)..(Int32(Int32(122)) &
        127) : (Int64(56) | 1)), ((UInt16(UInt16(225)) & 127)..=(UInt16(UInt16(248)) & 127) : (Int64(Int16(Int16(64))) |
        1)), Float32(Float32(Float32(Float32(-3.0)))), true, ((UInt32(UInt32(119)) & 127)..=(UInt32(UInt32(192)) & 127) : (Int64(91) |
        1)))
@Deprecated
public let var_1735048483908_3710: Unit = ()
@Deprecated
public var var_1735048483908_3723: Unit = ()
@Deprecated
public var var_1735048483908_3801: Int32 = Int32(-23)
public let var_1735048483908_3945: Int8 = Int8(UInt8(Int8(UInt8(Int8(99)))))

public open class Class_1735048483908_28<T0, T1, T2> {
    public init() { // block id: 30

    }

    public let var_1735048483908_35: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) = (((Int32(Int32(43)) &
            127)..(Int32(Int32(-123)) & 127) : (Int64(-37) | 1)), ((UInt16(UInt16(11)) & 127)..=(UInt16(UInt16(223)) &
            127) : (Int64(-33) | 1)), Float32(-27.0), true, ((UInt32(UInt32(65)) & 127)..(UInt32(UInt32(5)) & 127) : (Int64(53) |
            1)))
    static init() {
    }
}

@Deprecated
public struct Struct_1735048483908_162 {
    @Frozen
    public init() { // block id: 164

    }

    private let var_1735048483908_3191: Option<UInt8> = Option<UInt8>.None;
    public static let var_1735048483908_3248: Int8 = Int8(-48);
    let var_1735048483908_3259: Option<UInt8> = Option<UInt8>.None;

    @Frozen
    public func func_1735048483908_3044(): Unit { // block id: 3045
        try (resource = Class_1735048483908_416()) { // block id: 3047
            ();
            var loopTimeVar_1735048483908_3055: Int64 = 0;
            while ((false) && loopTimeVar_1735048483908_3055 < 100) {
                loopTimeVar_1735048483908_3055++;
                var_1735048483908_3014;
                Option<Float32>.None
            };
            match (var_1735048483908_1243) {
                case _ =>
                    Class_1735048483908_1237();
                    var_1735048483908_3063;
                    var_1735048483908_1026
            }
        } catch (e: Exception) { // block id: 3176
            if (let caseVar_1735048483908_3181 <- var_1735048483908_1243) {
                var_1735048483908_3184;
                var_1735048483908_3188 = var_1735048483908_3188 + 1
                var_1735048483908_3191
            } else {
                var var_1735048483908_3198: Int32 = Int32(-100);
                var_1735048483908_3198 = var_1735048483908_3198 & (var_1735048483908_3198)
                var_1735048483908_1041
            };
            var var_1735048483908_3206: VArray<Unit, $9> = VArray<Unit, $9>({i => ()});
            try { // block id: 3203
                ();
                var_1735048483908_3206
            } finally { // block id: 3217
                var_1735048483908_3206
            };
            match (var_1735048483908_2899) {
                case caseVar_1735048483908_3223 =>
                    var_1735048483908_1026;
                    ()

                case _ => var_1735048483908_1026

                case _ => var_1735048483908_2319
            }
        };
        UInt16(if (true) { // block id: 3239
            var_1735048483908_182 + var_1735048483908_182;
            Int8(-2)
        } else if (false) { // block id: 3245
            ((Int32(Int32(67)) & 127)..=(Int32(Int32(-82)) & 127) : (Int64(-8) | 1));
            var_1735048483908_3248
        } else { // block id: 3250
            var_1735048483908_2944
        }) >> ((UInt16((match (var_1735048483908_3259) {
            case Some(num) => num
            case None => var_1735048483908_953
        }))) & 7);
        var loopTimeVar_1735048483908_3275: Int64 = 0;
        while ((if (true) { // block id: 3266
                ((Int32(Int32(-53)) & 127)..=(Int32(Int32(-3)) & 127) : (Int64(-93) | 1));
                Option<Option<Range<Int8>>>.None;
                UInt64(151)
            } else { // block id: 3270
                var_1735048483908_908
            } != var_1735048483908_3188) && loopTimeVar_1735048483908_3275 < 100) {
            loopTimeVar_1735048483908_3275++;
        }
        return
    }
}

public open class Class_1735048483908_416 <: Resource {
    @Frozen
    public Class_1735048483908_416() { // block id: 418

    }

    @Frozen
    mut prop var_1735048483908_423: Int16 { // block id: 424
        get() { // block id: 426
            ();
            Int16(Int16(UInt16(UInt8(71))))
        }
        set(Value) { // block id: 434

        }
    }

    @Frozen
    private static prop var_1735048483908_510: Byte { // block id: 511
        get() { // block id: 513
            UInt8(UInt8(UInt8(63)))
        }
    }

    @Frozen
    public static mut prop var_1735048483908_615: Bool { // block id: 616
        get() { // block id: 618
            (match (Float32(-86.0)) {
                case _: Int8 => true
                case _ => false
            })
        }
        set(Value) { // block id: 623
            (true, VArray<Unit, $8>({i => ()}), Float64(118.0), ((UInt32(UInt32(Int16(-70))) & 127)..=(UInt32(UInt32(221)) &
                    127) : (Int64(52) | 1)));
            ();
            ()
        }
    }

    @Frozen
    public static mut prop var_1735048483908_645: Bool { // block id: 646
        get() { // block id: 648
            Int64(102);
            false
        }
        set(Value) { // block id: 653
            [VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>(repeat: ())];
            ()
        }
    }
    static let var_1735048483908_748: ?Bool = Option<Bool>.None;
    protected let var_1735048483908_765: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) = (true, VArray<Unit, $8>({
                i => ()
            }), Float64(56.0), ((UInt32(UInt32(150)) & 127)..=(UInt32(UInt32(249)) & 127) : (Int64(-33) | 1)));

    @Frozen
    private static prop var_1735048483908_1060: VArray<Unit, $8> { // block id: 1061
        get() { // block id: 1063
            UInt32(113);
            ();
            VArray<Unit, $8>({i => ()})
        }
    }
    private static func func_1735048483908_457(namedParam_1735048483908_850!: Float32): Class_1735048483908_845 { // block id: 851
        (func_1735048483908_855<Struct_1735048483908_162, Array<Unit>>((match (var_1735048483908_1041) {
            case Some(num) => num
            case None => var_1735048483908_953
        })))[1];
        var var_1735048483908_1086: UInt32 = UInt32(166);
        var loopTimeVar_1735048483908_1149: Int64 = 0;
        while ((try { // block id: 1049
                true
            } catch (_) { // block id: 1051
                var_1735048483908_191;
                var_1735048483908_929 || true
            } finally { // block id: 1056
                if (false) {
                    var_1735048483908_1060
                } else {
                    VArray<Unit, $8>(repeat: var_1735048483908_1026)
                };
                var_1735048483908_1086 = var_1735048483908_1086 - (UInt32(71))
                false
            }) && loopTimeVar_1735048483908_1149 < 100) {
            loopTimeVar_1735048483908_1149++;
            var loopTimeVar_1735048483908_1094: Range<UInt64> = ((UInt64(UInt64(UInt32(UInt8(206)))) & 127)..=(UInt64(UInt64(UInt64(Int32(UInt32(98))))) &
                127) : (Int64(67) | 1));
            let iter1091 = loopTimeVar_1735048483908_1094.iterator()
            while (true) {
                match (iter1091.next()) {
                    case None => break
                    case Some(v) => match (v) {
                        case i where (var_1735048483908_615) => ();
                        case _ => continue
                    }
                }
            };

            match ((UInt16(9), var_1735048483908_285, [var_1735048483908_1026, (), (), var_1735048483908_349,
                    var_1735048483908_1114, var_1735048483908_1026, var_1735048483908_349, var_1735048483908_349, (), ()])) {
                case (caseVar_1735048483908_1123: Int64, caseVar_1735048483908_1124, caseVar_1735048483908_1125) =>
                    ();
                    UInt8(32)

                case caseVar_1735048483908_1131 =>
                    ();
                    UInt8(27)

                case (caseVar_1735048483908_1137, _, caseVar_1735048483908_1138) =>
                    ();
                    ((UInt64(UInt64(221)) & 127)..=(UInt64(UInt64(51)) & 127) : (Int64(42) | 1));
                    UInt8(138)

                case _ =>
                    ();
                    UInt8(22)
            }
        };
        var var_1735048483908_1156: Array<Class_1735048483908_845> = [Class_1735048483908_845(),
            Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(),
            Class_1735048483908_845(optionalParam_1735048483908_1165: Int64(-68),
            namedParam_1735048483908_1169: ((Int64(Int64(Int64(15))) & 127)..(Int64(Int64(100)) & 127) : (Int64(37) | 1))),
            Class_1735048483908_845(
            namedParam_1735048483908_1169: ((Int64(Int64(97)) & 127)..=(Int64(Int64(-102)) & 127) : (Int64(118) | 1))),
            Class_1735048483908_845(),
            Class_1735048483908_845(optionalParam_1735048483908_1165: Int64(-44),
            namedParam_1735048483908_1169: ((Int64(Int64(-81)) & 127)..(Int64(Int64(97)) & 127) : (Int64(Int32(3)) | 1))),
            Class_1735048483908_845()];
        try { // block id: 1153
            var_1735048483908_349;
            var_1735048483908_1156
        } finally { // block id: 1214
            var_1735048483908_191;
            [Class_1735048483908_845(), var_1735048483908_1219, Class_1735048483908_845(), Class_1735048483908_845(),
                var_1735048483908_1219,
                Class_1735048483908_845(
                namedParam_1735048483908_1169: ((Int64(Int64(34)) & 127)..(Int64(Int64(118)) & 127) : (Int64(75) | 1))),
                Class_1735048483908_845(),
                Class_1735048483908_845(optionalParam_1735048483908_1165: Int64(-62),
                namedParam_1735048483908_1169: ((Int64(Int64(-82)) & 127)..=(Int64(Int64(-63)) & 127) : (Int64(-4) | 1))),
                Class_1735048483908_845(), var_1735048483908_1219]
        }[5]
    };

    @Frozen
    public static mut prop var_1735048483908_1388: Int8 { // block id: 1389
        get() { // block id: 1391
            Int8(Int8(UInt8(161)))
        }
        set(Value) { // block id: 1397
            (match (VArray<Unit, $9>({i => ()})) {
                case newVar: UInt8 => Option<UInt8>.Some(newVar)
                case _ => Option<UInt8>.None
            });
            ()
        }
    }

    @Frozen
    private static mut prop var_1735048483908_1423: Float64 { // block id: 1424
        get() { // block id: 1426
            ((Int16(Int16(-50)) & 127)..=(Int16(Int16(-98)) & 127) : (Int64(17) | 1));
            (match (UInt32(Int8(UInt8(144)))) {
                case newVar: Range<Int8> => Option<Range<Int8>>.Some(newVar)
                case _ => Option<Range<Int8>>.None
            });
            Float64(57.0)
        }
        set(Value) { // block id: 1435
            ();
            ();
            ()
        }
    }

    @Frozen
    prop var_1735048483908_1453: Option<Unit> { // block id: 1454
        get() { // block id: 1456
            ();
            r'n';
            (match (((UInt8(UInt8(169)) & 127)..=(UInt8(UInt8(2)) & 127) : (Int64(UInt64(229)) | 1))) {
                case newVar: Unit => Option<Unit>.Some(newVar)
                case _ => Option<Unit>.None
            })
        }
    }

    @Frozen
    private mut prop var_1735048483908_1470: Bool { // block id: 1471
        get() { // block id: 1473
            Int64(Int16(-35));
            false;
            var_1735048483908_3953
        }
        set(Value) { // block id: 1479
            var_1735048483908_3953 = Value
        }
    }

    @Frozen
    private func func_1735048483908_1264(namedParam_1735048483908_1265!: Array<Unit>,
        optionalParam_1735048483908_1266!: Range<UInt64> = ((UInt64(UInt64(68)) & 127)..(UInt64(UInt64(243)) & 127) : (Int64(42) |
            1)), namedParam_1735048483908_1268!: Option<Bool>,
        optionalParam_1735048483908_1269!: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) = ((match ([VArray<Unit, $8>({
                    i => ()
                }), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()})]) {
                case _: Range<UInt16> => true
                case _ => false
            }), VArray<Unit, $8>({i => ()}), Float64(Float64(Float32(112.0))), ((UInt32(UInt32(UInt32(214))) & 127)..(UInt32(UInt32(79)) &
                127) : (Int64(Int64(-48)) | 1)))): Range<UInt32> { // block id: 1381
        match (if (match (((Int8(Int8(-128)) & 127)..(Int8(var_1735048483908_1388) & 127) : (Int64(11) | 1))) {
            case _ =>
                var_1735048483908_201 * Int64(-127);
                var_1735048483908_285;
                true
        }) {
            (var_1735048483908_1423, true, var_1735048483908_1441, this.var_1735048483908_1453, var_1735048483908_836, ())[3]
        } else {
            (if (this.var_1735048483908_1470) {
                Option<Unit>.Some(var_1735048483908_1026)
            } else {
                Option<Unit>.None
            })
        }) {
            case _: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) => ((UInt32(UInt32(169)) & 127)..=(UInt32(UInt32(128)) &
                127) : (Int64(96) | 1))

            case caseVar_1735048483908_1489: UInt8 =>
                var_1735048483908_1493 = var_1735048483908_1493 + 1
                if (true) {
                    ((Int8(Int8(31)) & 127)..=(Int8(Int8(55)) & 127) : (Int64(43) | 1))
                } else {
                    ((Int8(Int8(33)) & 127)..=(Int8(Int8(-20)) & 127) : (Int64(62) | 1))
                };
                if (false) {
                    ((UInt32(var_1735048483908_486) & 127)..=(UInt32(var_1735048483908_486) & 127) : (Int64(116) | 1))
                } else {
                    ((UInt32(UInt32(135)) & 127)..(UInt32(UInt32(33)) & 127) : (Int64(26) | 1))
                }

            case caseVar_1735048483908_1511 => ((UInt32(UInt32(143)) & 127)..=(UInt32(var_1735048483908_486) & 127) : (Int64(-15) |
                1))

            case _ =>
                Option<UInt8>.None;
                ();
                ((UInt32(UInt32(142)) & 127)..=(UInt32(var_1735048483908_486) & 127) : (var_1735048483908_935 | 1))
        }
    };

    @Frozen
    public static prop var_1735048483908_1527: Array<Unit> { // block id: 1528
        get() { // block id: 1530
            [(), (), (), (), (), (), (), (), (), ()]
        }
    }
    private static var var_1735048483908_1585: Unit = ();
    public static func func_1735048483908_457(param_1735048483908_458: Range<Int16>, param_1735048483908_459: Int32,
        param_1735048483908_460: Range<UInt16>, param_1735048483908_461: Range<Int16>): (Bool, VArray<Unit, $8>, 
        Float64, Range<UInt32>) { // block id: 462
        var var_1735048483908_467: ?Bool = Option<Bool>.None;
        if ((match (var_1735048483908_467) {
            case Some(num) => num
            case None => true
        })) { // block id: 470
            Option<Bool>.Some(true);
            [var_1735048483908_191, var_1735048483908_191, (), (), var_1735048483908_349, var_1735048483908_191,
                var_1735048483908_191, var_1735048483908_349, (), var_1735048483908_349]
        } else if (var_1735048483908_486 == var_1735048483908_486) { // block id: 493
            ();
            [(), (), var_1735048483908_191, var_1735048483908_191, (), var_1735048483908_191, var_1735048483908_349,
                var_1735048483908_349, (), ()]
        } else { // block id: 506
            var_1735048483908_182;
            ((UInt8(var_1735048483908_510) & 127)..=(UInt8(var_1735048483908_510) & 127) : (var_1735048483908_201 | 1));
            if (true) {
                [(), (), (), (), (), (), (), (), (), ()]
            } else {
                [(), (), (), (), (), (), (), (), (), ()]
            }
        }[1];
        var var_1735048483908_606: Rune = r'R';
        var var_1735048483908_753: Float64 = Float64(Float32(2.0));
        var var_1735048483908_793: String = """
&=p> 
O,RK~
""";
        var var_1735048483908_812: UInt16 = UInt16(80);
        let var_1735048483908_1620: VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        func func_1735048483908_842(): (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) { // block id: 843
            var chainCall844 = func_1735048483908_457(
                namedParam_1735048483908_850: var_1735048483908_1243.var_1735048483908_1246);
            chainCall844.func_1735048483908_1264(namedParam_1735048483908_1265: var_1735048483908_1527,
                namedParam_1735048483908_1268: var_1735048483908_748);
            var var_1735048483908_1592: Unit = ();
            (if (var_1735048483908_645) { // block id: 1548
                    var_1735048483908_1114;
                    if (var_1735048483908_929) {
                        ((Int32(Int32(113)) & 127)..=(Int32(Int32(116)) & 127) : (Int64(-23) | 1))
                    } else {
                        var_1735048483908_915
                    }
                } else { // block id: 1554
                    false;
                    if (var_1735048483908_929) {
                        ((Int32(Int32(113)) & 127)..(Int32(Int32(38)) & 127) : (Int64(-28) | 1))
                    } else {
                        var_1735048483908_915
                    }
                }, (false, var_1735048483908_1180, var_1735048483908_1423, ((UInt32(UInt32(38)) & 127)..(UInt32(UInt32(88)) &
                        127) : (Int64(-5) | 1))), [VArray<Unit, $8>(repeat: var_1735048483908_1114),
                    VArray<Unit, $8>(repeat: var_1735048483908_349), var_1735048483908_1060,
                    VArray<Unit, $8>(repeat: var_1735048483908_1592), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>(repeat: var_1735048483908_1026), var_1735048483908_1620, var_1735048483908_1180,
                    var_1735048483908_1060, var_1735048483908_1620])[1]
        };

        try { // block id: 525
            Option<Unit>.Some(var_1735048483908_191).getOrThrow();
            var_1735048483908_536[4]
        } catch (e: Exception) { // block id: 601
            var var_1735048483908_610: UInt8 = UInt8(232);
            if (true) { // block id: 604
                var_1735048483908_606;
                var_1735048483908_610 = var_1735048483908_610 & (UInt8(196))
                var_1735048483908_615 = false
            } else if (var_1735048483908_645) { // block id: 746
                var_1735048483908_748;
                ();
                var_1735048483908_753 = var_1735048483908_753 - (var_1735048483908_753)
            };
            var_1735048483908_762.var_1735048483908_765
        } finally { // block id: 782
            match (Option<Bool>.None) {
                case _: Option<Unit> => ###"1>5tV'>jY="###

                case _: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) => var_1735048483908_793

                case _ =>
                    if (false) {
                        "]t0hc^H0Im"
                    } else {
                        var_1735048483908_793
                    }
            };
            match (UInt16(57)) {
                case caseVar_1735048483908_806 =>
                    var_1735048483908_349;
                    var_1735048483908_182 = var_1735048483908_182 - (var_1735048483908_812)
                    var_1735048483908_182 = var_1735048483908_182 + (UInt16(190))

                case 223 | 61 | 52 => var_1735048483908_191

                case 104 | 56 =>
                    ();
                    ()

                case 51 | 8 | 219 => ()

                case _ =>
                    if (var_1735048483908_645) {
                        var_1735048483908_836
                    } else {
                        var_1735048483908_836
                    };
                    ();
                    ()
            };
            func_1735048483908_842()
        }
    };

    @Frozen
    public static mut prop var_1735048483908_1629: Range<Int16> { // block id: 1630
        get() { // block id: 1632
            ();
            ((Int16(Int16(UInt8(UInt8(11)))) & 127)..(Int16(Int16(16)) & 127) : (Int64(-121) | 1))
        }
        set(Value) { // block id: 1642
            ();
            [VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()),
                VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                VArray<Unit, $8>({i => ()})];
            ()
        }
    }
    static var var_1735048483908_1826: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) = (true, VArray<Unit, $8>({
                i => ()
            }), Float64(63.0), ((UInt32(UInt32(109)) & 127)..(UInt32(UInt32(87)) & 127) : (Int64(-109) | 1)));
    static var var_1735048483908_1849: (UInt16, Range<UInt32>, Array<Unit>) = (UInt16(174), ((UInt32(UInt32(35)) & 127)..(UInt32(UInt32(139)) &
            127) : (Int64(35) | 1)), [(), (), (), (), (), (), (), (), (), ()]);
    public static const var_1735048483908_1874: Unit = ();
    static var var_1735048483908_2034: ?(Array<UInt64>, Int32, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), 
        Option<Range<Int8>>, Array<VArray<Unit, $8>>, Range<UInt8>) = Option<(Array<UInt64>, Int32, (Range<Int32>, Range<UInt16>, 
            Float32, Bool, Range<UInt32>), Option<Range<Int8>>, Array<VArray<Unit, $8>>, Range<UInt8>)>.None;
    var var_1735048483908_3953: Bool = false
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

public open class Class_1735048483908_758<T0, T1, T2> <: Class_1735048483908_416 {
    public init() { // block id: 760

    }

    @Frozen
    prop var_1735048483908_1246: Float32 { // block id: 1247
        get() { // block id: 1249
            ();
            [Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(),
                Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(),
                Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845()];
            Float32(-9.0)
        }
    }

    @Frozen
    mut prop var_1735048483908_1739: Int32 { // block id: 1740
        get() { // block id: 1742
            Int32(119)
        }
        set(Value) { // block id: 1746
            ();
            ();
            ()
        }
    }

    @Frozen
    static mut prop var_1735048483908_1888: Array<Class_1735048483908_845> { // block id: 1889
        get() { // block id: 1891
            [Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(),
                Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845(),
                Class_1735048483908_845(), Class_1735048483908_845(), Class_1735048483908_845()]
        }
        set(Value) { // block id: 1905
            ()
        }
    }
    private static var var_1735048483908_1945: (String, Bool, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Int64, (UInt16, 
        Range<UInt32>, Array<Unit>))

    @Frozen
    static func func_1735048483908_1770(param_1735048483908_1771: Range<Int16>, param_1735048483908_1772: Range<Int8>,
        namedParam_1735048483908_1773!: (Int8, Range<Int64>, Range<UInt32>, Class_1735048483908_845, Unit)): Option<(Array<UInt64>, 
        Int32, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), Option<Range<Int8>>, Array<VArray<Unit, $8>>, 
        Range<UInt8>)> { // block id: 1774
        var_1735048483908_1219.var_1735048483908_1779 = if (if (var_1735048483908_645) { // block id: 1795
            var_1735048483908_615
        } else { // block id: 1797
            var_1735048483908_929
        }) { // block id: 1799
            -var_1735048483908_373
        } else { // block id: 1802
            -Float32(78.0)
        };
        match ((###"R3zJ4Q!$hh"###, if (false) { // block id: 1810
                var_1735048483908_645 ||= var_1735048483908_645
                var_1735048483908_953 >= var_1735048483908_953
            } else if (var_1735048483908_645) { // block id: 1818
                var_1735048483908_191;
                true
            } else { // block id: 1821
                var_1735048483908_929
            }, Class_1735048483908_416.var_1735048483908_1826, if (var_1735048483908_645) { // block id: 1842
                ();
                ();
                var_1735048483908_201
            } else { // block id: 1846
                Int64(-96)
            }, var_1735048483908_1849)) {
            case _ =>
                var_1735048483908_929;
                if (var_1735048483908_929) {
                    var_1735048483908_1180
                } else {
                    VArray<Unit, $8>(repeat: var_1735048483908_1114)
                };
                var_1735048483908_1874
        };
        match ((match (var_1735048483908_1883) {
            case Some(num) => num
            case None => try { // block id: 1886
                var_1735048483908_1888;
                var var_1735048483908_1909: Rune = r'p';
                var_1735048483908_1909 = r'x'
                var_1735048483908_1913
            } catch (_) { // block id: 1940
                var_1735048483908_182 = var_1735048483908_182 & (var_1735048483908_182)
                var_1735048483908_1945
            } finally { // block id: 1983
                var_1735048483908_1986 * var_1735048483908_1986;
                ("d~\\qZW0w#o", false, (var_1735048483908_929, var_1735048483908_1180, Float64(-14.0), ((UInt32(UInt32(154)) &
                            127)..(UInt32(UInt32(139)) & 127) : (Int64(-25) | 1))), Int64(-9), (var_1735048483908_182,
                        var_1735048483908_285, var_1735048483908_1527))
            }
        })) {
            case _: UInt8 =>
                if (false) {
                    r'r'
                } else {
                    r'o'
                };
                var_1735048483908_645 ||= false
                let var_1735048483908_2024: Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()],
                    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
                    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
                    [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]];
                Option<(Array<UInt64>, Int32, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), Option<Range<Int8>>, 
                        Array<VArray<Unit, $8>>, Range<UInt8>)>.Some(
                    (var_1735048483908_2018, Int32(-54), var_1735048483908_303, var_1735048483908_938,
                        var_1735048483908_2024, ((UInt8(var_1735048483908_953) & 127)..(UInt8(UInt8(9)) & 127) : (Int64(124) |
                            1))))

            case _ => var_1735048483908_2034
        }
    }

    static init() {
        var_1735048483908_1945 = ("-v!<y3S0/p", true, (true, VArray<Unit, $8>({i => ()}), Float64(106.0), ((UInt32(UInt32(121)) &
                    127)..=(UInt32(UInt32(93)) & 127) : (Int64(29) | 1))), Int64(25), (UInt16(246), ((UInt32(UInt32(65)) &
                    127)..=(UInt32(UInt32(20)) & 127) : (Int64(1) | 1)), [(), (), (), (), (), (), (), (), (), ()]))
    }
}

public open class Class_1735048483908_845 <: Class_1735048483908_416 {
    @Frozen
    public Class_1735048483908_845() { // block id: 847

    }

    init(optionalParam_1735048483908_1165!: Int64 = Int64(UInt32(Int8(5))), namedParam_1735048483908_1169!: Range<Int64>) { // block id: 1170
        let var_1735048483908_1185: Int = Int64(-41);
        let var_1735048483908_1188: (UInt16, Range<UInt32>, Array<Unit>) = (UInt16(137), ((UInt32(UInt32(224)) & 127)..(UInt32(UInt32(127)) &
                127) : (Int64(-110) | 1)), [(), (), (), (), (), (), (), (), (), ()]);
        var loopTimeVar_1735048483908_1196: Int64 = 0;
        while (((var_1735048483908_836, true, (true, var_1735048483908_1180, Float64(70.0), var_1735048483908_285),
                var_1735048483908_1185, var_1735048483908_1188)[1]) && loopTimeVar_1735048483908_1196 < 100) {
            loopTimeVar_1735048483908_1196++;
        }
    };

    @Frozen
    mut prop var_1735048483908_1779: Float32 { // block id: 1780
        get() { // block id: 1782
            Class_1735048483908_1237();
            ();
            Float32(Float32(-83.0))
        }
        set(Value) { // block id: 1789
            ();
            ()
        }
    }

    @Frozen
    init(
        optionalParam_1735048483908_2797!: Array<UInt64> = [UInt64(173), UInt64(164), UInt64(209), UInt64(225),
            UInt64(244), UInt64(79), UInt64(54), UInt64(85), UInt64(165), UInt64(251)],
        namedParam_1735048483908_2799!: Option<Range<UInt32>>) { // block id: 2800
        var_1735048483908_938;
        var var_1735048483908_2817: ??Float32 = Option<Option<Float32>>.Some((match (VArray<Unit, $8>(repeat: ())) {
            case newVar: Float32 => Option<Float32>.Some(newVar)
            case _ => Option<Float32>.None
        }));
        var_1735048483908_2804 = var_1735048483908_2804 / Float32((Int32((match ((match (var_1735048483908_2817) {
            case Some(num) => num
            case None => Option<Float32>.Some(Float32(-63.0))
        })) {
            case Some(num) => num
            case None => Float32(-41.0) / Float32((Int32(var_1735048483908_2804)) | 1)
        }))) | 1)
    }
}

public func func_1735048483908_855<T0, T1>(param_1735048483908_856: UInt8): (UInt16, Range<UInt32>, Array<Unit>) { // block id: 857
    const var_1735048483908_923: UInt16 = 144;
    var var_1735048483908_941: Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (),
        ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
        [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
        [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]];
    var var_1735048483908_991: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    (var_1735048483908_182, (match ((match (((UInt16(var_1735048483908_182) & 127)..(UInt16(var_1735048483908_182) & 127) : (Int64(-51) |
            1))) {
            case newVar: Range<UInt32> => Option<Range<UInt32>>.Some(newVar)
            case _ => Option<Range<UInt32>>.None
        })) {
            case Some(num) => num
            case None => var_1735048483908_873[2]
        }), match (([UInt64(138), UInt64(219), UInt64(27), UInt64(53), UInt64(221), UInt64(155), var_1735048483908_323,
                var_1735048483908_908, var_1735048483908_908, UInt64(12)], Int32(53), (var_1735048483908_915, ((UInt16(var_1735048483908_923) &
                    127)..(UInt16(var_1735048483908_923) & 127) : (var_1735048483908_201 | 1)), var_1735048483908_373,
                var_1735048483908_929, ((UInt32(UInt32(197)) & 127)..=(UInt32(UInt32(134)) & 127) : (var_1735048483908_935 |
                    1))), var_1735048483908_938, var_1735048483908_941, ((UInt8(UInt8(147)) & 127)..=(UInt8(UInt8(119)) &
                127) : (var_1735048483908_935 | 1)))[4]) {
            case _ =>
                var_1735048483908_953 = var_1735048483908_953 / ((UInt8(60)) | 1)
                Float32(-100.0) / Float32((Int32(var_1735048483908_373)) | 1);
                [(), (), (), (), (), (), (), (), (), ()]

            case _: Range<UInt16> => [var_1735048483908_349, var_1735048483908_349, var_1735048483908_191,
                var_1735048483908_349, (), (), (), var_1735048483908_191, (), ()]

            case caseVar_1735048483908_977: UInt16 =>
                var var_1735048483908_981: Int8 = Int8(-120);
                var_1735048483908_981 = var_1735048483908_981 % ((Int8(-6)) | 1)
                var_1735048483908_191;
                let var_1735048483908_988: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                if (true) {
                    var_1735048483908_988
                } else {
                    var_1735048483908_991
                }

            case _ =>
                const var_1735048483908_1019: Unit = ();
                if (true) {
                    [var_1735048483908_191, var_1735048483908_349, var_1735048483908_191, (), (), (),
                        var_1735048483908_191, (), var_1735048483908_191, var_1735048483908_1019]
                } else {
                    [var_1735048483908_191, (), var_1735048483908_191, var_1735048483908_1026, (),
                        var_1735048483908_1019, var_1735048483908_1019, (), (), var_1735048483908_1019]
                }
        })
}

public interface Interface_1735048483908_1241<T0> {}

public sealed interface Interface_1735048483908_1240<T0, T1> <: Interface_1735048483908_1241<Int32> {}

public open class Class_1735048483908_1237 <: Class_1735048483908_758<Rune, Int8, Option<Range<Int8>>> & Interface_1735048483908_1240<Int8,
    Class_1735048483908_845> & Interface_1735048483908_1241<Int32> {
    @Frozen
    public Class_1735048483908_1237() { // block id: 1239

    }
}

public func func_1735048483908_262<T0>(param_1735048483908_263: Int64): Array<UInt64> { // block id: 264
    var var_1735048483908_273: VArray<Unit, $8> = VArray<Unit, $8>({i => ()});
    const var_1735048483908_298: String = ###"HD~@xV blZ"###;
    try { // block id: 267
        ();
        var_1735048483908_191;
        (false, var_1735048483908_273, Float64(68.0), var_1735048483908_285)
    } catch (_) { // block id: 293
        (false, r'h', var_1735048483908_298, Int8(-107), [(), (), (), (), (), (), (), (), (), ()], var_1735048483908_303,
            var_1735048483908_320, var_1735048483908_323);
        let var_1735048483908_327: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) = ((match (UInt16(65)) {
                case _: Array<UInt64> => true
                case _ => false
            }), VArray<Unit, $8>({i => ()}), Float64(Float32(109.0)), ((UInt32(UInt32(164)) & 127)..(UInt32(UInt32(65)) &
                127) : (Int64(-126) | 1)));
        var_1735048483908_327
    } finally { // block id: 343
        var_1735048483908_191;
        (true, VArray<Unit, $8>(repeat: var_1735048483908_349), Float64(-61.0), ((UInt32(UInt32(105)) & 127)..=(UInt32(UInt32(74)) &
                127) : (Int64(52) | 1)))
    }[1];
    const func func_1735048483908_365(namedParam_1735048483908_366!: UInt16, namedParam_1735048483908_367!: Float32,
        optionalParam_1735048483908_368!: UInt8 = 3): Unit { // block id: 370

        return
    };

    var loopTimeVar_1735048483908_376: Int64 = 0;
    while ((false) && loopTimeVar_1735048483908_376 < 100) {
        loopTimeVar_1735048483908_376++;
        func_1735048483908_365(namedParam_1735048483908_366: var_1735048483908_182,
            namedParam_1735048483908_367: var_1735048483908_373)
    };
    let var_1735048483908_420: Class_1735048483908_416 = Class_1735048483908_416();
    let var_1735048483908_2078: Float32 = Float32(Float32(1.0));
    func func_1735048483908_437(param_1735048483908_438: UInt32, param_1735048483908_439: UInt64,
        optionalParam_1735048483908_440!: Bool = (match (VArray<Unit, $8>({i => ()})) {
            case _: Array<VArray<Unit, $8>> => true
            case _ => false
        }), optionalParam_1735048483908_451!: UInt16 = UInt16(35)): Int16 { // block id: 453
        Class_1735048483908_416.func_1735048483908_457(Class_1735048483908_416.var_1735048483908_1629,
            var_1735048483908_1243.var_1735048483908_1739, if (var_1735048483908_929) {
                var_1735048483908_1753
            } else {
                ((UInt16(UInt16(40)) & 127)..(UInt16(UInt16(16)) & 127) : (Int64(-74) | 1))
            }, ((Int16(var_1735048483908_1758) & 127)..=(Int16(Int16(105)) & 127) : (Int64(-109) | 1)));
        let var_1735048483908_2038: Range<Int8> = ((Int8(Int8(-76)) & 127)..(Int8(Int8(Int8(41))) & 127) : (Int64(Int8(UInt8(Int8(-113)))) |
            1));
        let var_1735048483908_2061: Option<Int32> = (match ((match (Option<Unit>.None) {
            case newVar: Unit => Option<Unit>.Some(newVar)
            case _ => Option<Unit>.None
        })) {
            case newVar: Int32 => Option<Int32>.Some(newVar)
            case _ => Option<Int32>.None
        });
        var var_1735048483908_2092: Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]];
        (match (Class_1735048483908_758<Rune, Int8, Option<Range<Int8>>>.func_1735048483908_1770(
            ((Int16(Int16(-73)) & 127)..(Int16(Int16(-89)) & 127) : (Int64(103) | 1)), var_1735048483908_2038,
            namedParam_1735048483908_1773: (Int8(5), ((Int64(Int64(88)) & 127)..=(Int64(Int64(-7)) & 127) : (Int64(32) |
                    1)), ((UInt32(UInt32(187)) & 127)..(UInt32(UInt32(10)) & 127) : (Int64(112) | 1)),
                var_1735048483908_1219, var_1735048483908_349))) {
            case Some(num) => num
            case None => ([UInt64(239), UInt64(134), UInt64(174), UInt64(138), UInt64(0), UInt64(51), UInt64(17),
                    UInt64(114), UInt64(252), UInt64(122)], (match (var_1735048483908_2061) {
                    case Some(num) => num
                    case None => var_1735048483908_2066
                }), (((Int32(Int32(40)) & 127)..(Int32(var_1735048483908_2066) & 127) : (Int64(12) | 1)), ((UInt16(UInt16(108)) &
                        127)..=(UInt16(var_1735048483908_182) & 127) : (var_1735048483908_935 | 1)),
                    var_1735048483908_2078, false, ((UInt32(UInt32(172)) & 127)..=(UInt32(UInt32(29)) & 127) : (Int64(28) |
                        1))), Option<Range<Int8>>.Some(
                    ((Int8(Int8(104)) & 127)..(Int8(Int8(-86)) & 127) : (Int64(-110) | 1))), (match (Option<Array<VArray<Unit, $8>>>
                    .None) {
                    case Some(num) => num
                    case None => var_1735048483908_2092
                }), (match (Option<Range<UInt8>>.Some(
                    ((UInt8(UInt8(247)) & 127)..(UInt8(var_1735048483908_953) & 127) : (Int64(-54) | 1)))) {
                    case Some(num) => num
                    case None => var_1735048483908_2105
                }))
        });
        Int16(-33)
    };

    let var_1735048483908_2241: Option<Array<VArray<Unit, $8>>> = (match (Int16(Int16(-33))) {
        case newVar: Array<VArray<Unit, $8>> => Option<Array<VArray<Unit, $8>>>.Some(newVar)
        case _ => Option<Array<VArray<Unit, $8>>>.None
    });
    func func_1735048483908_401(optionalParam_1735048483908_402!: Int16 = Int16(Int16(UInt8(21))),
        optionalParam_1735048483908_406!: Option<Bool> = Option<Bool>.Some(
            (match (((Int8(Int8(78)) & 127)..(Int8(Int8(10)) & 127) : (Int64(104) | 1))) {
                case _: UInt8 => true
                case _ => false
            })), optionalParam_1735048483908_410!: UInt32 = UInt32(UInt16(142))): (Array<UInt64>, Int32, (Range<Int32>, 
        Range<UInt16>, Float32, Bool, Range<UInt32>), Option<Range<Int8>>, Array<VArray<Unit, $8>>, Range<UInt8>) { // block id: 413
        var_1735048483908_420.var_1735048483908_423 += Int16(func_1735048483908_437(var_1735048483908_486, UInt64(190),
            optionalParam_1735048483908_440: var_1735048483908_2117,
            optionalParam_1735048483908_451: var_1735048483908_182))
        let var_1735048483908_2273: Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]];
        match (try { // block id: 2123
            var var_1735048483908_2125: (Range<Int32>, (Bool, VArray<Unit, $8>, Float64, Range<UInt32>), Array<VArray<Unit, $8>>) = (((Int32(Int32(105)) &
                    127)..=(Int32(Int32(-71)) & 127) : (Int64(UInt8(Int8(-47))) | 1)), (true, VArray<Unit, $8>({i => ()}),
                    Float64(Float64(Float32(-28.0))), ((UInt32(UInt32(8)) & 127)..(UInt32(UInt32(138)) & 127) : (Int64(65) |
                        1))), [VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>({i => ()})]);
            var_1735048483908_2125
        } finally { // block id: 2239
            var_1735048483908_2241;
            var var_1735048483908_2247: UInt32 = UInt32(17);
            var_1735048483908_2247 = var_1735048483908_2247 ^ (UInt32(181))
            (var_1735048483908_915, var_1735048483908_2253, var_1735048483908_2273)
        }) {
            case _ =>
                var_1735048483908_182 = var_1735048483908_182 ^ (UInt16(177))
                ();
                Int16(-119)

            case caseVar_1735048483908_2285 =>
                Option<Range<UInt8>>.None;
                var_1735048483908_1493 >> ((var_1735048483908_1758) & 7)

            case (caseVar_1735048483908_2293, (caseVar_1735048483908_2294, _: UInt64, caseVar_1735048483908_2295: Bool, caseVar_1735048483908_2296: (Float64, 
                            Bool, VArray<Unit, $9>, Option<Unit>, String, Unit)), caseVar_1735048483908_2297: Array<VArray<Unit, $8>>) =>
                ();
                ();
                var_1735048483908_1493

            case (_, caseVar_1735048483908_2304: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), _) =>
                (var_1735048483908_915, (var_1735048483908_2117, VArray<Unit, $8>(repeat: var_1735048483908_1114),
                        var_1735048483908_1986, ((UInt32(UInt32(246)) & 127)..=(UInt32(UInt32(113)) & 127) : (Int64(-35) |
                            1))), var_1735048483908_2273);
                Int16(106)

            case _ => var_1735048483908_1758
        };
        var_1735048483908_2330
    };

    let var_1735048483908_2736: Range<Int8> = ((Int8(Int8(UInt8(Int8(Int8(-5))))) & 127)..(Int8(Int8(78)) & 127) : (Int64(UInt64(Int64(UInt16(246)))) |
        1));
    const var_1735048483908_2847: UInt8 = 222;
    let var_1735048483908_2860: Array<UInt8> = [UInt8(99), UInt8(151), UInt8(42), UInt8(213), UInt8(177), UInt8(252),
        UInt8(57), UInt8(182), UInt8(71), UInt8(154)];
    func func_1735048483908_380(namedParam_1735048483908_381!: (Bool, VArray<Unit, $8>, Float64, Range<UInt32>),
        optionalParam_1735048483908_382!: Bool = (match (Int16(UInt8(250))) {
            case _: (Bool, Rune, String, Int8, Array<Unit>, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), 
                    Range<Int64>, UInt64) => true
            case _ => false
        })): Int8 { // block id: 386
        let var_1735048483908_2473: ?Bool = (match (Option<(Array<UInt64>, Int32, (Range<Int32>, Range<UInt16>, Float32, 
                Bool, Range<UInt32>), Option<Range<Int8>>, Array<VArray<Unit, $8>>, Range<UInt8>)>.Some(
            ([UInt64(217), UInt64(142), UInt64(60), UInt64(38), UInt64(44), UInt64(241), UInt64(170), UInt64(199),
                    UInt64(56), UInt64(8)], Int32(20), (((Int32(Int32(-72)) & 127)..(Int32(Int32(4)) & 127) : (Int64(-34) |
                        1)), ((UInt16(UInt16(201)) & 127)..=(UInt16(UInt16(235)) & 127) : (Int64(90) | 1)), Float32(88.0),
                    true, ((UInt32(UInt32(25)) & 127)..(UInt32(UInt32(120)) & 127) : (Int64(-98) | 1))), (match (Int64(-108)) {
                    case newVar: Range<Int8> => Option<Range<Int8>>.Some(newVar)
                    case _ => Option<Range<Int8>>.None
                }), [VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()),
                    VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
                    VArray<Unit, $8>({i => ()})], ((UInt8(UInt8(54)) & 127)..(UInt8(UInt8(100)) & 127) : (Int64(6) | 1))))) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        });
        let var_1735048483908_2595: ?Bool = (match ([VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}),
            VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
            VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()}),
            VArray<Unit, $8>({i => ()}), VArray<Unit, $8>({i => ()})]) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        });
        func func_1735048483908_395(param_1735048483908_396: UInt8, param_1735048483908_397: Range<Int8>,
            param_1735048483908_398: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>)): (Array<UInt64>, 
            Int32, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), Option<Range<Int8>>, Array<VArray<Unit, $8>>, 
            Range<UInt8>) { // block id: 399
            func_1735048483908_401(optionalParam_1735048483908_406: try { // block id: 2464
                var var_1735048483908_2467: UInt = UInt64(155);
                var_1735048483908_2467 = var_1735048483908_2467 - (UInt64(92))
                if (false) {
                    var_1735048483908_2473
                } else {
                    var_1735048483908_2473
                }
            } finally { // block id: 2593
                var_1735048483908_2595
            }, optionalParam_1735048483908_410: if (true) { // block id: 2690
                UInt32(98) - var_1735048483908_486
            } else { // block id: 2694
                var_1735048483908_486
            })
        };

        let var_1735048483908_2756: Int8 = Int8(Int8(101));
        (match (func_1735048483908_395(var_1735048483908_953,
            ((Int8(Int8(16)) & 127)..(Int8(Int8(-1)) & 127) : (Int64(-10) | 1)),
            (((Int32(var_1735048483908_2066) & 127)..=(Int32(var_1735048483908_2066) & 127) : (var_1735048483908_201 | 1)),
                ((UInt16(UInt16(218)) & 127)..(UInt16(var_1735048483908_182) & 127) : (Int64(-83) | 1)), Float32(-87.0),
                var_1735048483908_2709, ((UInt32(UInt32(29)) & 127)..(UInt32(UInt32(24)) & 127) : (Int64(52) | 1))))[3]) {
            case Some(num) => num
            case None => match ((match (var_1735048483908_2720) {
                case Some(num) => num
                case None => Option<Range<Int8>>.None
            })) {
                case caseVar_1735048483908_2726 =>
                    var_1735048483908_1114;
                    [(), (), (), (), (), (), (), (), (), ()];
                    ((Int8(Int8(-24)) & 127)..=(Int8(Int8(22)) & 127) : (Int64(67) | 1))

                case _ =>
                    var_1735048483908_486;
                    var_1735048483908_2736

                case _ =>
                    ();
                    [(), (), (), (), (), (), (), (), (), ()];
                    if (true) {
                        ((Int8(var_1735048483908_2756) & 127)..=(Int8(var_1735048483908_2756) & 127) : (Int64(-22) | 1))
                    } else {
                        ((Int8(Int8(-21)) & 127)..=(Int8(Int8(25)) & 127) : (Int64(-28) | 1))
                    }

                case _ =>
                    var_1735048483908_349;
                    if (true) {
                        ((Int8(Int8(-57)) & 127)..=(Int8(Int8(0)) & 127) : (Int64(126) | 1))
                    } else {
                        var_1735048483908_2736
                    }

                case _ =>
                    var_1735048483908_2709;
                    ();
                    ((Int8(Int8(-22)) & 127)..(Int8(Int8(-85)) & 127) : (var_1735048483908_201 | 1))
            }
        });
        Int8(match (var_1735048483908_1041) {
            case _ =>
                [var_1735048483908_1219, var_1735048483908_1219,
                    Class_1735048483908_845(optionalParam_1735048483908_1165: Int64(-95),
                    namedParam_1735048483908_1169: ((Int64(Int64(96)) & 127)..=(Int64(Int64(47)) & 127) : (Int64(-101) |
                        1))), Class_1735048483908_845(namedParam_1735048483908_1169: var_1735048483908_320),
                    Class_1735048483908_845(
                    optionalParam_1735048483908_2797: [UInt64(173), UInt64(120), UInt64(204), UInt64(169), UInt64(39),
                        UInt64(158), UInt64(150), UInt64(65), UInt64(91), UInt64(92)],
                    namedParam_1735048483908_2799: Option<Range<UInt32>>.None), Class_1735048483908_845(),
                    var_1735048483908_1219, var_1735048483908_1219, var_1735048483908_1219, var_1735048483908_1219];
                [var_1735048483908_953, var_1735048483908_953, var_1735048483908_953, var_1735048483908_953,
                    var_1735048483908_2847, UInt8(32), UInt8(209), UInt8(126), var_1735048483908_2847, UInt8(55)]

            case caseVar_1735048483908_2856 =>
                ();
                var_1735048483908_2860

            case caseVar_1735048483908_2864 =>
                UInt8(26) / ((UInt8(32)) | 1);
                var_1735048483908_2860

            case _ => var_1735048483908_2860
        }[5])
    };

    if ((match (func_1735048483908_380(namedParam_1735048483908_381: var_1735048483908_2253,
        optionalParam_1735048483908_382: var_1735048483908_2877)) {
        case _: Range<UInt8> => true
        case _ => false
    })) {
        if (true) { // block id: 2881
            var_1735048483908_323;
            Int16(-4);
            [UInt64(146), UInt64(182), UInt64(117), UInt64(223), UInt64(249), UInt64(219), UInt64(161), UInt64(240),
                UInt64(125), UInt64(109)]
        } else { // block id: 2885
            var_1735048483908_2319;
            [UInt64(173), UInt64(219), UInt64(140), UInt64(31), UInt64(200), UInt64(45), UInt64(90), UInt64(182),
                UInt64(46), UInt64(233)]
        }
    } else {
        var_1735048483908_2018
    }
}

@Frozen
@Deprecated
internal func func_1735048483908_227(param_1735048483908_228: Int8): Array<UInt64> { // block id: 229
    const var_1735048483908_241: Bool = true;
    let var_1735048483908_244: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
    var var_1735048483908_255: Unit = ();
    if ((match (Option<Bool>.Some(true)) {
        case Some(num) => num
        case None => var_1735048483908_241
    })) {
        var_1735048483908_244
    } else {
        VArray<Unit, $9>(repeat: var_1735048483908_191)
    }[1];
    var var_1735048483908_2890: (Int64) -> Array<UInt64> = func_1735048483908_262<Range<UInt64>>;
    try { // block id: 260
        var_1735048483908_2890(var_1735048483908_201);
        (match (var_1735048483908_2899) {
            case Some(num) => num
            case None => var_1735048483908_303
        });
        if (true) {
            [UInt64(76), UInt64(254), UInt64(108), UInt64(165), UInt64(149), UInt64(155), UInt64(75), UInt64(54),
                UInt64(174), UInt64(156)]
        } else {
            var_1735048483908_2018
        }
    } finally { // block id: 2937
        match (var_1735048483908_1913) {
            case _ =>
                var_1735048483908_2944;
                var_1735048483908_2899;
                var_1735048483908_191
        };
        [UInt64(79), var_1735048483908_323, UInt64(64), var_1735048483908_323, var_1735048483908_908, UInt64(130),
            var_1735048483908_323, var_1735048483908_323, UInt64(121), UInt64(227)]
    }
}

@Frozen
public func func_1735048483908_158(param_1735048483908_159: Unit): (Bool, VArray<Unit, $8>, Float64, Range<UInt32>) { // block id: 160
    let var_1735048483908_174: Rune = r'J';
    func func_1735048483908_166<T0>(param_1735048483908_167: Int64): Struct_1735048483908_162 { // block id: 168
        const var_1735048483908_214: UInt64 = 201;
        if (false) { // block id: 171
            match (var_1735048483908_174) {
                case caseVar_1735048483908_178: Rune =>
                    var_1735048483908_182 = var_1735048483908_182 / ((UInt16(88)) | 1)
                    ();
                    ()

                case r's' | r'F' | r'f' =>
                    var_1735048483908_191;
                    var_1735048483908_191

                case r'v' =>
                    ((UInt64(UInt64(218)) & 127)..=(UInt64(UInt64(5)) & 127) : (Int64(-121) | 1));
                    ();
                    var_1735048483908_201 = var_1735048483908_201 | (var_1735048483908_201)

                case r'e' => ()

                case _ => ()
            };
            [var_1735048483908_214, UInt64(71), UInt64(212), var_1735048483908_214, var_1735048483908_214, UInt64(24),
                UInt64(176), UInt64(125), var_1735048483908_214, UInt64(156)]
        } else { // block id: 225
            let var_1735048483908_2960: (Int8) -> Array<UInt64> = func_1735048483908_227;
            var_1735048483908_2960(Int8(75))
        };
        try { // block id: 2964
            var loopTimeVar_1735048483908_2972: Array<UInt64> = [UInt64(Int64(UInt32(UInt32(112)))), UInt64(UInt32(219)),
                UInt64(UInt16(204)), UInt64(Int16(61)), UInt64(60), UInt64(UInt8(4)), UInt64(Int32(Int8(-85))),
                UInt64(99), UInt64(UInt64(Int64(95))), UInt64(151)];
            let iter2965 = loopTimeVar_1735048483908_2972.iterator()
            while (true) {
                match (iter2965.next()) {
                    case None => break
                    case Some(v) => match (v) {
                        case i where (var_1735048483908_2967) =>
                            var_1735048483908_1114;
                            [UInt8(16), UInt8(123), UInt8(126), UInt8(111), UInt8(228), UInt8(73), UInt8(180), UInt8(65),
                                UInt8(146), UInt8(49)]
                        case _ => continue
                    }
                }
            };

            let var_1735048483908_2998: Class_1735048483908_416 = Class_1735048483908_845(
                optionalParam_1735048483908_1165: Int64(-44),
                namedParam_1735048483908_1169: ((Int64(Int64(-114)) & 127)..(Int64(Int64(UInt16(Int8(112)))) & 127) : (Int64(-125) |
                    1)));
            if (var_1735048483908_2967) {
                var_1735048483908_2998
            } else {
                Class_1735048483908_845()
            };
            var_1735048483908_3014.getOrThrow()
        } finally { // block id: 3016
            var_1735048483908_836 = """
a2.oP
s&~me
"""
            [(), var_1735048483908_2319, var_1735048483908_349, (), (), var_1735048483908_1114, var_1735048483908_191,
                (), (), var_1735048483908_1114][4]
        };
        var_1735048483908_3035
    };

    var chainCall161 = func_1735048483908_166<Option<UInt8>>(match (Int8(87)) {
        case _ => var_1735048483908_935
    });
    chainCall161.func_1735048483908_3044();
    var var_1735048483908_3282: (UInt16, Range<UInt32>, Array<Unit>) = (UInt16(174), ((UInt32(UInt32(147)) & 127)..(UInt32(UInt32(153)) &
            127) : (Int64(-54) | 1)), [(), (), (), (), (), (), (), (), (), ()]);
    var var_1735048483908_3350: Option<Range<UInt32>> = (match (Option<Float32>.None) {
        case newVar: Range<UInt32> => Option<Range<UInt32>>.Some(newVar)
        case _ => Option<Range<UInt32>>.None
    });
    (var_1735048483908_2709, if (true) { // block id: 3280
            var_1735048483908_3282;
            [UInt8(233), UInt8(225), UInt8(178), UInt8(75), UInt8(135), UInt8(212), UInt8(243), UInt8(246), UInt8(171),
                UInt8(49)];
            var_1735048483908_1180
        } else { // block id: 3289
            var_1735048483908_349;
            var_1735048483908_1114;
            var_1735048483908_1180
        }, match (if (var_1735048483908_2967) { // block id: 3296
            if (var_1735048483908_2967) {
                [UInt64(123), UInt64(160), UInt64(167), UInt64(224), UInt64(29), UInt64(50), UInt64(169), UInt64(132),
                    UInt64(167), UInt64(233)]
            } else {
                [UInt64(182), UInt64(33), var_1735048483908_3188, UInt64(37), var_1735048483908_3188,
                    var_1735048483908_908, UInt64(142), var_1735048483908_3188, UInt64(89), UInt64(27)]
            };
            var_1735048483908_1114;
            var_1735048483908_182 >> ((UInt16(202)) & 7)
        } else if (var_1735048483908_2117) { // block id: 3316
            UInt16(118)
        } else { // block id: 3318
            -UInt16(167)
        }) {
            case caseVar_1735048483908_3323 => Float64(-64.0)

            case 133 =>
                ();
                Float64(-5.0) + var_1735048483908_1986

            case caseVar_1735048483908_3335 => Float64(8.0)

            case _ => var_1735048483908_1986
        }, (match ((match (Option<Option<Range<UInt32>>>.None) {
            case Some(num) => num
            case None => var_1735048483908_3350
        })) {
            case Some(num) => num
            case None => var_1735048483908_285
        }))
}

public func func_1735048483908_152(param_1735048483908_153: Float32): (Float64, String, UInt64, (Bool, Rune, String, 
    Int8, Array<Unit>, (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>), Range<Int64>, UInt64), Range<Int16>, 
    Option<Unit>, Range<Int8>) { // block id: 154
    (func_1735048483908_158(if (var_1735048483908_3357) { // block id: 3359
        var_1735048483908_1026;
        VArray<Unit, $9>({i => ()});
        var_1735048483908_1026
    } else if (var_1735048483908_3357) { // block id: 3373
        var_1735048483908_938;
        var var_1735048483908_3377: UInt64 = UInt64(204);
        var_1735048483908_3377 = var_1735048483908_3377 * (var_1735048483908_3377)
        var var_1735048483908_3382: Int8 = Int8(-89);
        var_1735048483908_3382 = var_1735048483908_3382 / ((Int8(23)) | 1)
    }))[3];
    var var_1735048483908_3387: (Float64, String, UInt64, (Bool, Rune, String, Int8, Array<Unit>, (Range<Int32>, Range<UInt16>, 
        Float32, Bool, Range<UInt32>), Range<Int64>, UInt64), Range<Int16>, Option<Unit>, Range<Int8>) = (Float64(-100.0),
        """
j\" cM
3n\\5G
""", UInt64(UInt64(Int32(-33))), (true, r'u', """
Wgf j
;gQj!
""", Int8(Int8(36)), [(), (), (),
                (), (), (), (), (), (), ()], (((Int32(Int32(71)) & 127)..=(Int32(Int32(-86)) & 127) : (Int64(-128) | 1)),
                ((UInt16(UInt16(203)) & 127)..(UInt16(UInt16(219)) & 127) : (Int64(121) | 1)), Float32(-64.0), true, ((UInt32(UInt32(233)) &
                    127)..(UInt32(UInt32(40)) & 127) : (Int64(94) | 1))), ((Int64(Int64(UInt16(111))) & 127)..=(Int64(Int64(UInt16(216))) &
                127) : (Int64(UInt64(124)) | 1)), UInt64(Int8(-8))), ((Int16(Int16(67)) & 127)..=(Int16(Int16(UInt16(31))) &
            127) : (Int64(Int16(-105)) | 1)), (match ((match (UInt64(UInt8(214))) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        })) {
            case newVar: Unit => Option<Unit>.Some(newVar)
            case _ => Option<Unit>.None
        }), ((Int8(Int8(78)) & 127)..=(Int8(Int8(-3)) & 127) : (Int64(-95) | 1)));
    var_1735048483908_3387
}

public func func_1735048483908_78<T0>(param_1735048483908_79: Bool): Array<Unit> { // block id: 80
    const var_1735048483908_82: Rune = r'W';
    var_1735048483908_82;
    var loopTimeVar_1735048483908_146: Int64 = 0;
    do {
        loopTimeVar_1735048483908_146++;
        var var_1735048483908_143: Unit = ();
        (match (var_1735048483908_132) {
            case Some(num) => num
            case None => var_1735048483908_143
        })
    } while ((try { // block id: 87
        UInt16(226);
        var var_1735048483908_90: (Range<Int32>, Range<UInt16>, Float32, Bool, Range<UInt32>) = (((Int32(Int32(-29)) &
                127)..(Int32(Int32(4)) & 127) : (Int64(-122) | 1)), ((UInt16(UInt16(122)) & 127)..=(UInt16(UInt16(227)) &
                127) : (Int64(-7) | 1)), Float32(Float32(Float32(Float32(96.0)))), true, ((UInt32(UInt32(191)) & 127)..(UInt32(UInt32(136)) &
                127) : (Int64(109) | 1)));
        var_1735048483908_90
    } finally { // block id: 103
        var var_1735048483908_106: Bool = (match (Int32(51)) {
            case _: Range<UInt8> => true
            case _ => false
        });
        if (var_1735048483908_106) {
            [UInt64(231), UInt64(51), UInt64(76), UInt64(216), UInt64(46), UInt64(53), UInt64(228), UInt64(14),
                UInt64(222), UInt64(72)]
        } else {
            [UInt64(230), UInt64(117), UInt64(5), UInt64(63), UInt64(170), UInt64(43), UInt64(99), UInt64(7), UInt64(15),
                UInt64(190)]
        };
        let var_1735048483908_115: Int32 = Int32(-46);
        (((Int32(Int32(101)) & 127)..(Int32(var_1735048483908_115) & 127) : (var_1735048483908_118 | 1)), ((UInt16(UInt16(98)) &
                127)..=(UInt16(UInt16(194)) & 127) : (Int64(87) | 1)), Float32(7.0), var_1735048483908_106, ((UInt32(UInt32(140)) &
                127)..(UInt32(UInt32(83)) & 127) : (Int64(-111) | 1)))
    }[3]) && loopTimeVar_1735048483908_146 < 100);
    let var_1735048483908_3447: (Float32) -> (Float64, String, UInt64, (Bool, Rune, String, Int8, Array<Unit>, (Range<Int32>, 
        Range<UInt16>, Float32, Bool, Range<UInt32>), Range<Int64>, UInt64), Range<Int16>, Option<Unit>, Range<Int8>) = func_1735048483908_152;
    let var_1735048483908_3450: Float32 = Float32(Float32(Float32(Float32(30.0))));
    (var_1735048483908_3447(var_1735048483908_3450))[3][4]
}

public func func_1735048483908_59(namedParam_1735048483908_60!: Unit, namedParam_1735048483908_61!: Int16,
    optionalParam_1735048483908_62!: Rune = r'H',
    optionalParam_1735048483908_64!: VArray<Unit, $8> = [(), (), (), (), (), (), (), ()]): Array<VArray<Unit, $8>> { // block id: 74
    (func_1735048483908_78<Array<VArray<Unit, $8>>>(false || var_1735048483908_3461))[3];
    var var_1735048483908_3575: Int8 = Int8(79);
    var_1735048483908_3575;
    const var_1735048483908_3600: Unit = ();
    let var_1735048483908_3777: Unit = ();
    (match (Option<Array<VArray<Unit, $8>>>.None) {
        case Some(num) => num
        case None => [(match (Option<VArray<Unit, $8>>.Some(var_1735048483908_3591)) {
            case Some(num) => num
            case None => VArray<Unit, $8>(repeat: var_1735048483908_3595)
        }), try { // block id: 3607
            ();
            var_1735048483908_3610;
            if (var_1735048483908_3461) {
                VArray<Unit, $8>(repeat: var_1735048483908_3616)
            } else {
                var_1735048483908_3591
            }
        } finally { // block id: 3626
            ();
            var_1735048483908_3616;
            var_1735048483908_3591
        }, (match (var_1735048483908_3632) {
            case Some(num) => num
            case None => VArray<Unit, $8>({i => ()})
        }), if (var_1735048483908_3461) { // block id: 3646
            var_1735048483908_3649 = var_1735048483908_3649 << ((UInt32(44)) & 7)
            VArray<Unit, $8>(repeat: ())
        } else { // block id: 3661
            if (var_1735048483908_3461) {
                var_1735048483908_3591
            } else {
                VArray<Unit, $8>({i => ()})
            }
        }, try { // block id: 3675
            var_1735048483908_3678 = var_1735048483908_3678 / Float32((Int32(Float32(73.0))) | 1)
            var var_1735048483908_3687: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            (true, r'x', ###"Kz?@ m[Db:"###, Int8(1), var_1735048483908_3687, var_1735048483908_3690, ((Int64(Int64(-108)) &
                    127)..(Int64(Int64(-41)) & 127) : (Int64(34) | 1)), UInt64(126));
            var var_1735048483908_3715: Unit = ();
            VArray<Unit, $8>({i => ()})
        } catch (e: Exception) { // block id: 3720
            VArray<Unit, $8>(repeat: var_1735048483908_3723)
        }, (match (Option<VArray<Unit, $8>>.None) {
            case Some(num) => num
            case None => VArray<Unit, $8>({i => ()})
        }), var_1735048483908_3591, if (false) { // block id: 3746
            if (false) {
                var_1735048483908_3591
            } else {
                var_1735048483908_3591
            }
        } else if (var_1735048483908_3461) { // block id: 3752
            var_1735048483908_3690;
            VArray<Unit, $8>({i => ()})
        } else { // block id: 3763
            var_1735048483908_3591
        }, var_1735048483908_3591, if (false) {
            VArray<Unit, $8>(repeat: var_1735048483908_3600)
        } else {
            VArray<Unit, $8>({i => ()})
        }]
    })
}

@Deprecated
internal func func_1735048483908_21(param_1735048483908_22: UInt16): VArray<Unit, $8> { // block id: 23
    var loopTimeVar_1735048483908_51: Int64 = 0;
    while ((var_1735048483908_32.var_1735048483908_35[3]) && loopTimeVar_1735048483908_51 < 100) {
        loopTimeVar_1735048483908_51++;
    };
    const var_1735048483908_3837: Int16 = 125;
    func func_1735048483908_55(param_1735048483908_56: String): Array<VArray<Unit, $8>> { // block id: 57
        const var_1735048483908_3811: UInt16 = 231;
        var loopTimeVar_1735048483908_3815: Int = 0;
        let var_1735048483908_3825: Range<UInt8> = ((UInt8(UInt8(9)) & 127)..(UInt8(UInt8(197)) & 127) : (Int64(71) | 1));
        func_1735048483908_59(
            namedParam_1735048483908_60: while ((if (var_1735048483908_3461) { // block id: 3791
                    const var_1735048483908_3794: UInt8 = 159;
                    var_1735048483908_3794 >= var_1735048483908_3794
                } else if (var_1735048483908_3461) { // block id: 3798
                    var_1735048483908_3801 = var_1735048483908_3801 ^ (Int32(26))
                    true
                } else { // block id: 3805
                    var_1735048483908_3461
                }) && loopTimeVar_1735048483908_3815 < 100) {
                loopTimeVar_1735048483908_3815++;
                ();
                var_1735048483908_3811 | UInt16(150)
            },
            namedParam_1735048483908_61: match ((match (Option<Range<UInt8>>.Some(
                ((UInt8(UInt8(224)) & 127)..=(UInt8(UInt8(118)) & 127) : (Int64(12) | 1)))) {
                case Some(num) => num
                case None => var_1735048483908_3825
            })) {
                case _ =>
                    if (true) {
                        ((Int16(Int16(53)) & 127)..(Int16(Int16(-87)) & 127) : (Int64(-77) | 1))
                    } else {
                        ((Int16(Int16(-104)) & 127)..=(Int16(Int16(-64)) & 127) : (Int64(-98) | 1))
                    };
                    Int16(-13) % ((var_1735048483908_3837) | 1)
            })
    };

    func_1735048483908_55(try { // block id: 3840
        var_1735048483908_3616;
        var var_1735048483908_3843: Array<VArray<Unit, $8>> = [VArray<Unit, $8>(repeat: ()),
            VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>(repeat: ()),
            VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()),
            VArray<Unit, $8>({i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({i => ()})];
        var_1735048483908_3843;
        var_1735048483908_3610
    } catch (_) { // block id: 3936
        var_1735048483908_3610;
        var_1735048483908_3610
    })[5]
}

main(): Int64 {
    try {
        func_1735048483908_21(UInt16(Int8(37)))[0];
        Int64(var_1735048483908_3945)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1735048483908_3801 * var_1735048483908_3801), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Int32 {
    operator func ()(x: Int32): Int32 {
        return this + x
    }
}

extend Class_1735048483908_1237 {}

extend<T0, T1, T2> Class_1735048483908_758<T0, T1, T2> {}
