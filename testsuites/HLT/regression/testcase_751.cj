/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

@Deprecated
public const var_1743602695584_15: Unit = ()
internal var var_1743602695584_80: Option<Int64> = (((UInt8(UInt8(Int8(61))) & 127)..(UInt8(UInt8(63)) & 127) : (Int64(33) |
    1)) as Int64)
var var_1743602695584_132: Range<Int32> = ((Int32(Int32(9)) & 127)..(Int32(Int32(3)) & 127) : (Int64(-99) | 1))
public let var_1743602695584_141: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
@Deprecated
const var_1743602695584_252: Int = 108
const var_1743602695584_255: UInt32 = 221
@Deprecated
const var_1743602695584_259: Float32 = -20.0
public var var_1743602695584_310: Int8 = Int8(UInt8(152))
@Deprecated
public var var_1743602695584_318: Bool = false
public var var_1743602695584_323: Byte = UInt8(UInt8(Int8(UInt8(37))))
@Deprecated
public const var_1743602695584_385: Unit = ()
public var var_1743602695584_394: Interface_1743602695584_294 = Class_1743602695584_291()
public let var_1743602695584_408: ?Bool = Option<Bool>.None
public const var_1743602695584_423: Float64 = -66.0
@Deprecated
public var var_1743602695584_451: ?UInt16 = (Option<Array<Bool>>.None as UInt16)
@Deprecated
public let var_1743602695584_475: ?Range<Int32> = Option<Range<Int32>>.None
public var var_1743602695584_653: ?Enum_1743602695584_621 = Option<Enum_1743602695584_621>.None
@Deprecated
public let var_1743602695584_660: Int64 = Int64(UInt32(Int32(Int32(40))))
@Deprecated
public var var_1743602695584_720: UInt32 = UInt32(Int8(-10))
public var var_1743602695584_733: Range<Int8> = ((Int8(Int8(-82)) & 127)..=(Int8(Int8(-112)) & 127) : (Int64(4) | 1))
@Deprecated
internal var var_1743602695584_769: ?(UInt32, (Range<Int8>, Int8, Bool), VArray<Int64, $5>, Array<Bool>) = Option<(UInt32, 
        (Range<Int8>, Int8, Bool), VArray<Int64, $5>, Array<Bool>)>.None
public let var_1743602695584_774: (Range<Int8>, Int8, Bool) = (((Int8(Int8(Int8(65))) & 127)..(Int8(Int8(0)) & 127) : (Int64(37) |
        1)), Int8(64), (Int8(-33) is (Array<UInt16>) -> Option<Range<Int32>>))
public var var_1743602695584_785: VArray<Int64, $5> = [Int64(Int16(96)), Int64(47), Int64(Int32(-70)), Int64(-44),
    Int64(26)]
public var var_1743602695584_869: (Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>) = (((Int8(Int8(43)) &
        127)..=(Int8(Int8(86)) & 127) : (Int64(120) | 1)), (), (), ((UInt64(UInt64(115)) & 127)..(UInt64(UInt64(250)) &
        127) : (Int64(-34) | 1)), Option<Range<Int32>>.None)
var var_1743602695584_882: UInt8 = UInt8(UInt8(Int8(95)))
var var_1743602695584_909: (UInt32, (Range<Int8>, Int8, Bool), VArray<Int64, $5>, Array<Bool>) = (UInt32(Int8(-37)), (((Int8(Int8(-97)) &
            127)..=(Int8(Int8(21)) & 127) : (Int64(59) | 1)), Int8(-94), true), VArray<Int64, $5>(repeat: Int64(UInt16(UInt16(20)))),
    [(###"f#` J#^\"Zk"### is Array<Bool>), false, (("[|S}!F*n*m" as Int64) is Unit),
        (Class_1743602695584_291() is (Float64, UInt16) -> Unit), (UInt32(249) is Interface_1743602695584_295<UInt8>),
        (Int64(0) is (Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)), true, true, false,
        (((UInt16(UInt16(56)) & 127)..=(UInt16(UInt16(17)) & 127) : (Int64(93) | 1)) is Interface_1743602695584_295<UInt8>)])
public var var_1743602695584_959: (Range<Int8>, Int8, Bool) = (((Int8(Int8(Int8(UInt8(67)))) & 127)..=(Int8(Int8(UInt8(UInt8(18)))) &
        127) : (Int64(Int32(UInt8(180))) | 1)), Int8(UInt8(133)), ((((Int64(Int64(78)) & 127)..=(Int64(Int64(-108)) & 127) : (Int64(-68) |
            1)), Class_1743602695584_291(), ([UInt64(248), UInt64(91), UInt64(178), UInt64(99), UInt64(94), UInt64(28),
            UInt64(102), UInt64(200), UInt64(151), UInt64(184)] as Range<Int32>), [false, false, true, false, false,
            false, false, false, true, false], Int32(-69)) is Array<UInt64>))
public var var_1743602695584_1013: UInt32 = UInt32(Int32(7))
var var_1743602695584_1020: Option<Unit> = (Class_1743602695584_291() as Unit)
var var_1743602695584_1030: ((UInt32, (Range<Int8>, Int8, Bool), VArray<Int64, $5>, Array<Bool>), Option<Range<Int32>>, 
    String, Int32, Unit, Array<Array<UInt16>>, UInt16, Range<UInt32>, (Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)) = ((UInt32(244),
        (((Int8(Int8(-51)) & 127)..=(Int8(Int8(90)) & 127) : (Int64(11) | 1)), Int8(Int8(-99)), (Int16(-48) is (Float64,
                UInt16) -> Unit)), VArray<Int64, $5>(repeat: Int64(Int8(-72))), [(Option<(Range<Int8>, Unit, Unit, Range<UInt64>, 
                Option<Range<Int32>>)>.None is Array<Bool>), true,
            (Option<(Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)>.None is Int64), false,
            (((UInt8(UInt8(169)) & 127)..(UInt8(UInt8(98)) & 127) : (Int64(-37) | 1)) is VArray<Int64, $5>),
            (((UInt16(UInt16(50)) & 127)..=(UInt16(UInt16(215)) & 127) : (Int64(-67) | 1)) is Interface_1743602695584_294),
            (Option<Bool>.None is Range<Int8>), true, false, false]), (Option<UInt16>.None as Range<Int32>), "BzmA*s6qYS",
    Int32(UInt32(UInt32(Int32(95)))), (), [[UInt16(UInt16(210)), UInt16(188), UInt16(27), UInt16(Int16(-40)),
        UInt16(119), UInt16(90), UInt16(UInt16(159)), UInt16(106), UInt16(152), UInt16(240)],
        [UInt16(232), UInt16(70), UInt16(117), UInt16(9), UInt16(230), UInt16(114), UInt16(13), UInt16(202), UInt16(65),
        UInt16(247)],
        [UInt16(113), UInt16(56), UInt16(143), UInt16(88), UInt16(141), UInt16(71), UInt16(166), UInt16(11), UInt16(75),
        UInt16(26)],
        [UInt16(29), UInt16(74), UInt16(44), UInt16(166), UInt16(41), UInt16(37), UInt16(61), UInt16(139), UInt16(196),
        UInt16(73)],
        [UInt16(76), UInt16(12), UInt16(77), UInt16(27), UInt16(187), UInt16(74), UInt16(158), UInt16(77), UInt16(22),
        UInt16(59)],
        [UInt16(36), UInt16(158), UInt16(94), UInt16(80), UInt16(91), UInt16(150), UInt16(86), UInt16(10), UInt16(133),
        UInt16(224)],
        [UInt16(Int16(30)), UInt16(39), UInt16(UInt16(229)), UInt16(39), UInt16(Int8(114)), UInt16(59), UInt16(108),
        UInt16(UInt16(56)), UInt16(UInt16(186)), UInt16(233)],
        [UInt16(6), UInt16(227), UInt16(81), UInt16(176), UInt16(79), UInt16(139), UInt16(21), UInt16(177), UInt16(221),
        UInt16(157)],
        [UInt16(183), UInt16(UInt16(163)), UInt16(136), UInt16(UInt8(45)), UInt16(5), UInt16(218), UInt16(UInt8(219)),
        UInt16(113), UInt16(Int8(-4)), UInt16(Int8(57))],
        [UInt16(UInt8(116)), UInt16(UInt8(121)), UInt16(200), UInt16(UInt8(138)), UInt16(UInt16(153)), UInt16(163),
        UInt16(161), UInt16(46), UInt16(41), UInt16(207)]], UInt16(113), ((UInt32(UInt32(250)) & 127)..(UInt32(UInt32(77)) &
        127) : (Int64(Int8(UInt8(129))) | 1)), (((Int8(Int8(UInt8(64))) & 127)..=(Int8(Int8(UInt8(84))) & 127) : (Int64(Int64(-87)) |
            1)), (), (), ((UInt64(UInt64(28)) & 127)..=(UInt64(UInt64(171)) & 127) : (Int64(-80) | 1)), Option<Range<Int32>>
            .None))
let var_1743602695584_1344: UInt64 = UInt64(UInt16(204))
public var var_1743602695584_1448: Option<Option<Int64>> = (r'1' as Option<Int64>)
public var var_1743602695584_1463: Bool = (Int8(Int8(-24)) is (Float64, UInt16) -> Unit)
var var_1743602695584_1537: ((UInt64, Option<Unit>, Option<Bool>, Array<UInt16>), Option<(Array<UInt64>, Float64, Option<Range<Int32>>, 
    Option<Array<Array<UInt16>>>, Option<Int64>)>, UInt64) = ((UInt64(UInt16(Int16(95))), (Int64(UInt32(250)) as Unit), ((r'1',
            Option<Bool>.None, false, [[UInt16(57), UInt16(78), UInt16(167), UInt16(223), UInt16(215), UInt16(12),
                UInt16(177), UInt16(229), UInt16(163), UInt16(69)],
                [UInt16(128), UInt16(77), UInt16(169), UInt16(196), UInt16(108), UInt16(15), UInt16(20), UInt16(149),
                UInt16(136), UInt16(246)],
                [UInt16(31), UInt16(229), UInt16(30), UInt16(225), UInt16(139), UInt16(96), UInt16(67), UInt16(208),
                UInt16(115), UInt16(212)],
                [UInt16(168), UInt16(146), UInt16(1), UInt16(41), UInt16(175), UInt16(78), UInt16(79), UInt16(16),
                UInt16(14), UInt16(44)],
                [UInt16(210), UInt16(44), UInt16(110), UInt16(2), UInt16(44), UInt16(48), UInt16(73), UInt16(134),
                UInt16(195), UInt16(176)],
                [UInt16(21), UInt16(115), UInt16(53), UInt16(164), UInt16(3), UInt16(92), UInt16(18), UInt16(53),
                UInt16(85), UInt16(158)],
                [UInt16(201), UInt16(140), UInt16(184), UInt16(185), UInt16(25), UInt16(96), UInt16(227), UInt16(106),
                UInt16(250), UInt16(124)],
                [UInt16(105), UInt16(156), UInt16(211), UInt16(139), UInt16(114), UInt16(239), UInt16(247), UInt16(168),
                UInt16(188), UInt16(182)],
                [UInt16(170), UInt16(109), UInt16(122), UInt16(197), UInt16(224), UInt16(147), UInt16(45), UInt16(201),
                UInt16(104), UInt16(23)],
                [UInt16(20), UInt16(65), UInt16(86), UInt16(65), UInt16(54), UInt16(162), UInt16(66), UInt16(17),
                UInt16(95), UInt16(19)]], UInt8(43), ((Int32(Int32(-106)) & 127)..=(Int32(Int32(8)) & 127) : (Int64(48) |
                1)), (UInt32(200), (((Int8(Int8(110)) & 127)..=(Int8(Int8(43)) & 127) : (Int64(15) | 1)), Int8(-86),
                    false), VArray<Int64, $5>({i => Int64(107)}), [true, false, true, false, false, false, true, true,
                    true, true])) as Bool), [UInt16(Int16(-50)), UInt16(UInt16(104)), UInt16(Int16(91)),
            UInt16(Int16(-49)), UInt16(12), UInt16(189), UInt16(60), UInt16(186), UInt16(UInt16(90)), UInt16(Int16(116))]),
    Option<(Array<UInt64>, Float64, Option<Range<Int32>>, Option<Array<Array<UInt16>>>, Option<Int64>)>.None, UInt64(UInt64(UInt64(Int16(109)))))
public var var_1743602695584_1665: Float32 = Float32(115.0)

public const func func_1743602695584_9(optionalParam_1743602695584_10!: Float64 = 55.0,
    namedParam_1743602695584_12!: UInt16): Unit { // block id: 13
    var_1743602695584_15;
    ()
}

@Frozen
public const func func_1743602695584_19(param_1743602695584_20: Int16): Float64 { // block id: 21
    120.0
}

public const func func_1743602695584_244(optionalParam_1743602695584_245!: Float32 = -16.0): UInt8 { // block id: 247
    const func func_1743602695584_249(): UInt32 { // block id: 250
        var_1743602695584_252;
        var_1743602695584_255
    };

    func_1743602695584_249();
    148
}

@Frozen
internal const func func_1743602695584_237(optionalParam_1743602695584_238!: UInt16 = 194,
    optionalParam_1743602695584_240!: Float32 = -117.0): UInt8 { // block id: 242
    func_1743602695584_244(optionalParam_1743602695584_245: var_1743602695584_259)
}

const func func_1743602695584_231(): Unit { // block id: 232
    const var_1743602695584_262: UInt16 = 113;
    const func func_1743602695584_234(): UInt8 { // block id: 235
        const var_1743602695584_265: Float32 = -103.0;
        func_1743602695584_237(optionalParam_1743602695584_238: var_1743602695584_262,
            optionalParam_1743602695584_240: var_1743602695584_265)
    };

    func_1743602695584_234();
    ()
}

@Frozen
public const func func_1743602695584_226(param_1743602695584_227: UInt16): Unit { // block id: 228
    var_1743602695584_15;
    func_1743602695584_231();
    var_1743602695584_15
}

public sealed interface Interface_1743602695584_298 {
    @Frozen
    func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 401
        false
    }
}

public interface Interface_1743602695584_297 <: Interface_1743602695584_298 {
    func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 811
        let var_1743602695584_825: Bool = ([UInt64(Int32(Int8(-99))), UInt64(117), UInt64(UInt64(Int32(-91))),
            UInt64(Int8(55)), UInt64(UInt8(30)), UInt64(138), UInt64(87), UInt64(UInt16(190)), UInt64(Int64(Int32(-98))),
            UInt64(120)] is () -> Unit);
        var var_1743602695584_853: ?Bool = (((UInt64(UInt64(42)) & 127)..(UInt64(UInt64(Int8(-71))) & 127) : (Int64(-109) |
            1)) as Bool);
        try { // block id: 813
            Option<Unit>.None.getOrThrow();
            (((Int16(Int16(33)) & 127)..=(Int16(Int16(-15)) & 127) : (Int64(-39) | 1)) as Bool)
        } finally { // block id: 822
            match (var_1743602695584_825) {
                case _ =>
                    var_1743602695584_323;
                    r'C';
                    var_1743602695584_853
            }
        };
        let var_1743602695584_902: Array<Array<UInt16>> = [[UInt16(198), UInt16(206), UInt16(3), UInt16(132),
            UInt16(168), UInt16(103), UInt16(228), UInt16(25), UInt16(187), UInt16(187)],
            [UInt16(165), UInt16(180), UInt16(187), UInt16(48), UInt16(59), UInt16(111), UInt16(231), UInt16(225),
            UInt16(246), UInt16(176)],
            [UInt16(165), UInt16(195), UInt16(237), UInt16(25), UInt16(0), UInt16(60), UInt16(103), UInt16(210),
            UInt16(17), UInt16(215)],
            [UInt16(62), UInt16(81), UInt16(84), UInt16(142), UInt16(66), UInt16(153), UInt16(200), UInt16(190),
            UInt16(8), UInt16(250)],
            [UInt16(0), UInt16(53), UInt16(191), UInt16(69), UInt16(100), UInt16(147), UInt16(200), UInt16(138),
            UInt16(135), UInt16(150)],
            [UInt16(252), UInt16(87), UInt16(243), UInt16(141), UInt16(168), UInt16(103), UInt16(117), UInt16(71),
            UInt16(197), UInt16(118)],
            [UInt16(89), UInt16(63), UInt16(148), UInt16(207), UInt16(227), UInt16(75), UInt16(109), UInt16(206),
            UInt16(134), UInt16(233)],
            [UInt16(103), UInt16(239), UInt16(72), UInt16(32), UInt16(91), UInt16(229), UInt16(215), UInt16(182),
            UInt16(188), UInt16(173)],
            [UInt16(160), UInt16(28), UInt16(165), UInt16(69), UInt16(39), UInt16(163), UInt16(34), UInt16(195),
            UInt16(196), UInt16(208)],
            [UInt16(189), UInt16(158), UInt16(151), UInt16(212), UInt16(207), UInt16(97), UInt16(14), UInt16(241),
            UInt16(204), UInt16(248)]];
        try { // block id: 861
            (Option<(Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)>.None ?? var_1743602695584_869);
            match (UInt64(113)) {
                case _ => var_1743602695584_882
            }
        } finally { // block id: 886
            var loopTimeVar_1743602695584_891: Int64 = 0;
            while ((var_1743602695584_825) && loopTimeVar_1743602695584_891 < 100) {
                loopTimeVar_1743602695584_891++;
            };
            let var_1743602695584_896: Rune = r'e';
            var var_1743602695584_906: Range<Int32> = ((Int32(Int32(-50)) & 127)..(Int32(Int32(41)) & 127) : (Int64(-84) |
                1));
            (var_1743602695584_896, Option<Bool>.Some(var_1743602695584_825), false, var_1743602695584_902,
                var_1743602695584_882, var_1743602695584_906, var_1743602695584_909)[4]
        };
        var_1743602695584_825
    }
}

public sealed interface Interface_1743602695584_296 <: Interface_1743602695584_297 {
    func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 951
        var_1743602695584_318
    }
}

public interface Interface_1743602695584_295<T0> <: Interface_1743602695584_296 {
    func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 1441
        var var_1743602695584_1452: Option<Int64> = Option<Int64>.Some(Int64(-5));
        (var_1743602695584_1448 ?? var_1743602695584_1452);
        var var_1743602695584_1524: Float32 = Float32(-45.0);
        try { // block id: 1456
            var var_1743602695584_1468: Array<UInt16> = [UInt16(76), UInt16(132), UInt16(59), UInt16(223), UInt16(79),
                UInt16(94), UInt16(132), UInt16(84), UInt16(110), UInt16(202)];
            (var_1743602695584_1344, Option<Unit>.Some(var_1743602695584_385), Option<Bool>.Some(var_1743602695584_1463),
                var_1743602695584_1468)
        } catch (e: Exception) { // block id: 1470
            Option<Option<Int64>>.None;
            let var_1743602695584_1476: (UInt64, Option<Unit>, Option<Bool>, Array<UInt16>) = (UInt64(206), (((UInt8(UInt8(138)) &
                    127)..(UInt8(UInt8(137)) & 127) : (Int64(UInt64(192)) | 1)) as Unit), (((Int8(Int8(Int8(-9))) & 127)..=(Int8(Int8(Int8(-114))) &
                    127) : (Int64(66) | 1)) as Bool), [UInt16(Int8(105)), UInt16(92), UInt16(Int16(UInt16(184))),
                    UInt16(252), UInt16(Int8(UInt8(24))), UInt16(UInt8(Int8(-85))), UInt16(15), UInt16(UInt16(193)),
                    UInt16(69), UInt16(Int16(-104))]);
            try { // block id: 1473
                UInt8(244);
                var_1743602695584_1476
            } catch (e: Exception) { // block id: 1512
                var_1743602695584_1463 ||= true
                var_1743602695584_1476
            } finally { // block id: 1517
                var_1743602695584_310--;
                var_1743602695584_1476
            }
        } finally { // block id: 1521
            var_1743602695584_1524 += var_1743602695584_1524
            try (resource = Class_1743602695584_291()) { // block id: 1528
                ();
                ()
            } finally { // block id: 1531
                var_1743602695584_385;
                ()
            };
            var_1743602695584_1537[0]
        };
        try { // block id: 1604
            Int16(-88) != Int16(90)
        } finally { // block id: 1608
            var var_1743602695584_1612: (Range<Int16>, Option<Option<Int64>>, (Range<Int8>, Int8, Bool), Option<(Rune, 
                Option<Bool>, Bool, Array<Array<UInt16>>, UInt8, Range<Int32>, (UInt32, (Range<Int8>, Int8, Bool), 
                VArray<Int64, $5>, Array<Bool>))>, Bool, Float64) = (((Int16(Int16(107)) & 127)..(Int16(Int16(Int16(-122))) &
                    127) : (Int64(Int16(UInt8(66))) | 1)), (() as Option<Int64>), (((Int8(Int8(Int8(-115))) & 127)..=(Int8(Int8(Int8(102))) &
                        127) : (Int64(-111) | 1)), Int8(-86), ((UInt64(146), Option<Unit>.None, Option<Bool>.None, [UInt16(52),
                            UInt16(27), UInt16(102), UInt16(195), UInt16(21), UInt16(6), UInt16(49), UInt16(145),
                            UInt16(174), UInt16(238)]) is (UInt32, (Range<Int8>, Int8, Bool), VArray<Int64, $5>, Array<Bool>))),
                Option<(Rune, Option<Bool>, Bool, Array<Array<UInt16>>, UInt8, Range<Int32>, (UInt32, (Range<Int8>, Int8, 
                        Bool), VArray<Int64, $5>, Array<Bool>))>.None, false, Float64(123.0));
            var_1743602695584_1612[4]
        }
    }
}

public interface Interface_1743602695584_294 <: Interface_1743602695584_295<UInt8> {
    func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 1642
        var var_1743602695584_1690: ?Bool = Option<Bool>.None;
        var var_1743602695584_1700: UInt16 = UInt16(UInt16(194));
        let var_1743602695584_1720: Int8 = Int8(UInt8(UInt8(Int8(10))));
        const var_1743602695584_1746: Bool = false;
        match (match ((Option<(Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)>.Some(
            var_1743602695584_869) ?? var_1743602695584_869)) {
            case (caseVar_1743602695584_1655, _: Range<UInt8>, caseVar_1743602695584_1656, caseVar_1743602695584_1657, _: Range<Int16>) => var_1743602695584_259

            case caseVar_1743602695584_1662 => var_1743602695584_1665

            case (caseVar_1743602695584_1669, _, caseVar_1743602695584_1670, caseVar_1743602695584_1671, caseVar_1743602695584_1672: (Range<Int8>, 
                        Unit, Unit, Range<UInt64>, Option<Range<Int32>>)) =>
                var_1743602695584_385;
                Float32(123.0)

            case (caseVar_1743602695584_1678: Option<(Range<Int8>, Unit, Unit, Range<UInt64>, Option<Range<Int32>>)>, _: VArray<Bool, $1>, _: Option<UInt16>, caseVar_1743602695584_1679, caseVar_1743602695584_1680) => var_1743602695584_259

            case _ =>
                const var_1743602695584_1696: UInt16 = 156;
                (var_1743602695584_1344, var_1743602695584_1020, var_1743602695584_1690, [UInt16(63), UInt16(174),
                        var_1743602695584_1696, UInt16(148), var_1743602695584_1700, var_1743602695584_1700,
                        var_1743602695584_1700, UInt16(229), UInt16(57), UInt16(251)]);
                var_1743602695584_259
        }) {
            case _: (Rune, Option<Bool>, Bool, Array<Array<UInt16>>, UInt8, Range<Int32>, (UInt32, (Range<Int8>, Int8, 
                    Bool), VArray<Int64, $5>, Array<Bool>)) =>
                ();
                Float32(-2.0) < Float32(36.0)

            case -53.0 =>
                var_1743602695584_1720;
                var var_1743602695584_1726: Unit = ();
                var_1743602695584_1726;
                var_1743602695584_1463

            case -125.0 | 43.0 | -39.0 | -20.0 => false

            case 42.0 =>
                var var_1743602695584_1737: Range<Int64> = ((Int64(Int64(UInt16(145))) & 127)..(Int64(Int64(UInt8(207))) &
                    127) : (Int64(UInt8(121)) | 1));
                var_1743602695584_1737;
                var_1743602695584_1746

            case _ => false
        }
    }
}

public open class Class_1743602695584_291 <: Interface_1743602695584_294 & Interface_1743602695584_297 & Resource {
    @Frozen
    public init() { // block id: 293

    }

    let var_1743602695584_303: ?Bool = Option<Bool>.None;
    public var var_1743602695584_1369: (Array<UInt64>, Float64, Option<Range<Int32>>, Option<Array<Array<UInt16>>>, 
        Option<Int64>) = ([UInt64(239), UInt64(249), UInt64(49), UInt64(215), UInt64(58), UInt64(41), UInt64(61),
            UInt64(236), UInt64(123), UInt64(245)], Float64(-70.0), Option<Range<Int32>>.None, Option<Array<Array<UInt16>>>
            .None, Option<Int64>.None);
    protected mut prop var_1743602695584_1429: ?Bool { // block id: 1430
        get() { // block id: 1432
            ();
            (true as Bool)
        }
        set(Value) { // block id: 1438

        }
    }
    public open override func func_1743602695584_397(param_1743602695584_398: (Float32) -> UInt8): Bool { // block id: 954
        var var_1743602695584_996: Option<Unit> = (Option<Range<Int32>>.Some(
            ((Int32(Int32(-84)) & 127)..(Int32(Int32(-96)) & 127) : (Int64(115) | 1))) as Unit);
        (if (var_1743602695584_959[2]) {
            var_1743602695584_996
        } else {
            (UInt64(118), var_1743602695584_996, var_1743602695584_303, [UInt16(85), UInt16(217), UInt16(15), UInt16(8),
                    UInt16(19), UInt16(112), UInt16(11), UInt16(191), UInt16(235), UInt16(75)])[1]
        } ?? (try { // block id: 1010
            var_1743602695584_1013 /= ((UInt32(54)) | 1)
            if (false) {
                var_1743602695584_1020
            } else {
                Option<Unit>.None
            }
        } finally { // block id: 1024
            var_1743602695584_385;
            Option<Unit>.None
        } ?? var_1743602695584_1030[4]));
        try { // block id: 1167
            var var_1743602695584_1175: (Rune, Option<Bool>, Bool, Array<Array<UInt16>>, UInt8, Range<Int32>, (UInt32, (Range<Int8>, 
                Int8, Bool), VArray<Int64, $5>, Array<Bool>)) = (r'O', (VArray<Int64, $5>({i => Int64(-67)}) as Bool),
                true, [[UInt16(96), UInt16(125), UInt16(114), UInt16(164), UInt16(248), UInt16(225), UInt16(29),
                    UInt16(35), UInt16(94), UInt16(188)],
                    [UInt16(47), UInt16(28), UInt16(126), UInt16(66), UInt16(119), UInt16(91), UInt16(7), UInt16(152),
                    UInt16(206), UInt16(151)],
                    [UInt16(143), UInt16(37), UInt16(116), UInt16(108), UInt16(204), UInt16(24), UInt16(45), UInt16(59),
                    UInt16(154), UInt16(196)],
                    [UInt16(136), UInt16(50), UInt16(183), UInt16(56), UInt16(174), UInt16(117), UInt16(161), UInt16(93),
                    UInt16(200), UInt16(59)],
                    [UInt16(152), UInt16(186), UInt16(223), UInt16(189), UInt16(171), UInt16(252), UInt16(35),
                    UInt16(33), UInt16(80), UInt16(169)],
                    [UInt16(72), UInt16(206), UInt16(141), UInt16(183), UInt16(225), UInt16(210), UInt16(137),
                    UInt16(124), UInt16(184), UInt16(106)],
                    [UInt16(133), UInt16(122), UInt16(78), UInt16(24), UInt16(121), UInt16(64), UInt16(30), UInt16(25),
                    UInt16(3), UInt16(145)],
                    [UInt16(51), UInt16(13), UInt16(95), UInt16(136), UInt16(247), UInt16(118), UInt16(26), UInt16(41),
                    UInt16(53), UInt16(76)],
                    [UInt16(54), UInt16(10), UInt16(32), UInt16(144), UInt16(146), UInt16(196), UInt16(43), UInt16(39),
                    UInt16(181), UInt16(74)],
                    [UInt16(131), UInt16(61), UInt16(244), UInt16(226), UInt16(36), UInt16(83), UInt16(135), UInt16(36),
                    UInt16(154), UInt16(94)]], UInt8(UInt8(Int8(Int8(25)))), ((Int32(Int32(74)) & 127)..=(Int32(Int32(-67)) &
                    127) : (Int64(-3) | 1)), (UInt32(Int16(Int8(-9))), (((Int8(Int8(-13)) & 127)..=(Int8(Int8(-126)) &
                            127) : (Int64(100) | 1)), Int8(Int8(25)), true), VArray<Int64, $5>(repeat: Int64(Int8(-127))),
                    [false,
                        ((UInt32(227), (((Int8(Int8(88)) & 127)..=(Int8(Int8(-12)) & 127) : (Int64(-107) | 1)), Int8(110),
                            true), VArray<Int64, $5>({i => Int64(117)}), [true, false, true, true, true, true, true,
                            true, true, false]) is Bool), true,
                        ((((Int8(Int8(29)) & 127)..=(Int8(Int8(-76)) & 127) : (Int64(-90) | 1)), Int8(-5), false) is Int16),
                        (Int64(-45) is (UInt16) -> Unit), true, true, (Int64(119) is VArray<Bool, $1>), true,
                        ([[UInt16(159), UInt16(25), UInt16(96), UInt16(253), UInt16(32), UInt16(238), UInt16(202),
                        UInt16(184), UInt16(235), UInt16(112)],
                        [UInt16(68), UInt16(140), UInt16(65), UInt16(0), UInt16(31), UInt16(123), UInt16(206),
                        UInt16(49), UInt16(29), UInt16(223)],
                        [UInt16(129), UInt16(108), UInt16(140), UInt16(130), UInt16(240), UInt16(204), UInt16(86),
                        UInt16(183), UInt16(10), UInt16(176)],
                        [UInt16(152), UInt16(154), UInt16(3), UInt16(92), UInt16(46), UInt16(111), UInt16(230),
                        UInt16(175), UInt16(90), UInt16(210)],
                        [UInt16(150), UInt16(77), UInt16(50), UInt16(133), UInt16(39), UInt16(73), UInt16(164),
                        UInt16(251), UInt16(76), UInt16(252)],
                        [UInt16(71), UInt16(242), UInt16(236), UInt16(74), UInt16(80), UInt16(161), UInt16(169),
                        UInt16(226), UInt16(89), UInt16(159)],
                        [UInt16(141), UInt16(186), UInt16(61), UInt16(38), UInt16(60), UInt16(28), UInt16(207),
                        UInt16(165), UInt16(29), UInt16(232)],
                        [UInt16(230), UInt16(61), UInt16(168), UInt16(201), UInt16(211), UInt16(144), UInt16(20),
                        UInt16(177), UInt16(241), UInt16(111)],
                        [UInt16(107), UInt16(5), UInt16(193), UInt16(174), UInt16(209), UInt16(48), UInt16(84),
                        UInt16(97), UInt16(137), UInt16(128)],
                        [UInt16(145), UInt16(250), UInt16(241), UInt16(177), UInt16(73), UInt16(208), UInt16(214),
                        UInt16(1), UInt16(253), UInt16(180)]] is Enum_1743602695584_621)]));
            (Option<(Rune, Option<Bool>, Bool, Array<Array<UInt16>>, UInt8, Range<Int32>, (UInt32, (Range<Int8>, Int8, 
                    Bool), VArray<Int64, $5>, Array<Bool>))>.None ?? var_1743602695584_1175);
            let var_1743602695584_1329: (Array<UInt64>, Float64, Option<Range<Int32>>, Option<Array<Array<UInt16>>>, 
                Option<Int64>) = ([UInt64(233), UInt64(138), UInt64(117), UInt64(87), UInt64(61), UInt64(151),
                    UInt64(143), UInt64(225), UInt64(181), UInt64(5)], Float64(-40.0), (Int16(UInt8(228)) as Range<Int32>),
                Option<Array<Array<UInt16>>>.None, Option<Int64>.None);
            try { // block id: 1327
                var_1743602695584_1329
            } finally { // block id: 1338
                var_1743602695584_385;
                ();
                let var_1743602695584_1358: ?Range<Int32> = Option<Range<Int32>>.None;
                var var_1743602695584_1364: Int64 = Int64(UInt16(251));
                ([var_1743602695584_1344, var_1743602695584_1344, var_1743602695584_1344, UInt64(235), UInt64(242),
                        UInt64(127), UInt64(175), var_1743602695584_1344, var_1743602695584_1344, var_1743602695584_1344],
                    var_1743602695584_423, var_1743602695584_1358, Option<Array<Array<UInt16>>>.Some(
                        [[UInt16(70), UInt16(205), UInt16(180), UInt16(105), UInt16(38), UInt16(62), UInt16(201),
                            UInt16(136), UInt16(109), UInt16(48)],
                            [UInt16(85), UInt16(38), UInt16(179), UInt16(36), UInt16(104), UInt16(247), UInt16(195),
                            UInt16(105), UInt16(37), UInt16(41)],
                            [UInt16(249), UInt16(47), UInt16(253), UInt16(190), UInt16(163), UInt16(140), UInt16(92),
                            UInt16(108), UInt16(145), UInt16(136)],
                            [UInt16(208), UInt16(162), UInt16(21), UInt16(168), UInt16(247), UInt16(226), UInt16(189),
                            UInt16(141), UInt16(98), UInt16(243)],
                            [UInt16(85), UInt16(241), UInt16(253), UInt16(57), UInt16(245), UInt16(150), UInt16(238),
                            UInt16(170), UInt16(112), UInt16(82)],
                            [UInt16(100), UInt16(59), UInt16(232), UInt16(96), UInt16(148), UInt16(137), UInt16(203),
                            UInt16(114), UInt16(242), UInt16(25)],
                            [UInt16(60), UInt16(113), UInt16(136), UInt16(239), UInt16(47), UInt16(149), UInt16(23),
                            UInt16(86), UInt16(10), UInt16(74)],
                            [UInt16(95), UInt16(105), UInt16(159), UInt16(183), UInt16(186), UInt16(35), UInt16(9),
                            UInt16(227), UInt16(120), UInt16(238)],
                            [UInt16(100), UInt16(205), UInt16(201), UInt16(212), UInt16(145), UInt16(155), UInt16(207),
                            UInt16(196), UInt16(192), UInt16(11)],
                            [UInt16(20), UInt16(166), UInt16(239), UInt16(26), UInt16(69), UInt16(194), UInt16(102),
                            UInt16(165), UInt16(72), UInt16(13)]]), Option<Int64>.Some(var_1743602695584_1364))
            }
        } catch (e: Exception) { // block id: 1367
            var_1743602695584_1369
        } finally { // block id: 1386
            (Option<(Array<UInt64>, Float64, Option<Range<Int32>>, Option<Array<Array<UInt16>>>, Option<Int64>)>.None ??
                var_1743602695584_1369)
        };
        try { // block id: 1395
            (((Int16(Int16(89)) & 127)..(Int16(Int16(53)) & 127) : (Int64(78) | 1)) is Interface_1743602695584_295<UInt8>)
        } catch (e: Exception) { // block id: 1398
            (var_1743602695584_1020 ?? var_1743602695584_15);
            var loopTimeVar_1743602695584_1406: Array<UInt64> = [UInt64(Int16(Int16(-11))), UInt64(138),
                UInt64(Int32(85)), UInt64(UInt8(22)), UInt64(Int32(-17)), UInt64(UInt8(151)), UInt64(23),
                UInt64(Int32(UInt16(24))), UInt64(21), UInt64(Int64(-2))];
            for (i in loopTimeVar_1743602695584_1406 where var_1743602695584_318) {
                var_1743602695584_423
            };
            (var_1743602695584_1429 ?? var_1743602695584_318)
        }
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

@Frozen
@Deprecated
public func func_1743602695584_222(param_1743602695584_223: Range<UInt8>): Bool { // block id: 224
    var var_1743602695584_281: UInt16 = UInt16(102);
    (Option<UInt16>.Some(UInt16(247)) ?? UInt16(73)) ^ (var_1743602695584_281 >> ((var_1743602695584_281) & 7)) |>
        func_1743602695584_226;
    var var_1743602695584_300: Class_1743602695584_291 = Class_1743602695584_291();
    const var_1743602695584_331: Int16 = -38;
    var loopTimeVar_1743602695584_341: Int64 = 0;
    while (((var_1743602695584_300.var_1743602695584_303 ?? (((Int8(Int8(124)) & 127)..(Int8(Int8(48)) & 127) : (Int64(-88) |
                1)), var_1743602695584_310, false)[2])) && loopTimeVar_1743602695584_341 < 100) {
        loopTimeVar_1743602695584_341++;
        if (var_1743602695584_318) { // block id: 320
            Class_1743602695584_291();
            var_1743602695584_323;
            ((UInt8(UInt8(107)) & 127)..(UInt8(UInt8(146)) & 127) : (Int64(-71) | 1))
        } else { // block id: 329
            var_1743602695584_331;
            ((UInt8(UInt8(207)) & 127)..=(UInt8(UInt8(156)) & 127) : (var_1743602695584_252 | 1))
        };
        [(), (), (), (), (), (), (), (), (), ()][5]
    };
    ((Option<Array<Array<UInt16>>>.Some(
        [[UInt16(53), UInt16(36), UInt16(130), UInt16(6), UInt16(186), UInt16(67), UInt16(157), UInt16(190), UInt16(11),
            UInt16(3)],
            [UInt16(21), UInt16(133), UInt16(66), UInt16(154), UInt16(97), UInt16(64), UInt16(145), UInt16(156),
            UInt16(142), UInt16(69)],
            [UInt16(252), UInt16(166), UInt16(59), UInt16(66), UInt16(211), UInt16(63), UInt16(82), UInt16(90),
            UInt16(196), UInt16(148)],
            [UInt16(36), UInt16(106), UInt16(251), UInt16(231), UInt16(106), UInt16(37), UInt16(103), UInt16(55),
            UInt16(10), UInt16(242)],
            [UInt16(39), UInt16(249), UInt16(114), UInt16(246), UInt16(85), UInt16(105), UInt16(151), UInt16(70),
            UInt16(243), UInt16(72)],
            [UInt16(223), UInt16(117), UInt16(253), UInt16(99), UInt16(140), UInt16(107), UInt16(115), UInt16(178),
            UInt16(190), UInt16(120)],
            [UInt16(105), UInt16(145), UInt16(131), UInt16(48), UInt16(167), UInt16(54), UInt16(235), UInt16(50),
            UInt16(253), UInt16(178)],
            [UInt16(248), UInt16(71), UInt16(63), UInt16(11), UInt16(73), UInt16(169), UInt16(250), UInt16(25),
            UInt16(104), UInt16(129)],
            [UInt16(231), UInt16(22), UInt16(171), UInt16(244), UInt16(187), UInt16(169), UInt16(159), UInt16(129),
            UInt16(167), UInt16(206)],
            [UInt16(46), UInt16(0), UInt16(134), UInt16(182), UInt16(84), UInt16(105), UInt16(171), UInt16(64),
            UInt16(47), UInt16(8)]]) ?? (Option<Array<Array<UInt16>>>.None ?? [[UInt16(126), UInt16(17), UInt16(43),
        UInt16(109), UInt16(58), UInt16(216), UInt16(46), UInt16(232), UInt16(39), UInt16(123)],
        [UInt16(175), UInt16(136), UInt16(90), UInt16(160), UInt16(138), UInt16(17), UInt16(179), UInt16(143),
        UInt16(201), UInt16(96)],
        [UInt16(65), UInt16(68), UInt16(252), UInt16(196), UInt16(216), UInt16(38), UInt16(84), UInt16(61), UInt16(200),
        UInt16(209)],
        [UInt16(81), UInt16(108), UInt16(66), UInt16(252), UInt16(250), UInt16(171), UInt16(201), UInt16(248),
        UInt16(112), UInt16(210)],
        [UInt16(51), UInt16(150), UInt16(106), UInt16(150), UInt16(36), UInt16(80), UInt16(178), UInt16(164), UInt16(76),
        UInt16(52)],
        [UInt16(110), UInt16(59), UInt16(130), UInt16(227), UInt16(221), UInt16(220), UInt16(44), UInt16(69),
        UInt16(123), UInt16(110)],
        [UInt16(26), UInt16(75), UInt16(151), UInt16(40), UInt16(141), UInt16(31), UInt16(10), UInt16(9), UInt16(69),
        UInt16(63)],
        [UInt16(91), UInt16(133), UInt16(152), UInt16(246), UInt16(231), UInt16(143), UInt16(44), UInt16(175),
        UInt16(12), UInt16(52)],
        [UInt16(181), UInt16(137), UInt16(138), UInt16(140), UInt16(37), UInt16(152), UInt16(251), UInt16(151),
        UInt16(165), UInt16(54)],
        [UInt16(105), UInt16(182), UInt16(118), UInt16(160), UInt16(244), UInt16(131), UInt16(120), UInt16(247),
        UInt16(154), UInt16(199)]])) is (UInt16) -> Unit)
}

public func func_1743602695584_57(optionalParam_1743602695584_58!: (Int16) -> Float64 = func_1743602695584_19,
    namedParam_1743602695584_62!: Range<Int64>, namedParam_1743602695584_63!: Int32,
    optionalParam_1743602695584_64!: Range<Int8> = ((Int8(Int8(-118)) & 127)..=(Int8(Int8(64)) & 127) : (Int64(31) | 1))): Option<Range<Int32>> { // block id: 66
    func_1743602695584_9(namedParam_1743602695584_12: UInt16((Int16(-64) % ((Int16(-79)) | 1))));
    var var_1743602695584_444: (Int16) -> Float64 = func_1743602695584_19;
    let var_1743602695584_462: UInt64 = UInt64(236);
    try { // block id: 73
        (var_1743602695584_80 ?? Int64(-64));
        let var_1743602695584_104: Option<Array<Bool>> = (Int16(78) as Array<Bool>);
        let var_1743602695584_122: Range<UInt64> = ((UInt64(UInt64(28)) & 127)..(UInt64(UInt64(UInt8(UInt8(198)))) & 127) : (Int64(UInt32(118)) |
            1));
        const var_1743602695584_366: Bool = true;
        const var_1743602695584_372: UInt64 = 27;
        let var_1743602695584_404: (Float32) -> UInt8 = func_1743602695584_244;
        func func_1743602695584_157(): Option<Range<Int32>> { // block id: 158
            const var_1743602695584_187: Byte = 202;
            let var_1743602695584_200: VArray<UInt8, $1> = [UInt8(194)];
            (Option<UInt8>.None ?? match (Option<UInt8>.None) {
                case caseVar_1743602695584_171: Bool =>
                    let var_1743602695584_174: Rune = r'n';
                    var_1743602695584_174;
                    var var_1743602695584_178: Bool = (((Int8(Int8(37)) & 127)..(Int8(Int8(Int8(23))) & 127) : (Int64(114) |
                        1)) is Array<Unit>);
                    const var_1743602695584_191: Byte = 2;
                    if (var_1743602695584_178) {
                        VArray<UInt8, $1>(repeat: var_1743602695584_187)
                    } else {
                        VArray<UInt8, $1>(repeat: var_1743602695584_191)
                    }

                case caseVar_1743602695584_195 =>
                    if (true) {
                        var_1743602695584_200
                    } else {
                        VArray<UInt8, $1>(repeat: var_1743602695584_187)
                    }

                case _: Array<UInt16> => VArray<UInt8, $1>(repeat: var_1743602695584_187)

                case _ =>
                    ();
                    ();
                    if (false) {
                        var_1743602695584_200
                    } else {
                        var_1743602695584_200
                    }
            }[0]);
            let var_1743602695584_354: (Range<UInt8>) -> Bool = func_1743602695584_222;
            const var_1743602695584_359: Byte = 91;
            ([(((UInt8(var_1743602695584_323) & 127)..(UInt8(var_1743602695584_359) & 127) : (Int64(-8) | 1)) |>
                var_1743602695584_354), (Option<Bool>.Some(true) ?? var_1743602695584_366), try { // block id: 369
                var_1743602695584_372 <= UInt64(196)
            } catch (_) { // block id: 375
                if (false) {
                    [(), (), (), (), (), (), (), (), (), ()]
                } else {
                    [(), (), (), (), (), (), (), (), (), ()]
                };
                ();
                true
            } finally { // block id: 382
                [false, false, false, true, false, true, false, false, false, true];
                var_1743602695584_385;
                var_1743602695584_366
            }, true, true || false, var_1743602695584_394.func_1743602695584_397(var_1743602695584_404),
                var_1743602695584_408.getOrThrow(), var_1743602695584_318,
                VArray<Bool, $1>(repeat: var_1743602695584_318)[0], match (Class_1743602695584_291()) {
                case caseVar_1743602695584_420: Array<Unit> =>
                    var_1743602695584_423;
                    false

                case caseVar_1743602695584_428: Rune => var_1743602695584_366

                case _: UInt64 => false

                case _ =>
                    var_1743602695584_385;
                    true && true
            }] as Range<Int32>)
        };

        func func_1743602695584_89(namedParam_1743602695584_90!: Int32, namedParam_1743602695584_91!: (Int16) -> Float64): Option<Range<Int32>> { // block id: 94
            var loopTimeVar_1743602695584_155: Int64 = 0;
            while ((var_1743602695584_104.getOrThrow()[5]) && loopTimeVar_1743602695584_155 < 100) {
                loopTimeVar_1743602695584_155++;
                let var_1743602695584_113: Range<Int8> = ((Int8(Int8(Int8(13))) & 127)..=(Int8(Int8(-82)) & 127) : (Int64(121) |
                    1));
                (var_1743602695584_113, (), var_1743602695584_15, var_1743602695584_122, Option<Range<Int32>>.Some(
                        var_1743602695584_132))[2];
                var_1743602695584_141[4]
            };
            func_1743602695584_157()
        };

        func_1743602695584_89(namedParam_1743602695584_90: Int32(-27),
            namedParam_1743602695584_91: var_1743602695584_444)
    } finally { // block id: 446
        var loopTimeVar_1743602695584_455: Int = 0;
        while ((var_1743602695584_318) && loopTimeVar_1743602695584_455 < 100) {
            loopTimeVar_1743602695584_455++;
            var_1743602695584_451
        };
        ();
        var var_1743602695584_479: Array<Array<UInt16>> = [[UInt16(104), UInt16(149), UInt16(70), UInt16(106),
            UInt16(239), UInt16(2), UInt16(68), UInt16(46), UInt16(229), UInt16(68)],
            [UInt16(109), UInt16(Int8(4)), UInt16(Int16(-74)), UInt16(218), UInt16(31), UInt16(Int16(-6)), UInt16(149),
            UInt16(246), UInt16(217), UInt16(UInt16(196))],
            [UInt16(24), UInt16(UInt8(UInt8(228))), UInt16(215), UInt16(UInt16(Int16(-56))), UInt16(Int16(-14)),
            UInt16(Int16(UInt8(172))), UInt16(82), UInt16(174), UInt16(68), UInt16(Int16(38))],
            [UInt16(31), UInt16(213), UInt16(194), UInt16(86), UInt16(83), UInt16(120), UInt16(51), UInt16(166),
            UInt16(24), UInt16(67)],
            [UInt16(132), UInt16(UInt8(UInt8(204))), UInt16(Int8(11)), UInt16(UInt16(Int16(38))), UInt16(91),
            UInt16(200), UInt16(Int8(Int8(-104))), UInt16(Int16(UInt16(52))), UInt16(Int16(UInt16(155))), UInt16(227)],
            [UInt16(Int16(Int16(16))), UInt16(53), UInt16(Int16(80)), UInt16(Int8(-113)), UInt16(183), UInt16(Int16(70)),
            UInt16(198), UInt16(Int16(-122)), UInt16(204), UInt16(UInt16(157))],
            [UInt16(125), UInt16(12), UInt16(Int16(-102)), UInt16(UInt8(52)), UInt16(82), UInt16(219), UInt16(173),
            UInt16(Int16(UInt8(141))), UInt16(84), UInt16(22)],
            [UInt16(225), UInt16(49), UInt16(193), UInt16(84), UInt16(51), UInt16(239), UInt16(14), UInt16(231),
            UInt16(202), UInt16(68)],
            [UInt16(107), UInt16(Int16(-19)), UInt16(Int8(-53)), UInt16(UInt16(UInt8(235))), UInt16(160), UInt16(238),
            UInt16(159), UInt16(69), UInt16(174), UInt16(Int8(UInt8(114)))],
            [UInt16(237), UInt16(Int8(UInt8(179))), UInt16(Int16(86)), UInt16(32), UInt16(Int16(UInt8(189))),
            UInt16(UInt16(Int16(-53))), UInt16(UInt8(159)), UInt16(UInt16(Int8(88))), UInt16(UInt8(Int8(-62))),
            UInt16(Int8(-36))]];
        ([var_1743602695584_462, var_1743602695584_462, var_1743602695584_462, var_1743602695584_462, UInt64(197),
                UInt64(119), var_1743602695584_462, UInt64(170), UInt64(80), var_1743602695584_462],
            var_1743602695584_423, var_1743602695584_475, Option<Array<Array<UInt16>>>.Some(var_1743602695584_479),
            Option<Int64>.Some(Int64(25)))[2]
    }
}

public enum Enum_1743602695584_621 {
    defaultValue
    | enumValue_1743602695584_632(((Int16) -> Float64, Range<Int64>, Int32, Range<Int8>) -> Option<Range<Int32>>)
}

public open class Class_1743602695584_686 {
    @Frozen
    public init() { // block id: 688

    }

    public var var_1743602695584_693: Interface_1743602695584_298 = Class_1743602695584_291()
    static init() {
    }
}

public func func_1743602695584_53<T0, T1>(param_1743602695584_54: Array<UInt16>): Option<Range<Int32>> { // block id: 55
    var var_1743602695584_618: (Int16) -> Float64 = func_1743602695584_19;
    var var_1743602695584_630: Enum_1743602695584_621 = Enum_1743602695584_621.enumValue_1743602695584_632(
        func_1743602695584_57);
    let var_1743602695584_676: (Range<Int64>, Interface_1743602695584_297, Option<Range<Int32>>, Array<Bool>, Int32) = (((Int64(Int64(-56)) &
            127)..=(Int64(Int64(-7)) & 127) : (Int64(13) | 1)), Class_1743602695584_291(), Option<Range<Int32>>.None, [true,
            true, true, true, false, true, false, false, true, false], Int32(39));
    let var_1743602695584_690: Class_1743602695584_686 = Class_1743602695584_686();
    func_1743602695584_57(optionalParam_1743602695584_58: var_1743602695584_618,
        namedParam_1743602695584_62: match ((Option<Enum_1743602695584_621>.None ?? var_1743602695584_630)) {
            case _ => ((Int64(Int64(-80)) & 127)..=(Int64(Int64(-33)) & 127) : (Int64(42) | 1))

            case enumValue_1743602695584_632(_: Option<Array<Bool>>) =>
                var_1743602695584_653;
                Class_1743602695584_291();
                if (false) {
                    ((Int64(var_1743602695584_660) & 127)..=(Int64(Int64(117)) & 127) : (Int64(-31) | 1))
                } else {
                    ((Int64(Int64(8)) & 127)..(Int64(Int64(102)) & 127) : (Int64(-89) | 1))
                }

            case _ => ((Int64(Int64(31)) & 127)..=(Int64(Int64(123)) & 127) : (Int64(108) | 1))
        }, namedParam_1743602695584_63: Int32(var_1743602695584_676[4]),
        optionalParam_1743602695584_64: match (var_1743602695584_690.var_1743602695584_693) {
            case caseVar_1743602695584_697: Enum_1743602695584_621 =>
                ((Int64(var_1743602695584_660) & 127)..=(Int64(Int64(-82)) & 127) : (var_1743602695584_660 | 1));
                ((Int8(var_1743602695584_310) & 127)..=(Int8(var_1743602695584_310) & 127) : (var_1743602695584_660 | 1))

            case caseVar_1743602695584_709: Range<Int16> => ((Int8(var_1743602695584_310) & 127)..=(Int8(var_1743602695584_310) &
                127) : (var_1743602695584_660 | 1))

            case _ =>
                var_1743602695584_720++;
                ((Int8(var_1743602695584_310) & 127)..(Int8(Int8(-69)) & 127) : (Int64(-116) | 1))

            case caseVar_1743602695584_729: Range<Int8> =>
                var_1743602695584_15;
                var_1743602695584_733

            case _ => var_1743602695584_733
        })
}

main(): Int64 {
    try {
        var var_1743602695584_24: (Int16) -> Float64 = func_1743602695584_19;
        var var_1743602695584_28: UInt8 = UInt8(UInt8(150));
        func_1743602695584_9(optionalParam_1743602695584_10: (Int16(var_1743602695584_28) |> var_1743602695584_24),
            namedParam_1743602695584_12: [[UInt16(136), UInt16(96), UInt16(185), UInt16(211), UInt16(191), UInt16(200),
                UInt16(186), UInt16(138), UInt16(162), UInt16(51)],
                [UInt16(122), UInt16(125), UInt16(178), UInt16(253), UInt16(143), UInt16(25), UInt16(120), UInt16(95),
                UInt16(40), UInt16(243)],
                [UInt16(222), UInt16(223), UInt16(245), UInt16(4), UInt16(10), UInt16(122), UInt16(6), UInt16(164),
                UInt16(186), UInt16(114)],
                [UInt16(13), UInt16(161), UInt16(19), UInt16(104), UInt16(141), UInt16(186), UInt16(52), UInt16(186),
                UInt16(214), UInt16(54)],
                [UInt16(218), UInt16(219), UInt16(38), UInt16(183), UInt16(183), UInt16(122), UInt16(21), UInt16(249),
                UInt16(222), UInt16(206)],
                [UInt16(194), UInt16(115), UInt16(181), UInt16(70), UInt16(47), UInt16(129), UInt16(159), UInt16(67),
                UInt16(98), UInt16(126)],
                [UInt16(93), UInt16(92), UInt16(175), UInt16(249), UInt16(105), UInt16(142), UInt16(112), UInt16(61),
                UInt16(103), UInt16(239)],
                [UInt16(110), UInt16(95), UInt16(237), UInt16(158), UInt16(197), UInt16(198), UInt16(162), UInt16(176),
                UInt16(194), UInt16(223)],
                [UInt16(46), UInt16(173), UInt16(184), UInt16(157), UInt16(59), UInt16(214), UInt16(191), UInt16(7),
                UInt16(187), UInt16(50)],
                [UInt16(240), UInt16(161), UInt16(227), UInt16(148), UInt16(79), UInt16(103), UInt16(121), UInt16(128),
                UInt16(125), UInt16(220)]][4][2]);
        let var_1743602695584_740: (Array<UInt16>) -> Option<Range<Int32>> = func_1743602695584_53<Interface_1743602695584_296, UInt64>;
        let var_1743602695584_752: (Range<Int32>, Class_1743602695584_686, UInt16) = (((Int32(Int32(-15)) & 127)..(Int32(Int32(111)) &
                127) : (Int64(-51) | 1)), Class_1743602695584_686(), UInt16(Int8(-40)));
        (([UInt16(245), UInt16(86), UInt16(45), UInt16(116), UInt16(8), UInt16(221), UInt16(180), UInt16(187),
            UInt16(149), UInt16(133)] |> var_1743602695584_740) ?? if (true) {
            ((Int32(Int32(111)) & 127)..=(Int32(Int32(52)) & 127) : (var_1743602695584_660 | 1))
        } else {
            var_1743602695584_752[0]
        });
        const var_1743602695584_800: Bool = false;
        (var_1743602695584_769 ?? (var_1743602695584_720, var_1743602695584_774, var_1743602695584_785, [false, false,
                true, true, var_1743602695584_800, var_1743602695584_800, false, true, true, true]))[2][1]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1743602695584_28 * var_1743602695584_28), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1743602695584_686 {}
