/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) EXEC-PIPE-1: %compiler %overflow_wrapping %cmp_opt %f 2>&1 | compare %f

// ASSERT: scan-4 sema_varray_cjvm_in_ref_type

public var var_1693261939788_26 : ?Option<Option<Unit>> = (Option<Unit>.None as Option<Option<Unit>>)
let var_1693261939788_60 : ?Unit = (([Option<Unit>.None, (Int64(-114) as Unit), (Option<Unit>.None as Unit), Option<Unit>.None, (Float32(103.0) as Unit), Option<Unit>.None, (Int8(85) as Unit), (Option<Option<Unit>>.None as Unit), (((UInt32(UInt32(27))&127)..(UInt32(UInt32(137))&127):(Int64(-126)|1)) as Unit), ([Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None] as Unit)] as Unit) as Unit)
let var_1693261939788_115 : (Int32, Int64, Range<Int8>, Range<UInt64>, Unit, UInt8, Array<UInt64>, Int32, String) = (Int32(UInt32(131)), Int64(-83), ((Int8(Int8(-65))&127)..(Int8(Int8(24))&127):(Int64(81)|1)), ((UInt64(UInt64(Int64(50)))&127)..(UInt64(UInt64(Int64(-8)))&127):(Int64(Int64(UInt16(8)))|1)), (), UInt8(246), [UInt64(249), UInt64(72), UInt64(248), UInt64(134), UInt64(143), UInt64(37), UInt64(186), UInt64(36), UInt64(19), UInt64(191)], Int32(UInt16(UInt8(Int8(-94)))), ###"g~EA229.tJ"###)
public let var_1693261939788_182 : UInt = UInt64(Int8(UInt8(135)))
public let var_1693261939788_231 : (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>) = (((Int64(Int64(Int32(91)))&127)..(Int64(Int64(Int16(Int16(11))))&127):(Int64(Int64(-7))|1)), Int32(123), ((r'9' is Rune), ((Int64(Int64(Int32(-43)))&127)..=(Int64(Int64(99))&127):(Int64(85)|1))), ((UInt64(UInt64(218))&127)..(UInt64(UInt64(199))&127):(Int64(-3)|1)), (Enum_1693261939788_220<Range<Int8>, Float32>.defaultValue is Bool), UInt16(Int16(-97)), (Option<Option<Option<Unit>>>.None is UInt8), (), ((UInt16(UInt16(15))&127)..(UInt16(UInt16(160))&127):(Int64(-117)|1)))
public var var_1693261939788_279 : Range<UInt32> = ((UInt32(UInt32(63))&127)..=(UInt32(UInt32(UInt16(42)))&127):(Int64(Int8(Int8(22)))|1))
public let var_1693261939788_359 : Class_1693261939788_355 = Class_1693261939788_355()
let var_1693261939788_371 : Struct_1693261939788_105 = Struct_1693261939788_105()
var var_1693261939788_521 : Int16 = Int16(Int8(UInt8(UInt8(230))))
var var_1693261939788_560 : ((Range<UInt64>, Float64, Unit, Bool, Range<UInt32>, Unit, Rune, Array<UInt64>, (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>)), Int64, Range<Int32>, Int16, Array<Range<Int8>>) = ((((UInt64(UInt64(Int64(-93)))&127)..(UInt64(UInt64(UInt64(32)))&127):(Int64(10)|1)), Float64(-88.0), (), ((((Int64(Int64(-113))&127)..(Int64(Int64(-15))&127):(Int64(-54)|1)), Int32(0), (false, ((Int64(Int64(-28))&127)..(Int64(Int64(-46))&127):(Int64(-64)|1))), ((UInt64(UInt64(172))&127)..(UInt64(UInt64(15))&127):(Int64(5)|1)), false, UInt16(26), false, (), ((UInt16(UInt16(228))&127)..(UInt16(UInt16(222))&127):(Int64(-118)|1))) is Option<Option<Unit>>), ((UInt32(UInt32(242))&127)..(UInt32(UInt32(Int8(-49)))&127):(Int64(Int16(43))|1)), (), r't', [UInt64(UInt8(149)), UInt64(UInt8(53)), UInt64(252), UInt64(17), UInt64(4), UInt64(UInt64(127)), UInt64(253), UInt64(237), UInt64(UInt8(111)), UInt64(Int32(41))], (((Int64(Int64(-114))&127)..=(Int64(Int64(-66))&127):(Int64(4)|1)), Int32(UInt16(46)), (false, ((Int64(Int64(9))&127)..(Int64(Int64(-54))&127):(Int64(68)|1))), ((UInt64(UInt64(244))&127)..=(UInt64(UInt64(77))&127):(Int64(-120)|1)), (UInt32(34) is Int16), UInt16(60), true, (), ((UInt16(UInt16(232))&127)..(UInt16(UInt16(3))&127):(Int64(-114)|1)))), Int64(-1), ((Int32(Int32(119))&127)..(Int32(Int32(Int8(81)))&127):(Int64(18)|1)), Int16(-11), [((Int8(Int8(105))&127)..(Int8(Int8(-81))&127):(Int64(-17)|1)), ((Int8(Int8(-53))&127)..=(Int8(Int8(-20))&127):(Int64(21)|1)), ((Int8(Int8(-125))&127)..=(Int8(Int8(-48))&127):(Int64(94)|1)), ((Int8(Int8(36))&127)..(Int8(Int8(-35))&127):(Int64(-27)|1)), ((Int8(Int8(-41))&127)..=(Int8(Int8(-44))&127):(Int64(98)|1)), ((Int8(Int8(-91))&127)..=(Int8(Int8(-9))&127):(Int64(-46)|1)), ((Int8(Int8(109))&127)..=(Int8(Int8(-100))&127):(Int64(-50)|1)), ((Int8(Int8(-8))&127)..(Int8(Int8(29))&127):(Int64(17)|1)), ((Int8(Int8(-58))&127)..(Int8(Int8(-122))&127):(Int64(26)|1)), ((Int8(Int8(-72))&127)..=(Int8(Int8(99))&127):(Int64(-88)|1))])
let var_1693261939788_647 : UInt8 = UInt8(Int8(114))
public const var_1693261939788_651 : Int64 = 19
public var var_1693261939788_667 : Enum_1693261939788_220<Range<Int8>, Float32> = Enum_1693261939788_220<Range<Int8>, Float32>.defaultValue
let var_1693261939788_779 : Range<UInt16> = ((UInt16(UInt16(70))&127)..(UInt16(UInt16(84))&127):(Int64(11)|1))
public const var_1693261939788_800 : Int8 = 2
public const var_1693261939788_832 : Float32 = 76.0
public let var_1693261939788_839 : Option<Unit> = Option<Unit>.None
public var var_1693261939788_910 : Int8 = Int8(-32)
public const var_1693261939788_947 : Unit = ()
var var_1693261939788_958 : Bool = false
let var_1693261939788_967 : UInt32 = UInt32(UInt16(137))
let var_1693261939788_1002 : Int8 = Int8(UInt8(222))
public let var_1693261939788_1026 : Option<Float64> = ((Int64(UInt32(Int16(76))), (true, ((Int64(Int64(-22))&127)..(Int64(Int64(81))&127):(Int64(54)|1)))) as Float64)
let var_1693261939788_1044 : ?Float64 = Option<Float64>.None
public var var_1693261939788_1167 : Class_1693261939788_1163 = Class_1693261939788_1163()
var var_1693261939788_1268 : (Range<UInt64>, Float64, Unit, Bool, Range<UInt32>, Unit, Rune, Array<UInt64>, (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>)) = (((UInt64(UInt64(131))&127)..=(UInt64(UInt64(UInt16(Int16(-13))))&127):(Int64(-106)|1)), Float64(-75.0), (), (((((UInt64(UInt64(173))&127)..(UInt64(UInt64(167))&127):(Int64(-92)|1)), Float64(7.0), (), true, ((UInt32(UInt32(118))&127)..=(UInt32(UInt32(198))&127):(Int64(31)|1)), (), r'r', [UInt64(101), UInt64(138), UInt64(35), UInt64(251), UInt64(41), UInt64(148), UInt64(0), UInt64(81), UInt64(64), UInt64(119)], (((Int64(Int64(-98))&127)..=(Int64(Int64(-75))&127):(Int64(61)|1)), Int32(60), (false, ((Int64(Int64(-61))&127)..=(Int64(Int64(-98))&127):(Int64(-26)|1))), ((UInt64(UInt64(131))&127)..(UInt64(UInt64(252))&127):(Int64(118)|1)), false, UInt16(94), true, (), ((UInt16(UInt16(49))&127)..(UInt16(UInt16(150))&127):(Int64(-77)|1)))), Int64(Int64(64)), ((Int32(Int32(19))&127)..=(Int32(Int32(53))&127):(Int64(-125)|1)), Int16(UInt8(116)), [((Int8(Int8(-102))&127)..=(Int8(Int8(111))&127):(Int64(-42)|1)), ((Int8(Int8(-85))&127)..(Int8(Int8(-126))&127):(Int64(-73)|1)), ((Int8(Int8(-100))&127)..(Int8(Int8(43))&127):(Int64(-9)|1)), ((Int8(Int8(17))&127)..=(Int8(Int8(87))&127):(Int64(96)|1)), ((Int8(Int8(-95))&127)..=(Int8(Int8(61))&127):(Int64(46)|1)), ((Int8(Int8(-109))&127)..=(Int8(Int8(69))&127):(Int64(108)|1)), ((Int8(Int8(-38))&127)..(Int8(Int8(-56))&127):(Int64(85)|1)), ((Int8(Int8(77))&127)..=(Int8(Int8(99))&127):(Int64(-49)|1)), ((Int8(Int8(-65))&127)..(Int8(Int8(89))&127):(Int64(-76)|1)), ((Int8(Int8(16))&127)..=(Int8(Int8(-88))&127):(Int64(113)|1))]) is Float32), ((UInt32(UInt32(UInt16(84)))&127)..=(UInt32(UInt32(UInt32(154)))&127):(Int64(Int64(-23))|1)), (), r'Z', [UInt64(89), UInt64(185), UInt64(Int32(-35)), UInt64(49), UInt64(UInt8(38)), UInt64(44), UInt64(92), UInt64(UInt8(141)), UInt64(UInt32(141)), UInt64(252)], (((Int64(Int64(-65))&127)..=(Int64(Int64(-66))&127):(Int64(31)|1)), Int32(-86), (true, ((Int64(Int64(-85))&127)..=(Int64(Int64(79))&127):(Int64(-103)|1))), ((UInt64(UInt64(85))&127)..=(UInt64(UInt64(68))&127):(Int64(-89)|1)), (UInt16(UInt8(85)) is Class_1693261939788_1163), UInt16(95), (UInt32(Int32(-112)) is (Range<UInt64>, Float64, Unit, Bool, Range<UInt32>, Unit, Rune, Array<UInt64>, (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>))), (), ((UInt16(UInt16(125))&127)..(UInt16(UInt16(106))&127):(Int64(50)|1))))
const var_1693261939788_1506 : Int8 = -97
let var_1693261939788_1567 : Array<Struct_1693261939788_105> = [Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105()]
public var var_1693261939788_1581 : Int = Int64(18)
public var var_1693261939788_1617 : Float32 = Float32(Float32(Float32(Float32(-17.0))))




public struct Struct_1693261939788_105 {
    init() { // block id: 107

    }
;
    mut prop var_1693261939788_297 : ?Range<UInt32> { // block id: 298
        get() { // block id: 300
            Option<Range<UInt32>>.None
        }

        set(Value) { // block id: 304
            ();
            ();
            ()
        }

    };
    public let var_1693261939788_374 : VArray<Bool, $3> = [false, true, true];
    static mut prop var_1693261939788_767 : Bool { // block id: 768
        get() { // block id: 770
            false
        }

        set(Value) { // block id: 774
            Option<Option<Option<Unit>>>.None;
            ()
        }

    };
    private static const var_1693261939788_793 : Unit = ();
    static let var_1693261939788_826 : Unit = ();
    public init(param_1693261939788_217 : Range<Int8>) { // block id: 218
        var var_1693261939788_782 : Range<Int8> = ((Int8(Int8(-72))&127)..=(Int8(Int8(UInt8(67)))&127):(Int64(UInt16(UInt8(Int8(86))))|1));
        match ((if (var_1693261939788_767) { // block id: 777
            var_1693261939788_779;
            var_1693261939788_782
        } else { // block id: 791
            var_1693261939788_793;
            var_1693261939788_560;
            if (true) { ((Int8(var_1693261939788_800)&127)..(Int8(Int8(42))&127):(Int64(-25)|1)) } else { ((Int8(Int8(-43))&127)..=(Int8(Int8(-36))&127):(Int64(109)|1)) } 
        }|>func_1693261939788_223)) {
            case _ : Option<Option<Option<Unit>>> => 
                const var_1693261939788_809 : UInt16 = 68;
                var_1693261939788_809;
                ()
            
            case caseVar_1693261939788_814 => 
                var_1693261939788_793;
                ()
            
            case caseVar_1693261939788_820 => 
                var_1693261939788_793
            
            case _ => 
                var_1693261939788_826
            
        };
        let var_1693261939788_847 : Int32 = Int32(83);
        (if ((var_1693261939788_832 is Range<Int16>)) { Option<Unit>.Some(var_1693261939788_793) } else { (if (var_1693261939788_767) { var_1693261939788_839 } else { var_1693261939788_839 } ) }  ?? try { // block id: 843

        } finally { // block id: 844
            var_1693261939788_847 / ((Int32(-68)) | 1);
            ()
        })
    }
;
    public static var var_1693261939788_884 : (UInt16, Unit, Unit, Rune) = (UInt16(40), (), (), r'C');
    public init(optionalParam_1693261939788_871 ! : UInt64 = UInt64(UInt16(Int8(Int8(43)))), namedParam_1693261939788_876 ! : Int64, optionalParam_1693261939788_877 ! : Int32 = Int32(-83)) { // block id: 879
        var var_1693261939788_925 : Option<UInt64> = (UInt64(Int32(Int32(-81))) as UInt64);
        var var_1693261939788_974 : UInt16 = UInt16(177);
        let var_1693261939788_992 : Range<Int8> = ((Int8(Int8(-123))&127)..(Int8(Int8(-57))&127):(Int64(-99)|1));
        match (((UInt64(match (var_1693261939788_884) {
            case _ : Int32 => 
                var_1693261939788_826;
                ();
                UInt64(45)
            
            case (caseVar_1693261939788_898 : Int32,caseVar_1693261939788_899 : Option<Option<Option<Unit>>>,caseVar_1693261939788_900,caseVar_1693261939788_901) => 
                var_1693261939788_826;
                UInt64(238)
            
            case _ => 
                var_1693261939788_910 *= Int8(86);
                UInt64(200)
            
            case _ => 
                UInt64(246);
                var_1693261939788_26;
                UInt64(214)
            
        })&127)..=(UInt64((var_1693261939788_925 ?? var_1693261939788_182))&127):((Int64(-96), (var_1693261939788_767, ((Int64(Int64(9))&127)..=(Int64(Int64(3))&127):(var_1693261939788_651|1))))[0]|1))) {
            case caseVar_1693261939788_944 : UInt8 => 
                var_1693261939788_947
            
            case _ : (Int64, (Bool, Range<Int64>)) => 
                ();
                let var_1693261939788_954 : VArray<Bool, $3> = [true, false, true];
                var_1693261939788_954;
                var_1693261939788_958 &&= var_1693261939788_958
            
            case caseVar_1693261939788_963 => 
                var_1693261939788_967 >> ((UInt32(128)) & 7);
                var_1693261939788_667;
                var_1693261939788_974 = var_1693261939788_974
            
            case _ => 
                ();
                var_1693261939788_947;
                ()
            
            case _ => 
                Option<Array<Range<Int8>>>.Some([((Int8(Int8(120))&127)..(Int8(var_1693261939788_800)&127):(Int64(122)|1)), var_1693261939788_992, ((Int8(Int8(-40))&127)..=(Int8(Int8(68))&127):(Int64(100)|1)), var_1693261939788_992, ((Int8(Int8(-43))&127)..=(Int8(Int8(115))&127):(Int64(-9)|1)), ((Int8(var_1693261939788_1002)&127)..=(Int8(Int8(-60))&127):(var_1693261939788_651|1)), ((Int8(Int8(-41))&127)..(Int8(var_1693261939788_910)&127):(var_1693261939788_651|1)), ((Int8(Int8(-99))&127)..=(Int8(var_1693261939788_1002)&127):(var_1693261939788_651|1)), ((Int8(Int8(107))&127)..(Int8(Int8(-39))&127):(Int64(-54)|1)), var_1693261939788_992]);
                var_1693261939788_958 ||= var_1693261939788_958
            
        };
        const var_1693261939788_1052 : Float64 = -102.0;
        (var_1693261939788_1026 ?? ([var_1693261939788_1044, var_1693261939788_1044, var_1693261939788_1044, Option<Float64>.Some(Float64(-123.0)), Option<Float64>.Some(var_1693261939788_1052), var_1693261939788_1044, Option<Float64>.Some(var_1693261939788_1052), Option<Float64>.None, Option<Float64>.None, Option<Float64>.Some(Float64(5.0))][2] ?? (Option<Float64>.None ?? var_1693261939788_1052)))
    }
;
    private static mut prop var_1693261939788_1217 : Array<Range<Int8>> { // block id: 1218
        get() { // block id: 1220
            ();
            ();
            [((Int8(Int8(-82))&127)..=(Int8(Int8(114))&127):(Int64(-37)|1)), ((Int8(Int8(-24))&127)..(Int8(Int8(-7))&127):(Int64(111)|1)), ((Int8(Int8(-57))&127)..=(Int8(Int8(36))&127):(Int64(UInt8(207))|1)), ((Int8(Int8(-101))&127)..=(Int8(Int8(99))&127):(Int64(Int32(77))|1)), ((Int8(Int8(-65))&127)..=(Int8(Int8(66))&127):(Int64(86)|1)), ((Int8(Int8(Int8(-91)))&127)..=(Int8(Int8(Int8(-93)))&127):(Int64(105)|1)), ((Int8(Int8(-62))&127)..=(Int8(Int8(95))&127):(Int64(-108)|1)), ((Int8(Int8(-104))&127)..=(Int8(Int8(110))&127):(Int64(-102)|1)), ((Int8(Int8(Int8(-37)))&127)..(Int8(Int8(-107))&127):(Int64(Int32(2))|1)), ((Int8(Int8(Int8(-104)))&127)..=(Int8(Int8(-98))&127):(Int64(-101)|1))]
        }

        set(Value) { // block id: 1261
            true;
            ()
        }

    };
    private static let var_1693261939788_1265 : Range<Int32> = ((Int32(Int32(79))&127)..(Int32(Int32(72))&127):(Int64(-37)|1));
    static mut prop var_1693261939788_1377 : Array<UInt32> { // block id: 1378
        get() { // block id: 1380
            ();
            [UInt32(UInt32(209)), UInt32(Int16(UInt16(9))), UInt32(127), UInt32(Int16(60)), UInt32(4), UInt32(UInt16(162)), UInt32(UInt16(252)), UInt32(UInt32(UInt32(120))), UInt32(174), UInt32(UInt16(UInt8(227)))]
        }

        set(Value) { // block id: 1405
            Option<Option<Unit>>.None;
            ()
        }

    };
    public static var var_1693261939788_1411 : Rune = r'R';
    private static let var_1693261939788_1422 : Class_1693261939788_1418 = Class_1693261939788_1418();
    init(param_1693261939788_145 : (Int32, Int64, Range<Int8>, Range<UInt64>, Unit, UInt8, Array<UInt64>, Int32, String)) { // block id: 146
        let var_1693261939788_1209 : (UInt32) -> Range<Int8> = func_1693261939788_148;
        (var_1693261939788_1217, var_1693261939788_1265, var_1693261939788_1268, [UInt32(124), UInt32(14), UInt32(115), UInt32(54), UInt32(110), UInt32(16), UInt32(141), UInt32(30), UInt32(28), UInt32(239)], var_1693261939788_1377, var_1693261939788_1265, var_1693261939788_1268, var_1693261939788_1411)[3][7]|>var_1693261939788_1209;
        var_1693261939788_1422.var_1693261939788_1425[1];
        var var_1693261939788_1439 : ?Range<UInt32> = Option<Range<UInt32>>.None;
        var_1693261939788_1439
    }
;
    var var_1693261939788_1510 : Unit = ();
    static const var_1693261939788_1610 : Int = -92
}

public enum Enum_1693261939788_220<T0, T1> {
    defaultValue
}


const func func_1693261939788_332(param_1693261939788_333 : Int16) : Unit { // block id: 334

}

public open class Class_1693261939788_355 {
    init() { // block id: 357

    }
;
    private mut prop var_1693261939788_431 : Option<Array<Range<Int8>>> { // block id: 432
        get() { // block id: 434
            ();
            [(((Int32(Int32(57))&127)..=(Int32(Int32(-104))&127):(Int64(92)|1)) as Unit), Option<Unit>.None, Option<Unit>.None, ("""
7Kdk`
p'`H+
""" as Unit), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, ((Int32(8), Int64(26), ((Int8(Int8(-85))&127)..(Int8(Int8(115))&127):(Int64(-112)|1)), ((UInt64(UInt64(109))&127)..(UInt64(UInt64(245))&127):(Int64(125)|1)), (), UInt8(198), [UInt64(253), UInt64(62), UInt64(9), UInt64(144), UInt64(212), UInt64(207), UInt64(155), UInt64(123), UInt64(245), UInt64(0)], Int32(-21), "~7#Xoqq*Kk") as Unit), ([((Int8(Int8(-82))&127)..=(Int8(Int8(88))&127):(Int64(-8)|1)), ((Int8(Int8(65))&127)..=(Int8(Int8(-115))&127):(Int64(-125)|1)), ((Int8(Int8(-104))&127)..(Int8(Int8(-58))&127):(Int64(-101)|1)), ((Int8(Int8(-7))&127)..=(Int8(Int8(112))&127):(Int64(-60)|1)), ((Int8(Int8(51))&127)..=(Int8(Int8(-41))&127):(Int64(-30)|1)), ((Int8(Int8(21))&127)..=(Int8(Int8(16))&127):(Int64(-54)|1)), ((Int8(Int8(121))&127)..(Int8(Int8(-106))&127):(Int64(-5)|1)), ((Int8(Int8(-60))&127)..=(Int8(Int8(75))&127):(Int64(97)|1)), ((Int8(Int8(-66))&127)..(Int8(Int8(-28))&127):(Int64(-106)|1)), ((Int8(Int8(95))&127)..(Int8(Int8(-74))&127):(Int64(-16)|1))] as Unit), (Enum_1693261939788_220<Range<Int8>, Float32>.defaultValue as Unit)];
            ((true, ((Int64(Int64(29))&127)..=(Int64(Int64(32))&127):(Int64(49)|1))) as Array<Range<Int8>>);
            var_1693261939788_1659
        }

        set(Value) { // block id: 510
            var_1693261939788_1659 = Value
        }

    };
    public func func_1693261939788_362(optionalParam_1693261939788_363 ! : Option<Unit> = Option<Unit>.None) : Option<Array<Range<Int8>>> { // block id: 365
        var loopTimeVar_1693261939788_379 : Array<Range<Int8>> = [((Int8(Int8(112))&127)..=(Int8(Int8(30))&127):(Int64(-104)|1)), ((Int8(Int8(-45))&127)..=(Int8(Int8(UInt8(227)))&127):(Int64(Int32(9))|1)), ((Int8(Int8(-2))&127)..=(Int8(Int8(-104))&127):(Int64(-12)|1)), ((Int8(Int8(126))&127)..(Int8(Int8(Int8(-12)))&127):(Int64(-93)|1)), ((Int8(Int8(Int8(UInt8(33))))&127)..(Int8(Int8(UInt8(247)))&127):(Int64(UInt64(Int16(10)))|1)), ((Int8(Int8(-65))&127)..(Int8(Int8(-25))&127):(Int64(-84)|1)), ((Int8(Int8(UInt8(UInt8(127))))&127)..=(Int8(Int8(UInt8(UInt8(71))))&127):(Int64(-84)|1)), ((Int8(Int8(113))&127)..=(Int8(Int8(-63))&127):(Int64(-46)|1)), ((Int8(Int8(-76))&127)..(Int8(Int8(UInt8(Int8(-123))))&127):(Int64(101)|1)), ((Int8(Int8(39))&127)..(Int8(Int8(Int8(UInt8(125))))&127):(Int64(Int64(UInt8(93)))|1))];
        for (i in loopTimeVar_1693261939788_379 where var_1693261939788_371.var_1693261939788_374[0]) {
            UInt32(44)
        };
        var_1693261939788_431
    }
;
    func func_1693261939788_660(param_1693261939788_661 : Range<Int16>, param_1693261939788_662 : ((Range<UInt64>, Float64, Unit, Bool, Range<UInt32>, Unit, Rune, Array<UInt64>, (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>)), Int64, Range<Int32>, Int16, Array<Range<Int8>>), namedParam_1693261939788_663 ! : Range<Int64>, namedParam_1693261939788_664 ! : Option<Option<Unit>>) : Enum_1693261939788_220<Range<Int8>, Float32> { // block id: 665
        var_1693261939788_667
    }
;
    prop var_1693261939788_758 : Option<Option<Unit>> { // block id: 759
        get() { // block id: 761
            Option<Option<Option<Unit>>>.None;
            Option<Option<Unit>>.None
        }

    };
    public mut prop var_1693261939788_1150 : Range<UInt16> { // block id: 1151
        get() { // block id: 1153
            ();
            ();
            ((UInt16(UInt16(6))&127)..(UInt16(UInt16(40))&127):(Int64(-33)|1))
        }

        set(Value) { // block id: 1159

        }

    };
    var var_1693261939788_1595 : Bool = true;
    mut prop var_1693261939788_1659 : Option<Array<Range<Int8>>> { // block id: 1660
        get() { // block id: 1662
            ();
            Option<Array<Range<Int8>>>.None
        }

        set(Value) { // block id: 1667
            ()
        }

    }
}

func func_1693261939788_329() : Option<Array<Range<Int8>>> { // block id: 330
    let var_1693261939788_336 : (Int16) -> Unit = { lambdaParameter_1693261939788_339 : Int16 =>  };
    match (((UInt64(UInt64(146))&127)..=(UInt64(UInt64(73))&127):(Int64(82)|1))) {
        case _ => 
            let var_1693261939788_348 : UInt32 = UInt32(UInt8(Int8(-52)));
            ((UInt32(UInt32(17))&127)..(UInt32(var_1693261939788_348)&127):(Int64(52)|1));
            Int16(32)
        
    }|>var_1693261939788_336;
    var_1693261939788_359.func_1693261939788_362()
}

func func_1693261939788_309<T0>(optionalParam_1693261939788_310 ! : UInt16 = UInt16(UInt8(UInt8(195))), namedParam_1693261939788_314 ! : Range<UInt8>, optionalParam_1693261939788_315 ! : UInt16 = UInt16(Int16(110)), optionalParam_1693261939788_318 ! : String = """
s`7|5
uWXq.
""") : Range<UInt32> { // block id: 320
    (func_1693261939788_329() ?? (Option<Array<Range<Int8>>>.None ?? [((Int8(Int8(55))&127)..=(Int8(Int8(-124))&127):(Int64(70)|1)), ((Int8(Int8(-60))&127)..(Int8(Int8(30))&127):(Int64(-21)|1)), ((Int8(Int8(-16))&127)..(Int8(Int8(-86))&127):(Int64(-74)|1)), ((Int8(Int8(-118))&127)..(Int8(Int8(114))&127):(Int64(118)|1)), ((Int8(Int8(10))&127)..=(Int8(Int8(-6))&127):(Int64(17)|1)), ((Int8(Int8(-119))&127)..(Int8(Int8(-127))&127):(Int64(-3)|1)), ((Int8(Int8(54))&127)..=(Int8(Int8(-27))&127):(Int64(-44)|1)), ((Int8(Int8(67))&127)..(Int8(Int8(-111))&127):(Int64(-96)|1)), ((Int8(Int8(-81))&127)..(Int8(Int8(-27))&127):(Int64(-77)|1)), ((Int8(Int8(-62))&127)..=(Int8(Int8(-86))&127):(Int64(-38)|1))]))[3];
    let var_1693261939788_529 : UInt16 = UInt16(37);
    var var_1693261939788_537 : UInt16 = UInt16(UInt8(Int8(UInt8(123))));
    var var_1693261939788_544 : ?Range<UInt32> = (r'w' as Range<UInt32>);
    let var_1693261939788_551 : Unit = ();
    try { // block id: 518
        var_1693261939788_521 &= Int16(103);
        (var_1693261939788_529, (), (), r'4')
    } catch (_) { // block id: 534
        var_1693261939788_537 *= var_1693261939788_529;
        var_1693261939788_544;
        (UInt16(209), (), var_1693261939788_551, r'q')
    }[1];
    var_1693261939788_560[0][4]
}

public func func_1693261939788_223(param_1693261939788_224 : Range<Int8>) : Enum_1693261939788_220<Range<Int8>, Float32> { // block id: 225
    var var_1693261939788_294 : Struct_1693261939788_105 = Struct_1693261939788_105();
    const var_1693261939788_654 : UInt16 = 134;
    if ((var_1693261939788_231[4] && try { // block id: 261
        const var_1693261939788_263 : Unit = ();
        var_1693261939788_263;
        var_1693261939788_263;
        var var_1693261939788_268 : Bool = (Option<Option<Unit>>.Some((Int32(10) as Unit)) is Rune);
        !var_1693261939788_268
    } finally { // block id: 273
        let var_1693261939788_275 : Bool = (Option<Unit>.None is UInt16);
        var_1693261939788_275
    })) { var_1693261939788_279 } else { (var_1693261939788_294.var_1693261939788_297 ?? func_1693261939788_309<UInt32>(namedParam_1693261939788_314 : ((UInt8(UInt8(250))&127)..=(UInt8(var_1693261939788_647)&127):(var_1693261939788_651|1)), optionalParam_1693261939788_315 : var_1693261939788_654, optionalParam_1693261939788_318 : ###"b_qa{hRQyl/"###)) } ;
    var_1693261939788_359.func_1693261939788_660(((Int16(Int16(-29))&127)..=(Int16(Int16(-2))&127):(Int64(114)|1)), try { // block id: 671
        const var_1693261939788_673 : Unit = ();
        var_1693261939788_673;
        let var_1693261939788_676 : ((Range<UInt64>, Float64, Unit, Bool, Range<UInt32>, Unit, Rune, Array<UInt64>, (Range<Int64>, Int32, (Bool, Range<Int64>), Range<UInt64>, Bool, UInt16, Bool, Unit, Range<UInt16>)), Int64, Range<Int32>, Int16, Array<Range<Int8>>) = ((((UInt64(UInt64(UInt32(195)))&127)..(UInt64(UInt64(191))&127):(Int64(Int64(74))|1)), Float64(57.0), (), false, ((UInt32(UInt32(14))&127)..=(UInt32(UInt32(170))&127):(Int64(115)|1)), (), r'x', [UInt64(91), UInt64(113), UInt64(60), UInt64(209), UInt64(185), UInt64(168), UInt64(219), UInt64(185), UInt64(120), UInt64(6)], (((Int64(Int64(85))&127)..(Int64(Int64(75))&127):(Int64(-114)|1)), Int32(-11), (false, ((Int64(Int64(-9))&127)..=(Int64(Int64(-75))&127):(Int64(-90)|1))), ((UInt64(UInt64(151))&127)..(UInt64(UInt64(9))&127):(Int64(86)|1)), true, UInt16(Int8(-100)), false, (), ((UInt16(UInt16(92))&127)..=(UInt16(UInt16(7))&127):(Int64(96)|1)))), Int64(-37), ((Int32(Int32(109))&127)..=(Int32(Int32(-2))&127):(Int64(-84)|1)), Int16(-2), [((Int8(Int8(-56))&127)..(Int8(Int8(39))&127):(Int64(92)|1)), ((Int8(Int8(53))&127)..=(Int8(Int8(72))&127):(Int64(UInt64(26))|1)), ((Int8(Int8(-98))&127)..(Int8(Int8(Int8(-71)))&127):(Int64(-128)|1)), ((Int8(Int8(-119))&127)..=(Int8(Int8(3))&127):(Int64(-40)|1)), ((Int8(Int8(Int8(89)))&127)..=(Int8(Int8(-59))&127):(Int64(UInt64(48))|1)), ((Int8(Int8(UInt8(7)))&127)..(Int8(Int8(-110))&127):(Int64(UInt64(73))|1)), ((Int8(Int8(-127))&127)..=(Int8(Int8(18))&127):(Int64(121)|1)), ((Int8(Int8(30))&127)..=(Int8(Int8(-127))&127):(Int64(5)|1)), ((Int8(Int8(20))&127)..=(Int8(Int8(120))&127):(Int64(93)|1)), ((Int8(Int8(-127))&127)..=(Int8(Int8(113))&127):(Int64(-57)|1))]);
        var_1693261939788_676
    } finally { // block id: 749
        var_1693261939788_560
    }, namedParam_1693261939788_663 : ((Int64(Int64(38))&127)..(Int64(Int64(52))&127):(Int64(-101)|1)), namedParam_1693261939788_664 : var_1693261939788_359.var_1693261939788_758)
}





public open class Class_1693261939788_1163 <: Class_1693261939788_355 {
    init() { // block id: 1165

    }
;
    public mut prop var_1693261939788_1170 : Range<Int8> { // block id: 1171
        get() { // block id: 1173
            ((Int8(Int8(-119))&127)..=(Int8(Int8(73))&127):(Int64(97)|1))
        }

        set(Value) { // block id: 1180

        }

    }
    static init() {
    }
}

func func_1693261939788_172(param_1693261939788_173 : UInt16) : Range<Int8> { // block id: 174
    const var_1693261939788_201 : Bool = true;
    let var_1693261939788_210 : (Rune, Array<Struct_1693261939788_105>, Int16, Range<Int32>, Array<UInt64>) = (r'3', [Struct_1693261939788_105(), Struct_1693261939788_105(((Int8(Int8(1))&127)..=(Int8(Int8(9))&127):(Int64(94)|1))), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(((Int8(Int8(46))&127)..=(Int8(Int8(126))&127):(Int64(-12)|1))), Struct_1693261939788_105(((Int8(Int8(-89))&127)..=(Int8(Int8(-21))&127):(Int64(-111)|1))), Struct_1693261939788_105(((Int8(Int8(115))&127)..=(Int8(Int8(-76))&127):(Int64(33)|1))), Struct_1693261939788_105(namedParam_1693261939788_876 : Int64(-49), optionalParam_1693261939788_877 : Int32(-88)), Struct_1693261939788_105(namedParam_1693261939788_876 : Int64(UInt64(173))), Struct_1693261939788_105()], Int16(Int16(35)), ((Int32(Int32(-23))&127)..=(Int32(Int32(Int8(-46)))&127):(Int64(-116)|1)), [UInt64(UInt16(195)), UInt64(71), UInt64(UInt32(30)), UInt64(UInt32(233)), UInt64(UInt8(Int8(-93))), UInt64(220), UInt64(71), UInt64(148), UInt64(78), UInt64(105)]);
    if (try { // block id: 177
        [UInt64(93), UInt64(59), var_1693261939788_182, var_1693261939788_182, var_1693261939788_182, UInt64(172), UInt64(10), var_1693261939788_182, UInt64(248), UInt64(191)];
        true
    } catch (_) { // block id: 194
        false
    } finally { // block id: 196
        Option<Unit>.Some(());
        !var_1693261939788_201
    }) { // block id: 203
        UInt32(UInt8(61))
    } else { // block id: 206
        var_1693261939788_210[1];
        try { // block id: 1101

        } catch (e: Exception) { // block id: 1102
            ();
            let var_1693261939788_1108 : Float64 = Float64(Float64(Float64(Float32(-122.0))));
            [Option<Float64>.None, Option<Float64>.Some(var_1693261939788_1108), var_1693261939788_1044, Option<Float64>.Some(var_1693261939788_1108), var_1693261939788_1044, Option<Float64>.None, Option<Float64>.None, var_1693261939788_1044, Option<Float64>.None, Option<Float64>.None];
            ()
        };
        try { // block id: 1124
            var_1693261939788_910 ^= var_1693261939788_910;
            ();
            UInt32(50) / ((UInt32(109)) | 1)
        } finally { // block id: 1132
            ();
            Int32(-123);
            var_1693261939788_967
        }
    };
    var loopTimeVar_1693261939788_1161 : Int64 = 0;
    while ((try { // block id: 1138
        var_1693261939788_521;
        var_1693261939788_958
    } finally { // block id: 1141
        UInt8(84) != UInt8(93)
    }) && loopTimeVar_1693261939788_1161 < 100 ) {
        loopTimeVar_1693261939788_1161++;
        Class_1693261939788_355();
        var_1693261939788_359.var_1693261939788_1150
    };
    var_1693261939788_1167.var_1693261939788_1170
}

public func func_1693261939788_148(param_1693261939788_149 : UInt32) : Range<Int8> { // block id: 150
    const var_1693261939788_158 : Bool = false;
    const var_1693261939788_1183 : UInt16 = 50;
    var var_1693261939788_1200 : UInt = UInt64(UInt16(Int16(75)));
    if (try { // block id: 155
        (var_1693261939788_158, ((Int64(Int64(-76))&127)..=(Int64(Int64(-61))&127):(Int64(100)|1)))
    } finally { // block id: 161
        var var_1693261939788_163 : (Bool, Range<Int64>) = ((() is Float32), ((Int64(Int64(69))&127)..(Int64(Int64(42))&127):(Int64(113)|1)));
        var_1693261939788_163;
        ((UInt8(UInt8(162))&127)..(UInt8(UInt8(84))&127):(Int64(-49)|1));
        var_1693261939788_163
    }[0]) { (var_1693261939788_1183|>func_1693261939788_172) } else { ((Int8(Int8(UInt8(251)))&127)..=(Int8(try { // block id: 1189
        var_1693261939788_947;
        Int8(-37)
    } finally { // block id: 1192
        ();
        var_1693261939788_1002
    })&127):(try { // block id: 1196
        var_1693261939788_947;
        var_1693261939788_1200 *= UInt64(91);
        Int64(80)
    } catch (_) { // block id: 1206
        Int64(-1)
    }|1)) } 
}

public open class Class_1693261939788_1418 <: Class_1693261939788_1163 {
    init() { // block id: 1420

    }
;
    public mut prop var_1693261939788_1425 : Array<Unit> { // block id: 1426
        get() { // block id: 1428
            ();
            ((UInt32(UInt32(44))&127)..(UInt32(UInt32(55))&127):(Int64(28)|1));
            [(), (), (), (), (), (), (), (), (), ()]
        }

        set(Value) { // block id: 1434
            ();
            ()
        }

    }
}

public func func_1693261939788_7(param_1693261939788_8 : Bool) : Bool { // block id: 9
    let var_1693261939788_40 : Unit = ();
    (((var_1693261939788_26 ?? Option<Option<Unit>>.None) ?? try { // block id: 31
        var var_1693261939788_33 : Option<Unit> = Option<Unit>.None;
        var_1693261939788_33
    } finally { // block id: 35
        let var_1693261939788_37 : Option<Unit> = Option<Unit>.None;
        var_1693261939788_37
    }) ?? var_1693261939788_40);
    func func_1693261939788_109(namedParam_1693261939788_110 ! : Range<Int8>) : Struct_1693261939788_105 { // block id: 111
        var_1693261939788_115[4];
        let var_1693261939788_141 : Array<Struct_1693261939788_105> = [Struct_1693261939788_105((Int32(Int16(70)), Int64(UInt32(231)), ((Int8(Int8(75))&127)..(Int8(Int8(-105))&127):(Int64(35)|1)), ((UInt64(UInt64(44))&127)..(UInt64(UInt64(33))&127):(Int64(-85)|1)), (), UInt8(15), [UInt64(58), UInt64(59), UInt64(247), UInt64(113), UInt64(1), UInt64(208), UInt64(146), UInt64(13), UInt64(14), UInt64(66)], Int32(-58), "I)8\"lE~Rr''")), Struct_1693261939788_105(((Int8(Int8(-88))&127)..=(Int8(Int8(UInt8(222)))&127):(Int64(UInt64(110))|1))), Struct_1693261939788_105(), Struct_1693261939788_105((Int32(75), Int64(UInt32(200)), ((Int8(Int8(115))&127)..(Int8(Int8(11))&127):(Int64(21)|1)), ((UInt64(UInt64(172))&127)..=(UInt64(UInt64(111))&127):(Int64(84)|1)), (), UInt8(UInt8(143)), [UInt64(89), UInt64(252), UInt64(116), UInt64(63), UInt64(56), UInt64(155), UInt64(123), UInt64(201), UInt64(1), UInt64(200)], Int32(16), """
)J(oy
xs;dH
""")), Struct_1693261939788_105(), Struct_1693261939788_105(((Int8(Int8(108))&127)..(Int8(Int8(36))&127):(Int64(35)|1))), Struct_1693261939788_105(), Struct_1693261939788_105(), Struct_1693261939788_105(((Int8(Int8(UInt8(55)))&127)..(Int8(Int8(-120))&127):(Int64(-110)|1))), Struct_1693261939788_105()];
        var_1693261939788_141[9]
    }
;
    ([var_1693261939788_60, Option<Unit>.Some(var_1693261939788_40), var_1693261939788_60, var_1693261939788_60, var_1693261939788_60, Option<Unit>.Some(()), Option<Unit>.None, var_1693261939788_60, Option<Unit>.Some(var_1693261939788_40), var_1693261939788_60][2] ?? func_1693261939788_109(namedParam_1693261939788_110 : ((Int8(Int8(11))&127)..(Int8(var_1693261939788_1506)&127):(Int64(-94)|1))).var_1693261939788_1510);
    var var_1693261939788_1533 : Array<UInt64> = [UInt64(249), UInt64(Int32(UInt32(UInt8(183)))), UInt64(247), UInt64(56), UInt64(81), UInt64(Int32(112)), UInt64(Int64(-81)), UInt64(113), UInt64(UInt64(Int64(UInt8(62)))), UInt64(UInt64(Int8(Int8(100))))];
    var_1693261939788_1506 > try { // block id: 1515
        var_1693261939788_521 += Int16(-30);
        (Int32(-72), var_1693261939788_651, ((Int8(Int8(112))&127)..(Int8(var_1693261939788_1002)&127):(Int64(90)|1)), ((UInt64(var_1693261939788_182)&127)..=(UInt64(var_1693261939788_182)&127):(Int64(46)|1)), var_1693261939788_947, var_1693261939788_647, var_1693261939788_1533, Int32(9), ###":;u~vGklu4"###);
        -var_1693261939788_800
    } catch (e: Exception) { // block id: 1560
        var_1693261939788_947;
        Int8(-17) | Int8(-68)
    } finally { // block id: 1565
        var_1693261939788_1567;
        var_1693261939788_1581 += Int64(57);
        Int8(-5) - var_1693261939788_910
    }
}

main(): Int64 {
    try {
        let var_1693261939788_1601 : Class_1693261939788_1418 = Class_1693261939788_1418();
        if ((false|>func_1693261939788_7)) { // block id: 1589
            var_1693261939788_947;
            ()
        } else if (var_1693261939788_359.var_1693261939788_1595) { // block id: 1597
            if (true) { var_1693261939788_1601 } else { Class_1693261939788_1418() } ;
            var_1693261939788_947;
            ()
        };
        match (Struct_1693261939788_105.var_1693261939788_1610) {
            case _ => 
                Option<Option<Unit>>.None;
                var_1693261939788_1617 *= var_1693261939788_832;
                ()
            
        };
        var loopTimeVar_1693261939788_1632 : Int64 = 0;
        match (do {
            loopTimeVar_1693261939788_1632++;
            var_1693261939788_182 << ((UInt64(116)) & 7)
        } while ((false) && loopTimeVar_1693261939788_1632 < 100 ) ) {
            case caseVar_1693261939788_1635 => 
                Int64(89)
            
            case () => 
                var_1693261939788_651
            
            case () => 
                var_1693261939788_947;
                Int64(-106)
            
            case () | () | () => 
                var_1693261939788_651
            
            case _ => 
                var_1693261939788_947;
                Int64(76) / ((Int64(-12)) | 1)
            
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1693261939788_182*var_1693261939788_182), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_521*var_1693261939788_521), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_647*var_1693261939788_647), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_651*var_1693261939788_651), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_800*var_1693261939788_800), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_910*var_1693261939788_910), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_967*var_1693261939788_967), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_1002*var_1693261939788_1002), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_1506*var_1693261939788_1506), 64)
        crccheck.updateBuffer(UInt64(var_1693261939788_1581*var_1693261939788_1581), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1693261939788_1418 {

}

extend Class_1693261939788_1163 {

}

