/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

@Deprecated
public let var_1747770243692_36: Unit = ()
@Deprecated
public const var_1747770243692_46: Int8 = 52
internal var var_1747770243692_50: Option<Option<Unit>> = Option<Option<Unit>>.None
@Deprecated
internal var var_1747770243692_81: Int32 = Int32(-80)
public var var_1747770243692_139: Option<UInt32> = (r'q' as UInt32)
@Deprecated
public const var_1747770243692_161: String = """
}jjlf
$ KG9
"""
public const var_1747770243692_269: UInt = 63
let var_1747770243692_312: ?Unit = Option<Unit>.None
internal let var_1747770243692_332: Bool = (UInt8(UInt8(134)) is (Float64, String, (Class_1747770243692_92, Option<UInt32>), 
    Float64, Unit, Int32, Float64, Option<Unit>, Option<Unit>))
@Deprecated
public var var_1747770243692_346: Bool = false
@Deprecated
public let var_1747770243692_365: Rune = r'2'
@Deprecated
public var var_1747770243692_377: (Int8, Bool, Option<Option<Unit>>, Int16) = (Int8(UInt8(Int8(UInt8(224)))), true, Option<Option<Unit>>
        .None, Int16(40))
let var_1747770243692_387: (UInt8, UInt32, String, Int8, Option<Option<Unit>>, Int16) = (UInt8(30), UInt32(UInt32(Int32(Int8(122)))),
    "cq_9y>${var_1747770243692_161}\"T${var_1747770243692_161}*I", Int8(UInt8(60)), ((Class_1747770243692_92() is (Class_1747770243692_92, 
        Option<UInt32>)) as Option<Unit>), Int16(-54))
public var var_1747770243692_523: (Int32, (Int32, Float64, (Float64, String, (Class_1747770243692_92, Option<UInt32>), 
    Float64, Unit, Int32, Float64, Option<Unit>, Option<Unit>)), Range<Int32>) = (Int32(-44), (Int32(-87), Float64(Float64(Float64(-92.0))),
        (Float64(Float64(76.0)), "yk${var_1747770243692_161}aih$${var_1747770243692_161}r'oE", (Class_1747770243692_92(),
                Option<UInt32>.None), Float64(Float64(4.0)), (), Int32(UInt8(151)), Float64(115.0), Option<Unit>.None, ([Option<UInt32>
                .None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None,
                Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None] as Unit))),
    ((Int32(Int32(-55)) & 127)..(Int32(Int32(-71)) & 127) : (Int64(81) | 1)))
internal var var_1747770243692_644: Int16 = Int16(Int16(43))
public var var_1747770243692_666: Float64 = Float64(95.0)
@Deprecated
public let var_1747770243692_673: ?Unit = Option<Unit>.None
public let var_1747770243692_736: Option<Int64> = Option<Int64>.None
public var var_1747770243692_752: Int = Int64(-109)
@Deprecated
let var_1747770243692_781: VArray<Int64, $7> = [Int64(45), Int64(-110), Int64(-83), Int64(70), Int64(-82), Int64(50),
    Int64(17)]
public var var_1747770243692_790: Int = Int64(Int32(-106))
public var var_1747770243692_794: Int = Int64(Int32(-2))
let var_1747770243692_810: ((Int8, Bool, Option<Option<Unit>>, Int16), (UInt8, UInt32, String, Int8, Option<Option<Unit>>, 
    Int16), Float32, Bool, Int8, Int8, Float32) = ((Int8(Int8(-87)), (((Int16(Int16(104)) & 127)..(Int16(Int16(-109)) &
            127) : (Int64(87) | 1)) is (Option<Unit>, Option<Option<Unit>>, Unit, Int8)), (Int16(Int16(-109)) as Option<Unit>),
        Int16(-95)), (UInt8(UInt8(Int8(87))), UInt32(Int16(116)),
        ###"OpA~${var_1747770243692_161}Cm&D${var_1747770243692_161}mZ"###, Int8(-127), (r'p' as Option<Unit>), Int16(117)),
    Float32(-102.0), false, Int8(UInt8(UInt8(UInt8(219)))), Int8(Int8(-127)), Float32(Float32(-14.0)))
public var var_1747770243692_845: UInt16 = UInt16(203)
public let var_1747770243692_852: Unit = ()
var var_1747770243692_1080: Int8 = Int8(56)
let var_1747770243692_1096: VArray<Bool, $7> = [false, true, true, false, true, true, false]
var var_1747770243692_1131: (Option<Unit>, Option<Option<Unit>>, Unit, Int8) = (Option<Unit>.None, (Float32(Float32(Float32(-92.0))) as Option<Unit>),
    (), Int8(13))
public let var_1747770243692_1208: Range<Int8> = ((Int8(Int8(UInt8(82))) & 127)..=(Int8(Int8(-118)) & 127) : (Int64(119) |
    1))
public var var_1747770243692_1285: UInt32 = UInt32(218)
let var_1747770243692_1328: Option<Option<Option<Unit>>> = Option<Option<Option<Unit>>>.None
const var_1747770243692_1340: Unit = ()
var var_1747770243692_1344: Int16 = Int16(-1)
public let var_1747770243692_1555: ?(Option<Unit>, Option<Option<Unit>>, Unit, Int8) = Option<(Option<Unit>, Option<Option<Unit>>, 
        Unit, Int8)>.None
var var_1747770243692_1880: Option<Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>> = Option<Option<(Option<Unit>, 
        Option<Option<Unit>>, Unit, Int8)>>.None
let var_1747770243692_2058: Range<UInt32> = ((UInt32(UInt32(187)) & 127)..(UInt32(UInt32(Int8(Int8(-118)))) & 127) : (Int64(UInt8(UInt8(Int8(-43)))) |
    1))
let var_1747770243692_2113: ?Array<Option<UInt32>> = (Int32(20) as Array<Option<UInt32>>)
let var_1747770243692_2194: Float32 = Float32(92.0)
public let var_1747770243692_2227: UInt16 = UInt16(225)
var var_1747770243692_2252: Range<UInt16> = ((UInt16(UInt16(UInt8(Int8(61)))) & 127)..(UInt16(UInt16(165)) & 127) : (Int64(Int64(-17)) |
    1))
var var_1747770243692_2345: Array<Option<UInt32>> = [(UInt16(101) as UInt32),
    (((Int16(33) as Option<Unit>) as Array<Option<UInt32>>) as UInt32), Option<UInt32>.None,
    ((Class_1747770243692_213(), Option<UInt32>.None) as UInt32), Option<UInt32>.None, Option<UInt32>.None,
    (((UInt8(52), UInt32(168), """
7R(+]
iA/S%
""", Int8(-123), Option<Option<Unit>>.None, Int16(126)) as (Option<Unit>, 
    Option<Option<Unit>>, Unit, Int8)) as UInt32), (Int8(UInt8(50)) as UInt32),
    ([VArray<Int64, $7>({i => Int64(96)}), VArray<Int64, $7>({i => Int64(-75)}), VArray<Int64, $7>({i => Int64(-71)}),
    VArray<Int64, $7>({i => Int64(-42)}), VArray<Int64, $7>(repeat: Int64(-105)), VArray<Int64, $7>(repeat: Int64(58)),
    VArray<Int64, $7>(repeat: Int64(-20)), VArray<Int64, $7>({i => Int64(69)}), VArray<Int64, $7>({i => Int64(79)}),
    VArray<Int64, $7>({i => Int64(-13)})] as UInt32), Option<UInt32>.None]

public enum Enum_1747770243692_22 {
    defaultValue
    | enumValue_1747770243692_563(Int16, Option<Option<Unit>>, UInt64, Array<Option<UInt32>>)
    | enumValue_1747770243692_1446(Array<UInt64>, UInt32, (Int32) -> Unit, Range<UInt8>)
}

@Deprecated
internal const func func_1747770243692_63<T0>(param_1747770243692_64: Int16, optionalParam_1747770243692_65!: Int8 = -20): Int32 { // block id: 67
    const var_1747770243692_69: Int32 = -18;
    var_1747770243692_69;
    var_1747770243692_69 + var_1747770243692_69
}

const func func_1747770243692_57(param_1747770243692_58: Int32): Unit { // block id: 59
    ();
    func_1747770243692_63<UInt64>(-70) >> ((60) & 7);
    const var_1747770243692_77: Unit = ();
    var_1747770243692_77
}

public sealed interface Interface_1747770243692_102<T0> {
    @Frozen
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 300
        ();
        var var_1747770243692_308: ?(Option<Unit>, Option<Option<Unit>>, Unit, Int8) = Option<(Option<Unit>, Option<Option<Unit>>, 
                Unit, Int8)>.None;
        var var_1747770243692_319: UInt32 = UInt32(UInt8(80));
        let var_1747770243692_327: Int16 = Int16(-98);
        var var_1747770243692_370: Int64 = Int64(62);
        (var_1747770243692_308 ?? (var_1747770243692_312, (UInt8(201), var_1747770243692_319, "K%ESb)l`F?", Int8(87),
                Option<Option<Unit>>.Some(Option<Unit>.None), var_1747770243692_327)[4], match (var_1747770243692_332) {
                case _ => ()

                case _: Float32 =>
                    var_1747770243692_36;
                    var_1747770243692_346 ||= false

                case _: UInt16 =>
                    ();
                    ()

                case caseVar_1747770243692_356: (Int8, Bool, Option<Option<Unit>>, Int16) => ()

                case _ =>
                    if (true) {
                        var_1747770243692_365
                    } else {
                        var_1747770243692_365
                    };
                    var_1747770243692_370 &= var_1747770243692_370
            }, (var_1747770243692_377, var_1747770243692_387, Float32(105.0), var_1747770243692_346, Int8(49),
                var_1747770243692_46, Float32(122.0))[4]))
    }
}

public interface Interface_1747770243692_101 <: Interface_1747770243692_102<String> {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 801
        let var_1747770243692_855: Option<Option<Unit>> = (UInt32(Int8(UInt8(Int8(106)))) as Option<Unit>);
        let var_1747770243692_870: Array<UInt64> = [UInt64(45), UInt64(77), UInt64(149), UInt64(243), UInt64(122),
            UInt64(212), UInt64(179), UInt64(26), UInt64(40), UInt64(68)];
        var var_1747770243692_892: Int16 = Int16(Int16(-108));
        let var_1747770243692_898: Array<Option<UInt32>> = [Option<UInt32>.Some(UInt32(Int8(Int8(3)))),
            (((Int8(46), false, Option<Option<Unit>>.Some(Option<Unit>.Some(())), Int16(5)), (UInt8(53), UInt32(65),
                ###"m3+u,T}(C7"###, Int8(-6), Option<Option<Unit>>.None, Int16(-88)), Float32(48.0), false, Int8(-35),
            Int8(-22), Float32(Float32(91.0))) as UInt32), Option<UInt32>.Some(UInt32(Int32(59))),
            Option<UInt32>.Some(UInt32(UInt32(Int16(87)))),
            (VArray<Bool, $7>(repeat: (VArray<Int64, $7>({i => Int64(103)}) is UInt32)) as UInt32),
            ((r'O' as Option<Option<Unit>>) as UInt32), (Option<Option<Unit>>.None as UInt32),
            Option<UInt32>.Some(UInt32(Int16(Int16(53)))),
            (Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
            (Option<Unit>.None, Option<Option<Unit>>.None, (), Int8(-13))) as UInt32), Option<UInt32>.None];
        var var_1747770243692_1054: Option<Option<Option<Unit>>> = (UInt64(Int32(Int8(-22))) as Option<Option<Unit>>);
        var var_1747770243692_1060: ?(Option<Unit>, Option<Option<Unit>>, Unit, Int8) = Option<(Option<Unit>, Option<Option<Unit>>, 
                Unit, Int8)>.None;
        ((var_1747770243692_387, var_1747770243692_139, var_1747770243692_810, (), ((UInt16(UInt16(241)) & 127)..(UInt16(UInt16(201)) &
                    127) : (Int64(-39) | 1)), var_1747770243692_845, true,
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
                    (Option<Unit>.Some(var_1747770243692_852), var_1747770243692_855, var_1747770243692_36, Int8(94))))[0],
            var_1747770243692_139, var_1747770243692_810, if (false) { // block id: 868
                var_1747770243692_870;
                var_1747770243692_852
            }, ((UInt16(UInt16(196)) & 127)..(UInt16(UInt16(158)) & 127) : (Int64(30) | 1)), UInt16(172), VArray<Bool, $7>({
                    i => false
                })[1], (UInt32(65), Enum_1747770243692_22.enumValue_1747770243692_563(var_1747770243692_892,
                    var_1747770243692_855, var_1747770243692_269, var_1747770243692_898), var_1747770243692_1054,
                var_1747770243692_1060, ((Int64(Int64(-55)) & 127)..(Int64(Int64(-59)) & 127) : (Int64(110) | 1)))[3])[3];
        var var_1747770243692_1069: UInt32 = UInt32(UInt8(Int8(-88)));
        var var_1747770243692_1109: Int32 = Int32(UInt8(170));
        if (if (var_1747770243692_1069 > var_1747770243692_1069) { // block id: 1074
            var_1747770243692_346
        } else if (try { // block id: 1077
            var_1747770243692_1080++;
            UInt64(2) < var_1747770243692_269
        } catch (_) { // block id: 1085
            var_1747770243692_346 &&= false
            var_1747770243692_1080 < var_1747770243692_1080
        } finally { // block id: 1092
            true
        }) { // block id: 1094
            var_1747770243692_1096;
            var_1747770243692_845 == var_1747770243692_845
        } else { // block id: 1101
            var_1747770243692_346
        }) { // block id: 1103
            let var_1747770243692_1120: Int64 = Int64(-88);
            try { // block id: 1105
                var_1747770243692_161;
                var_1747770243692_1109--;
                ()
            } catch (e: Exception) { // block id: 1113
                var_1747770243692_1080 - Int8(-108);
                var_1747770243692_790 <<= ((var_1747770243692_1120) & 7)
            } finally { // block id: 1122

            }
        };
        var loopTimeVar_1747770243692_1165: Int64 = 0;
        (try { // block id: 1125
            ();
            if (true) {
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(var_1747770243692_1131)
            } else {
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(var_1747770243692_1131)
            }
        } catch (_) { // block id: 1142
            Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(var_1747770243692_1131)
        } finally { // block id: 1145
            if (var_1747770243692_346) {
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
                    (Option<Unit>.None, Option<Option<Unit>>.None, (), Int8(74)))
            } else {
                var_1747770243692_1060
            }
        } ?? (Option<Unit>.None, Option<Option<Unit>>.Some(Option<Unit>.None), do {
                loopTimeVar_1747770243692_1165++;
                ();
                var_1747770243692_36
            } while ((var_1747770243692_346) && loopTimeVar_1747770243692_1165 < 100), match (Int32(105)) {
                case caseVar_1747770243692_1170 =>
                    var_1747770243692_852;
                    Int8(122)

                case _ =>
                    var_1747770243692_852;
                    var_1747770243692_1069 &= UInt32(109)
                    var_1747770243692_46
            }))
    }
}

public sealed interface Interface_1747770243692_100 <: Interface_1747770243692_101 & Interface_1747770243692_102<String> {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1183
        var var_1747770243692_1194: Float32 = Float32(106.0);
        var var_1747770243692_1222: UInt8 = UInt8(206);
        let var_1747770243692_1267: Range<Int64> = ((Int64(Int64(Int8(UInt8(Int8(-111))))) & 127)..(Int64(Int64(UInt16(Int8(UInt8(65))))) &
            127) : (Int64(Int64(UInt64(Int32(-73)))) | 1));
        if (!var_1747770243692_346) { // block id: 1187
            if (var_1747770243692_346) { // block id: 1190
                Option<Option<Option<Unit>>>.Some(Option<Option<Unit>>.None);
                var_1747770243692_1194
            } else { // block id: 1196
                var_1747770243692_346 ||= true
                var_1747770243692_1194
            };
            if (var_1747770243692_346) {
                ((Int8(Int8(-51)) & 127)..=(Int8(Int8(-104)) & 127) : (Int64(36) | 1))
            } else {
                var_1747770243692_1208
            };
            let var_1747770243692_1260: Option<Option<Option<Unit>>> = Option<Option<Option<Unit>>>.Some(
                Option<Option<Unit>>.Some(Option<Unit>.None));
            match (UInt16(113)) {
                case _: Option<Option<Unit>> => UInt8(153) % ((var_1747770243692_1222) | 1)

                case _ =>
                    var var_1747770243692_1230: Enum_1747770243692_22 = Enum_1747770243692_22
                        .enumValue_1747770243692_563(Int16(47), (Int8(-93) as Option<Unit>), UInt64(Int16(-82)),
                            [Option<UInt32>.Some(UInt32(UInt8(223))), Option<UInt32>.Some(UInt32(Int8(-67))),
                                Option<UInt32>.Some(UInt32(163)), (r'm' as UInt32), Option<UInt32>.None,
                                Option<UInt32>.Some(UInt32(204)), Option<UInt32>.Some(UInt32(UInt32(121))),
                                (((UInt16(UInt16(87)) & 127)..=(UInt16(UInt16(76)) & 127) : (Int64(20) | 1)) as UInt32),
                                Option<UInt32>.Some(UInt32(207)), Option<UInt32>.None]);
                    (UInt32(208), var_1747770243692_1230, var_1747770243692_1260,
                        Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(var_1747770243692_1131),
                        var_1747770243692_1267);
                    var_1747770243692_36;
                    var_1747770243692_1222
            }
        } else if (var_1747770243692_1285 >= UInt32(43)) { // block id: 1288
            var loopTimeVar_1747770243692_1302: Int64 = 0;
            while ((false) && loopTimeVar_1747770243692_1302 < 100) {
                loopTimeVar_1747770243692_1302++;
                VArray<Int64, $7>({i => Int64(-105)});
                var_1747770243692_36
            };
            [UInt8(249), UInt8(6), UInt8(24), UInt8(133), UInt8(124), UInt8(239), UInt8(219), UInt8(106), UInt8(205),
                UInt8(238)][2]
        } else { // block id: 1307
            var_1747770243692_852;
            UInt8(202) % ((UInt8(73)) | 1)
        };
        var var_1747770243692_1332: ?Unit = Option<Unit>.None;
        (((var_1747770243692_1328 ?? Option<Option<Unit>>.None) ?? var_1747770243692_1332) ?? try (resource = Class_1747770243692_92()) { // block id: 1335
            UInt64(137) << ((UInt64(197)) & 7);
            var_1747770243692_1340
        } catch (_) { // block id: 1342
            var_1747770243692_1344;
            var var_1747770243692_1348: UInt16 = UInt16(UInt8(146));
            var_1747770243692_1348 /= ((UInt16(212)) | 1)
            ()
        });
        let var_1747770243692_1358: VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var loopTimeVar_1747770243692_1392: Array<UInt64> = [UInt64(UInt32(UInt8(UInt8(137)))), UInt64(UInt64(11)),
            UInt64(154), UInt64(246), UInt64(UInt32(71)), UInt64(UInt16(230)), UInt64(80), UInt64(UInt8(135)),
            UInt64(76), UInt64(UInt8(179))];
        (Option<Unit>.Some(var_1747770243692_1358[4]), Option<Option<Unit>>.Some(
                (Option<Option<Unit>>.None ?? Option<Unit>.None)), for (i in loopTimeVar_1747770243692_1392 where if (true) { // block id: 1376
                ((Int16(Int16(60)) & 127)..=(Int16(var_1747770243692_1344) & 127) : (var_1747770243692_790 | 1));
                var_1747770243692_346
            } else { // block id: 1382
                ();
                UInt8(240) >= var_1747770243692_1222
            }) {
                var_1747770243692_852;
                var_1747770243692_790 <<= ((Int64(17)) & 7)
            }, Int8(try { // block id: 1414
                ();
                var_1747770243692_852;
                Int8(-59) ^ var_1747770243692_46
            } catch (e: Exception) { // block id: 1420
                ();
                var_1747770243692_36;
                Int8(116)
            } finally { // block id: 1424
                var_1747770243692_1080
            }))
    }
}

public interface Interface_1747770243692_99 <: Interface_1747770243692_100 {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1857
        let var_1747770243692_1886: Option<Option<Unit>> = Option<Option<Unit>>.None;
        var var_1747770243692_1892: Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)> = ((UInt8(68), UInt32(UInt16(171)),
            "Kh`\"#@cE=D", Int8(46), (UInt64(UInt8(22)) as Option<Unit>), Int16(67)) as (Option<Unit>, Option<Option<Unit>>, 
            Unit, Int8));
        ((try { // block id: 1861
            var_1747770243692_1131
        } catch (e: Exception) { // block id: 1863
            (Option<Unit>.None, Option<Option<Unit>>.None, (), var_1747770243692_46)
        } as (Option<Unit>, Option<Option<Unit>>, Unit, Int8)) ?? ((var_1747770243692_1880 ??
            Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
            (var_1747770243692_312, var_1747770243692_1886, (), var_1747770243692_1080))) ?? (var_1747770243692_1892 ??
            var_1747770243692_1131)))
    }
}

public sealed interface Interface_1747770243692_98<T0, T1> <: Interface_1747770243692_99 & Interface_1747770243692_101 {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1747
        var var_1747770243692_1749: Array<Option<UInt32>> = [(UInt32(UInt8(69)) as UInt32),
            Option<UInt32>.Some(UInt32(UInt32(Int32(75)))), Option<UInt32>.None, Option<UInt32>.Some(UInt32(Int32(-29))),
            Option<UInt32>.Some(UInt32(254)), Option<UInt32>.Some(UInt32(Int32(UInt32(254)))),
            (((Int32(Int32(UInt8(68))) & 127)..(Int32(Int32(UInt16(11))) & 127) : (Int64(Int32(-6)) | 1)) as UInt32),
            Option<UInt32>.Some(UInt32(4)),
            ([([UInt64(164), UInt64(213), UInt64(29), UInt64(105), UInt64(145), UInt64(81), UInt64(82), UInt64(239),
            UInt64(127), UInt64(37)] as UInt32), Option<UInt32>.None, Option<UInt32>.Some(UInt32(121)),
            Option<UInt32>.None, Option<UInt32>.Some(UInt32(119)), Option<UInt32>.None, Option<UInt32>.Some(UInt32(254)),
            (((UInt8(166), UInt32(15), "a'WJ]QAjc%", Int8(2), Option<Option<Unit>>.None, Int16(-107)), Option<UInt32>
                .None, ((Int8(117), true, Option<Option<Unit>>.None, Int16(117)), (UInt8(31), UInt32(35), "\"C(uZLN}$#",
                    Int8(-86), Option<Option<Unit>>.None, Int16(76)), Float32(122.0), false, Int8(-127), Int8(42),
                Float32(-75.0)), (), ((UInt16(UInt16(45)) & 127)..=(UInt16(UInt16(156)) & 127) : (Int64(-82) | 1)),
            UInt16(191), false, Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
                (Option<Unit>.None, Option<Option<Unit>>.None, (), Int8(-107)))) as UInt32),
            Option<UInt32>.Some(UInt32(134)), Option<UInt32>.None] as UInt32), Option<UInt32>.None];
        var_1747770243692_1749;
        try { // block id: 1847
            Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.None.getOrThrow()
        } finally { // block id: 1850
            (var_1747770243692_312, Option<Option<Unit>>.None, var_1747770243692_852, var_1747770243692_46)
        }
    }
}

public sealed interface Interface_1747770243692_103 <: Interface_1747770243692_98<UInt64, Int16> {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 2343
        var_1747770243692_2345;
        var_1747770243692_852;
        var_1747770243692_1131
    }
}

public sealed interface Interface_1747770243692_97<T0, T1> <: Interface_1747770243692_98<UInt64, Int16> &
    Interface_1747770243692_103 {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 2046
        try { // block id: 2048
            ((UInt32(var_1747770243692_1285) & 127)..(UInt32(UInt32(154)) & 127) : (Int64(-24) | 1))
        } finally { // block id: 2053
            if (true) {
                ((UInt32(UInt32(63)) & 127)..(UInt32(UInt32(192)) & 127) : (Int64(41) | 1))
            } else {
                var_1747770243692_2058
            }
        };
        var var_1747770243692_2073: UInt8 = UInt8(Int8(-115));
        let var_1747770243692_2093: Option<Option<Unit>> = (VArray<Unit, $8>({i => ()}) as Option<Unit>);
        var var_1747770243692_2144: ?Unit = ((Option<Unit>.None, Option<Option<Unit>>.None, (), Int8(UInt8(189))) as Unit);
        var var_1747770243692_2175: Int32 = Int32(57);
        var var_1747770243692_2188: Bool = true;
        let var_1747770243692_2245: Int8 = Int8(Int8(-112));
        (try { // block id: 2070
                (var_1747770243692_2073, UInt32(145), var_1747770243692_161, Int8(40), Option<Option<Unit>>.None,
                    var_1747770243692_1344);
                Option<Option<Option<Unit>>>.None;
                var_1747770243692_387
            } finally { // block id: 2083
                var_1747770243692_666 + var_1747770243692_666;
                (var_1747770243692_2073, var_1747770243692_1285, ###"J:e^sa8j9?"###, Int8(-110), var_1747770243692_2093,
                    Int16(-54))
            }, if (match (var_1747770243692_1555) {
                case caseVar_1747770243692_2110: (UInt8, UInt32, String, Int8, Option<Option<Unit>>, Int16) =>
                    var_1747770243692_2113;
                    false

                case _ => var_1747770243692_346
            }) { // block id: 2121
                VArray<Bool, $7>({i => false});
                ();
                var_1747770243692_139
            } else { // block id: 2132
                UInt16(121);
                if (false) {
                    Option<UInt32>.None
                } else {
                    var_1747770243692_139
                }
            }, ((Int8(88), false, Option<Option<Unit>>.Some(var_1747770243692_2144), Int16(22)), (Option<(UInt8, UInt32, 
                        String, Int8, Option<Option<Unit>>, Int16)>.Some(var_1747770243692_387) ?? (var_1747770243692_2073,
                    var_1747770243692_1285, "\"clZd:bq>%", var_1747770243692_1080, Option<Option<Unit>>.Some(
                        var_1747770243692_312), var_1747770243692_1344)), Float32(-120.0), true, var_1747770243692_1080,
                try { // block id: 2172
                    var_1747770243692_2175 /= ((Int32(-112)) | 1)
                    -Int8(-118)
                } finally { // block id: 2180
                    var_1747770243692_46 * Int8(-27)
                }, try { // block id: 2185
                    var_1747770243692_2188 &&= true
                    Float32(-43.0) * var_1747770243692_2194
                } catch (_) { // block id: 2196
                    ();
                    var_1747770243692_845++;
                    Float32(8.0)
                }), try (resource = Class_1747770243692_92()) { // block id: 2202
                var_1747770243692_852;
                var_1747770243692_1340
            } catch (_) { // block id: 2205
                var_1747770243692_139;
                var_1747770243692_1285 %= ((var_1747770243692_1285) | 1)
            } finally { // block id: 2210
                if (false) {
                    var_1747770243692_1208
                } else {
                    ((Int8(Int8(-97)) & 127)..=(Int8(var_1747770243692_1080) & 127) : (var_1747770243692_790 | 1))
                };
                var_1747770243692_36
            }, if (var_1747770243692_2188) { // block id: 2221
                if (true) {
                    ((UInt16(UInt16(6)) & 127)..(UInt16(UInt16(70)) & 127) : (Int64(100) | 1))
                } else {
                    ((UInt16(var_1747770243692_2227) & 127)..=(UInt16(UInt16(232)) & 127) : (Int64(-101) | 1))
                }
            } else if (([UInt8(56), UInt8(4), UInt8(89), UInt8(94), UInt8(49), UInt8(10), UInt8(70), UInt8(113),
                UInt8(87), UInt8(96)] is Interface_1747770243692_101)) { // block id: 2233
                var_1747770243692_810;
                ((UInt16(var_1747770243692_845) & 127)..(UInt16(UInt16(75)) & 127) : (var_1747770243692_790 | 1))
            } else { // block id: 2239
                var_1747770243692_346 ||= false
                (var_1747770243692_2245, false, var_1747770243692_2093, Int16(-128));
                var_1747770243692_2252
            }, match (if (true) { // block id: 2263
                var_1747770243692_1080--;
                Option<(UInt8, UInt32, String, Int8, Option<Option<Unit>>, Int16)>.Some(var_1747770243692_387);
                var var_1747770243692_2269: Range<Int16> = ((Int16(Int16(83)) & 127)..(Int16(Int16(-55)) & 127) : (Int64(30) |
                    1));
                var_1747770243692_2269
            } else { // block id: 2271
                const var_1747770243692_2274: Int16 = 18;
                ((Int16(var_1747770243692_2274) & 127)..(Int16(Int16(52)) & 127) : (var_1747770243692_790 | 1))
            }) {
                case caseVar_1747770243692_2280: Int32 =>
                    Option<Option<Option<Unit>>>.Some(Option<Option<Unit>>.Some(Option<Unit>.Some(())));
                    (var_1747770243692_2144, var_1747770243692_2093, (), var_1747770243692_2245);
                    var_1747770243692_845

                case caseVar_1747770243692_2294: ((UInt8, UInt32, String, Int8, Option<Option<Unit>>, Int16), Option<UInt32>, 
                        ((Int8, Bool, Option<Option<Unit>>, Int16), (UInt8, UInt32, String, Int8, Option<Option<Unit>>, 
                        Int16), Float32, Bool, Int8, Int8, Float32), Unit, Range<UInt16>, UInt16, Bool, Option<(Option<Unit>, 
                        Option<Option<Unit>>, Unit, Int8)>) => var_1747770243692_845 * UInt16(21)

                case _ =>
                    var_1747770243692_161;
                    var_1747770243692_845
            }, (Int8(Int8(-96)) is Rune), var_1747770243692_1555);
        try { // block id: 2309
            var var_1747770243692_2311: Array<UInt64> = [UInt64(251), UInt64(41), UInt64(141), UInt64(46), UInt64(150),
                UInt64(211), UInt64(207), UInt64(145), UInt64(6), UInt64(59)];
            var_1747770243692_2311;
            try { // block id: 2314
                if (false) {
                    r'b'
                } else {
                    var_1747770243692_365
                };
                [UInt8(114), UInt8(209), UInt8(183), UInt8(176), UInt8(195), UInt8(100), UInt8(220), UInt8(177),
                    UInt8(176), UInt8(117)];
                var_1747770243692_1880
            } catch (_) { // block id: 2321
                var_1747770243692_1880
            } finally { // block id: 2323
                (Option<Unit>.Some(()), var_1747770243692_2093, var_1747770243692_1340, Int8(98));
                var_1747770243692_1880
            };
            (var_1747770243692_2144, Option<Option<Unit>>.None, var_1747770243692_1340, Int8(-47))
        } catch (e: Exception) { // block id: 2336
            (var_1747770243692_312, var_1747770243692_2093, (), var_1747770243692_2245)
        }
    }
}

public interface Interface_1747770243692_96 <: Interface_1747770243692_97<Int64, Rune> {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 2458
        (try { // block id: 2461
            Option<Option<Option<Unit>>>.None
        } finally { // block id: 2463
            ();
            var var_1747770243692_2466: Option<Option<Option<Unit>>> = (VArray<Unit, $8>({i => ()}) as Option<Option<Unit>>);
            var_1747770243692_2466
        } ?? (Option<Option<Option<Unit>>>.None ?? Option<Option<Unit>>.Some(Option<Unit>.Some(var_1747770243692_36))));
        var_1747770243692_1131
    }
}

public sealed interface Interface_1747770243692_95<T0, T1, T2> <: Interface_1747770243692_96 &
    Interface_1747770243692_102<String> {
    func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1427
        let var_1747770243692_1431: Option<Option<Unit>> = (((UInt64(UInt64(Int16(17))) & 127)..=(UInt64(UInt64(235)) &
            127) : (Int64(98) | 1)) as Option<Unit>);
        let var_1747770243692_1442: (UInt32, Enum_1747770243692_22, Option<Option<Option<Unit>>>, Option<(Option<Unit>, 
            Option<Option<Unit>>, Unit, Int8)>, Range<Int64>) = (UInt32(252),
            Enum_1747770243692_22.enumValue_1747770243692_1446(
                [UInt64(UInt64(160)), UInt64(Int32(-38)), UInt64(Int32(91)), UInt64(16), UInt64(129), UInt64(UInt8(225)),
                    UInt64(11), UInt64(Int16(-20)), UInt64(UInt32(0)), UInt64(Int64(-115))], UInt32(Int8(Int8(61))),
                func_1747770243692_57,
                ((UInt8(UInt8(Int8(-51))) & 127)..(UInt8(UInt8(UInt8(126))) & 127) : (Int64(-95) | 1))),
            Option<Option<Option<Unit>>>.Some(
                (((UInt8(1), UInt32(8), ###"NE1:SO:Q'p"###, Int8(18), Option<Option<Unit>>.Some(Option<Unit>.None),
                        Int16(75)), Option<UInt32>.Some(UInt32(72)), ((Int8(-122), false, Option<Option<Unit>>.Some(
                                Option<Unit>.None), Int16(104)), (UInt8(106), UInt32(17), """
|t/s%
xW>Id
""", Int8(25), Option<Option<Unit>>
                                .None, Int16(-55)), Float32(-34.0), true, Int8(101), Int8(-35), Float32(12.0)), (), ((UInt16(UInt16(60)) &
                        127)..(UInt16(UInt16(252)) & 127) : (Int64(-106) | 1)), UInt16(81), true,
                    Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.Some(
                        (Option<Unit>.None, Option<Option<Unit>>.None, (), Int8(36)))) as Option<Unit>)), (((Int16(Int16(-77)) &
                127)..=(Int16(Int16(59)) & 127) : (Int64(114) | 1)) as (Option<Unit>, Option<Option<Unit>>, Unit, Int8)),
            ((Int64(Int64(96)) & 127)..=(Int64(Int64(-76)) & 127) : (Int64(-46) | 1)));
        let var_1747770243692_1533: UInt8 = UInt8(UInt8(UInt8(Int8(Int8(33)))));
        let var_1747770243692_1622: Array<Option<UInt32>> = [((UInt32(UInt16(30)),
            Enum_1747770243692_22.enumValue_1747770243692_563(Int16(-38), Option<Option<Unit>>.None, UInt64(155),
                [Option<UInt32>.Some(UInt32(215)), Option<UInt32>.Some(UInt32(143)), Option<UInt32>.None,
                    Option<UInt32>.Some(UInt32(212)), Option<UInt32>.Some(UInt32(116)), Option<UInt32>.Some(UInt32(170)),
                    Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.Some(UInt32(138))]), (((UInt16(UInt16(230)) &
                127)..(UInt16(UInt16(172)) & 127) : (Int64(-18) | 1)) as Option<Option<Unit>>), (((UInt64(UInt64(48)) &
                127)..(UInt64(UInt64(221)) & 127) : (Int64(-19) | 1)) as (Option<Unit>, Option<Option<Unit>>, Unit, 
                Int8)), ((Int64(Int64(-44)) & 127)..=(Int64(Int64(-105)) & 127) : (Int64(-26) | 1))) as UInt32),
            Option<UInt32>.Some(UInt32(UInt32(227))),
            ([UInt64(103), UInt64(86), UInt64(UInt32(99)), UInt64(73), UInt64(Int8(117)), UInt64(163),
            UInt64(Int64(-117)), UInt64(173), UInt64(185), UInt64(88)] as UInt32),
            ((r'4' as Option<Option<Unit>>) as UInt32),
            ((UInt8(Int8(39)), UInt32(UInt16(90)), ###" 1?qgFWA,d"###, Int8(UInt8(217)), Option<Option<Unit>>.Some(
                Option<Unit>.Some(())), Int16(8)) as UInt32),
            (Option<Option<Unit>>.Some((Option<Unit>.None as Unit)) as UInt32), (Float64(-21.0) as UInt32),
            Option<UInt32>.Some(UInt32(249)), Option<UInt32>.None, Option<UInt32>.Some(UInt32(146))];
        Enum_1747770243692_22.enumValue_1747770243692_563(var_1747770243692_1344, var_1747770243692_1431,
            match (try { // block id: 1440
                var_1747770243692_1442;
                var_1747770243692_1431;
                ((var_1747770243692_1533, var_1747770243692_1285, """
}mT\"d
WUH/6
""", var_1747770243692_1080,
                        Option<Option<Unit>>.Some(var_1747770243692_312), Int16(-97)), Option<UInt32>.None,
                    var_1747770243692_810, var_1747770243692_36, ((UInt16(UInt16(49)) & 127)..=(UInt16(var_1747770243692_845) &
                        127) : (Int64(-72) | 1)), var_1747770243692_845, var_1747770243692_346, var_1747770243692_1555)
            } catch (_) { // block id: 1557
                var_1747770243692_845 <<= ((UInt16(3)) & 7)
                var_1747770243692_852;
                var var_1747770243692_1563: ((UInt8, UInt32, String, Int8, Option<Option<Unit>>, Int16), Option<UInt32>, 
                    ((Int8, Bool, Option<Option<Unit>>, Int16), (UInt8, UInt32, String, Int8, Option<Option<Unit>>, 
                    Int16), Float32, Bool, Int8, Int8, Float32), Unit, Range<UInt16>, UInt16, Bool, Option<(Option<Unit>, 
                    Option<Option<Unit>>, Unit, Int8)>) = ((UInt8(Int8(Int8(1))), UInt32(Int16(Int8(25))),
                        """
p=k\\i
~ab5[
""", Int8(UInt8(96)), (Option<Unit>.None as Option<Unit>), Int16(58)), (((UInt8(UInt8(64)) &
                        127)..=(UInt8(UInt8(84)) & 127) : (Int64(-30) | 1)) as UInt32), ((Int8(3), false,
                            Option<Option<Unit>>.Some(Option<Unit>.Some(())), Int16(-108)), (UInt8(Int8(97)), UInt32(251),
                            "zX.X\\%!s'M", Int8(-99), Option<Option<Unit>>.Some(Option<Unit>.None), Int16(Int8(-111))),
                        Float32(Float32(Float32(-27.0))), (UInt8(Int8(-57)) is (Float64, String, (Class_1747770243692_92, 
                            Option<UInt32>), Float64, Unit, Int32, Float64, Option<Unit>, Option<Unit>)), Int8(125),
                        Int8(57), Float32(-43.0)), (), ((UInt16(UInt16(24)) & 127)..=(UInt16(UInt16(196)) & 127) : (Int64(22) |
                        1)), UInt16(UInt8(43)), (Option<Option<Unit>>.Some(Option<Unit>.None) is Range<UInt16>), Option<(Option<Unit>, 
                            Option<Option<Unit>>, Unit, Int8)>.None);
                var_1747770243692_1563
            }) {
                case _ =>
                    var_1747770243692_1340;
                    -var_1747770243692_269
            }, var_1747770243692_1622);
        let var_1747770243692_1712: ?(Option<Unit>, Option<Option<Unit>>, Unit, Int8) = ((UInt8(67), UInt32(20),
            " ?dHKJ`7K$", Int8(UInt8(175)), (Int16(UInt16(106)) as Option<Unit>), Int16(UInt16(158))) as (Option<Unit>, 
            Option<Option<Unit>>, Unit, Int8));
        try { // block id: 1709
            (var_1747770243692_1712 ?? var_1747770243692_1131)
        } finally { // block id: 1726
            let var_1747770243692_1728: Range<UInt8> = ((UInt8(UInt8(245)) & 127)..=(UInt8(UInt8(15)) & 127) : (Int64(-59) |
                1));
            var_1747770243692_1728;
            (Option<UInt64>.None ?? UInt64(158));
            (var_1747770243692_1712 ?? var_1747770243692_1131)
        }
    }
}

public open class Class_1747770243692_92 <: Interface_1747770243692_95<Int32, Option<Option<Unit>>, UInt8> & Interface_1747770243692_96 & Resource {
    @Frozen
    public init() { // block id: 94

    }

    let var_1747770243692_561: Enum_1747770243692_22 = Enum_1747770243692_22.enumValue_1747770243692_563(Int16(-18),
        Option<Option<Unit>>.None, UInt64(223),
        [Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None,
            Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None]);
    protected var var_1747770243692_1997: Option<UInt32> = Option<UInt32>.None;
    private let var_1747770243692_2008: Unit = ();
    prop var_1747770243692_2020: Array<Option<UInt32>> { // block id: 2021
        get() { // block id: 2023
            ();
            [((((UInt16(UInt16(152)) & 127)..=(UInt16(UInt16(187)) & 127) : (Int64(73) | 1)) as Option<Option<Unit>>) as UInt32),
                Option<UInt32>.None, Option<UInt32>.None,
                ((Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.None as Option<Option<Unit>>) as UInt32),
                Option<UInt32>.None, (((UInt8(UInt8(208)) & 127)..(UInt8(UInt8(146)) & 127) : (Int64(56) | 1)) as UInt32),
                (Int16(33) as UInt32), Option<UInt32>.None, Option<UInt32>.None, (Float64(Float64(78.0)) as UInt32)]
        }
    }
    public open override func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1906
        let var_1747770243692_1920: ?Array<Option<UInt32>> = (Option<Unit>.Some(()) as Array<Option<UInt32>>);
        let var_1747770243692_1938: Option<UInt32> = Option<UInt32>.None;
        var var_1747770243692_1944: Option<UInt32> = (VArray<Bool, $7>(repeat: ((Int8(85), true, Option<Option<Unit>>
                    .None, Int16(-127)) is (Class_1747770243692_92, Option<UInt32>))) as UInt32);
        (try { // block id: 1913
            var_1747770243692_36;
            "YkLq1Aeq5I";
            Option<Array<Option<UInt32>>>.None
        } catch (_) { // block id: 1917
            ();
            var_1747770243692_1920
        } ?? (try { // block id: 1926
            var_1747770243692_790;
            var var_1747770243692_1930: Int32 = Int32(64);
            var_1747770243692_1930 /= ((Int32(-64)) | 1)
            Option<Array<Option<UInt32>>>.Some(
                [var_1747770243692_139, var_1747770243692_139, var_1747770243692_1938, Option<UInt32>.None,
                    var_1747770243692_1938, Option<UInt32>.None, var_1747770243692_1944, var_1747770243692_1938,
                    var_1747770243692_1997, Option<UInt32>.Some(var_1747770243692_1285)])
        } catch (_) { // block id: 2001
            (Option<Unit>.Some(var_1747770243692_852), Option<Option<Unit>>.Some(
                    Option<Unit>.Some(var_1747770243692_2008)), var_1747770243692_36, var_1747770243692_1080);
            Option<Array<Option<UInt32>>>.None
        } ?? (Option<Array<Option<UInt32>>>.None ?? var_1747770243692_2020)));
        var_1747770243692_1131
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

public open class Class_1747770243692_213 <: Class_1747770243692_92 & Interface_1747770243692_102<String> {
    public init() { // block id: 215

    }

    @Frozen
    public static prop var_1747770243692_218: (Class_1747770243692_92, Option<UInt32>) { // block id: 219
        get() { // block id: 221
            ();
            (Class_1747770243692_213(), Option<UInt32>.None)
        }
    }
    public open override func func_1747770243692_295(namedParam_1747770243692_296!: Option<Unit>,
        namedParam_1747770243692_297!: Option<UInt32>, namedParam_1747770243692_298!: Rune,
        namedParam_1747770243692_299!: UInt32): (Option<Unit>, Option<Option<Unit>>, Unit, Int8) { // block id: 1741
        ((((UInt64(UInt64(9)) & 127)..(UInt64(UInt64(101)) & 127) : (Int64(71) | 1)) as (Option<Unit>, Option<Option<Unit>>, 
            Unit, Int8)) ?? var_1747770243692_1131)
    }

    static init() {
    }
}

@Frozen
public func func_1747770243692_18(param_1747770243692_19: Float64): Option<Option<Unit>> { // block id: 20
    const var_1747770243692_33: Unit = ();
    let var_1747770243692_133: UInt32 = UInt32(UInt16(UInt16(106)));
    let var_1747770243692_191: (Float64, String, (Class_1747770243692_92, Option<UInt32>), Float64, Unit, Int32, 
        Float64, Option<Unit>, Option<Unit>) = (Float64(Float64(58.0)), "oD`>Vx9M9^", (Class_1747770243692_92(), (Class_1747770243692_92() as UInt32)),
        Float64(-109.0), (), Int32(106), Float64(-68.0), (Int32(UInt16(87)) as Unit), (Int8(UInt8(Int8(-127))) as Unit));
    func func_1747770243692_105<T0, T1>(param_1747770243692_106: UInt64,
        optionalParam_1747770243692_107!: (Int32) -> Unit = func_1747770243692_57,
        optionalParam_1747770243692_111!: (Option<Unit>, Option<Option<Unit>>, Unit, Int8) = (Option<Unit>.Some(()), Option<Option<Unit>>
                .None, (), Int8(-108)),
        optionalParam_1747770243692_118!: (Int16, Int8) -> Int32 = func_1747770243692_63<UInt64>): Class_1747770243692_92 { // block id: 123
        UInt32(((Option<UInt32>.None ?? var_1747770243692_133) | match (var_1747770243692_139) {
            case caseVar_1747770243692_144: Int8 => var_1747770243692_133

            case _ => var_1747770243692_133
        }));
        const var_1747770243692_155: Float32 = 82.0;
        var var_1747770243692_183: Class_1747770243692_92 = Class_1747770243692_92();
        try { // block id: 152
            match (var_1747770243692_155) {
                case 25.0 => var_1747770243692_161

                case _ =>
                    var var_1747770243692_167: UInt16 = UInt16(160);
                    var_1747770243692_167;
                    "D[R*b||xgL"
            };
            var loopTimeVar_1747770243692_178: Int = 0;
            do {
                loopTimeVar_1747770243692_178++;
                if (false) {
                    Option<UInt32>.None
                } else {
                    Option<UInt32>.None
                }
            } while ((false) && loopTimeVar_1747770243692_178 < 100);
            (var_1747770243692_183, var_1747770243692_139)[0]
        } finally { // block id: 187
            var_1747770243692_191[4];
            Class_1747770243692_213.var_1747770243692_218;
            let var_1747770243692_229: ((Class_1747770243692_92, Option<UInt32>), (Option<Unit>, Option<Option<Unit>>, 
                Unit, Int8), Rune, Class_1747770243692_92, Int64, String, Rune, Float32) = ((Class_1747770243692_92(), (((Float64(-105.0),
                        "';NO5kI`:1", (Class_1747770243692_213(), Option<UInt32>.None), Float64(-86.0), (), Int32(85),
                        Float64(32.0), Option<Unit>.Some(()), Option<Unit>.Some(())) as Unit) as UInt32)), (Option<Unit>
                        .Some(()), ((() as UInt32) as Option<Unit>), (), Int8(-87)), r'Y', Class_1747770243692_213(),
                Int64(Int32(-70)), """
G.5%c
\"VW0q
""", r'D', Float32(33.0));
            var_1747770243692_229[3]
        }
    };

    let var_1747770243692_465: Array<Option<UInt32>> = [([UInt64(UInt64(45)), UInt64(177), UInt64(199), UInt64(208),
        UInt64(UInt64(101)), UInt64(118), UInt64(UInt8(141)), UInt64(131), UInt64(Int16(-102)), UInt64(33)] as UInt32),
        (Float32(35.0) as UInt32), (UInt16(UInt16(79)) as UInt32), Option<UInt32>.Some(UInt32(UInt16(131))),
        Option<UInt32>.None, Option<UInt32>.Some(UInt32(83)), (false as UInt32), Option<UInt32>.None,
        ((Float64(-29.0), ###"\\nZjIT4j*Y"###, (Class_1747770243692_92(), Option<UInt32>.Some(UInt32(127))), Float64(91.0),
        (), Int32(108), Float64(Float32(33.0)), Option<Unit>.None, (UInt16(71) as Unit)) as UInt32),
        (Class_1747770243692_213() as UInt32)];
    func func_1747770243692_25<T0, T1>(): Enum_1747770243692_22 { // block id: 26
        var var_1747770243692_53: Int16 = Int16(-107);
        (try { // block id: 31
                var_1747770243692_33;
                var_1747770243692_36;
                Option<Unit>.None
            } catch (e: Exception) { // block id: 39
                Option<Unit>.Some(var_1747770243692_33)
            }, (var_1747770243692_46, false, var_1747770243692_50, var_1747770243692_53)[2], (var_1747770243692_81 |>
                func_1747770243692_57), -Int8(15))[2];
        func_1747770243692_63<UInt64>(Int16((Int16(109) | Int16(-44))));
        let var_1747770243692_286: (Option<Unit>, Option<Option<Unit>>, Unit, Int8) = ((r'C' as Unit), (Int64(-39) as Option<Unit>),
            (), Int8(88));
        func_1747770243692_105<Int16, Class_1747770243692_92>(
            UInt64(155) % ((var_1747770243692_269) | 1),
            optionalParam_1747770243692_118: {
                lambdaParameter_1747770243692_273: Int16, lambdaParameter_1747770243692_274: Int8 =>
                    let var_1747770243692_428: ?Unit = (UInt8(Int8(Int8(Int8(-17)))) as Unit);
                    func func_1747770243692_279<T0, T1>(): (Int32, Float64, (Float64, String, (Class_1747770243692_92, 
                        Option<UInt32>), Float64, Unit, Int32, Float64, Option<Unit>, Option<Unit>)) { // block id: 280
                        func_1747770243692_105<Int16, Class_1747770243692_92>(UInt64(var_1747770243692_46),
                            optionalParam_1747770243692_111: var_1747770243692_286).func_1747770243692_295(
                            namedParam_1747770243692_296: match (Int64(-18)) {
                                case 75 | -77 | -34 | -65 =>
                                    if (var_1747770243692_332) {
                                        Option<Unit>.Some(var_1747770243692_36)
                                    } else {
                                        var_1747770243692_312
                                    }

                                case 17 | -41 | -116 | 62 => var_1747770243692_312

                                case caseVar_1747770243692_423: Option<UInt32> =>
                                    if (var_1747770243692_346) {
                                        var_1747770243692_428
                                    } else {
                                        Option<Unit>.Some(var_1747770243692_33)
                                    }

                                case 92 | 34 | -40 =>
                                    if (true) {
                                        Option<Unit>.None
                                    } else {
                                        var_1747770243692_312
                                    }

                                case _ =>
                                    (Class_1747770243692_213(), Option<UInt32>.None);
                                    if (var_1747770243692_346) {
                                        var_1747770243692_428
                                    } else {
                                        var_1747770243692_312
                                    }
                            }, namedParam_1747770243692_297: var_1747770243692_465[0],
                            namedParam_1747770243692_298: var_1747770243692_365,
                            namedParam_1747770243692_299: UInt32(198) / ((UInt32(78)) | 1));
                        var_1747770243692_523[1]
                    };
                    func_1747770243692_279<Int16, Float64>()[0]
            }
        ).var_1747770243692_561
    };

    let var_1747770243692_610: Float32 = Float32(Float32(-17.0));
    match (func_1747770243692_25<Range<Int8>, Range<Int8>>()) {
        case caseVar_1747770243692_584 =>
            var_1747770243692_36;
            var_1747770243692_81 &= Int32(82)

        case _: Range<UInt32> =>
            var_1747770243692_523;
            var_1747770243692_36;
            var var_1747770243692_597: UInt8 = UInt8(UInt8(217));
            var_1747770243692_597 -= UInt8(227)

        case _ =>
            if (false) {
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.None
            } else {
                Option<(Option<Unit>, Option<Option<Unit>>, Unit, Int8)>.None
            };
            var_1747770243692_610 * var_1747770243692_610;
            var_1747770243692_346 ||= var_1747770243692_332
    };
    var var_1747770243692_628: Range<Int16> = ((Int16(Int16(-56)) & 127)..=(Int16(Int16(Int8(-93))) & 127) : (Int64(UInt8(UInt8(UInt8(181)))) |
        1));
    const var_1747770243692_649: Int = 109;
    if ((try { // block id: 620
        ();
        var var_1747770243692_624: UInt = UInt64(11);
        var_1747770243692_624 /= ((UInt64(88)) | 1)
        var_1747770243692_628
    } finally { // block id: 637
        ((Int64(Int64(53)) & 127)..(Int64(Int64(28)) & 127) : (Int64(-83) | 1));
        if (var_1747770243692_346) {
            var_1747770243692_628
        } else {
            ((Int16(var_1747770243692_644) & 127)..(Int16(Int16(-80)) & 127) : (var_1747770243692_649 | 1))
        }
    } is (Float64, String, (Class_1747770243692_92, Option<UInt32>), Float64, Unit, Int32, Float64, Option<Unit>, Option<Unit>))) { // block id: 651

    }
    try { // block id: 653
        var_1747770243692_644;
        var_1747770243692_50
    } finally { // block id: 656
        (Option<Option<Option<Unit>>>.None ?? var_1747770243692_50)
    }
}

main(): Int64 {
    try {
        var var_1747770243692_679: Int16 = Int16(Int8(-107));
        (((var_1747770243692_666 |> func_1747770243692_18) ?? try { // block id: 669
            ();
            var_1747770243692_36;
            var_1747770243692_673
        } finally { // block id: 675
            Option<Unit>.None
        }) ?? (var_1747770243692_679 &= (Option<Int16>.None ?? var_1747770243692_679)));
        let var_1747770243692_707: Option<Int64> = (((Class_1747770243692_92(), (UInt64(244) as UInt32)), (Option<Unit>
                    .Some(()), (Float32(-93.0) as Option<Unit>), (), Int8(Int8(-70))), r'8', Class_1747770243692_92(),
            Int64(UInt32(UInt8(22))), ###"6u'sAq11p8"###, r't', Float32(24.0)) as Int64);
        let var_1747770243692_747: VArray<Int64, $7> = [Int64(-86), Int64(83), Int64(-1), Int64(118), Int64(79),
            Int64(-69), Int64(-50)];
        const var_1747770243692_757: Int = -35;
        ((Option<Array<Option<Int64>>>.None ?? [Option<Int64>.None, Option<Int64>.Some(Int64(-88)),
            var_1747770243692_707, var_1747770243692_707, Option<Int64>.Some(Int64(108)), var_1747770243692_707,
            var_1747770243692_707, var_1747770243692_736, Option<Int64>.None, var_1747770243692_736])[5] ?? [var_1747770243692_747,
            VArray<Int64, $7>({i => Int64(-113)}), var_1747770243692_747, var_1747770243692_747,
            VArray<Int64, $7>({i => Int64(23)}), var_1747770243692_747, VArray<Int64, $7>({i => Int64(-70)}),
            var_1747770243692_781, VArray<Int64, $7>(repeat: var_1747770243692_757), var_1747770243692_747][7][3])
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1747770243692_679 * var_1747770243692_679), 64)
        crcCheck.updateBuffer(UInt64(var_1747770243692_757 * var_1747770243692_757), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
