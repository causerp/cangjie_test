/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt

public var var_1701590203077_19 : Array<Float64> = [Float64(-48.0), Float64(-95.0), Float64(81.0), Float64(-85.0), Float64(-92.0), Float64(-42.0), Float64(-123.0), Float64(8.0), Float64(10.0), Float64(78.0)]
public let var_1701590203077_65 : Float32 = Float32(Float32(65.0))
const var_1701590203077_94 : Bool = true
public const var_1701590203077_126 : Unit = ()
var var_1701590203077_166 : UInt8 = UInt8(UInt8(Int8(UInt8(UInt8(149)))))
var var_1701590203077_260 : Int32 = Int32(-120)
var var_1701590203077_306 : Class_1701590203077_302<Class_1701590203077_208, Rune> = Class_1701590203077_302<Class_1701590203077_208, Rune>()
let var_1701590203077_333 : Class_1701590203077_319 = Class_1701590203077_319()
let var_1701590203077_359 : Class_1701590203077_208 = Class_1701590203077_287()
public var var_1701590203077_377 : Bool = (Class_1701590203077_319() is UInt16)
let var_1701590203077_381 : Range<Int16> = ((Int16(Int16(Int16(Int16(-44))))&127)..(Int16(Int16(UInt8(UInt8(UInt8(75)))))&127):(Int64(Int32(UInt16(218)))|1))
public var var_1701590203077_396 : Int16 = Int16(63)
let var_1701590203077_568 : VArray<Int64, $3> = [Int64(-46), Int64(UInt8(UInt8(92))), Int64(-38)]
let var_1701590203077_604 : Interface_1701590203077_215 = Class_1701590203077_287()
public var var_1701590203077_826 : (Range<Int16>, Int64, Int8, Range<Int32>) = (((Int16(Int16(UInt16(201)))&127)..(Int16(Int16(45))&127):(Int64(Int8(29))|1)), Int64(106), Int8(81), ((Int32(Int32(-123))&127)..=(Int32(Int32(Int16(-103)))&127):(Int64(-95)|1)))
public var var_1701590203077_849 : Range<UInt8> = ((UInt8(UInt8(107))&127)..(UInt8(UInt8(168))&127):(Int64(-101)|1))
public const func func_1701590203077_47(optionalParam_1701590203077_48 ! : Int16 = -65) : String { // block id: 50
    "4m4ymP>'h\""
}

public const func func_1701590203077_39(namedParam_1701590203077_40 ! : String, optionalParam_1701590203077_41 ! : String = ###"Bzk-D<2RH<"###, optionalParam_1701590203077_43 ! : Int32 = -30) : Unit { // block id: 45
    func_1701590203077_47();
    ()
}

public const func func_1701590203077_35(param_1701590203077_36 : Float32) : Unit { // block id: 37
    func_1701590203077_39(namedParam_1701590203077_40 : "0p:r6J~\\4/", optionalParam_1701590203077_41 : func_1701590203077_47(optionalParam_1701590203077_48 : -83), optionalParam_1701590203077_43 : 103)
}

public const func func_1701590203077_129<T0>(namedParam_1701590203077_130 ! : UInt16, optionalParam_1701590203077_131 ! : Unit = (), namedParam_1701590203077_133 ! : Int16, optionalParam_1701590203077_134 ! : Int8 = 70) : Unit { // block id: 136

}

const func func_1701590203077_122(namedParam_1701590203077_123 ! : Int32) : Unit { // block id: 124
    var_1701590203077_126;
    const var_1701590203077_139 : Int16 = 57;
    func_1701590203077_129<Bool>(namedParam_1701590203077_130 : 181, namedParam_1701590203077_133 : var_1701590203077_139)
}

public open class Class_1701590203077_173 {
    public init() { // block id: 175

    }
;
    private static let var_1701590203077_237 : (Float32, UInt16, Unit, Range<Int16>, Bool, UInt8, Range<Int8>, Interface_1701590203077_215) = (Float32(-25.0), UInt16(235), (), ((Int16(Int16(-83))&127)..(Int16(Int16(-106))&127):(Int64(39)|1)), true, UInt8(241), ((Int8(Int8(-128))&127)..=(Int8(Int8(-121))&127):(Int64(-10)|1)), Class_1701590203077_208());
    private static const var_1701590203077_264 : Int64 = 12;
    public static var var_1701590203077_294 : Class_1701590203077_287 = Class_1701590203077_287();
    public static prop var_1701590203077_348 : Interface_1701590203077_213 { // block id: 349
        get() { // block id: 351
            Class_1701590203077_287()
        }

    };
    public static func func_1701590203077_217(namedParam_1701590203077_218 ! : (Int16) -> String, optionalParam_1701590203077_221 ! : UInt64 = UInt64(UInt8(Int8(17))), namedParam_1701590203077_225 ! : Float32) : Class_1701590203077_208 { // block id: 226
        const var_1701590203077_267 : UInt8 = 149;
        if ((Option<(Float32, UInt16, Unit, Range<Int16>, Bool, UInt8, Range<Int8>, Interface_1701590203077_215)>.None ?? var_1701590203077_237)[4]) { // block id: 254
            var loopTimeVar_1701590203077_270 : Int = 0;
            while ((false) && loopTimeVar_1701590203077_270 < 100 ) {
                loopTimeVar_1701590203077_270++;
                ((Int32(var_1701590203077_260)&127)..=(Int32(Int32(-29))&127):(var_1701590203077_264|1));
                var_1701590203077_267
            };
            var var_1701590203077_277 : Int8 = Int8(UInt8(Int8(UInt8(216))));
            if (true) { // block id: 273
                var_1701590203077_126;
                var_1701590203077_277 ^= var_1701590203077_277
            } else if (false) { // block id: 284

            }
        };
        if (var_1701590203077_294.var_1701590203077_297) { // block id: 299
            ();
            var_1701590203077_306.var_1701590203077_309
        };
        try { // block id: 312
            var var_1701590203077_315 : UInt32 = UInt32(172);
            var_1701590203077_315 ^= UInt32(180);
            var_1701590203077_333.var_1701590203077_336
        } finally { // block id: 343
            var var_1701590203077_356 : Interface_1701590203077_212 = Class_1701590203077_208();
            try { // block id: 345
                Class_1701590203077_302<Class_1701590203077_208, Rune>();
                var_1701590203077_348;
                Class_1701590203077_208()
            } catch (e: Exception) { // block id: 354
                var_1701590203077_356;
                var_1701590203077_359
            }
        }
    }
;
    public static prop var_1701590203077_459 : Interface_1701590203077_290<Array<Unit>, Int32> { // block id: 460
        get() { // block id: 462
            Int32(Int16(89));
            Class_1701590203077_287()
        }

    };
    static var var_1701590203077_558 : VArray<Int16, $1> = [Int16(29)];
    public static const var_1701590203077_597 : Bool = false;
    public static var var_1701590203077_715 : Range<UInt64> = ((UInt64(UInt64(55))&127)..=(UInt64(UInt64(102))&127):(Int64(8)|1));
    public static func func_1701590203077_178<T0, T1>(param_1701590203077_179 : (UInt16, Unit, Int16, Int8) -> Unit, param_1701590203077_185 : Rune, param_1701590203077_186 : (Int32) -> Unit, optionalParam_1701590203077_189 ! : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]) : UInt8 { // block id: 191
        let var_1701590203077_506 : VArray<Bool, $3> = [true, true, false];
        func func_1701590203077_193<T0, T1>(namedParam_1701590203077_194 ! : Range<UInt16>, optionalParam_1701590203077_195 ! : Int64 = Int64(-74), optionalParam_1701590203077_197 ! : (Int16) -> String = { lambdaParameter_1701590203077_200 : Int16 => "*ia{\\M&A72T" }) : (Range<Int16>, Int64, Int8, Range<Int32>) { // block id: 205
            const var_1701590203077_363 : UInt64 = 217;
            var var_1701590203077_468 : Interface_1701590203077_322 = Class_1701590203077_319();
            var var_1701590203077_491 : Interface_1701590203077_212 = Class_1701590203077_302<Class_1701590203077_208, Rune>();
            if (func_1701590203077_217(namedParam_1701590203077_218 : func_1701590203077_47, optionalParam_1701590203077_221 : var_1701590203077_363, namedParam_1701590203077_225 : var_1701590203077_65).func_1701590203077_367(namedParam_1701590203077_368 : var_1701590203077_459, namedParam_1701590203077_369 : ((Int8(Int8(16))&127)..(Int8(Int8(37))&127):(Int64(43)|1)), namedParam_1701590203077_370 : var_1701590203077_468, namedParam_1701590203077_371 : UInt8(6))) { // block id: 471
                let var_1701590203077_474 : Interface_1701590203077_327 = Class_1701590203077_319();
                (var_1701590203077_474 is Class_1701590203077_302<Class_1701590203077_208, Rune>);
                let var_1701590203077_483 : Range<Int16> = ((Int16(Int16(-27))&127)..(Int16(Int16(124))&127):(Int64(-99)|1));
                const var_1701590203077_487 : Int8 = 80;
                (var_1701590203077_468, Class_1701590203077_319(), (var_1701590203077_483, var_1701590203077_264, var_1701590203077_487, ((Int32(Int32(-95))&127)..=(Int32(Int32(86))&127):(Int64(-52)|1))), var_1701590203077_491, Class_1701590203077_287(), Class_1701590203077_287())[2];
                match (var_1701590203077_348) {
                    case _ => 
                        var_1701590203077_126
                    
                }
            } else if (var_1701590203077_506[0] || try { // block id: 510
                ();
                var var_1701590203077_513 : Array<UInt64> = [UInt64(UInt16(166)), UInt64(Int8(Int8(UInt8(190)))), UInt64(UInt64(103)), UInt64(Int16(73)), UInt64(Int32(Int16(33))), UInt64(57), UInt64(Int16(UInt8(10))), UInt64(UInt32(59)), UInt64(80), UInt64(UInt64(Int8(-27)))];
                var_1701590203077_513;
                var_1701590203077_377
            } catch (e: Exception) { // block id: 539
                var_1701590203077_377
            } finally { // block id: 541
                false
            }) { // block id: 543

            };
            (((Int16(try { // block id: 547
                Int16(-51) & Int16(58)
            } finally { // block id: 551
                Class_1701590203077_319();
                Float32(107.0);
                Int16(83)
            })&127)..(Int16(var_1701590203077_558[0])&127):(Int64(UInt8(133))|1)), var_1701590203077_568[2] - try { // block id: 577
                var_1701590203077_396 /= ((var_1701590203077_396) | 1);
                var_1701590203077_264 & Int64(-41)
            } catch (e: Exception) { // block id: 584
                Int64(96) ** UInt64(70)
            } finally { // block id: 588
                const var_1701590203077_592 : UInt16 = 107;
                var var_1701590203077_601 : Range<Int8> = ((Int8(Int8(-62))&127)..(Int8(Int8(40))&127):(Int64(-25)|1));
                (Float32(34.0), var_1701590203077_592, var_1701590203077_126, ((Int16(Int16(-109))&127)..=(Int16(Int16(-59))&127):(Int64(-110)|1)), var_1701590203077_597, UInt8(214), var_1701590203077_601, var_1701590203077_604);
                Int64(16)
            }, (var_1701590203077_597, Int8(-123), var_1701590203077_377)[1], try { // block id: 615
                var_1701590203077_568;
                ((Int32(Int32(-27))&127)..=(Int32(var_1701590203077_260)&127):(var_1701590203077_264|1))
            } catch (_) { // block id: 621
                Class_1701590203077_287();
                ();
                ((Int32(Int32(-54))&127)..(Int32(Int32(107))&127):(Int64(95)|1))
            } finally { // block id: 628
                let var_1701590203077_630 : Range<Int8> = ((Int8(Int8(-105))&127)..=(Int8(Int8(48))&127):(Int64(-80)|1));
                var_1701590203077_630;
                ((Int32(Int32(-53))&127)..(Int32(Int32(-88))&127):(Int64(-75)|1))
            })
        }
;
        var var_1701590203077_645 : Int8 = Int8(73);
        var var_1701590203077_650 : UInt8 = UInt8(UInt8(UInt8(205)));
        let var_1701590203077_656 : Bool = (VArray<Bool, $3>(repeat: (((Int16(Int16(-31))&127)..=(Int16(Int16(-112))&127):(Int64(-36)|1)) is Range<UInt8>)) is Array<Unit>);
        var var_1701590203077_689 : Range<UInt16> = ((UInt16(UInt16(Int16(Int8(-107))))&127)..=(UInt16(UInt16(Int16(UInt8(UInt8(208)))))&127):(Int64(UInt16(58))|1));
        func_1701590203077_193<Interface_1701590203077_212, VArray<Int16, $1>>(namedParam_1701590203077_194 : if (try { // block id: 638
            [UInt64(170), UInt64(124), UInt64(101), UInt64(253), UInt64(93), UInt64(226), UInt64(254), UInt64(108), UInt64(10), UInt64(119)];
            ();
            false
        } catch (_) { // block id: 642
            var_1701590203077_645 *= var_1701590203077_645;
            var_1701590203077_650 *= UInt8(192);
            var_1701590203077_656
        }) { // block id: 667
            VArray<Int64, $3>({ i => Int64(-115)});
            let var_1701590203077_676 : Range<UInt16> = ((UInt16(UInt16(Int8(-43)))&127)..=(UInt16(UInt16(215))&127):(Int64(Int16(Int8(Int8(-26))))|1));
            if (var_1701590203077_377) { ((UInt16(UInt16(106))&127)..=(UInt16(UInt16(235))&127):(Int64(52)|1)) } else { var_1701590203077_676 } 
        } else if (var_1701590203077_377) { // block id: 686
            ();
            var_1701590203077_689
        } else { // block id: 700
            var_1701590203077_126;
            ((UInt16(UInt16(35))&127)..=(UInt16(UInt16(148))&127):(Int64(-68)|1))
        }, optionalParam_1701590203077_197 : func_1701590203077_47);
        let var_1701590203077_736 : Array<UInt64> = [UInt64(91), UInt64(223), UInt64(34), UInt64(251), UInt64(25), UInt64(150), UInt64(115), UInt64(235), UInt64(245), UInt64(232)];
        try (resource = Class_1701590203077_319()) { // block id: 705
            var var_1701590203077_709 : (Range<UInt16>, Interface_1701590203077_326) = (((UInt16(UInt16(245))&127)..=(UInt16(UInt16(186))&127):(Int64(17)|1)), Class_1701590203077_319());
            var_1701590203077_709[0];
            var_1701590203077_715;
            var loopTimeVar_1701590203077_724 : Int64 = 0;
            while ((false) && loopTimeVar_1701590203077_724 < 100 ) {
                loopTimeVar_1701590203077_724++;

            }
        } catch (_) { // block id: 725
            Class_1701590203077_319();
            let var_1701590203077_733 : Interface_1701590203077_326 = Class_1701590203077_319();
            ((((UInt16(UInt16(246))&127)..(UInt16(UInt16(42))&127):(Int64(-7)|1)), var_1701590203077_733), var_1701590203077_736, Class_1701590203077_319(), (), Float32(25.0), r'o', UInt16(251), Class_1701590203077_287())[3];
            ()
        };
        let var_1701590203077_751 : (Interface_1701590203077_327, Range<UInt8>, Interface_1701590203077_215, ((Range<UInt16>, Interface_1701590203077_326), Array<UInt64>, Interface_1701590203077_328, Unit, Float32, Rune, UInt16, Interface_1701590203077_292), Int8) = (Class_1701590203077_319(), ((UInt8(UInt8(33))&127)..(UInt8(UInt8(220))&127):(Int64(-98)|1)), Class_1701590203077_208(), ((((UInt16(UInt16(237))&127)..(UInt16(UInt16(76))&127):(Int64(69)|1)), Class_1701590203077_319()), [UInt64(150), UInt64(65), UInt64(Int8(65)), UInt64(207), UInt64(40), UInt64(44), UInt64(Int16(10)), UInt64(196), UInt64(UInt64(210)), UInt64(Int32(-55))], Class_1701590203077_319(), (), Float32(Float32(Float32(-67.0))), r's', UInt16(180), Class_1701590203077_287()), Int8(UInt8(141)));
        match (var_1701590203077_751[3][3]) {
            case caseVar_1701590203077_789 => 
                var_1701590203077_126;
                var_1701590203077_126;
                UInt8(83)
            
            case () | () | () | () => 
                UInt8(99) / ((UInt8(45)) | 1)
            
            case _ => 
                UInt8(129)
            
        }
    }

}

sealed public interface Interface_1701590203077_215 {

}

sealed public interface Interface_1701590203077_214 <: Interface_1701590203077_215 {
    func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}

public interface Interface_1701590203077_213 <: Interface_1701590203077_214 {
    func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}

sealed public interface Interface_1701590203077_212 <: Interface_1701590203077_213 & Interface_1701590203077_215 {
    func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}

sealed public interface Interface_1701590203077_211 <: Interface_1701590203077_212 {
    func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}

public open class Class_1701590203077_208 <: Class_1701590203077_173 & Interface_1701590203077_211 {
    public init() { // block id: 210

    }
;
    let var_1701590203077_297 : Bool = true;
    public open override func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}


public interface Interface_1701590203077_291 <: Interface_1701590203077_215 {

}

sealed public interface Interface_1701590203077_292 {

}

public interface Interface_1701590203077_290<T0, T1> <: Interface_1701590203077_291 & Interface_1701590203077_292 {

}

public open class Class_1701590203077_287 <: Class_1701590203077_208 & Interface_1701590203077_212 & Interface_1701590203077_290<Array<Unit>, Int32> {
    public init() { // block id: 289

    }
;
    public open override func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

}

public open class Class_1701590203077_302<T0, T1> <: Class_1701590203077_173 & Interface_1701590203077_211 {
    public init() { // block id: 304

    }
;
    public var var_1701590203077_309 : Unit = ();
    public open override func func_1701590203077_367(namedParam_1701590203077_368 ! : Interface_1701590203077_290<Array<Unit>, Int32>, namedParam_1701590203077_369 ! : Range<Int8>, namedParam_1701590203077_370 ! : Interface_1701590203077_322, namedParam_1701590203077_371 ! : UInt8) : Bool { // block id: 372
        const var_1701590203077_399 : Int = -14;
        let var_1701590203077_404 : VArray<Int32, $9> = VArray<Int32, $9>({ i => Int32(-31)});
        var var_1701590203077_440 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
        var var_1701590203077_445 : Interface_1701590203077_328 = Class_1701590203077_319();
        try { // block id: 374
            if (var_1701590203077_377) { var_1701590203077_381 } else { ((Int16(Int16(-87))&127)..=(Int16(var_1701590203077_396)&127):(var_1701590203077_399|1)) } ;
            var_1701590203077_404[1];
            if (false) { // block id: 430
                true
            } else { // block id: 432
                var_1701590203077_126;
                Class_1701590203077_173();
                false
            }
        } catch (_) { // block id: 436
            var_1701590203077_440[1];
            match (var_1701590203077_445) {
                case _ => 
                    var var_1701590203077_452 : UInt8 = UInt8(62);
                    var_1701590203077_452 <<= ((UInt8(106)) & 7);
                    var_1701590203077_377
                
            }
        } finally { // block id: 456
            true
        }
    }

    static init() {
    }
}

sealed public interface Interface_1701590203077_322 {

}

sealed public interface Interface_1701590203077_328 {

}

sealed public interface Interface_1701590203077_329 {

}

public interface Interface_1701590203077_327 <: Interface_1701590203077_328 & Interface_1701590203077_329 {

}

public interface Interface_1701590203077_330 {

}

sealed public interface Interface_1701590203077_326 <: Interface_1701590203077_327 & Interface_1701590203077_330 {

}

sealed public interface Interface_1701590203077_325 <: Interface_1701590203077_326 {

}

sealed public interface Interface_1701590203077_331 {

}

public interface Interface_1701590203077_324 <: Interface_1701590203077_325 & Interface_1701590203077_331 {

}

public interface Interface_1701590203077_323 <: Interface_1701590203077_324 {

}

public open class Class_1701590203077_319 <: Interface_1701590203077_322 & Interface_1701590203077_323 & Resource {
    public init() { // block id: 321

    }
;
    prop var_1701590203077_336 : Class_1701590203077_208 { // block id: 337
        get() { // block id: 339
            ();
            ((UInt64(UInt64(1))&127)..=(UInt64(UInt64(53))&127):(Int64(-60)|1));
            Class_1701590203077_287()
        }

    }
    static init() {
    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

func func_1701590203077_118(param_1701590203077_119 : Range<UInt8>) : (Range<Int16>, Int64, Int8, Range<Int32>) { // block id: 120
    func_1701590203077_122(namedParam_1701590203077_123 : Int32(UInt16(UInt16(178))));
    func func_1701590203077_145(namedParam_1701590203077_146 ! : (Float32) -> Unit, optionalParam_1701590203077_149 ! : UInt64 = UInt64(40), optionalParam_1701590203077_151 ! : Int32 = Int32(-16), optionalParam_1701590203077_153 ! : Bool = (Float32(Float32(43.0)) is Range<UInt64>)) : UInt8 { // block id: 157
        var var_1701590203077_805 : (UInt16, Unit, Int16, Int8) -> Unit = func_1701590203077_129<Bool>;
        try { // block id: 160
            var_1701590203077_126;
            UInt8(134)
        } finally { // block id: 163
            var_1701590203077_126;
            var_1701590203077_166
        } + (Class_1701590203077_173.func_1701590203077_178<UInt64, Int16>(var_1701590203077_805, r'x', func_1701590203077_122))
    }
;
    const var_1701590203077_811 : UInt = 81;
    func_1701590203077_145(namedParam_1701590203077_146 : func_1701590203077_35, optionalParam_1701590203077_149 : var_1701590203077_811, optionalParam_1701590203077_153 : if (var_1701590203077_166 > var_1701590203077_166) { // block id: 817
        var_1701590203077_377
    } else { // block id: 819
        var var_1701590203077_822 : UInt16 = UInt16(9);
        var_1701590203077_822--;
        var_1701590203077_377
    });
    var_1701590203077_826
}

main(): Int64 {
    try {
        let var_1701590203077_24 : Unit = ();
        try { // block id: 17
            var_1701590203077_19
        } finally { // block id: 21
            UInt8(124);
            var_1701590203077_24;
            [Float64(-96.0), Float64(66.0), Float64(-57.0), Float64(-30.0), Float64(78.0), Float64(118.0), Float64(-9.0), Float64(-82.0), Float64(104.0), Float64(-114.0)]
        }[9];
        const var_1701590203077_84 : Bool = true;
        func func_1701590203077_29(namedParam_1701590203077_30 ! : Range<UInt8>, optionalParam_1701590203077_31 ! : Float32 = Float32(34.0)) : Int64 { // block id: 33
            Float32(87.0)|>func_1701590203077_35;
            var var_1701590203077_71 : UInt8 = UInt8(Int8(-55));
            var var_1701590203077_79 : Int64 = Int64(-13);
            var loopTimeVar_1701590203077_97 : Int = 0;
            var loopTimeVar_1701590203077_113 : Int = 0;
            [(var_1701590203077_65|>func_1701590203077_35), (), (var_1701590203077_71 *= UInt8(224)), (), var_1701590203077_24, (var_1701590203077_79 >>= ((Int64(108)) & 7)), while ((var_1701590203077_84) && loopTimeVar_1701590203077_97 < 100 ) {
                loopTimeVar_1701590203077_97++;
                break;
                var var_1701590203077_90 : Bool = (UInt16(169) is Float64);
                var_1701590203077_90 ||= var_1701590203077_94
            }, (), if (var_1701590203077_84) { // block id: 101
                var_1701590203077_79 -= Int64(36);
                ()
            } else if (false) { // block id: 107
                ()
            }, do {
                loopTimeVar_1701590203077_113++;

            } while ((false) && loopTimeVar_1701590203077_113 < 100 ) ][3];
            (if (true) { // block id: 844
                var_1701590203077_396 >>= ((var_1701590203077_396) & 7);
                var_1701590203077_849
            } else { // block id: 851
                Float32(125.0);
                if (true) { ((UInt8(UInt8(64))&127)..=(UInt8(UInt8(218))&127):(Int64(49)|1)) } else { ((UInt8(UInt8(163))&127)..(UInt8(UInt8(44))&127):(var_1701590203077_79|1)) } 
            }|>func_1701590203077_118)[1]
        }
;
        func_1701590203077_29(namedParam_1701590203077_30 : (((UInt8(UInt8(37))&127)..(UInt8(var_1701590203077_166)&127):(Int64(-33)|1)), Class_1701590203077_302<Class_1701590203077_208, Rune>())[0])
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1701590203077_166*var_1701590203077_166), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

// ASSERT: scan-1 sema_varray_captured

