/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

let var_1716809376082_85 : Enum_1716809376082_82 = Enum_1716809376082_82.enumValue_1716809376082_87(((UInt8(UInt8(250))&127)..=(UInt8(UInt8(254))&127):(Int64(-93)|1)), Class_1716809376082_6())
let var_1716809376082_154 : Range<Int8> = ((Int8(Int8(Int8(UInt8(69))))&127)..=(Int8(Int8(Int8(86)))&127):(Int64(-79)|1))
let var_1716809376082_181 : Unit = ()
let var_1716809376082_243 : (Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32)) = (((UInt64(UInt64(95))&127)..(UInt64(UInt64(158))&127):(Int64(0)|1)), ((() as (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)) as Int16), Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None, Class_1716809376082_6(), (r'9', r'j', Class_1716809376082_6(), Int64(-32), (Option<Int16>.None is Range<Int64>), (), Float32(Float32(Float32(-85.0)))))
let var_1716809376082_269 : UInt8 = UInt8(134)
public let var_1716809376082_276 : Unit = ()
var var_1716809376082_282 : Float32 = Float32(Float32(-63.0))
var var_1716809376082_340 : VArray<Bool, $3> = [false, false, false]
let var_1716809376082_361 : Enum_1716809376082_352 = Enum_1716809376082_352.enumValue_1716809376082_363(Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None, ((UInt16(UInt16(82))&127)..(UInt16(UInt16(UInt8(73)))&127):(Int64(Int16(87))|1)), Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None, Int32(23))
var var_1716809376082_415 : Int16 = Int16(Int16(UInt16(Int16(UInt16(190)))))
public var var_1716809376082_428 : Option<Range<Int16>> = Option<Range<Int16>>.None
var var_1716809376082_476 : Int8 = Int8(UInt8(210))
var var_1716809376082_565 : Enum_1716809376082_82 = Enum_1716809376082_82.enumValue_1716809376082_567(Int16(-56), ((Int16(Int16(57))&127)..(Int16(Int16(-102))&127):(Int64(-5)|1)), Int64(UInt64(66)), ###"Lp(A16<m!E"###)
let var_1716809376082_629 : Class_1716809376082_624<UInt64, Interface_1716809376082_9> = Class_1716809376082_624<UInt64, Interface_1716809376082_9>()
let var_1716809376082_650 : Interface_1716809376082_9 = Class_1716809376082_6()
public const var_1716809376082_655 : Rune = r'H'
const var_1716809376082_675 : Int32 = -11
var var_1716809376082_698 : UInt8 = UInt8(Int8(Int8(-14)))
public let var_1716809376082_725 : Range<UInt16> = ((UInt16(UInt16(132))&127)..=(UInt16(UInt16(77))&127):(Int64(-128)|1))
const var_1716809376082_728 : String = "?Vs/NBa{0vc"
public const var_1716809376082_783 : Unit = ()
public var var_1716809376082_830 : Bool = (Enum_1716809376082_480.enumValue_1716809376082_833((((UInt64(UInt64(129))&127)..=(UInt64(UInt64(149))&127):(Int64(-68)|1)), (Enum_1716809376082_82.enumValue_1716809376082_842 as Int16), Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None, Class_1716809376082_6(), (r'Z', r'3', Class_1716809376082_624<UInt64, Interface_1716809376082_9>(), Int64(2), false, (), Float32(-51.0)))) is Option<Int16>)
var var_1716809376082_861 : Class_1716809376082_624<UInt64, Interface_1716809376082_9> = Class_1716809376082_624<UInt64, Interface_1716809376082_9>()
public var var_1716809376082_871 : ?Bool = (UInt32(Int32(UInt8(115))) as Bool)
const var_1716809376082_890 : Int16 = -117
public const var_1716809376082_1008 : UInt32 = 114
public let var_1716809376082_1053 : ?(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) = Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None
public var var_1716809376082_1098 : Interface_1716809376082_9 = Class_1716809376082_6()
public const var_1716809376082_1111 : Byte = 253
public let var_1716809376082_1118 : Interface_1716809376082_11 = Class_1716809376082_6()
public const var_1716809376082_1127 : Int16 = 87
const var_1716809376082_1134 : Unit = ()
public let var_1716809376082_1148 : Int32 = Int32(Int16(Int8(Int8(0))))
public var var_1716809376082_1192 : ?Unit = (Option<UInt8>.None as Unit)
let var_1716809376082_1202 : VArray<Bool, $3> = [false, false, false]
public let var_1716809376082_1299 : ?Interface_1716809376082_11 = (((Int8(Int8(12))&127)..=(Int8(Int8(97))&127):(Int64(25)|1)) as Interface_1716809376082_11)
public var var_1716809376082_1330 : Option<Int16> = ((UInt8(UInt8(126)), false, Int32(UInt32(Int32(-59))), UInt8(Int8(Int8(37))), (((Int32(Int32(-29))&127)..=(Int32(Int32(97))&127):(Int64(-123)|1)) as Range<Int16>), (r'V', r'7', Class_1716809376082_6(), Int64(Int64(-63)), (Option<Option<Range<Int16>>>.None is Range<UInt64>), (), Float32(Float32(75.0))), UInt8(125), (([((Int64(Int64(32))&127)..(Int64(Int64(-42))&127):(Int64(30)|1)), ((Int64(Int64(32))&127)..=(Int64(Int64(42))&127):(Int64(-31)|1)), ((Int64(Int64(-54))&127)..(Int64(Int64(-8))&127):(Int64(-49)|1)), ((Int64(Int64(37))&127)..(Int64(Int64(-84))&127):(Int64(110)|1)), ((Int64(Int64(-47))&127)..=(Int64(Int64(124))&127):(Int64(-15)|1)), ((Int64(Int64(-57))&127)..(Int64(Int64(67))&127):(Int64(80)|1)), ((Int64(Int64(60))&127)..(Int64(Int64(23))&127):(Int64(-30)|1)), ((Int64(Int64(-125))&127)..(Int64(Int64(-41))&127):(Int64(76)|1)), ((Int64(Int64(24))&127)..(Int64(Int64(117))&127):(Int64(-103)|1)), ((Int64(Int64(-23))&127)..(Int64(Int64(-97))&127):(Int64(36)|1))] is Option<UInt8>) as Int16), (Int64(44) is Range<Int64>)) as Int16)
public let var_1716809376082_1374 : Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))> = Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None
public var var_1716809376082_1380 : ?Enum_1716809376082_352 = Option<Enum_1716809376082_352>.None
public var var_1716809376082_1385 : (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) = (UInt8(Int8(-119)), ((r'e' as (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)) is Int32), Int32(UInt16(55)), UInt8(UInt8(Int8(26))), Option<Range<Int16>>.None, (r'D', r'p', Class_1716809376082_6(), Int64(Int64(-85)), ((Int8(49) is Option<UInt8>) is Range<Int32>), (), Float32(-70.0)), UInt8(90), (((Int64(Int64(42))&127)..(Int64(Int64(24))&127):(Int64(25)|1)) as Int16), true)
public let var_1716809376082_1423 : Range<UInt32> = ((UInt32(UInt32(3))&127)..=(UInt32(UInt32(57))&127):(Int64(94)|1))
public interface Interface_1716809376082_11 {

}

public interface Interface_1716809376082_10 <: Interface_1716809376082_11 {
    func func_1716809376082_464(param_1716809376082_465 : Range<UInt16>, param_1716809376082_466 : String) : UInt8 { // block id: 467
        let var_1716809376082_504 : Int32 = Int32(22);
        let var_1716809376082_660 : Bool = false;
        let var_1716809376082_709 : Range<UInt16> = ((UInt16(UInt16(Int8(UInt8(176))))&127)..=(UInt16(UInt16(Int16(UInt8(Int8(-81)))))&127):(Int64(UInt16(UInt8(UInt8(55))))|1));
        (Option<UInt8>.Some(UInt8(var_1716809376082_476)) ?? match (if (true) { // block id: 484
            Enum_1716809376082_480.enumValue_1716809376082_486(Int64(-66))
        } else { // block id: 489
            var var_1716809376082_509 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'U', r't', Class_1716809376082_6((), Int16(-99), Option<Int16>.None), Int64(-19), false, (), Float32(Float32(-39.0)));
            let var_1716809376082_644 : Option<Int16> = ((UInt16(196) as Enum_1716809376082_352) as Int16);
            const var_1716809376082_666 : UInt16 = 113;
            let var_1716809376082_670 : Int64 = Int64(95);
            Enum_1716809376082_480.enumValue_1716809376082_491(Enum_1716809376082_352.enumValue_1716809376082_363(Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some((((UInt64(UInt64(115))&127)..(UInt64(UInt64(8))&127):(Int64(-89)|1)), Option<Int16>.None, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.Some((UInt8(117), false, var_1716809376082_504, UInt8(139), var_1716809376082_428, var_1716809376082_509, UInt8(162), var_1716809376082_644, true)), var_1716809376082_650, (r'z', var_1716809376082_655, Class_1716809376082_624<UInt64, Interface_1716809376082_9>(), Int64(14), var_1716809376082_660, var_1716809376082_181, Float32(80.0)))), ((UInt16(var_1716809376082_666)&127)..(UInt16(UInt16(254))&127):(var_1716809376082_670|1)), Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some(var_1716809376082_243), var_1716809376082_675), Option<Enum_1716809376082_352>.None)
        }) {
            case defaultValue => 
                var_1716809376082_269 >> ((UInt8(68)) & 7)
            
            case caseVar_1716809376082_686 => 
                UInt8(174)
            
            case defaultValue => 
                UInt8(0)
            
            case _ : VArray<Bool, $3> => 
                var_1716809376082_698 |= UInt8(234);
                ();
                UInt8(254)
            
            case _ => 
                var_1716809376082_709;
                ();
                UInt8(24)
            
        })
    }

}

public interface Interface_1716809376082_9 <: Interface_1716809376082_10 & Interface_1716809376082_11 {
    func func_1716809376082_464(param_1716809376082_465 : Range<UInt16>, param_1716809376082_466 : String) : UInt8 { // block id: 467
        let var_1716809376082_504 : Int32 = Int32(22);
        let var_1716809376082_660 : Bool = false;
        let var_1716809376082_709 : Range<UInt16> = ((UInt16(UInt16(Int8(UInt8(176))))&127)..=(UInt16(UInt16(Int16(UInt8(Int8(-81)))))&127):(Int64(UInt16(UInt8(UInt8(55))))|1));
        (Option<UInt8>.Some(UInt8(var_1716809376082_476)) ?? match (if (true) { // block id: 484
            Enum_1716809376082_480.enumValue_1716809376082_486(Int64(-66))
        } else { // block id: 489
            var var_1716809376082_509 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'U', r't', Class_1716809376082_6((), Int16(-99), Option<Int16>.None), Int64(-19), false, (), Float32(Float32(-39.0)));
            let var_1716809376082_644 : Option<Int16> = ((UInt16(196) as Enum_1716809376082_352) as Int16);
            const var_1716809376082_666 : UInt16 = 113;
            let var_1716809376082_670 : Int64 = Int64(95);
            Enum_1716809376082_480.enumValue_1716809376082_491(Enum_1716809376082_352.enumValue_1716809376082_363(Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some((((UInt64(UInt64(115))&127)..(UInt64(UInt64(8))&127):(Int64(-89)|1)), Option<Int16>.None, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.Some((UInt8(117), false, var_1716809376082_504, UInt8(139), var_1716809376082_428, var_1716809376082_509, UInt8(162), var_1716809376082_644, true)), var_1716809376082_650, (r'z', var_1716809376082_655, Class_1716809376082_624<UInt64, Interface_1716809376082_9>(), Int64(14), var_1716809376082_660, var_1716809376082_181, Float32(80.0)))), ((UInt16(var_1716809376082_666)&127)..(UInt16(UInt16(254))&127):(var_1716809376082_670|1)), Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some(var_1716809376082_243), var_1716809376082_675), Option<Enum_1716809376082_352>.None)
        }) {
            case defaultValue => 
                var_1716809376082_269 >> ((UInt8(68)) & 7)
            
            case caseVar_1716809376082_686 => 
                UInt8(174)
            
            case defaultValue => 
                UInt8(0)
            
            case _ : VArray<Bool, $3> => 
                var_1716809376082_698 |= UInt8(234);
                ();
                UInt8(254)
            
            case _ => 
                var_1716809376082_709;
                ();
                UInt8(24)
            
        })
    }

}

public open class Class_1716809376082_6 <: Interface_1716809376082_9 {
    public init() { // block id: 8

    }
;
    public init(param_1716809376082_561 : Int64, param_1716809376082_562 : Range<Int32>) { // block id: 563
        var_1716809376082_565
    }
;
    public init(param_1716809376082_517 : Unit, param_1716809376082_518 : Int16, param_1716809376082_519 : Option<Int16>) { // block id: 520
        var var_1716809376082_524 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'h', r'H', Class_1716809376082_6(Int64(UInt16(UInt16(249))), ((Int32(Int32(UInt16(222)))&127)..=(Int32(Int32(Int32(-119)))&127):(Int64(-85)|1))), Int64(Int32(-111)), (Option<Range<Int16>>.Some(((Int16(Int16(58))&127)..(Int16(Int16(100))&127):(Int64(122)|1))) is Range<UInt16>), (), Float32(123.0));
        var loopTimeVar_1716809376082_596 : Int = 0;
        do {
            loopTimeVar_1716809376082_596++;

        } while ((var_1716809376082_524[4]) && loopTimeVar_1716809376082_596 < 100 ) ;
        var var_1716809376082_598 : Array<UInt64> = [UInt64(27), UInt64(47), UInt64(244), UInt64(79), UInt64(Int64(UInt64(Int16(-69)))), UInt64(Int32(Int32(Int32(26)))), UInt64(137), UInt64(238), UInt64(27), UInt64(UInt8(139))];
        var_1716809376082_598;
        const var_1716809376082_620 : Int32 = 96;
        try { // block id: 618
            var_1716809376082_620
        } finally { // block id: 622
            var_1716809376082_629.var_1716809376082_632
        }
    }
;
    init(param_1716809376082_37 : Float64, optionalParam_1716809376082_38 ! : UInt8 = UInt8(237)) { // block id: 40
        const var_1716809376082_43 : Int32 = -23;
        Int32(var_1716809376082_43);
        func_1716809376082_46<Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>>(optionalParam_1716809376082_47 : UInt64(47), optionalParam_1716809376082_49 : match (var_1716809376082_1202) {
            case _ => 
                [(), (), (), (), (), (), (), (), (), ()]
            
        }[0])
    }
;
    mut prop var_1716809376082_1265 : Bool { // block id: 1266
        get() { // block id: 1268
            Enum_1716809376082_480.enumValue_1716809376082_1270((Int16(-5) as Range<Int16>));
            false;
            var_1716809376082_1452
        }

        set(Value) { // block id: 1277
            VArray<Bool, $3>(repeat: (r'k' is Option<Int16>));
            ();
            var_1716809376082_1452 = Value
        }

    };
    public var var_1716809376082_1448 : Int64 = Int64(-88);
    var var_1716809376082_1452 : Bool = false;
    public open override func func_1716809376082_464(param_1716809376082_465 : Range<UInt16>, param_1716809376082_466 : String) : UInt8 { // block id: 467
        let var_1716809376082_504 : Int32 = Int32(22);
        let var_1716809376082_660 : Bool = false;
        let var_1716809376082_709 : Range<UInt16> = ((UInt16(UInt16(Int8(UInt8(176))))&127)..=(UInt16(UInt16(Int16(UInt8(Int8(-81)))))&127):(Int64(UInt16(UInt8(UInt8(55))))|1));
        (Option<UInt8>.Some(UInt8(var_1716809376082_476)) ?? match (if (true) { // block id: 484
            Enum_1716809376082_480.enumValue_1716809376082_486(Int64(-66))
        } else { // block id: 489
            var var_1716809376082_509 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'U', r't', Class_1716809376082_6((), Int16(-99), Option<Int16>.None), Int64(-19), false, (), Float32(Float32(-39.0)));
            let var_1716809376082_644 : Option<Int16> = ((UInt16(196) as Enum_1716809376082_352) as Int16);
            const var_1716809376082_666 : UInt16 = 113;
            let var_1716809376082_670 : Int64 = Int64(95);
            Enum_1716809376082_480.enumValue_1716809376082_491(Enum_1716809376082_352.enumValue_1716809376082_363(Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some((((UInt64(UInt64(115))&127)..(UInt64(UInt64(8))&127):(Int64(-89)|1)), Option<Int16>.None, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.Some((UInt8(117), false, var_1716809376082_504, UInt8(139), var_1716809376082_428, var_1716809376082_509, UInt8(162), var_1716809376082_644, true)), var_1716809376082_650, (r'z', var_1716809376082_655, Class_1716809376082_624<UInt64, Interface_1716809376082_9>(), Int64(14), var_1716809376082_660, var_1716809376082_181, Float32(80.0)))), ((UInt16(var_1716809376082_666)&127)..(UInt16(UInt16(254))&127):(var_1716809376082_670|1)), Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some(var_1716809376082_243), var_1716809376082_675), Option<Enum_1716809376082_352>.None)
        }) {
            case defaultValue => 
                var_1716809376082_269 >> ((UInt8(68)) & 7)
            
            case caseVar_1716809376082_686 => 
                UInt8(174)
            
            case defaultValue => 
                UInt8(0)
            
            case _ : VArray<Bool, $3> => 
                var_1716809376082_698 |= UInt8(234);
                ();
                UInt8(254)
            
            case _ => 
                var_1716809376082_709;
                ();
                UInt8(24)
            
        })
    }

}

public enum Enum_1716809376082_82 {
    defaultValue |
    enumValue_1716809376082_87(Range<UInt8>, Interface_1716809376082_9) |
    enumValue_1716809376082_567(Int16, Range<Int16>, Int64, String) |
    enumValue_1716809376082_842
}
public enum Enum_1716809376082_132 {
    defaultValue |
    enumValue_1716809376082_137(Unit, Range<Int16>, Float32)
}




public enum Enum_1716809376082_352 {
    defaultValue |
    enumValue_1716809376082_363(Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>, Range<UInt16>, Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>, Int32) |
    enumValue_1716809376082_904(Interface_1716809376082_9, Range<UInt32>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>)
}


public enum Enum_1716809376082_480 {
    defaultValue |
    enumValue_1716809376082_486(Int64) |
    enumValue_1716809376082_491(Enum_1716809376082_352, Option<Enum_1716809376082_352>) |
    enumValue_1716809376082_833((Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))) |
    enumValue_1716809376082_1270(Option<Range<Int16>>)
}
sealed public interface Interface_1716809376082_627 <: Interface_1716809376082_11 {

}

public open class Class_1716809376082_624<T0, T1> <: Interface_1716809376082_627 {
    public init() { // block id: 626

    }
;
    public var var_1716809376082_632 : Int32 = Int32(74);
    init(optionalParam_1716809376082_930 ! : VArray<Bool, $3> = VArray<Bool, $3>({ i => false}), namedParam_1716809376082_935 ! : UInt16) { // block id: 936
        var var_1716809376082_945 : ?UInt8 = (() as UInt8);
        let var_1716809376082_955 : (Range<UInt8>, Array<Bool>, Option<Range<Int16>>, String, Int64, UInt8, Range<UInt16>) = (((UInt8(UInt8(165))&127)..=(UInt8(UInt8(4))&127):(Int64(-68)|1)), [(() is Float64), false, false, (() is Unit), false, (UInt64(UInt64(239)) is Bool), (UInt16(UInt8(150)) is Int8), false, true, (Enum_1716809376082_132.enumValue_1716809376082_137((), ((Int16(Int16(-46))&127)..(Int16(Int16(-19))&127):(Int64(79)|1)), Float32(32.0)) is (Range<UInt8>, Array<Bool>, Option<Range<Int16>>, String, Int64, UInt8, Range<UInt16>))], Option<Range<Int16>>.Some(((Int16(Int16(-3))&127)..(Int16(Int16(-110))&127):(Int64(47)|1))), ###"](XObFG\"xu"###, Int64(UInt8(51)), UInt8(202), ((UInt16(UInt16(177))&127)..=(UInt16(UInt16(53))&127):(Int64(-124)|1)));
        ((match (var_1716809376082_945) {
            case _ => 
                var_1716809376082_728
            
        } as Option<Range<Int16>>) ?? var_1716809376082_955[2]);
        Int8(Int8(114))
    }

}




func func_1716809376082_264(param_1716809376082_265 : Interface_1716809376082_10) : (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) { // block id: 266
    const var_1716809376082_289 : Bool = true;
    let var_1716809376082_295 : UInt16 = UInt16(UInt8(UInt8(253)));
    let var_1716809376082_306 : ?(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) = Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.Some((UInt8(157), false, Int32(Int16(-79)), UInt8(UInt8(Int8(92))), (((Int8(Int8(-93))&127)..(Int8(Int8(82))&127):(Int64(113)|1)) as Range<Int16>), (r'g', r'k', Class_1716809376082_6(), Int64(-28), false, (), Float32(-42.0)), UInt8(UInt8(UInt8(81))), (Int64(UInt8(117)) as Int16), (((Int16(Int16(-68))&127)..=(Int16(Int16(-123))&127):(Int64(-90)|1)) is Interface_1716809376082_11)));
    let var_1716809376082_391 : Int8 = Int8(UInt8(61));
    const var_1716809376082_407 : UInt = 12;
    let var_1716809376082_431 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'Z', r'd', Class_1716809376082_6(), Int64(UInt64(UInt64(77))), false, (), Float32(Float32(49.0)));
    let var_1716809376082_461 : Interface_1716809376082_9 = Class_1716809376082_6();
    var var_1716809376082_745 : Option<Rune> = Option<Rune>.Some(r'5');
    var var_1716809376082_755 : ?Interface_1716809376082_11 = Option<Interface_1716809376082_11>.None;
    var var_1716809376082_758 : Interface_1716809376082_11 = Class_1716809376082_6();
    var var_1716809376082_802 : Unit = ();
    let var_1716809376082_805 : Enum_1716809376082_132 = Enum_1716809376082_132.enumValue_1716809376082_137((), ((Int16(Int16(89))&127)..=(Int16(Int16(UInt8(UInt8(117))))&127):(Int64(Int32(-84))|1)), Float32(44.0));
    let var_1716809376082_901 : Option<Int16> = (Enum_1716809376082_352.enumValue_1716809376082_904(Class_1716809376082_6(), ((UInt32(UInt32(4))&127)..(UInt32(UInt32(18))&127):(Int64(77)|1)), Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None) as Int16);
    (var_1716809376082_269, try { // block id: 274
        var_1716809376082_276;
        (var_1716809376082_85, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None, var_1716809376082_282, true, VArray<Bool, $3>(repeat: true), ((UInt16(UInt16(132))&127)..(UInt16(var_1716809376082_295)&127):(Int64(-12)|1)), UInt8(107), Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None)
    } finally { // block id: 302
        let var_1716809376082_345 : Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))> = (UInt32(Int8(UInt8(150))) as (Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32)));
        (var_1716809376082_85, var_1716809376082_306, var_1716809376082_282, true, var_1716809376082_340, ((UInt16(UInt16(27))&127)..(UInt16(UInt16(144))&127):(Int64(88)|1)), var_1716809376082_269, var_1716809376082_345)
    }[3], match ((Option<Enum_1716809376082_352>.Some(var_1716809376082_361) ?? var_1716809376082_361)) {
        case defaultValue => 
            var_1716809376082_181;
            Int32(-30)
        
        case caseVar_1716809376082_385 : Option<Enum_1716809376082_352> => 
            let var_1716809376082_388 : Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))> = Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None;
            var_1716809376082_388;
            var_1716809376082_391;
            Int32(-63) + Int32(104)
        
        case _ => 
            ();
            let var_1716809376082_411 : Int64 = Int64(95);
            if (false) { Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.Some((((UInt64(var_1716809376082_407)&127)..(UInt64(UInt64(103))&127):(var_1716809376082_411|1)), Option<Int16>.Some(var_1716809376082_415), Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.Some((UInt8(3), true, Int32(113), UInt8(66), var_1716809376082_428, var_1716809376082_431, UInt8(114), Option<Int16>.Some(var_1716809376082_415), var_1716809376082_289)), Class_1716809376082_6(), var_1716809376082_431)) } else { Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None } ;
            Int32(-38)
        
        case _ => 
            var_1716809376082_415 * var_1716809376082_415;
            Int32(-1)
        
    }, UInt8((var_1716809376082_461.func_1716809376082_464(var_1716809376082_725, var_1716809376082_728))), try { // block id: 731
        var_1716809376082_428
    } catch (e: Exception) { // block id: 733
        var_1716809376082_181;
        var_1716809376082_181;
        Option<Range<Int16>>.None
    }, (r'X', (var_1716809376082_745 ?? var_1716809376082_655), (var_1716809376082_755 ?? var_1716809376082_758), Int64(-112), [false, true, var_1716809376082_289, true, false, true, false, true, true, false][1], VArray<Unit, $6>({ i => ()})[3], try { // block id: 788
        var_1716809376082_758;
        var_1716809376082_282
    } catch (_) { // block id: 791
        var_1716809376082_698 &= UInt8(222);
        if (var_1716809376082_289) { """
8p8t-
dl`N0
""" } else { var_1716809376082_728 } ;
        Float32(53.0)
    } finally { // block id: 800
        var_1716809376082_802;
        var_1716809376082_805;
        var_1716809376082_282
    }), if ([var_1716809376082_289, false, false, var_1716809376082_289, var_1716809376082_289, true, var_1716809376082_289, false, true, var_1716809376082_830][8]) { // block id: 854
        UInt8(242) >> ((UInt8(117)) & 7)
    } else { // block id: 858
        var_1716809376082_276;
        var_1716809376082_861;
        var_1716809376082_698
    }, if ((var_1716809376082_871 ?? false)) { if (var_1716809376082_830) { // block id: 879
        Class_1716809376082_624<UInt64, Interface_1716809376082_9>();
        let var_1716809376082_884 : Option<Int16> = Option<Int16>.Some(Int16(UInt16(81)));
        if (var_1716809376082_289) { var_1716809376082_884 } else { Option<Int16>.Some(var_1716809376082_890) } 
    } else { // block id: 892
        var_1716809376082_276;
        var_1716809376082_698 |= UInt8(128);
        Option<Int16>.None
    } } else { (if (true) { var_1716809376082_901 } else { var_1716809376082_901 } ) } , (Option<Bool>.None ?? var_1716809376082_830))
}

public func func_1716809376082_227() : (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) { // block id: 228
    let var_1716809376082_916 : (Interface_1716809376082_10) -> (UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool) = func_1716809376082_264;
    let var_1716809376082_919 : Interface_1716809376082_10 = Class_1716809376082_6();
    ((Option<(Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))>.None ?? var_1716809376082_243)[2] ?? (var_1716809376082_919|>var_1716809376082_916))
}


public func func_1716809376082_66(param_1716809376082_67 : UInt32) : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) { // block id: 68
    var var_1716809376082_96 : Unit = ();
    let var_1716809376082_102 : VArray<Bool, $3> = [true, false, (Enum_1716809376082_82.enumValue_1716809376082_87(((UInt8(UInt8(3))&127)..(UInt8(UInt8(91))&127):(Int64(79)|1)), Class_1716809376082_6()) is UInt8)];
    const var_1716809376082_125 : Bool = true;
    let var_1716809376082_135 : Enum_1716809376082_132 = Enum_1716809376082_132.enumValue_1716809376082_137((), ((Int16(Int16(-74))&127)..(Int16(Int16(116))&127):(Int64(49)|1)), Float32(84.0));
    let var_1716809376082_215 : Option<Int16> = (">(T_Ba# 34" as Int16);
    if (match (var_1716809376082_85) {
        case _ => 
            var_1716809376082_96;
            ();
            const var_1716809376082_117 : Bool = true;
            if (true) { var_1716809376082_102 } else { VArray<Bool, $3>(repeat: true) } 
        
        case _ => 
            ();
            VArray<Bool, $3>(repeat: var_1716809376082_125)
        
    }[2]) { // block id: 130
        let var_1716809376082_178 : Unit = ();
        match (var_1716809376082_135) {
            case _ => 
                var var_1716809376082_148 : Int8 = Int8(84);
                var_1716809376082_148;
                if (true) { ((Int8(Int8(93))&127)..(Int8(Int8(-100))&127):(Int64(-60)|1)) } else { var_1716809376082_154 } ;
                var var_1716809376082_164 : Float32 = Float32(Float32(Float32(73.0)));
                var_1716809376082_164 /= Float32((Int32(Float32(-40.0))) | 1)
            
            case caseVar_1716809376082_171 => 
                var_1716809376082_96
            
            case _ => 
                var_1716809376082_178;
                var_1716809376082_181
            
        };
        Int16(105)
    } else { // block id: 184
        var var_1716809376082_190 : Range<UInt32> = ((UInt32(UInt32(Int8(Int8(-42))))&127)..=(UInt32(UInt32(72))&127):(Int64(Int16(UInt16(UInt8(54))))|1));
        try { // block id: 186
            if (var_1716809376082_125) { var_1716809376082_190 } else { ((UInt32(UInt32(126))&127)..=(UInt32(UInt32(246))&127):(Int64(124)|1)) } 
        } finally { // block id: 201
            ();
            var var_1716809376082_205 : UInt32 = UInt32(190);
            ((UInt32(var_1716809376082_205)&127)..(UInt32(var_1716809376082_205)&127):(Int64(44)|1))
        };
        (var_1716809376082_215 ?? Int16(-54))
    };
    (func_1716809376082_227()[4] ?? ((Int16(Int16(70))&127)..(Int16(Int16(-31))&127):(Int64(-91)|1)));
    var var_1716809376082_924 : (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = (r'J', r'I', Class_1716809376082_624<UInt64, Interface_1716809376082_9>(namedParam_1716809376082_935 : UInt16(209)), Int64(UInt64(Int64(Int32(-41)))), (r'J' is UInt64), (), Float32(-70.0));
    var_1716809376082_924
}

public func func_1716809376082_59<T0>(param_1716809376082_60 : Class_1716809376082_6) : Interface_1716809376082_9 { // block id: 61
    let var_1716809376082_1005 : (UInt32) -> (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32) = func_1716809376082_66;
    const var_1716809376082_1032 : Int32 = -2;
    var var_1716809376082_1036 : Int64 = Int64(125);
    if ((var_1716809376082_1008|>var_1716809376082_1005)[4]) { // block id: 1011

    } else if (var_1716809376082_830) { // block id: 1013
        VArray<Rune, $9>({ i => r'4'})[2];
        var loopTimeVar_1716809376082_1039 : Int64 = 0;
        while ((var_1716809376082_830) && loopTimeVar_1716809376082_1039 < 100 ) {
            loopTimeVar_1716809376082_1039++;
            ((Int32(var_1716809376082_1032)&127)..(Int32(var_1716809376082_1032)&127):(var_1716809376082_1036|1))
        }
    };
    var_1716809376082_783;
    var var_1716809376082_1062 : Range<Int64> = ((Int64(Int64(UInt16(203)))&127)..(Int64(Int64(113))&127):(Int64(-115)|1));
    var var_1716809376082_1072 : Int64 = Int64(UInt8(Int8(49)));
    try { // block id: 1042
        if (var_1716809376082_830) { // block id: 1045
            Enum_1716809376082_352.enumValue_1716809376082_904(Class_1716809376082_6(), ((UInt32(UInt32(249))&127)..=(UInt32(UInt32(68))&127):(Int64(60)|1)), var_1716809376082_1053);
            ();
            ()
        };
        [((Int64(Int64(126))&127)..(Int64(Int64(116))&127):(Int64(2)|1)), var_1716809376082_1062, var_1716809376082_1062, var_1716809376082_1062, ((Int64(var_1716809376082_1072)&127)..(Int64(Int64(-35))&127):(var_1716809376082_1036|1)), ((Int64(Int64(98))&127)..=(Int64(Int64(16))&127):(Int64(-24)|1)), ((Int64(Int64(-18))&127)..=(Int64(Int64(-119))&127):(Int64(-117)|1)), ((Int64(var_1716809376082_1072)&127)..(Int64(var_1716809376082_1036)&127):(var_1716809376082_1072|1)), var_1716809376082_1062, ((Int64(Int64(-39))&127)..(Int64(Int64(-103))&127):(Int64(33)|1))][9];
        Class_1716809376082_6()
    } catch (_) { // block id: 1088
        try { // block id: 1090
            Class_1716809376082_6()
        } finally { // block id: 1092
            var var_1716809376082_1094 : Interface_1716809376082_9 = Class_1716809376082_6();
            var_1716809376082_1094
        }
    } finally { // block id: 1096
        var_1716809376082_1098
    }
}



public func func_1716809376082_46<T0>(optionalParam_1716809376082_47 ! : UInt64 = UInt64(31), optionalParam_1716809376082_49 ! : Unit = (), optionalParam_1716809376082_51 ! : UInt16 = UInt16(98), optionalParam_1716809376082_53 ! : Float32 = Float32(Float32(5.0))) : Unit { // block id: 56
    let var_1716809376082_1166 : Float32 = Float32(-70.0);
    match ((try { // block id: 1102
        ();
        let var_1716809376082_1107 : Bool = true;
        (UInt8(46), var_1716809376082_1107, Int32(41), var_1716809376082_1111, Option<Range<Int16>>.None, (var_1716809376082_655, r'u', var_1716809376082_1118, Int64(41), false, (), Float32(-17.0)), var_1716809376082_1111, Option<Int16>.Some(var_1716809376082_1127), var_1716809376082_1107);
        Class_1716809376082_6()
    } finally { // block id: 1131
        ();
        var_1716809376082_1134;
        Class_1716809376082_6()
    }|>func_1716809376082_59<VArray<Bool, $3>>)) {
        case caseVar_1716809376082_1139 => 
            Int32(112) | Int32(-69)
        
        case _ : (Range<UInt8>, Array<Bool>, Option<Range<Int16>>, String, Int64, UInt8, Range<UInt16>) => 
            var_1716809376082_1148
        
        case caseVar_1716809376082_1155 => 
            ();
            (r'I', var_1716809376082_655, var_1716809376082_1118, Int64(33), var_1716809376082_830, (), var_1716809376082_1166);
            -Int32(-61)
        
        case _ => 
            ();
            var_1716809376082_1148 + var_1716809376082_1148
        
    };
    ((Option<Option<Unit>>.Some(Option<Unit>.None) ?? if (var_1716809376082_830) { var_1716809376082_1192 } else { var_1716809376082_1192 } ) ?? ())
}

public func func_1716809376082_21(param_1716809376082_22 : Bool) : Class_1716809376082_6 { // block id: 23
    const var_1716809376082_30 : Unit = ();
    let var_1716809376082_1228 : Class_1716809376082_6 = Class_1716809376082_6();
    func func_1716809376082_33(optionalParam_1716809376082_34 ! : Interface_1716809376082_10 = Class_1716809376082_6(Float64(19.0)), namedParam_1716809376082_1210 ! : Option<Int16>) : Class_1716809376082_6 { // block id: 1211
        let var_1716809376082_1214 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var_1716809376082_1214[8];
        var_1716809376082_1228
    }
;
    let var_1716809376082_1239 : ?Enum_1716809376082_352 = Option<Enum_1716809376082_352>.Some(Enum_1716809376082_352.enumValue_1716809376082_363(((Int64(-41), Option<UInt8>.None, Class_1716809376082_6(), Option<Enum_1716809376082_352>.None, Option<Bool>.Some(true)) as (Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))), ((UInt16(UInt16(Int8(79)))&127)..=(UInt16(UInt16(UInt8(11)))&127):(Int64(UInt32(184))|1)), (Class_1716809376082_6() as (Range<UInt64>, Option<Int16>, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>, Interface_1716809376082_9, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32))), Int32(Int8(68))));
    func func_1716809376082_27<T0, T1>() : Class_1716809376082_6 { // block id: 28
        var_1716809376082_30;
        func_1716809376082_33(optionalParam_1716809376082_34 : (Int64(-89), Option<UInt8>.None, Class_1716809376082_6(Float64(72.0), optionalParam_1716809376082_38 : UInt8(153)), var_1716809376082_1239, Option<Bool>.None)[2], namedParam_1716809376082_1210 : Option<Int16>.None)
    }
;
    func_1716809376082_27<Int64, Class_1716809376082_624<UInt64, Interface_1716809376082_9>>().var_1716809376082_1265 &&= (try { // block id: 1286
        ();
        Option<Bool>.None
    } catch (_) { // block id: 1289
        [UInt64(81), UInt64(212), UInt64(105), UInt64(229), UInt64(174), UInt64(132), UInt64(172), UInt64(53), UInt64(202), UInt64(5)];
        var_1716809376082_871
    } finally { // block id: 1292
        if (true) { Option<Bool>.None } else { var_1716809376082_871 } 
    } ?? (var_1716809376082_1299 is Enum_1716809376082_480));
    const var_1716809376082_1310 : Int16 = -36;
    let var_1716809376082_1365 : Class_1716809376082_6 = Class_1716809376082_6();
    try { // block id: 1303
        Class_1716809376082_6()
    } catch (_) { // block id: 1305
        var_1716809376082_1228
    } finally { // block id: 1307
        match (var_1716809376082_1310) {
            case -52 | 51 | 89 | 54 => 
                var_1716809376082_30
            
            case _ => 
                let var_1716809376082_1322 : Range<UInt32> = ((UInt32(UInt32(125))&127)..=(UInt32(UInt32(139))&127):(Int64(5)|1));
                if (false) { var_1716809376082_1322 } else { ((UInt32(UInt32(97))&127)..=(UInt32(UInt32(214))&127):(Int64(-99)|1)) } ;
                var_1716809376082_1134
            
        };
        try { // block id: 1327
            ();
            var_1716809376082_1330;
            var_1716809376082_1228
        } catch (_) { // block id: 1362
            var_1716809376082_30;
            var_1716809376082_1365
        } finally { // block id: 1367
            var_1716809376082_1365
        }
    }
}

main(): Int64 {
    try {
        func func_1716809376082_13(param_1716809376082_14 : Class_1716809376082_6, param_1716809376082_15 : Bool, optionalParam_1716809376082_16 ! : Unit = (), namedParam_1716809376082_18 ! : Unit) : Class_1716809376082_6 { // block id: 19
            (Enum_1716809376082_480.enumValue_1716809376082_491(Enum_1716809376082_352.enumValue_1716809376082_363(var_1716809376082_1374, var_1716809376082_725, var_1716809376082_1374, Int32(-7)), var_1716809376082_1380) is Option<Int16>)|>func_1716809376082_21
        }
;
        var loopTimeVar_1716809376082_1418 : Int64 = 0;
        func_1716809376082_13(Class_1716809376082_6(), var_1716809376082_1385[1], optionalParam_1716809376082_16 : while ((true) && loopTimeVar_1716809376082_1418 < 100 ) {
            loopTimeVar_1716809376082_1418++;

        }, namedParam_1716809376082_18 : match (Enum_1716809376082_352.enumValue_1716809376082_904(Class_1716809376082_6(), var_1716809376082_1423, Option<(UInt8, Bool, Int32, UInt8, Option<Range<Int16>>, (Rune, Rune, Interface_1716809376082_11, Int64, Bool, Unit, Float32), UInt8, Option<Int16>, Bool)>.None)) {
            case caseVar_1716809376082_1428 : Range<Int16> => 
                var_1716809376082_1202;
                Class_1716809376082_6();
                var_1716809376082_276
            
            case enumValue_1716809376082_904(_, caseVar_1716809376082_1435 : VArray<Unit, $6>, caseVar_1716809376082_1436 : Int16) => 
                var_1716809376082_830 ||= var_1716809376082_830;
                ();
                var_1716809376082_783
            
            case _ => 
                var_1716809376082_783
            
        }).var_1716809376082_1448
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1716809376082_1008*var_1716809376082_1008), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Enum_1716809376082_132 {

}

extend Enum_1716809376082_82 {

}

