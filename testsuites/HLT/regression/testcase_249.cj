/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args


// All global variable need to be defined before use!
public let var_1674927317742_11 : Bool = (UInt8(43) is Bool)
public var var_1674927317742_17 : Float64 = Float64(90.0)
public var var_1674927317742_37 : Float32 = Float32(Float32(-25.0))
public let var_1674927317742_42 : (Int32, Unit, UInt16, Unit, Rune, Float32, Rune) = (Int32(Int16(-30)), (), UInt16(Int16(Int16(85))), (), r'4', Float32(114.0), r'F')
public var var_1674927317742_58 : Unit = ()
var var_1674927317742_121 : Range<Int8> = ((Int8(Int8(UInt8(UInt8(147))))&127)..=(Int8(75)&127):((Int64(UInt8(205))|1)))
public let var_1674927317742_150 : Int16 = Int16(UInt8(8))
public var var_1674927317742_164 : UInt32 = UInt32(Int16(Int16(88)))
public var var_1674927317742_218 : Enum_1674927317742_203 = Enum_1674927317742_203.defaultValue
public var var_1674927317742_226 : Int32 = Int32(Int32(UInt8(UInt8(UInt8(237)))))
public var var_1674927317742_242 : Rune = r'z'
public var var_1674927317742_257 : UInt32 = UInt32(120)
public var var_1674927317742_260 : UInt32 = UInt32(2)
public let var_1674927317742_291 : (Int32, Unit, UInt16, Unit, Rune, Float32, Rune) = (Int32(Int16(-52)), (), UInt16(Int16(UInt16(Int8(-117)))), (), r'1', Float32(-74.0), r'5')
public var var_1674927317742_339 : Range<UInt8> = ((UInt8(82)&127)..=(UInt8(30)&127):((Int64(UInt64(140))|1)))
public let var_1674927317742_349 : (UInt64, Int32, UInt32, Int64) = (UInt64(141), Int32(50), UInt32(UInt8(65)), Int64(UInt32(93)))
public let var_1674927317742_418 : UInt8 = UInt8(17)
public var var_1674927317742_433 : UInt16 = UInt16(UInt8(Int8(-94)))
public var var_1674927317742_474 : Unit = ()
public var var_1674927317742_491 : Int64 = 27
public var var_1674927317742_517 : UInt16 = UInt16(205)
public var var_1674927317742_523 : Rune = r'Q'
public let var_1674927317742_579 : Bool = (Int8(UInt8(Int8(13))) is Array<UInt8>)
public var var_1674927317742_631 : Unit = ()
public var var_1674927317742_666 : ?Unit = (((Int32(-56)&127)..(Int32(-92)&127):((-65)|1)) as Unit)
public var var_1674927317742_674 : Enum_1674927317742_109 = Enum_1674927317742_109.defaultValue
public var var_1674927317742_680 : UInt64 = UInt64(243)
var var_1674927317742_701 : Range<Int64> = ((64&127)..=(97&127):((-40)|1))
public var var_1674927317742_748 : Class_1674927317742_704 = Class_1674927317742_704()
public var var_1674927317742_751 : Class_1674927317742_704 = Class_1674927317742_704()
public let var_1674927317742_777 : Class_1674927317742_704 = Class_1674927317742_704()
public var var_1674927317742_922 : Array<Class_1674927317742_704> = [Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704()]
public var var_1674927317742_935 : ?Array<Class_1674927317742_704> = (((UInt8(Int8(115))&127)..(UInt8(31)&127):((91|1))) as Array<Class_1674927317742_704>)
public let var_1674927317742_952 : Class_1674927317742_704 = Class_1674927317742_704()
public var var_1674927317742_1045 : Enum_1674927317742_203 = Enum_1674927317742_203.defaultValue
public let var_1674927317742_1054 : Array<Enum_1674927317742_203> = [Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue]
public var var_1674927317742_1067 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
public let var_1674927317742_1093 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1674927317742_1166 : Int8 = Int8(8)
public let var_1674927317742_1183 : Struct_1674927317742_1179<Enum_1674927317742_543, UInt8> = Struct_1674927317742_1179<Enum_1674927317742_543, UInt8>()
public let var_1674927317742_1197 : Enum_1674927317742_670 = Enum_1674927317742_670.defaultValue
public let var_1674927317742_1203 : Unit = ()
public let var_1674927317742_1228 : Array<Int64> = [123, 13, 117, (-27), 25, (-35), 75, (-62), 114, 96]
public var var_1674927317742_1275 : Range<UInt64> = ((UInt64(71)&127)..=(UInt64(114)&127):((Int64(Int32(-94))|1)))
public var var_1674927317742_1285 : UInt64 = UInt64(62)
public var var_1674927317742_1293 : UInt64 = UInt64(32)
public var var_1674927317742_1308 : UInt8 = UInt8(159)
public let var_1674927317742_1322 : (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) = (((Int16(UInt16(125))&127)..=(Int16(Int8(39))&127):(((-81)|1))), ((Int64((-57))&127)..(107&127):((Int64(Int64(Int8(25)))|1))), UInt32(UInt16(31)), Float32(-61.0), Enum_1674927317742_543.defaultValue, Int8(-127), (), false, (Enum_1674927317742_203.defaultValue is UInt32))
public let var_1674927317742_1404 : Enum_1674927317742_543 = Enum_1674927317742_543.defaultValue
public let var_1674927317742_1407 : Int8 = Int8(UInt8(81))
public var var_1674927317742_1454 : String = """
G$IhL
/jMig
"""
public var var_1674927317742_1458 : Range<UInt32> = ((UInt32(UInt16(23))&127)..(UInt32(Int8(93))&127):((Int64(Int16(-11))|1)))
public let var_1674927317742_1497 : Option<((Int32, Unit, UInt16, Unit, Rune, Float32, Rune), Int32, UInt16, Enum_1674927317742_1487, Array<Int64>)> = Option<((Int32, Unit, UInt16, Unit, Rune, Float32, Rune), Int32, UInt16, Enum_1674927317742_1487, Array<Int64>)>.None
public var var_1674927317742_1505 : Unit = ()
let var_1674927317742_1512 : UInt16 = UInt16(Int8(Int8(Int8(Int8(-98)))))
public let var_1674927317742_1530 : Int64 = (-80)
public enum Enum_1674927317742_109 {
    defaultValue
}
public enum Enum_1674927317742_203 {
    defaultValue
}
public func func_1674927317742_284() : Bool { // block id: 285
    var var_1674927317742_309 : UInt8 = UInt8(UInt8(UInt8(169)));
    try { // block id: 289
        var_1674927317742_291;
        if (true) { [UInt8(82), UInt8(205), UInt8(173), UInt8(129), UInt8(194), UInt8(149), UInt8(81), UInt8(214), UInt8(28), UInt8(172)] } else { [var_1674927317742_309, var_1674927317742_309, var_1674927317742_309, UInt8(125), var_1674927317742_309, UInt8(44), var_1674927317742_309, UInt8(132), UInt8(218), UInt8(54)] } 
    } catch (e: Exception) { // block id: 322
        if (false) { [var_1674927317742_309, var_1674927317742_309, UInt8(93), UInt8(198), var_1674927317742_309, var_1674927317742_309, var_1674927317742_309, var_1674927317742_309, UInt8(0), var_1674927317742_309] } else { [UInt8(60), UInt8(13), UInt8(133), UInt8(140), UInt8(80), UInt8(218), UInt8(121), UInt8(98), UInt8(76), UInt8(50)] } 
    }[5];
    var_1674927317742_339;
    var var_1674927317742_376 : Bool = ([UInt64(Int8(50)), UInt64(UInt64(Int16(24))), UInt64(112), UInt64(Int8(UInt8(238))), UInt64(UInt64(UInt64(233))), UInt64(UInt8(UInt8(226))), UInt64(UInt8(UInt8(1))), UInt64(47), UInt64(Int32(14)), UInt64(145)] is UInt64);
    match (var_1674927317742_349[3]) {
        case caseVar_1674927317742_360 : Int16 => 
            true
        
        case -38 | 106 | -19 | -90 => 
            var_1674927317742_11;
            let var_1674927317742_368 : Bool = true;
            var_1674927317742_368
        
        case _ => 
            var_1674927317742_260 |= var_1674927317742_257;
            var_1674927317742_376
        
    }
}


public enum Enum_1674927317742_543 {
    defaultValue
}

public enum Enum_1674927317742_670 {
    defaultValue
}
public open class Class_1674927317742_704 {
    public init() { // block id: 706

    }
;
    static mut prop var_1674927317742_806 : Bool { // block id: 807
        get() { // block id: 809
            ();
            (Int32(Int32(UInt8(223))), (), UInt16(UInt16(UInt16(134))), (), r'0', Float32(-114.0), r'q');
            ([Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue] is () -> Bool);
            var_1674927317742_1574
        }

        set(Value) { // block id: 837
            (Int32(UInt8(212)), (), UInt16(Int16(UInt8(44))), (), r'a', Float32(Float32(51.0)), r'l');
            ();
            var_1674927317742_1574 = Value
        }

    };
    public init(namedParam_1674927317742_971 ! : Enum_1674927317742_203, namedParam_1674927317742_972 ! : Unit, optionalParam_1674927317742_973 ! : Range<Int32> = ((Int32(19)&127)..(Int32(-69)&127):(((-78)|1))), namedParam_1674927317742_978 ! : Int64) { // block id: 979
        ()
    }
;
    public static let var_1674927317742_1172 : Unit = ();
    public init(param_1674927317742_1029 : Int64, namedParam_1674927317742_1030 ! : Array<Int64>, namedParam_1674927317742_1031 ! : (UInt64, Int32, UInt32, Int64)) { // block id: 1032
        try { // block id: 1036
            Enum_1674927317742_670.defaultValue;
            if (true) { [var_1674927317742_218, var_1674927317742_218, var_1674927317742_218, var_1674927317742_1045, Enum_1674927317742_203.defaultValue, var_1674927317742_218, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, var_1674927317742_218, Enum_1674927317742_203.defaultValue] } else { var_1674927317742_1054 } ;
            var_1674927317742_1067
        } catch (_) { // block id: 1069
            var_1674927317742_418 & UInt8(70);
            var_1674927317742_474;
            var_1674927317742_1067
        } finally { // block id: 1075
            ();
            [[(), (), (), (), (), (), (), (), (), ()], [(), (), var_1674927317742_631, var_1674927317742_631, var_1674927317742_631, (), (), var_1674927317742_474, var_1674927317742_631, ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], var_1674927317742_1093, [(), (), (), (), (), (), (), (), (), ()], var_1674927317742_1093, var_1674927317742_1093, [var_1674927317742_631, var_1674927317742_474, var_1674927317742_58, var_1674927317742_474, (), (), var_1674927317742_474, var_1674927317742_58, var_1674927317742_58, var_1674927317742_631], [(), (), var_1674927317742_474, (), var_1674927317742_474, (), var_1674927317742_631, (), (), ()]]
        }[8];
        var var_1674927317742_1124 : Enum_1674927317742_670 = Enum_1674927317742_670.defaultValue;
        var var_1674927317742_1131 : Int16 = Int16(Int16(111));
        var loopTimeVar_1674927317742_1175 : Int64 = 0;
        while ((match (var_1674927317742_1124) {
            case defaultValue => 
                var_1674927317742_1131 >>= ((var_1674927317742_150) & 7);
                101.0 <= (-83.0)
            
            case defaultValue => 
                (var_1674927317742_226, var_1674927317742_474, var_1674927317742_517, var_1674927317742_474, r'c', var_1674927317742_37, var_1674927317742_242);
                UInt64(96) >= var_1674927317742_680
            
            case _ => 
                var_1674927317742_226 & Int32(-95);
                var var_1674927317742_1160 : Int64 = Int64(UInt64(69));
                91 < var_1674927317742_1160
            
        }) && loopTimeVar_1674927317742_1175 < 100 ) {
            loopTimeVar_1674927317742_1175++;
            var_1674927317742_1166 *= Int8(-5);
            Class_1674927317742_704.var_1674927317742_1172
        };
        var_1674927317742_1166 -= var_1674927317742_1183.var_1674927317742_1186
    }
;
    public open func func_1674927317742_1312(param_1674927317742_1313 : (UInt64, Int32, UInt32, Int64), param_1674927317742_1314 : (Int64, Range<Int32>, Array<Enum_1674927317742_203>, (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool)) -> Range<UInt64>) : (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) { // block id: 1320
        var_1674927317742_1322
    }
;
    static prop var_1674927317742_1349 : (UInt64, Int32, UInt32, Int64) { // block id: 1350
        get() { // block id: 1352
            ();
            [Int64(UInt64(UInt32(253))), Int64(Int16(Int16(75))), (-125), 110, 108, Int64(Int8(Int8(15))), 104, Int64(Int8(-36)), Int64(UInt8(UInt8(23))), Int64(UInt8(180))];
            (UInt64(Int16(Int8(110))), Int32(Int16(102)), UInt32(7), Int64(UInt16(Int16(121))))
        }

    };
    static var var_1674927317742_1574 : Bool = true
}

public func func_1674927317742_715(param_1674927317742_716 : Float32) : Class_1674927317742_704 { // block id: 717
    var var_1674927317742_724 : Array<Enum_1674927317742_203> = [Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue];
    match (var_1674927317742_724[0]) {
        case caseVar_1674927317742_739 : Enum_1674927317742_543 => 
            var var_1674927317742_744 : Int8 = Int8(69);
            Int8(-97) | var_1674927317742_744;
            [var_1674927317742_748, var_1674927317742_751, var_1674927317742_748, Class_1674927317742_704(), var_1674927317742_748, var_1674927317742_751, var_1674927317742_751, Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704()]
        
        case _ => 
            [(), (), (), (), (), (), (), (), (), ()];
            ((UInt32(176)&127)..=(UInt32(20)&127):((-64)|1));
            if (var_1674927317742_579) { [var_1674927317742_751, Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), var_1674927317742_748, Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), var_1674927317742_777, Class_1674927317742_704()] } else { [Class_1674927317742_704(), Class_1674927317742_704(), Class_1674927317742_704(), var_1674927317742_751, var_1674927317742_748, Class_1674927317742_704(), var_1674927317742_777, Class_1674927317742_704(), var_1674927317742_751, Class_1674927317742_704()] } 
        
    }[3]
}






public struct Struct_1674927317742_1179<T0, T1> {
    public init() { // block id: 1181

    }
;
    public var var_1674927317742_1186 : Int8 = Int8(62)
}

public func func_1674927317742_852(param_1674927317742_853 : Int64, optionalParam_1674927317742_854 ! : Range<Int32> = ((Int32(46)&127)..=(Int32(-121)&127):(90|1)), optionalParam_1674927317742_856 ! : Array<Enum_1674927317742_203> = [Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue, Enum_1674927317742_203.defaultValue], optionalParam_1674927317742_868 ! : (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) = (((Int16(UInt16(UInt16(15)))&127)..=(Int16(85)&127):(((-75)|1))), (((-102)&127)..(2&127):((-22)|1)), UInt32(Int8(-43)), Float32(50.0), Enum_1674927317742_543.defaultValue, Int8(Int8(71)), (), (((UInt8(8)&127)..(UInt8(191)&127):(78|1)) is Array<Bool>), ((Int32(-66), (), UInt16(Int8(-43)), (), r'o', Float32(Float32(43.0)), r'Q') is Range<Int8>))) : Range<UInt64> { // block id: 897
    let var_1674927317742_914 : ?Option<Option<Array<Class_1674927317742_704>>> = (UInt64(Int8(Int8(-99))) as Option<Option<Array<Class_1674927317742_704>>>);
    (((var_1674927317742_914 ?? Option<Option<Array<Class_1674927317742_704>>>.Some(Option<Array<Class_1674927317742_704>>.Some(var_1674927317742_922))) ?? var_1674927317742_935) ?? [[Class_1674927317742_704(), var_1674927317742_777, var_1674927317742_777, var_1674927317742_777, Class_1674927317742_704(), Class_1674927317742_704(), var_1674927317742_952, var_1674927317742_751, Class_1674927317742_704(), var_1674927317742_748][7], (Option<Class_1674927317742_704>.None ?? Class_1674927317742_704()), var_1674927317742_952, if (var_1674927317742_579) { Class_1674927317742_704(namedParam_1674927317742_971 : var_1674927317742_218, namedParam_1674927317742_972 : var_1674927317742_631, optionalParam_1674927317742_973 : ((Int32(5)&127)..(Int32(116)&127):((-89)|1)), namedParam_1674927317742_978 : (-82)) } else { var_1674927317742_952 } , match (var_1674927317742_922) {
        case _ => 
            [var_1674927317742_579, true, var_1674927317742_579, true, false, var_1674927317742_11, false, false, var_1674927317742_579, var_1674927317742_579];
            var_1674927317742_680 &= UInt64(164);
            var_1674927317742_952
        
        case _ : Int8 => 
            Class_1674927317742_704(namedParam_1674927317742_971 : Enum_1674927317742_203.defaultValue, namedParam_1674927317742_972 : var_1674927317742_474, optionalParam_1674927317742_973 : ((Int32(-65)&127)..=(Int32(113)&127):((-50)|1)), namedParam_1674927317742_978 : var_1674927317742_491)
        
        case caseVar_1674927317742_1016 => 
            ((var_1674927317742_150&127)..(var_1674927317742_150&127):((var_1674927317742_491|1)));
            var_1674927317742_751
        
        case _ : (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) => 
            UInt64(225);
            Class_1674927317742_704(var_1674927317742_491, namedParam_1674927317742_1030 : [32, 23, 73, (-43), (-60), 99, 6, 109, 95, (-43)], namedParam_1674927317742_1031 : var_1674927317742_349)
        
        case _ => 
            var_1674927317742_748
        
    }, var_1674927317742_748, match (var_1674927317742_1197) {
        case _ => 
            var_1674927317742_1203;
            ((var_1674927317742_150&127)..=(Int16(-99)&127):(((-53)|1)));
            var_1674927317742_777
        
        case _ => 
            var var_1674927317742_1214 : Bool = true;
            var_1674927317742_1214 &&= var_1674927317742_1214;
            [true, true, false, true, true, true, false, true, false, true];
            var_1674927317742_952
        
    }, try { // block id: 1220
        var_1674927317742_748
    } catch (e: Exception) { // block id: 1222
        var_1674927317742_58;
        var_1674927317742_58;
        Class_1674927317742_704((-16), namedParam_1674927317742_1030 : var_1674927317742_1228, namedParam_1674927317742_1031 : var_1674927317742_349)
    } finally { // block id: 1231
        r'w';
        var_1674927317742_748
    }, try { // block id: 1235
        ();
        Class_1674927317742_704(94, namedParam_1674927317742_1030 : [(-33), (-50), (-113), 82, 82, (-67), (-48), (-86), (-59), 114], namedParam_1674927317742_1031 : var_1674927317742_349)
    } finally { // block id: 1241
        var_1674927317742_1166--;
        if (var_1674927317742_11) { [UInt8(167), UInt8(5), UInt8(131), UInt8(188), UInt8(232), UInt8(145), UInt8(33), UInt8(106), UInt8(231), UInt8(70)] } else { [UInt8(128), UInt8(82), UInt8(20), UInt8(151), UInt8(134), UInt8(77), UInt8(26), UInt8(205), UInt8(86), UInt8(97)] } ;
        Class_1674927317742_704(var_1674927317742_491, namedParam_1674927317742_1030 : [(-47), var_1674927317742_491, var_1674927317742_491, var_1674927317742_491, (-29), var_1674927317742_491, (-27), (-96), var_1674927317742_491, var_1674927317742_491], namedParam_1674927317742_1031 : var_1674927317742_349)
    }, (Option<Class_1674927317742_704>.Some(Class_1674927317742_704()) ?? Class_1674927317742_704(namedParam_1674927317742_971 : Enum_1674927317742_203.defaultValue, namedParam_1674927317742_972 : (), optionalParam_1674927317742_973 : ((Int32(69)&127)..(var_1674927317742_226&127):(((-25)|1))), namedParam_1674927317742_978 : (-35)))]);
    ((UInt16(130)&127)..=(UInt16(47)&127):((-79)|1));
    var_1674927317742_1275
}

public func func_1674927317742_645(param_1674927317742_646 : Array<Unit>) : (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) { // block id: 647
    (try { // block id: 654
        Option<Unit>.None
    } catch (_) { // block id: 656
        var_1674927317742_433 *= var_1674927317742_517;
        var var_1674927317742_661 : ?Unit = (Enum_1674927317742_203.defaultValue as Unit);
        var_1674927317742_661
    } finally { // block id: 664
        var_1674927317742_666
    } ?? match (match (var_1674927317742_674) {
        case _ => 
            let var_1674927317742_683 : UInt64 = UInt64(Int64(UInt32(Int8(Int8(-125)))));
            var_1674927317742_680 << ((var_1674927317742_683) & 7);
            true;
            let var_1674927317742_691 : Enum_1674927317742_670 = Enum_1674927317742_670.defaultValue;
            var_1674927317742_691
        
    }) {
        case _ => 
            ();
            ((UInt16(129)&127)..=(UInt16(65)&127):((-92)|1));
            var_1674927317742_260 /= ((UInt32(176)) | 1)
        
    });
    var_1674927317742_701;
    func func_1674927317742_708(namedParam_1674927317742_709 ! : Bool, namedParam_1674927317742_710 ! : Range<UInt64>, namedParam_1674927317742_711 ! : Array<UInt64>, namedParam_1674927317742_712 ! : Array<UInt8>) : Class_1674927317742_704 { // block id: 713
        let var_1674927317742_793 : (Float32) -> Class_1674927317742_704 = func_1674927317742_715;
        (Option<Float32>.Some(Float32(-112.0)) ?? Float32(-21.0))|>var_1674927317742_793
    }
;
    func_1674927317742_708(namedParam_1674927317742_709 : Class_1674927317742_704.var_1674927317742_806, namedParam_1674927317742_710 : func_1674927317742_852(var_1674927317742_491, optionalParam_1674927317742_856 : var_1674927317742_1054), namedParam_1674927317742_711 : [var_1674927317742_1285, UInt64(57), var_1674927317742_1285, UInt64(77), UInt64(129), UInt64(27), var_1674927317742_1293, UInt64(236), UInt64(240), UInt64(33)], namedParam_1674927317742_712 : [UInt8(211), UInt8(51), UInt8(148), UInt8(61), UInt8(155), UInt8(157), var_1674927317742_418, var_1674927317742_418, var_1674927317742_1308, UInt8(138)]).func_1674927317742_1312(Class_1674927317742_704.var_1674927317742_1349, func_1674927317742_852)
}

public func func_1674927317742_548(param_1674927317742_549 : Range<UInt16>) : Enum_1674927317742_543 { // block id: 550
    var var_1674927317742_559 : ?(Int32, Unit, UInt16, Unit, Rune, Float32, Rune) = Option<(Int32, Unit, UInt16, Unit, Rune, Float32, Rune)>.Some((Int32(-47), (), UInt16(216), (), r'p', Float32(107.0), r'C'));
    var var_1674927317742_611 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    match (if (false) { Option<(Int32, Unit, UInt16, Unit, Rune, Float32, Rune)>.Some(var_1674927317742_42) } else { var_1674927317742_559 } ) {
        case caseVar_1674927317742_571 => 
            var_1674927317742_474;
            var_1674927317742_517 |= var_1674927317742_517;
            if (var_1674927317742_579) { [(), (), (), (), (), (), (), (), (), ()] } else { [(), (), (), (), (), (), (), (), (), ()] } 
        
        case caseVar_1674927317742_588 => 
            [var_1674927317742_58, var_1674927317742_474, var_1674927317742_474, var_1674927317742_474, (), var_1674927317742_474, var_1674927317742_58, (), var_1674927317742_474, var_1674927317742_474]
        
        case caseVar_1674927317742_603 : Int16 => 
            -(-95);
            if (false) { [(), (), (), (), (), (), (), (), (), ()] } else { var_1674927317742_611 } 
        
        case caseVar_1674927317742_615 : Range<UInt64> => 
            [(), (), (), (), (), (), (), (), (), ()]
        
        case _ => 
            if (var_1674927317742_579) { [(), (), (), (), (), (), (), (), (), ()] } else { [var_1674927317742_474, (), var_1674927317742_58, (), var_1674927317742_474, (), var_1674927317742_631, (), (), var_1674927317742_474] } 
        
    }[5];
    var var_1674927317742_642 : Array<UInt8> = [UInt8(249), UInt8(140), UInt8(143), UInt8(228), UInt8(115), UInt8(19), UInt8(49), UInt8(81), UInt8(217), UInt8(228)];
    let var_1674927317742_1387 : (Array<Unit>) -> (Range<Int16>, Range<Int64>, UInt32, Float32, Enum_1674927317742_543, Int8, Unit, Bool, Bool) = func_1674927317742_645;
    var var_1674927317742_1418 : Bool = (Option<Float32>.None is Array<Array<Unit>>);
    if ((var_1674927317742_642 is Enum_1674927317742_203)) { (var_1674927317742_1093|>var_1674927317742_1387) } else { match (var_1674927317742_674) {
        case defaultValue => 
            (((Int16(-61)&127)..=(Int16(-120)&127):((90|1))), ((3&127)..=((-29)&127):(94|1)), UInt32(158), var_1674927317742_37, var_1674927317742_1404, var_1674927317742_1407, var_1674927317742_58, false, true)
        
        case defaultValue => 
            var_1674927317742_1418 &&= var_1674927317742_11;
            var_1674927317742_1322
        
        case _ => 
            var_1674927317742_1067;
            var_1674927317742_1322
        
        case _ => 
            var_1674927317742_1285 /= ((var_1674927317742_680) | 1);
            var_1674927317742_1322
        
    } } [4]
}

public func func_1674927317742_458<T0, T1>(param_1674927317742_459 : UInt8) : Range<UInt32> { // block id: 460
    let var_1674927317742_477 : ?(Int32, Unit, UInt16, Unit, Rune, Float32, Rune) = (((UInt32(151)&127)..(UInt32(229)&127):((-127)|1)) as (Int32, Unit, UInt16, Unit, Rune, Float32, Rune));
    (match (Enum_1674927317742_109.defaultValue) {
        case defaultValue => 
            ();
            var_1674927317742_474;
            var_1674927317742_477
        
        case defaultValue => 
            Option<(Int32, Unit, UInt16, Unit, Rune, Float32, Rune)>.Some(var_1674927317742_291)
        
        case caseVar_1674927317742_487 => 
            var_1674927317742_491 |= 115;
            ();
            Option<(Int32, Unit, UInt16, Unit, Rune, Float32, Rune)>.Some((Int32(100), (), var_1674927317742_433, var_1674927317742_58, var_1674927317742_242, var_1674927317742_37, r'A'))
        
        case _ => 
            var_1674927317742_477
        
    } ?? if (var_1674927317742_11) { // block id: 509
        ();
        if (true) { (Int32(-64), var_1674927317742_474, var_1674927317742_517, (), r'z', var_1674927317742_37, var_1674927317742_523) } else { var_1674927317742_42 } 
    } else { // block id: 526
        var_1674927317742_257++;
        var_1674927317742_474;
        if (var_1674927317742_11) { (Int32(-55), (), var_1674927317742_433, (), r'7', var_1674927317742_37, var_1674927317742_523) } else { var_1674927317742_291 } 
    })[2];
    match (if (func_1674927317742_284()) { (((UInt16(132)&127)..(UInt16(244)&127):((-59)|1))|>func_1674927317742_548) } else { try { // block id: 1438
        Enum_1674927317742_543.defaultValue
    } finally { // block id: 1440
        var_1674927317742_1203;
        if (true) { Enum_1674927317742_543.defaultValue } else { Enum_1674927317742_543.defaultValue } 
    } } ) {
        case _ => 
            var_1674927317742_242 = r'N';
            var_1674927317742_1454 = var_1674927317742_1454;
            var_1674927317742_1458
        
        case _ : Unit => 
            var_1674927317742_474;
            var_1674927317742_1458
        
        case _ => 
            var_1674927317742_935;
            ((UInt32(180)&127)..=(UInt32(226)&127):((-83)|1))
        
    }
}

public func func_1674927317742_268(param_1674927317742_269 : Enum_1674927317742_203) : Unit { // block id: 270
    let var_1674927317742_409 : Range<Int64> = ((85&127)..(Int64(Int8(UInt8(Int8(36))))&127):(((-3)|1)));
    match (if (UInt64(80) == UInt64(107)) { // block id: 276
        var var_1674927317742_280 : UInt8 = UInt8(UInt8(90));
        UInt8(156) / ((var_1674927317742_280) | 1)
    } else if (func_1674927317742_284()) { // block id: 401
        var_1674927317742_17 /= Float64((Int32(var_1674927317742_17)) | 1);
        UInt8(19)
    } else { // block id: 406
        ();
        var_1674927317742_409;
        var_1674927317742_418
    }) {
        case 123 => 
            var_1674927317742_418;
            [UInt8(235), UInt8(47), UInt8(40), UInt8(110), UInt8(12), UInt8(76), UInt8(143), UInt8(209), UInt8(115), UInt8(184)];
            let var_1674927317742_430 : Unit = ();
            if (var_1674927317742_11) { (var_1674927317742_226, var_1674927317742_430, var_1674927317742_433, var_1674927317742_430, r'n', var_1674927317742_37, r'u') } else { (var_1674927317742_226, (), var_1674927317742_433, var_1674927317742_430, r'I', var_1674927317742_37, var_1674927317742_242) } 
        
        case _ => 
            ();
            var_1674927317742_58;
            var_1674927317742_291
        
    };
    var loopTimeVar_1674927317742_1478 : Int64 = 0;
    do {
        loopTimeVar_1674927317742_1478++;
        var_1674927317742_1308|>func_1674927317742_458<Range<UInt16>, Range<UInt8>>
    } while ((true) && loopTimeVar_1674927317742_1478 < 100 ) 
}

public enum Enum_1674927317742_1487 {
    defaultValue
}

public func func_1674927317742_199(param_1674927317742_200 : Enum_1674927317742_109) : Array<Int64> { // block id: 201
    match (if ([true, true, false, false, false, false, true, false, true, true][7]) { try { // block id: 211
        Enum_1674927317742_203.defaultValue
    } finally { // block id: 213
        if (var_1674927317742_11) { Enum_1674927317742_203.defaultValue } else { var_1674927317742_218 } 
    } } else { try { // block id: 221
        Enum_1674927317742_203.defaultValue
    } finally { // block id: 223
        var_1674927317742_226 >>= ((Int32(84)) & 7);
        ((Int8(53)&127)..(Int8(27)&127):((-35)|1));
        if (false) { Enum_1674927317742_203.defaultValue } else { var_1674927317742_218 } 
    } } ) {
        case _ => 
            var_1674927317742_242;
            Int16(-104);
            ()
        
        case caseVar_1674927317742_248 : Range<UInt32> => 
            var_1674927317742_58
        
        case caseVar_1674927317742_253 => 
            var_1674927317742_257 -= var_1674927317742_260;
            ((UInt8(50)&127)..(UInt8(100)&127):((-92)|1));
            var_1674927317742_58
        
        case _ => 
            var_1674927317742_58
        
    };
    try { // block id: 1481
        Enum_1674927317742_203.defaultValue
    } catch (_) { // block id: 1483
        ();
        var_1674927317742_1045
    }|>func_1674927317742_268;
    match ((var_1674927317742_1497 ?? ((Int32(7), (), var_1674927317742_433, var_1674927317742_1505, var_1674927317742_523, var_1674927317742_37, var_1674927317742_523), Int32(-73), var_1674927317742_1512, Enum_1674927317742_1487.defaultValue, [var_1674927317742_491, var_1674927317742_491, var_1674927317742_491, (-84), var_1674927317742_491, var_1674927317742_491, var_1674927317742_491, var_1674927317742_491, var_1674927317742_491, var_1674927317742_1530]))[3]) {
        case defaultValue => 
            Option<Class_1674927317742_704>.None;
            if (false) { var_1674927317742_1228 } else { [(-95), (-117), (-6), (-63), 114, 4, 46, 1, 113, 32] } 
        
        case _ => 
            var_1674927317742_491;
            if (var_1674927317742_11) { [var_1674927317742_1530, (-61), 116, var_1674927317742_491, var_1674927317742_1530, var_1674927317742_491, 40, var_1674927317742_1530, var_1674927317742_1530, var_1674927317742_1530] } else { [(-15), 63, (-92), 16, 43, (-101), 46, 76, (-46), (-59)] } 
        
    }
}

public func func_1674927317742_90(namedParam_1674927317742_91 ! : Int8, namedParam_1674927317742_92 ! : Rune, optionalParam_1674927317742_93 ! : (Int32, Unit, UInt16, Unit, Rune, Float32, Rune) = (Int32(65), (), UInt16(Int16(58)), (), r'K', Float32(Float32(Float32(-55.0))), r'd')) : Array<Int64> { // block id: 105
    let var_1674927317742_112 : Enum_1674927317742_109 = Enum_1674927317742_109.defaultValue;
    let var_1674927317742_133 : Int64 = (-27);
    try { // block id: 107
        match (var_1674927317742_112) {
            case _ => 
                var_1674927317742_58;
                if (var_1674927317742_11) { ((Int8(25)&127)..(Int8(-106)&127):((-19)|1)) } else { var_1674927317742_121 } ;
                ((UInt16(170)&127)..=(UInt16(49)&127):((-42)|1))
            
        };
        let var_1674927317742_138 : Int64 = 5;
        [var_1674927317742_133, (-48), var_1674927317742_133, var_1674927317742_138, (-30), var_1674927317742_133, 48, 97, var_1674927317742_138, 73]
    } catch (_) { // block id: 146
        ((Int16(31)&127)..(var_1674927317742_150&127):((14|1)));
        try { // block id: 155
            [(-6), 45, 15, (-73), (-21), (-123), 65, (-36), (-56), 25]
        } catch (e: Exception) { // block id: 157
            if (true) { Enum_1674927317742_109.defaultValue } else { Enum_1674927317742_109.defaultValue } ;
            ((var_1674927317742_164&127)..(var_1674927317742_164&127):((var_1674927317742_133|1)));
            [70, 83, (-31), var_1674927317742_133, (-41), (-44), (-118), var_1674927317742_133, 60, var_1674927317742_133]
        } finally { // block id: 181
            var_1674927317742_58;
            [var_1674927317742_133, var_1674927317742_133, var_1674927317742_133, 5, 17, (-42), (-99), var_1674927317742_133, (-99), var_1674927317742_133]
        }
    } finally { // block id: 194
        var_1674927317742_58;
        Int64(var_1674927317742_133);
        Enum_1674927317742_109.defaultValue|>func_1674927317742_199
    }
}

main(): Int64 {
    try {
        let var_1674927317742_28 : Int32 = Int32(Int8(UInt8(20)));
        var var_1674927317742_73 : Rune = r'x';
        if (var_1674927317742_11) { // block id: 14
            var_1674927317742_17 ** var_1674927317742_17;
            var var_1674927317742_22 : Unit = ();
            var_1674927317742_22;
            if (var_1674927317742_11) { (var_1674927317742_28, var_1674927317742_22, UInt16(163), var_1674927317742_22, r'o', var_1674927317742_37, r'P') } else { var_1674927317742_42 } 
        } else if (var_1674927317742_11) { // block id: 55
            UInt32(52);
            var_1674927317742_58;
            var_1674927317742_42
        } else { // block id: 61
            48.0;
            var_1674927317742_58;
            if (var_1674927317742_11) { var_1674927317742_42 } else { (var_1674927317742_28, (), UInt16(233), (), var_1674927317742_73, var_1674927317742_37, var_1674927317742_73) } 
        }[3];
        func_1674927317742_90(namedParam_1674927317742_91 : var_1674927317742_1407, namedParam_1674927317742_92 : var_1674927317742_242, optionalParam_1674927317742_93 : (Int32(-55), (), UInt16(240), var_1674927317742_1505, r'I', Float32(10.0), r'3'))[9]
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1674927317742_28*var_1674927317742_28), 64)
        crccheck.updateBuffer(UInt64(var_1674927317742_150*var_1674927317742_150), 64)
        crccheck.updateBuffer(UInt64(var_1674927317742_257*var_1674927317742_257), 64)
        crccheck.updateBuffer(UInt64(var_1674927317742_680*var_1674927317742_680), 64)
        crccheck.updateBuffer(UInt64(var_1674927317742_1407*var_1674927317742_1407), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0, T1> Struct_1674927317742_1179<T0, T1> {

}

extend Enum_1674927317742_543 {

}

extend Class_1674927317742_704 {

}

