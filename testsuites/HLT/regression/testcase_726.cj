/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

internal var var_1734448537695_15: Option<Int16> = Option<Int16>.None
public let var_1734448537695_47: UInt = UInt64(UInt64(51))
public var var_1734448537695_71: Range<UInt64> = ((UInt64(UInt64(Int16(Int16(Int16(-123))))) & 127)..=(UInt64(UInt64(244)) &
    127) : (Int64(40) | 1))
public var var_1734448537695_80: Byte = UInt8(163)
@Deprecated
public var var_1734448537695_83: Struct_1734448537695_18 = Struct_1734448537695_18()
@Deprecated
public var var_1734448537695_103: Unit = ()
internal var var_1734448537695_107: Int32 = Int32(UInt8(UInt8(Int8(5))))
public const var_1734448537695_137: Bool = true
public let var_1734448537695_140: UInt32 = UInt32(UInt16(37))
@Deprecated
internal var var_1734448537695_156: UInt16 = UInt16(UInt16(UInt16(Int8(Int8(-7)))))
public var var_1734448537695_170: Option<Struct_1734448537695_18> = (((UInt8(UInt8(Int8(UInt8(120)))) & 127)..(UInt8(UInt8(UInt8(UInt8(75)))) &
    127) : (Int64(Int8(Int8(-26))) | 1)) as Struct_1734448537695_18)
public var var_1734448537695_226: Array<Int8> = [Int8(UInt8(6)), Int8(118), Int8(UInt8(168)), Int8(Int8(-84)), Int8(79),
    Int8(Int8(-69)), Int8(Int8(Int8(UInt8(98)))), Int8(-40), Int8(Int8(-26)), Int8(-72)]
internal let var_1734448537695_273: Interface_1734448537695_199<Int64, UInt64> = Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>()
@Deprecated
public var var_1734448537695_287: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
const var_1734448537695_318: Int32 = 48
@Deprecated
public const var_1734448537695_323: Int16 = 61
public const var_1734448537695_339: UInt16 = 50
public const var_1734448537695_342: Int8 = -106
internal const var_1734448537695_346: Float64 = 65.0
@Deprecated
public const var_1734448537695_361: Unit = ()
public let var_1734448537695_366: Rune = r'M'
internal var var_1734448537695_373: ?Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>> = Option<Class_1734448537695_195<Array<UInt64>,
        Int16, Array<UInt64>>>.None
public let var_1734448537695_428: Range<UInt8> = ((UInt8(UInt8(132)) & 127)..(UInt8(UInt8(228)) & 127) : (Int64(37) | 1))
public var var_1734448537695_434: Int = Int64(38)
public var var_1734448537695_440: String = """
d&L:8
D3=|h
"""
public var var_1734448537695_445: UInt16 = UInt16(Int16(10))
public var var_1734448537695_485: Int16 = Int16(Int16(-68))
public var var_1734448537695_497: Class_1734448537695_493 = Class_1734448537695_493()
public var var_1734448537695_523: Bool = false
var var_1734448537695_554: Class_1734448537695_547 = Class_1734448537695_547()
public let var_1734448537695_620: (UInt16, Unit, Bool, Range<UInt64>, UInt8) = (UInt16(Int16(UInt16(UInt16(61)))), (), ([UInt64(UInt64(194)),
        UInt64(UInt64(141)), UInt64(194), UInt64(157), UInt64(Int32(-42)), UInt64(UInt32(13)), UInt64(234),
        UInt64(UInt16(177)), UInt64(Int32(47)), UInt64(Int64(64))] is (Bool, UInt32, Rune, Rune) -> Unit), ((UInt64(UInt64(67)) &
        127)..(UInt64(UInt64(221)) & 127) : (Int64(72) | 1)), UInt8(64))
@Deprecated
public var var_1734448537695_664: Int = Int64(100)
public let var_1734448537695_680: Float32 = Float32(-55.0)
public var var_1734448537695_723: ((Bool, (UInt16, Unit, Bool, Range<UInt64>, UInt8), Range<Int32>, Array<Range<Int32>>, 
    Range<Int8>), Range<Int32>, ((UInt16, Unit, Bool, Range<UInt64>, UInt8), Float64, (UInt16, Unit, Bool, Range<UInt64>, 
    UInt8), Range<UInt64>, Range<UInt16>, Array<Unit>), Bool, Option<Int16>, Range<UInt32>, Int64) = ((true, (UInt16(12),
            (), false, ((UInt64(UInt64(7)) & 127)..(UInt64(UInt64(237)) & 127) : (Int64(45) | 1)), UInt8(232)), ((Int32(Int32(Int8(-40))) &
            127)..(Int32(Int32(-13)) & 127) : (Int64(UInt64(194)) | 1)), [((Int32(Int32(-114)) & 127)..=(Int32(Int32(60)) &
            127) : (Int64(78) | 1)), ((Int32(Int32(28)) & 127)..=(Int32(Int32(52)) & 127) : (Int64(-37) | 1)),
            ((Int32(Int32(44)) & 127)..(Int32(Int32(50)) & 127) : (Int64(-47) | 1)),
            ((Int32(Int32(55)) & 127)..=(Int32(Int32(-83)) & 127) : (Int64(29) | 1)),
            ((Int32(Int32(87)) & 127)..(Int32(Int32(-57)) & 127) : (Int64(107) | 1)),
            ((Int32(Int32(-58)) & 127)..(Int32(Int32(83)) & 127) : (Int64(-14) | 1)),
            ((Int32(Int32(-68)) & 127)..=(Int32(Int32(-26)) & 127) : (Int64(56) | 1)),
            ((Int32(Int32(12)) & 127)..(Int32(Int32(-23)) & 127) : (Int64(-12) | 1)),
            ((Int32(Int32(-117)) & 127)..=(Int32(Int32(-23)) & 127) : (Int64(-70) | 1)),
            ((Int32(Int32(-83)) & 127)..=(Int32(Int32(66)) & 127) : (Int64(95) | 1))], ((Int8(Int8(-75)) & 127)..=(Int8(Int8(-18)) &
            127) : (Int64(0) | 1))), ((Int32(Int32(125)) & 127)..=(Int32(Int32(-48)) & 127) : (Int64(-92) | 1)), ((UInt16(57),
            (), true, ((UInt64(UInt64(201)) & 127)..=(UInt64(UInt64(153)) & 127) : (Int64(44) | 1)), UInt8(243)),
        Float64(71.0), (UInt16(UInt8(174)), (), false, ((UInt64(UInt64(232)) & 127)..(UInt64(UInt64(40)) & 127) : (Int64(36) |
                1)), UInt8(85)), ((UInt64(UInt64(167)) & 127)..(UInt64(UInt64(30)) & 127) : (Int64(33) | 1)), ((UInt16(UInt16(84)) &
            127)..(UInt16(UInt16(117)) & 127) : (Int64(-83) | 1)), [(), (), (), (), (), (), (), (), (), ()]), true, (Int64(65) as Int16),
    ((UInt32(UInt32(193)) & 127)..(UInt32(UInt32(12)) & 127) : (Int64(-15) | 1)), Int64(UInt32(43)))
@Deprecated
public let var_1734448537695_798: Int8 = Int8(-108)
internal var var_1734448537695_834: Int32 = Int32(UInt16(Int16(UInt16(128))))
@Deprecated
public const var_1734448537695_860: UInt = 71
@Deprecated
internal const var_1734448537695_866: UInt = 215
var var_1734448537695_876: (UInt16, Unit, Bool, Range<UInt64>, UInt8) = (UInt16(UInt16(226)), (), false, ((UInt64(UInt64(174)) &
        127)..=(UInt64(UInt64(62)) & 127) : (Int64(UInt8(Int8(76))) | 1)), UInt8(189))
@Deprecated
public var var_1734448537695_971: ((UInt16, Unit, Bool, Range<UInt64>, UInt8), Float64, (UInt16, Unit, Bool, Range<UInt64>, 
    UInt8), Range<UInt64>, Range<UInt16>, Array<Unit>) = ((UInt16(10), (), true, ((UInt64(UInt64(73)) & 127)..(UInt64(UInt64(56)) &
            127) : (Int64(-17) | 1)), UInt8(21)), Float64(Float32(-47.0)), (UInt16(Int8(39)), (), true, ((UInt64(UInt64(Int64(84))) &
            127)..(UInt64(UInt64(UInt32(30))) & 127) : (Int64(-42) | 1)), UInt8(209)), ((UInt64(UInt64(UInt16(UInt8(193)))) &
        127)..=(UInt64(UInt64(Int8(-32))) & 127) : (Int64(-84) | 1)), ((UInt16(UInt16(UInt16(UInt8(163)))) & 127)..(UInt16(UInt16(Int16(-24))) &
        127) : (Int64(103) | 1)), [(), (), (), (), (), (), (), (), (), ()])
public let var_1734448537695_1031: Array<Option<Int16>> = [((UInt16(Int8(99)), (), false, ((UInt64(UInt64(87)) & 127)..=(UInt64(UInt64(226)) &
        127) : (Int64(-72) | 1)), UInt8(170)) as Int16), (Int16(57) as Int16), Option<Int16>.None,
    (("oS`m\\~M~a{,", [UInt64(40), UInt64(148), UInt64(153), UInt64(162), UInt64(211), UInt64(76), UInt64(82),
        UInt64(125), UInt64(108), UInt64(252)], ((false, (UInt16(109), (), true, ((UInt64(UInt64(244)) & 127)..=(UInt64(UInt64(138)) &
                    127) : (Int64(34) | 1)), UInt8(42)), ((Int32(Int32(12)) & 127)..=(Int32(Int32(78)) & 127) : (Int64(57) |
                1)), [((Int32(Int32(115)) & 127)..=(Int32(Int32(83)) & 127) : (Int64(-78) | 1)),
                ((Int32(Int32(121)) & 127)..=(Int32(Int32(-37)) & 127) : (Int64(30) | 1)),
                ((Int32(Int32(-121)) & 127)..(Int32(Int32(101)) & 127) : (Int64(-44) | 1)),
                ((Int32(Int32(-31)) & 127)..=(Int32(Int32(-114)) & 127) : (Int64(82) | 1)),
                ((Int32(Int32(125)) & 127)..(Int32(Int32(-9)) & 127) : (Int64(-122) | 1)),
                ((Int32(Int32(45)) & 127)..=(Int32(Int32(15)) & 127) : (Int64(-23) | 1)),
                ((Int32(Int32(0)) & 127)..(Int32(Int32(65)) & 127) : (Int64(55) | 1)),
                ((Int32(Int32(24)) & 127)..=(Int32(Int32(98)) & 127) : (Int64(75) | 1)),
                ((Int32(Int32(-26)) & 127)..(Int32(Int32(119)) & 127) : (Int64(-56) | 1)),
                ((Int32(Int32(7)) & 127)..(Int32(Int32(-114)) & 127) : (Int64(3) | 1))], ((Int8(Int8(26)) & 127)..=(Int8(Int8(-63)) &
                127) : (Int64(13) | 1))), UInt64(121), Int32(95), Float64(7.0), ((Int32(Int32(105)) & 127)..(Int32(Int32(9)) &
            127) : (Int64(-62) | 1)), UInt16(145)), UInt64(UInt16(238)), (((UInt8(UInt8(116)) & 127)..=(UInt8(UInt8(145)) &
            127) : (Int64(113) | 1)), Option<Int16>.None, Int64(-107), Int64(-50), Option<Int16>.None, "0Z+'d Sk13"), ((false,
            (UInt16(84), (), false, ((UInt64(UInt64(118)) & 127)..=(UInt64(UInt64(218)) & 127) : (Int64(-128) | 1)),
                UInt8(227)), ((Int32(Int32(116)) & 127)..(Int32(Int32(-24)) & 127) : (Int64(45) | 1)), [((Int32(Int32(1)) &
                127)..(Int32(Int32(32)) & 127) : (Int64(32) | 1)),
                ((Int32(Int32(11)) & 127)..=(Int32(Int32(-53)) & 127) : (Int64(4) | 1)),
                ((Int32(Int32(-94)) & 127)..(Int32(Int32(18)) & 127) : (Int64(74) | 1)),
                ((Int32(Int32(124)) & 127)..(Int32(Int32(10)) & 127) : (Int64(-6) | 1)),
                ((Int32(Int32(86)) & 127)..(Int32(Int32(105)) & 127) : (Int64(-107) | 1)),
                ((Int32(Int32(-65)) & 127)..=(Int32(Int32(-128)) & 127) : (Int64(57) | 1)),
                ((Int32(Int32(70)) & 127)..(Int32(Int32(35)) & 127) : (Int64(65) | 1)),
                ((Int32(Int32(89)) & 127)..(Int32(Int32(-22)) & 127) : (Int64(82) | 1)),
                ((Int32(Int32(-106)) & 127)..=(Int32(Int32(9)) & 127) : (Int64(-100) | 1)),
                ((Int32(Int32(55)) & 127)..=(Int32(Int32(-45)) & 127) : (Int64(103) | 1))], ((Int8(Int8(50)) & 127)..=(Int8(Int8(-38)) &
                127) : (Int64(119) | 1))), ((Int32(Int32(71)) & 127)..(Int32(Int32(-38)) & 127) : (Int64(11) | 1)), ((UInt16(83),
                (), true, ((UInt64(UInt64(45)) & 127)..(UInt64(UInt64(144)) & 127) : (Int64(-24) | 1)), UInt8(136)),
            Float64(72.0), (UInt16(205), (), true, ((UInt64(UInt64(197)) & 127)..=(UInt64(UInt64(186)) & 127) : (Int64(-20) |
                    1)), UInt8(9)), ((UInt64(UInt64(234)) & 127)..=(UInt64(UInt64(62)) & 127) : (Int64(108) | 1)), ((UInt16(UInt16(237)) &
                127)..(UInt16(UInt16(213)) & 127) : (Int64(-14) | 1)), [(), (), (), (), (), (), (), (), (), ()]), true, Option<Int16>
            .None, ((UInt32(UInt32(138)) & 127)..(UInt32(UInt32(95)) & 127) : (Int64(91) | 1)), Int64(21)), ()) as Int16),
    Option<Int16>.None, Option<Int16>.None, (r'6' as Int16), (UInt32(77) as Int16), Option<Int16>.None,
    ([([Int8(90), Int8(61), Int8(-37), Int8(112), Int8(4), Int8(7), Int8(15), Int8(-51), Int8(43), Int8(73)] as Int16),
    Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, (Option<Int16>.None as Int16), Option<Int16>.None,
    (UInt8(73) as Int16), Option<Int16>.None, (Option<Int16>.None as Int16), Option<Int16>.None] as Int16)]
@Deprecated
public var var_1734448537695_1327: Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>> = Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>()
public const var_1734448537695_1362: Int32 = 48
public var var_1734448537695_1378: Int8 = Int8(UInt8(21))
public const var_1734448537695_1396: Int64 = -24
public let var_1734448537695_1423: Class_1734448537695_1419 = Class_1734448537695_1419()
public let var_1734448537695_1449: Range<Int32> = ((Int32(Int32(UInt32(9))) & 127)..=(Int32(Int32(Int8(UInt8(166)))) &
    127) : (Int64(-93) | 1))
public let var_1734448537695_1462: Range<Int32> = ((Int32(Int32(-19)) & 127)..=(Int32(Int32(UInt16(Int16(UInt16(182))))) &
    127) : (Int64(62) | 1))
var var_1734448537695_1473: Int32 = Int32(Int16(Int16(UInt8(Int8(-67)))))
var var_1734448537695_1481: Range<Int32> = ((Int32(Int32(41)) & 127)..=(Int32(Int32(22)) & 127) : (Int64(-113) | 1))
public var var_1734448537695_1500: Option<Int16> = (Int8(-18) as Int16)
public let var_1734448537695_1510: (Bool, (UInt16, Unit, Bool, Range<UInt64>, UInt8), Range<Int32>, Array<Range<Int32>>, 
    Range<Int8>) = (false, (UInt16(UInt16(UInt16(88))), (), true, ((UInt64(UInt64(251)) & 127)..=(UInt64(UInt64(83)) &
            127) : (Int64(-109) | 1)), UInt8(66)), ((Int32(Int32(UInt16(Int16(68)))) & 127)..(Int32(Int32(UInt16(167))) &
        127) : (Int64(UInt64(UInt8(95))) | 1)), [((Int32(Int32(5)) & 127)..(Int32(Int32(113)) & 127) : (Int64(67) | 1)),
        ((Int32(Int32(92)) & 127)..=(Int32(Int32(48)) & 127) : (Int64(-52) | 1)),
        ((Int32(Int32(-101)) & 127)..=(Int32(Int32(-108)) & 127) : (Int64(68) | 1)),
        ((Int32(Int32(-65)) & 127)..(Int32(Int32(71)) & 127) : (Int64(-14) | 1)),
        ((Int32(Int32(-62)) & 127)..(Int32(Int32(79)) & 127) : (Int64(94) | 1)),
        ((Int32(Int32(-91)) & 127)..(Int32(Int32(126)) & 127) : (Int64(92) | 1)),
        ((Int32(Int32(-96)) & 127)..=(Int32(Int32(37)) & 127) : (Int64(-67) | 1)),
        ((Int32(Int32(-30)) & 127)..(Int32(Int32(28)) & 127) : (Int64(90) | 1)),
        ((Int32(Int32(-7)) & 127)..=(Int32(Int32(-8)) & 127) : (Int64(87) | 1)),
        ((Int32(Int32(84)) & 127)..=(Int32(Int32(-86)) & 127) : (Int64(-52) | 1))], ((Int8(Int8(-44)) & 127)..=(Int8(Int8(UInt8(Int8(-69)))) &
        127) : (Int64(90) | 1)))
public var var_1734448537695_1564: Range<UInt32> = ((UInt32(UInt32(Int32(-70))) & 127)..(UInt32(UInt32(49)) & 127) : (Int64(22) |
    1))
public const var_1734448537695_1579: Unit = ()
public let var_1734448537695_1587: Interface_1734448537695_200 = Class_1734448537695_547()

@Deprecated
public struct Struct_1734448537695_18 {
    @Frozen
    public init() { // block id: 20

    }

    public var var_1734448537695_145: Int16 = Int16(86)
}

@Frozen
public func func_1734448537695_22(param_1734448537695_23: Bool, namedParam_1734448537695_24!: UInt32,
    optionalParam_1734448537695_25!: Struct_1734448537695_18 = Struct_1734448537695_18(),
    optionalParam_1734448537695_27!: Int64 = Int64(-111)): Struct_1734448537695_18 { // block id: 29
    Int64([Int8(-72), Int8(34), Int8(-80), Int8(56), Int8(-53), Int8(-17), Int8(51), Int8(-113), Int8(4), Int8(-41)][8]);
    var var_1734448537695_62: Bool = (UInt64(UInt64(160)) is Range<Int16>);
    var var_1734448537695_126: Float64 = Float64(44.0);
    if ((var_1734448537695_47 is Range<UInt64>)) { // block id: 50
        try { // block id: 52
            "aFl1w8KB^M"
        } finally { // block id: 54
            UInt16(253) / ((UInt16(2)) | 1);
            ();
            "Lkp!o3K4g&"
        };
        if (var_1734448537695_62) { // block id: 66
            if (var_1734448537695_62) {
                ((UInt64(UInt64(228)) & 127)..(UInt64(UInt64(166)) & 127) : (Int64(105) | 1))
            } else {
                var_1734448537695_71
            };
            var_1734448537695_80;
            var_1734448537695_83
        } else { // block id: 85
            var_1734448537695_83
        }
    } else if (var_1734448537695_62) { // block id: 88
        const var_1734448537695_90: Unit = ();
        var_1734448537695_90;
        if (var_1734448537695_62) {
            var_1734448537695_83
        } else {
            Struct_1734448537695_18()
        }
    } else { // block id: 96
        match (r'O') {
            case _: Range<UInt8> =>
                var_1734448537695_103;
                var_1734448537695_107 |= Int32(-35)

            case r'K' | r'd' | r'M' =>
                var_1734448537695_62 &&= true
                Float32(-75.0);
                ()

            case _ => var_1734448537695_126 -= var_1734448537695_126

            case _ => var_1734448537695_103
        };
        UInt16(Int8(-36));
        Struct_1734448537695_18()
    }
}

public interface Interface_1734448537695_200 {}

public interface Interface_1734448537695_199<T0, T1> <: Interface_1734448537695_200 {
    func func_1734448537695_276(namedParam_1734448537695_277!: String, namedParam_1734448537695_278!: Unit,
        namedParam_1734448537695_279!: Struct_1734448537695_18, namedParam_1734448537695_280!: Range<Int64>): Interface_1734448537695_200 { // block id: 281
        try { // block id: 283
            var_1734448537695_287[4];
            func_1734448537695_301<Float64, UInt16>(var_1734448537695_137,
                namedParam_1734448537695_303: var_1734448537695_140,
                optionalParam_1734448537695_304: var_1734448537695_366,
                namedParam_1734448537695_306: var_1734448537695_366);
            UInt16(44)
        } finally { // block id: 370
            match (var_1734448537695_373) {
                case _ => var_1734448537695_339

                case _: Range<UInt32> =>
                    Int32(-25);
                    ((UInt64(UInt64(196)) & 127)..(UInt64(UInt64(246)) & 127) : (Int64(-106) | 1));
                    var_1734448537695_339

                case _: Range<UInt32> =>
                    (var_1734448537695_156, (), true, ((UInt64(UInt64(183)) & 127)..(UInt64(UInt64(99)) & 127) : (Int64(58) |
                            1)), var_1734448537695_80);
                    ((UInt8(UInt8(65)) & 127)..=(UInt8(UInt8(0)) & 127) : (Int64(-19) | 1));
                    UInt16(43)

                case _ =>
                    var_1734448537695_83;
                    ();
                    UInt16(180)

                case _ =>
                    UInt16(8);
                    var_1734448537695_156
            }
        };
        Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>(
            namedParam_1734448537695_418: var_1734448537695_497.func_1734448537695_500(var_1734448537695_620))
    }
}

public sealed interface Interface_1734448537695_198 <: Interface_1734448537695_199<Int64, UInt64> &
    Interface_1734448537695_200 {
    func func_1734448537695_276(namedParam_1734448537695_277!: String, namedParam_1734448537695_278!: Unit,
        namedParam_1734448537695_279!: Struct_1734448537695_18, namedParam_1734448537695_280!: Range<Int64>): Interface_1734448537695_200 { // block id: 1412
        var var_1734448537695_1546: Float64 = Float64(Float64(-8.0));
        (var_1734448537695_1423.func_1734448537695_1426(namedParam_1734448537695_1427: """
 !NXG
-H9O7
""",
            namedParam_1734448537695_1428: (var_1734448537695_1510, var_1734448537695_1449, ((var_1734448537695_339, (),
                        var_1734448537695_523, ((UInt64(UInt64(18)) & 127)..=(UInt64(UInt64(210)) & 127) : (Int64(0) | 1)),
                        UInt8(201)), var_1734448537695_1546, (UInt16(88), (), false, ((UInt64(var_1734448537695_860) &
                            127)..(UInt64(UInt64(148)) & 127) : (var_1734448537695_664 | 1)), UInt8(174)),
                    var_1734448537695_71, ((UInt16(UInt16(222)) & 127)..(UInt16(UInt16(190)) & 127) : (Int64(47) | 1)),
                    var_1734448537695_287), var_1734448537695_523, Option<Int16>.None, var_1734448537695_1564, Int64(-123)),
            namedParam_1734448537695_1429: Int8(83), namedParam_1734448537695_1430: var_1734448537695_339) ?? try { // block id: 1574
            var_1734448537695_361;
            ((Int32(Int32(-87)) & 127)..(Int32(Int32(41)) & 127) : (Int64(-22) | 1))
        } finally { // block id: 1577
            var_1734448537695_1579;
            var_1734448537695_1564;
            ((Int32(Int32(-108)) & 127)..(Int32(var_1734448537695_1362) & 127) : (Int64(-117) | 1))
        });
        var_1734448537695_1587
    }
}

@Deprecated
public open class Class_1734448537695_195<T0, T1, T2> <: Interface_1734448537695_198 & Resource {
    public init() { // block id: 197

    }

    @Frozen
    public mut prop var_1734448537695_247: Rune { // block id: 248
        get() { // block id: 250
            r'0';
            var_1734448537695_1405
        }
        set(Value) { // block id: 254
            Int32(-111);
            ();
            var_1734448537695_1405 = Value
        }
    }
    public init(optionalParam_1734448537695_412!: Int32 = Int32(UInt32(Int16(UInt16(UInt8(196))))),
        namedParam_1734448537695_418!: (UInt16, Unit, Bool, Range<UInt64>, UInt8)) { // block id: 419
        let var_1734448537695_450: (Range<UInt8>, Option<Int16>, Int64, Int64, Option<Int16>, String) = (((UInt8(UInt8(232)) &
                127)..=(UInt8(UInt8(87)) & 127) : (Int64(20) | 1)), (Float64(Float64(Float64(72.0))) as Int16), Int64(UInt8(16)),
            Int64(Int8(67)), (Int16(22) as Int16), "g9E-Yl5zEw");
        match (try { // block id: 424
            [UInt64(122), UInt64(10), UInt64(172), UInt64(4), UInt64(231), UInt64(122), UInt64(9), UInt64(162),
                UInt64(161), UInt64(117)];
            var var_1734448537695_431: Option<Int16> = Option<Int16>.None;
            (var_1734448537695_428, var_1734448537695_431, var_1734448537695_434, Int64(49), Option<Int16>.Some(
                    var_1734448537695_323), var_1734448537695_440)
        } finally { // block id: 442
            var_1734448537695_445 *= UInt16(102)
            var_1734448537695_450
        }[1]) {
            case _ =>
                ();
                ()

            case _ =>
                var_1734448537695_103;
                ()

            case _: Int64 =>
                UInt16(14);
                var_1734448537695_103

            case _ =>
                var_1734448537695_485 <<= ((Int16(58)) & 7)
                var_1734448537695_485++;
                ()
        }
    };

    public static var var_1734448537695_1353: Unit = ();
    var var_1734448537695_1405: Rune = r'Z';
    public open override func func_1734448537695_276(namedParam_1734448537695_277!: String,
        namedParam_1734448537695_278!: Unit, namedParam_1734448537695_279!: Struct_1734448537695_18,
        namedParam_1734448537695_280!: Range<Int64>): Interface_1734448537695_200 { // block id: 1590
        Int8(46);
        Class_1734448537695_493()
    }

    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Frozen
@Deprecated
public const func func_1734448537695_327(optionalParam_1734448537695_328!: UInt16 = 69,
    optionalParam_1734448537695_330!: UInt32 = 232, optionalParam_1734448537695_332!: Int8 = 3): Int16 { // block id: 334
    var_1734448537695_323 & -42
}

internal const func func_1734448537695_309(optionalParam_1734448537695_310!: Int8 = 105,
    optionalParam_1734448537695_312!: Float64 = -40.0, optionalParam_1734448537695_314!: Int16 = -20): Int16 { // block id: 316
    var_1734448537695_318;
    (var_1734448537695_323 % ((-112) | 1)) * func_1734448537695_327(
        optionalParam_1734448537695_328: var_1734448537695_339, optionalParam_1734448537695_332: var_1734448537695_342)
}

public const func func_1734448537695_301<T0, T1>(param_1734448537695_302: Bool, namedParam_1734448537695_303!: UInt32,
    optionalParam_1734448537695_304!: Rune = r'h', namedParam_1734448537695_306!: Rune): Unit { // block id: 307
    func_1734448537695_309(optionalParam_1734448537695_310: -64, optionalParam_1734448537695_312: var_1734448537695_346);
    const func func_1734448537695_349(namedParam_1734448537695_350!: Int16, namedParam_1734448537695_351!: UInt8,
        namedParam_1734448537695_352!: Float64, optionalParam_1734448537695_353!: UInt8 = 246): Unit { // block id: 355
        ()
    };

    func_1734448537695_349(namedParam_1734448537695_350: -117, namedParam_1734448537695_351: 160,
        namedParam_1734448537695_352: var_1734448537695_346);
    var_1734448537695_361
}

public open class Class_1734448537695_493 <: Interface_1734448537695_200 {
    public init() { // block id: 495

    }

    private static let var_1734448537695_506: Array<Range<Int32>> = [((Int32(Int32(-60)) & 127)..=(Int32(Int32(104)) &
        127) : (Int64(116) | 1)), ((Int32(Int32(-118)) & 127)..=(Int32(Int32(39)) & 127) : (Int64(-25) | 1)),
        ((Int32(Int32(-36)) & 127)..=(Int32(Int32(-105)) & 127) : (Int64(123) | 1)),
        ((Int32(Int32(-3)) & 127)..=(Int32(Int32(98)) & 127) : (Int64(26) | 1)),
        ((Int32(Int32(-19)) & 127)..(Int32(Int32(-21)) & 127) : (Int64(-123) | 1)),
        ((Int32(Int32(-88)) & 127)..(Int32(Int32(-31)) & 127) : (Int64(-29) | 1)),
        ((Int32(Int32(84)) & 127)..(Int32(Int32(-42)) & 127) : (Int64(-46) | 1)),
        ((Int32(Int32(-31)) & 127)..=(Int32(Int32(-9)) & 127) : (Int64(-101) | 1)),
        ((Int32(Int32(69)) & 127)..(Int32(Int32(108)) & 127) : (Int64(121) | 1)),
        ((Int32(Int32(19)) & 127)..(Int32(Int32(-50)) & 127) : (Int64(87) | 1))];

    @Frozen
    private mut prop var_1734448537695_532: Range<Int8> { // block id: 533
        get() { // block id: 535
            ((Int8(Int8(-61)) & 127)..=(Int8(Int8(-2)) & 127) : (Int64(97) | 1))
        }
        set(Value) { // block id: 539

        }
    }
    protected let var_1734448537695_589: Array<Range<UInt16>> = [((UInt16(UInt16(22)) & 127)..=(UInt16(UInt16(217)) & 127) : (Int64(-57) |
        1)), ((UInt16(UInt16(234)) & 127)..=(UInt16(UInt16(34)) & 127) : (Int64(-116) | 1)),
        ((UInt16(UInt16(220)) & 127)..=(UInt16(UInt16(84)) & 127) : (Int64(-82) | 1)),
        ((UInt16(UInt16(125)) & 127)..(UInt16(UInt16(118)) & 127) : (Int64(-96) | 1)),
        ((UInt16(UInt16(206)) & 127)..=(UInt16(UInt16(172)) & 127) : (Int64(63) | 1)),
        ((UInt16(UInt16(60)) & 127)..(UInt16(UInt16(181)) & 127) : (Int64(-100) | 1)),
        ((UInt16(UInt16(22)) & 127)..=(UInt16(UInt16(54)) & 127) : (Int64(-118) | 1)),
        ((UInt16(UInt16(205)) & 127)..=(UInt16(UInt16(163)) & 127) : (Int64(-17) | 1)),
        ((UInt16(UInt16(118)) & 127)..=(UInt16(UInt16(219)) & 127) : (Int64(89) | 1)),
        ((UInt16(UInt16(198)) & 127)..(UInt16(UInt16(206)) & 127) : (Int64(-128) | 1))];
    public open func func_1734448537695_500(param_1734448537695_501: (UInt16, Unit, Bool, Range<UInt64>, UInt8)): (UInt16, 
        Unit, Bool, Range<UInt64>, UInt8) { // block id: 502
        var_1734448537695_506[1];
        var var_1734448537695_516: Bool = (UInt64(224) is (UInt16, UInt32, Int8) -> Int16);
        var var_1734448537695_527: UInt8 = UInt8(223);
        var var_1734448537695_543: Float64 = Float64(93.0);
        ((var_1734448537695_516, (UInt16(65), var_1734448537695_361, var_1734448537695_523, ((UInt64(UInt64(30)) & 127)..(UInt64(UInt64(49)) &
                        127) : (Int64(62) | 1)), var_1734448537695_527), ((Int32(Int32(-91)) & 127)..=(Int32(Int32(-24)) &
                    127) : (Int64(118) | 1)), var_1734448537695_506, var_1734448537695_532)[1], var_1734448537695_543 **
                var_1734448537695_543, var_1734448537695_554.var_1734448537695_557, (var_1734448537695_445, (), false, ((UInt64(UInt64(204)) &
                    127)..=(UInt64(UInt64(163)) & 127) : (Int64(85) | 1)), var_1734448537695_527)[3],
            var_1734448537695_589[4], [(), (), (), (), (), (), (), (), (), ()])[2]
    };

    @Frozen
    static prop var_1734448537695_814: Byte { // block id: 815
        get() { // block id: 817
            ();
            UInt8(UInt8(Int8(122)))
        }
    }

    @Frozen
    static prop var_1734448537695_851: String { // block id: 852
        get() { // block id: 854
            Option<Int16>.None;
            """
p=)C1
OT7ua
"""
        }
    }
    static let var_1734448537695_902: (Range<UInt8>, Option<Int16>, Int64, Int64, Option<Int16>, String) = (((UInt8(UInt8(182)) &
            127)..=(UInt8(UInt8(170)) & 127) : (Int64(-94) | 1)), Option<Int16>.None, Int64(-31), Int64(-93), Option<Int16>
            .None, "eP(ufaMq8X")
}

public interface Interface_1734448537695_551 {}

public sealed interface Interface_1734448537695_552 {}

public interface Interface_1734448537695_550 <: Interface_1734448537695_551 & Interface_1734448537695_552 {}

@Deprecated
public open class Class_1734448537695_547 <: Class_1734448537695_493 & Interface_1734448537695_200 & Interface_1734448537695_550 {
    @Frozen
    public init() { // block id: 549

    }

    @Frozen
    prop var_1734448537695_557: (UInt16, Unit, Bool, Range<UInt64>, UInt8) { // block id: 558
        get() { // block id: 560
            ();
            (UInt16(Int16(-111)), (), ((UInt16(45), (), false, ((UInt64(UInt64(122)) & 127)..(UInt64(UInt64(97)) & 127) : (Int64(-92) |
                        1)), UInt8(96)) is Interface_1734448537695_551), ((UInt64(UInt64(118)) & 127)..=(UInt64(UInt64(171)) &
                    127) : (Int64(16) | 1)), UInt8(186))
        }
    }
}

main(): Int64 {
    try {
        (var_1734448537695_15 ?? func_1734448537695_22(var_1734448537695_137,
            namedParam_1734448537695_24: var_1734448537695_140, optionalParam_1734448537695_25: var_1734448537695_83)
            .var_1734448537695_145);
        let var_1734448537695_223: Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>> = Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>();
        if (try { // block id: 149
            var_1734448537695_103;
            var_1734448537695_137
        } catch (_) { // block id: 152
            ();
            var_1734448537695_156 <= UInt16(183)
        }) { // block id: 163
            (var_1734448537695_170 ?? var_1734448537695_83)
        } else { // block id: 183
            func func_1734448537695_202(param_1734448537695_203: Array<Int8>): Class_1734448537695_195<Array<UInt64>,
                Int16, Array<UInt64>> { // block id: 204
                (Option<Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>>.None ?? try { // block id: 212
                    var var_1734448537695_214: Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>> = Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>();
                    var_1734448537695_214
                } finally { // block id: 216
                    var var_1734448537695_219: Int16 = Int16(-78);
                    var_1734448537695_219 *= Int16(-37)
                    var_1734448537695_223
                })
            };

            func func_1734448537695_267<T0, T1>(param_1734448537695_268: Option<Int16>,
                namedParam_1734448537695_269!: T0): (UInt16, Unit, Bool, Range<UInt64>, UInt8) { // block id: 270
                var_1734448537695_273.func_1734448537695_276(namedParam_1734448537695_277: if (false) { // block id: 650
                    if (true) {
                        "&}m/%>o%Hy"
                    } else {
                        """
|sX7x
u}:.p
"""
                    }
                } else { // block id: 655
                    """
,9*Q:
)mZ%]
"""
                }, namedParam_1734448537695_278: if (false) { // block id: 659
                    ()
                }, namedParam_1734448537695_279: var_1734448537695_83,
                    namedParam_1734448537695_280: ((Int64(var_1734448537695_664) & 127)..=(Int64(Int64(-19)) & 127) : (var_1734448537695_664 |
                        1)));
                const var_1734448537695_709: UInt32 = 92;
                var loopTimeVar_1734448537695_713: Int64 = 0;
                do {
                    loopTimeVar_1734448537695_713++;
                } while ((match ([((Int32(Int32(110)) & 127)..(Int32(Int32(95)) & 127) : (Int64(-97) | 1)),
                    ((Int32(Int32(-105)) & 127)..=(Int32(Int32(72)) & 127) : (Int64(112) | 1)),
                    ((Int32(Int32(-57)) & 127)..(Int32(Int32(-6)) & 127) : (Int64(111) | 1)),
                    ((Int32(Int32(-102)) & 127)..(Int32(Int32(51)) & 127) : (Int64(56) | 1)),
                    ((Int32(Int32(-47)) & 127)..(Int32(Int32(-66)) & 127) : (Int64(-45) | 1)),
                    ((Int32(Int32(28)) & 127)..=(Int32(Int32(38)) & 127) : (Int64(45) | 1)),
                    ((Int32(Int32(126)) & 127)..(Int32(Int32(-10)) & 127) : (Int64(-46) | 1)),
                    ((Int32(Int32(2)) & 127)..(Int32(Int32(121)) & 127) : (Int64(28) | 1)),
                    ((Int32(Int32(59)) & 127)..(Int32(Int32(-45)) & 127) : (Int64(-9) | 1)),
                    ((Int32(Int32(40)) & 127)..=(Int32(Int32(32)) & 127) : (Int64(1) | 1))][8]) {
                    case caseVar_1734448537695_675: Interface_1734448537695_550 => Float32(71.0) >= var_1734448537695_680

                    case _ => UInt8(150) > var_1734448537695_80

                    case caseVar_1734448537695_690: Interface_1734448537695_552 =>
                        var_1734448537695_523 ||= var_1734448537695_523
                        true

                    case caseVar_1734448537695_698 =>
                        var_1734448537695_361;
                        var_1734448537695_83;
                        var_1734448537695_523

                    case _ => var_1734448537695_140 <= var_1734448537695_709
                }) && loopTimeVar_1734448537695_713 < 100);
                Class_1734448537695_493.func_1734448537695_717()
            };

            let var_1734448537695_1234: ((Bool, (UInt16, Unit, Bool, Range<UInt64>, UInt8), Range<Int32>, Array<Range<Int32>>, 
                Range<Int8>), UInt64, Int32, Float64, Range<Int32>, UInt16) = (((Int32(UInt8(188)) is Float32), (UInt16(95),
                        (), false, ((UInt64(UInt64(21)) & 127)..(UInt64(UInt64(185)) & 127) : (Int64(111) | 1)), UInt8(203)),
                    ((Int32(Int32(Int16(104))) & 127)..=(Int32(Int32(83)) & 127) : (Int64(UInt32(23)) | 1)), [((Int32(Int32(-23)) &
                        127)..(Int32(Int32(-81)) & 127) : (Int64(101) | 1)),
                        ((Int32(Int32(113)) & 127)..(Int32(Int32(-122)) & 127) : (Int64(-38) | 1)),
                        ((Int32(Int32(31)) & 127)..=(Int32(Int32(111)) & 127) : (Int64(80) | 1)),
                        ((Int32(Int32(36)) & 127)..(Int32(Int32(27)) & 127) : (Int64(-73) | 1)),
                        ((Int32(Int32(-107)) & 127)..=(Int32(Int32(-40)) & 127) : (Int64(-25) | 1)),
                        ((Int32(Int32(64)) & 127)..=(Int32(Int32(-108)) & 127) : (Int64(36) | 1)),
                        ((Int32(Int32(-3)) & 127)..(Int32(Int32(-86)) & 127) : (Int64(109) | 1)),
                        ((Int32(Int32(85)) & 127)..=(Int32(Int32(12)) & 127) : (Int64(-125) | 1)),
                        ((Int32(Int32(111)) & 127)..(Int32(Int32(32)) & 127) : (Int64(13) | 1)),
                        ((Int32(Int32(34)) & 127)..=(Int32(Int32(-8)) & 127) : (Int64(-80) | 1))], ((Int8(Int8(-16)) &
                        127)..=(Int8(Int8(UInt8(92))) & 127) : (Int64(Int8(-99)) | 1))), UInt64(108), Int32(Int8(UInt8(UInt8(115)))),
                Float64(80.0), ((Int32(Int32(-125)) & 127)..=(Int32(Int32(Int8(Int8(2)))) & 127) : (Int64(-123) | 1)),
                UInt16(87));
            func func_1734448537695_185(optionalParam_1734448537695_186!: Int8 = Int8(10),
                optionalParam_1734448537695_188!: Unit = (), optionalParam_1734448537695_190!: Float32 = Float32(84.0)): Unit { // block id: 192
                func_1734448537695_202(var_1734448537695_226).var_1734448537695_247 = r'L'
                var var_1734448537695_1316: VArray<Unit, $1> = [()];
                try (resource = Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>()) { // block id: 259
                    func func_1734448537695_261(param_1734448537695_262: Range<UInt32>): Range<UInt64> { // block id: 263
                        func_1734448537695_267<String, Range<UInt16>>(var_1734448537695_1031[4],
                            namedParam_1734448537695_269: (var_1734448537695_1234, var_1734448537695_428,
                                Option<Bool>.Some(var_1734448537695_137), var_1734448537695_83, var_1734448537695_440)[4])[3]
                    };

                    func_1734448537695_261(((UInt32(UInt32(88)) & 127)..(UInt32(UInt32(223)) & 127) : (Int64(-107) | 1)));
                    var loopTimeVar_1734448537695_1312: Int64 = 0;
                    do {
                        loopTimeVar_1734448537695_1312++;
                    } while ((true) && loopTimeVar_1734448537695_1312 < 100);
                    var_1734448537695_1316[0]
                } finally { // block id: 1319
                    try { // block id: 1321
                        var_1734448537695_523 &&= false
                        Option<Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>>.Some(
                            var_1734448537695_1327)
                    } catch (e: Exception) { // block id: 1329
                        [(), (), var_1734448537695_103, (), var_1734448537695_361, (), (), var_1734448537695_103, (), ()];
                        Option<Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>>.None
                    } finally { // block id: 1342
                        var_1734448537695_373
                    };
                    if (var_1734448537695_523) { // block id: 1346
                        Int8(-120);
                        var_1734448537695_156;
                        var_1734448537695_361
                    }
                };
                Class_1734448537695_195<Array<UInt64>, Int16, Array<UInt64>>.var_1734448537695_1353
            };

            func_1734448537695_185(optionalParam_1734448537695_188: var_1734448537695_103);
            var_1734448537695_83
        };
        try { // block id: 1360
            var_1734448537695_1362;
            [Int64(-104), Int64(-5), Int64(52), Int64(86), Int64(-122), Int64(-19), Int64(95), Int64(47),
                var_1734448537695_434, Int64(-72)]
        } catch (_) { // block id: 1375
            var_1734448537695_1378++;
            ();
            let var_1734448537695_1386: Array<Int64> = [Int64(-35), Int64(-86), Int64(30), Int64(-118), Int64(-108),
                Int64(93), Int64(34), Int64(-40), Int64(57), Int64(18)];
            if (var_1734448537695_137) {
                [Int64(19), Int64(14), Int64(24), Int64(-72), Int64(47), Int64(-62), Int64(88), Int64(111), Int64(-88),
                    Int64(-78)]
            } else {
                var_1734448537695_1386
            }
        } finally { // block id: 1388
            [var_1734448537695_434, Int64(53), Int64(32), Int64(10), var_1734448537695_664, var_1734448537695_1396,
                Int64(-39), var_1734448537695_1396, Int64(109), var_1734448537695_1396]
        }[0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1734448537695_47 * var_1734448537695_47), 64)
        crcCheck.updateBuffer(UInt64(var_1734448537695_156 * var_1734448537695_156), 64)
        crcCheck.updateBuffer(UInt64(var_1734448537695_434 * var_1734448537695_434), 64)
        crcCheck.updateBuffer(UInt64(var_1734448537695_664 * var_1734448537695_664), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Struct_1734448537695_18 {}

extend Class_1734448537695_493 {
    @Frozen
    public static func func_1734448537695_717(): (UInt16, Unit, Bool, Range<UInt64>, UInt8) { // block id: 718
        const var_1734448537695_824: Int64 = 69;
        var var_1734448537695_843: Range<Int32> = ((Int32(Int32(-118)) & 127)..(Int32(Int32(104)) & 127) : (Int64(55) | 1));
        let var_1734448537695_915: (Bool, (UInt16, Unit, Bool, Range<UInt64>, UInt8), Range<Int32>, Array<Range<Int32>>, 
            Range<Int8>) = (false, (UInt16(Int8(104)), (), (UInt16(141) is Float32), ((UInt64(UInt64(Int16(-30))) & 127)..=(UInt64(UInt64(55)) &
                    127) : (Int64(-79) | 1)), UInt8(Int8(22))), ((Int32(Int32(Int8(62))) & 127)..=(Int32(Int32(Int32(62))) &
                127) : (Int64(120) | 1)), [((Int32(Int32(121)) & 127)..(Int32(Int32(UInt8(175))) & 127) : (Int64(117) | 1)),
                ((Int32(Int32(Int32(-25))) & 127)..(Int32(Int32(-114)) & 127) : (Int64(UInt16(226)) | 1)),
                ((Int32(Int32(-48)) & 127)..=(Int32(Int32(25)) & 127) : (Int64(-128) | 1)),
                ((Int32(Int32(-103)) & 127)..(Int32(Int32(-69)) & 127) : (Int64(-25) | 1)),
                ((Int32(Int32(119)) & 127)..(Int32(Int32(-60)) & 127) : (Int64(112) | 1)),
                ((Int32(Int32(Int16(-9))) & 127)..(Int32(Int32(25)) & 127) : (Int64(Int8(112)) | 1)),
                ((Int32(Int32(-41)) & 127)..=(Int32(Int32(100)) & 127) : (Int64(102) | 1)),
                ((Int32(Int32(-97)) & 127)..(Int32(Int32(-111)) & 127) : (Int64(-11) | 1)),
                ((Int32(Int32(-74)) & 127)..(Int32(Int32(-19)) & 127) : (Int64(110) | 1)),
                ((Int32(Int32(-92)) & 127)..=(Int32(Int32(102)) & 127) : (Int64(-112) | 1))], ((Int8(Int8(-12)) & 127)..=(Int8(Int8(-87)) &
                127) : (Int64(-46) | 1)));
        if (var_1734448537695_723[3]) {
            if (try { // block id: 785
                var_1734448537695_523
            } catch (e: Exception) { // block id: 787
                ();
                var var_1734448537695_790: UInt = UInt64(Int32(Int8(-45)));
                var_1734448537695_790;
                var_1734448537695_523
            }) { // block id: 795
                ((Int8(var_1734448537695_798) & 127)..=(Int8(Int8(75)) & 127) : (Int64(-115) | 1));
                ();
                ((Int32(Int32(17)) & 127)..(Int32(Int32(73)) & 127) : (Int64(-119) | 1))
            } else if (try { // block id: 805
                var var_1734448537695_807: Unit = ();
                var_1734448537695_807;
                ();
                var_1734448537695_523
            } catch (e: Exception) { // block id: 811
                ((UInt8(var_1734448537695_814) & 127)..(UInt8(var_1734448537695_814) & 127) : (var_1734448537695_824 | 1));
                if (false) {
                    r'a'
                } else {
                    r'T'
                };
                var_1734448537695_523
            }) { // block id: 831
                ((Int32(var_1734448537695_834) & 127)..=(Int32(var_1734448537695_834) & 127) : (Int64(-75) | 1))
            } else { // block id: 841
                var_1734448537695_843
            }
        } else {
            (var_1734448537695_851, [UInt64(132), var_1734448537695_860, UInt64(58), UInt64(108), UInt64(175),
                    var_1734448537695_866, var_1734448537695_860, var_1734448537695_860, UInt64(149),
                    var_1734448537695_866], ((true, var_1734448537695_876, ((Int32(var_1734448537695_834) & 127)..(Int32(Int32(85)) &
                            127) : (var_1734448537695_824 | 1)), [((Int32(Int32(-49)) & 127)..(Int32(Int32(56)) & 127) : (Int64(44) |
                            1)), ((Int32(Int32(13)) & 127)..=(Int32(Int32(38)) & 127) : (Int64(-88) | 1)),
                            ((Int32(Int32(-81)) & 127)..(Int32(Int32(96)) & 127) : (Int64(-58) | 1)),
                            ((Int32(Int32(-40)) & 127)..=(Int32(Int32(67)) & 127) : (Int64(58) | 1)),
                            ((Int32(Int32(72)) & 127)..(Int32(Int32(-107)) & 127) : (Int64(-121) | 1)),
                            ((Int32(Int32(99)) & 127)..(Int32(Int32(-23)) & 127) : (Int64(-110) | 1)),
                            ((Int32(Int32(-18)) & 127)..(Int32(Int32(-45)) & 127) : (Int64(-18) | 1)),
                            ((Int32(Int32(21)) & 127)..=(Int32(Int32(84)) & 127) : (Int64(67) | 1)),
                            ((Int32(Int32(-24)) & 127)..(Int32(Int32(-68)) & 127) : (Int64(45) | 1)),
                            ((Int32(Int32(-20)) & 127)..(Int32(Int32(113)) & 127) : (Int64(-104) | 1))], ((Int8(Int8(16)) &
                            127)..(Int8(Int8(0)) & 127) : (Int64(13) | 1))), UInt64(99), var_1734448537695_834, Float64(-1.0),
                    ((Int32(Int32(44)) & 127)..(Int32(Int32(-55)) & 127) : (Int64(11) | 1)), var_1734448537695_445),
                UInt64(131), var_1734448537695_902, (var_1734448537695_915, ((Int32(Int32(90)) & 127)..(Int32(Int32(33)) &
                        127) : (Int64(-8) | 1)), var_1734448537695_971, false, Option<Int16>.None, ((UInt32(UInt32(116)) &
                        127)..(UInt32(UInt32(185)) & 127) : (Int64(67) | 1)), var_1734448537695_824),
                var_1734448537695_361)[2][4]
        };
        var loopTimeVar_1734448537695_1026: Int64 = 0;
        do {
            loopTimeVar_1734448537695_1026++;
        } while (((Option<Bool>.Some(false) ?? true)) && loopTimeVar_1734448537695_1026 < 100);
        var_1734448537695_876
    }
}

public open class Class_1734448537695_1419 {
    public init() { // block id: 1421

    }

    public open func func_1734448537695_1426(namedParam_1734448537695_1427!: String,
        namedParam_1734448537695_1428!: ((Bool, (UInt16, Unit, Bool, Range<UInt64>, UInt8), Range<Int32>, Array<Range<Int32>>, 
            Range<Int8>), Range<Int32>, ((UInt16, Unit, Bool, Range<UInt64>, UInt8), Float64, (UInt16, Unit, Bool, Range<UInt64>, 
            UInt8), Range<UInt64>, Range<UInt16>, Array<Unit>), Bool, Option<Int16>, Range<UInt32>, Int64),
        namedParam_1734448537695_1429!: Int8, namedParam_1734448537695_1430!: UInt16): Option<Range<Int32>> { // block id: 1431
        (try { // block id: 1434
            var_1734448537695_723
        } finally { // block id: 1436
            var var_1734448537695_1504: Range<UInt32> = ((UInt32(UInt32(147)) & 127)..=(UInt32(UInt32(254)) & 127) : (Int64(-20) |
                1));
            ((var_1734448537695_137, var_1734448537695_620, ((Int32(Int32(110)) & 127)..(Int32(Int32(-20)) & 127) : (Int64(52) |
                        1)), [((Int32(Int32(68)) & 127)..(Int32(Int32(2)) & 127) : (var_1734448537695_1396 | 1)),
                        ((Int32(Int32(-128)) & 127)..(Int32(Int32(-103)) & 127) : (Int64(-122) | 1)),
                        var_1734448537695_1449, ((Int32(Int32(-119)) & 127)..(Int32(Int32(26)) & 127) : (Int64(-53) | 1)),
                        var_1734448537695_1449, ((Int32(Int32(102)) & 127)..(Int32(Int32(22)) & 127) : (Int64(29) | 1)),
                        ((Int32(Int32(-8)) & 127)..=(Int32(Int32(-54)) & 127) : (Int64(101) | 1)),
                        var_1734448537695_1462,
                        ((Int32(var_1734448537695_318) & 127)..(Int32(var_1734448537695_1473) & 127) : (Int64(-34) | 1)),
                        var_1734448537695_1481], ((Int8(Int8(123)) & 127)..(Int8(Int8(-87)) & 127) : (Int64(50) | 1))), ((Int32(Int32(77)) &
                    127)..=(Int32(var_1734448537695_1362) & 127) : (Int64(-35) | 1)), (var_1734448537695_620, Float64(54.0),
                    var_1734448537695_620, ((UInt64(UInt64(9)) & 127)..=(UInt64(var_1734448537695_47) & 127) : (Int64(89) |
                        1)), ((UInt16(UInt16(167)) & 127)..(UInt16(UInt16(212)) & 127) : (Int64(-64) | 1)), [(), (), (),
                        (), (), (), (), (), (), ()]), true, var_1734448537695_1500, var_1734448537695_1504,
                var_1734448537695_1396)
        } as Range<Int32>)
    }
}
