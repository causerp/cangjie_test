/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt

public const var_1712170063932_60 : Bool = true
public const var_1712170063932_63 : UInt16 = 58
let var_1712170063932_67 : UInt32 = UInt32(Int8(Int8(12)))
public const var_1712170063932_74 : Float32 = 44.0
const var_1712170063932_91 : UInt = 77
const var_1712170063932_108 : Int8 = -56
public const var_1712170063932_201 : Int32 = 51
const var_1712170063932_248 : Int64 = -53
public const var_1712170063932_252 : Rune = r'Y'
public const var_1712170063932_255 : Int16 = -91
let var_1712170063932_401 : ?Array<Option<Unit>> = Option<Array<Option<Unit>>>.None
public let var_1712170063932_515 : Range<Int8> = ((Int8(Int8(25))&127)..=(Int8(Int8(Int8(UInt8(173))))&127):(Int64(UInt16(130))|1))
let var_1712170063932_580 : Option<Class_1712170063932_269> = ((Int32(8), Int32(103), Option<Array<Option<Unit>>>.None, ((Int16(Int16(-40))&127)..=(Int16(Int16(-29))&127):(Int64(32)|1)), ((Int8(Int8(52))&127)..(Int8(Int8(-9))&127):(Int64(-23)|1))) as Class_1712170063932_269)
let var_1712170063932_589 : VArray<Unit, $3> = [(), (), ()]
var var_1712170063932_670 : UInt = UInt64(Int64(UInt64(225)))
var var_1712170063932_738 : Unit = ()
let var_1712170063932_1064 : (Unit, Array<UInt64>, Int8, Range<Int16>, Int8) = ((), [UInt64(1), UInt64(Int64(UInt32(183))), UInt64(Int8(UInt8(177))), UInt64(216), UInt64(213), UInt64(177), UInt64(UInt16(Int8(-41))), UInt64(Int16(-87)), UInt64(38), UInt64(22)], Int8(56), ((Int16(Int16(UInt8(UInt8(207))))&127)..(Int16(Int16(-107))&127):(Int64(-60)|1)), Int8(Int8(Int8(113))))
public var var_1712170063932_1263 : UInt32 = UInt32(UInt8(Int8(-8)))
public let var_1712170063932_1283 : ?Unit = Option<Unit>.None
public var var_1712170063932_1383 : Bool = (((Int8(Int8(-44))&127)..(Int8(Int8(Int8(-62)))&127):(Int64(95)|1)) is (Int8, Range<Int64>) -> Option<Option<Class_1712170063932_269>>)
public let var_1712170063932_1635 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var_1712170063932_1687 : (Bool, UInt16, Range<UInt32>, Float32) = ((((Int64(Int64(-7))&127)..(Int64(Int64(-119))&127):(Int64(104)|1)) is Option<Option<VArray<Unit, $3>>>), UInt16(UInt8(UInt8(156))), ((UInt32(UInt32(36))&127)..(UInt32(UInt32(183))&127):(Int64(-113)|1)), Float32(Float32(43.0)))
public let var_1712170063932_1717 : UInt8 = UInt8(Int8(44))
public const var_1712170063932_1739 : Unit = ()
public let var_1712170063932_1746 : (Int32, Int32, Option<Array<Option<Unit>>>, Range<Int16>, Range<Int8>) = (Int32(Int32(Int8(Int8(77)))), Int32(Int8(78)), (Option<Rune>.None as Array<Option<Unit>>), ((Int16(Int16(-27))&127)..=(Int16(Int16(-98))&127):(Int64(92)|1)), ((Int8(Int8(Int8(-128)))&127)..(Int8(Int8(108))&127):(Int64(66)|1)))
public var var_1712170063932_1770 : UInt16 = UInt16(44)
const var_1712170063932_1801 : Int64 = 94
public const var_1712170063932_1830 : UInt = 9
public var var_1712170063932_1847 : UInt = UInt64(93)
public let var_1712170063932_1876 : VArray<UInt64, $2> = [UInt64(70), UInt64(69)]
public var var_1712170063932_1884 : Int = Int64(Int8(-94))
public var var_1712170063932_1890 : Option<Option<Option<Option<Class_1712170063932_269>>>> = (Int64(UInt64(UInt8(160))) as Option<Option<Option<Class_1712170063932_269>>>)
public let var_1712170063932_1916 : Int8 = Int8(Int8(93))
public open class Class_1712170063932_23 {
    public init() { // block id: 25

    }
;
    public var var_1712170063932_1805 : Int16 = Int16(87)
}

public struct Struct_1712170063932_123 {
    public init() { // block id: 125

    }
;
    private static let var_1712170063932_679 : VArray<Unit, $3> = [(), (), ()];
    static var var_1712170063932_709 : VArray<Bool, $1> = VArray<Bool, $1>({ i => true});
    public static let var_1712170063932_735 : VArray<UInt64, $2> = [UInt64(88), UInt64(96)];
    public init(namedParam_1712170063932_287 ! : Range<UInt64>) { // block id: 288
        let var_1712170063932_606 : Range<Int64> = ((Int64(Int64(57))&127)..=(Int64(Int64(-106))&127):(Int64(-13)|1));
        let var_1712170063932_611 : (Option<Option<Option<Class_1712170063932_269>>>, Option<Class_1712170063932_269>, (Bool, UInt16, Range<UInt32>, Float32), Option<Unit>) = ((VArray<Unit, $3>({ i => ()}) as Option<Option<Class_1712170063932_269>>), Option<Class_1712170063932_269>.Some(Class_1712170063932_269()), (true, UInt16(140), ((UInt32(UInt32(36))&127)..(UInt32(UInt32(215))&127):(Int64(3)|1)), Float32(Float32(-112.0))), (((((Int8(Int8(-83))&127)..(Int8(Int8(94))&127):(Int64(1)|1)), VArray<UInt64, $2>({ i => UInt64(199)}), ((), [UInt64(16), UInt64(13), UInt64(44), UInt64(64), UInt64(27), UInt64(56), UInt64(85), UInt64(17), UInt64(12), UInt64(33)], Int8(100), ((Int16(Int16(-80))&127)..=(Int16(Int16(-58))&127):(Int64(94)|1)), Int8(16)), false) as VArray<Unit, $3>) as Unit));
        ((func_1712170063932_300(optionalParam_1712170063932_301 : var_1712170063932_108, namedParam_1712170063932_304 : var_1712170063932_606) ?? var_1712170063932_611[1]) ?? ((var_1712170063932_201, Option<Array<Option<Unit>>>.None, var_1712170063932_580, Int16(50), Option<Class_1712170063932_269>.None, ((UInt16(var_1712170063932_63)&127)..=(UInt16(var_1712170063932_63)&127):(Int64(-76)|1)))[4] ?? (((UInt64(var_1712170063932_670)&127)..(UInt64(UInt64(14))&127):(Int64(46)|1)), Class_1712170063932_269(), (var_1712170063932_679, UInt16(86), ((Int32(var_1712170063932_201)&127)..=(Int32(Int32(-10))&127):(Int64(66)|1)), var_1712170063932_67))[1]));
        match (([VArray<Bool, $1>(repeat: true), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>(repeat: var_1712170063932_60), VArray<Bool, $1>(repeat: var_1712170063932_60), VArray<Bool, $1>(repeat: var_1712170063932_60), VArray<Bool, $1>(repeat: var_1712170063932_60), var_1712170063932_709, VArray<Bool, $1>(repeat: var_1712170063932_60), VArray<Bool, $1>({ i => true}), var_1712170063932_709][1] as VArray<Unit, $3>)) {
            case caseVar_1712170063932_720 => 
                ();
                ()
            
            case caseVar_1712170063932_726 : Range<UInt16> => 
                ();
                ()
            
            case caseVar_1712170063932_732 => 
                var_1712170063932_735;
                var_1712170063932_738;
                ()
            
            case _ => 
                var_1712170063932_738
            
        }
    }
;
    private static let var_1712170063932_1118 : (Range<UInt64>, Class_1712170063932_269, (VArray<Unit, $3>, UInt16, Range<Int32>, UInt32)) = (((UInt64(UInt64(64))&127)..=(UInt64(UInt64(56))&127):(Int64(101)|1)), Class_1712170063932_269(), (VArray<Unit, $3>({ i => ()}), UInt16(237), ((Int32(Int32(-83))&127)..=(Int32(Int32(79))&127):(Int64(123)|1)), UInt32(92)));
    private static mut prop var_1712170063932_1187 : Interface_1712170063932_272 { // block id: 1188
        get() { // block id: 1190
            ();
            Class_1712170063932_269()
        }

        set(Value) { // block id: 1195
            Option<Option<Class_1712170063932_269>>.None;
            ()
        }

    };
    public static let var_1712170063932_1345 : (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool) = (((Int8(Int8(-50))&127)..(Int8(Int8(110))&127):(Int64(-69)|1)), VArray<UInt64, $2>({ i => UInt64(206)}), ((), [UInt64(50), UInt64(108), UInt64(230), UInt64(158), UInt64(3), UInt64(196), UInt64(7), UInt64(142), UInt64(107), UInt64(232)], Int8(-9), ((Int16(Int16(31))&127)..=(Int16(Int16(-64))&127):(Int64(-20)|1)), Int8(-70)), false);
    init(param_1712170063932_1040 : VArray<Unit, $3>) { // block id: 1041
        var var_1712170063932_1052 : Range<UInt32> = ((UInt32(UInt32(194))&127)..=(UInt32(UInt32(UInt32(70)))&127):(Int64(UInt32(70))|1));
        var var_1712170063932_1140 : Int = Int64(35);
        let var_1712170063932_1202 : ((Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Float64, (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Rune, Rune, UInt64) = ((((Int8(Int8(UInt8(106)))&127)..=(Int8(Int8(UInt8(27)))&127):(Int64(-1)|1)), VArray<UInt64, $2>(repeat: UInt64(Int32(90))), ((), [UInt64(173), UInt64(178), UInt64(54), UInt64(216), UInt64(223), UInt64(11), UInt64(42), UInt64(229), UInt64(167), UInt64(4)], Int8(-85), ((Int16(Int16(-49))&127)..(Int16(Int16(-116))&127):(Int64(-123)|1)), Int8(UInt8(252))), true), Float64(-69.0), (((Int8(Int8(26))&127)..=(Int8(Int8(57))&127):(Int64(30)|1)), VArray<UInt64, $2>({ i => UInt64(117)}), ((), [UInt64(176), UInt64(61), UInt64(182), UInt64(116), UInt64(184), UInt64(81), UInt64(87), UInt64(118), UInt64(10), UInt64(84)], Int8(Int8(-69)), ((Int16(Int16(-95))&127)..(Int16(Int16(83))&127):(Int64(126)|1)), Int8(Int8(15))), ((((UInt64(UInt64(90))&127)..=(UInt64(UInt64(152))&127):(Int64(-110)|1)), Class_1712170063932_269(), (VArray<Unit, $3>({ i => ()}), UInt16(182), ((Int32(Int32(-83))&127)..=(Int32(Int32(65))&127):(Int64(71)|1)), UInt32(167))) is Option<Class_1712170063932_269>)), r'a', r'I', UInt64(UInt32(UInt8(43))));
        let var_1712170063932_1286 : Enum_1712170063932_1045 = Enum_1712170063932_1045.enumValue_1712170063932_1048(((UInt32(UInt32(191))&127)..(UInt32(UInt32(UInt16(179)))&127):(Int64(-53)|1)), ((((Int8(Int8(-76))&127)..(Int8(Int8(95))&127):(Int64(32)|1)), VArray<UInt64, $2>(repeat: UInt64(181)), ((), [UInt64(218), UInt64(191), UInt64(9), UInt64(73), UInt64(33), UInt64(19), UInt64(187), UInt64(64), UInt64(61), UInt64(122)], Int8(-74), ((Int16(Int16(-58))&127)..(Int16(Int16(-103))&127):(Int64(84)|1)), Int8(90)), false), Float64(Float64(Float32(-4.0))), (((Int8(Int8(69))&127)..(Int8(Int8(20))&127):(Int64(108)|1)), VArray<UInt64, $2>({ i => UInt64(217)}), ((), [UInt64(14), UInt64(183), UInt64(91), UInt64(73), UInt64(165), UInt64(213), UInt64(182), UInt64(188), UInt64(99), UInt64(191)], Int8(92), ((Int16(Int16(-27))&127)..=(Int16(Int16(-38))&127):(Int64(-89)|1)), Int8(14)), false), r'8', r'6', UInt64(UInt32(235))));
        try { // block id: 1043
            var var_1712170063932_1149 : (Bool, UInt16, Range<UInt32>, Float32) = ((Float64(-95.0) is Array<VArray<Bool, $1>>), UInt16(Int8(-74)), ((UInt32(UInt32(134))&127)..=(UInt32(UInt32(120))&127):(Int64(106)|1)), Float32(-46.0));
            match (Enum_1712170063932_1045.enumValue_1712170063932_1048(var_1712170063932_1052, ((((Int8(Int8(-79))&127)..=(Int8(Int8(48))&127):(Int64(57)|1)), var_1712170063932_735, var_1712170063932_1064, var_1712170063932_60), Float64(-46.0), (var_1712170063932_515, VArray<UInt64, $2>(repeat: UInt64(214)), var_1712170063932_1064, true), var_1712170063932_252, var_1712170063932_252, UInt64(38)))) {
                case _ => 
                    var_1712170063932_738;
                    var_1712170063932_738
                
                case caseVar_1712170063932_1114 : (Bool, UInt16, Range<UInt32>, Float32) => 
                    var_1712170063932_738;
                    var_1712170063932_1118;
                    ()
                
                case caseVar_1712170063932_1136 : Rune => 
                    var_1712170063932_1140 |= Int64(92);
                    var_1712170063932_738;
                    ()
                
                case _ => 
                    var_1712170063932_1149;
                    var_1712170063932_670 *= UInt64(171)
                
            };
            (((Int8(var_1712170063932_108)&127)..=(Int8(Int8(-21))&127):(Int64(120)|1)), var_1712170063932_735, (var_1712170063932_738, [UInt64(120), UInt64(22), UInt64(168), UInt64(246), UInt64(224), UInt64(31), UInt64(86), UInt64(107), UInt64(123), UInt64(194)], var_1712170063932_108, ((Int16(Int16(-32))&127)..=(Int16(Int16(96))&127):(var_1712170063932_1140|1)), var_1712170063932_108), true)
        } catch (e: Exception) { // block id: 1176
            (Option<Unit>.None ?? var_1712170063932_738);
            try { // block id: 1185
                var_1712170063932_1187;
                var_1712170063932_738;
                Enum_1712170063932_1045.enumValue_1712170063932_1048(var_1712170063932_1052, var_1712170063932_1202)
            } catch (e: Exception) { // block id: 1260
                var_1712170063932_1263 /= ((UInt32(28)) | 1);
                var var_1712170063932_1279 : Range<Int16> = ((Int16(Int16(122))&127)..=(Int16(Int16(54))&127):(Int64(30)|1));
                if (false) { Enum_1712170063932_1045.enumValue_1712170063932_1271((var_1712170063932_201, var_1712170063932_201, Option<Array<Option<Unit>>>.None, var_1712170063932_1279, var_1712170063932_515), var_1712170063932_1283) } else { var_1712170063932_1286 } 
            };
            var_1712170063932_1345
        };
        Option<Array<Option<Unit>>>.None;
        match (var_1712170063932_63) {
            case 21 => 
                var_1712170063932_1064;
                var_1712170063932_1383 &&= var_1712170063932_1383;
                UInt64(52)
            
            case 73 | 217 => 
                Option<VArray<Unit, $3>>.None;
                -var_1712170063932_91
            
            case _ => 
                var_1712170063932_91 >> ((UInt64(126)) & 7)
            
        }
    }
;
    public static const var_1712170063932_1530 : Bool = true;
    private mut prop var_1712170063932_1542 : Int64 { // block id: 1543
        get() { // block id: 1545
            (((UInt64(UInt64(Int32(-35)))&127)..(UInt64(UInt64(149))&127):(Int64(-116)|1)), Class_1712170063932_269(), (VArray<Unit, $3>({ i => ()}), UInt16(UInt16(158)), ((Int32(Int32(21))&127)..(Int32(Int32(-66))&127):(Int64(-46)|1)), UInt32(Int16(-125))));
            Int64(98);
            var_1712170063932_1971
        }

        set(Value) { // block id: 1569
            var_1712170063932_1971 = Value
        }

    };
    public func func_1712170063932_1450() : Range<UInt8> { // block id: 1451
        let var_1712170063932_1465 : ?Option<Option<Class_1712170063932_269>> = Option<Option<Option<Class_1712170063932_269>>>.None;
        (try { // block id: 1458
            ();
            Option<Option<Option<Option<Class_1712170063932_269>>>>.Some(Option<Option<Option<Class_1712170063932_269>>>.None)
        } catch (e: Exception) { // block id: 1462
            Option<Option<Option<Option<Class_1712170063932_269>>>>.Some(var_1712170063932_1465)
        } ?? var_1712170063932_1465);
        var var_1712170063932_1493 : UInt8 = UInt8(Int8(39));
        ((UInt8(match (VArray<Bool, $6>(repeat: var_1712170063932_60)[3]) {
            case _ => 
                ();
                var var_1712170063932_1485 : Byte = UInt8(Int8(Int8(UInt8(Int8(64)))));
                var_1712170063932_1485
            
        })&127)..(UInt8(var_1712170063932_1493 - if (var_1712170063932_1383) { // block id: 1498
            var_1712170063932_738;
            var_1712170063932_1493 % ((UInt8(102)) | 1)
        } else { // block id: 1503
            ();
            var_1712170063932_738;
            UInt8(211)
        })&127):(if (if (var_1712170063932_60) { // block id: 1510
            Option<Class_1712170063932_269>.None;
            var_1712170063932_60
        } else { // block id: 1513
            -var_1712170063932_670;
            var_1712170063932_738;
            var_1712170063932_60
        }) { // block id: 1518
            Int64(-63) ** UInt64(231)
        } else if (match (((Int8(Int8(113))&127)..(Int8(Int8(83))&127):(Int64(124)|1))) {
            case _ => 
                var_1712170063932_1383 &&= var_1712170063932_1530;
                var_1712170063932_60
            
        }) { // block id: 1533
            var var_1712170063932_1535 : Enum_1712170063932_952<Option<Class_1712170063932_269>> = Enum_1712170063932_952<Option<Class_1712170063932_269>>.enumValue_1712170063932_973(Int16(-50));
            var_1712170063932_1535;
            var_1712170063932_248
        } else { // block id: 1539
            var_1712170063932_1542 >> ((var_1712170063932_248) & 7)
        }|1))
    }
;
    mut prop var_1712170063932_1971 : Int64 { // block id: 1972
        get() { // block id: 1974
            ();
            Int64(UInt8(34))
        }

        set(Value) { // block id: 1980
            ((Option<VArray<Unit, $3>>.None as Option<Option<Class_1712170063932_269>>), (Int8(UInt8(41)) as Class_1712170063932_269), ((Float32(-17.0) is UInt16), UInt16(194), ((UInt32(UInt32(135))&127)..=(UInt32(UInt32(235))&127):(Int64(-126)|1)), Float32(Float32(117.0))), ((Int32(-40), Option<Array<Option<Unit>>>.None, Option<Class_1712170063932_269>.None, Int16(-90), Option<Class_1712170063932_269>.None, ((UInt16(UInt16(205))&127)..(UInt16(UInt16(101))&127):(Int64(-50)|1))) as Unit));
            (((Int8(Int8(-39))&127)..=(Int8(Int8(35))&127):(Int64(115)|1)) as Option<Class_1712170063932_269>);
            ()
        }

    }
}

const func func_1712170063932_217(param_1712170063932_218 : Int32, param_1712170063932_219 : Unit, param_1712170063932_220 : String) : Int32 { // block id: 221
    ();
    const var_1712170063932_230 : Int32 = 43;
    (-118 ^ (var_1712170063932_201 * var_1712170063932_201)) * var_1712170063932_230
}

public interface Interface_1712170063932_272 {

}

public open class Class_1712170063932_269 <: Interface_1712170063932_272 {
    public init() { // block id: 271

    }
;
    let var_1712170063932_277 : Float64 = Float64(-85.0);
    init(namedParam_1712170063932_381 ! : Range<UInt8>, optionalParam_1712170063932_382 ! : Int16 = Int16(-57), namedParam_1712170063932_384 ! : UInt64, optionalParam_1712170063932_385 ! : Bool = false) { // block id: 387
        var var_1712170063932_404 : Array<Option<Unit>> = [(###")W14,jS8mB"### as Unit), Option<Unit>.None, (Float32(Float32(Float32(80.0))) as Unit), (VArray<UInt64, $2>({ i => UInt64(247)}) as Unit), Option<Unit>.None, Option<Unit>.None, (false as Unit), Option<Unit>.Some(()), Option<Unit>.None, (VArray<Unit, $3>({ i => ()}) as Unit)];
        var loopTimeVar_1712170063932_447 : Int64 = 0;
        ((var_1712170063932_401 ?? var_1712170063932_404)[7] ?? do {
            loopTimeVar_1712170063932_447++;
            var var_1712170063932_439 : UInt32 = UInt32(UInt32(UInt32(Int32(UInt32(210)))));
            var_1712170063932_439 &= UInt32(19)
        } while ((VArray<Bool, $1>(repeat: var_1712170063932_60)[0]) && loopTimeVar_1712170063932_447 < 100 ) );
        var var_1712170063932_482 : Int8 = Int8(121);
        try { // block id: 451
            var_1712170063932_91 / ((var_1712170063932_91) | 1);
            var var_1712170063932_456 : (Int32, Int32, Option<Array<Option<Unit>>>, Range<Int16>, Range<Int8>) = (Int32(Int8(Int8(-43))), Int32(UInt8(Int8(-88))), Option<Array<Option<Unit>>>.None, ((Int16(Int16(UInt8(Int8(81))))&127)..=(Int16(Int16(Int16(-11)))&127):(Int64(-44)|1)), ((Int8(Int8(-19))&127)..=(Int8(Int8(Int8(-11)))&127):(Int64(Int64(Int32(-52)))|1)));
            var_1712170063932_456
        } catch (_) { // block id: 479
            var_1712170063932_482 &= Int8(-98);
            var var_1712170063932_487 : UInt8 = UInt8(UInt8(Int8(5)));
            var_1712170063932_487 ^= var_1712170063932_487;
            let var_1712170063932_493 : (Int32, Int32, Option<Array<Option<Unit>>>, Range<Int16>, Range<Int8>) = (Int32(5), Int32(Int32(110)), (((UInt32(UInt32(210))&127)..=(UInt32(UInt32(130))&127):(Int64(-99)|1)) as Array<Option<Unit>>), ((Int16(Int16(Int16(UInt8(238))))&127)..=(Int16(Int16(Int8(6)))&127):(Int64(80)|1)), ((Int8(Int8(-104))&127)..=(Int8(Int8(-80))&127):(Int64(-26)|1)));
            var_1712170063932_493
        } finally { // block id: 508
            (var_1712170063932_201, Int32(95), var_1712170063932_401, ((Int16(Int16(-100))&127)..=(Int16(Int16(-118))&127):(Int64(28)|1)), var_1712170063932_515)
        }[2]
    }
;
    public static var var_1712170063932_894 : ((Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Float64, (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Rune, Rune, UInt64) = ((((Int8(Int8(29))&127)..=(Int8(Int8(-13))&127):(Int64(-31)|1)), VArray<UInt64, $2>({ i => UInt64(106)}), ((), [UInt64(128), UInt64(236), UInt64(93), UInt64(25), UInt64(89), UInt64(240), UInt64(93), UInt64(224), UInt64(217), UInt64(57)], Int8(-45), ((Int16(Int16(20))&127)..=(Int16(Int16(-123))&127):(Int64(3)|1)), Int8(-92)), true), Float64(107.0), (((Int8(Int8(-102))&127)..(Int8(Int8(-51))&127):(Int64(-7)|1)), VArray<UInt64, $2>({ i => UInt64(169)}), ((), [UInt64(191), UInt64(80), UInt64(131), UInt64(112), UInt64(6), UInt64(215), UInt64(21), UInt64(56), UInt64(116), UInt64(61)], Int8(-114), ((Int16(Int16(118))&127)..(Int16(Int16(-58))&127):(Int64(111)|1)), Int8(-62)), true), r'J', r'O', UInt64(56))
}









func func_1712170063932_300(optionalParam_1712170063932_301 ! : Int8 = Int8(Int8(-31)), namedParam_1712170063932_304 ! : Range<Int64>) : Option<Option<Class_1712170063932_269>> { // block id: 305
    var var_1712170063932_311 : (Bool, UInt16, Range<UInt32>, Float32) = (false, UInt16(Int16(UInt16(29))), ((UInt32(UInt32(67))&127)..=(UInt32(UInt32(92))&127):(Int64(Int16(Int8(19)))|1)), Float32(Float32(Float32(23.0))));
    const var_1712170063932_340 : Int8 = 75;
    var loopTimeVar_1712170063932_363 : Int64 = 0;
    do {
        loopTimeVar_1712170063932_363++;
        try { // block id: 346
            if (var_1712170063932_60) { ((Int8(Int8(61))&127)..(Int8(Int8(-28))&127):(Int64(88)|1)) } else { ((Int8(Int8(51))&127)..=(Int8(Int8(-50))&127):(Int64(70)|1)) } 
        } catch (e: Exception) { // block id: 351
            ((Int8(Int8(122))&127)..=(Int8(Int8(78))&127):(Int64(106)|1))
        } finally { // block id: 353
            ();
            let var_1712170063932_358 : Struct_1712170063932_123 = Struct_1712170063932_123();
            if (false) { var_1712170063932_358 } else { var_1712170063932_358 } ;
            ((Int8(Int8(47))&127)..(Int8(Int8(105))&127):(Int64(-1)|1))
        }
    } while ((if (try { // block id: 309
        var_1712170063932_311;
        var_1712170063932_60
    } catch (e: Exception) { // block id: 327
        var_1712170063932_60
    }) { // block id: 329
        var_1712170063932_60
    } else if ((((UInt8(UInt8(183))&127)..=(UInt8(UInt8(157))&127):(var_1712170063932_248|1)) is Range<UInt64>)) { // block id: 336
        Int8(100) != var_1712170063932_340
    } else { // block id: 342
        var_1712170063932_60
    }) && loopTimeVar_1712170063932_363 < 100 ) ;
    var var_1712170063932_377 : Option<Option<VArray<Unit, $3>>> = (Class_1712170063932_269(namedParam_1712170063932_381 : ((UInt8(UInt8(143))&127)..=(UInt8(UInt8(16))&127):(Int64(5)|1)), optionalParam_1712170063932_382 : Int16(UInt8(Int8(74))), namedParam_1712170063932_384 : UInt64(210)) as Option<VArray<Unit, $3>>);
    const var_1712170063932_536 : Unit = ();
    var var_1712170063932_539 : Unit = ();
    let var_1712170063932_544 : (VArray<Unit, $3>, UInt16, Range<Int32>, UInt32) = (VArray<Unit, $3>({ i => ()}), UInt16(Int8(UInt8(UInt8(98)))), ((Int32(Int32(Int8(-117)))&127)..=(Int32(Int32(12))&127):(Int64(17)|1)), UInt32(UInt16(170)));
    ((var_1712170063932_377 ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({ i => ()}))) ?? var_1712170063932_544[0])[0];
    (Option<Option<Option<Class_1712170063932_269>>>.None ?? (Option<(Option<Option<Class_1712170063932_269>>, VArray<Unit, $3>, Struct_1712170063932_123, (Bool, UInt16, Range<UInt32>, Float32))>.None ?? (Option<Option<Class_1712170063932_269>>.Some(var_1712170063932_580), var_1712170063932_589, Struct_1712170063932_123(), (var_1712170063932_60, var_1712170063932_63, ((UInt32(var_1712170063932_67)&127)..(UInt32(var_1712170063932_67)&127):(Int64(76)|1)), var_1712170063932_74)))[0])
}

func func_1712170063932_162(param_1712170063932_163 : (Unit, Array<UInt64>, Int8, Range<Int16>, Int8)) : VArray<UInt64, $2> { // block id: 164
    const var_1712170063932_237 : String = """
wWY}B
il;Tg
""";
    const func func_1712170063932_194(param_1712170063932_195 : String, param_1712170063932_196 : Int16, param_1712170063932_197 : Unit) : Bool { // block id: 198
        const func func_1712170063932_206(param_1712170063932_207 : Int64, param_1712170063932_208 : Float32, optionalParam_1712170063932_209 ! : Rune = r'L', optionalParam_1712170063932_211 ! : Float64 = 13.0) : Int32 { // block id: 213
            var_1712170063932_108;
            167;
            const var_1712170063932_240 : Unit = ();
            const var_1712170063932_244 : Unit = ();
            func_1712170063932_217(func_1712170063932_217(func_1712170063932_217(var_1712170063932_201, (), var_1712170063932_237), var_1712170063932_240, ###"Hh:0Q#)QGM"###), var_1712170063932_244, "VIuwG7^};d")
        }
;
        var_1712170063932_201 >> (((var_1712170063932_201 / ((func_1712170063932_206(var_1712170063932_248, 68.0, optionalParam_1712170063932_209 : var_1712170063932_252)) | 1))) & 7);
        var_1712170063932_255;
        var_1712170063932_60
    }
;
    const var_1712170063932_262 : UInt8 = 139;
    const func func_1712170063932_167(namedParam_1712170063932_168 ! : Rune, namedParam_1712170063932_169 ! : Float64) : Bool { // block id: 170
        const var_1712170063932_186 : Int32 = -29;
        const func func_1712170063932_172(optionalParam_1712170063932_173 ! : Int16 = -47, optionalParam_1712170063932_175 ! : UInt8 = 58, optionalParam_1712170063932_177 ! : UInt32 = 17) : Unit { // block id: 179
            const func func_1712170063932_181(namedParam_1712170063932_182 ! : Unit) : Float32 { // block id: 183
                ();
                var_1712170063932_186;
                var_1712170063932_74
            }
;
            const var_1712170063932_190 : Unit = ();
            func_1712170063932_181(namedParam_1712170063932_182 : var_1712170063932_190);
            ()
        }
;
        func_1712170063932_172();
        const var_1712170063932_265 : UInt32 = 115;
        func_1712170063932_194(var_1712170063932_237, var_1712170063932_255, func_1712170063932_172(optionalParam_1712170063932_175 : var_1712170063932_262, optionalParam_1712170063932_177 : var_1712170063932_265))
    }
;
    let var_1712170063932_274 : Class_1712170063932_269 = Class_1712170063932_269();
    let var_1712170063932_283 : (Struct_1712170063932_123, UInt64, VArray<UInt64, $2>, Interface_1712170063932_272, Range<Int16>) = (Struct_1712170063932_123(namedParam_1712170063932_287 : ((UInt64(UInt64(UInt8(98)))&127)..(UInt64(UInt64(Int8(-75)))&127):(Int64(-72)|1))), UInt64(Int16(86)), VArray<UInt64, $2>(repeat: UInt64(UInt64(35))), Class_1712170063932_269(), ((Int16(Int16(-72))&127)..(Int16(Int16(-91))&127):(Int64(-59)|1)));
    if (func_1712170063932_167(namedParam_1712170063932_168 : r'S', namedParam_1712170063932_169 : var_1712170063932_274.var_1712170063932_277)) { // block id: 279
        var_1712170063932_283[2]
    } else if (try { // block id: 761
        var var_1712170063932_764 : Int16 = Int16(-35);
        var var_1712170063932_767 : Int16 = Int16(UInt16(Int16(UInt8(Int8(-88)))));
        var_1712170063932_764 &= var_1712170063932_767;
        true
    } finally { // block id: 774
        true
    }) { // block id: 776
        var var_1712170063932_791 : Option<Option<Class_1712170063932_269>> = Option<Option<Class_1712170063932_269>>.Some(Option<Class_1712170063932_269>.None);
        let var_1712170063932_806 : VArray<UInt64, $2> = [UInt64(106), UInt64(50)];
        if (var_1712170063932_60) { // block id: 779
            var var_1712170063932_782 : Bool = true;
            var_1712170063932_782 ||= true;
            VArray<UInt64, $2>({ i => UInt64(198)})
        } else if (false) { // block id: 789
            var_1712170063932_791;
            var_1712170063932_580;
            VArray<UInt64, $2>(repeat: var_1712170063932_670)
        } else { // block id: 798
            var var_1712170063932_801 : UInt32 = UInt32(Int32(-101));
            var_1712170063932_801++;
            ((Int64(Int64(-26))&127)..(Int64(Int64(-73))&127):(Int64(-106)|1));
            var_1712170063932_806
        }
    } else { // block id: 808
        match (var_1712170063932_91) {
            case caseVar_1712170063932_813 : (Bool, UInt16, Range<UInt32>, Float32) => 
                ();
                var_1712170063932_262 / ((UInt8(214)) | 1)
            
            case 252 | 124 | 240 => 
                ((Int64(var_1712170063932_248)&127)..=(Int64(Int64(-32))&127):(var_1712170063932_248|1));
                ();
                UInt8(81) - UInt8(212)
            
            case _ => 
                if (var_1712170063932_60) { ((UInt8(var_1712170063932_262)&127)..(UInt8(var_1712170063932_262)&127):(Int64(-32)|1)) } else { ((UInt8(UInt8(253))&127)..=(UInt8(UInt8(13))&127):(Int64(-65)|1)) } ;
                var_1712170063932_262 << ((UInt8(3)) & 7)
            
            case caseVar_1712170063932_845 : Option<Unit> => 
                UInt8(187)
            
            case _ => 
                ();
                UInt8(0)
            
        };
        if (true) { VArray<UInt64, $2>(repeat: var_1712170063932_670) } else { VArray<UInt64, $2>(repeat: var_1712170063932_91) } 
    }
}

public enum Enum_1712170063932_952<T0> {
    defaultValue |
    enumValue_1712170063932_963(Interface_1712170063932_272, UInt32, (Bool, UInt16, Range<UInt32>, Float32)) |
    enumValue_1712170063932_973(Int16)
}

public enum Enum_1712170063932_1045 {
    defaultValue |
    enumValue_1712170063932_1048(Range<UInt32>, ((Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Float64, (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Rune, Rune, UInt64)) |
    enumValue_1712170063932_1271((Int32, Int32, Option<Array<Option<Unit>>>, Range<Int16>, Range<Int8>), Option<Unit>)
}



public func func_1712170063932_52(param_1712170063932_53 : Float32) : Bool { // block id: 54
    var loopTimeVar_1712170063932_84 : Int = 0;
    while (((var_1712170063932_60, var_1712170063932_63, ((UInt32(var_1712170063932_67)&127)..(UInt32(var_1712170063932_67)&127):(Int64(-71)|1)), var_1712170063932_74)[0]) && loopTimeVar_1712170063932_84 < 100 ) {
        loopTimeVar_1712170063932_84++;
        var loopTimeVar_1712170063932_82 : Int = 0;
        while ((true) && loopTimeVar_1712170063932_82 < 100 ) {
            loopTimeVar_1712170063932_82++;

        }
    };
    var var_1712170063932_104 : Unit = ();
    let var_1712170063932_862 : ((Unit, Array<UInt64>, Int8, Range<Int16>, Int8)) -> VArray<UInt64, $2> = func_1712170063932_162;
    let var_1712170063932_869 : Range<Int16> = ((Int16(Int16(UInt8(UInt8(Int8(-83)))))&127)..(Int16(Int16(Int16(-26)))&127):(Int64(UInt8(UInt8(Int8(98))))|1));
    let var_1712170063932_1028 : Unit = ();
    let var_1712170063932_1437 : Range<Int32> = ((Int32(Int32(50))&127)..(Int32(Int32(-34))&127):(Int64(38)|1));
    const var_1712170063932_1443 : Float64 = 67.0;
    func func_1712170063932_114<T0>(namedParam_1712170063932_115 ! : Int16, namedParam_1712170063932_116 ! : UInt32) : Bool { // block id: 117
        var_1712170063932_91 == UInt64(223);
        let var_1712170063932_146 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        func func_1712170063932_141() : ((Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Float64, (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Rune, Rune, UInt64) { // block id: 142
            var_1712170063932_146[4];
            var var_1712170063932_885 : Int8 = Int8(UInt8(111));
            var loopTimeVar_1712170063932_890 : Int64 = 0;
            do {
                loopTimeVar_1712170063932_890++;
                var_1712170063932_885 <<= ((var_1712170063932_885) & 7)
            } while (((((var_1712170063932_738, [UInt64(43), UInt64(210), UInt64(178), UInt64(82), UInt64(124), UInt64(57), UInt64(235), UInt64(136), UInt64(163), UInt64(8)], Int8(-9), var_1712170063932_869, Int8(47))|>var_1712170063932_862) is (Int8, Range<Int64>) -> Option<Option<Class_1712170063932_269>>)) && loopTimeVar_1712170063932_890 < 100 ) ;
            Class_1712170063932_269.var_1712170063932_894
        }
;
        func func_1712170063932_138() : ((Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Float64, (Range<Int8>, VArray<UInt64, $2>, (Unit, Array<UInt64>, Int8, Range<Int16>, Int8), Bool), Rune, Rune, UInt64) { // block id: 139
            func_1712170063932_141()
        }
;
        let var_1712170063932_961 : Enum_1712170063932_952<Option<Class_1712170063932_269>> = Enum_1712170063932_952<Option<Class_1712170063932_269>>.enumValue_1712170063932_963(Class_1712170063932_269(), UInt32(117), ((Option<Enum_1712170063932_952<Option<Class_1712170063932_269>>>.Some(Enum_1712170063932_952<Option<Class_1712170063932_269>>.enumValue_1712170063932_973(Int16(103))) is Int64), UInt16(49), ((UInt32(UInt32(Int16(-12)))&127)..=(UInt32(UInt32(Int8(-23)))&127):(Int64(Int8(-29))|1)), Float32(Float32(11.0))));
        func func_1712170063932_127(optionalParam_1712170063932_128 ! : Range<Int32> = ((Int32(Int32(29))&127)..(Int32(Int32(-82))&127):(Int64(-12)|1)), namedParam_1712170063932_130 ! : Float64, namedParam_1712170063932_131 ! : Range<UInt16>) : Struct_1712170063932_123 { // block id: 132
            func_1712170063932_138()[2][1];
            var_1712170063932_738;
            var var_1712170063932_993 : VArray<Bool, $1> = VArray<Bool, $1>(repeat: (r'a' is (Option<Option<Option<Class_1712170063932_269>>>, Option<Class_1712170063932_269>, (Bool, UInt16, Range<UInt32>, Float32), Option<Unit>)));
            var var_1712170063932_1037 : Struct_1712170063932_123 = Struct_1712170063932_123(VArray<Unit, $3>(repeat: ()));
            var var_1712170063932_1424 : Range<UInt64> = ((UInt64(UInt64(Int16(UInt16(231))))&127)..=(UInt64(UInt64(Int8(UInt8(Int8(-128)))))&127):(Int64(UInt32(Int32(94)))|1));
            match (match ((Option<Enum_1712170063932_952<Option<Class_1712170063932_269>>>.None ?? var_1712170063932_961)) {
                case defaultValue => 
                    var_1712170063932_738;
                    if (var_1712170063932_60) { var_1712170063932_993 } else { VArray<Bool, $1>({ i => false}) } 
                
                case caseVar_1712170063932_1001 => 
                    var_1712170063932_738;
                    VArray<Bool, $1>({ i => false})
                
                case _ => 
                    ((UInt32(UInt32(164))&127)..(UInt32(UInt32(18))&127):(Int64(100)|1));
                    Option<Option<Class_1712170063932_269>>.Some(var_1712170063932_580);
                    if (var_1712170063932_60) { var_1712170063932_993 } else { var_1712170063932_993 } 
                
            }) {
                case caseVar_1712170063932_1018 : (Option<Option<Class_1712170063932_269>>, VArray<Unit, $3>, Struct_1712170063932_123, (Bool, UInt16, Range<UInt32>, Float32)) => 
                    if (false) { [(), (), (), var_1712170063932_738, var_1712170063932_1028, (), var_1712170063932_738, var_1712170063932_1028, (), ()] } else { [(), (), (), (), (), (), (), (), (), ()] } ;
                    var_1712170063932_1037
                
                case caseVar_1712170063932_1410 : Option<Option<VArray<Unit, $3>>> => 
                    ();
                    if (false) { Struct_1712170063932_123() } else { var_1712170063932_1037 } 
                
                case _ => 
                    var_1712170063932_108;
                    ();
                    Struct_1712170063932_123(namedParam_1712170063932_287 : var_1712170063932_1424)
                
            }
        }
;
        ((func_1712170063932_127(optionalParam_1712170063932_128 : var_1712170063932_1437, namedParam_1712170063932_130 : var_1712170063932_1443, namedParam_1712170063932_131 : ((UInt16(UInt16(100))&127)..(UInt16(var_1712170063932_63)&127):(Int64(-124)|1))).func_1712170063932_1450()) is (Option<Option<Option<Class_1712170063932_269>>>, Option<Class_1712170063932_269>, (Bool, UInt16, Range<UInt32>, Float32), Option<Unit>))
    }
;
    try { // block id: 86
        if (var_1712170063932_60) { // block id: 89
            var_1712170063932_91
        } else if (var_1712170063932_60) { // block id: 94
            UInt64(20)
        } else { // block id: 96
            var_1712170063932_91 % ((var_1712170063932_91) | 1)
        };
        (var_1712170063932_104, [UInt64(237), UInt64(231), UInt64(252), UInt64(222), UInt64(101), UInt64(52), UInt64(31), UInt64(150), UInt64(155), UInt64(200)], var_1712170063932_108, ((Int16(Int16(-104))&127)..(Int16(Int16(43))&127):(Int64(86)|1)), Int8(-25))[0];
        func_1712170063932_114<Range<Int64>>(namedParam_1712170063932_115 : var_1712170063932_255, namedParam_1712170063932_116 : var_1712170063932_1263)
    } catch (_) { // block id: 1573
        (Option<Rune>.Some(var_1712170063932_252) ?? r'c');
        false
    }
}


public func func_1712170063932_42<T0>(param_1712170063932_43 : UInt8) : Bool { // block id: 44
    let var_1712170063932_1584 : (Float32) -> Bool = func_1712170063932_52;
    func func_1712170063932_46(namedParam_1712170063932_47 ! : String) : Bool { // block id: 48
        ();
        var var_1712170063932_1592 : Option<Float32> = Option<Float32>.Some(Float32(15.0));
        if (((var_1712170063932_1592 ?? var_1712170063932_74)|>var_1712170063932_1584)) { // block id: 1596
            !true
        } else { // block id: 1599
            const var_1712170063932_1606 : UInt = 157;
            var loopTimeVar_1712170063932_1615 : Int = 0;
            while ((false) && loopTimeVar_1712170063932_1615 < 100 ) {
                loopTimeVar_1712170063932_1615++;
                var var_1712170063932_1609 : VArray<UInt64, $2> = [UInt64(134), UInt64(219)];
                (Struct_1712170063932_123(), var_1712170063932_1606, var_1712170063932_1609, Class_1712170063932_269(), ((Int16(Int16(52))&127)..(Int16(Int16(-5))&127):(Int64(-78)|1)));
                ()
            };
            true
        }
    }
;
    const var_1712170063932_1661 : String = "f(]5@_#G8,";
    let var_1712170063932_1682 : Option<Option<Class_1712170063932_269>> = (((UInt16(UInt16(177))&127)..=(UInt16(UInt16(227))&127):(Int64(-61)|1)) as Option<Class_1712170063932_269>);
    func_1712170063932_46(namedParam_1712170063932_47 : if (try { // block id: 1619
        var_1712170063932_738;
        (Int32(60), Option<Array<Option<Unit>>>.None, Option<Class_1712170063932_269>.None, Int16(-109), Option<Class_1712170063932_269>.Some(Class_1712170063932_269()), ((UInt16(var_1712170063932_63)&127)..(UInt16(UInt16(83))&127):(Int64(-128)|1)));
        false
    } catch (_) { // block id: 1633
        var_1712170063932_1635;
        Int64(-97) > Int64(-80)
    } finally { // block id: 1650
        ();
        var_1712170063932_60 || var_1712170063932_1383
    }) { // block id: 1655
        var_1712170063932_255 - Int16(-22);
        ();
        var_1712170063932_1661
    } else if (if (false) { // block id: 1665
        var_1712170063932_738;
        ();
        var_1712170063932_108 >= Int8(68)
    } else { // block id: 1671
        var_1712170063932_1263 /= ((var_1712170063932_1263) | 1);
        var_1712170063932_60
    }) { // block id: 1676
        "-M.B\"},_X7"
    } else { // block id: 1678
        (Option<Option<Option<Class_1712170063932_269>>>.Some(var_1712170063932_1682), var_1712170063932_580, var_1712170063932_1687, Option<Unit>.Some(()));
        if (var_1712170063932_60) { var_1712170063932_1661 } else { var_1712170063932_1661 } 
    })
}



main(): Int64 {
    try {
        let var_1712170063932_1797 : Range<Int8> = ((Int8(Int8(-69))&127)..=(Int8(Int8(-14))&127):(Int64(93)|1));
        const var_1712170063932_1821 : Unit = ();
        func func_1712170063932_18(param_1712170063932_19 : Int16) : VArray<UInt64, $2> { // block id: 20
            let var_1712170063932_1707 : (UInt8) -> Bool = func_1712170063932_42<Option<Enum_1712170063932_952<Option<Class_1712170063932_269>>>>;
            let var_1712170063932_1789 : ?Rune = Option<Rune>.None;
            func func_1712170063932_27(param_1712170063932_28 : Range<Int8>, optionalParam_1712170063932_29 ! : Range<UInt16> = ((UInt16(UInt16(80))&127)..(UInt16(UInt16(Int16(-124)))&127):(Int64(110)|1)), optionalParam_1712170063932_35 ! : Int64 = Int64(UInt64(178)), namedParam_1712170063932_38 ! : Range<Int8>) : Class_1712170063932_23 { // block id: 39
                var var_1712170063932_1713 : Unit = ();
                var loopTimeVar_1712170063932_1735 : Int = 0;
                do {
                    loopTimeVar_1712170063932_1735++;
                    var loopTimeVar_1712170063932_1733 : Int64 = 0;
                    while ((false) && loopTimeVar_1712170063932_1733 < 100 ) {
                        loopTimeVar_1712170063932_1733++;

                    }
                } while (((if (false) { // block id: 1711
                    var_1712170063932_1713;
                    var_1712170063932_1717 - var_1712170063932_1717
                } else { // block id: 1721
                    ();
                    var var_1712170063932_1724 : ?Option<Option<Class_1712170063932_269>> = Option<Option<Option<Class_1712170063932_269>>>.Some(Option<Option<Class_1712170063932_269>>.None);
                    var_1712170063932_1724;
                    UInt8(44)
                }|>var_1712170063932_1707)) && loopTimeVar_1712170063932_1735 < 100 ) ;
                try { // block id: 1737
                    var_1712170063932_1739;
                    var loopTimeVar_1712170063932_1764 : Int64 = 0;
                    do {
                        loopTimeVar_1712170063932_1764++;
                        Enum_1712170063932_1045.enumValue_1712170063932_1271(var_1712170063932_1746, Option<Unit>.None)
                    } while ((false) && loopTimeVar_1712170063932_1764 < 100 ) ;
                    (var_1712170063932_74 as Option<Option<Class_1712170063932_269>>)
                } finally { // block id: 1767
                    var_1712170063932_1770 = var_1712170063932_63;
                    var var_1712170063932_1775 : VArray<Bool, $1> = VArray<Bool, $1>(repeat: (((Int16(Int16(-1))&127)..=(Int16(Int16(31))&127):(Int64(62)|1)) is (Bool, UInt16, Range<UInt32>, Float32)));
                    match (var_1712170063932_1775) {
                        case _ : Option<Unit> => 
                            Option<Rune>.None
                        
                        case _ => 
                            var_1712170063932_1770++;
                            var_1712170063932_1789
                        
                    };
                    (Int64(-120) as Option<Option<Class_1712170063932_269>>)
                };
                let var_1712170063932_1794 : Class_1712170063932_23 = Class_1712170063932_23();
                var_1712170063932_1794
            }
;
            func_1712170063932_27(var_1712170063932_1797, optionalParam_1712170063932_29 : ((UInt16(UInt16(172))&127)..(UInt16(UInt16(29))&127):(Int64(28)|1)), optionalParam_1712170063932_35 : var_1712170063932_1801, namedParam_1712170063932_38 : var_1712170063932_515).var_1712170063932_1805 >>= ((var_1712170063932_255) & 7);
            var var_1712170063932_1814 : Option<VArray<UInt64, $2>> = (Int64(114) as VArray<UInt64, $2>);
            let var_1712170063932_1859 : Class_1712170063932_23 = Class_1712170063932_23();
            (var_1712170063932_1814 ?? if (false) { // block id: 1819
                var_1712170063932_1821;
                let var_1712170063932_1826 : VArray<UInt64, $2> = [UInt64(104), UInt64(72)];
                if (true) { var_1712170063932_1826 } else { VArray<UInt64, $2>(repeat: var_1712170063932_1830) } 
            } else if (match (r'Z') {
                case _ => 
                    ();
                    var_1712170063932_1739;
                    var_1712170063932_1383
                
                case caseVar_1712170063932_1843 => 
                    var_1712170063932_1847 &= UInt64(100);
                    ();
                    var_1712170063932_60
                
                case _ => 
                    if (true) { Class_1712170063932_23() } else { var_1712170063932_1859 } ;
                    ();
                    false
                
            }) { // block id: 1863
                var_1712170063932_1739;
                VArray<UInt64, $2>(repeat: var_1712170063932_1847)
            } else { // block id: 1868
                var_1712170063932_1770 *= UInt16(99);
                var_1712170063932_1830 * UInt64(103);
                var_1712170063932_1876
            })
        }
;
        func_1712170063932_18(Int16(-109) - var_1712170063932_255)[1];
        var_1712170063932_1884 -= Int64(match (var_1712170063932_1890) {
            case caseVar_1712170063932_1897 => 
                var_1712170063932_1876;
                Int8(-41)
            
            case caseVar_1712170063932_1903 : Option<Unit> => 
                ();
                let var_1712170063932_1907 : Range<Int32> = ((Int32(Int32(72))&127)..=(Int32(Int32(UInt16(74)))&127):(Int64(Int32(Int16(-125)))|1));
                var_1712170063932_1907;
                var_1712170063932_1916
            
            case caseVar_1712170063932_1921 : UInt16 => 
                let var_1712170063932_1935 : Range<UInt32> = ((UInt32(UInt32(229))&127)..=(UInt32(UInt32(45))&127):(Int64(71)|1));
                Enum_1712170063932_952<Option<Class_1712170063932_269>>.enumValue_1712170063932_963(Class_1712170063932_269(namedParam_1712170063932_381 : ((UInt8(UInt8(174))&127)..(UInt8(UInt8(147))&127):(var_1712170063932_1801|1)), namedParam_1712170063932_384 : UInt64(254)), UInt32(2), (var_1712170063932_60, var_1712170063932_1770, var_1712170063932_1935, Float32(26.0)));
                var_1712170063932_1916
            
            case _ => 
                ();
                var_1712170063932_1916 >> ((var_1712170063932_1916) & 7)
            
        });
        let var_1712170063932_1954 : ?Int64 = (Class_1712170063932_269() as Int64);
        ((var_1712170063932_1954 ?? var_1712170063932_1801) * if (true) { // block id: 1960
            var_1712170063932_1884
        } else { // block id: 1962
            var_1712170063932_1801
        }) - Int64((-Int64(113)))
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1712170063932_1717*var_1712170063932_1717), 64)
        crcCheck.updateBuffer(UInt64(var_1712170063932_1801*var_1712170063932_1801), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1712170063932_23 {

}

extend<T0> Enum_1712170063932_952<T0> {

}

extend Struct_1712170063932_123 {

}

extend Class_1712170063932_269 {

}

// ASSERT: scan-2 sema_varray_cjvm_in_ref_type
