/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args  

public let var_1668691753944_45 : (Int16, Rune, Unit, Float32, Float32) = (Int16(-73), r'U', (), Float32(-27.0), Float32(47.0))
var var_1668691753944_105 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1668691753944_122 : Bool = (((Int16(UInt16(143))&127)..=(Int16(26)&127):((57|1))) is Int16)
var var_1668691753944_154 : UInt16 = UInt16(UInt16(196))
public var var_1668691753944_226 : Array<UInt64> = [UInt64(193), UInt64(60), UInt64(135), UInt64(73), UInt64(56), UInt64(131), UInt64(175), UInt64(114), UInt64(184), UInt64(156)]
public var var_1668691753944_483 : Float64 = 62.0
public var var_1668691753944_577 : UInt32 = UInt32(76)
var var_1668691753944_602 : Array<UInt64> = [UInt64(128), UInt64(111), UInt64(3), UInt64(125), UInt64(118), UInt64(29), UInt64(180), UInt64(51), UInt64(72), UInt64(47)]
var var_1668691753944_619 : (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8) = ([UInt64(66), UInt64(89), UInt64(107), UInt64(131), UInt64(153), UInt64(124), UInt64(202), UInt64(178), UInt64(179), UInt64(84)], ((Int32(103)&127)..=(Int32(49)&127):(113|1)), ((UInt32(125)&127)..(UInt32(55)&127):(92|1)), r'd', UInt8(Int8(13)))
var var_1668691753944_669 : UInt8 = UInt8(218)
public let var_1668691753944_773 : Range<UInt32> = ((UInt32(175)&127)..(UInt32(Int8(Int8(UInt8(69))))&127):(((-56)|1)))
public let var_1668691753944_885 : Struct_1668691753944_881 = Struct_1668691753944_881()
public let var_1668691753944_928 : ?Bool = Option<Bool>.None
var var_1668691753944_1108 : Int8 = Int8(Int8(17))
public var var_1668691753944_1256 : UInt64 = UInt64(158)
public let var_1668691753944_1268 : Rune = r'x'
var var_1668691753944_1340 : String = "}+u7oIrt(Z"
public var var_1668691753944_1375 : (UInt16, Float64, Enum_1668691753944_6, Float32, (UInt16, UInt32, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), Float64, UInt16), Bool) = (UInt16(Int16(-106)), Float64(Float32(Float32(2.0))), Enum_1668691753944_6.defaultValue, Float32(Float32(73.0)), (UInt16(13), UInt32(230), ([UInt64(113), UInt64(91), UInt64(137), UInt64(58), UInt64(10), UInt64(203), UInt64(185), UInt64(61), UInt64(127), UInt64(44)], ((Int32(11)&127)..=(Int32(-79)&127):(((-125)|1))), ((UInt32(123)&127)..=(UInt32(115)&127):((-79)|1)), r'M', UInt8(Int8(86))), ([UInt64(133), UInt64(46), UInt64(209), UInt64(41), UInt64(80), UInt64(63), UInt64(140), UInt64(240), UInt64(125), UInt64(204)], ((Int32(-70)&127)..(Int32(22)&127):(3|1)), ((UInt32(218)&127)..(UInt32(207)&127):(((-119)|1))), r'0', UInt8(186)), 9.0, UInt16(Int16(11))), true)
public var var_1668691753944_1519 : ?Int64 = (Int8(-124) as Int64)
let var_1668691753944_1523 : Int64 = 99
public enum Enum_1668691753944_6 {
    defaultValue |
    enumValue_1668691753944_1148(Option<Int8>)
}
public func func_1668691753944_54(param_1668691753944_55 : Int64) : Int64 { // block id: 56
    let var_1668691753944_79 : Unit = ();
    try { // block id: 69
        let var_1668691753944_71 : Range<Int32> = ((Int32(Int32(-99))&127)..(Int32(UInt8(18))&127):((76|1)));
        var_1668691753944_71;
        var_1668691753944_79;
        let var_1668691753944_84 : Int64 = Int64(13);
        [(-12), var_1668691753944_84, var_1668691753944_84, var_1668691753944_84, (-34), 45, 102, (-57), 31, (-35)]
    } finally { // block id: 95
        [(-95), (-52), (-19), 59, (-67), 14, 96, 7, (-31), 90]
    }[7]
}

public func func_1668691753944_99(param_1668691753944_100 : Range<Int32>) : Int64 { // block id: 101
    var_1668691753944_105[3];
    (-106)
}


public open class Class_1668691753944_194<T0, T1, T2> <: Resource {
    public init() { // block id: 196

    }
;
    static let var_1668691753944_413 : UInt8 = UInt8(155);
    private static mut prop var_1668691753944_417 : Int64 { // block id: 418
        get() { // block id: 420
            ();
            (((Int16(47)&127)..=(Int16(-128)&127):((-68)|1)) as Unit);
            Int64(UInt8(UInt8(Int8(40))))
        }

        set(Value) { // block id: 430
            Int64(UInt32(UInt32(107)));
            ()
        }

    };
    static var var_1668691753944_437 : Int8 = Int8(124);
    public static var var_1668691753944_468 : Unit = ();
    static func func_1668691753944_199(param_1668691753944_200 : (Int64) -> Int64, optionalParam_1668691753944_203 ! : Rune = r'y') : UInt32 { // block id: 205
        let var_1668691753944_409 : (Range<UInt8>) -> Option<Int8> = func_1668691753944_213;
        let var_1668691753944_450 : Unit = ();
        match (((((var_1668691753944_413&127)..(UInt8(83)&127):((var_1668691753944_417|1)))|>var_1668691753944_409) ?? Int8(var_1668691753944_437))) {
            case caseVar_1668691753944_441 : Range<UInt32> => 
                var var_1668691753944_447 : String = "6xP[aLjCi$";
                if (var_1668691753944_122) { "y(]I i9dfO" } else { var_1668691753944_447 } ;
                var_1668691753944_450
            
            case _ => 
                var_1668691753944_450
            
            case _ => 
                var_1668691753944_450;
                ()
            
            case caseVar_1668691753944_463 => 
                var_1668691753944_417++;
                var_1668691753944_468
            
            case _ => 
                ();
                var_1668691753944_450
            
        };
        var loopTimeVar_1668691753944_488 : Range<UInt64> = ((UInt64(203)&127)..(UInt64(55)&127):((Int64(Int8(Int8(-93)))|1)));
        for (i in loopTimeVar_1668691753944_488 where if (true) { // block id: 477
            true || false
        } else { // block id: 481
            var_1668691753944_483;
            false;
            var_1668691753944_122
        }) {

        };
        var var_1668691753944_580 : (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8) = ([UInt64(178), UInt64(136), UInt64(85), UInt64(168), UInt64(4), UInt64(120), UInt64(143), UInt64(175), UInt64(250), UInt64(13)], ((Int32(31)&127)..(Int32(9)&127):((-123)|1)), ((UInt32(245)&127)..=(UInt32(221)&127):((-24)|1)), r'1', UInt8(163));
        if ((Option<Bool>.None ?? false)) { // block id: 505
            let var_1668691753944_507 : (UInt16, UInt32, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), Float64, UInt16) = (UInt16(190), UInt32(224), ([UInt64(Int8(15)), UInt64(UInt8(33)), UInt64(Int16(78)), UInt64(Int8(-18)), UInt64(84), UInt64(Int16(73)), UInt64(22), UInt64(125), UInt64((-53)), UInt64(UInt32(164))], ((Int32(Int16(-115))&127)..(Int32(-65)&127):((70|1))), ((UInt32(109)&127)..=(UInt32(Int8(-73))&127):((31|1))), r'd', UInt8(16)), ([UInt64(Int16(44)), UInt64(Int8(-54)), UInt64(67), UInt64(67), UInt64(182), UInt64(249), UInt64(UInt8(137)), UInt64(249), UInt64(UInt64(133)), UInt64(UInt32(59))], ((Int32(UInt32(24))&127)..(Int32(78)&127):((Int64(UInt16(115))|1))), ((UInt32(234)&127)..(UInt32(141)&127):((-38)|1)), r'B', UInt8(114)), Float64(Float64((-21.0))), UInt16(52));
            var_1668691753944_507
        } else { // block id: 572
            var_1668691753944_45;
            (var_1668691753944_154, var_1668691753944_577, var_1668691753944_580, var_1668691753944_580, (-127.0), UInt16(169))
        }[1]
    }
;
    mut prop var_1668691753944_902 : Unit { // block id: 903
        get() { // block id: 905
            ();
            var_1668691753944_1527
        }

        set(Value) { // block id: 909
            ();
            ();
            var_1668691753944_1527 = Value
        }

    };
    static prop var_1668691753944_1315 : Bool { // block id: 1316
        get() { // block id: 1318
            (Int32(44) as Unit);
            ([(), (), (), (), (), (), (), (), (), ()], UInt16(150), UInt8(240), ());
            (UInt8(249) is Range<Int64>)
        }

    };
    mut prop var_1668691753944_1527 : Unit { // block id: 1528
        get() { // block id: 1530
            ((Int16(-120)&127)..(Int16(-54)&127):(68|1));
            ()
        }

        set(Value) { // block id: 1535
            [Option<Int8>.None, Option<Int8>.None, (Int16(Int16(77)) as Int8), Option<Int8>.None, (((UInt8(1)&127)..(UInt8(54)&127):((120|1))) as Int8), ((Int8(122), ###"`|[B'b}#w\\"###) as Int8), Option<Int8>.None, (Int64(124) as Int8), (Option<Int8>.None as Int8), Option<Int8>.None];
            ()
        }

    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


func func_1668691753944_217(param_1668691753944_218 : Int8) : Option<Int8> { // block id: 219
    let var_1668691753944_231 : Int32 = Int32(20);
    let var_1668691753944_234 : Int64 = Int64(UInt8(Int8(Int8(UInt8(98)))));
    let var_1668691753944_245 : Rune = r'W';
    var var_1668691753944_258 : ?Int8 = Option<Int8>.Some(Int8(-50));
    var var_1668691753944_268 : ?Int8 = (UInt32(Int16(Int8(3))) as Int8);
    if (((var_1668691753944_226, ((Int32(5)&127)..(var_1668691753944_231&127):((var_1668691753944_234|1))), ((UInt32(100)&127)..(UInt32(81)&127):((41|1))), var_1668691753944_245, UInt8(86)) is Range<Int32>)) { (if (true) { [Option<Int8>.Some(Int8(-105)), Option<Int8>.Some(Int8(-108)), Option<Int8>.Some(Int8(-9)), var_1668691753944_258, Option<Int8>.Some(Int8(82)), Option<Int8>.None, Option<Int8>.Some(Int8(-99)), var_1668691753944_258, var_1668691753944_268, var_1668691753944_258] } else { [Option<Int8>.None, Option<Int8>.Some(Int8(115)), var_1668691753944_258, var_1668691753944_268, var_1668691753944_258, var_1668691753944_258, Option<Int8>.None, Option<Int8>.None, Option<Int8>.Some(Int8(41)), Option<Int8>.None] } ) } else { try { // block id: 288
        var var_1668691753944_290 : Array<Option<Int8>> = [(Class_1668691753944_194<Range<UInt64>, UInt32, Unit>() as Int8), (((11&127)..(25&127):(48|1)) as Int8), Option<Int8>.Some(Int8(4)), ((-123) as Int8), ((-104) as Int8), Option<Int8>.Some(Int8(Int8(10))), Option<Int8>.None, ((UInt32(148) is (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8)) as Int8), (Int64(Int16(-82)) as Int8), (() as Int8)];
        var_1668691753944_290
    } finally { // block id: 314
        var_1668691753944_231;
        ();
        let var_1668691753944_320 : Array<Option<Int8>> = [((Int16(39), r'0', (), Float32(Float32(106.0)), Float32(71.0)) as Int8), Option<Int8>.None, Option<Int8>.Some(Int8(UInt8(UInt8(21)))), Option<Int8>.None, (((Int16(Int8(62))&127)..=(Int16(UInt8(25))&127):((66|1))) as Int8), ((((-80)&127)..(58&127):((-126)|1)) as Int8), (UInt32(Int8(-16)) as Int8), (Float32(Float32(23.0)) as Int8), (((Int16(-122)&127)..=(Int16(-101)&127):((-37)|1)) as Int8), (Int32(UInt32(101)) as Int8)];
        if (var_1668691753944_122) { var_1668691753944_320 } else { [var_1668691753944_268, Option<Int8>.Some(Int8(21)), var_1668691753944_258, Option<Int8>.None, var_1668691753944_268, Option<Int8>.None, var_1668691753944_258, var_1668691753944_268, Option<Int8>.Some(Int8(39)), Option<Int8>.Some(Int8(-49))] } 
    } } [3]
}

public func func_1668691753944_213(param_1668691753944_214 : Range<UInt8>) : Option<Int8> { // block id: 215
    let var_1668691753944_375 : Array<Option<Int8>> = [Option<Int8>.Some(Int8(Int8(-21))), (() as Int8), Option<Int8>.None, Option<Int8>.Some(Int8(-81)), Option<Int8>.Some(Int8(Int8(UInt8(139)))), (Option<Unit>.None as Int8), (Enum_1668691753944_6.defaultValue as Int8), (Int16(UInt8(42)) as Int8), (UInt16(Int8(UInt8(174))) as Int8), Option<Int8>.Some(Int8(29))];
    var var_1668691753944_404 : Int8 = Int8(Int8(UInt8(96)));
    (var_1668691753944_375[7] ?? var_1668691753944_404)|>func_1668691753944_217
}


public func func_1668691753944_749<T0, T1>(param_1668691753944_750 : Float32) : Enum_1668691753944_6 { // block id: 751
    try { // block id: 755
        let var_1668691753944_761 : Float32 = Float32(Float32(Float32(Float32(-20.0))));
        (UInt16(111), var_1668691753944_483, Enum_1668691753944_6.defaultValue, var_1668691753944_761, (var_1668691753944_154, UInt32(202), (var_1668691753944_226, ((Int32(-36)&127)..(Int32(-119)&127):(74|1)), var_1668691753944_773, r'2', UInt8(42)), var_1668691753944_619, (-40.0), var_1668691753944_154), var_1668691753944_122)
    } finally { // block id: 787
        var var_1668691753944_789 : (UInt16, Float64, Enum_1668691753944_6, Float32, (UInt16, UInt32, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), Float64, UInt16), Bool) = (UInt16(176), (-1.0), Enum_1668691753944_6.defaultValue, Float32(-1.0), (UInt16(223), UInt32(244), ([UInt64(174), UInt64(246), UInt64(245), UInt64(199), UInt64(189), UInt64(32), UInt64(86), UInt64(166), UInt64(186), UInt64(139)], ((Int32(40)&127)..=(Int32(50)&127):((27|1))), ((UInt32(62)&127)..(UInt32(142)&127):(98|1)), r'7', UInt8(210)), ([UInt64(244), UInt64(104), UInt64(87), UInt64(98), UInt64(19), UInt64(175), UInt64(110), UInt64(202), UInt64(51), UInt64(70)], ((Int32(22)&127)..=(Int32(118)&127):(52|1)), ((UInt32(155)&127)..(UInt32(231)&127):((111|1))), r'U', UInt8(UInt8(191))), Float64(Float32(Float32(97.0))), UInt16(85)), (([UInt64(144), UInt64(174), UInt64(149), UInt64(84), UInt64(207), UInt64(199), UInt64(135), UInt64(202), UInt64(72), UInt64(143)], ((Int32(-101)&127)..=(Int32(24)&127):(((-100)|1))), ((UInt32(67)&127)..(UInt32(180)&127):((-42)|1)), r'6', UInt8(UInt8(67))) is (Array<Unit>, Range<UInt32>) -> (Array<UInt64>, Range<UInt64>, UInt64, Bool, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), UInt8, String)));
        var_1668691753944_789
    }[2]
}

public struct Struct_1668691753944_881 {
    public init() { // block id: 883

    }

}

public func func_1668691753944_159<T0, T1>(param_1668691753944_160 : Rune) : Bool { // block id: 161
    var var_1668691753944_168 : Option<Unit> = (((UInt32(71)&127)..=(UInt32(31)&127):((-122)|1)) as Unit);
    let var_1668691753944_592 : (Int64) -> Int64 = func_1668691753944_54;
    let var_1668691753944_605 : Range<UInt64> = ((UInt64(Int16(Int16(UInt8(76))))&127)..=(UInt64(UInt64(Int16(UInt16(121))))&127):(((-18)|1)));
    let var_1668691753944_672 : String = "bOrX&]c:v@";
    let var_1668691753944_699 : (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8) = ([UInt64(UInt16(Int8(-54))), UInt64(Int16(2)), UInt64(124), UInt64(166), UInt64(252), UInt64(90), UInt64(Int8(Int8(43))), UInt64(Int32(Int32(-33))), UInt64(Int32(110)), UInt64(UInt64(UInt16(111)))], ((Int32(11)&127)..(Int32(Int16(122))&127):(((-21)|1))), ((UInt32(225)&127)..=(UInt32(209)&127):(58|1)), r'5', UInt8(UInt8(9)));
    let var_1668691753944_849 : Unit = ();
    let var_1668691753944_990 : Range<Int32> = ((Int32(UInt32(208))&127)..(Int32(UInt32(Int32(111)))&127):((117|1)));
    let var_1668691753944_1058 : (Int8, String) = (Int8(UInt8(11)), "P${var_1668691753944_672}jYn26${var_1668691753944_672}vs5V");
    let var_1668691753944_1103 : Float32 = Float32(-69.0);
    func func_1668691753944_172(param_1668691753944_173 : UInt16, optionalParam_1668691753944_174 ! : UInt64 = UInt64(UInt32(67))) : Unit { // block id: 177
        let var_1668691753944_637 : Int64 = Int64(Int16(-12));
        let var_1668691753944_650 : UInt64 = UInt64(UInt32(193));
        func func_1668691753944_188(namedParam_1668691753944_189 ! : Array<Unit>, namedParam_1668691753944_190 ! : Range<UInt32>) : (Array<UInt64>, Range<UInt64>, UInt64, Bool, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), UInt8, String) { // block id: 191
            var var_1668691753944_665 : Rune = r'A';
            var var_1668691753944_678 : Int8 = Int8(-49);
            match (Class_1668691753944_194<Range<UInt64>, UInt32, Unit>.func_1668691753944_199(var_1668691753944_592)) {
                case 119 => 
                    var_1668691753944_577 >>= ((UInt32(6)) & 7);
                    let var_1668691753944_628 : UInt8 = UInt8(35);
                    (var_1668691753944_602, var_1668691753944_605, UInt64(120), true, var_1668691753944_619, var_1668691753944_628, "2K;KweM=B3")
                
                case caseVar_1668691753944_633 => 
                    ((var_1668691753944_637&127)..((-42)&127):(((-119)|1)));
                    ([UInt64(27), UInt64(34), UInt64(234), UInt64(215), UInt64(123), UInt64(95), UInt64(235), UInt64(128), UInt64(36), UInt64(223)], ((UInt64(47)&127)..=(UInt64(66)&127):((-71)|1)), UInt64(137), false, ([var_1668691753944_650, UInt64(184), UInt64(173), UInt64(155), UInt64(96), UInt64(60), var_1668691753944_650, UInt64(65), UInt64(99), var_1668691753944_650], ((Int32(124)&127)..(Int32(-82)&127):(73|1)), ((UInt32(118)&127)..=(UInt32(5)&127):(114|1)), var_1668691753944_665, UInt8(226)), var_1668691753944_669, var_1668691753944_672)
                
                case _ => 
                    var_1668691753944_678--;
                    [42, (-1), 15, 39, (-52), (-56), 13, 124, (-77), (-39)];
                    var var_1668691753944_696 : Bool = false;
                    ([var_1668691753944_650, UInt64(183), var_1668691753944_650, UInt64(179), var_1668691753944_650, UInt64(97), var_1668691753944_650, UInt64(217), UInt64(46), var_1668691753944_650], ((UInt64(53)&127)..(UInt64(35)&127):((-52)|1)), UInt64(34), var_1668691753944_696, var_1668691753944_699, var_1668691753944_669, var_1668691753944_672)
                
            }
        }
;
        let var_1668691753944_854 : Int16 = Int16(UInt8(UInt8(UInt8(UInt8(103)))));
        let var_1668691753944_899 : Class_1668691753944_194<Range<UInt64>, UInt32, Unit> = Class_1668691753944_194<Range<UInt64>, UInt32, Unit>();
        func func_1668691753944_181() : Unit { // block id: 182
            let var_1668691753944_735 : Range<UInt32> = ((UInt32(Int32(UInt32(145)))&127)..(UInt32(81)&127):((Int64(Int8(119))|1)));
            func_1668691753944_188(namedParam_1668691753944_189 : [(), (), (), (), (), (), (), (), (), ()], namedParam_1668691753944_190 : var_1668691753944_735)[4][2];
            let var_1668691753944_876 : Enum_1668691753944_6 = Enum_1668691753944_6.defaultValue;
            match ((Float32(-27.0)|>func_1668691753944_749<Array<Int16>, Int32>)) {
                case _ : Array<Int16> => 
                    var_1668691753944_849;
                    var_1668691753944_849;
                    [var_1668691753944_854, Int16(40), var_1668691753944_854, Int16(45), var_1668691753944_854, var_1668691753944_854, Int16(82), var_1668691753944_854, Int16(-119), Int16(-107)]
                
                case _ => 
                    if (var_1668691753944_122) { ((UInt64(234)&127)..=(UInt64(92)&127):(117|1)) } else { var_1668691753944_605 } ;
                    var_1668691753944_876;
                    [Int16(-108), Int16(122), Int16(-25), Int16(-109), Int16(-106), Int16(122), Int16(34), Int16(-122), Int16(-44), Int16(66)]
                
            }[5];
            var_1668691753944_885.func_1668691753944_888(var_1668691753944_899.var_1668691753944_902, if (var_1668691753944_122) { [92, 109, 23, 56, (-76), 24, (-81), (-81), (-40), 54] } else { [(-15), 42, var_1668691753944_637, (-40), (-90), var_1668691753944_637, var_1668691753944_637, (-106), var_1668691753944_637, (-92)] } , namedParam_1668691753944_895 : match (var_1668691753944_928) {
                case _ : Option<Int8> => 
                    var var_1668691753944_934 : Array<Int64> = [(-6), (-106), 51, Int64(UInt8(Int8(102))), (-67), (-76), Int64(Int32(UInt8(224))), (-122), (-98), 103];
                    var_1668691753944_934
                
                case caseVar_1668691753944_952 : Unit => 
                    var_1668691753944_45;
                    var_1668691753944_849;
                    [88, 109, 94, 104, (-49), (-88), (-14), (-12), (-46), 112]
                
                case caseVar_1668691753944_959 => 
                    var_1668691753944_885;
                    var_1668691753944_849;
                    [(-45), (-117), 70, 35, 42, 3, 93, 99, 11, (-11)]
                
                case _ => 
                    ();
                    var_1668691753944_849;
                    [(-63), 46, 38, 87, (-78), (-55), 122, 19, 114, (-62)]
                
                case _ => 
                    ();
                    true;
                    [(-75), var_1668691753944_637, var_1668691753944_637, 122, (-72), (-20), 81, var_1668691753944_637, 86, (-67)]
                
            })
        }
;
        try { // block id: 179
            func_1668691753944_181();
            var var_1668691753944_1046 : Range<Int64> = (((-119)&127)..=(112&127):((-100)|1));
            try { // block id: 986
                if (false) { var_1668691753944_990 } else { var_1668691753944_990 } ;
                UInt8(201);
                var_1668691753944_122
            } catch (e: Exception) { // block id: 1001
                let var_1668691753944_1003 : (UInt16, Float64, Enum_1668691753944_6, Float32, (UInt16, UInt32, (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), (Array<UInt64>, Range<Int32>, Range<UInt32>, Rune, UInt8), Float64, UInt16), Bool) = (UInt16(UInt8(247)), 118.0, Enum_1668691753944_6.defaultValue, Float32(Float32(-10.0)), (UInt16(Int16(-100)), UInt32(202), ([UInt64(105), UInt64(109), UInt64(98), UInt64(20), UInt64(143), UInt64(33), UInt64(26), UInt64(171), UInt64(18), UInt64(22)], ((Int32(-90)&127)..=(Int32(-87)&127):(((-34)|1))), ((UInt32(47)&127)..=(UInt32(244)&127):(23|1)), r'A', UInt8(163)), ([UInt64(92), UInt64(62), UInt64(240), UInt64(145), UInt64(249), UInt64(166), UInt64(150), UInt64(237), UInt64(30), UInt64(106)], ((Int32(70)&127)..(Int32(28)&127):((-99)|1)), ((UInt32(162)&127)..=(UInt32(97)&127):(0|1)), r'W', UInt8(Int8(105))), Float64(Float32(104.0)), UInt16(69)), false);
                var_1668691753944_1003;
                var_1668691753944_1046;
                var_1668691753944_122
            }
        } catch (e: Exception) { // block id: 1049
            var var_1668691753944_1052 : Bool = false;
            var_1668691753944_1052 &&= var_1668691753944_122;
            var_1668691753944_1058[1];
            match (var_1668691753944_854) {
                case -102 => 
                    var_1668691753944_154 &= UInt16(128);
                    var_1668691753944_122
                
                case _ => 
                    ((UInt64(157)&127)..=(UInt64(248)&127):(((-112)|1)));
                    var_1668691753944_849;
                    !true
                
            }
        };
        var var_1668691753944_1112 : Float32 = Float32(-15.0);
        var var_1668691753944_1131 : (Int8, String) = (Int8(115), "jP&yd'TB5z");
        (if (var_1668691753944_122) { // block id: 1086
            Float32(-8.0)
        } else if (var_1668691753944_122) { // block id: 1089
            var_1668691753944_849;
            [Int16(69), Int16(-46), var_1668691753944_854, Int16(-34), Int16(104), var_1668691753944_854, Int16(-24), Int16(-99), Int16(-81), var_1668691753944_854];
            var_1668691753944_1103
        } else { // block id: 1105
            var_1668691753944_1108--;
            var_1668691753944_1112
        } + try { // block id: 1115
            var_1668691753944_854;
            var_1668691753944_849;
            Float32(61.0) + Float32(20.0)
        } catch (_) { // block id: 1121
            let var_1668691753944_1123 : Unit = ();
            var_1668691753944_1123;
            var var_1668691753944_1126 : Rune = r'N';
            var_1668691753944_1126;
            var_1668691753944_1112
        } finally { // block id: 1129
            var_1668691753944_1131;
            ((Int8(-1)&127)..(Int8(53)&127):((-36)|1));
            var_1668691753944_1103
        }) / Float32((Int32(var_1668691753944_1103)) | 1);
        if (((var_1668691753944_669 ^ var_1668691753944_669) is Int8)) { // block id: 1143
            if (var_1668691753944_122) { // block id: 1146
                Enum_1668691753944_6.enumValue_1668691753944_1148(Option<Int8>.Some(var_1668691753944_1108));
                var_1668691753944_849;
                ()
            };
            var loopTimeVar_1668691753944_1159 : Int64 = 0;
            while ((var_1668691753944_122) && loopTimeVar_1668691753944_1159 < 100 ) {
                loopTimeVar_1668691753944_1159++;
                ()
            }
        }
    }
;
    (var_1668691753944_168 ?? func_1668691753944_172(UInt16(UInt8(69))));
    var var_1668691753944_1167 : Rune = r'f';
    var var_1668691753944_1172 : (Array<Unit>, UInt16, UInt8, Unit) = ([(), (), (), (), (), (), (), (), (), ()], UInt16(168), UInt8(223), ());
    ((Int16(UInt16(139)), var_1668691753944_1167, var_1668691753944_1172[3], [var_1668691753944_1103, Float32(-67.0), var_1668691753944_1103, Float32(90.0), Float32(18.0), Float32(68.0), var_1668691753944_1103, Float32(-5.0), var_1668691753944_1103, var_1668691753944_1103][8], Float32(62.0)) is UInt16)
}

func func_1668691753944_115(param_1668691753944_116 : UInt16) : Bool { // block id: 117
    var var_1668691753944_139 : Int16 = Int16(UInt16(Int8(Int8(-91))));
    var var_1668691753944_147 : Int32 = Int32(Int8(Int8(48)));
    var var_1668691753944_1195 : (Rune) -> Bool = func_1668691753944_159<Class_1668691753944_194<Range<UInt64>, UInt32, Unit>, Enum_1668691753944_6>;
    var var_1668691753944_1200 : UInt64 = UInt64(UInt8(14));
    var var_1668691753944_1211 : Bool = ((11 as Unit) is (Int64) -> Int64);
    [var_1668691753944_122, try { // block id: 130
        let var_1668691753944_132 : Unit = ();
        var_1668691753944_132;
        !false
    } catch (_) { // block id: 136
        var_1668691753944_139 & Int16(-46);
        var_1668691753944_147 -= var_1668691753944_147;
        var_1668691753944_154 != UInt16(183)
    }, (r'c'|>var_1668691753944_1195), var_1668691753944_1200 < UInt64(94), [true, var_1668691753944_122, var_1668691753944_122, var_1668691753944_1211, var_1668691753944_122, true, true, var_1668691753944_1211, false, var_1668691753944_1211][3], match (Option<Int8>.Some(Int8(-3))) {
        case _ => 
            var var_1668691753944_1264 : Int64 = 45;
            var var_1668691753944_1273 : String = """
my6mc
Sep3w
""";
            ([UInt64(46), UInt64(219), var_1668691753944_1200, UInt64(222), UInt64(24), var_1668691753944_1200, var_1668691753944_1200, var_1668691753944_1200, var_1668691753944_1200, var_1668691753944_1200], ((var_1668691753944_1200&127)..(UInt64(41)&127):((103|1))), var_1668691753944_1200, var_1668691753944_122, ([UInt64(172), UInt64(124), UInt64(134), var_1668691753944_1200, UInt64(158), UInt64(153), var_1668691753944_1200, var_1668691753944_1256, UInt64(168), var_1668691753944_1256], ((Int32(-62)&127)..(var_1668691753944_147&127):((var_1668691753944_1264|1))), ((UInt32(53)&127)..=(UInt32(75)&127):(43|1)), var_1668691753944_1268, var_1668691753944_669), UInt8(238), var_1668691753944_1273);
            var_1668691753944_577 <= UInt32(43)
        
        case caseVar_1668691753944_1280 : Rune => 
            var var_1668691753944_1283 : Bool = false;
            var_1668691753944_1283
        
        case caseVar_1668691753944_1287 => 
            ((Int32(108)&127)..(Int32(20)&127):(69|1));
            ();
            var_1668691753944_669 > var_1668691753944_669
        
        case caseVar_1668691753944_1296 : Struct_1668691753944_881 => 
            !var_1668691753944_1211
        
        case _ => 
            var_1668691753944_928;
            "~D4J*b}x%7";
            false
        
    }, match (Enum_1668691753944_6.defaultValue) {
        case _ => 
            var_1668691753944_122 && var_1668691753944_122
        
    }, Class_1668691753944_194<Range<UInt64>, UInt32, Unit>.var_1668691753944_1315, (var_1668691753944_226, ((UInt64(168)&127)..(var_1668691753944_1256&127):((37|1))), UInt64(164), var_1668691753944_1211, var_1668691753944_619, var_1668691753944_669, var_1668691753944_1340)[3], true][1]
}


public func func_1668691753944_110(param_1668691753944_111 : Int64) : Range<Int32> { // block id: 112
    var var_1668691753944_1346 : (UInt16) -> Bool = func_1668691753944_115;
    var loopTimeVar_1668691753944_1440 : Range<UInt64> = ((UInt64(UInt32(235))&127)..(UInt64(100)&127):((Int64(Int32(-127))|1)));
    for (i in loopTimeVar_1668691753944_1440 where (if (true) { // block id: 1350
        let var_1668691753944_1353 : Float32 = Float32(Float32(Float32(Float32(54.0))));
        [var_1668691753944_1353, Float32(-123.0), Float32(84.0), Float32(113.0), Float32(78.0), var_1668691753944_1353, var_1668691753944_1353, var_1668691753944_1353, var_1668691753944_1353, var_1668691753944_1353];
        ();
        UInt16(21) / ((var_1668691753944_154) | 1)
    } else { // block id: 1371
        UInt16(216)
    }|>var_1668691753944_1346)) {
        var_1668691753944_1375;
        let var_1668691753944_1435 : Unit = ();
        var loopTimeVar_1668691753944_1439 : Int64 = 0;
        while ((var_1668691753944_122) && loopTimeVar_1668691753944_1439 < 100 ) {
            loopTimeVar_1668691753944_1439++;
            var_1668691753944_1435;
            Class_1668691753944_194<Range<UInt64>, UInt32, Unit>()
        }
    };
    let var_1668691753944_1454 : Int32 = Int32(37);
    var var_1668691753944_1496 : Bool = false;
    let var_1668691753944_1505 : Option<Range<Int32>> = ((true as Int8) as Range<Int32>);
    try { // block id: 1448
        (((var_1668691753944_1454&127)..=(var_1668691753944_1454&127):((110|1))), var_1668691753944_1340)[0]
    } finally { // block id: 1460
        var var_1668691753944_1469 : Int64 = Int64(Int8(UInt8(Int8(UInt8(127)))));
        var var_1668691753944_1479 : UInt32 = UInt32(Int16(41));
        try (resource = Class_1668691753944_194<Range<UInt64>, UInt32, Unit>()) { // block id: 1462
            ((var_1668691753944_1256&127)..=(var_1668691753944_1256&127):((91|1)));
            var_1668691753944_1469 &= (-92);
            var_1668691753944_577 <<= ((var_1668691753944_1479) & 7)
        } catch (_) { // block id: 1482
            var_1668691753944_122;
            if (false) { ((var_1668691753944_1454&127)..=(var_1668691753944_1454&127):(((-12)|1))) } else { ((var_1668691753944_1454&127)..(Int32(-69)&127):((var_1668691753944_1469|1))) } ;
            var_1668691753944_1496 ||= var_1668691753944_122
        };
        var var_1668691753944_1510 : Range<Int32> = ((Int32(-28)&127)..=(Int32(12)&127):(122|1));
        (var_1668691753944_1505 ?? var_1668691753944_1510)
    }
}


main(): Int64 {
    try {
        let var_1668691753944_13 : Unit = ();
        var var_1668691753944_21 : UInt32 = UInt32(132);
        let var_1668691753944_27 : Int32 = Int32(Int8(Int8(-56)));
        match (Enum_1668691753944_6.defaultValue) {
            case _ => 
                var_1668691753944_13;
                Int8(-67) / ((Int8(62)) | 1);
                UInt32(144) ^ var_1668691753944_21
            
            case defaultValue => 
                var_1668691753944_27;
                UInt32(125)
            
            case defaultValue => 
                (-19.0);
                ();
                UInt32(111)
            
            case _ => 
                ();
                UInt32(239)
            
        };
        var_1668691753944_45[2];
        (var_1668691753944_1519 ?? var_1668691753944_1523)|>(func_1668691753944_110~>func_1668691753944_99)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1668691753944_21*var_1668691753944_21), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_27*var_1668691753944_27), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_154*var_1668691753944_154), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_577*var_1668691753944_577), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_669*var_1668691753944_669), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_1108*var_1668691753944_1108), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_1256*var_1668691753944_1256), 64)
        crccheck.updateBuffer(UInt64(var_1668691753944_1523*var_1668691753944_1523), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            res = res + hex_value.toString()
            i = i + 3
        }
        print("\n")
        if ( res == "2101030402260413220122000000000000000000000141411144443536633553" ){
            return 0
        }
        return 1
    }
}
extend Enum_1668691753944_6 {

}

extend Struct_1668691753944_881 {
    func func_1668691753944_888(param_1668691753944_889 : Unit, param_1668691753944_890 : Array<Int64>, optionalParam_1668691753944_891 ! : Int16 = Int16(Int8(UInt8(9))), namedParam_1668691753944_895 ! : Array<Int64>) : Unit { // block id: 896

    }

}

