/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC-PIPE: %run %run_opt %output %run_args

public var var_1679756875016_12 : Int16 = Int16(Int8(-91))
public var var_1679756875016_18 : Unit = ()
public let var_1679756875016_28 : Enum_1679756875016_25 = Enum_1679756875016_25.defaultValue
let var_1679756875016_34 : String = ###"`M$jWa%=nX"###
public var var_1679756875016_37 : Float64 = Float64(Float64(Float32(-56.0)))
public var var_1679756875016_60 : Bool = ("""
Av${var_1679756875016_34}Ks${var_1679756875016_34}_
!+P&a{
""" is Float64)
let var_1679756875016_77 : Float32 = Float32(113.0)
public let var_1679756875016_85 : Float32 = Float32(95.0)
public let var_1679756875016_108 : Int32 = Int32(47)
let var_1679756875016_155 : Int64 = 92
public let var_1679756875016_198 : Unit = ()
public let var_1679756875016_233 : (UInt16, UInt64) = (UInt16(57), UInt64(Int16(UInt16(UInt8(82)))))
public var var_1679756875016_247 : ?Unit = Option<Unit>.None
public let var_1679756875016_252 : ?String = Option<String>.None
public let var_1679756875016_261 : UInt64 = UInt64(Int32(-103))
public var var_1679756875016_339 : ?Int64 = Option<Int64>.None
let var_1679756875016_354 : Array<UInt64> = [UInt64(10), UInt64(134), UInt64(40), UInt64(29), UInt64(244), UInt64(11), UInt64(9), UInt64(194), UInt64(146), UInt64(40)]
public let var_1679756875016_361 : UInt8 = UInt8(Int8(UInt8(UInt8(UInt8(166)))))
public var var_1679756875016_369 : UInt16 = UInt16(UInt16(24))
public var var_1679756875016_373 : UInt64 = UInt64(Int32(83))
var var_1679756875016_391 : ?String = (((UInt64(Int32(6))&127)..(UInt64(109)&127):((Int64(UInt16(UInt8(185)))|1))) as String)
public var var_1679756875016_447 : Struct_1679756875016_443<Range<Int8>, Bool> = Struct_1679756875016_443<Range<Int8>, Bool>()
public var var_1679756875016_473 : ?Unit = (((UInt16(109)&127)..=(UInt16(93)&127):(32|1)) as Unit)
let var_1679756875016_492 : Float64 = Float64(Float32(-106.0))
let var_1679756875016_512 : Range<Int8> = ((Int8(Int8(104))&127)..(Int8(-54)&127):((Int64(UInt8(Int8(Int8(-6))))|1)))
public let var_1679756875016_525 : Class_1679756875016_281<Rune, UInt8> = Class_1679756875016_281<Rune, UInt8>()
public var var_1679756875016_535 : UInt32 = UInt32(183)
public let var_1679756875016_541 : String = "k~$~a{?1!\","
public var var_1679756875016_591 : (Array<UInt16>, String, UInt8) = ([UInt16(183), UInt16(90), UInt16(171), UInt16(44), UInt16(112), UInt16(31), UInt16(190), UInt16(59), UInt16(2), UInt16(37)], """
o?x_A
@#jk&
""", UInt8(151))
public var var_1679756875016_602 : Array<UInt16> = [UInt16(123), UInt16(127), UInt16(4), UInt16(168), UInt16(128), UInt16(118), UInt16(35), UInt16(219), UInt16(122), UInt16(208)]
public var var_1679756875016_690 : Int64 = Int64(Int8(UInt8(UInt8(137))))
public let var_1679756875016_714 : Option<Option<Int64>> = Option<Option<Int64>>.None
public var var_1679756875016_725 : Int32 = Int32(97)
public var var_1679756875016_728 : Range<Int64> = (((-50)&127)..=(20&127):(52|1))
let var_1679756875016_794 : Bool = (((Int8(Int8(0))&127)..(Int8(-118)&127):((45|1))) is Int64)
public var var_1679756875016_820 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1679756875016_842 : Int8 = Int8(Int8(UInt8(48)))
public var var_1679756875016_874 : Range<Int32> = ((Int32(13)&127)..=(Int32(117)&127):(51|1))
public let var_1679756875016_907 : UInt16 = UInt16(20)
public let var_1679756875016_918 : UInt8 = UInt8(UInt8(Int8(Int8(30))))
public let var_1679756875016_925 : Array<Int64> = [Int64(114), Int64(Int32(Int8(UInt8(196)))), (-19), 90, Int64(UInt32(UInt8(223))), (-18), (-63), Int64(Int32(Int16(UInt8(158)))), Int64((-12)), Int64(UInt8(Int8(UInt8(120))))]
public enum Enum_1679756875016_25 {
    defaultValue
}

public func func_1679756875016_133(namedParam_1679756875016_134 ! : Range<Int64>, namedParam_1679756875016_135 ! : UInt8, namedParam_1679756875016_136 ! : Range<UInt8>) : Array<Unit> { // block id: 137
    let var_1679756875016_140 : Range<Int32> = ((Int32(UInt32(72))&127)..=(Int32(UInt8(190))&127):(((-58)|1)));
    match (var_1679756875016_140) {
        case _ => 
            [(), (), (), (), (), (), (), (), (), ()]
        
    }
}

public func func_1679756875016_194(param_1679756875016_195 : Range<Int16>) : Unit { // block id: 196
    var_1679756875016_198
}



public interface Interface_1679756875016_285 {

}

public interface Interface_1679756875016_284 <: Interface_1679756875016_285 {

}

public open class Class_1679756875016_281<T0, T1> <: Interface_1679756875016_284 & Interface_1679756875016_285 & Resource {
    public init() { // block id: 283

    }
;
    public prop var_1679756875016_528 : String { // block id: 529
        get() { // block id: 531
            ();
            ###"ruY.G_pem<"###
        }

    };
    public init(param_1679756875016_673 : (Range<Int16>) -> Unit, optionalParam_1679756875016_676 ! : Float32 = Float32(71.0), optionalParam_1679756875016_678 ! : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]) { // block id: 680
        let var_1679756875016_734 : Array<Array<UInt16>> = [[UInt16(159), UInt16(144), UInt16(208), UInt16(233), UInt16(167), UInt16(131), UInt16(195), UInt16(199), UInt16(96), UInt16(126)], [UInt16(191), UInt16(214), UInt16(250), UInt16(101), UInt16(79), UInt16(244), UInt16(143), UInt16(2), UInt16(106), UInt16(37)], [UInt16(121), UInt16(174), UInt16(149), UInt16(45), UInt16(88), UInt16(115), UInt16(67), UInt16(202), UInt16(2), UInt16(115)], [UInt16(59), UInt16(95), UInt16(55), UInt16(5), UInt16(127), UInt16(171), UInt16(17), UInt16(63), UInt16(128), UInt16(68)], [UInt16(138), UInt16(53), UInt16(225), UInt16(204), UInt16(25), UInt16(76), UInt16(19), UInt16(118), UInt16(67), UInt16(115)], [UInt16(209), UInt16(45), UInt16(161), UInt16(218), UInt16(253), UInt16(192), UInt16(193), UInt16(163), UInt16(230), UInt16(49)], [UInt16(116), UInt16(151), UInt16(97), UInt16(46), UInt16(99), UInt16(55), UInt16(219), UInt16(184), UInt16(189), UInt16(111)], [UInt16(132), UInt16(236), UInt16(221), UInt16(33), UInt16(75), UInt16(146), UInt16(188), UInt16(155), UInt16(38), UInt16(35)], [UInt16(202), UInt16(214), UInt16(117), UInt16(27), UInt16(5), UInt16(247), UInt16(87), UInt16(116), UInt16(180), UInt16(63)], [UInt16(138), UInt16(15), UInt16(180), UInt16(231), UInt16(93), UInt16(253), UInt16(206), UInt16(76), UInt16(119), UInt16(177)]];
        match ((match (Option<Int64>.Some(var_1679756875016_690)) {
            case caseVar_1679756875016_697 => 
                var var_1679756875016_702 : Option<Option<Int64>> = Option<Option<Int64>>.None;
                if (true) { var_1679756875016_702 } else { Option<Option<Int64>>.Some(Option<Int64>.Some(var_1679756875016_690)) } 
            
            case _ => 
                let var_1679756875016_711 : Bool = true;
                if (var_1679756875016_711) { var_1679756875016_714 } else { var_1679756875016_714 } 
            
        } ?? (Float32(0.0) as Int64))) {
            case caseVar_1679756875016_721 : Option<Int64> => 
                Option<UInt16>.None;
                var_1679756875016_725;
                var_1679756875016_728
            
            case _ => 
                var_1679756875016_734;
                Option<UInt16>.None;
                var_1679756875016_728
            
            case caseVar_1679756875016_740 => 
                if (false) { (((-18)&127)..(78&127):(50|1)) } else { ((var_1679756875016_690&127)..(var_1679756875016_690&127):((var_1679756875016_690|1))) } 
            
            case _ => 
                var var_1679756875016_752 : Array<UInt16> = [UInt16(126), UInt16(243), UInt16(80), UInt16(Int16(Int8(Int8(83)))), UInt16(Int8(-72)), UInt16(Int16(-76)), UInt16(Int16(-25)), UInt16(UInt8(242)), UInt16(132), UInt16(Int16(UInt8(Int8(98))))];
                var_1679756875016_752;
                if (true) { (((-72)&127)..(30&127):(4|1)) } else { ((var_1679756875016_690&127)..=((-24)&127):((var_1679756875016_690|1))) } 
            
        };
        var var_1679756875016_788 : Int64 = 66;
        Option<UInt16>.Some(if (try { // block id: 784
            var_1679756875016_734;
            var_1679756875016_788 <= (-109)
        } catch (_) { // block id: 791
            var_1679756875016_361;
            var_1679756875016_794
        }) { // block id: 801
            UInt16(109)
        } else { // block id: 803
            var_1679756875016_369
        })
    }

    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}


public func func_1679756875016_305<T0, T1, T2>(optionalParam_1679756875016_306 ! : Range<Int64> = ((Int64(Int16(29))&127)..=((-87)&127):((Int64(43)|1)))) : UInt32 { // block id: 313
    UInt32(46)
}

public func func_1679756875016_344(param_1679756875016_345 : Interface_1679756875016_285, param_1679756875016_346 : Interface_1679756875016_285, namedParam_1679756875016_347 ! : UInt16) : Array<UInt64> { // block id: 348
    let var_1679756875016_350 : Float64 = Float64(Float32(-126.0));
    var_1679756875016_350;
    var_1679756875016_354
}

public struct Struct_1679756875016_443<T0, T1> {
    public init() { // block id: 445

    }
;
    public mut prop var_1679756875016_450 : String { // block id: 451
        get() { // block id: 453
            (r'T' is Enum_1679756875016_25);
            "xx.VY*M@Qi";
            var_1679756875016_968
        }

        set(Value) { // block id: 459
            ();
            (UInt16(Int16(-87)), UInt64(Int32(-81)));
            ();
            var_1679756875016_968 = Value
        }

    };
    public let var_1679756875016_641 : Int16 = Int16(25);
    public static mut prop var_1679756875016_648 : Int16 { // block id: 649
        get() { // block id: 651
            ();
            Int16(UInt16(Int8(117)))
        }

        set(Value) { // block id: 658

        }

    };
    mut prop var_1679756875016_968 : String { // block id: 969
        get() { // block id: 971
            "n@)n/.expx"
        }

        set(Value) { // block id: 975
            ()
        }

    }
}

func func_1679756875016_401(param_1679756875016_402 : Unit, param_1679756875016_403 : (Range<Int64>, UInt8, Range<UInt8>) -> Array<Unit>) : String { // block id: 408
    var_1679756875016_198;
    let var_1679756875016_434 : Bool = false;
    let var_1679756875016_438 : Array<UInt64> = [UInt64(47), UInt64(18), UInt64(141), UInt64(35), UInt64(29), UInt64(190), UInt64(129), UInt64(193), UInt64(248), UInt64(59)];
    try { // block id: 412
        [(), (), (), (), (), (), (), (), (), ()];
        let var_1679756875016_416 : Int64 = (-11);
        var_1679756875016_416 & var_1679756875016_416;
        [var_1679756875016_198, var_1679756875016_198, (), (), var_1679756875016_198, (), (), (), (), var_1679756875016_198]
    } catch (_) { // block id: 430
        var_1679756875016_198;
        if (var_1679756875016_434) { var_1679756875016_354 } else { var_1679756875016_438 } ;
        [(), (), (), (), (), (), (), (), (), ()]
    }[4];
    var_1679756875016_447.var_1679756875016_450
}


public func func_1679756875016_295(param_1679756875016_296 : Float64) : (Array<UInt64>, UInt16, Option<String>, String, Float32, Float64) { // block id: 297
    let var_1679756875016_334 : Int64 = 1;
    (match (func_1679756875016_305<UInt32, Range<UInt16>, Int64>()) {
        case caseVar_1679756875016_317 => 
            Option<Int64>.Some(77)
        
        case _ : UInt32 => 
            var var_1679756875016_326 : Int64 = Int64(Int16(96));
            Option<Int64>.Some(var_1679756875016_326)
        
        case 44 => 
            Option<Int64>.Some(var_1679756875016_334)
        
        case _ => 
            var_1679756875016_339
        
    } ?? var_1679756875016_334);
    let var_1679756875016_378 : Interface_1679756875016_285 = Class_1679756875016_281<Rune, UInt8>();
    var var_1679756875016_478 : (Range<Int64>, UInt8, Range<UInt8>) -> Array<Unit> = func_1679756875016_133;
    (func_1679756875016_344((Class_1679756875016_281<Rune, UInt8>(), var_1679756875016_361, (var_1679756875016_369, var_1679756875016_373))[0], var_1679756875016_378, namedParam_1679756875016_347 : UInt16(140) - UInt16(68)), [[UInt16(251), UInt16(167), UInt16(95), UInt16(197), UInt16(102), UInt16(38), UInt16(58), UInt16(212), UInt16(113), UInt16(87)], [UInt16(240), UInt16(248), UInt16(0), UInt16(237), UInt16(113), UInt16(253), UInt16(169), UInt16(66), UInt16(140), UInt16(140)], [UInt16(201), UInt16(66), UInt16(119), UInt16(54), UInt16(227), UInt16(251), UInt16(209), UInt16(142), UInt16(175), UInt16(250)], [UInt16(74), UInt16(15), UInt16(198), UInt16(152), UInt16(99), UInt16(74), UInt16(140), UInt16(106), UInt16(26), UInt16(245)], [UInt16(177), UInt16(227), UInt16(214), UInt16(159), UInt16(35), UInt16(51), UInt16(87), UInt16(76), UInt16(253), UInt16(236)], [UInt16(168), UInt16(127), UInt16(12), UInt16(58), UInt16(235), UInt16(76), UInt16(91), UInt16(237), UInt16(225), UInt16(80)], [UInt16(51), UInt16(129), UInt16(109), UInt16(59), UInt16(122), UInt16(232), UInt16(148), UInt16(132), UInt16(208), UInt16(209)], [UInt16(101), UInt16(251), UInt16(18), UInt16(161), UInt16(218), UInt16(222), UInt16(84), UInt16(182), UInt16(155), UInt16(34)], [UInt16(86), UInt16(2), UInt16(118), UInt16(206), UInt16(52), UInt16(182), UInt16(180), UInt16(13), UInt16(102), UInt16(100)], [UInt16(92), UInt16(254), UInt16(108), UInt16(190), UInt16(61), UInt16(10), UInt16(218), UInt16(113), UInt16(210), UInt16(113)]][3][0], var_1679756875016_391, func_1679756875016_401((var_1679756875016_473 ?? ()), var_1679756875016_478), (-var_1679756875016_85) + [Float32(117.0), Float32(-95.0), Float32(-73.0), Float32(62.0), Float32(17.0), Float32(89.0), Float32(124.0), Float32(117.0), Float32(-63.0), Float32(-72.0)][4], [94.0, var_1679756875016_492, (-128.0), 31.0, (-86.0), (-49.0), var_1679756875016_492, var_1679756875016_492, 117.0, var_1679756875016_492][1])
}

public func func_1679756875016_272(param_1679756875016_273 : String, param_1679756875016_274 : Range<Int8>, param_1679756875016_275 : Int16, param_1679756875016_276 : Bool) : Option<String> { // block id: 277
    Class_1679756875016_281<Rune, UInt8>.func_1679756875016_288(Class_1679756875016_281<Rune, UInt8>(), (), namedParam_1679756875016_291 : Int16(-91))[2]
}

func func_1679756875016_221<T0>(param_1679756875016_222 : String, namedParam_1679756875016_223 ! : UInt32, optionalParam_1679756875016_224 ! : String = "X^a{\\ZLA50~", namedParam_1679756875016_226 ! : Float32) : Option<String> { // block id: 227
    try { // block id: 229
        var_1679756875016_233[0];
        var_1679756875016_247.getOrThrow();
        if (var_1679756875016_60) { var_1679756875016_252 } else { Option<String>.Some("""
i EU8
XQNOX
""") } 
    } finally { // block id: 256
        [UInt64(148), UInt64(79), var_1679756875016_261, var_1679756875016_261, var_1679756875016_261, var_1679756875016_261, var_1679756875016_261, var_1679756875016_261, UInt64(182), UInt64(222)];
        func_1679756875016_272(###"T\">](N*RE,"###, var_1679756875016_512, var_1679756875016_12, false)
    }
}

func func_1679756875016_53(namedParam_1679756875016_119 ! : Rune) : String { // block id: 120
    let var_1679756875016_179 : UInt8 = UInt8(Int8(-54));
    func_1679756875016_133(namedParam_1679756875016_134 : match (((UInt32(24)&127)..(UInt32(51)&127):((var_1679756875016_155|1)))) {
        case caseVar_1679756875016_159 => 
            Float32(-13.0) - var_1679756875016_77;
            var var_1679756875016_165 : Range<Int64> = (((-3)&127)..((-30)&127):((-5)|1));
            var_1679756875016_165
        
        case _ => 
            var_1679756875016_18;
            ((123&127)..((-125)&127):((-68)|1))
        
    }, namedParam_1679756875016_135 : try { // block id: 172
        let var_1679756875016_175 : Int16 = Int16(120);
        var_1679756875016_175 & var_1679756875016_12;
        var_1679756875016_179
    } finally { // block id: 182
        if (false) { ((UInt8(72)&127)..(UInt8(166)&127):((-87)|1)) } else { ((UInt8(150)&127)..=(UInt8(38)&127):(62|1)) } ;
        UInt8(202)
    }, namedParam_1679756875016_136 : ((UInt8(67)&127)..=(UInt8(66)&127):(84|1)))[4];
    if (var_1679756875016_60) { // block id: 192
        let var_1679756875016_201 : (Range<Int16>) -> Unit = { lambdaParameter_1679756875016_204 : Range<Int16> =>  };
        ((Int16(2)&127)..(var_1679756875016_12&127):((var_1679756875016_155|1)))|>var_1679756875016_201;
        (Option<String>.Some("G:SsO9+Y;`") ?? ###"7(nKgvc^}z"###);
        ()
    };
    (func_1679756875016_221<Range<Int64>>(var_1679756875016_525.var_1679756875016_528, namedParam_1679756875016_223 : var_1679756875016_535, optionalParam_1679756875016_224 : if (true) { ###"c,DWFBM S|"### } else { var_1679756875016_541 } , namedParam_1679756875016_226 : Float32(-60.0)) ?? match (var_1679756875016_473) {
        case caseVar_1679756875016_550 : Array<UInt64> => 
            Int8(-36);
            ((UInt64(89)&127)..(UInt64(53)&127):(44|1));
            if (false) { ([var_1679756875016_369, UInt16(143), var_1679756875016_369, UInt16(53), UInt16(145), var_1679756875016_369, UInt16(114), UInt16(77), UInt16(67), var_1679756875016_369], ###"S4E:~Ne[5X"###, UInt8(78)) } else { ([UInt16(228), UInt16(3), UInt16(235), var_1679756875016_369, UInt16(110), UInt16(237), UInt16(131), UInt16(147), UInt16(61), UInt16(26)], "uYNR2}=U_M", UInt8(111)) } 
        
        case caseVar_1679756875016_586 => 
            var_1679756875016_198;
            ();
            var_1679756875016_591
        
        case _ => 
            if (true) { (var_1679756875016_602, "/;F=)*@(Qg", var_1679756875016_361) } else { ([UInt16(172), UInt16(16), UInt16(206), UInt16(118), UInt16(36), UInt16(91), UInt16(189), UInt16(137), UInt16(229), UInt16(159)], "o@\\%v)[meG", var_1679756875016_179) } 
        
    }[1])
}



public func func_1679756875016_94(param_1679756875016_95 : Enum_1679756875016_25) : Int32 { // block id: 96
    var_1679756875016_37;
    var loopTimeVar_1679756875016_612 : Range<UInt64> = ((UInt64(185)&127)..(UInt64(Int8(55))&127):((65|1)));
    for (i in loopTimeVar_1679756875016_612 where try { // block id: 100
        var_1679756875016_77 / Float32((Int32(var_1679756875016_77)) | 1);
        var_1679756875016_60;
        Int32(67) <= var_1679756875016_108
    } catch (_) { // block id: 110
        var_1679756875016_60
    } finally { // block id: 112
        -var_1679756875016_108;
        true
    }) {
        func_1679756875016_53(namedParam_1679756875016_119 : r'O')
    };
    var var_1679756875016_855 : Int32 = Int32(Int16(105));
    if (if (var_1679756875016_60) { // block id: 622
        Int16(67) >> ((Int16(13)) & 7)
    } else if (true) { // block id: 627
        var_1679756875016_252;
        var_1679756875016_373 |= var_1679756875016_261;
        Int16(-115)
    } else { // block id: 633
        var_1679756875016_18;
        Int16(30) - Int16(65)
    } >= (var_1679756875016_447.var_1679756875016_641)) { // block id: 643
        var_1679756875016_37;
        Struct_1679756875016_443<Range<Int8>, Bool>.var_1679756875016_648;
        let var_1679756875016_665 : ?Int32 = Option<Int32>.Some(Int32(25));
        (var_1679756875016_665 ?? var_1679756875016_108)
    } else { // block id: 669
        match (Class_1679756875016_281<Rune, UInt8>(func_1679756875016_194, optionalParam_1679756875016_676 : var_1679756875016_77)) {
            case _ => 
                UInt32(35) & UInt32(85);
                ((UInt16(13)&127)..=(UInt16(63)&127):((-14)|1))
            
            case _ => 
                ();
                ((UInt16(155)&127)..=(UInt16(107)&127):(111|1))
            
        };
        var_1679756875016_820[7];
        match (((UInt16(150)&127)..(UInt16(85)&127):(((-111)|1)))) {
            case _ : Range<UInt8> => 
                var_1679756875016_842;
                Int32(77)
            
            case caseVar_1679756875016_849 => 
                ();
                var_1679756875016_725 += var_1679756875016_855;
                var_1679756875016_855 - Int32(103)
            
            case _ : UInt8 => 
                ();
                var_1679756875016_725
            
            case _ => 
                Int8(39) + Int8(-86);
                if (false) { var_1679756875016_874 } else { ((Int32(29)&127)..=(Int32(117)&127):(36|1)) } ;
                var_1679756875016_855
            
        }
    }
}


func func_1679756875016_53<T0>() : Int64 { // block id: 54
    try (resource = Class_1679756875016_281<Rune, UInt8>()) { // block id: 56
        var_1679756875016_18;
        var loopTimeVar_1679756875016_65 : Int64 = 0;
        while ((var_1679756875016_60) && loopTimeVar_1679756875016_65 < 100 ) {
            loopTimeVar_1679756875016_65++;

        }
    } catch (_) { // block id: 66
        (Option<UInt16>.Some(UInt16(177)) ?? UInt16(33));
        match (var_1679756875016_77) {
            case 108.0 => 
                Float32(41.0) + var_1679756875016_85
            
            case _ => 
                var_1679756875016_77 / Float32((Int32(var_1679756875016_85)) | 1)
            
        };
        var_1679756875016_18
    };
    var var_1679756875016_892 : Enum_1679756875016_25 = Enum_1679756875016_25.defaultValue;
    if (false) { (if (var_1679756875016_60) { var_1679756875016_28 } else { var_1679756875016_28 } ) } else { (Option<Enum_1679756875016_25>.Some(var_1679756875016_892) ?? Enum_1679756875016_25.defaultValue) } |>func_1679756875016_94;
    if ((var_1679756875016_369 < UInt16(75))) { ([UInt16(230), var_1679756875016_907, UInt16(8), UInt16(182), UInt16(146), UInt16(75), UInt16(244), var_1679756875016_369, UInt16(218), UInt16(233)], var_1679756875016_918, var_1679756875016_60, var_1679756875016_925, Float32(-13.0), ((Int16(44)&127)..(Int16(101)&127):(29|1)))[3] } else { [50, (-83), var_1679756875016_155, (-115), 121, 90, 8, var_1679756875016_690, 33, var_1679756875016_155] } [3]
}

main(): Int64 {
    try {
        try (resource = Class_1679756875016_281<Rune, UInt8>()) { // block id: 8
            "+W,:9P@YM+";
            var_1679756875016_12 <<= ((Int16(124)) & 7)
        } catch (_) { // block id: 16
            var_1679756875016_18;
            ();
            ()
        } finally { // block id: 22
            ()
        };
        match (var_1679756875016_28) {
            case defaultValue => 
                var_1679756875016_34;
                var_1679756875016_37
            
            case _ : String => 
                let var_1679756875016_45 : Int8 = Int8(-54);
                var_1679756875016_45;
                ();
                var_1679756875016_37
            
            case _ => 
                64.0
            
        };
        func_1679756875016_53<Option<String>>()
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1679756875016_155*var_1679756875016_155), 64)
        crccheck.updateBuffer(UInt64(var_1679756875016_535*var_1679756875016_535), 64)
        crccheck.updateBuffer(UInt64(var_1679756875016_907*var_1679756875016_907), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0, T1> Struct_1679756875016_443<T0, T1> {

}

extend<T0, T1> Class_1679756875016_281<T0, T1> {
    public static func func_1679756875016_288(param_1679756875016_289 : Interface_1679756875016_285, param_1679756875016_290 : Unit, namedParam_1679756875016_291 ! : Int16) : (Array<UInt64>, UInt16, Option<String>, String, Float32, Float64) { // block id: 292
        var_1679756875016_198;
        var_1679756875016_492|>func_1679756875016_295
    }

}

extend Enum_1679756875016_25 {

}

