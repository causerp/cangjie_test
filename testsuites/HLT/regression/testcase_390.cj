/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

public var var_1689972733995_13 : Option<Float64> = (Int8(UInt8(131)) as Float64)
public let var_1689972733995_19 : Float64 = Float64(Float64(Float32(Float32(-17.0))))
public let var_1689972733995_73 : Unit = ()
public var var_1689972733995_80 : Int32 = Int32(Int8(107))
public var var_1689972733995_126 : ?UInt64 = (Option<UInt64>.None as UInt64)
public let var_1689972733995_177 : (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>) = (UInt32(161), VArray<Bool, $1>(repeat: (Option<Unit>.None is Class_1689972733995_48)), Option<UInt64>.None, ((UInt32(247) is Range<UInt64>) is Rune), Int32(Int16(56)), true, ((Int8(Int8(Int8(Int8(83))))&127)..=(Int8(Int8(UInt8(46)))&127):((-72)|1)))
public let var_1689972733995_231 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()]
public let var_1689972733995_268 : Int64 = (-44)
var var_1689972733995_378 : UInt64 = UInt64(Int64(Int8(4)))
public var var_1689972733995_398 : UInt32 = UInt32(176)
public let var_1689972733995_432 : ?Option<Float64> = (((UInt16(UInt16(29))&127)..(UInt16(UInt16(46))&127):((-89)|1)) as Option<Float64>)
var var_1689972733995_444 : VArray<Bool, $1> = [true]
var var_1689972733995_474 : Unit = ()
public var var_1689972733995_478 : Float32 = Float32(6.0)
var var_1689972733995_487 : Class_1689972733995_483 = Class_1689972733995_483()
let var_1689972733995_542 : VArray<Unit, $3> = [(), (), ()]
var var_1689972733995_625 : Array<UInt64> = [UInt64(Int32(-20)), UInt64(Int64(Int32(UInt16(123)))), UInt64(UInt16(UInt16(48))), UInt64(Int8(96)), UInt64(UInt32(71)), UInt64(180), UInt64(180), UInt64(67), UInt64(Int8(-100)), UInt64(Int32(28))]
var var_1689972733995_696 : UInt64 = UInt64(UInt16(57))
public let var_1689972733995_783 : Option<Option<Class_1689972733995_483>> = (UInt64(119) as Option<Class_1689972733995_483>)
var var_1689972733995_891 : (Array<UInt64>, Bool, Range<Int64>, Int64, Rune) = ([UInt64(179), UInt64(12), UInt64(168), UInt64(20), UInt64(93), UInt64(87), UInt64(25), UInt64(69), UInt64(242), UInt64(105)], (Option<Unit>.None is Int16), ((Int64((-22))&127)..(Int64(2)&127):((-34)|1)), 33, r'M')
var var_1689972733995_987 : Unit = ()
public let var_1689972733995_1052 : Class_1689972733995_1048 = Class_1689972733995_1048()
public var var_1689972733995_1086 : (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>) = (UInt32(Int32(UInt32(244))), VArray<Bool, $1>(repeat: (Struct_1689972733995_745() is UInt32)), Option<UInt64>.None, true, Int32(-60), true, ((Int8(Int8(74))&127)..=(Int8(Int8(-70))&127):((-90)|1)))
var var_1689972733995_1423 : Option<Range<UInt16>> = (((Int8(Int8(-67))&127)..(Int8(Int8(51))&127):((-107)|1)) as Range<UInt16>)
public let var_1689972733995_1573 : Range<UInt16> = ((UInt16(UInt16(113))&127)..=(UInt16(UInt16(141))&127):(23|1))
public var var_1689972733995_1577 : Int8 = Int8(52)

public open class Class_1689972733995_29 {
    init() { // block id: 31

    }
;
    private mut prop var_1689972733995_1496 : UInt64 { // block id: 1497
        get() { // block id: 1499
            [UInt64(UInt32(UInt16(35))), UInt64(237), UInt64(187), UInt64(135), UInt64(244), UInt64(97), UInt64(Int8(-37)), UInt64(UInt32(130)), UInt64(213), UInt64(UInt64(Int16(30)))];
            Class_1689972733995_1048();
            UInt64(UInt32(Int8(UInt8(5))))
        }

        set(Value) { // block id: 1524

        }

    };
    public static func func_1689972733995_34(param_1689972733995_35 : UInt32, param_1689972733995_36 : UInt64, optionalParam_1689972733995_37 ! : Option<Float64> = (Int8(Int8(2)) as Float64), optionalParam_1689972733995_41 ! : UInt8 = UInt8(UInt8(50))) : Bool { // block id: 44
        var_1689972733995_19;
        ((func_1689972733995_52(optionalParam_1689972733995_53 : var_1689972733995_80).var_1689972733995_1496) is (Array<UInt64>, Bool, Range<Int64>, Int64, Rune))
    }

    static init() {
    }
}

public open class Class_1689972733995_48 <: Class_1689972733995_29 {
    public init() { // block id: 50

    }

    static init() {
    }
}




public func func_1689972733995_112(namedParam_1689972733995_113 ! : Option<UInt64>) : Unit { // block id: 114
    var var_1689972733995_123 : Bool = false;
    var var_1689972733995_137 : Option<Unit> = (Float32(Float32(Float32(95.0))) as Unit);
    var var_1689972733995_145 : Unit = ();
    let var_1689972733995_168 : UInt16 = UInt16(56);
    (match (if (var_1689972733995_123) { var_1689972733995_126 } else { var_1689972733995_126 } ) {
        case caseVar_1689972733995_132 : String => 
            var_1689972733995_19;
            Option<Unit>.None;
            var_1689972733995_137
        
        case _ => 
            var_1689972733995_145;
            ();
            var_1689972733995_137
        
    } ?? if (VArray<Bool, $1>(repeat: var_1689972733995_123)[0]) { // block id: 164
        UInt16(52) == var_1689972733995_168;
        var_1689972733995_145;
        var_1689972733995_145
    })
}


public open class Class_1689972733995_483 {
    init() { // block id: 485

    }
;
    prop var_1689972733995_490 : Bool { // block id: 491
        get() { // block id: 493
            (VArray<Unit, $8>(repeat: ()) is Int32)
        }

    };
    public mut prop var_1689972733995_705 : UInt16 { // block id: 706
        get() { // block id: 708
            ();
            ((UInt64(UInt64(84))&127)..(UInt64(UInt64(0))&127):(54|1));
            UInt16(76)
        }

        set(Value) { // block id: 714
            ()
        }

    };
    init(param_1689972733995_1040 : UInt16, param_1689972733995_1041 : Range<UInt16>, param_1689972733995_1042 : Int8, param_1689972733995_1043 : Unit) { // block id: 1044
        var_1689972733995_1052.var_1689972733995_1055[0];
        var var_1689972733995_1082 : Bool = false;
        var loopTimeVar_1689972733995_1113 : Int64 = 0;
        while ((var_1689972733995_1082) && loopTimeVar_1689972733995_1113 < 100 ) {
            loopTimeVar_1689972733995_1113++;
            var_1689972733995_1086;
            VArray<Unit, $9>(repeat: var_1689972733995_987)[4]
        };
        try { // block id: 1115
            var_1689972733995_1052.var_1689972733995_1119
        } finally { // block id: 1137
            var_1689972733995_474;
            try { // block id: 1140
                (var_1689972733995_1086, ((UInt16(UInt16(8))&127)..=(UInt16(UInt16(62))&127):(76|1)));
                VArray<Unit, $8>(repeat: ())
            } catch (_) { // block id: 1153
                ();
                UInt64(239);
                VArray<Unit, $8>(repeat: var_1689972733995_474)
            }
        }
    }
;
    prop var_1689972733995_1209 : Unit { // block id: 1210
        get() { // block id: 1212
            ()
        }

    };
    let var_1689972733995_1297 : Range<Int8> = ((Int8(Int8(118))&127)..(Int8(Int8(77))&127):(31|1));
    static var var_1689972733995_1346 : UInt8 = UInt8(135)
}


public struct Struct_1689972733995_745 {
    init() { // block id: 747

    }
;
    static mut prop var_1689972733995_764 : ?Int32 { // block id: 765
        get() { // block id: 767
            ((Int32(Int32(-108))&127)..(Int32(Int32(116))&127):((-25)|1));
            Int32(4);
            Option<Int32>.None
        }

        set(Value) { // block id: 773
            ();
            ()
        }

    };
    static var var_1689972733995_787 : ?Class_1689972733995_483 = Option<Class_1689972733995_483>.None;
    static var var_1689972733995_910 : Rune = r'J';
    private static mut prop var_1689972733995_917 : Range<Int64> { // block id: 918
        get() { // block id: 920
            ((Int64((-6))&127)..(Int64((-65))&127):((-25)|1));
            var_1689972733995_1649
        }

        set(Value) { // block id: 924
            ();
            ();
            ();
            var_1689972733995_1649 = Value
        }

    };
    static func func_1689972733995_750(param_1689972733995_751 : Bool) : Option<Class_1689972733995_483> { // block id: 752
        var var_1689972733995_755 : Bool = false;
        let var_1689972733995_883 : Option<Unit> = Option<Unit>.Some(());
        let var_1689972733995_970 : Unit = ();
        var var_1689972733995_1011 : Int16 = Int16(100);
        if (var_1689972733995_755) { // block id: 757
            (var_1689972733995_764 ?? var_1689972733995_80);
            (var_1689972733995_783 ?? var_1689972733995_787);
            let var_1689972733995_805 : Float32 = Float32(-75.0);
            var var_1689972733995_816 : Unit = ();
            var var_1689972733995_838 : (Bool, (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), UInt16, Range<UInt16>, UInt32) = (true, (UInt32(233), VArray<Bool, $1>(repeat: (Option<Option<Float64>>.None is Range<Int64>)), ("8QGVtpt9j[" as UInt64), (Option<Int32>.Some(Int32(-110)) is Range<Int32>), Int32(Int16(Int16(-91))), (UInt16(Int8(65)) is Range<Int8>), ((Int8(Int8(UInt8(96)))&127)..(Int8(Int8(Int8(114)))&127):(Int64(UInt64(79))|1))), UInt16(UInt16(182)), ((UInt16(UInt16(Int16(42)))&127)..(UInt16(UInt16(UInt16(Int8(62))))&127):(61|1)), UInt32(Int32(36)));
            if (var_1689972733995_755) { // block id: 791
                var var_1689972733995_793 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
                var_1689972733995_793;
                var_1689972733995_805 + Float32(-49.0);
                if (false) { var_1689972733995_231 } else { VArray<Unit, $8>({ i => ()}) } 
            } else if (var_1689972733995_755) { // block id: 823
                if (var_1689972733995_755) { var_1689972733995_231 } else { VArray<Unit, $8>(repeat: var_1689972733995_474) } 
            } else { // block id: 836
                var_1689972733995_838;
                var_1689972733995_231
            }
        } else if (try { // block id: 879
            if (var_1689972733995_755) { var_1689972733995_883 } else { Option<Unit>.None } ;
            var_1689972733995_755 ||= var_1689972733995_755;
            var_1689972733995_891
        } catch (e: Exception) { // block id: 899
            var_1689972733995_474;
            (var_1689972733995_625, var_1689972733995_755, ((Int64((-94))&127)..(Int64(var_1689972733995_268)&127):((-12)|1)), 99, var_1689972733995_910)
        } finally { // block id: 912
            ([UInt64(157), UInt64(85), UInt64(131), UInt64(106), UInt64(153), UInt64(213), UInt64(44), UInt64(227), UInt64(212), UInt64(96)], var_1689972733995_755, var_1689972733995_917, 42, r'f')
        }[1]) { // block id: 931
            if (var_1689972733995_755) { // block id: 934
                var_1689972733995_19 + var_1689972733995_19;
                ();
                if (var_1689972733995_755) { VArray<Unit, $8>(repeat: var_1689972733995_474) } else { VArray<Unit, $8>(repeat: var_1689972733995_474) } 
            } else { // block id: 959
                if (var_1689972733995_755) { VArray<Unit, $8>(repeat: var_1689972733995_474) } else { VArray<Unit, $8>(repeat: var_1689972733995_474) } 
            }
        } else { // block id: 982
            if (false) { // block id: 985
                var_1689972733995_987
            };
            var var_1689972733995_1002 : Unit = ();
            if (false) { // block id: 991
                var_1689972733995_970;
                if (var_1689972733995_755) { VArray<Unit, $8>(repeat: var_1689972733995_970) } else { var_1689972733995_231 } 
            } else { // block id: 1007
                var_1689972733995_987;
                var_1689972733995_1011 += var_1689972733995_1011;
                if (false) { VArray<Unit, $8>(repeat: ()) } else { VArray<Unit, $8>(repeat: var_1689972733995_987) } 
            }
        };
        ();
        Option<Class_1689972733995_483>.Some(var_1689972733995_487)
    }
;
    public let var_1689972733995_1170 : UInt16 = UInt16(42);
    static var var_1689972733995_1649 : Range<Int64> = ((Int64(110)&127)..=(Int64(41)&127):(31|1))
}



public open class Class_1689972733995_1048 <: Class_1689972733995_483 {
    public init() { // block id: 1050

    }
;
    public prop var_1689972733995_1055 : ((UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), Range<UInt16>) { // block id: 1056
        get() { // block id: 1058
            ();
            ();
            ((UInt32(168), VArray<Bool, $1>({ i => true}), Option<UInt64>.None, (Int32(-105) is (Bool) -> Option<Class_1689972733995_483>), Int32(Int32(-103)), true, ((Int8(Int8(-115))&127)..(Int8(Int8(-110))&127):((-57)|1))), ((UInt16(UInt16(Int8(-1)))&127)..=(UInt16(UInt16(105))&127):(Int64(UInt32(243))|1)))
        }

    };
    public mut prop var_1689972733995_1119 : VArray<Unit, $8> { // block id: 1120
        get() { // block id: 1122
            VArray<Unit, $8>({ i => ()})
        }

        set(Value) { // block id: 1134
            ();
            ()
        }

    };
    static let var_1689972733995_1306 : Range<UInt64> = ((UInt64(UInt64(93))&127)..=(UInt64(UInt64(5))&127):(92|1));
    mut prop var_1689972733995_1333 : Int64 { // block id: 1334
        get() { // block id: 1336
            ();
            (-74)
        }

        set(Value) { // block id: 1341
            ()
        }

    };
    public var var_1689972733995_1372 : Int8 = Int8(-20)
}





public func func_1689972733995_421(param_1689972733995_422 : Range<Int32>) : Array<UInt64> { // block id: 423
    let var_1689972733995_454 : Bool = true;
    match (match ((var_1689972733995_432 ?? Option<Float64>.Some(125.0))) {
        case _ => 
            var var_1689972733995_441 : Unit = ();
            var_1689972733995_441;
            var_1689972733995_444
        
        case _ => 
            if (false) { var_1689972733995_444 } else { VArray<Bool, $1>(repeat: var_1689972733995_454) } 
        
        case _ => 
            var_1689972733995_432;
            ();
            VArray<Bool, $1>({ i => false})
        
    }) {
        case caseVar_1689972733995_464 => 
            ();
            var var_1689972733995_468 : Unit = ();
            var_1689972733995_468;
            Float32(-99.0)
        
        case _ => 
            var_1689972733995_474;
            var_1689972733995_478 - Float32(50.0)
        
    };
    var loopTimeVar_1689972733995_510 : Int64 = 0;
    while ((var_1689972733995_487.var_1689972733995_490) && loopTimeVar_1689972733995_510 < 100 ) {
        loopTimeVar_1689972733995_510++;
        (Option<Unit>.Some(()) ?? var_1689972733995_474)
    };
    func func_1689972733995_531(namedParam_1689972733995_532 ! : (Array<UInt64>, Range<UInt8>, UInt8, (Bool, (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), UInt16, Range<UInt16>, UInt32), Array<UInt64>, Bool), namedParam_1689972733995_533 ! : (Array<UInt64>, Range<UInt8>, UInt8, (Bool, (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), UInt16, Range<UInt16>, UInt32), Array<UInt64>, Bool)) : Class_1689972733995_483 { // block id: 534
        try { // block id: 536
            Option<Unit>.None.getOrThrow();
            var_1689972733995_542[0];
            (((Int32(Int32(51))&127)..=(Int32(Int32(-45))&127):((-5)|1)) as UInt64)
        } catch (_) { // block id: 550
            if (var_1689972733995_454) { Option<UInt64>.Some(UInt64(191)) } else { Option<UInt64>.Some(UInt64(230)) } 
        };
        var loopTimeVar_1689972733995_568 : Range<UInt64> = ((UInt64(UInt64(Int32(95)))&127)..=(UInt64(UInt64(146))&127):(Int64(UInt32(UInt8(Int8(-25))))|1));
        for (i in loopTimeVar_1689972733995_568 where ((Int32(-98) & Int32(-45)) is VArray<Unit, $8>)) {
            Int32(-26);
            (Option<Unit>.Some(var_1689972733995_474) ?? var_1689972733995_474)
        };
        var_1689972733995_487
    }
;
    let var_1689972733995_591 : Range<UInt8> = ((UInt8(UInt8(Int8(Int8(-81))))&127)..(UInt8(UInt8(UInt8(Int8(29))))&127):(Int64(UInt32(Int16(-67)))|1));
    try { // block id: 512
        func_1689972733995_112(namedParam_1689972733995_113 : var_1689972733995_126);
        let var_1689972733995_702 : Bool = false;
        let var_1689972733995_725 : Int16 = Int16(Int8(UInt8(Int8(46))));
        let var_1689972733995_1185 : Range<UInt16> = ((UInt16(UInt16(84))&127)..=(UInt16(UInt16(Int16(UInt8(Int8(120)))))&127):((-74)|1));
        func func_1689972733995_516(namedParam_1689972733995_517 ! : Int32) : Array<UInt64> { // block id: 518
            let var_1689972733995_615 : Int8 = Int8(Int8(87));
            let var_1689972733995_652 : UInt8 = UInt8(Int8(Int8(24)));
            let var_1689972733995_662 : (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>) = (UInt32(7), VArray<Bool, $1>(repeat: (UInt8(Int8(-76)) is (UInt8, Range<Int8>, Range<Int8>, (Array<UInt64>, Range<UInt8>, UInt8, (Bool, (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), UInt16, Range<UInt16>, UInt32), Array<UInt64>, Bool), Float32, Range<UInt32>))), (UInt16(152) as UInt64), true, Int32(-54), false, ((Int8(Int8(-83))&127)..=(Int8(Int8(Int8(6)))&127):((-58)|1)));
            let var_1689972733995_680 : UInt16 = UInt16(236);
            let var_1689972733995_1167 : Struct_1689972733995_745 = Struct_1689972733995_745();
            func func_1689972733995_521(optionalParam_1689972733995_522 ! : UInt16 = UInt16(21), optionalParam_1689972733995_524 ! : Int16 = Int16(UInt16(172))) : Class_1689972733995_483 { // block id: 527
                var var_1689972733995_621 : Range<UInt16> = ((UInt16(UInt16(38))&127)..=(UInt16(UInt16(104))&127):(106|1));
                func_1689972733995_531(namedParam_1689972733995_532 : ([UInt64(166), var_1689972733995_378, UInt64(159), UInt64(225), var_1689972733995_378, UInt64(236), var_1689972733995_378, var_1689972733995_378, var_1689972733995_378, var_1689972733995_378], var_1689972733995_591, UInt8(162), (true, (UInt32(237), var_1689972733995_444, Option<UInt64>.None, var_1689972733995_454, Int32(11), var_1689972733995_454, ((Int8(Int8(-66))&127)..(Int8(var_1689972733995_615)&127):(var_1689972733995_268|1))), UInt16(86), var_1689972733995_621, var_1689972733995_398), var_1689972733995_625, false), namedParam_1689972733995_533 : (var_1689972733995_625, ((UInt8(var_1689972733995_652)&127)..=(UInt8(var_1689972733995_652)&127):(var_1689972733995_268|1)), var_1689972733995_652, (false, var_1689972733995_662, var_1689972733995_680, ((UInt16(UInt16(1))&127)..(UInt16(UInt16(202))&127):(var_1689972733995_268|1)), UInt32(148)), [var_1689972733995_378, var_1689972733995_378, var_1689972733995_378, UInt64(42), UInt64(234), UInt64(163), UInt64(41), var_1689972733995_696, UInt64(194), UInt64(146)], var_1689972733995_702)).var_1689972733995_705 %= ((try { // block id: 717
                    var var_1689972733995_720 : Int16 = Int16(Int8(UInt8(251)));
                    var_1689972733995_720 &= var_1689972733995_725;
                    -UInt16(186)
                } finally { // block id: 732
                    if (true) { Class_1689972733995_483() } else { Class_1689972733995_483() } ;
                    var_1689972733995_126;
                    var_1689972733995_680
                }) | 1);
                var loopTimeVar_1689972733995_1206 : Int64 = 0;
                (Struct_1689972733995_745.func_1689972733995_750(true) ?? Class_1689972733995_483(var_1689972733995_1167.var_1689972733995_1170, if (true) { // block id: 1174
                    if (var_1689972733995_454) { var_1689972733995_444 } else { var_1689972733995_444 } ;
                    var_1689972733995_987;
                    var_1689972733995_621
                } else if (var_1689972733995_454) { // block id: 1182
                    Option<Option<Float64>>.None;
                    var_1689972733995_1185
                } else { // block id: 1193
                    ((UInt16(UInt16(254))&127)..=(UInt16(UInt16(115))&127):((-96)|1))
                }, Option<Int8>.None.getOrThrow(), do {
                    loopTimeVar_1689972733995_1206++;
                    var_1689972733995_474
                } while ((var_1689972733995_454) && loopTimeVar_1689972733995_1206 < 100 ) ))
            }
;
            func_1689972733995_521(optionalParam_1689972733995_524 : Int16(39)).var_1689972733995_1209;
            var var_1689972733995_1226 : (Range<Int8>, Float64, Rune, Array<UInt64>) = (((Int8(Int8(80))&127)..(Int8(Int8(60))&127):((-65)|1)), Float64(Float32(-65.0)), r'g', [UInt64(165), UInt64(Int8(Int8(18))), UInt64(Int16(39)), UInt64(UInt8(Int8(12))), UInt64(UInt32(2)), UInt64(UInt8(73)), UInt64(161), UInt64(110), UInt64(Int32(80)), UInt64(53)]);
            try { // block id: 1217
                ((UInt8(UInt8(130))&127)..(UInt8(UInt8(142))&127):(119|1));
                (((Int8(Int8(86))&127)..=(Int8(Int8(24))&127):((-60)|1)), 37.0, r'4', var_1689972733995_625)
            } finally { // block id: 1224
                var_1689972733995_1226
            }[2];
            var_1689972733995_1052.func_1689972733995_1260(Option<Float64>.Some(var_1689972733995_19), Int16(-38), VArray<Unit, $9>(repeat: ())).getOrThrow()
        }
;
        func_1689972733995_516(namedParam_1689972733995_517 : Int32(-23))
    } finally { // block id: 1416
        (var_1689972733995_1423 ?? ((UInt16(UInt16(116))&127)..(UInt16(UInt16(0))&127):(var_1689972733995_268|1)));
        try { // block id: 1431
            var_1689972733995_625
        } catch (_) { // block id: 1433
            var_1689972733995_625
        } finally { // block id: 1435
            Option<Unit>.Some(());
            var_1689972733995_987;
            [var_1689972733995_378, UInt64(210), UInt64(169), UInt64(163), var_1689972733995_378, UInt64(144), UInt64(97), UInt64(78), UInt64(61), var_1689972733995_696]
        }
    }
}

public func func_1689972733995_200(param_1689972733995_201 : Int16) : Unit { // block id: 202
    let var_1689972733995_257 : UInt8 = UInt8(84);
    let var_1689972733995_261 : Int8 = Int8(Int8(Int8(Int8(59))));
    let var_1689972733995_392 : Bool = false;
    func func_1689972733995_206(param_1689972733995_207 : Float32, namedParam_1689972733995_208 ! : Array<UInt64>, optionalParam_1689972733995_209 ! : Option<Unit> = (((Int8(Int8(Int8(18)))&127)..=(Int8(Int8(UInt8(Int8(-63))))&127):(Int64(Int8(Int8(-91)))|1)) as Unit), optionalParam_1689972733995_220 ! : UInt16 = UInt16(UInt8(142))) : (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>) { // block id: 223
        if (true) { // block id: 228
            ((Int32(Int32(84))&127)..(Int32(Int32(-67))&127):((-44)|1));
            var_1689972733995_231
        } else { // block id: 233
            let var_1689972733995_236 : Unit = ();
            Option<Unit>.Some(var_1689972733995_236);
            ();
            VArray<Unit, $8>(repeat: ())
        }[6];
        var var_1689972733995_273 : Int8 = Int8(UInt8(UInt8(40)));
        let var_1689972733995_281 : Range<UInt8> = ((UInt8(UInt8(87))&127)..(UInt8(UInt8(18))&127):((-38)|1));
        let var_1689972733995_288 : (Bool, (UInt32, VArray<Bool, $1>, Option<UInt64>, Bool, Int32, Bool, Range<Int8>), UInt16, Range<UInt16>, UInt32) = (((UInt8(UInt8(140)), ((Int8(Int8(27))&127)..(Int8(Int8(-58))&127):(125|1)), ((Int8(Int8(-17))&127)..=(Int8(Int8(8))&127):((-34)|1)), ([UInt64(179), UInt64(182), UInt64(174), UInt64(124), UInt64(252), UInt64(113), UInt64(44), UInt64(115), UInt64(238), UInt64(83)], ((UInt8(UInt8(121))&127)..=(UInt8(UInt8(168))&127):(117|1)), UInt8(79), (true, (UInt32(20), VArray<Bool, $1>(repeat: false), Option<UInt64>.Some(UInt64(31)), false, Int32(17), true, ((Int8(Int8(-126))&127)..(Int8(Int8(84))&127):(81|1))), UInt16(252), ((UInt16(UInt16(79))&127)..=(UInt16(UInt16(81))&127):(33|1)), UInt32(26)), [UInt64(123), UInt64(147), UInt64(132), UInt64(198), UInt64(232), UInt64(201), UInt64(76), UInt64(161), UInt64(62), UInt64(123)], true), Float32(-107.0), ((UInt32(UInt32(204))&127)..(UInt32(UInt32(210))&127):(89|1))) is Int16), (UInt32(Int8(82)), VArray<Bool, $1>(repeat: true), Option<UInt64>.None, true, Int32(UInt32(UInt8(29))), false, ((Int8(Int8(-46))&127)..=(Int8(Int8(UInt8(160)))&127):(Int64(Int8(-55))|1))), UInt16(Int8(UInt8(UInt8(98)))), ((UInt16(UInt16(31))&127)..=(UInt16(UInt16(196))&127):(Int64(Int8(Int8(125)))|1)), UInt32(240));
        (var_1689972733995_257, ((Int8(var_1689972733995_261)&127)..=(Int8(var_1689972733995_261)&127):(var_1689972733995_268|1)), ((Int8(Int8(-10))&127)..=(Int8(var_1689972733995_273)&127):(var_1689972733995_268|1)), ([UInt64(53), UInt64(25), UInt64(149), UInt64(222), UInt64(125), UInt64(189), UInt64(149), UInt64(197), UInt64(77), UInt64(98)], var_1689972733995_281, UInt8(30), var_1689972733995_288, [var_1689972733995_378, UInt64(60), var_1689972733995_378, var_1689972733995_378, UInt64(20), UInt64(227), UInt64(58), UInt64(208), UInt64(12), UInt64(158)], var_1689972733995_392), Float32(-28.0), ((UInt32(UInt32(95))&127)..=(UInt32(var_1689972733995_398)&127):(var_1689972733995_268|1)))[3][3][1]
    }
;
    if (func_1689972733995_206(Float32(-120.0), namedParam_1689972733995_208 : [UInt64(179), UInt64(193), UInt64(209), UInt64(237), UInt64(45), UInt64(56), UInt64(115), UInt64(168), UInt64(235), UInt64(154)])[3]) { // block id: 407
        var var_1689972733995_413 : UInt16 = UInt16(1);
        var loopTimeVar_1689972733995_417 : Int64 = 0;
        while ((false) && loopTimeVar_1689972733995_417 < 100 ) {
            loopTimeVar_1689972733995_417++;
            var_1689972733995_413 += UInt16(142)
        };
        [UInt64(77), UInt64(120), UInt64(163), UInt64(58), UInt64(111), UInt64(80), UInt64(113), UInt64(116), UInt64(149), UInt64(23)]
    } else { // block id: 419
        ((Int32(Int32(84))&127)..=(Int32(Int32(47))&127):(44|1))|>func_1689972733995_421
    };
    var_1689972733995_474
}

func func_1689972733995_102(param_1689972733995_103 : Int8) : Option<UInt64> { // block id: 104
    var_1689972733995_80 /= ((var_1689972733995_80) | 1);
    var_1689972733995_13;
    var var_1689972733995_1460 : Array<Option<UInt64>> = [Option<UInt64>.Some(UInt64(UInt8(Int8(57)))), (Int16(126) as UInt64), Option<UInt64>.None, (UInt16(0) as UInt64), Option<UInt64>.Some(UInt64(233)), Option<UInt64>.Some(UInt64(UInt64(173))), Option<UInt64>.Some(UInt64(40)), Option<UInt64>.None, Option<UInt64>.None, ((((UInt16(UInt16(250))&127)..=(UInt16(UInt16(145))&127):((-103)|1)) as Range<UInt16>) as UInt64)];
    try { // block id: 110
        func_1689972733995_112(namedParam_1689972733995_113 : Option<UInt64>.Some(UInt64(186)));
        var_1689972733995_177[2]
    } finally { // block id: 198
        var var_1689972733995_1454 : (Int16) -> Unit = func_1689972733995_200;
        Int16(-108)|>var_1689972733995_1454;
        var_1689972733995_1460[2]
    }
}

func func_1689972733995_52(optionalParam_1689972733995_53 ! : Int32 = Int32(UInt32(194)), optionalParam_1689972733995_56 ! : Int16 = Int16(Int16(54)), optionalParam_1689972733995_59 ! : Float64 = Float64(Float32(Float32(Float32(63.0)))), optionalParam_1689972733995_64 ! : Int16 = Int16(UInt8(Int8(-96)))) : Class_1689972733995_48 { // block id: 68
    var loopTimeVar_1689972733995_95 : Int64 = 0;
    while ((try { // block id: 71
        var_1689972733995_73;
        true
    } finally { // block id: 76
        var_1689972733995_73;
        var_1689972733995_80 |= var_1689972733995_80;
        true
    }) && loopTimeVar_1689972733995_95 < 100 ) {
        loopTimeVar_1689972733995_95++;
        (Option<Unit>.None ?? var_1689972733995_73);
        break
    };
    (([Int8(-28), Int8(-23), Int8(-49), Int8(-52), Int8(-17), Int8(-50), Int8(-38), Int8(-61), Int8(81), Int8(-41)][9]|>func_1689972733995_102) ?? UInt64(89));
    Class_1689972733995_48()
}



func func_1689972733995_25() : Int64 { // block id: 26
    var var_1689972733995_1542 : UInt8 = UInt8(Int8(Int8(63)));
    let var_1689972733995_1564 : (Unit, Unit) = ((), ());
    if (Class_1689972733995_29.func_1689972733995_34(UInt32(190), UInt64(33), optionalParam_1689972733995_37 : Option<Float64>.Some(24.0))) { // block id: 1529
        match (Option<Float64>.Some(63.0)) {
            case caseVar_1689972733995_1535 => 
                if (false) { ((UInt8(UInt8(174))&127)..(UInt8(UInt8(148))&127):(10|1)) } else { ((UInt8(var_1689972733995_1542)&127)..(UInt8(UInt8(106))&127):((-60)|1)) } 
            
            case caseVar_1689972733995_1550 => 
                ();
                Option<Array<UInt64>>.None;
                ((UInt8(var_1689972733995_1542)&127)..(UInt8(var_1689972733995_1542)&127):(43|1))
            
            case _ => 
                ((UInt8(UInt8(36))&127)..(UInt8(UInt8(25))&127):((-57)|1))
            
        };
        var_1689972733995_1564[0];
        var loopTimeVar_1689972733995_1579 : Array<Int8> = [Int8(-87), Int8(-15), Int8(-110), Int8(Int8(Int8(Int8(-111)))), Int8(58), Int8(Int8(Int8(-109))), Int8(UInt8(UInt8(Int8(74)))), Int8(64), Int8(UInt8(Int8(49))), Int8(-101)];
        for (i in loopTimeVar_1689972733995_1579 where true) {
            var_1689972733995_1573;
            Option<Int8>.Some(var_1689972733995_1577)
        }
    };
    match (((UInt8(var_1689972733995_1542)&127)..(UInt8(UInt8(1))&127):((-61)|1))) {
        case caseVar_1689972733995_1609 => 
            56
        
        case _ : Option<Int32> => 
            var_1689972733995_268 * var_1689972733995_268
        
        case _ => 
            var_1689972733995_398 %= ((UInt32(82)) | 1);
            var var_1689972733995_1625 : UInt16 = UInt16(UInt8(UInt8(158)));
            var_1689972733995_1625 += UInt16(77);
            38 - var_1689972733995_268
        
    } + ((Option<Option<Int64>>.None ?? Option<Int64>.None) ?? Int64(Int16(30)))
}

main(): Int64 {
    try {
        (var_1689972733995_13 ?? Float64(var_1689972733995_19));
        func_1689972733995_25()
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }
    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            res = res + hex_value.toString()
            i = i + 3
        }
        print("\n")
        if ( res == "00000000000" ){
            return 0
        }
        return 1
    }

}
extend Struct_1689972733995_745 {

}

extend Class_1689972733995_1048 {
    public func func_1689972733995_1260(param_1689972733995_1261 : Option<Float64>, param_1689972733995_1262 : Int16, param_1689972733995_1263 : VArray<Unit, $9>, optionalParam_1689972733995_1264 ! : Option<Float64> = (Class_1689972733995_1048() as Float64)) : Option<Array<UInt64>> { // block id: 1267
        let var_1689972733995_1278 : Option<(Range<UInt64>, Range<Int8>, Unit, Bool)> = (([UInt64(164), UInt64(88), UInt64(100), UInt64(125), UInt64(207), UInt64(102), UInt64(108), UInt64(8), UInt64(153), UInt64(115)], false, ((Int64((-40))&127)..(Int64((-8))&127):(120|1)), 80, r'v') as (Range<UInt64>, Range<Int8>, Unit, Bool));
        let var_1689972733995_1309 : VArray<Unit, $9> = VArray<Unit, $9>(repeat: ());
        (if (var_1689972733995_490) { var_1689972733995_1278 } else { var_1689972733995_1278 }  ?? (((UInt32(var_1689972733995_398)&127)..=(UInt32(UInt32(91))&127):((-46)|1)), (((UInt64(UInt64(26))&127)..=(UInt64(UInt64(66))&127):(64|1)), var_1689972733995_1297, var_1689972733995_987, var_1689972733995_490), UInt32(253), var_1689972733995_1306, var_1689972733995_1309)[1])[0];
        var loopTimeVar_1689972733995_1364 : Int64 = 0;
        (((UInt64(UInt64(77))&127)..(UInt64(UInt64(25))&127):((-42)|1)), if (false) { // block id: 1327
            ((Int8(Int8(-100))&127)..=(Int8(Int8(-83))&127):((-46)|1))
        } else if (var_1689972733995_490) { // block id: 1330
            var_1689972733995_1333 &= 77;
            var_1689972733995_1346 &= var_1689972733995_1346;
            var_1689972733995_1297
        } else { // block id: 1350
            ();
            ((Int8(Int8(-54))&127)..=(Int8(Int8(-63))&127):((-74)|1))
        }, do {
            loopTimeVar_1689972733995_1364++;
            var_1689972733995_705 | var_1689972733995_705;
            ()
        } while ((true) && loopTimeVar_1689972733995_1364 < 100 ) , var_1689972733995_891[1])[2];
        try { // block id: 1370
            var_1689972733995_1372;
            if (var_1689972733995_490) { // block id: 1376
                ((UInt64(UInt64(243))&127)..(UInt64(var_1689972733995_696)&127):((-104)|1))
            } else { // block id: 1381
                var_1689972733995_783;
                ((UInt64(UInt64(16))&127)..=(UInt64(UInt64(231))&127):((-101)|1))
            };
            try { // block id: 1385
                Option<Array<UInt64>>.None
            } finally { // block id: 1387
                ();
                var_1689972733995_80 |= var_1689972733995_80;
                Option<Array<UInt64>>.Some([UInt64(188), UInt64(216), UInt64(176), UInt64(33), UInt64(61), UInt64(34), UInt64(87), UInt64(179), UInt64(250), UInt64(33)])
            }
        } finally { // block id: 1394
            var loopTimeVar_1689972733995_1400 : Int64 = 0;
            do {
                loopTimeVar_1689972733995_1400++;
                ()
            } while ((var_1689972733995_490) && loopTimeVar_1689972733995_1400 < 100 ) ;
            Option<Array<UInt64>>.None
        }
    }

}
// ASSERT: scan-1 sema_varray_captured

