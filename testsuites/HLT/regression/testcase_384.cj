/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

public var var_1690056943101_27 : Float64 = 16.0
public var var_1690056943101_46 : UInt16 = UInt16(63)
public let var_1690056943101_50 : Bool = (((Int32(Int32(-125))&127)..(Int32(Int32(96))&127):((-118)|1)) is Range<Int64>)
public let var_1690056943101_58 : Array<UInt64> = [UInt64(197), UInt64(89), UInt64(197), UInt64(Int16(-27)), UInt64(194), UInt64(64), UInt64(224), UInt64(129), UInt64(Int32(UInt32(UInt16(120)))), UInt64(86)]
public var var_1690056943101_76 : Int16 = Int16(Int8(18))
public let var_1690056943101_94 : ?VArray<Unit, $4> = (true as VArray<Unit, $4>)
public var var_1690056943101_119 : Array<Int64> = [(-84), Int64(UInt32(Int32(-68))), (-10), (-57), 96, 56, (-66), 13, Int64(Int32(Int16(-86))), Int64(Int32(-123))]
public let var_1690056943101_148 : Int64 = Int64(Int16(1))
public var var_1690056943101_153 : Range<Int64> = ((Int64((-71))&127)..(Int64(2)&127):((-124)|1))
public let var_1690056943101_161 : Int64 = Int64(Int16(67))
public var var_1690056943101_209 : Int8 = Int8(UInt8(Int8(UInt8(Int8(54)))))
public let var_1690056943101_217 : Range<Int8> = ((Int8(Int8(87))&127)..(Int8(Int8(-23))&127):(35|1))
public let var_1690056943101_281 : Bool = (VArray<Unit, $4>({ i => ()}) is Bool)
public var var_1690056943101_296 : Bool = (34 is Int8)
public let var_1690056943101_305 : Float32 = Float32(Float32(Float32(Float32(Float32(-33.0)))))
public var var_1690056943101_316 : UInt8 = UInt8(74)
public var var_1690056943101_320 : Unit = ()
public let var_1690056943101_339 : ?Unit = Option<Unit>.None
public let var_1690056943101_345 : String = "]90G}OJ3.U"
public var var_1690056943101_384 : UInt16 = UInt16(30)
public let var_1690056943101_391 : Struct_1690056943101_184<UInt64, Array<UInt64>> = Struct_1690056943101_184<UInt64, Array<UInt64>>()
public let var_1690056943101_409 : Class_1690056943101_260 = Class_1690056943101_260()
public var var_1690056943101_447 : VArray<Bool, $5> = [(((Int32(Int32(15))&127)..=(Int32(Int32(-75))&127):(100|1)) is Range<UInt32>), (((UInt16(UInt16(Int8(-29)))&127)..=(UInt16(UInt16(180))&127):(Int64(UInt64(118))|1)) is Rune), false, false, (((UInt64(UInt64(37))&127)..(UInt64(UInt64(101))&127):(71|1)) is Range<Int64>)]
public var var_1690056943101_473 : VArray<Unit, $1> = [()]
public var var_1690056943101_545 : Float32 = Float32(50.0)
public var var_1690056943101_591 : UInt64 = UInt64(Int32(76))
public var var_1690056943101_606 : Range<Int32> = ((Int32(Int32(-3))&127)..=(Int32(Int32(18))&127):(102|1))
public let var_1690056943101_616 : (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64) = ([UInt64(UInt8(193)), UInt64(UInt16(133)), UInt64(91), UInt64(8), UInt64(196), UInt64(UInt32(UInt8(36))), UInt64(UInt16(168)), UInt64(UInt8(210)), UInt64(UInt64(Int32(-2))), UInt64(60)], UInt16(UInt8(UInt8(32))), [(-52), 13, (-56), (-95), (-109), 74, 67, 109, (-105), (-12)], ((Int32(Int32(UInt16(Int16(123))))&127)..=(Int32(Int32(Int16(UInt8(40))))&127):(126|1)), Float32(-4.0), (-20))
public var var_1690056943101_697 : UInt64 = UInt64(UInt16(Int8(-26)))
public var var_1690056943101_705 : UInt64 = UInt64(UInt32(199))
public var var_1690056943101_737 : Class_1690056943101_498 = Class_1690056943101_498()
public var var_1690056943101_762 : Int64 = 116
public var var_1690056943101_805 : Int64 = 63
public let var_1690056943101_829 : Int64 = (-70)
public var var_1690056943101_832 : Array<Array<Int64>> = [[89, 116, (-1), (-123), (-2), 113, 120, (-36), 38, (-54)], [(-16), 62, 0, 54, 70, 1, (-14), (-22), (-19), (-3)], [87, 113, 68, (-26), 118, 33, 45, 101, (-100), 93], [80, (-4), Int64(UInt64((-114))), (-50), Int64(Int32(68)), Int64(UInt8(UInt8(156))), Int64(UInt16(27)), (-95), Int64(UInt64(Int8(2))), 111], [77, Int64(Int8(0)), (-116), Int64(UInt64(180)), Int64(Int32(Int32(-79))), Int64((-98)), Int64(UInt8(Int8(20))), 72, Int64(Int8(-99)), Int64(Int32(26))], [Int64(Int16(-125)), Int64(UInt32(74)), (-2), Int64(UInt32(159)), (-117), Int64(UInt64(UInt32(245))), Int64(UInt64(192)), (-80), (-52), Int64(UInt64(161))], [61, 27, 110, 20, 29, 32, 43, (-82), (-12), 118], [Int64(Int16(UInt8(5))), Int64(Int64(UInt64(120))), Int64(Int16(-17)), 104, 122, (-58), Int64(UInt32(Int8(-20))), Int64(Int32(UInt8(151))), 72, 33], [Int64(Int64(UInt8(225))), 88, Int64(Int16(Int16(-48))), 123, 35, 32, Int64((-101)), 83, (-18), 11], [(-72), (-34), (-103), 63, (-11), 7, (-44), (-128), 67, (-63)]]
public let var_1690056943101_938 : Array<Option<UInt8>> = [(UInt8(Int8(111)) as UInt8), Option<UInt8>.None, (UInt32(Int32(Int8(81))) as UInt8), (Int32(23) as UInt8), Option<UInt8>.None, (Option<UInt8>.None as UInt8), Option<UInt8>.None, Option<UInt8>.None, Option<UInt8>.None, (((Int16(Int16(46))&127)..=(Int16(Int16(-117))&127):(2|1)) as UInt8)]
public var var_1690056943101_984 : Range<UInt32> = ((UInt32(UInt32(144))&127)..=(UInt32(UInt32(163))&127):(Int64(Int32(UInt32(182)))|1))
public let var_1690056943101_1015 : Bool = false
public var var_1690056943101_1049 : Int64 = (-118)
public let var_1690056943101_1062 : Option<VArray<Unit, $1>> = Option<VArray<Unit, $1>>.None
public let var_1690056943101_1075 : Int64 = (-110)
public let var_1690056943101_1095 : ?Array<Int64> = (Option<UInt64>.None as Array<Int64>)
public let var_1690056943101_1136 : Int32 = Int32(105)
public var var_1690056943101_1197 : ?UInt64 = Option<UInt64>.None
public let var_1690056943101_1226 : VArray<Unit, $1> = [()]
public var var_1690056943101_1280 : Int32 = Int32(-50)
var var_1690056943101_1350 : ?UInt64 = Option<UInt64>.None
public let var_1690056943101_1438 : ?UInt8 = Option<UInt8>.None
public let var_1690056943101_1481 : UInt32 = UInt32(5)
public let var_1690056943101_1553 : Int8 = Int8(34)
public var var_1690056943101_1583 : VArray<Unit, $4> = [(), (), (), ()]
public var var_1690056943101_1596 : Int64 = (-95)
public var var_1690056943101_1828 : Int64 = Int64(UInt16(176))
public var var_1690056943101_2032 : Range<UInt16> = ((UInt16(UInt16(176))&127)..(UInt16(UInt16(173))&127):(Int64(UInt8(Int8(Int8(-60))))|1))
public let var_1690056943101_2045 : ?Unit = (((UInt16(UInt16(Int16(15)))&127)..(UInt16(UInt16(UInt16(UInt16(124))))&127):(Int64(Int16(-80))|1)) as Unit)
public var var_1690056943101_2076 : (Int16, Range<Int64>) = (Int16(Int8(Int8(UInt8(35)))), ((Int64((-77))&127)..=(Int64(94)&127):((-97)|1)))
public var var_1690056943101_2103 : VArray<Bool, $5> = [true, false, false, false, false]
public var var_1690056943101_2112 : Range<UInt64> = ((UInt64(UInt64(235))&127)..(UInt64(UInt64(83))&127):(70|1))
public let var_1690056943101_2143 : Int16 = Int16(-69)
public let var_1690056943101_2147 : Range<Int16> = ((Int16(Int16(UInt8(73)))&127)..(Int16(Int16(UInt8(175)))&127):((-63)|1))
let var_1690056943101_2159 : UInt64 = UInt64(156)
public var var_1690056943101_2168 : Array<Int64> = [Int64(Int8(UInt8(154))), Int64(UInt64(76)), Int64(UInt64(247)), Int64((-76)), 11, (-102), (-44), 61, Int64(Int16(-105)), (-27)]
public let var_1690056943101_2193 : Unit = ()
public let var_1690056943101_2224 : ((((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>), Option<Unit>) = (((([UInt64(120), UInt64(16), UInt64(11), UInt64(171), UInt64(77), UInt64(141), UInt64(37), UInt64(196), UInt64(242), UInt64(135)], UInt16(22), [59, (-77), 106, (-91), (-44), (-107), 54, 47, (-41), (-4)], ((Int32(Int32(-53))&127)..=(Int32(Int32(93))&127):(71|1)), Float32(56.0), (-102)), Int32(57), UInt64(Int8(66)), ([UInt64(8), UInt64(186), UInt64(25), UInt64(47), UInt64(93), UInt64(34), UInt64(207), UInt64(35), UInt64(79), UInt64(58)], UInt16(49), [4, (-4), 120, (-31), (-20), (-8), (-80), (-117), 15, 74], ((Int32(Int32(-52))&127)..(Int32(Int32(-81))&127):(115|1)), Float32(84.0), (-104)), true, Int8(UInt8(136)), VArray<Unit, $4>({ i => ()})), Int16(UInt16(129)), ((UInt16(UInt16(17))&127)..=(UInt16(UInt16(166))&127):(38|1)), ((Int16(Int16(UInt8(42)))&127)..(Int16(Int16(UInt16(54)))&127):(Int64((-107))|1)), [UInt64(222), UInt64(63), UInt64(12), UInt64(199), UInt64(222), UInt64(60), UInt64(143), UInt64(126), UInt64(83), UInt64(192)], [27, 70, 56, Int64(Int32(52)), Int64(UInt32(16)), Int64(Int16(31)), (-44), Int64(Int8(94)), 92, Int64(UInt16(239))]), (((Int16(-101), ((Int64(110)&127)..=(Int64((-106))&127):((-59)|1))), ((UInt8(UInt8(10))&127)..=(UInt8(UInt8(223))&127):(9|1)), VArray<Bool, $5>(repeat: true), ((UInt64(UInt64(179))&127)..(UInt64(UInt64(216))&127):((-125)|1)), (), VArray<Unit, $4>(repeat: ()), Int8(Int8(34)), 'h') as Unit))

public struct Struct_1690056943101_184<T0, T1> {
    public init() { // block id: 186

    }
;
    public static let var_1690056943101_189 : ?VArray<Unit, $4> = Option<VArray<Unit, $4>>.None;
    public static mut prop var_1690056943101_438 : UInt64 { // block id: 439
        get() { // block id: 441
            UInt64(19)
        }

        set(Value) { // block id: 445

        }

    };
    public static var var_1690056943101_1458 : UInt64 = UInt64(20);
    prop var_1690056943101_1528 : Int16 { // block id: 1529
        get() { // block id: 1531
            ();
            Int16(-101)
        }

    };
    public prop var_1690056943101_1861 : Bool { // block id: 1862
        get() { // block id: 1864
            "UV:0/Y/9.W";
            ();
            (Float32(Float32(36.0)) is (Bool) -> Array<UInt64>)
        }

    };
    public static var var_1690056943101_1902 : (Range<UInt8>, Int8, ((((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>), Option<Unit>), Int16, Range<Int8>, (((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>), UInt32) = (((UInt8(UInt8(197))&127)..=(UInt8(UInt8(109))&127):((-118)|1)), Int8(35), (((([UInt64(203), UInt64(171), UInt64(102), UInt64(162), UInt64(246), UInt64(114), UInt64(240), UInt64(192), UInt64(251), UInt64(125)], UInt16(180), [75, 97, 93, (-32), (-69), (-57), (-7), (-26), 42, (-33)], ((Int32(Int32(45))&127)..(Int32(Int32(119))&127):((-45)|1)), Float32(-48.0), (-34)), Int32(116), UInt64(67), ([UInt64(12), UInt64(99), UInt64(187), UInt64(234), UInt64(51), UInt64(140), UInt64(105), UInt64(98), UInt64(1), UInt64(16)], UInt16(242), [34, 14, 93, 94, (-51), (-36), 112, 114, (-73), 53], ((Int32(Int32(85))&127)..(Int32(Int32(-73))&127):(73|1)), Float32(-37.0), 16), false, Int8(-2), VArray<Unit, $4>({ i => ()})), Int16(34), ((UInt16(UInt16(46))&127)..(UInt16(UInt16(175))&127):((-15)|1)), ((Int16(Int16(-16))&127)..(Int16(Int16(115))&127):(101|1)), [UInt64(204), UInt64(117), UInt64(203), UInt64(115), UInt64(50), UInt64(181), UInt64(236), UInt64(0), UInt64(76), UInt64(177)], [29, (-122), (-74), 28, (-29), 28, (-109), 53, 66, (-17)]), Option<Unit>.None), Int16(-41), ((Int8(Int8(-72))&127)..=(Int8(Int8(64))&127):(91|1)), ((([UInt64(230), UInt64(52), UInt64(106), UInt64(31), UInt64(111), UInt64(107), UInt64(191), UInt64(21), UInt64(147), UInt64(67)], UInt16(44), [102, 102, 110, (-75), 44, 103, (-84), (-5), 33, (-39)], ((Int32(Int32(60))&127)..(Int32(Int32(29))&127):(20|1)), Float32(76.0), 28), Int32(-1), UInt64(237), ([UInt64(85), UInt64(63), UInt64(243), UInt64(184), UInt64(7), UInt64(252), UInt64(187), UInt64(76), UInt64(166), UInt64(36)], UInt16(84), [(-95), (-64), 52, (-22), (-28), 95, 45, 126, 2, (-35)], ((Int32(Int32(-80))&127)..=(Int32(Int32(-44))&127):((-85)|1)), Float32(-50.0), (-81)), true, Int8(-57), VArray<Unit, $4>({ i => ()})), Int16(86), ((UInt16(UInt16(125))&127)..(UInt16(UInt16(59))&127):((-6)|1)), ((Int16(Int16(25))&127)..(Int16(Int16(-61))&127):((-15)|1)), [UInt64(247), UInt64(36), UInt64(36), UInt64(29), UInt64(194), UInt64(95), UInt64(179), UInt64(103), UInt64(90), UInt64(210)], [(-82), 39, 29, (-33), (-61), 118, 80, (-94), (-28), 15]), UInt32(196))
}

public func func_1690056943101_106(param_1690056943101_107 : Array<UInt64>) : Bool { // block id: 108
    let var_1690056943101_137 : Range<Int32> = ((Int32(Int32(-38))&127)..(Int32(Int32(71))&127):((-111)|1));
    let var_1690056943101_172 : Int64 = Int64(Int16(-65));
    var var_1690056943101_177 : Float32 = Float32(-103.0);
    try { // block id: 112
        ();
        UInt8(166);
        ([UInt64(96), UInt64(130), UInt64(10), UInt64(136), UInt64(92), UInt64(128), UInt64(94), UInt64(153), UInt64(226), UInt64(69)], UInt16(171), var_1690056943101_119, var_1690056943101_137, Float32(76.0), 46)
    } catch (_) { // block id: 141
        ();
        if (true) { ((Int64(59)&127)..(Int64(var_1690056943101_148)&127):(var_1690056943101_148|1)) } else { var_1690056943101_153 } ;
        ([UInt64(206), UInt64(58), UInt64(168), UInt64(5), UInt64(12), UInt64(240), UInt64(102), UInt64(207), UInt64(124), UInt64(190)], UInt16(53), [var_1690056943101_148, var_1690056943101_161, (-4), 92, (-78), (-97), var_1690056943101_161, var_1690056943101_161, var_1690056943101_148, var_1690056943101_172], var_1690056943101_137, var_1690056943101_177, 43)
    }[2];
    let var_1690056943101_224 : ?VArray<Unit, $4> = (((Int64(120)&127)..(Int64(Int64(UInt8(200)))&127):(Int64(Int8(UInt8(43)))|1)) as VArray<Unit, $4>);
    let var_1690056943101_240 : Unit = ();
    match (match (Struct_1690056943101_184<UInt64, Array<UInt64>>.var_1690056943101_189) {
        case _ => 
            ((Int8(Int8(106))&127)..=(Int8(Int8(91))&127):(29|1))
        
        case _ : (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64) => 
            var_1690056943101_148;
            ((Int8(Int8(81))&127)..(Int8(Int8(92))&127):(90|1))
        
        case caseVar_1690056943101_202 : Range<Int64> => 
            var_1690056943101_177 /= Float32((Int32(var_1690056943101_177)) | 1);
            var_1690056943101_209 += Int8(87);
            var_1690056943101_217
        
        case caseVar_1690056943101_221 => 
            var_1690056943101_224;
            ((Int8(var_1690056943101_209)&127)..=(Int8(Int8(120))&127):((-17)|1))
        
        case _ => 
            var_1690056943101_240;
            if (var_1690056943101_50) { ((Int8(Int8(42))&127)..(Int8(var_1690056943101_209)&127):(var_1690056943101_161|1)) } else { ((Int8(Int8(4))&127)..(Int8(Int8(-104))&127):(65|1)) } 
        
    }) {
        case _ => 
            false
        
    }
}

public open class Class_1690056943101_260 {
    public init() { // block id: 262

    }
;
    public prop var_1690056943101_267 : Bool { // block id: 268
        get() { // block id: 270
            VArray<Unit, $4>({ i => ()});
            UInt64(20);
            (((Int8(Int8(115))&127)..(Int8(Int8(-74))&127):((-35)|1)) is (Array<UInt64>) -> Bool)
        }

    };
    public static let var_1690056943101_357 : Int8 = Int8(-68);
    let var_1690056943101_412 : Range<Int64> = ((Int64(27)&127)..(Int64((-97))&127):(102|1));
    public mut prop var_1690056943101_1164 : UInt64 { // block id: 1165
        get() { // block id: 1167
            VArray<Unit, $4>(repeat: ());
            UInt64(Int32(Int8(1)));
            var_1690056943101_2412
        }

        set(Value) { // block id: 1178
            ();
            Int32(UInt8(Int8(31)));
            ();
            var_1690056943101_2412 = Value
        }

    };
    public var var_1690056943101_1237 : Int8 = Int8(-19);
    public open func func_1690056943101_489(param_1690056943101_490 : Unit, param_1690056943101_491 : (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), namedParam_1690056943101_492 ! : String, namedParam_1690056943101_493 ! : Range<Int8>) : Unit { // block id: 494
        ();
        func_1690056943101_502().var_1690056943101_1237 <<= ((Int8(if (var_1690056943101_296) { // block id: 1242
            ();
            (var_1690056943101_616, Int32(-126), UInt64(63), ([var_1690056943101_697, var_1690056943101_697, UInt64(27), var_1690056943101_591, var_1690056943101_705, var_1690056943101_705, var_1690056943101_1164, var_1690056943101_705, var_1690056943101_697, var_1690056943101_1164], var_1690056943101_384, var_1690056943101_119, ((Int32(Int32(4))&127)..=(Int32(Int32(-48))&127):(var_1690056943101_762|1)), var_1690056943101_545, var_1690056943101_1075), false, Int8(-1), VArray<Unit, $4>(repeat: var_1690056943101_320));
            var_1690056943101_357
        } else if (var_1690056943101_267) { // block id: 1277
            var_1690056943101_1280 ^= Int32(119);
            Int8(-41) * Int8(-16)
        } else { // block id: 1286
            var_1690056943101_357
        })) & 7);
        var_1690056943101_320
    }
;
    public static var var_1690056943101_1293 : (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64) = ([UInt64(241), UInt64(58), UInt64(82), UInt64(234), UInt64(47), UInt64(16), UInt64(131), UInt64(50), UInt64(245), UInt64(201)], UInt16(107), [(-120), (-83), (-100), 50, 112, (-66), (-93), 65, (-101), (-55)], ((Int32(Int32(-104))&127)..(Int32(Int32(-85))&127):((-42)|1)), Float32(21.0), (-75));
    mut prop var_1690056943101_2412 : UInt64 { // block id: 2413
        get() { // block id: 2415
            UInt64(75)
        }

        set(Value) { // block id: 2419
            ()
        }

    }
}



public open class Class_1690056943101_498 <: Class_1690056943101_260 {
    public init() { // block id: 500

    }
;
    public let var_1690056943101_740 : ?Array<Int64> = Option<Array<Int64>>.None;
    public static mut prop var_1690056943101_1331 : Range<Int8> { // block id: 1332
        get() { // block id: 1334
            ();
            ();
            ((Int8(Int8(Int8(Int8(-100))))&127)..=(Int8(Int8(UInt8(56)))&127):(Int64(UInt8(240))|1))
        }

        set(Value) { // block id: 1347
            ()
        }

    }
    static init() {
    }
}






public func func_1690056943101_483(param_1690056943101_727 : Float64) : Option<UInt8> { // block id: 728
    var_1690056943101_320;
    var var_1690056943101_785 : Int64 = 104;
    let var_1690056943101_816 : Int64 = 111;
    (var_1690056943101_737.var_1690056943101_740 ?? (Option<Array<Array<Int64>>>.Some([var_1690056943101_119, [89, var_1690056943101_161, 86, 102, var_1690056943101_148, 92, var_1690056943101_161, (-121), var_1690056943101_762, var_1690056943101_148], [5, 44, 95, (-70), (-83), (-40), 69, 38, 14, (-60)], [(-16), 25, 30, (-114), (-117), (-45), 2, (-106), 27, 22], [var_1690056943101_148, 126, 75, 47, var_1690056943101_148, var_1690056943101_161, var_1690056943101_148, var_1690056943101_148, var_1690056943101_762, var_1690056943101_148], [var_1690056943101_161, var_1690056943101_148, var_1690056943101_161, (-57), var_1690056943101_762, var_1690056943101_785, 72, var_1690056943101_762, (-127), var_1690056943101_785], [96, (-73), (-16), 9, 54, var_1690056943101_148, 101, var_1690056943101_161, var_1690056943101_785, var_1690056943101_762], var_1690056943101_119, [var_1690056943101_805, (-116), var_1690056943101_762, 87, (-102), var_1690056943101_762, 58, (-63), 76, var_1690056943101_816], [var_1690056943101_762, 118, 115, (-43), var_1690056943101_816, var_1690056943101_161, var_1690056943101_161, (-121), (-60), var_1690056943101_829]]) ?? var_1690056943101_832)[4]);
    try { // block id: 934
        var_1690056943101_938[3]
    } catch (e: Exception) { // block id: 959
        let var_1690056943101_961 : ?UInt8 = Option<UInt8>.None;
        var_1690056943101_961
    } finally { // block id: 963
        (Option<Option<UInt8>>.None ?? Option<UInt8>.None)
    }
}


public func func_1690056943101_507(namedParam_1690056943101_508 ! : Range<Int16>, namedParam_1690056943101_509 ! : Range<UInt32>, namedParam_1690056943101_510 ! : Int8, namedParam_1690056943101_511 ! : Array<UInt64>) : UInt16 { // block id: 512
    let var_1690056943101_536 : ?Bool = Option<Bool>.Some(true);
    let var_1690056943101_611 : Int32 = Int32(UInt16(185));
    let var_1690056943101_655 : VArray<Unit, $4> = [(), (), (), ()];
    let var_1690056943101_690 : Int64 = (-39);
    func func_1690056943101_515(param_1690056943101_516 : Array<Int64>, namedParam_1690056943101_517 ! : Range<UInt8>, namedParam_1690056943101_518 ! : VArray<Unit, $1>) : UInt8 { // block id: 519
        var loopTimeVar_1690056943101_719 : Int64 = 0;
        while (((match (Option<VArray<Unit, $4>>.None) {
            case caseVar_1690056943101_530 : Option<Bool> => 
                if (var_1690056943101_296) { Option<Bool>.None } else { var_1690056943101_536 } 
            
            case caseVar_1690056943101_541 => 
                var_1690056943101_545 *= var_1690056943101_545;
                if (var_1690056943101_50) { Option<Bool>.Some(var_1690056943101_296) } else { var_1690056943101_536 } 
            
            case caseVar_1690056943101_555 => 
                if (true) { VArray<Bool, $5>({ i => true}) } else { VArray<Bool, $5>(repeat: var_1690056943101_296) } ;
                var_1690056943101_209 & var_1690056943101_209;
                if (true) { var_1690056943101_536 } else { Option<Bool>.Some(true) } 
            
            case _ => 
                ((UInt64(UInt64(237))&127)..(UInt64(UInt64(72))&127):(25|1));
                var_1690056943101_46++;
                var_1690056943101_536
            
        } ?? (([var_1690056943101_591, var_1690056943101_591, UInt64(72), UInt64(179), UInt64(250), UInt64(63), var_1690056943101_591, var_1690056943101_591, var_1690056943101_591, var_1690056943101_591], var_1690056943101_384, [(-90), 114, (-100), (-10), 78, 125, (-14), (-65), (-80), (-22)], var_1690056943101_606, Float32(-58.0), 23), var_1690056943101_611, UInt64(83), var_1690056943101_616, false, var_1690056943101_209, var_1690056943101_655)[4])) && loopTimeVar_1690056943101_719 < 100 ) {
            loopTimeVar_1690056943101_719++;
            var var_1690056943101_709 : UInt64 = UInt64(130);
            (((var_1690056943101_58, UInt16(185), var_1690056943101_119, ((Int32(Int32(21))&127)..(Int32(Int32(27))&127):(73|1)), Float32(-88.0), 75), var_1690056943101_611, var_1690056943101_591, (var_1690056943101_58, UInt16(54), var_1690056943101_119, ((Int32(Int32(-11))&127)..(Int32(Int32(39))&127):((-8)|1)), Float32(-94.0), (-124)), var_1690056943101_296, var_1690056943101_209, var_1690056943101_655), Int16(-94), ((UInt16(var_1690056943101_384)&127)..(UInt16(var_1690056943101_384)&127):(var_1690056943101_690|1)), ((Int16(Int16(-126))&127)..=(Int16(Int16(-65))&127):((-31)|1)), [UInt64(61), var_1690056943101_591, var_1690056943101_697, var_1690056943101_697, UInt64(194), UInt64(18), var_1690056943101_705, var_1690056943101_709, UInt64(147), UInt64(3)], [7, (-120), (-52), (-117), 17, (-88), (-113), 92, 97, 34])[1];
            if (var_1690056943101_281) { // block id: 717

            }
        };
        (func_1690056943101_483(if (var_1690056943101_281) { // block id: 973
            var_1690056943101_316 |= var_1690056943101_316;
            UInt32(22);
            var_1690056943101_27
        } else if (var_1690056943101_281) { // block id: 980
            if (true) { var_1690056943101_984 } else { ((UInt32(UInt32(33))&127)..(UInt32(UInt32(39))&127):(13|1)) } ;
            (-109.0)
        } else { // block id: 993
            -Int32(41);
            var_1690056943101_27 - var_1690056943101_27
        }) ?? if (([(-6), 42, 110, (-24), (-82), 4, (-89), 32, 66, (-2)] is Int64)) { // block id: 1002
            var_1690056943101_316
        } else { // block id: 1004
            ();
            var_1690056943101_76 | var_1690056943101_76;
            UInt8(165)
        })
    }
;
    UInt16(func_1690056943101_515(if (var_1690056943101_296) { // block id: 1012
        if (var_1690056943101_1015) { [UInt64(231), UInt64(166), UInt64(13), UInt64(103), UInt64(60), UInt64(215), UInt64(249), UInt64(97), UInt64(132), UInt64(23)] } else { [var_1690056943101_591, var_1690056943101_591, var_1690056943101_591, var_1690056943101_705, var_1690056943101_697, var_1690056943101_697, UInt64(128), var_1690056943101_697, var_1690056943101_697, var_1690056943101_591] } ;
        if (true) { [106, (-34), (-119), (-78), 5, 67, (-104), 53, (-17), 103] } else { [23, (-47), (-14), 43, 23, (-59), 48, 16, 32, 90] } 
    } else if (var_1690056943101_50) { // block id: 1034
        var_1690056943101_217;
        ((Int64(99)&127)..(Int64(31)&127):(52|1));
        if (var_1690056943101_1015) { [40, (-79), 104, 2, (-15), (-1), 65, (-19), 86, 58] } else { [(-15), 65, 15, (-80), 92, 92, 57, 1, 91, 108] } 
    } else { // block id: 1041
        [(-59), var_1690056943101_805, 65, (-43), var_1690056943101_805, var_1690056943101_1049, var_1690056943101_829, var_1690056943101_829, 35, (-71)]
    }, namedParam_1690056943101_517 : ((UInt8(UInt8(83))&127)..(UInt8(UInt8(119))&127):(88|1)), namedParam_1690056943101_518 : (var_1690056943101_1062 ?? VArray<Unit, $1>(repeat: var_1690056943101_320))))
}



public func func_1690056943101_502(optionalParam_1690056943101_503 ! : Unit = ()) : Class_1690056943101_498 { // block id: 505
    let var_1690056943101_1152 : VArray<Unit, $4> = [(), (), (), ()];
    func_1690056943101_507(namedParam_1690056943101_508 : ((Int16(Int16(-90))&127)..=(Int16([Int16(47), Int16(-19), Int16(-127), Int16(-85), Int16(-61), Int16(-19), Int16(-114), Int16(45), Int16(45), Int16(75)][5])&127):(match ([var_1690056943101_1075, 106, 58, var_1690056943101_1075, var_1690056943101_1049, 119, var_1690056943101_161, 68, 87, 120]) {
        case _ => 
            (-95) & 71
        
        case _ => 
            var_1690056943101_1095;
            (-16)
        
    }|1)), namedParam_1690056943101_509 : ((UInt32(UInt32(120))&127)..(UInt32(UInt32(234))&127):((-67)|1)), namedParam_1690056943101_510 : Int8(UInt8(var_1690056943101_209)), namedParam_1690056943101_511 : [UInt64(135), (Option<UInt64>.Some(UInt64(231)) ?? var_1690056943101_697), if (false) { // block id: 1115
        var_1690056943101_209++;
        UInt64(26)
    } else if (var_1690056943101_281) { // block id: 1120
        var_1690056943101_209 |= Int8(19);
        var_1690056943101_58;
        UInt64(180)
    } else { // block id: 1126
        ();
        UInt64(21);
        var_1690056943101_697
    }, if (var_1690056943101_50) { // block id: 1132
        (var_1690056943101_616, var_1690056943101_1136, UInt64(126), (var_1690056943101_58, var_1690056943101_46, [71, (-55), 76, (-15), (-104), 40, 80, (-80), (-33), 93], ((Int32(Int32(-34))&127)..(Int32(var_1690056943101_1136)&127):(87|1)), Float32(-115.0), var_1690056943101_148), var_1690056943101_296, Int8(59), var_1690056943101_1152);
        var_1690056943101_320;
        UInt64(220)
    } else { // block id: 1156
        var_1690056943101_320;
        UInt64(51)
    }, UInt64(var_1690056943101_316), var_1690056943101_409.var_1690056943101_1164, UInt64(94), UInt64(Int32(21)), (Option<UInt64>.Some(var_1690056943101_591) ?? UInt64(98)), (var_1690056943101_1197 ?? UInt64(127))]);
    var var_1690056943101_1220 : Bool = ((Option<Array<Array<Int64>>>.None as VArray<Unit, $4>) is VArray<Bool, $5>);
    match ((if (var_1690056943101_296) { // block id: 1204
        ();
        if (var_1690056943101_281) { var_1690056943101_473 } else { var_1690056943101_473 } 
    } else if (var_1690056943101_281) { // block id: 1211
        var_1690056943101_296 &&= var_1690056943101_50;
        var_1690056943101_473
    } else { // block id: 1216
        var_1690056943101_119;
        if (var_1690056943101_1220) { var_1690056943101_473 } else { var_1690056943101_1226 } 
    } as VArray<Unit, $4>)) {
        case _ => 
            ();
            var_1690056943101_832;
            if (true) { Class_1690056943101_498() } else { var_1690056943101_737 } 
        
    }
}

public func func_1690056943101_483(param_1690056943101_484 : Int16) : Option<UInt64> { // block id: 485
    var_1690056943101_409.func_1690056943101_489((), Class_1690056943101_260.var_1690056943101_1293, namedParam_1690056943101_492 : if (true) { var_1690056943101_345 } else { var_1690056943101_345 } , namedParam_1690056943101_493 : Class_1690056943101_498.var_1690056943101_1331);
    var_1690056943101_1350
}



public func func_1690056943101_467(param_1690056943101_468 : Bool) : Array<UInt64> { // block id: 469
    var_1690056943101_473[0];
    let var_1690056943101_1366 : Array<Option<UInt8>> = [(UInt64(77) as UInt8), (">A6EY=*a{3." as UInt8), (UInt16(68) as UInt8), ((Option<UInt8>.None as Array<Array<Int64>>) as UInt8), Option<UInt8>.None, Option<UInt8>.None, (("n3b$.]`v+%" as Array<Int64>) as UInt8), Option<UInt8>.Some(UInt8(Int8(UInt8(199)))), (((UInt64(UInt64(UInt8(122)))&127)..(UInt64(UInt64(121))&127):(39|1)) as UInt8), Option<UInt8>.None];
    let var_1690056943101_1422 : Option<UInt64> = Option<UInt64>.None;
    let var_1690056943101_1453 : UInt64 = UInt64(36);
    [(func_1690056943101_483(var_1690056943101_76) ?? (UInt8(27), var_1690056943101_447, ((Int64(66)&127)..=(Int64((-32))&127):((-63)|1)), var_1690056943101_119, var_1690056943101_697, ())[4]), UInt64(match (var_1690056943101_1366) {
        case _ => 
            UInt64(5) & var_1690056943101_697
        
        case _ : Range<UInt8> => 
            UInt64(189)
        
        case _ => 
            var_1690056943101_1350;
            var_1690056943101_296 &&= false;
            UInt64(207) * var_1690056943101_697
        
    }), (if (var_1690056943101_50) { Option<UInt64>.Some(UInt64(220)) } else { var_1690056943101_1422 }  ?? if (var_1690056943101_1015) { // block id: 1426
        var_1690056943101_320;
        var_1690056943101_705
    } else { // block id: 1429
        ();
        "]qHd0w`J:k";
        UInt64(228)
    }), try { // block id: 1434
        ();
        [var_1690056943101_1438, var_1690056943101_1438, var_1690056943101_1438, var_1690056943101_1438, Option<UInt8>.None, var_1690056943101_1438, var_1690056943101_1438, var_1690056943101_1438, var_1690056943101_1438, Option<UInt8>.Some(UInt8(206))];
        var_1690056943101_697
    } finally { // block id: 1451
        var_1690056943101_1453
    }, Struct_1690056943101_184<UInt64, Array<UInt64>>.var_1690056943101_1458, var_1690056943101_1453, try { // block id: 1462
        UInt64(193)
    } finally { // block id: 1464
        var_1690056943101_320;
        var_1690056943101_832;
        var_1690056943101_591
    }, if (try { // block id: 1470
        var_1690056943101_320;
        false
    } catch (_) { // block id: 1473
        if (true) { var_1690056943101_409 } else { var_1690056943101_409 } ;
        false
    }) { // block id: 1479
        var_1690056943101_1481;
        UInt64(212) % ((var_1690056943101_705) | 1)
    } else { // block id: 1486
        let var_1690056943101_1488 : ??UInt8 = Option<Option<UInt8>>.None;
        var_1690056943101_1488;
        Option<Array<Array<Int64>>>.Some([[(-17), (-117), 58, 29, (-97), (-77), 91, 110, (-64), 13], [50, (-41), (-69), (-36), (-115), (-18), 78, (-96), (-93), 71], [(-88), 77, 56, (-56), 21, (-118), (-123), 94, (-22), 32], [(-3), 45, 69, (-37), (-5), (-30), (-76), 6, 27, (-75)], [(-107), 29, (-39), (-71), (-42), (-35), (-44), (-11), 97, 7], [(-92), 80, (-28), 51, (-64), 34, (-31), (-11), 71, (-104)], [(-83), 92, 39, (-120), (-95), 70, (-47), 10, 94, 37], [7, 110, 108, 3, (-80), 55, (-90), (-50), 55, 66], [(-87), 61, 13, (-42), (-18), (-113), (-114), 34, 66, 93], [84, (-46), (-93), (-6), (-70), 45, (-111), (-104), 123, (-91)]]);
        UInt64(181)
    }, var_1690056943101_391.func_1690056943101_1496(((Int8(var_1690056943101_209)&127)..=(Int8(var_1690056943101_1553)&127):((-95)|1))), ((Option<Option<UInt64>>.Some(var_1690056943101_1422) ?? var_1690056943101_1422) ?? try { // block id: 1566
        var_1690056943101_316 += var_1690056943101_316;
        UInt64(76) & UInt64(0)
    } finally { // block id: 1573
        var_1690056943101_1453
    })]
}

public func func_1690056943101_350(param_1690056943101_351 : Range<UInt16>) : Unit { // block id: 352
    UInt32((Class_1690056943101_260.var_1690056943101_357));
    match (try { // block id: 361
        var var_1690056943101_364 : Int8 = Int8(Int8(UInt8(Int8(-115))));
        var_1690056943101_364 -= var_1690056943101_209;
        var_1690056943101_94
    } finally { // block id: 371
        ();
        Option<VArray<Unit, $4>>.Some(VArray<Unit, $4>(repeat: var_1690056943101_320))
    }) {
        case _ => 
            true;
            var_1690056943101_384 /= ((var_1690056943101_384) | 1);
            'r'
        
    };
    let var_1690056943101_2009 : Range<Int16> = ((Int16(Int16(112))&127)..(Int16(Int16(90))&127):(Int64(UInt32(183))|1));
    var loopTimeVar_1690056943101_2021 : Range<UInt64> = ((UInt64(UInt64(UInt8(Int8(76))))&127)..(UInt64(UInt64(147))&127):(27|1));
    (var_1690056943101_391.func_1690056943101_394(var_1690056943101_2009, namedParam_1690056943101_396 : var_1690056943101_384) ?? for (i in loopTimeVar_1690056943101_2021 where (Option<Unit>.Some(()) is Int64)) {

    })
}

public func func_1690056943101_101<T0>(param_1690056943101_102 : Range<Int8>) : VArray<Unit, $4> { // block id: 103
    let var_1690056943101_264 : Class_1690056943101_260 = Class_1690056943101_260();
    var loopTimeVar_1690056943101_331 : Int64 = 0;
    do {
        loopTimeVar_1690056943101_331++;
        if (var_1690056943101_281) { // block id: 293
            var_1690056943101_296 ||= true;
            var_1690056943101_76 *= var_1690056943101_76;
            var_1690056943101_305 + var_1690056943101_305
        } else if (var_1690056943101_50) { // block id: 313
            var_1690056943101_316 &= UInt8(183);
            var_1690056943101_320;
            Float32(0.0) * var_1690056943101_305
        } else { // block id: 325
            Int8(-46) % ((var_1690056943101_209) | 1);
            var_1690056943101_305
        }
    } while (((if (var_1690056943101_281) { var_1690056943101_58 } else { var_1690056943101_58 } |>{ lambdaParameter_1690056943101_257 : Array<UInt64> => var_1690056943101_264.var_1690056943101_267 })) && loopTimeVar_1690056943101_331 < 100 ) ;
    var loopTimeVar_1690056943101_348 : Int64 = 0;
    var var_1690056943101_2029 : (Range<UInt16>) -> Unit = func_1690056943101_350;
    var loopTimeVar_1690056943101_2063 : Int64 = 0;
    VArray<Unit, $4>(repeat: (var_1690056943101_339 ?? while ((false) && loopTimeVar_1690056943101_348 < 100 ) {
        loopTimeVar_1690056943101_348++;
        var_1690056943101_345
    }))
}


public func func_1690056943101_81(param_1690056943101_82 : Bool) : Array<Int64> { // block id: 83
    let var_1690056943101_98 : VArray<Unit, $4> = [(), (), (), ()];
    let var_1690056943101_2065 : (Range<Int8>) -> VArray<Unit, $4> = func_1690056943101_101<Option<Option<UInt64>>>;
    if (var_1690056943101_50) { (var_1690056943101_94 ?? var_1690056943101_98) } else { (((Int8(Int8(104))&127)..(Int8(var_1690056943101_1553)&127):((-94)|1))|>var_1690056943101_2065) } [0];
    var var_1690056943101_2205 : Int8 = Int8(-104);
    (var_1690056943101_2076, ((UInt8(var_1690056943101_316)&127)..(UInt8(var_1690056943101_316)&127):((-42)|1)), try { // block id: 2088
        if (var_1690056943101_296) { var_1690056943101_447 } else { VArray<Bool, $5>(repeat: var_1690056943101_281) } 
    } finally { // block id: 2098
        var_1690056943101_316 | var_1690056943101_316;
        var_1690056943101_2103
    }, (Option<Range<UInt64>>.None ?? var_1690056943101_2112), (Option<Unit>.None ?? ()), try { // block id: 2118
        if (true) { var_1690056943101_98 } else { var_1690056943101_98 } 
    } catch (e: Exception) { // block id: 2123
        if (true) { VArray<Unit, $4>(repeat: var_1690056943101_320) } else { var_1690056943101_98 } 
    } finally { // block id: 2132
        ((var_1690056943101_616, Int32(-8), var_1690056943101_591, var_1690056943101_616, var_1690056943101_281, var_1690056943101_1553, var_1690056943101_1583), var_1690056943101_2143, var_1690056943101_2032, var_1690056943101_2147, [var_1690056943101_697, var_1690056943101_591, UInt64(231), var_1690056943101_2159, var_1690056943101_2159, UInt64(149), UInt64(237), var_1690056943101_705, var_1690056943101_2159, var_1690056943101_705], var_1690056943101_2168);
        if (true) { VArray<Unit, $4>(repeat: var_1690056943101_320) } else { var_1690056943101_98 } 
    }, if (true) { // block id: 2198
        ();
        var_1690056943101_1553
    } else { // block id: 2201
        Float32(34.0);
        var_1690056943101_409;
        var_1690056943101_2205
    }, if (var_1690056943101_281) { // block id: 2209
        UInt8(9) | UInt8(159);
        var_1690056943101_2193;
        'U'
    } else { // block id: 2215
        var_1690056943101_27 = var_1690056943101_27;
        '4'
    })[4];
    match (var_1690056943101_2224[1]) {
        case caseVar_1690056943101_2337 : String => 
            var_1690056943101_2168
        
        case _ => 
            [(-104), (-39), (-74), var_1690056943101_1075, var_1690056943101_1049, 3, var_1690056943101_1828, 77, (-100), (-75)]
        
        case _ : (((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>) => 
            if (var_1690056943101_50) { [(-35), (-44), (-70), 79, (-94), (-8), (-6), (-128), (-23), 11] } else { [123, (-39), (-85), 22, (-16), (-78), 92, (-24), 36, 126] } 
        
        case _ => 
            var_1690056943101_320;
            UInt64(21);
            var_1690056943101_119
        
    }
}

public func func_1690056943101_9(param_1690056943101_10 : Float64) : Int64 { // block id: 11
    try { // block id: 13
        Int32(68) / ((Int32(-56)) | 1);
        let var_1690056943101_19 : Float64 = Float64(Float64(Float32(Float32(-120.0))));
        -var_1690056943101_19
    } finally { // block id: 24
        Float64(var_1690056943101_27)
    };
    var var_1690056943101_2367 : (Bool) -> Array<Int64> = func_1690056943101_81;
    let var_1690056943101_2372 : (UInt8, VArray<Bool, $5>, Range<Int64>, Array<Int64>, UInt64, Unit) = (UInt8(164), VArray<Bool, $5>(repeat: (UInt8(UInt8(113)) is Range<UInt64>)), ((Int64(121)&127)..=(Int64((-46))&127):(Int64(Int8(-90))|1)), [54, 75, 67, (-112), (-115), (-44), 23, 94, 82, (-68)], UInt64(UInt8(UInt8(87))), ());
    if (if (true) { // block id: 43
        var_1690056943101_46 >>= ((var_1690056943101_46) & 7);
        var_1690056943101_50
    } else if (false) { // block id: 54
        true
    } else { // block id: 56
        var_1690056943101_58;
        var_1690056943101_76 != Int16(-72)
    }) { (true|>var_1690056943101_2367) } else { var_1690056943101_2372[3] } [0]
}

main(): Int64 {
    try {
        ();
        var var_1690056943101_2405 : (Float64) -> Int64 = func_1690056943101_9;
        var_1690056943101_27 - var_1690056943101_27|>var_1690056943101_2405
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1690056943101_76*var_1690056943101_76), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_316*var_1690056943101_316), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_697*var_1690056943101_697), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_705*var_1690056943101_705), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_762*var_1690056943101_762), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_805*var_1690056943101_805), 64)
        crccheck.updateBuffer(UInt64(var_1690056943101_2159*var_1690056943101_2159), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            res = res + hex_value.toString()
            i = i + 3
        }
        print("\n")
        if ( res == "2423117771400522232543511037006761012367522531" ){
            return 0
        }
        return 1
    }
}
extend Class_1690056943101_498 {

}

extend<T0, T1> Struct_1690056943101_184<T0, T1> {
    public func func_1690056943101_394(param_1690056943101_395 : Range<Int16>, namedParam_1690056943101_396 ! : UInt16) : Option<Unit> { // block id: 397
        var var_1690056943101_1576 : (Bool) -> Array<UInt64> = func_1690056943101_467;
        if (((true|>var_1690056943101_1576)|>{ lambdaParameter_1690056943101_402 : Array<UInt64> => match (var_1690056943101_409.var_1690056943101_412) {
            case caseVar_1690056943101_419 => 
                if (var_1690056943101_50) { VArray<Bool, $5>(repeat: var_1690056943101_50) } else { VArray<Bool, $5>(repeat: var_1690056943101_281) } 
            
            case _ => 
                var_1690056943101_438;
                var_1690056943101_447
            
        }[3] })) { ((UInt16(245) as VArray<Unit, $4>) ?? var_1690056943101_1583) } else { var_1690056943101_1583 } ;
        if (((var_1690056943101_76, ((Int64(var_1690056943101_762)&127)..(Int64(var_1690056943101_829)&127):(var_1690056943101_1596|1)))[0] is Array<Int16>)) { // block id: 1599
            var loopTimeVar_1690056943101_1604 : Int64 = 0;
            while ((false) && loopTimeVar_1690056943101_1604 < 100 ) {
                loopTimeVar_1690056943101_1604++;

            }
        };
        let var_1690056943101_1874 : Range<UInt16> = ((UInt16(UInt16(UInt8(UInt8(217))))&127)..=(UInt16(UInt16(Int16(51)))&127):(3|1));
        try { // block id: 1610
            let var_1690056943101_1612 : (Range<UInt8>, Int8, ((((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>), Option<Unit>), Int16, Range<Int8>, (((Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Int32, UInt64, (Array<UInt64>, UInt16, Array<Int64>, Range<Int32>, Float32, Int64), Bool, Int8, VArray<Unit, $4>), Int16, Range<UInt16>, Range<Int16>, Array<UInt64>, Array<Int64>), UInt32) = (((UInt8(UInt8(Int8(Int8(-35))))&127)..(UInt8(UInt8(UInt8(115)))&127):((-117)|1)), Int8(Int8(76)), (((([UInt64(168), UInt64(69), UInt64(213), UInt64(177), UInt64(223), UInt64(58), UInt64(182), UInt64(143), UInt64(156), UInt64(220)], UInt16(34), [13, (-92), (-73), 0, (-46), 109, 104, (-40), 7, (-69)], ((Int32(Int32(118))&127)..(Int32(Int32(69))&127):((-53)|1)), Float32(27.0), (-101)), Int32(122), UInt64(183), ([UInt64(44), UInt64(170), UInt64(33), UInt64(149), UInt64(174), UInt64(120), UInt64(109), UInt64(134), UInt64(244), UInt64(129)], UInt16(246), [(-82), 114, 23, (-72), 119, 88, 120, 63, 43, 96], ((Int32(Int32(0))&127)..=(Int32(Int32(-67))&127):(78|1)), Float32(80.0), 12), false, Int8(-80), VArray<Unit, $4>(repeat: ())), Int16(-72), ((UInt16(UInt16(74))&127)..=(UInt16(UInt16(47))&127):(122|1)), ((Int16(Int16(-45))&127)..=(Int16(Int16(-76))&127):((-6)|1)), [UInt64(86), UInt64(92), UInt64(40), UInt64(124), UInt64(209), UInt64(227), UInt64(25), UInt64(62), UInt64(230), UInt64(14)], [58, 121, (-92), 108, 40, 107, (-88), (-20), (-106), 85]), ((([UInt64(70), UInt64(54), UInt64(70), UInt64(86), UInt64(193), UInt64(183), UInt64(59), UInt64(37), UInt64(166), UInt64(13)], UInt16(40), [(-124), (-10), 120, 65, (-87), (-101), 30, 60, (-75), 5], ((Int32(Int32(7))&127)..=(Int32(Int32(82))&127):((-107)|1)), Float32(-6.0), (-60)) as UInt64) as Unit)), Int16(-126), ((Int8(Int8(UInt8(179)))&127)..=(Int8(Int8(60))&127):(91|1)), ((([UInt64(215), UInt64(35), UInt64(167), UInt64(236), UInt64(147), UInt64(197), UInt64(127), UInt64(169), UInt64(11), UInt64(95)], UInt16(121), [20, 124, (-5), 124, (-22), 86, (-78), (-18), 19, 102], ((Int32(Int32(-61))&127)..(Int32(Int32(104))&127):(6|1)), Float32(72.0), 101), Int32(112), UInt64(Int32(-13)), ([UInt64(89), UInt64(168), UInt64(149), UInt64(126), UInt64(83), UInt64(34), UInt64(226), UInt64(34), UInt64(232), UInt64(149)], UInt16(171), [2, (-44), 36, 71, (-25), 50, 66, 30, 11, (-37)], ((Int32(Int32(14))&127)..=(Int32(Int32(-118))&127):(36|1)), Float32(-39.0), 52), (Int32(-99) is Option<Option<UInt8>>), Int8(79), VArray<Unit, $4>(repeat: ())), Int16(UInt8(UInt8(80))), ((UInt16(UInt16(245))&127)..(UInt16(UInt16(73))&127):((-69)|1)), ((Int16(Int16(-76))&127)..(Int16(Int16(-94))&127):(61|1)), [UInt64(230), UInt64(67), UInt64(Int8(54)), UInt64(41), UInt64(UInt32(69)), UInt64(120), UInt64(UInt8(2)), UInt64(Int32(85)), UInt64(90), UInt64(236)], [(-9), 72, (-28), (-55), (-17), 98, (-115), 14, 4, 47]), UInt32(UInt32(Int16(-41))));
            var_1690056943101_1612
        } catch (e: Exception) { // block id: 1789
            ((Int64((-26))&127)..(Int64(var_1690056943101_1049)&127):(var_1690056943101_762|1));
            var_1690056943101_94;
            (((UInt8(UInt8(46))&127)..=(UInt8(UInt8(23))&127):((-123)|1)), Int8(28), (((([UInt64(86), var_1690056943101_438, UInt64(174), UInt64(114), UInt64(69), UInt64(158), UInt64(15), UInt64(77), var_1690056943101_591, var_1690056943101_697], var_1690056943101_384, [(-54), (-12), 37, (-71), 18, var_1690056943101_1049, 29, (-53), 94, 40], ((Int32(Int32(67))&127)..(Int32(Int32(96))&127):((-114)|1)), Float32(-44.0), var_1690056943101_1828), var_1690056943101_1136, UInt64(134), var_1690056943101_616, false, var_1690056943101_209, var_1690056943101_1583), var_1690056943101_76, ((UInt16(var_1690056943101_46)&127)..=(UInt16(var_1690056943101_46)&127):(var_1690056943101_762|1)), ((Int16(var_1690056943101_76)&127)..(Int16(var_1690056943101_1528)&127):(var_1690056943101_1049|1)), var_1690056943101_58, [110, (-61), 10, (-97), 126, 26, (-22), (-1), (-36), 103]), Option<Unit>.None), Int16(80), ((Int8(Int8(62))&127)..=(Int8(var_1690056943101_1553)&127):(var_1690056943101_1075|1)), ((var_1690056943101_616, Int32(-49), UInt64(46), var_1690056943101_616, var_1690056943101_1861, var_1690056943101_209, var_1690056943101_1583), var_1690056943101_76, var_1690056943101_1874, ((Int16(var_1690056943101_76)&127)..(Int16(var_1690056943101_1528)&127):(var_1690056943101_762|1)), [UInt64(13), UInt64(3), UInt64(140), UInt64(177), UInt64(234), UInt64(112), UInt64(164), UInt64(28), UInt64(119), UInt64(187)], [var_1690056943101_762, (-120), var_1690056943101_148, var_1690056943101_762, var_1690056943101_148, (-22), (-53), var_1690056943101_1075, var_1690056943101_1828, 55]), UInt32(42))
        } finally { // block id: 1899
            var_1690056943101_1095;
            var_1690056943101_1902
        }[2][1]
    }
;
    public func func_1690056943101_1496(param_1690056943101_1497 : Range<Int8>) : UInt64 { // block id: 1498
        try { // block id: 1501
            var var_1690056943101_1505 : ?Bool = Option<Bool>.None;
            if (var_1690056943101_281) { var_1690056943101_1505 } else { var_1690056943101_1505 } ;
            (UInt8(32), VArray<Bool, $5>(repeat: true), ((Int64(var_1690056943101_805)&127)..(Int64(var_1690056943101_762)&127):(33|1)), var_1690056943101_119, var_1690056943101_1458, ())
        } finally { // block id: 1523
            ((Int32(Int32(90))&127)..=(Int32(Int32(57))&127):((-7)|1));
            [Int16(80), var_1690056943101_1528, var_1690056943101_1528, Int16(22), Int16(-115), var_1690056943101_1528, Int16(18), Int16(-116), var_1690056943101_1528, Int16(21)];
            (UInt8(161), var_1690056943101_447, ((Int64((-97))&127)..=(Int64(62)&127):(59|1)), [(-117), 55, 82, (-37), (-7), (-70), (-69), 12, 14, (-93)], UInt64(53), ())
        }[4]
    }

}
// ASSERT: scan-2 sema_varray_captured

