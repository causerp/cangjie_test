/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

internal let var_1730897913257_24: Class_1730897913257_17 = Class_1730897913257_17()
@Deprecated
public var var_1730897913257_66: Range<UInt8> = ((UInt8(UInt8(146)) & 127)..=(UInt8(UInt8(230)) & 127) : (Int64(64) | 1))
@Deprecated
const var_1730897913257_118: Bool = true
internal const var_1730897913257_148: UInt = 149
let var_1730897913257_277: VArray<UInt64, $7> = [UInt64(122), UInt64(80), UInt64(60), UInt64(227), UInt64(51),
    UInt64(152), UInt64(106)]
let var_1730897913257_286: Struct_1730897913257_282 = Struct_1730897913257_282()
public const var_1730897913257_300: Unit = ()
public let var_1730897913257_384: Byte = UInt8(160)
public let var_1730897913257_412: Range<Int8> = ((Int8(Int8(-31)) & 127)..(Int8(Int8(-5)) & 127) : (Int64(-96) | 1))
var var_1730897913257_463: UInt8 = UInt8(UInt8(Int8(112)))
var var_1730897913257_503: Int16 = Int16(UInt8(230))
public var var_1730897913257_511: Bool = (Int64(-40) is Bool)
let var_1730897913257_521: Class_1730897913257_481 = Class_1730897913257_481()
public let var_1730897913257_526: ?UInt32 = Option<UInt32>.None
internal var var_1730897913257_549: Range<Int32> = ((Int32(Int32(-111)) & 127)..=(Int32(Int32(35)) & 127) : (Int64(-83) |
    1))
internal var var_1730897913257_582: Array<Float32> = [Float32(68.0), Float32(Float32(-126.0)),
    Float32(Float32(Float32(23.0))), Float32(Float32(Float32(-111.0))), Float32(-55.0), Float32(43.0),
    Float32(Float32(-4.0)), Float32(Float32(-82.0)), Float32(Float32(-59.0)), Float32(-38.0)]
public const var_1730897913257_608: UInt = 44
internal const var_1730897913257_670: Int = -79
@Deprecated
internal let var_1730897913257_680: Class_1730897913257_676 = Class_1730897913257_676()
let var_1730897913257_720: ?(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, 
    Rune, Unit) = (VArray<Int64, $1>(repeat: Int64(UInt64(Int32(123)))) as (UInt16, Float32, Array<UInt64>, 
    Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit))
public let var_1730897913257_916: Range<UInt32> = ((UInt32(UInt32(Int8(Int8(22)))) & 127)..=(UInt32(UInt32(Int32(-100))) &
    127) : (Int64(Int8(37)) | 1))

public sealed interface Interface_1730897913257_21 {}

public sealed interface Interface_1730897913257_22 {
    func func_1730897913257_27(param_1730897913257_28: Range<UInt8>): Array<Unit> { // block id: 29
        var var_1730897913257_37: Struct_1730897913257_33 = Struct_1730897913257_33();
        var_1730897913257_37.var_1730897913257_40[4];
        [(), (), (), (), (), (), (), (), (), ()]
    };

    @Frozen
    static func func_1730897913257_474(namedParam_1730897913257_475!: VArray<UInt64, $7>,
        namedParam_1730897913257_476!: Range<Int8>, namedParam_1730897913257_477!: UInt64,
        namedParam_1730897913257_478!: Int32): Range<Int8> { // block id: 479
        let var_1730897913257_565: Rune = r'i';
        const var_1730897913257_576: Rune = r'9';
        func func_1730897913257_485(
            optionalParam_1730897913257_486!: (Range<UInt64>) -> VArray<Int64, $1> = func_1730897913257_72,
            optionalParam_1730897913257_490!: Float32 = Float32(Float32(Float32(Float32(59.0)))),
            namedParam_1730897913257_495!: Array<Unit>, optionalParam_1730897913257_496!: Rune = r'p'): Class_1730897913257_481 { // block id: 498
            var var_1730897913257_516: Range<Int16> = ((Int16(Int16(84)) & 127)..=(Int16(Int16(46)) & 127) : (Int64(-69) |
                1));
            var var_1730897913257_546: Range<Int32> = ((Int32(Int32(-128)) & 127)..(Int32(Int32(89)) & 127) : (Int64(-15) |
                1));
            try { // block id: 500
                var_1730897913257_503 |= Int16(-73)
                try { // block id: 508
                    var_1730897913257_511 &&= var_1730897913257_118
                    var_1730897913257_516;
                    Class_1730897913257_481()
                } finally { // block id: 519
                    var_1730897913257_521
                }
            } finally { // block id: 523
                var var_1730897913257_553: UInt16 = UInt16(UInt16(220));
                match (var_1730897913257_526) {
                    case caseVar_1730897913257_530 =>
                        ();
                        var_1730897913257_511 &&= true

                    case _: Rune => ()

                    case _ =>
                        if (true) {
                            var_1730897913257_546
                        } else {
                            var_1730897913257_549
                        };
                        var_1730897913257_553--
                };
                match (r't') {
                    case _ =>
                        let var_1730897913257_562: Float32 = Float32(60.0);
                        var_1730897913257_562;
                        var_1730897913257_565

                    case _ =>
                        var var_1730897913257_572: Int32 = Int32(Int16(18));
                        var_1730897913257_572--;
                        var_1730897913257_576
                };
                Class_1730897913257_481()
            }
        };

        var var_1730897913257_624: UInt16 = UInt16(164);
        func_1730897913257_485(optionalParam_1730897913257_490: var_1730897913257_582[7],
            namedParam_1730897913257_495: match ([var_1730897913257_148, UInt64(168), var_1730897913257_608, UInt64(238),
                var_1730897913257_148, UInt64(52), UInt64(246), UInt64(54), UInt64(50), UInt64(14)]) {
                case caseVar_1730897913257_619 =>
                    var_1730897913257_300;
                    var_1730897913257_624++;
                    [(), (), (), (), (), (), (), (), (), ()]

                case _: Rune =>
                    var var_1730897913257_632: Int32 = Int32(Int32(Int32(UInt8(Int8(-54)))));
                    var_1730897913257_632 %= ((var_1730897913257_632) | 1)
                    [(), var_1730897913257_300, var_1730897913257_300, (), var_1730897913257_300, (),
                        var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, var_1730897913257_300]

                case _ =>
                    var var_1730897913257_656: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    if (false) {
                        var_1730897913257_656
                    } else {
                        [(), (), (), (), (), (), (), (), (), ()]
                    }

                case caseVar_1730897913257_661 => [(), (), (), (), (), (), (), (), (), ()]

                case _ =>
                    ((Int64(Int64(-64)) & 127)..(Int64(var_1730897913257_670) & 127) : (Int64(92) | 1));
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
            }, optionalParam_1730897913257_496: var_1730897913257_680.var_1730897913257_683).var_1730897913257_693;
        let var_1730897913257_732: UInt32 = UInt32(Int16(UInt8(Int8(-98))));
        let var_1730897913257_854: (Enum_1730897913257_188, (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, 
            Range<Int8>, Array<UInt64>, Bool, Rune, Unit), Enum_1730897913257_420) = (Enum_1730897913257_188
                .enumValue_1730897913257_191(Float32(-41.0)), (UInt16(126), Float32(Float32(Float32(60.0))), [UInt64(23),
                    UInt64(118), UInt64(223), UInt64(126), UInt64(99), UInt64(234), UInt64(47), UInt64(4), UInt64(106),
                    UInt64(199)], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-80.0)), ((Int8(Int8(UInt8(207))) &
                    127)..(Int8(Int8(Int8(91))) & 127) : (Int64(-67) | 1)), [UInt64(Int32(-39)), UInt64(UInt16(6)),
                    UInt64(0), UInt64(Int64(-91)), UInt64(UInt16(72)), UInt64(Int16(-77)), UInt64(28),
                    UInt64(UInt8(127)), UInt64(Int8(20)), UInt64(UInt32(112))], false, r't', ()),
            Enum_1730897913257_420.enumValue_1730897913257_425(Int16(UInt8(26))));
        (if (true) { // block id: 714
            var var_1730897913257_717: Bool = true;
            if (var_1730897913257_717) {
                var_1730897913257_720
            } else {
                var_1730897913257_720
            }
        } else if (var_1730897913257_118) { // block id: 728
            ();
            Option<UInt32>.Some(var_1730897913257_732);
            var var_1730897913257_739: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(Int8(Int8(Int8(7)))), Float32(Float32(-28.0)), [UInt64(Int64(-60)),
                    UInt64(131), UInt64(Int8(92)), UInt64(UInt32(UInt32(244))), UInt64(Int32(Int8(-101))),
                    UInt64(Int8(Int8(-27))), UInt64(Int32(Int32(-5))), UInt64(Int8(-114)), UInt64(104),
                    UInt64(UInt32(170))], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-124.0)), ((Int8(Int8(18)) &
                    127)..=(Int8(Int8(-105)) & 127) : (Int64(UInt8(Int8(-92))) | 1)), [UInt64(114), UInt64(117),
                    UInt64(180), UInt64(49), UInt64(4), UInt64(70), UInt64(161), UInt64(207), UInt64(189), UInt64(201)],
                (UInt16(Int8(-35)) is Array<Unit>), r'L', ());
            Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit)>
                .Some(var_1730897913257_739)
        } else { // block id: 784
            var_1730897913257_300;
            var var_1730897913257_790: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(97), Float32(Float32(-21.0)), [UInt64(Int16(31)), UInt64(Int8(-6)),
                    UInt64(Int32(63)), UInt64(217), UInt64(190), UInt64(209), UInt64(86), UInt64(UInt64(158)),
                    UInt64(UInt16(Int16(84))), UInt64(Int16(3))], Enum_1730897913257_188.enumValue_1730897913257_191(
                    Float32(-89.0)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-69)) & 127) : (Int64(Int32(Int8(-1))) | 1)),
                [UInt64(UInt16(UInt16(163))), UInt64(33), UInt64(223), UInt64(UInt64(Int64(14))), UInt64(UInt64(243)),
                    UInt64(Int32(Int32(82))), UInt64(133), UInt64(78), UInt64(UInt16(147)), UInt64(Int64(-73))], (((Int64(Int64(Int64(-18))) &
                    127)..=(Int64(Int64(UInt32(109))) & 127) : (Int64(-50) | 1)) is Bool), r'2', ());
            if (false) {
                Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, 
                        Unit)>.Some(var_1730897913257_790)
            } else {
                var_1730897913257_720
            }
        } ?? var_1730897913257_854[1])[4]
    }
}

public sealed interface Interface_1730897913257_20<T0> <: Interface_1730897913257_21 & Interface_1730897913257_22 {
    func func_1730897913257_27(param_1730897913257_28: Range<UInt8>): Array<Unit> { // block id: 29
        var var_1730897913257_37: Struct_1730897913257_33 = Struct_1730897913257_33();
        var_1730897913257_37.var_1730897913257_40[4];
        [(), (), (), (), (), (), (), (), (), ()]
    };

    static func func_1730897913257_474(namedParam_1730897913257_475!: VArray<UInt64, $7>,
        namedParam_1730897913257_476!: Range<Int8>, namedParam_1730897913257_477!: UInt64,
        namedParam_1730897913257_478!: Int32): Range<Int8> { // block id: 479
        let var_1730897913257_565: Rune = r'i';
        const var_1730897913257_576: Rune = r'9';
        func func_1730897913257_485(
            optionalParam_1730897913257_486!: (Range<UInt64>) -> VArray<Int64, $1> = func_1730897913257_72,
            optionalParam_1730897913257_490!: Float32 = Float32(Float32(Float32(Float32(59.0)))),
            namedParam_1730897913257_495!: Array<Unit>, optionalParam_1730897913257_496!: Rune = r'p'): Class_1730897913257_481 { // block id: 498
            var var_1730897913257_516: Range<Int16> = ((Int16(Int16(84)) & 127)..=(Int16(Int16(46)) & 127) : (Int64(-69) |
                1));
            var var_1730897913257_546: Range<Int32> = ((Int32(Int32(-128)) & 127)..(Int32(Int32(89)) & 127) : (Int64(-15) |
                1));
            try { // block id: 500
                var_1730897913257_503 |= Int16(-73)
                try { // block id: 508
                    var_1730897913257_511 &&= var_1730897913257_118
                    var_1730897913257_516;
                    Class_1730897913257_481()
                } finally { // block id: 519
                    var_1730897913257_521
                }
            } finally { // block id: 523
                var var_1730897913257_553: UInt16 = UInt16(UInt16(220));
                match (var_1730897913257_526) {
                    case caseVar_1730897913257_530 =>
                        ();
                        var_1730897913257_511 &&= true

                    case _: Rune => ()

                    case _ =>
                        if (true) {
                            var_1730897913257_546
                        } else {
                            var_1730897913257_549
                        };
                        var_1730897913257_553--
                };
                match (r't') {
                    case _ =>
                        let var_1730897913257_562: Float32 = Float32(60.0);
                        var_1730897913257_562;
                        var_1730897913257_565

                    case _ =>
                        var var_1730897913257_572: Int32 = Int32(Int16(18));
                        var_1730897913257_572--;
                        var_1730897913257_576
                };
                Class_1730897913257_481()
            }
        };

        var var_1730897913257_624: UInt16 = UInt16(164);
        func_1730897913257_485(optionalParam_1730897913257_490: var_1730897913257_582[7],
            namedParam_1730897913257_495: match ([var_1730897913257_148, UInt64(168), var_1730897913257_608, UInt64(238),
                var_1730897913257_148, UInt64(52), UInt64(246), UInt64(54), UInt64(50), UInt64(14)]) {
                case caseVar_1730897913257_619 =>
                    var_1730897913257_300;
                    var_1730897913257_624++;
                    [(), (), (), (), (), (), (), (), (), ()]

                case _: Rune =>
                    var var_1730897913257_632: Int32 = Int32(Int32(Int32(UInt8(Int8(-54)))));
                    var_1730897913257_632 %= ((var_1730897913257_632) | 1)
                    [(), var_1730897913257_300, var_1730897913257_300, (), var_1730897913257_300, (),
                        var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, var_1730897913257_300]

                case _ =>
                    var var_1730897913257_656: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    if (false) {
                        var_1730897913257_656
                    } else {
                        [(), (), (), (), (), (), (), (), (), ()]
                    }

                case caseVar_1730897913257_661 => [(), (), (), (), (), (), (), (), (), ()]

                case _ =>
                    ((Int64(Int64(-64)) & 127)..(Int64(var_1730897913257_670) & 127) : (Int64(92) | 1));
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
            }, optionalParam_1730897913257_496: var_1730897913257_680.var_1730897913257_683).var_1730897913257_693;
        let var_1730897913257_732: UInt32 = UInt32(Int16(UInt8(Int8(-98))));
        let var_1730897913257_854: (Enum_1730897913257_188, (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, 
            Range<Int8>, Array<UInt64>, Bool, Rune, Unit), Enum_1730897913257_420) = (Enum_1730897913257_188
                .enumValue_1730897913257_191(Float32(-41.0)), (UInt16(126), Float32(Float32(Float32(60.0))), [UInt64(23),
                    UInt64(118), UInt64(223), UInt64(126), UInt64(99), UInt64(234), UInt64(47), UInt64(4), UInt64(106),
                    UInt64(199)], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-80.0)), ((Int8(Int8(UInt8(207))) &
                    127)..(Int8(Int8(Int8(91))) & 127) : (Int64(-67) | 1)), [UInt64(Int32(-39)), UInt64(UInt16(6)),
                    UInt64(0), UInt64(Int64(-91)), UInt64(UInt16(72)), UInt64(Int16(-77)), UInt64(28),
                    UInt64(UInt8(127)), UInt64(Int8(20)), UInt64(UInt32(112))], false, r't', ()),
            Enum_1730897913257_420.enumValue_1730897913257_425(Int16(UInt8(26))));
        (if (true) { // block id: 714
            var var_1730897913257_717: Bool = true;
            if (var_1730897913257_717) {
                var_1730897913257_720
            } else {
                var_1730897913257_720
            }
        } else if (var_1730897913257_118) { // block id: 728
            ();
            Option<UInt32>.Some(var_1730897913257_732);
            var var_1730897913257_739: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(Int8(Int8(Int8(7)))), Float32(Float32(-28.0)), [UInt64(Int64(-60)),
                    UInt64(131), UInt64(Int8(92)), UInt64(UInt32(UInt32(244))), UInt64(Int32(Int8(-101))),
                    UInt64(Int8(Int8(-27))), UInt64(Int32(Int32(-5))), UInt64(Int8(-114)), UInt64(104),
                    UInt64(UInt32(170))], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-124.0)), ((Int8(Int8(18)) &
                    127)..=(Int8(Int8(-105)) & 127) : (Int64(UInt8(Int8(-92))) | 1)), [UInt64(114), UInt64(117),
                    UInt64(180), UInt64(49), UInt64(4), UInt64(70), UInt64(161), UInt64(207), UInt64(189), UInt64(201)],
                (UInt16(Int8(-35)) is Array<Unit>), r'L', ());
            Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit)>
                .Some(var_1730897913257_739)
        } else { // block id: 784
            var_1730897913257_300;
            var var_1730897913257_790: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(97), Float32(Float32(-21.0)), [UInt64(Int16(31)), UInt64(Int8(-6)),
                    UInt64(Int32(63)), UInt64(217), UInt64(190), UInt64(209), UInt64(86), UInt64(UInt64(158)),
                    UInt64(UInt16(Int16(84))), UInt64(Int16(3))], Enum_1730897913257_188.enumValue_1730897913257_191(
                    Float32(-89.0)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-69)) & 127) : (Int64(Int32(Int8(-1))) | 1)),
                [UInt64(UInt16(UInt16(163))), UInt64(33), UInt64(223), UInt64(UInt64(Int64(14))), UInt64(UInt64(243)),
                    UInt64(Int32(Int32(82))), UInt64(133), UInt64(78), UInt64(UInt16(147)), UInt64(Int64(-73))], (((Int64(Int64(Int64(-18))) &
                    127)..=(Int64(Int64(UInt32(109))) & 127) : (Int64(-50) | 1)) is Bool), r'2', ());
            if (false) {
                Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, 
                        Unit)>.Some(var_1730897913257_790)
            } else {
                var_1730897913257_720
            }
        } ?? var_1730897913257_854[1])[4]
    }
}

@Deprecated
public open class Class_1730897913257_17 <: Interface_1730897913257_20<Range<UInt32>> & Resource {
    public init() { // block id: 19

    }

    @Frozen
    public static prop var_1730897913257_78: VArray<Int64, $1> { // block id: 79
        get() { // block id: 81
            ((UInt64(UInt64(38)) & 127)..(UInt64(UInt64(4)) & 127) : (Int64(126) | 1));
            VArray<Int64, $1>(repeat: Int64(Int64(14)))
        }
    }

    @Frozen
    mut prop var_1730897913257_693: Unit { // block id: 694
        get() { // block id: 696
            [(), (), (), (), (), (), (), (), (), ()];
            ()
        }
        set(Value) { // block id: 701
            ();
            ();
            ()
        }
    }
    public open override func func_1730897913257_27(param_1730897913257_28: Range<UInt8>): Array<Unit> { // block id: 29
        var var_1730897913257_37: Struct_1730897913257_33 = Struct_1730897913257_33();
        var_1730897913257_37.var_1730897913257_40[4];
        [(), (), (), (), (), (), (), (), (), ()]
    };

    public static func func_1730897913257_474(namedParam_1730897913257_475!: VArray<UInt64, $7>,
        namedParam_1730897913257_476!: Range<Int8>, namedParam_1730897913257_477!: UInt64,
        namedParam_1730897913257_478!: Int32): Range<Int8> { // block id: 479
        let var_1730897913257_565: Rune = r'i';
        const var_1730897913257_576: Rune = r'9';
        func func_1730897913257_485(
            optionalParam_1730897913257_486!: (Range<UInt64>) -> VArray<Int64, $1> = func_1730897913257_72,
            optionalParam_1730897913257_490!: Float32 = Float32(Float32(Float32(Float32(59.0)))),
            namedParam_1730897913257_495!: Array<Unit>, optionalParam_1730897913257_496!: Rune = r'p'): Class_1730897913257_481 { // block id: 498
            var var_1730897913257_516: Range<Int16> = ((Int16(Int16(84)) & 127)..=(Int16(Int16(46)) & 127) : (Int64(-69) |
                1));
            var var_1730897913257_546: Range<Int32> = ((Int32(Int32(-128)) & 127)..(Int32(Int32(89)) & 127) : (Int64(-15) |
                1));
            try { // block id: 500
                var_1730897913257_503 |= Int16(-73)
                try { // block id: 508
                    var_1730897913257_511 &&= var_1730897913257_118
                    var_1730897913257_516;
                    Class_1730897913257_481()
                } finally { // block id: 519
                    var_1730897913257_521
                }
            } finally { // block id: 523
                var var_1730897913257_553: UInt16 = UInt16(UInt16(220));
                match (var_1730897913257_526) {
                    case caseVar_1730897913257_530 =>
                        ();
                        var_1730897913257_511 &&= true

                    case _: Rune => ()

                    case _ =>
                        if (true) {
                            var_1730897913257_546
                        } else {
                            var_1730897913257_549
                        };
                        var_1730897913257_553--
                };
                match (r't') {
                    case _ =>
                        let var_1730897913257_562: Float32 = Float32(60.0);
                        var_1730897913257_562;
                        var_1730897913257_565

                    case _ =>
                        var var_1730897913257_572: Int32 = Int32(Int16(18));
                        var_1730897913257_572--;
                        var_1730897913257_576
                };
                Class_1730897913257_481()
            }
        };

        var var_1730897913257_624: UInt16 = UInt16(164);
        func_1730897913257_485(optionalParam_1730897913257_490: var_1730897913257_582[7],
            namedParam_1730897913257_495: match ([var_1730897913257_148, UInt64(168), var_1730897913257_608, UInt64(238),
                var_1730897913257_148, UInt64(52), UInt64(246), UInt64(54), UInt64(50), UInt64(14)]) {
                case caseVar_1730897913257_619 =>
                    var_1730897913257_300;
                    var_1730897913257_624++;
                    [(), (), (), (), (), (), (), (), (), ()]

                case _: Rune =>
                    var var_1730897913257_632: Int32 = Int32(Int32(Int32(UInt8(Int8(-54)))));
                    var_1730897913257_632 %= ((var_1730897913257_632) | 1)
                    [(), var_1730897913257_300, var_1730897913257_300, (), var_1730897913257_300, (),
                        var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, var_1730897913257_300]

                case _ =>
                    var var_1730897913257_656: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    if (false) {
                        var_1730897913257_656
                    } else {
                        [(), (), (), (), (), (), (), (), (), ()]
                    }

                case caseVar_1730897913257_661 => [(), (), (), (), (), (), (), (), (), ()]

                case _ =>
                    ((Int64(Int64(-64)) & 127)..(Int64(var_1730897913257_670) & 127) : (Int64(92) | 1));
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
            }, optionalParam_1730897913257_496: var_1730897913257_680.var_1730897913257_683).var_1730897913257_693;
        let var_1730897913257_732: UInt32 = UInt32(Int16(UInt8(Int8(-98))));
        let var_1730897913257_854: (Enum_1730897913257_188, (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, 
            Range<Int8>, Array<UInt64>, Bool, Rune, Unit), Enum_1730897913257_420) = (Enum_1730897913257_188
                .enumValue_1730897913257_191(Float32(-41.0)), (UInt16(126), Float32(Float32(Float32(60.0))), [UInt64(23),
                    UInt64(118), UInt64(223), UInt64(126), UInt64(99), UInt64(234), UInt64(47), UInt64(4), UInt64(106),
                    UInt64(199)], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-80.0)), ((Int8(Int8(UInt8(207))) &
                    127)..(Int8(Int8(Int8(91))) & 127) : (Int64(-67) | 1)), [UInt64(Int32(-39)), UInt64(UInt16(6)),
                    UInt64(0), UInt64(Int64(-91)), UInt64(UInt16(72)), UInt64(Int16(-77)), UInt64(28),
                    UInt64(UInt8(127)), UInt64(Int8(20)), UInt64(UInt32(112))], false, r't', ()),
            Enum_1730897913257_420.enumValue_1730897913257_425(Int16(UInt8(26))));
        (if (true) { // block id: 714
            var var_1730897913257_717: Bool = true;
            if (var_1730897913257_717) {
                var_1730897913257_720
            } else {
                var_1730897913257_720
            }
        } else if (var_1730897913257_118) { // block id: 728
            ();
            Option<UInt32>.Some(var_1730897913257_732);
            var var_1730897913257_739: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(Int8(Int8(Int8(7)))), Float32(Float32(-28.0)), [UInt64(Int64(-60)),
                    UInt64(131), UInt64(Int8(92)), UInt64(UInt32(UInt32(244))), UInt64(Int32(Int8(-101))),
                    UInt64(Int8(Int8(-27))), UInt64(Int32(Int32(-5))), UInt64(Int8(-114)), UInt64(104),
                    UInt64(UInt32(170))], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-124.0)), ((Int8(Int8(18)) &
                    127)..=(Int8(Int8(-105)) & 127) : (Int64(UInt8(Int8(-92))) | 1)), [UInt64(114), UInt64(117),
                    UInt64(180), UInt64(49), UInt64(4), UInt64(70), UInt64(161), UInt64(207), UInt64(189), UInt64(201)],
                (UInt16(Int8(-35)) is Array<Unit>), r'L', ());
            Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit)>
                .Some(var_1730897913257_739)
        } else { // block id: 784
            var_1730897913257_300;
            var var_1730897913257_790: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(97), Float32(Float32(-21.0)), [UInt64(Int16(31)), UInt64(Int8(-6)),
                    UInt64(Int32(63)), UInt64(217), UInt64(190), UInt64(209), UInt64(86), UInt64(UInt64(158)),
                    UInt64(UInt16(Int16(84))), UInt64(Int16(3))], Enum_1730897913257_188.enumValue_1730897913257_191(
                    Float32(-89.0)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-69)) & 127) : (Int64(Int32(Int8(-1))) | 1)),
                [UInt64(UInt16(UInt16(163))), UInt64(33), UInt64(223), UInt64(UInt64(Int64(14))), UInt64(UInt64(243)),
                    UInt64(Int32(Int32(82))), UInt64(133), UInt64(78), UInt64(UInt16(147)), UInt64(Int64(-73))], (((Int64(Int64(Int64(-18))) &
                    127)..=(Int64(Int64(UInt32(109))) & 127) : (Int64(-50) | 1)) is Bool), r'2', ());
            if (false) {
                Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, 
                        Unit)>.Some(var_1730897913257_790)
            } else {
                var_1730897913257_720
            }
        } ?? var_1730897913257_854[1])[4]
    }

    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Deprecated
public struct Struct_1730897913257_33 {
    @Frozen
    public init() { // block id: 35

    }

    @Frozen
    public mut prop var_1730897913257_40: (UInt16, Float32, Rune, Range<Int64>, Rune, Rune, UInt8) { // block id: 41
        get() { // block id: 43
            ();
            (UInt16(UInt16(Int8(7))), Float32(105.0), r'f', ((Int64(Int64(27)) & 127)..(Int64(Int64(-49)) & 127) : (Int64(76) |
                    1)), r'A', r'J', UInt8(UInt8(220)));
            var_1730897913257_927
        }
        set(Value) { // block id: 61
            ();
            var_1730897913257_927 = Value
        }
    }
    mut prop var_1730897913257_927: (UInt16, Float32, Rune, Range<Int64>, Rune, Rune, UInt8) { // block id: 928
        get() { // block id: 930
            ();
            VArray<UInt64, $7>(repeat: UInt64(UInt8(109)));
            (UInt16(70), Float32(Float32(74.0)), r'w', ((Int64(Int64(-112)) & 127)..(Int64(Int64(-76)) & 127) : (Int64(28) |
                    1)), r'g', r'8', UInt8(UInt8(85)))
        }
        set(Value) { // block id: 960
            (UInt16(224), Float32(Float32(117.0)), r'w', ((Int64(Int64(61)) & 127)..(Int64(Int64(25)) & 127) : (Int64(-58) |
                    1)), r'y', r'c', UInt8(198));
            ()
        }
    }
}

public func func_1730897913257_72(param_1730897913257_73: Range<UInt64>): VArray<Int64, $1> { // block id: 74
    Class_1730897913257_17.var_1730897913257_78
}

public enum Enum_1730897913257_188 {
    defaultValue
    | enumValue_1730897913257_191(Float32)
}

public struct Struct_1730897913257_282 {
    @Frozen
    public init() { // block id: 284

    }

    var var_1730897913257_289: UInt64 = UInt64(217);
    var var_1730897913257_296: Bool = false
}

public enum Enum_1730897913257_334 {
    defaultValue
    | enumValue_1730897913257_339
}

public enum Enum_1730897913257_420 {
    defaultValue
    | enumValue_1730897913257_425(Int16)
}

public open class Class_1730897913257_481 <: Class_1730897913257_17 {
    @Frozen
    public init() { // block id: 483

    }

    public open override func func_1730897913257_27(param_1730897913257_28: Range<UInt8>): Array<Unit> { // block id: 29
        var var_1730897913257_37: Struct_1730897913257_33 = Struct_1730897913257_33();
        var_1730897913257_37.var_1730897913257_40[4];
        [(), (), (), (), (), (), (), (), (), ()]
    };

    public static func func_1730897913257_474(namedParam_1730897913257_475!: VArray<UInt64, $7>,
        namedParam_1730897913257_476!: Range<Int8>, namedParam_1730897913257_477!: UInt64,
        namedParam_1730897913257_478!: Int32): Range<Int8> { // block id: 479
        let var_1730897913257_565: Rune = r'i';
        const var_1730897913257_576: Rune = r'9';
        func func_1730897913257_485(
            optionalParam_1730897913257_486!: (Range<UInt64>) -> VArray<Int64, $1> = func_1730897913257_72,
            optionalParam_1730897913257_490!: Float32 = Float32(Float32(Float32(Float32(59.0)))),
            namedParam_1730897913257_495!: Array<Unit>, optionalParam_1730897913257_496!: Rune = r'p'): Class_1730897913257_481 { // block id: 498
            var var_1730897913257_516: Range<Int16> = ((Int16(Int16(84)) & 127)..=(Int16(Int16(46)) & 127) : (Int64(-69) |
                1));
            var var_1730897913257_546: Range<Int32> = ((Int32(Int32(-128)) & 127)..(Int32(Int32(89)) & 127) : (Int64(-15) |
                1));
            try { // block id: 500
                var_1730897913257_503 |= Int16(-73)
                try { // block id: 508
                    var_1730897913257_511 &&= var_1730897913257_118
                    var_1730897913257_516;
                    Class_1730897913257_481()
                } finally { // block id: 519
                    var_1730897913257_521
                }
            } finally { // block id: 523
                var var_1730897913257_553: UInt16 = UInt16(UInt16(220));
                match (var_1730897913257_526) {
                    case caseVar_1730897913257_530 =>
                        ();
                        var_1730897913257_511 &&= true

                    case _: Rune => ()

                    case _ =>
                        if (true) {
                            var_1730897913257_546
                        } else {
                            var_1730897913257_549
                        };
                        var_1730897913257_553--
                };
                match (r't') {
                    case _ =>
                        let var_1730897913257_562: Float32 = Float32(60.0);
                        var_1730897913257_562;
                        var_1730897913257_565

                    case _ =>
                        var var_1730897913257_572: Int32 = Int32(Int16(18));
                        var_1730897913257_572--;
                        var_1730897913257_576
                };
                Class_1730897913257_481()
            }
        };

        var var_1730897913257_624: UInt16 = UInt16(164);
        func_1730897913257_485(optionalParam_1730897913257_490: var_1730897913257_582[7],
            namedParam_1730897913257_495: match ([var_1730897913257_148, UInt64(168), var_1730897913257_608, UInt64(238),
                var_1730897913257_148, UInt64(52), UInt64(246), UInt64(54), UInt64(50), UInt64(14)]) {
                case caseVar_1730897913257_619 =>
                    var_1730897913257_300;
                    var_1730897913257_624++;
                    [(), (), (), (), (), (), (), (), (), ()]

                case _: Rune =>
                    var var_1730897913257_632: Int32 = Int32(Int32(Int32(UInt8(Int8(-54)))));
                    var_1730897913257_632 %= ((var_1730897913257_632) | 1)
                    [(), var_1730897913257_300, var_1730897913257_300, (), var_1730897913257_300, (),
                        var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, var_1730897913257_300]

                case _ =>
                    var var_1730897913257_656: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    if (false) {
                        var_1730897913257_656
                    } else {
                        [(), (), (), (), (), (), (), (), (), ()]
                    }

                case caseVar_1730897913257_661 => [(), (), (), (), (), (), (), (), (), ()]

                case _ =>
                    ((Int64(Int64(-64)) & 127)..(Int64(var_1730897913257_670) & 127) : (Int64(92) | 1));
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
            }, optionalParam_1730897913257_496: var_1730897913257_680.var_1730897913257_683).var_1730897913257_693;
        let var_1730897913257_732: UInt32 = UInt32(Int16(UInt8(Int8(-98))));
        let var_1730897913257_854: (Enum_1730897913257_188, (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, 
            Range<Int8>, Array<UInt64>, Bool, Rune, Unit), Enum_1730897913257_420) = (Enum_1730897913257_188
                .enumValue_1730897913257_191(Float32(-41.0)), (UInt16(126), Float32(Float32(Float32(60.0))), [UInt64(23),
                    UInt64(118), UInt64(223), UInt64(126), UInt64(99), UInt64(234), UInt64(47), UInt64(4), UInt64(106),
                    UInt64(199)], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-80.0)), ((Int8(Int8(UInt8(207))) &
                    127)..(Int8(Int8(Int8(91))) & 127) : (Int64(-67) | 1)), [UInt64(Int32(-39)), UInt64(UInt16(6)),
                    UInt64(0), UInt64(Int64(-91)), UInt64(UInt16(72)), UInt64(Int16(-77)), UInt64(28),
                    UInt64(UInt8(127)), UInt64(Int8(20)), UInt64(UInt32(112))], false, r't', ()),
            Enum_1730897913257_420.enumValue_1730897913257_425(Int16(UInt8(26))));
        (if (true) { // block id: 714
            var var_1730897913257_717: Bool = true;
            if (var_1730897913257_717) {
                var_1730897913257_720
            } else {
                var_1730897913257_720
            }
        } else if (var_1730897913257_118) { // block id: 728
            ();
            Option<UInt32>.Some(var_1730897913257_732);
            var var_1730897913257_739: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(Int8(Int8(Int8(7)))), Float32(Float32(-28.0)), [UInt64(Int64(-60)),
                    UInt64(131), UInt64(Int8(92)), UInt64(UInt32(UInt32(244))), UInt64(Int32(Int8(-101))),
                    UInt64(Int8(Int8(-27))), UInt64(Int32(Int32(-5))), UInt64(Int8(-114)), UInt64(104),
                    UInt64(UInt32(170))], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-124.0)), ((Int8(Int8(18)) &
                    127)..=(Int8(Int8(-105)) & 127) : (Int64(UInt8(Int8(-92))) | 1)), [UInt64(114), UInt64(117),
                    UInt64(180), UInt64(49), UInt64(4), UInt64(70), UInt64(161), UInt64(207), UInt64(189), UInt64(201)],
                (UInt16(Int8(-35)) is Array<Unit>), r'L', ());
            Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit)>
                .Some(var_1730897913257_739)
        } else { // block id: 784
            var_1730897913257_300;
            var var_1730897913257_790: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(97), Float32(Float32(-21.0)), [UInt64(Int16(31)), UInt64(Int8(-6)),
                    UInt64(Int32(63)), UInt64(217), UInt64(190), UInt64(209), UInt64(86), UInt64(UInt64(158)),
                    UInt64(UInt16(Int16(84))), UInt64(Int16(3))], Enum_1730897913257_188.enumValue_1730897913257_191(
                    Float32(-89.0)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-69)) & 127) : (Int64(Int32(Int8(-1))) | 1)),
                [UInt64(UInt16(UInt16(163))), UInt64(33), UInt64(223), UInt64(UInt64(Int64(14))), UInt64(UInt64(243)),
                    UInt64(Int32(Int32(82))), UInt64(133), UInt64(78), UInt64(UInt16(147)), UInt64(Int64(-73))], (((Int64(Int64(Int64(-18))) &
                    127)..=(Int64(Int64(UInt32(109))) & 127) : (Int64(-50) | 1)) is Bool), r'2', ());
            if (false) {
                Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, 
                        Unit)>.Some(var_1730897913257_790)
            } else {
                var_1730897913257_720
            }
        } ?? var_1730897913257_854[1])[4]
    }
}

@Deprecated
public open class Class_1730897913257_676 <: Class_1730897913257_481 {
    public init() { // block id: 678

    }

    @Frozen
    mut prop var_1730897913257_683: Rune { // block id: 684
        get() { // block id: 686
            r'j'
        }
        set(Value) { // block id: 690
            ()
        }
    }
    public open override func func_1730897913257_27(param_1730897913257_28: Range<UInt8>): Array<Unit> { // block id: 29
        var var_1730897913257_37: Struct_1730897913257_33 = Struct_1730897913257_33();
        var_1730897913257_37.var_1730897913257_40[4];
        [(), (), (), (), (), (), (), (), (), ()]
    };

    public static func func_1730897913257_474(namedParam_1730897913257_475!: VArray<UInt64, $7>,
        namedParam_1730897913257_476!: Range<Int8>, namedParam_1730897913257_477!: UInt64,
        namedParam_1730897913257_478!: Int32): Range<Int8> { // block id: 479
        let var_1730897913257_565: Rune = r'i';
        const var_1730897913257_576: Rune = r'9';
        func func_1730897913257_485(
            optionalParam_1730897913257_486!: (Range<UInt64>) -> VArray<Int64, $1> = func_1730897913257_72,
            optionalParam_1730897913257_490!: Float32 = Float32(Float32(Float32(Float32(59.0)))),
            namedParam_1730897913257_495!: Array<Unit>, optionalParam_1730897913257_496!: Rune = r'p'): Class_1730897913257_481 { // block id: 498
            var var_1730897913257_516: Range<Int16> = ((Int16(Int16(84)) & 127)..=(Int16(Int16(46)) & 127) : (Int64(-69) |
                1));
            var var_1730897913257_546: Range<Int32> = ((Int32(Int32(-128)) & 127)..(Int32(Int32(89)) & 127) : (Int64(-15) |
                1));
            try { // block id: 500
                var_1730897913257_503 |= Int16(-73)
                try { // block id: 508
                    var_1730897913257_511 &&= var_1730897913257_118
                    var_1730897913257_516;
                    Class_1730897913257_481()
                } finally { // block id: 519
                    var_1730897913257_521
                }
            } finally { // block id: 523
                var var_1730897913257_553: UInt16 = UInt16(UInt16(220));
                match (var_1730897913257_526) {
                    case caseVar_1730897913257_530 =>
                        ();
                        var_1730897913257_511 &&= true

                    case _: Rune => ()

                    case _ =>
                        if (true) {
                            var_1730897913257_546
                        } else {
                            var_1730897913257_549
                        };
                        var_1730897913257_553--
                };
                match (r't') {
                    case _ =>
                        let var_1730897913257_562: Float32 = Float32(60.0);
                        var_1730897913257_562;
                        var_1730897913257_565

                    case _ =>
                        var var_1730897913257_572: Int32 = Int32(Int16(18));
                        var_1730897913257_572--;
                        var_1730897913257_576
                };
                Class_1730897913257_481()
            }
        };

        var var_1730897913257_624: UInt16 = UInt16(164);
        func_1730897913257_485(optionalParam_1730897913257_490: var_1730897913257_582[7],
            namedParam_1730897913257_495: match ([var_1730897913257_148, UInt64(168), var_1730897913257_608, UInt64(238),
                var_1730897913257_148, UInt64(52), UInt64(246), UInt64(54), UInt64(50), UInt64(14)]) {
                case caseVar_1730897913257_619 =>
                    var_1730897913257_300;
                    var_1730897913257_624++;
                    [(), (), (), (), (), (), (), (), (), ()]

                case _: Rune =>
                    var var_1730897913257_632: Int32 = Int32(Int32(Int32(UInt8(Int8(-54)))));
                    var_1730897913257_632 %= ((var_1730897913257_632) | 1)
                    [(), var_1730897913257_300, var_1730897913257_300, (), var_1730897913257_300, (),
                        var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, var_1730897913257_300]

                case _ =>
                    var var_1730897913257_656: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    if (false) {
                        var_1730897913257_656
                    } else {
                        [(), (), (), (), (), (), (), (), (), ()]
                    }

                case caseVar_1730897913257_661 => [(), (), (), (), (), (), (), (), (), ()]

                case _ =>
                    ((Int64(Int64(-64)) & 127)..(Int64(var_1730897913257_670) & 127) : (Int64(92) | 1));
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
            }, optionalParam_1730897913257_496: var_1730897913257_680.var_1730897913257_683).var_1730897913257_693;
        let var_1730897913257_732: UInt32 = UInt32(Int16(UInt8(Int8(-98))));
        let var_1730897913257_854: (Enum_1730897913257_188, (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, 
            Range<Int8>, Array<UInt64>, Bool, Rune, Unit), Enum_1730897913257_420) = (Enum_1730897913257_188
                .enumValue_1730897913257_191(Float32(-41.0)), (UInt16(126), Float32(Float32(Float32(60.0))), [UInt64(23),
                    UInt64(118), UInt64(223), UInt64(126), UInt64(99), UInt64(234), UInt64(47), UInt64(4), UInt64(106),
                    UInt64(199)], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-80.0)), ((Int8(Int8(UInt8(207))) &
                    127)..(Int8(Int8(Int8(91))) & 127) : (Int64(-67) | 1)), [UInt64(Int32(-39)), UInt64(UInt16(6)),
                    UInt64(0), UInt64(Int64(-91)), UInt64(UInt16(72)), UInt64(Int16(-77)), UInt64(28),
                    UInt64(UInt8(127)), UInt64(Int8(20)), UInt64(UInt32(112))], false, r't', ()),
            Enum_1730897913257_420.enumValue_1730897913257_425(Int16(UInt8(26))));
        (if (true) { // block id: 714
            var var_1730897913257_717: Bool = true;
            if (var_1730897913257_717) {
                var_1730897913257_720
            } else {
                var_1730897913257_720
            }
        } else if (var_1730897913257_118) { // block id: 728
            ();
            Option<UInt32>.Some(var_1730897913257_732);
            var var_1730897913257_739: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(Int8(Int8(Int8(7)))), Float32(Float32(-28.0)), [UInt64(Int64(-60)),
                    UInt64(131), UInt64(Int8(92)), UInt64(UInt32(UInt32(244))), UInt64(Int32(Int8(-101))),
                    UInt64(Int8(Int8(-27))), UInt64(Int32(Int32(-5))), UInt64(Int8(-114)), UInt64(104),
                    UInt64(UInt32(170))], Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-124.0)), ((Int8(Int8(18)) &
                    127)..=(Int8(Int8(-105)) & 127) : (Int64(UInt8(Int8(-92))) | 1)), [UInt64(114), UInt64(117),
                    UInt64(180), UInt64(49), UInt64(4), UInt64(70), UInt64(161), UInt64(207), UInt64(189), UInt64(201)],
                (UInt16(Int8(-35)) is Array<Unit>), r'L', ());
            Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, Unit)>
                .Some(var_1730897913257_739)
        } else { // block id: 784
            var_1730897913257_300;
            var var_1730897913257_790: (UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, 
                Bool, Rune, Unit) = (UInt16(97), Float32(Float32(-21.0)), [UInt64(Int16(31)), UInt64(Int8(-6)),
                    UInt64(Int32(63)), UInt64(217), UInt64(190), UInt64(209), UInt64(86), UInt64(UInt64(158)),
                    UInt64(UInt16(Int16(84))), UInt64(Int16(3))], Enum_1730897913257_188.enumValue_1730897913257_191(
                    Float32(-89.0)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-69)) & 127) : (Int64(Int32(Int8(-1))) | 1)),
                [UInt64(UInt16(UInt16(163))), UInt64(33), UInt64(223), UInt64(UInt64(Int64(14))), UInt64(UInt64(243)),
                    UInt64(Int32(Int32(82))), UInt64(133), UInt64(78), UInt64(UInt16(147)), UInt64(Int64(-73))], (((Int64(Int64(Int64(-18))) &
                    127)..=(Int64(Int64(UInt32(109))) & 127) : (Int64(-50) | 1)) is Bool), r'2', ());
            if (false) {
                Option<(UInt16, Float32, Array<UInt64>, Enum_1730897913257_188, Range<Int8>, Array<UInt64>, Bool, Rune, 
                        Unit)>.Some(var_1730897913257_790)
            } else {
                var_1730897913257_720
            }
        } ?? var_1730897913257_854[1])[4]
    }

    static init() {
    }
}

@Frozen
public func func_1730897913257_97<T0>(param_1730897913257_98: Range<UInt32>): Range<UInt64> where T0 <: Class_1730897913257_17 & Interface_1730897913257_20<Range<UInt32>> { // block id: 99
    var var_1730897913257_122: Range<UInt64> = ((UInt64(UInt64(11)) & 127)..(UInt64(UInt64(113)) & 127) : (Int64(-118) |
        1));
    var var_1730897913257_164: Int64 = Int64(79);
    let var_1730897913257_305: UInt32 = UInt32(UInt32(Int32(Int32(-110))));
    let var_1730897913257_337: Enum_1730897913257_334 = Enum_1730897913257_334.enumValue_1730897913257_339;
    let var_1730897913257_346: Int64 = Int64(34);
    const var_1730897913257_353: String = """
8'/6a
uHlfk
""";
    try { // block id: 101
        let var_1730897913257_109: UInt32 = UInt32(Int8(Int8(UInt8(UInt8(13)))));
        (Option<UInt32>.Some(var_1730897913257_109) ?? var_1730897913257_109);
        var var_1730897913257_128: UInt16 = UInt16(UInt16(93));
        let var_1730897913257_138: Int = Int64(29);
        if (var_1730897913257_118) { // block id: 120
            var_1730897913257_122
        } else if (var_1730897913257_118) { // block id: 125
            var_1730897913257_128 += var_1730897913257_128
            if (false) {
                ((UInt64(UInt64(169)) & 127)..=(UInt64(UInt64(76)) & 127) : (var_1730897913257_138 | 1))
            } else {
                ((UInt64(UInt64(254)) & 127)..=(UInt64(UInt64(230)) & 127) : (Int64(-5) | 1))
            }
        } else { // block id: 144
            ((UInt64(UInt64(178)) & 127)..(UInt64(var_1730897913257_148) & 127) : (Int64(-106) | 1))
        }
    } catch (_) { // block id: 151
        var loopTimeVar_1730897913257_156: Int64 = 0;
        while ((true) && loopTimeVar_1730897913257_156 < 100) {
            loopTimeVar_1730897913257_156++;
        };
        if (false) {
            var_1730897913257_122
        } else {
            ((UInt64(UInt64(218)) & 127)..(UInt64(UInt64(247)) & 127) : (var_1730897913257_164 | 1))
        }
    } finally { // block id: 166
        let var_1730897913257_203: Array<UInt64> = [UInt64(232), UInt64(106), UInt64(101), UInt64(129), UInt64(193),
            UInt64(20), UInt64(104), UInt64(91), UInt64(21), UInt64(170)];
        const var_1730897913257_271: Bool = true;
        func func_1730897913257_168(param_1730897913257_169: String,
            optionalParam_1730897913257_170!: VArray<Int64, $1> = [Int64(-121)],
            optionalParam_1730897913257_172!: Range<UInt8> = ((UInt8(UInt8(Int8(-65))) & 127)..=(UInt8(UInt8(Int8(75))) &
                127) : (Int64(63) | 1))): Int8 { // block id: 179
            var var_1730897913257_194: Float32 = Float32(Float32(Float32(Float32(1.0))));
            var var_1730897913257_263: Int8 = Int8(14);
            if ((((Int32(Int32(14)) & 127)..(Int32(Int32(-12)) & 127) : (Int64(-39) | 1)) is Bool)) { // block id: 186
                let var_1730897913257_237: Int = Int64(-27);
                match (Enum_1730897913257_188.enumValue_1730897913257_191(var_1730897913257_194)) {
                    case enumValue_1730897913257_191(_: Float64) =>
                        var_1730897913257_203;
                        ((Int16(Int16(115)) & 127)..(Int16(Int16(-92)) & 127) : (Int64(62) | 1));
                        let var_1730897913257_216: Int = Int64(-54);
                        if (var_1730897913257_118) {
                            ((UInt64(var_1730897913257_148) & 127)..=(UInt64(var_1730897913257_148) & 127) : (Int64(101) |
                                1))
                        } else {
                            ((UInt64(UInt64(139)) & 127)..=(UInt64(var_1730897913257_148) & 127) : (var_1730897913257_216 |
                                1))
                        }

                    case _: Range<Int64> =>
                        if (false) {
                            ((UInt32(UInt32(10)) & 127)..=(UInt32(UInt32(77)) & 127) : (Int64(-65) | 1))
                        } else {
                            ((UInt32(UInt32(216)) & 127)..=(UInt32(UInt32(136)) & 127) : (Int64(-97) | 1))
                        };
                        var var_1730897913257_230: UInt32 = UInt32(224);
                        var_1730897913257_230 >>= ((UInt32(197)) & 7)
                        ((UInt64(var_1730897913257_148) & 127)..(UInt64(UInt64(199)) & 127) : (var_1730897913257_237 | 1))

                    case _ =>
                        Int32(-125) - Int32(-16);
                        var_1730897913257_203;
                        if (var_1730897913257_118) {
                            ((UInt64(UInt64(237)) & 127)..(UInt64(UInt64(90)) & 127) : (Int64(44) | 1))
                        } else {
                            ((UInt64(UInt64(120)) & 127)..(UInt64(UInt64(37)) & 127) : (Int64(25) | 1))
                        }
                };
                if (false) { // block id: 252
                    var_1730897913257_148
                } else if (false) { // block id: 255
                    let var_1730897913257_257: Unit = ();
                    var_1730897913257_257;
                    UInt64(142)
                } else { // block id: 260
                    var_1730897913257_263 <<= ((var_1730897913257_263) & 7)
                    ();
                    UInt64(47) - var_1730897913257_148
                }
            } else if (var_1730897913257_271) { // block id: 273
                var_1730897913257_277[4]
            } else { // block id: 280
                var_1730897913257_286.var_1730897913257_289
            };
            let var_1730897913257_315: Range<UInt32> = ((UInt32(UInt32(49)) & 127)..(UInt32(UInt32(117)) & 127) : (Int64(125) |
                1));
            let var_1730897913257_423: Enum_1730897913257_420 = Enum_1730897913257_420.enumValue_1730897913257_425(
                Int16(UInt8(129)));
            if (if (var_1730897913257_286.var_1730897913257_296) { // block id: 298
                var_1730897913257_300;
                UInt32(185) < var_1730897913257_305
            } else { // block id: 310
                var_1730897913257_271
            }) { // block id: 312
                match (var_1730897913257_315) {
                    case _ =>
                        ();
                        ();
                        [var_1730897913257_300, var_1730897913257_300, var_1730897913257_300, (), (), (), (),
                            var_1730897913257_300, (), ()]
                };
                let var_1730897913257_349: VArray<Int64, $1> = [Int64(-55)];
                match (var_1730897913257_337) {
                    case enumValue_1730897913257_339 =>
                        Int64(-113) * var_1730897913257_346;
                        var_1730897913257_349;
                        var_1730897913257_353

                    case _ =>
                        var var_1730897913257_360: UInt8 = UInt8(250);
                        var_1730897913257_360 >>= ((var_1730897913257_360) & 7)
                        ();
                        var_1730897913257_353

                    case defaultValue => var_1730897913257_353

                    case _ =>
                        if (true) {
                            ###"hUuP[%Zs0<"###
                        } else {
                            "B#(rVHKP_'"
                        }
                };
                ((Int8(var_1730897913257_263) & 127)..(Int8(Int8(-1)) & 127) : (Int64(-95) | 1))
            } else if ((match (((UInt8(var_1730897913257_384) & 127)..(UInt8(UInt8(179)) & 127) : (Int64(35) | 1))) {
                case caseVar_1730897913257_390: Enum_1730897913257_334 =>
                    var_1730897913257_300;
                    if (var_1730897913257_118) {
                        ((UInt32(var_1730897913257_305) & 127)..(UInt32(var_1730897913257_305) & 127) : (Int64(-31) | 1))
                    } else {
                        ((UInt32(UInt32(124)) & 127)..(UInt32(UInt32(8)) & 127) : (Int64(-123) | 1))
                    };
                    var_1730897913257_337

                case _ =>
                    if (true) {
                        var_1730897913257_337
                    } else {
                        Enum_1730897913257_334.enumValue_1730897913257_339
                    }
            } is Enum_1730897913257_334)) { // block id: 408
                if (true) {
                    var_1730897913257_412
                } else {
                    ((Int8(Int8(-50)) & 127)..(Int8(Int8(-86)) & 127) : (var_1730897913257_346 | 1))
                }
            } else { // block id: 418
                match (var_1730897913257_423) {
                    case enumValue_1730897913257_425(_) =>
                        var_1730897913257_277;
                        Enum_1730897913257_188.enumValue_1730897913257_191(Float32(58.0))

                    case defaultValue =>
                        Int32(-32);
                        Enum_1730897913257_188.enumValue_1730897913257_191(Float32(-104.0))

                    case _: Float32 =>
                        ();
                        Enum_1730897913257_188.enumValue_1730897913257_191(Float32(6.0))

                    case _ =>
                        UInt16(77);
                        let var_1730897913257_454: Enum_1730897913257_188 = Enum_1730897913257_188
                            .enumValue_1730897913257_191(Float32(87.0));
                        if (var_1730897913257_118) {
                            var_1730897913257_454
                        } else {
                            Enum_1730897913257_188.enumValue_1730897913257_191(var_1730897913257_194)
                        }
                };
                try (resource = Class_1730897913257_17()) { // block id: 460
                    var_1730897913257_463 = UInt8(199)
                    ()
                } finally { // block id: 469
                    var_1730897913257_300
                };
                Interface_1730897913257_22.func_1730897913257_474(namedParam_1730897913257_475: var_1730897913257_277,
                    namedParam_1730897913257_476: ((Int8(var_1730897913257_263) & 127)..=(Int8(var_1730897913257_263) &
                        127) : (var_1730897913257_346 | 1)), namedParam_1730897913257_477: var_1730897913257_608,
                    namedParam_1730897913257_478: Int32(-126))
            };
            Int8(var_1730897913257_263)
        };

        func_1730897913257_168(var_1730897913257_353,
            optionalParam_1730897913257_170: VArray<Int64, $1>(repeat: var_1730897913257_164));
        Option<UInt32>.Some(UInt32(89));
        ((UInt64(UInt64(97)) & 127)..=(UInt64(UInt64(121)) & 127) : (Int64(12) | 1))
    }
}

main(): Int64 {
    try {
        var_1730897913257_24.func_1730897913257_27(var_1730897913257_66)[2];
        var var_1730897913257_87: (Range<UInt64>) -> VArray<Int64, $1> = {
            lambdaParameter_1730897913257_90: Range<UInt64> => VArray<Int64, $1>(repeat: Int64(Int64(Int32(-81))))
        };
        ((var_1730897913257_916 |> func_1730897913257_97<Class_1730897913257_17>) |> var_1730897913257_87)[0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Enum_1730897913257_334 {}
