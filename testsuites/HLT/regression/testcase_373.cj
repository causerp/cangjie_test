/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1689286082649_33 : Array<UInt64> = [UInt64(20), UInt64(181), UInt64(26), UInt64(197), UInt64(Int16(-52)), UInt64(24), UInt64(214), UInt64(UInt32(123)), UInt64(56), UInt64(43)]
public var var_1689286082649_50 : Int16 = Int16(-92)
public var var_1689286082649_87 : Bool = false
public let var_1689286082649_99 : Unit = ()
var var_1689286082649_107 : Rune = '2'
var var_1689286082649_112 : Bool = true
public var var_1689286082649_143 : ?(Array<Unit>, String, Float32, Unit, Int64) = (Float64(Float32(Float32(12.0))) as (Array<Unit>, String, Float32, Unit, Int64))
public var var_1689286082649_149 : (Array<Unit>, String, Float32, Unit, Int64) = ([(), (), (), (), (), (), (), (), (), ()], ###"2TXi8pT0LM"###, Float32(-27.0), (), Int64(Int32(UInt8(217))))
public let var_1689286082649_172 : Int64 = Int64(73)
public var var_1689286082649_267 : Range<Int16> = ((Int16(Int16(Int16(-127)))&127)..=(Int16(Int16(UInt16(Int16(77))))&127):(Int64(Int16(Int16(109)))|1))
public var var_1689286082649_278 : Range<UInt8> = ((UInt8(UInt8(91))&127)..=(UInt8(UInt8(56))&127):((-85)|1))
public let var_1689286082649_327 : UInt64 = UInt64(69)
public let var_1689286082649_452 : ?((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32)) = Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))>.None
public let var_1689286082649_473 : Range<Int16> = ((Int16(Int16(55))&127)..=(Int16(Int16(95))&127):((-58)|1))
public var var_1689286082649_508 : Int8 = Int8(Int8(-9))
public var var_1689286082649_513 : Int64 = Int64(Int8(UInt8(58)))
public let var_1689286082649_520 : UInt32 = UInt32(UInt8(123))
var var_1689286082649_548 : UInt64 = UInt64(35)
let var_1689286082649_572 : ((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32)) = ((UInt64(164), UInt32(236), ((Int16(Int16(UInt16(243)))&127)..=(Int16(Int16(Int8(111)))&127):((-97)|1)), ((UInt8(UInt8(235))&127)..=(UInt8(UInt8(94))&127):(Int64(Int32(86))|1)), [UInt64(63), UInt64(59), UInt64(91), UInt64(155), UInt64(118), UInt64(74), UInt64(132), UInt64(187), UInt64(246), UInt64(126)], UInt32(UInt8(201))), ((UInt8(UInt8(Int8(107)))&127)..(UInt8(UInt8(194))&127):(Int64(UInt8(154))|1)), ((UInt8(UInt8(207))&127)..(UInt8(UInt8(250))&127):(Int64(UInt64(113))|1)), UInt16(220), (UInt64(197), UInt32(Int32(-28)), ((Int16(Int16(124))&127)..=(Int16(Int16(54))&127):(44|1)), ((UInt8(UInt8(122))&127)..=(UInt8(UInt8(73))&127):(25|1)), [UInt64(39), UInt64(147), UInt64(0), UInt64(189), UInt64(135), UInt64(246), UInt64(182), UInt64(1), UInt64(189), UInt64(87)], UInt32(Int8(Int8(75)))), Int8(-76), UInt8(242), Int64(UInt64(Int16(4))), (UInt64(183), UInt32(250), ((Int16(Int16(124))&127)..=(Int16(Int16(-16))&127):((-52)|1)), ((UInt8(UInt8(79))&127)..(UInt8(UInt8(218))&127):(107|1)), [UInt64(UInt16(174)), UInt64(UInt8(9)), UInt64(Int16(108)), UInt64(149), UInt64(143), UInt64(UInt16(190)), UInt64(UInt8(204)), UInt64(84), UInt64(Int32(100)), UInt64(1)], UInt32(UInt32(80))))
public var var_1689286082649_652 : UInt16 = UInt16(UInt16(125))
public var var_1689286082649_662 : Interface_1689286082649_401 = Class_1689286082649_391()
public let var_1689286082649_676 : Struct_1689286082649_424 = Struct_1689286082649_424()
public var var_1689286082649_689 : (Int32, (Array<Unit>, String, Float32, Unit, Int64), Range<Int16>, (Unit, UInt16)) = (Int32(Int16(-72)), ([(), (), (), (), (), (), (), (), (), ()], "`G]D$ULm0=", Float32(-70.0), (), 13), ((Int16(Int16(UInt8(Int8(51))))&127)..=(Int16(Int16(21))&127):(49|1)), ((), UInt16(114)))
public let var_1689286082649_756 : Int32 = Int32(81)
public var var_1689286082649_788 : Bool = (Class_1689286082649_391() is Range<Int16>)
public let var_1689286082649_802 : UInt64 = UInt64(UInt16(152))
public var var_1689286082649_807 : UInt64 = UInt64(10)
public let var_1689286082649_823 : Int64 = (-63)
public let var_1689286082649_835 : Unit = ()
public var var_1689286082649_870 : String = "4uHq*\"rkef"
public let var_1689286082649_881 : (Option<Int16>, UInt64, Range<UInt16>) = ((((Int8(Int8(22))&127)..(Int8(Int8(-113))&127):((-44)|1)) as Int16), UInt64(181), ((UInt16(UInt16(Int8(UInt8(250))))&127)..=(UInt16(UInt16(UInt8(UInt8(36))))&127):(93|1)))
public var var_1689286082649_938 : UInt32 = UInt32(Int16(UInt16(UInt16(Int8(117)))))
public var var_1689286082649_963 : Interface_1689286082649_394<Int8> = Class_1689286082649_391()
public var var_1689286082649_969 : Int32 = Int32(-100)
let var_1689286082649_973 : Range<Int64> = ((Int64((-115))&127)..=(Int64((-108))&127):(80|1))
public let var_1689286082649_980 : Option<Unit> = (Int32(Int8(UInt8(76))) as Unit)
public let var_1689286082649_1047 : Int8 = Int8(Int8(UInt8(UInt8(Int8(63)))))
public var var_1689286082649_1129 : UInt8 = UInt8(48)
public let var_1689286082649_1142 : UInt16 = UInt16(UInt16(195))
public let var_1689286082649_1156 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = (UInt64(32), UInt32(16), ((Int16(Int16(UInt8(UInt8(99))))&127)..=(Int16(Int16(114))&127):(Int64(Int16(78))|1)), ((UInt8(UInt8(162))&127)..(UInt8(UInt8(60))&127):(119|1)), [UInt64(Int64(Int16(57))), UInt64(178), UInt64(120), UInt64(13), UInt64(Int16(-83)), UInt64(223), UInt64(153), UInt64(Int32(Int16(15))), UInt64(215), UInt64(159)], UInt32(UInt32(46)))
let var_1689286082649_1257 : Array<Bool> = [false, true, false, false, true, false, true, true, false, false]
public let var_1689286082649_1434 : ((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<Int64>, Option<Option<Unit>>) = ((UInt64(136), UInt32(66), ((Int16(Int16(-3))&127)..(Int16(Int16(14))&127):(Int64(Int32(29))|1)), ((UInt8(UInt8(241))&127)..(UInt8(UInt8(132))&127):((-59)|1)), [UInt64(102), UInt64(226), UInt64(250), UInt64(68), UInt64(Int16(-16)), UInt64(46), UInt64(23), UInt64(UInt16(9)), UInt64(129), UInt64(212)], UInt32(13)), ((Int64(103)&127)..=(Int64((-59))&127):((-128)|1)), Option<Option<Unit>>.None)
public open class Class_1689286082649_13 {
    init() { // block id: 15

    }
;
    public static mut prop var_1689286082649_243 : Bool { // block id: 244
        get() { // block id: 246
            Float32(38.0);
            (true is Range<UInt32>);
            var_1689286082649_1693
        }

        set(Value) { // block id: 252
            '3';
            ();
            ();
            var_1689286082649_1693 = Value
        }

    };
    public static let var_1689286082649_403 : Class_1689286082649_391 = Class_1689286082649_391();
    public static var var_1689286082649_647 : Interface_1689286082649_396 = Class_1689286082649_391();
    static var var_1689286082649_1693 : Bool = false
}


func func_1689286082649_8(param_1689286082649_9 : UInt8) : Bool { // block id: 10
    ((Class_1689286082649_13.func_1689286082649_18()) is Rune)
}


public func func_1689286082649_183(param_1689286082649_184 : Int32) : Bool { // block id: 185
    let var_1689286082649_200 : UInt64 = UInt64(195);
    try { // block id: 187
        (var_1689286082649_172 is Rune)
    } catch (e: Exception) { // block id: 190
        [UInt64(242), UInt64(127), UInt64(64), UInt64(163), UInt64(63), UInt64(37), UInt64(71), UInt64(237), UInt64(228), UInt64(89)];
        var var_1689286082649_208 : UInt32 = UInt32(125);
        match (((UInt32(UInt32(169))&127)..(UInt32(UInt32(114))&127):(75|1))) {
            case _ : Range<UInt16> => 
                ((UInt64(UInt64(234))&127)..(UInt64(var_1689286082649_200)&127):(var_1689286082649_172|1));
                var var_1689286082649_205 : UInt32 = UInt32(104);
                var_1689286082649_205 >>= ((var_1689286082649_208) & 7);
                var_1689286082649_99
            
            case caseVar_1689286082649_213 : Range<Int64> => 
                var_1689286082649_112 &&= true;
                [UInt64(18), UInt64(182), UInt64(182), UInt64(51), UInt64(130), UInt64(3), UInt64(105), UInt64(4), UInt64(17), UInt64(121)];
                ()
            
            case caseVar_1689286082649_222 : Int32 => 
                var_1689286082649_208 <<= ((var_1689286082649_208) & 7);
                ()
            
            case caseVar_1689286082649_230 => 
                Int16(33);
                Option<(Array<Unit>, String, Float32, Unit, Int64)>.None;
                var_1689286082649_99
            
            case _ => 
                var_1689286082649_87 &&= true
            
        };
        Class_1689286082649_13.var_1689286082649_243
    }
}


sealed public interface Interface_1689286082649_394<T0> {

}

public interface Interface_1689286082649_400 {

}

sealed public interface Interface_1689286082649_401 {

}

sealed public interface Interface_1689286082649_399 <: Interface_1689286082649_400 & Interface_1689286082649_401 {

}

public interface Interface_1689286082649_398 <: Interface_1689286082649_399 & Interface_1689286082649_400 {

}

sealed public interface Interface_1689286082649_397 <: Interface_1689286082649_398 {

}

sealed public interface Interface_1689286082649_396 <: Interface_1689286082649_397 & Interface_1689286082649_398 {

}

public interface Interface_1689286082649_395 <: Interface_1689286082649_396 & Interface_1689286082649_401 {

}

public open class Class_1689286082649_391 <: Class_1689286082649_13 & Interface_1689286082649_394<Int8> & Interface_1689286082649_395 {
    public init() { // block id: 393

    }

    var var_1689286082649_406 : UInt64 = UInt64(92);
    init(namedParam_1689286082649_1417 ! : Range<UInt8>, optionalParam_1689286082649_1418 ! : UInt64 = UInt64(188)) {
        match (var_1689286082649_1434[2]) {
            case Some(num) => num
            case None => do {
            ();
        } while ((VArray<Bool, $1>({ i => false})[0]) ) 
        }
    }

    static init() {
    }
}

public struct Struct_1689286082649_424 {
    init() { // block id: 426

    }
;
    public prop var_1689286082649_722 : (Int32, (Array<Unit>, String, Float32, Unit, Int64), Range<Int16>, (Unit, UInt16)) { // block id: 723
        get() { // block id: 725
            ();
            Class_1689286082649_391();
            (Int32(68), ([(), (), (), (), (), (), (), (), (), ()], ###"O1V,t8$\"i~"###, Float32(125.0), (), 8), ((Int16(Int16(Int8(-24)))&127)..=(Int16(Int16(Int16(107)))&127):(49|1)), ((), UInt16(220)))
        }

    }
}



public func func_1689286082649_432(param_1689286082649_433 : Interface_1689286082649_396) : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) { // block id: 434
    let var_1689286082649_448 : ??((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32)) = (match (Struct_1689286082649_424()) {
        case newVar: Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))> => Option<Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))>>.Some(newVar)
        case _ => Option<Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))>>.None
    });
    var var_1689286082649_477 : Array<UInt64> = [UInt64(Int16(24)), UInt64(243), UInt64(UInt8(Int8(Int8(-5)))), UInt64(4), UInt64(Int64(Int8(UInt8(96)))), UInt64(34), UInt64(UInt64((-52))), UInt64(UInt8(Int8(-13))), UInt64(Int64(Int32(UInt32(102)))), UInt64(UInt32(UInt8(7)))];
    var var_1689286082649_524 : Range<Int16> = ((Int16(Int16(Int8(25)))&127)..=(Int16(Int16(Int8(-62)))&127):(123|1));
    let var_1689286082649_533 : UInt8 = UInt8(182);
    var var_1689286082649_540 : UInt64 = UInt64(UInt16(Int16(125)));
    (match ((match (var_1689286082649_448) {
        case Some(num) => num
        case None => var_1689286082649_452
    })) {
        case Some(num) => num
        case None => try { // block id: 455
        let var_1689286082649_458 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = (UInt64(104), UInt32(16), ((Int16(Int16(-93))&127)..(Int16(Int16(-88))&127):(28|1)), ((UInt8(UInt8(3))&127)..(UInt8(UInt8(165))&127):((-8)|1)), [UInt64(205), UInt64(34), UInt64(14), UInt64(37), UInt64(146), UInt64(148), UInt64(120), UInt64(87), UInt64(198), UInt64(109)], UInt32(107));
        (var_1689286082649_458, ((UInt8(UInt8(80))&127)..(UInt8(UInt8(43))&127):(39|1)), ((UInt8(UInt8(246))&127)..=(UInt8(UInt8(124))&127):((-46)|1)), UInt16(165), (UInt64(235), UInt32(117), var_1689286082649_473, ((UInt8(UInt8(105))&127)..(UInt8(UInt8(234))&127):(29|1)), var_1689286082649_477, UInt32(70)), var_1689286082649_508, UInt8(172), var_1689286082649_513, (UInt64(110), var_1689286082649_520, var_1689286082649_524, ((UInt8(var_1689286082649_533)&127)..(UInt8(var_1689286082649_533)&127):(var_1689286082649_513|1)), [UInt64(126), var_1689286082649_540, var_1689286082649_540, var_1689286082649_540, UInt64(224), var_1689286082649_548, var_1689286082649_540, UInt64(161), UInt64(198), var_1689286082649_548], UInt32(217)))
    } catch (_) { // block id: 555
        Option<Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))>>.Some(Option<((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32))>.None);
        var var_1689286082649_559 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var_1689286082649_559;
        var_1689286082649_572
    }
    })[4]
}


func func_1689286082649_287(param_1689286082649_288 : Float64) : Range<UInt8> { // block id: 289
    let var_1689286082649_313 : Range<UInt8> = ((UInt8(UInt8(UInt8(4)))&127)..=(UInt8(UInt8(UInt8(82)))&127):(Int64(Int8(-123))|1));
    let var_1689286082649_344 : UInt8 = UInt8(UInt8(Int8(-42)));
    let var_1689286082649_873 : Option<Int16> = (match (()) {
        case newVar: Int16 => Option<Int16>.Some(newVar)
        case _ => Option<Int16>.None
    });
    func func_1689286082649_291(param_1689286082649_292 : Float32, optionalParam_1689286082649_293 ! : Int16 = Int16(Int8(-61)), namedParam_1689286082649_296 ! : Unit) : Option<Int16> { // block id: 297
        let var_1689286082649_351 : Option<Unit> = Option<Unit>.None;
        (match (try { // block id: 306
            (((Int64(126)&127)..=(Int64((-73))&127):(97|1)), var_1689286082649_313, Option<Unit>.Some(()), [UInt64(249), UInt64(129), var_1689286082649_327, UInt64(62), var_1689286082649_327, UInt64(133), var_1689286082649_327, var_1689286082649_327, UInt64(34), UInt64(58)])
        } finally { // block id: 336
            (((Int64(var_1689286082649_172)&127)..(Int64(var_1689286082649_172)&127):(var_1689286082649_172|1)), ((UInt8(var_1689286082649_344)&127)..=(UInt8(UInt8(66))&127):(64|1)), var_1689286082649_351, [UInt64(46), var_1689286082649_327, UInt64(125), UInt64(142), var_1689286082649_327, var_1689286082649_327, UInt64(73), UInt64(114), var_1689286082649_327, UInt64(144)])
        }[2]) {
            case Some(num) => num
            case None => ()
        });
        Class_1689286082649_13.func_1689286082649_369<Range<Int64>>(namedParam_1689286082649_372 : ((Int64((-52))&127)..(Int64((-108))&127):(52|1)));
        if (false) { // block id: 868
            var_1689286082649_870;
            var_1689286082649_873
        } else if (false) { // block id: 877
            var_1689286082649_881[0]
        } else { // block id: 895
            let var_1689286082649_899 : (Range<UInt8>, Option<Int16>, UInt8, (Array<Unit>, String, Float32, Unit, Int64)) = (((UInt8(UInt8(102))&127)..=(UInt8(UInt8(UInt8(UInt8(40))))&127):(98|1)), Option<Int16>.None, UInt8(141), ([(), (), (), (), (), (), (), (), (), ()], "#mzof%%UL#", Float32(-58.0), (), (-77)));
            var_1689286082649_899[1];
            [var_1689286082649_873, Option<Int16>.None, Option<Int16>.Some(Int16(8)), Option<Int16>.None, Option<Int16>.Some(var_1689286082649_50), Option<Int16>.None, var_1689286082649_873, var_1689286082649_873, var_1689286082649_873, var_1689286082649_873][3]
        }
    }
;
    var loopTimeVar_1689286082649_987 : Int64 = 0;
    func_1689286082649_291(try { // block id: 933
        Float32(-102.0)
    } finally { // block id: 935
        var_1689286082649_938 = var_1689286082649_938 ^ (UInt32(230));
        ();
        let var_1689286082649_947 : Float32 = Float32(Float32(Float32(Float32(Float32(-17.0)))));
        var_1689286082649_947
    }, namedParam_1689286082649_296 : do {
        loopTimeVar_1689286082649_987++;
        var_1689286082649_969 = var_1689286082649_969 - 1;
        (var_1689286082649_973, ((UInt8(UInt8(42))&127)..=(UInt8(var_1689286082649_344)&127):(var_1689286082649_823|1)), var_1689286082649_980, [UInt64(147), UInt64(224), UInt64(53), UInt64(157), UInt64(213), UInt64(70), UInt64(4), UInt64(209), UInt64(251), UInt64(114)])
    } while ((if (true) { // block id: 956
        false
    } else { // block id: 958
        Int16(-74) - Int16(89);
        var_1689286082649_963;
        true
    }) && loopTimeVar_1689286082649_987 < 100 ) );
    if (var_1689286082649_788) { // block id: 990
        try { // block id: 992
            var_1689286082649_835;
            ()
        } catch (e: Exception) { // block id: 995
            var_1689286082649_835
        };
        var_1689286082649_835;
        ((UInt8(UInt8(137))&127)..(UInt8(var_1689286082649_344)&127):((-62)|1))
    } else { // block id: 1002
        var var_1689286082649_1006 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = (UInt64(93), UInt32(Int8(21)), ((Int16(Int16(22))&127)..=(Int16(Int16(9))&127):(Int64(Int8(Int8(-87)))|1)), ((UInt8(UInt8(Int8(UInt8(40))))&127)..(UInt8(UInt8(UInt8(126)))&127):(Int64(UInt16(210))|1)), [UInt64(132), UInt64(124), UInt64(233), UInt64(212), UInt64(Int16(UInt8(24))), UInt64(UInt8(228)), UInt64(251), UInt64(230), UInt64(62), UInt64(UInt64(Int32(-76)))], UInt32(4));
        (var_1689286082649_1006, ((UInt8(UInt8(4))&127)..(UInt8(UInt8(9))&127):(31|1)), ((UInt8(UInt8(46))&127)..=(UInt8(UInt8(75))&127):(107|1)), var_1689286082649_652, var_1689286082649_1006, var_1689286082649_1047, UInt8(1), var_1689286082649_823, var_1689286082649_1006)[2];
        ();
        (match (Option<Range<UInt8>>.Some(((UInt8(UInt8(189))&127)..(UInt8(UInt8(102))&127):(42|1)))) {
            case Some(num) => num
            case None => ((UInt8(UInt8(238))&127)..=(UInt8(var_1689286082649_344)&127):((-23)|1))
        })
    }
}

public func func_1689286082649_176(param_1689286082649_177 : Range<UInt16>, namedParam_1689286082649_178 ! : Unit) : Int64 { // block id: 179
    var var_1689286082649_263 : UInt32 = UInt32(Int32(21));
    let var_1689286082649_1070 : (Float64) -> Range<UInt8> = func_1689286082649_287;
    match (if ((func_1689286082649_183(Int32(-81)))) { (UInt64(15), var_1689286082649_263, var_1689286082649_267, var_1689286082649_278, var_1689286082649_33, var_1689286082649_263)[3] } else { (var_1689286082649_1070((-111.0))) } ) {
        case _ => 
            ();
            ();
            var_1689286082649_835
        
    };
    try { // block id: 1079
        27 ** UInt64(116);
        ();
        var_1689286082649_823
    } catch (e: Exception) { // block id: 1085
        (-53)
    }
}

public func func_1689286082649_130(param_1689286082649_131 : Int32) : Bool { // block id: 132
    (match (var_1689286082649_143) {
        case Some(num) => num
        case None => var_1689286082649_149
    })[0][9];
    var var_1689286082649_1091 : Range<UInt16> = ((UInt16(UInt16(118))&127)..(UInt16(UInt16(152))&127):(84|1));
    let var_1689286082649_1096 : VArray<Unit, $1> = [()];
    var_1689286082649_172 == func_1689286082649_176(if (true) { ((UInt16(UInt16(160))&127)..(UInt16(UInt16(88))&127):(45|1)) } else { var_1689286082649_1091 } , namedParam_1689286082649_178 : var_1689286082649_1096[0])
}



public func func_1689286082649_1102(param_1689286082649_1103 : UInt8) : Int32 { // block id: 1104
    let var_1689286082649_1206 : Int8 = Int8(67);
    let var_1689286082649_1211 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = (UInt64(Int8(Int8(-125))), UInt32(UInt32(168)), ((Int16(Int16(UInt16(Int16(-78))))&127)..=(Int16(Int16(46))&127):(Int64(Int8(-121))|1)), ((UInt8(UInt8(UInt8(UInt8(110))))&127)..=(UInt8(UInt8(UInt8(123)))&127):(49|1)), [UInt64(31), UInt64(216), UInt64(168), UInt64(166), UInt64(133), UInt64(34), UInt64(47), UInt64(249), UInt64(252), UInt64(182)], UInt32(223));
    try { // block id: 1106
        var loopTimeVar_1689286082649_1110 : Range<UInt64> = ((UInt64(UInt64(Int8(-12)))&127)..=(UInt64(UInt64(UInt64(UInt8(UInt8(234)))))&127):(110|1));
        let iter1107 = loopTimeVar_1689286082649_1110.iterator()
        while (true) {
            match (iter1107.next()) {
                case None => break
                case Some(v) => match (v) {
                    case i where (var_1689286082649_788) => ();
                    case _ => continue
                }
            }
        }
;
        let var_1689286082649_1132 : Int64 = (-105);
        (match (var_1689286082649_452) {
            case Some(num) => num
            case None => ((UInt64(250), UInt32(229), var_1689286082649_473, ((UInt8(UInt8(252))&127)..=(UInt8(var_1689286082649_1129)&127):(var_1689286082649_1132|1)), [UInt64(38), UInt64(17), UInt64(91), UInt64(165), UInt64(125), UInt64(237), UInt64(19), UInt64(157), UInt64(140), UInt64(145)], var_1689286082649_938), ((UInt8(UInt8(221))&127)..(UInt8(UInt8(228))&127):(45|1)), ((UInt8(UInt8(223))&127)..(UInt8(UInt8(121))&127):(104|1)), var_1689286082649_1142, (UInt64(162), var_1689286082649_520, var_1689286082649_267, ((UInt8(UInt8(21))&127)..(UInt8(UInt8(47))&127):((-106)|1)), var_1689286082649_33, var_1689286082649_938), Int8(-74), UInt8(244), 118, var_1689286082649_1156)
        })
    } finally { // block id: 1186
        ((var_1689286082649_327, var_1689286082649_520, ((Int16(var_1689286082649_50)&127)..(Int16(var_1689286082649_50)&127):((-99)|1)), var_1689286082649_278, var_1689286082649_33, var_1689286082649_520), var_1689286082649_278, ((UInt8(var_1689286082649_1129)&127)..=(UInt8(var_1689286082649_1129)&127):(var_1689286082649_172|1)), UInt16(43), var_1689286082649_1156, var_1689286082649_1206, UInt8(151), 18, var_1689286082649_1211)
    };
    var var_1689286082649_1247 : Bool = (match ([[false, true, false, false, false, false, true, false, false, false], [true, false, false, false, true, true, true, true, false, true], [true, false, true, false, false, false, true, false, true, true], [false, false, true, true, false, false, false, true, true, false], [true, true, true, true, true, true, true, false, false, false], [true, true, false, false, true, true, true, false, true, false], [true, true, true, true, false, false, true, true, true, true], [false, true, false, false, false, true, false, false, true, true], [false, true, false, false, false, false, false, false, false, true], [true, false, false, false, false, true, false, false, false, false]]) {
        case _: Array<Option<Int16>> => true
        case _ => false
    });
    var var_1689286082649_1269 : Bool = false;
    if ([[var_1689286082649_112, var_1689286082649_788, var_1689286082649_87, false, false, var_1689286082649_1247, false, var_1689286082649_112, true, var_1689286082649_788], [true, false, true, true, true, true, true, true, false, false], [false, true, false, false, true, false, false, false, true, true], var_1689286082649_1257, [true, false, var_1689286082649_788, var_1689286082649_112, var_1689286082649_87, false, false, var_1689286082649_112, var_1689286082649_1269, false], var_1689286082649_1257, [true, var_1689286082649_1269, false, false, var_1689286082649_1247, var_1689286082649_112, false, true, false, var_1689286082649_87], [var_1689286082649_788, var_1689286082649_1269, true, var_1689286082649_1247, false, var_1689286082649_1269, var_1689286082649_788, false, true, true], [var_1689286082649_788, var_1689286082649_112, false, var_1689286082649_87, true, false, var_1689286082649_1269, false, var_1689286082649_1247, false], [false, true, true, true, true, false, true, false, true, true]][8][8]) { // block id: 1309
        var loopTimeVar_1689286082649_1314 : Array<Array<Bool>> = [[true, true, true, true, false, false, false, true, true, false], [true, false, false, false, false, true, false, false, false, false], [(match (((UInt8(UInt8(98))&127)..=(UInt8(UInt8(246))&127):(45|1))) {
            case _: (Int32, (Array<Unit>, String, Float32, Unit, Int64), Range<Int16>, (Unit, UInt16)) => true
            case _ => false
        }), (match ('J') {
            case _: Interface_1689286082649_394<Int8> => true
            case _ => false
        }), (match (Class_1689286082649_391()) {
            case _: Int64 => true
            case _ => false
        }), true, (match (Int64((-16))) {
            case _: Class_1689286082649_391 => true
            case _ => false
        }), (match (((Int8(Int8(96))&127)..=(Int8(Int8(126))&127):(89|1))) {
            case _: (Float32, Range<Int64>, UInt64) -> Unit => true
            case _ => false
        }), (match (51) {
            case _: (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) => true
            case _ => false
        }), false, (match (UInt32(UInt16(215))) {
            case _: Struct_1689286082649_424 => true
            case _ => false
        }), true], [(match ((UInt64(247), UInt32(101), ((Int16(Int16(-10))&127)..(Int16(Int16(23))&127):((-96)|1)), ((UInt8(UInt8(253))&127)..=(UInt8(UInt8(33))&127):(85|1)), [UInt64(220), UInt64(131), UInt64(35), UInt64(163), UInt64(243), UInt64(23), UInt64(75), UInt64(179), UInt64(76), UInt64(175)], UInt32(2))) {
            case _: Float64 => true
            case _ => false
        }), (match (((UInt8(UInt8(234))&127)..=(UInt8(UInt8(253))&127):(52|1))) {
            case _: (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) => true
            case _ => false
        }), (match (VArray<UInt8, $6>({ i => UInt8(218)})) {
            case _: (Int32, (Array<Unit>, String, Float32, Unit, Int64), Range<Int16>, (Unit, UInt16)) => true
            case _ => false
        }), (match (Int16(-33)) {
            case _: UInt64 => true
            case _ => false
        }), true, (match ([[false, true, false, true, true, false, true, false, true, true], [false, true, true, true, true, false, false, true, true, true], [false, false, false, false, false, true, true, false, true, true], [true, true, false, false, true, true, true, true, true, true], [true, true, true, true, true, false, true, true, true, false], [true, false, false, true, false, false, true, true, true, false], [false, true, true, true, true, false, false, true, false, false], [true, true, true, false, true, true, true, false, false, false], [false, true, true, true, false, true, false, true, true, false], [false, true, false, false, false, false, true, false, true, false]]) {
            case _: Class_1689286082649_391 => true
            case _ => false
        }), false, (match (((UInt8(UInt8(14))&127)..=(UInt8(UInt8(145))&127):((-41)|1))) {
            case _: Array<Bool> => true
            case _ => false
        }), (match (UInt8(UInt8(50))) {
            case _: VArray<UInt8, $6> => true
            case _ => false
        }), (match ((UInt64(48), UInt32(186), ((Int16(Int16(25))&127)..=(Int16(Int16(-98))&127):((-33)|1)), ((UInt8(UInt8(38))&127)..(UInt8(UInt8(138))&127):((-61)|1)), [UInt64(69), UInt64(28), UInt64(177), UInt64(81), UInt64(165), UInt64(170), UInt64(210), UInt64(126), UInt64(52), UInt64(3)], UInt32(42))) {
            case _: Option<Range<UInt8>> => true
            case _ => false
        })], [true, true, false, false, true, false, false, true, true, true], [false, true, true, true, false, true, true, true, true, true], [true, false, true, true, false, false, false, false, false, false], [false, false, true, false, false, true, false, false, true, true], [(match (((UInt32(UInt32(55))&127)..(UInt32(UInt32(182))&127):(91|1))) {
            case _: ((UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Range<UInt8>, Range<UInt8>, UInt16, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), Int8, UInt8, Int64, (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32)) => true
            case _ => false
        }), true, false, false, (match (Class_1689286082649_391()) {
            case _: VArray<Unit, $1> => true
            case _ => false
        }), (match (Class_1689286082649_391(namedParam_1689286082649_1417 : ((UInt8(UInt8(49))&127)..=(UInt8(UInt8(71))&127):((-119)|1)), optionalParam_1689286082649_1418 : UInt64(120))) {
            case _: Interface_1689286082649_395 => true
            case _ => false
        }), (match (true) {
            case _: (Unit, UInt16) => true
            case _ => false
        }), (match (UInt32(95)) {
            case _: Option<(Array<Unit>, String, Float32, Unit, Int64)> => true
            case _ => false
        }), true, false], [(match (Class_1689286082649_13()) {
            case _: Array<Option<Int16>> => true
            case _ => false
        }), (match (((UInt64(216), UInt32(162), ((Int16(Int16(-95))&127)..=(Int16(Int16(98))&127):((-104)|1)), ((UInt8(UInt8(42))&127)..=(UInt8(UInt8(199))&127):(26|1)), [UInt64(93), UInt64(135), UInt64(143), UInt64(104), UInt64(54), UInt64(105), UInt64(195), UInt64(236), UInt64(10), UInt64(72)], UInt32(194)), ((UInt8(UInt8(172))&127)..=(UInt8(UInt8(165))&127):((-56)|1)), ((UInt8(UInt8(76))&127)..(UInt8(UInt8(73))&127):(99|1)), UInt16(86), (UInt64(180), UInt32(78), ((Int16(Int16(-106))&127)..=(Int16(Int16(-69))&127):((-38)|1)), ((UInt8(UInt8(186))&127)..(UInt8(UInt8(205))&127):((-31)|1)), [UInt64(125), UInt64(106), UInt64(203), UInt64(129), UInt64(154), UInt64(140), UInt64(244), UInt64(69), UInt64(13), UInt64(32)], UInt32(87)), Int8(-58), UInt8(119), 122, (UInt64(203), UInt32(22), ((Int16(Int16(-46))&127)..=(Int16(Int16(-75))&127):(15|1)), ((UInt8(UInt8(197))&127)..(UInt8(UInt8(34))&127):((-29)|1)), [UInt64(205), UInt64(7), UInt64(90), UInt64(237), UInt64(191), UInt64(70), UInt64(25), UInt64(248), UInt64(243), UInt64(85)], UInt32(176)))) {
            case _: (Option<Int16>) -> Struct_1689286082649_424 => true
            case _ => false
        }), (match ('2') {
            case _: Range<UInt8> => true
            case _ => false
        }), (match ((match ((((Int64(80)&127)..=(Int64(98)&127):((-3)|1)), ((UInt8(UInt8(14))&127)..=(UInt8(UInt8(119))&127):(1|1)), Option<Unit>.Some(()), [UInt64(8), UInt64(124), UInt64(162), UInt64(1), UInt64(112), UInt64(94), UInt64(202), UInt64(12), UInt64(185), UInt64(224)])) {
            case newVar: Unit => Option<Unit>.Some(newVar)
            case _ => Option<Unit>.None
        })) {
            case _: Unit => true
            case _ => false
        }), (match (((UInt16(UInt16(100))&127)..=(UInt16(UInt16(211))&127):((-19)|1))) {
            case _: Float64 => true
            case _ => false
        }), true, true, true, false, (match ([true, false, false, false, false, true, false, true, false, true]) {
            case _: UInt8 => true
            case _ => false
        })]];
        let iter1310 = loopTimeVar_1689286082649_1314.iterator()
        while (true) {
            match (iter1310.next()) {
                case None => break
                case Some(v) => match (v) {
                    case i where (var_1689286082649_1247) => ()
                    case _ => continue
                }
            }
        }
;
        ()
    };
    var_1689286082649_756
}


main(): Int64 {
    try {
        var var_1689286082649_1100 : (Int32) -> Bool = func_1689286082649_130;
        var var_1689286082649_1673 : (UInt8) -> Int32 = func_1689286082649_1102;
        (var_1689286082649_1673~>var_1689286082649_1100)(var_1689286082649_1129);
        var loopTimeVar_1689286082649_1681 : Int64 = 0;
        while ((false) && loopTimeVar_1689286082649_1681 < 100 ) {
            loopTimeVar_1689286082649_1681++;
            var_1689286082649_99
        };
        Int64(UInt8(104)) * (match (Option<Int64>.None) {
            case Some(num) => num
            case None => (-22)
        })
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1689286082649_327*var_1689286082649_327), 64)
        crccheck.updateBuffer(UInt64(var_1689286082649_938*var_1689286082649_938), 64)
        crccheck.updateBuffer(UInt64(var_1689286082649_969*var_1689286082649_969), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1689286082649_13 {
    static func func_1689286082649_18() : Int16 { // block id: 19
        try { // block id: 21
            var_1689286082649_33[9];
            Int32(var_1689286082649_50);
            Option<Int16>.Some(Int16(22)).getOrThrow()
        } catch (e: Exception) { // block id: 59
            match (Option<Int16>.Some(Int16(-39))) {
                case _ => 
                    var_1689286082649_50 = var_1689286082649_50 + (Int16(37));
                    var var_1689286082649_71 : Int8 = Int8(Int8(Int8(UInt8(Int8(-63)))));
                    var_1689286082649_71 = var_1689286082649_71 ^ (var_1689286082649_71);
                    let var_1689286082649_79 : Unit = ();
                    var_1689286082649_79
                
                case caseVar_1689286082649_83 => 
                    var_1689286082649_87 = var_1689286082649_87 || (false)
                
                case _ => 
                    ()
                
                case caseVar_1689286082649_96 : Array<UInt64> => 
                    var_1689286082649_99
                
                case _ => 
                    var_1689286082649_99;
                    var_1689286082649_99;
                    var_1689286082649_107 = 'X'
                
            };
            if (var_1689286082649_112) { // block id: 114
                Int16(-61)
            } else if (true) { // block id: 117
                var var_1689286082649_120 : Int32 = Int32(-28);
                var_1689286082649_120 = var_1689286082649_120 % ((Int32(-29)) | 1);
                var_1689286082649_50;
                var_1689286082649_50
            } else { // block id: 125
                Option<Int16>.Some(var_1689286082649_50);
                Int16(-8)
            }
        }
    }
;
    public static func func_1689286082649_369<T0>(optionalParam_1689286082649_370 ! : Float32 = Float32(-56.0), namedParam_1689286082649_372 ! : Range<Int64>, optionalParam_1689286082649_373 ! : UInt64 = UInt64(Int64(UInt64(249)))) : Unit { // block id: 377
        var var_1689286082649_760 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = (UInt64(UInt8(84)), UInt32(207), ((Int16(Int16(-119))&127)..(Int16(Int16(22))&127):((-105)|1)), ((UInt8(UInt8(Int8(-113)))&127)..(UInt8(UInt8(149))&127):((-21)|1)), [UInt64(72), UInt64(198), UInt64(3), UInt64(131), UInt64(209), UInt64(174), UInt64(34), UInt64(126), UInt64(226), UInt64(209)], UInt32(UInt8(Int8(Int8(117)))));
        func_1689286082649_18(var_1689286082649_756, ((UInt64(UInt64(61))&127)..(UInt64(UInt64(238))&127):(8|1)), var_1689286082649_760, namedParam_1689286082649_387 : var_1689286082649_652)[3][0];
        let var_1689286082649_812 : UInt64 = UInt64(UInt32(8));
        match (if (var_1689286082649_112) { // block id: 783
            var_1689286082649_99;
            var_1689286082649_689;
            [UInt64(29), UInt64(162), UInt64(174), UInt64(51), UInt64(179), UInt64(152), UInt64(95), UInt64(143), UInt64(103), UInt64(180)]
        } else if (var_1689286082649_788) { // block id: 791
            if (var_1689286082649_112) { Option<(Array<Unit>, String, Float32, Unit, Int64)>.None } else { Option<(Array<Unit>, String, Float32, Unit, Int64)>.Some(var_1689286082649_149) } ;
            var_1689286082649_508 = var_1689286082649_508 & (Int8(-89));
            [var_1689286082649_802, UInt64(227), var_1689286082649_807, UInt64(152), UInt64(171), var_1689286082649_812, var_1689286082649_327, var_1689286082649_812, var_1689286082649_812, UInt64(24)]
        } else { // block id: 819
            var_1689286082649_513 = var_1689286082649_513 * (var_1689286082649_823);
            if (var_1689286082649_112) { var_1689286082649_33 } else { var_1689286082649_33 } 
        }) {
            case caseVar_1689286082649_831 : UInt32 => 
                ();
                var_1689286082649_835;
                let var_1689286082649_843 : Unit = ();
                [var_1689286082649_835, (), (), (), var_1689286082649_843, var_1689286082649_835, var_1689286082649_835, (), (), ()]
            
            case _ => 
                var_1689286082649_520;
                [(), (), (), var_1689286082649_835, (), (), (), var_1689286082649_835, var_1689286082649_99, ()]
            
        }[2]
        return
    }
;
    static func func_1689286082649_18(param_1689286082649_384 : Int32, param_1689286082649_385 : Range<UInt64>, param_1689286082649_386 : (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32), namedParam_1689286082649_387 ! : UInt16) : (Int32, (Array<Unit>, String, Float32, Unit, Int64), Range<Int16>, (Unit, UInt16)) { // block id: 388
        let var_1689286082649_412 : VArray<UInt8, $6> = VArray<UInt8, $6>({ i => UInt8(78)});
        var_1689286082649_403.var_1689286082649_406 |= UInt64(var_1689286082649_412[4]);
        let var_1689286082649_683 : Struct_1689286082649_424 = Struct_1689286082649_424();
        func func_1689286082649_428(namedParam_1689286082649_429 ! : Option<Int16>) : Struct_1689286082649_424 { // block id: 430
            let var_1689286082649_644 : (Interface_1689286082649_396) -> (UInt64, UInt32, Range<Int16>, Range<UInt8>, Array<UInt64>, UInt32) = func_1689286082649_432;
            var_1689286082649_644(var_1689286082649_647);
            match (((UInt16(var_1689286082649_652)&127)..=(UInt16(var_1689286082649_652 + UInt16(203))&127):(if (var_1689286082649_243) { // block id: 660
                var_1689286082649_662;
                (-20)
            } else { // block id: 665
                var_1689286082649_99;
                var_1689286082649_172
            }|1))) {
                case _ : Range<Int64> => 
                    var_1689286082649_99;
                    UInt64(229) * UInt64(10);
                    var_1689286082649_676
                
                case caseVar_1689286082649_680 => 
                    var_1689286082649_683
                
                case _ => 
                    ();
                    var_1689286082649_689;
                    var_1689286082649_676
                
            }
        }
;
        var chainCall423 = func_1689286082649_428(namedParam_1689286082649_429 : (match (Option<(Array<Unit>, String, Float32, Unit, Int64)>.None) {
            case newVar: Int16 => Option<Int16>.Some(newVar)
            case _ => Option<Int16>.None
        }));chainCall423.var_1689286082649_722
    }

}

