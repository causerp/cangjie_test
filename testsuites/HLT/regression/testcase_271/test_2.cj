/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC-PIPE: %run %run_opt %output %run_args 

public var var_1679144135007_24 : Option<Array<Unit>> = Option<Array<Unit>>.None
public var var_1679144135007_34 : Unit = ()
public let var_1679144135007_39 : Unit = ()
public var var_1679144135007_55 : Range<Int8> = ((Int8(Int8(UInt8(UInt8(206))))&127)..(Int8(Int8(UInt8(16)))&127):((Int64(UInt32(94))|1)))
public var var_1679144135007_127 : Int8 = Int8(-38)
public var var_1679144135007_131 : (Range<UInt16>, Range<UInt32>, Rune, String, Unit) = (((UInt16(100)&127)..=(UInt16(233)&127):((-32)|1)), ((UInt32(186)&127)..(UInt32(216)&127):((-66)|1)), r'm', ###"8sJ9*}QlK~"###, ())
public let var_1679144135007_141 : UInt8 = UInt8(Int8(44))
public var var_1679144135007_192 : Range<UInt32> = ((UInt32(24)&127)..=(UInt32(151)&127):((-106)|1))
public var var_1679144135007_200 : Int64 = 109
public var var_1679144135007_246 : Bool = false
public let var_1679144135007_273 : (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>) = ((-20), Float64((-23.0)), ((Int8(8)&127)..(Int8(-17)&127):((-64)|1)), ((Int32(UInt32(Int8(-93)))&127)..=(Int32(Int16(124))&127):((Int64(UInt8(48))|1))), ((Int32(111)&127)..=(Int32(103)&127):(122|1)))
public let var_1679144135007_319 : UInt32 = UInt32(196)
public let var_1679144135007_328 : UInt16 = UInt16(UInt16(111))
public var var_1679144135007_408 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
public var var_1679144135007_489 : ?Unit = Option<Unit>.None
public var var_1679144135007_499 : (Int32, Array<Array<Unit>>, Array<Unit>, Range<UInt16>, Array<Int64>, Array<Unit>, Int32) = (Int32(32), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], [(), (), (), (), (), (), (), (), (), ()], ((UInt16(UInt8(128))&127)..(UInt16(Int8(Int8(6)))&127):((Int64(Int32(UInt32(78)))|1))), [Int64(Int32(UInt8(232))), Int64(Int16(UInt16(22))), Int64((-97)), Int64(UInt64((-47))), 12, Int64(UInt64(Int32(-68))), 0, (-40), 63, (-69)], [(), (), (), (), (), (), (), (), (), ()], Int32(Int32(Int32(40))))
public var var_1679144135007_558 : Class_1679144135007_553 = Class_1679144135007_553()
public let var_1679144135007_568 : Int32 = Int32(-2)
public var var_1679144135007_576 : Range<UInt8> = ((UInt8(22)&127)..=(UInt8(185)&127):(32|1))
public var var_1679144135007_597 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1679144135007_659 : (Unit, UInt64) = ((), UInt64(229))
public var var_1679144135007_681 : Int16 = Int16(123)
public let var_1679144135007_685 : Array<Range<UInt32>> = [((UInt32(45)&127)..=(UInt32(194)&127):((-125)|1)), ((UInt32(178)&127)..(UInt32(49)&127):((-121)|1)), ((UInt32(Int16(Int8(-47)))&127)..(UInt32(31)&127):((Int64(UInt16(Int16(88)))|1))), ((UInt32(61)&127)..=(UInt32(122)&127):((-79)|1)), ((UInt32(129)&127)..=(UInt32(236)&127):((38|1))), ((UInt32(UInt32(198))&127)..=(UInt32(Int8(UInt8(49)))&127):(((-32)|1))), ((UInt32(31)&127)..(UInt32(195)&127):(58|1)), ((UInt32(47)&127)..(UInt32(Int16(Int8(-62)))&127):(((-19)|1))), ((UInt32(159)&127)..=(UInt32(65)&127):((-86)|1)), ((UInt32(Int8(-85))&127)..=(UInt32(UInt32(178))&127):(((-83)|1)))]
public let var_1679144135007_780 : Bool = true
public let var_1679144135007_893 : (Float64, Unit, Int64, Int32, Int16) = (Float64(Float64(Float64(55.0))), (), 91, Int32(125), Int16(-44))
public var var_1679144135007_909 : Int64 = Int64((-56))
public var var_1679144135007_963 : UInt32 = UInt32(Int8(UInt8(UInt8(UInt8(182)))))
public var var_1679144135007_1009 : Int64 = Int64(UInt16(Int16(UInt16(UInt8(218)))))
public var var_1679144135007_1037 : ?(Unit, Int8, Int16, Int64) = Option<(Unit, Int8, Int16, Int64)>.None
let var_1679144135007_1053 : (UInt8, Range<UInt16>, Unit, Int16, Option<(Unit, Int8, Int16, Int64)>) = (UInt8(Int8(UInt8(130))), ((UInt16(78)&127)..(UInt16(205)&127):(19|1)), (), Int16(UInt16(88)), Option<(Unit, Int8, Int16, Int64)>.None)
public let var_1679144135007_1066 : Array<Option<(Unit, Int8, Int16, Int64)>> = [(((-119), Float64(Float32(38.0)), ((Int8(44)&127)..=(Int8(-34)&127):((105|1))), ((Int32(14)&127)..(Int32(-66)&127):((68|1))), ((Int32(18)&127)..=(Int32(-94)&127):((-65)|1))) as (Unit, Int8, Int16, Int64)), (((UInt32(65)&127)..=(UInt32(119)&127):(30|1)) as (Unit, Int8, Int16, Int64)), Option<(Unit, Int8, Int16, Int64)>.None, (93 as (Unit, Int8, Int16, Int64)), (((), UInt64(114)) as (Unit, Int8, Int16, Int64)), Option<(Unit, Int8, Int16, Int64)>.None, Option<(Unit, Int8, Int16, Int64)>.None, (UInt8(158) as (Unit, Int8, Int16, Int64)), (Int16(-32) as (Unit, Int8, Int16, Int64)), (((Int32(10)&127)..(Int32(-127)&127):((106|1))) as (Unit, Int8, Int16, Int64))]
public var var_1679144135007_1123 : UInt64 = UInt64(78)
public var var_1679144135007_1128 : ((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>) = (((), Int8(Int8(102)), Int16(Int16(Int8(23))), 75), Option<(Unit, Int8, Int16, Int64)>.None, (((Int16(51)&127)..=(Int16(Int16(-88))&127):(((-36)|1))), ((Int8(-45)&127)..=(Int8(UInt8(254))&127):(((-87)|1))), (((Int8(-20)&127)..(Int8(-56)&127):(((-94)|1))) is UInt16), ((Int32(UInt8(93))&127)..(Int32(91)&127):((Int64(UInt64(247))|1))), ((Int32(UInt16(190))&127)..=(Int32(Int16(-74))&127):((Int64(Int16(-20))|1))), ((UInt16(205)&127)..(UInt16(104)&127):((55|1)))), [UInt64(240), UInt64(169), UInt64(174), UInt64(49), UInt64(64), UInt64(85), UInt64(74), UInt64(220), UInt64(191), UInt64(148)])
public let var_1679144135007_1176 : (Unit, Int8, Int16, Int64) = ((), Int8(Int8(67)), Int16(UInt16(198)), Int64(UInt32(62)))
public let var_1679144135007_1230 : ?Array<UInt64> = Option<Array<UInt64>>.None
public let var_1679144135007_1298 : Array<UInt64> = [UInt64(152), UInt64(UInt32(209)), UInt64(UInt32(Int16(Int16(58)))), UInt64(28), UInt64(Int8(UInt8(128))), UInt64(UInt64(UInt16(UInt16(141)))), UInt64(Int16(14)), UInt64(55), UInt64(UInt32(Int16(-38))), UInt64(UInt32(Int8(-50)))]
public var var_1679144135007_1350 : Array<UInt64> = [UInt64(85), UInt64(UInt16(Int16(89))), UInt64(UInt8(223)), UInt64(UInt32(Int32(10))), UInt64(170), UInt64(91), UInt64(182), UInt64(94), UInt64(UInt64(0)), UInt64(99)]
public var var_1679144135007_1381 : (String, Int32, (Int32, Array<Array<Unit>>, Array<Unit>, Range<UInt16>, Array<Int64>, Array<Unit>, Int32), Array<Unit>, UInt64, Int8) = ("Eug]^kLyf<", Int32(UInt32(96)), (Int32(Int32(-4)), [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]], [(), (), (), (), (), (), (), (), (), ()], ((UInt16(232)&127)..(UInt16(163)&127):((-80)|1)), [(-56), Int64(UInt16(29)), Int64(Int8(58)), (-64), (-96), Int64(UInt32(25)), (-127), Int64((-1)), (-35), (-80)], [(), (), (), (), (), (), (), (), (), ()], Int32(UInt32(151))), [(), (), (), (), (), (), (), (), (), ()], UInt64(UInt8(84)), Int8(Int8(UInt8(UInt8(137)))))
public let var_1679144135007_1522 : UInt64 = UInt64(UInt64(16))
public var var_1679144135007_1554 : Array<Array<UInt64>> = [[UInt64(180), UInt64(190), UInt64(130), UInt64(205), UInt64(56), UInt64(249), UInt64(1), UInt64(186), UInt64(230), UInt64(204)], [UInt64(192), UInt64(10), UInt64(69), UInt64(157), UInt64(76), UInt64(42), UInt64(188), UInt64(114), UInt64(21), UInt64(19)], [UInt64(101), UInt64(59), UInt64(77), UInt64(159), UInt64(29), UInt64(125), UInt64(71), UInt64(129), UInt64(25), UInt64(248)], [UInt64(146), UInt64(137), UInt64(89), UInt64(247), UInt64(196), UInt64(245), UInt64(208), UInt64(195), UInt64(209), UInt64(208)], [UInt64(202), UInt64(8), UInt64(145), UInt64(107), UInt64(209), UInt64(215), UInt64(86), UInt64(157), UInt64(87), UInt64(176)], [UInt64(131), UInt64(205), UInt64(55), UInt64(26), UInt64(228), UInt64(114), UInt64(29), UInt64(212), UInt64(190), UInt64(173)], [UInt64(152), UInt64(172), UInt64(164), UInt64(243), UInt64(12), UInt64(22), UInt64(19), UInt64(9), UInt64(94), UInt64(106)], [UInt64(138), UInt64(90), UInt64(136), UInt64(33), UInt64(82), UInt64(49), UInt64(162), UInt64(191), UInt64(244), UInt64(102)], [UInt64(191), UInt64(157), UInt64(52), UInt64(3), UInt64(235), UInt64(182), UInt64(10), UInt64(67), UInt64(75), UInt64(135)], [UInt64(186), UInt64(14), UInt64(50), UInt64(12), UInt64(142), UInt64(186), UInt64(41), UInt64(110), UInt64(147), UInt64(225)]]
public let var_1679144135007_1559 : UInt64 = UInt64(201)
public let var_1679144135007_1567 : Range<UInt32> = ((UInt32(16)&127)..=(UInt32(76)&127):((-10)|1))
public let var_1679144135007_1592 : Int8 = Int8(93)
public let var_1679144135007_1606 : Int16 = Int16(14)
public let var_1679144135007_1620 : Rune = r'd'
public var var_1679144135007_1635 : Unit = ()
public var var_1679144135007_1639 : Float64 = Float64((-76.0))
public var var_1679144135007_1715 : Int32 = Int32(4)
public let var_1679144135007_1773 : Range<Int16> = ((Int16(-95)&127)..=(Int16(28)&127):(47|1))
public var var_1679144135007_1816 : UInt16 = UInt16(112)
public let var_1679144135007_1882 : Bool = false
public var var_1679144135007_1887 : Range<Int32> = ((Int32(Int32(119))&127)..(Int32(Int8(Int8(-79)))&127):((Int64(30)|1)))
public let var_1679144135007_1926 : (Array<UInt64>, UInt64, Array<Range<UInt32>>, (Unit, UInt64), Bool, Range<UInt64>, (Unit, UInt64)) = ([UInt64(152), UInt64(39), UInt64(161), UInt64(Int32(UInt32(10))), UInt64(UInt64(Int32(-70))), UInt64(46), UInt64(221), UInt64(Int8(-85)), UInt64(55), UInt64((-82))], UInt64(UInt64(Int8(UInt8(7)))), [((UInt32(161)&127)..=(UInt32(1)&127):((-52)|1)), ((UInt32(193)&127)..(UInt32(103)&127):(39|1)), ((UInt32(33)&127)..=(UInt32(140)&127):(52|1)), ((UInt32(241)&127)..=(UInt32(163)&127):(62|1)), ((UInt32(28)&127)..(UInt32(72)&127):(4|1)), ((UInt32(194)&127)..(UInt32(199)&127):(54|1)), ((UInt32(45)&127)..(UInt32(52)&127):(114|1)), ((UInt32(158)&127)..(UInt32(15)&127):((-63)|1)), ((UInt32(247)&127)..(UInt32(76)&127):(45|1)), ((UInt32(106)&127)..=(UInt32(242)&127):((-15)|1))], ((), UInt64(UInt8(79))), false, ((UInt64(67)&127)..(UInt64(107)&127):(88|1)), ((), UInt64(10)))
public var var_1679144135007_2000 : Option<Bool> = (Int8(-23) as Bool)
public var var_1679144135007_2024 : Range<UInt16> = ((UInt16(227)&127)..(UInt16(82)&127):((-44)|1))
public let var_1679144135007_2076 : Unit = ()
public let var_1679144135007_2102 : String = "CXxokfXxNq"
public var var_1679144135007_2362 : UInt8 = UInt8(Int8(Int8(-31)))
public var var_1679144135007_2379 : Option<Int8> = Option<Int8>.None
public let var_1679144135007_2430 : Interface_1679144135007_556 = Class_1679144135007_553()
public let var_1679144135007_2473 : ?Range<Int32> = Option<Range<Int32>>.None
public let var_1679144135007_2528 : ?(Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>) = ((((UInt16(20)&127)..=(UInt16(42)&127):((-128)|1)), ((UInt32(220)&127)..(UInt32(146)&127):(87|1)), r'u', "@yrmSJk}Ae", ()) as (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>))
public let var_1679144135007_2562 : Struct_1679144135007_2558<Option<(Unit, Int8, Int16, Int64)>> = Struct_1679144135007_2558<Option<(Unit, Int8, Int16, Int64)>>()
var var_1679144135007_2573 : Enum_1679144135007_2570 = Enum_1679144135007_2570.defaultValue
public var var_1679144135007_2787 : String = "!,dy Yp${var_1679144135007_2102}[a{${var_1679144135007_2102}+${var_1679144135007_2102}"
public let var_1679144135007_2841 : UInt64 = UInt64(UInt16(UInt8(128)))
public let var_1679144135007_2874 : UInt64 = UInt64(Int8(-26))
var var_1679144135007_3019 : Unit = ()
public var var_1679144135007_3025 : Unit = ()


public interface Interface_1679144135007_556 {
    func func_1679144135007_1905(namedParam_1679144135007_1906 ! : UInt16, namedParam_1679144135007_1907 ! : ((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>), namedParam_1679144135007_1908 ! : (UInt8, Range<UInt16>, Unit, Int16, Option<(Unit, Int8, Int16, Int64)>), namedParam_1679144135007_1909 ! : (Range<UInt16>, Range<UInt32>, Rune, String, Unit)) : Bool { // block id: 1910
        let var_1679144135007_1970 : Range<UInt64> = ((UInt64(Int16(52))&127)..(UInt64(Int64(UInt16(88)))&127):(((-99)|1)));
        if ((Option<Bool>.Some(var_1679144135007_780) ?? try { // block id: 1920
            var_1679144135007_780
        } finally { // block id: 1922
            let var_1679144135007_1962 : UInt64 = UInt64(86);
            if (var_1679144135007_246) { var_1679144135007_1926 } else { ([UInt64(83), UInt64(64), UInt64(146), UInt64(26), UInt64(130), UInt64(200), UInt64(180), UInt64(10), UInt64(158), UInt64(223)], var_1679144135007_1962, var_1679144135007_685, (var_1679144135007_39, var_1679144135007_1962), true, var_1679144135007_1970, var_1679144135007_659) } ;
            var_1679144135007_1066;
            false
        })) { // block id: 1981
            var loopTimeVar_1679144135007_1986 : Range<UInt64> = ((UInt64(UInt64(UInt8(Int8(-62))))&127)..(UInt64(UInt16(UInt8(187)))&127):((Int64(Int8(UInt8(191)))|1)));
            for (i in loopTimeVar_1679144135007_1986 where true) {
                1.0
            };
            (var_1679144135007_2000 ?? var_1679144135007_246)
        } else if (((var_1679144135007_963 as Array<UInt64>) is Option<Bool>)) { // block id: 2007
            (Option<Rune>.Some(var_1679144135007_1620) ?? r'S');
            var var_1679144135007_2021 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            var var_1679144135007_2027 : Array<Int64> = [(-113), 58, 114, (-31), 89, (-105), (-75), 110, (-114), (-28)];
            match ((var_1679144135007_568, var_1679144135007_408, var_1679144135007_2021, var_1679144135007_2024, var_1679144135007_2027, [(), (), (), (), (), (), (), (), (), ()], Int32(37))) {
                case _ => 
                    var_1679144135007_246 &&= true;
                    var_1679144135007_1816--;
                    false
                
                case _ => 
                    var_1679144135007_1123;
                    var_1679144135007_1882
                
            }
        } else { // block id: 2044
            try (resource = Class_1679144135007_553()) { // block id: 2046

            } catch (e: Exception) { // block id: 2047
                var_1679144135007_246 &&= true
            } finally { // block id: 2051

            };
            var loopTimeVar_1679144135007_2056 : Int64 = 0;
            while ((var_1679144135007_246) && loopTimeVar_1679144135007_2056 < 100 ) {
                loopTimeVar_1679144135007_2056++;

            };
            if (var_1679144135007_246) { // block id: 2059
                ();
                ();
                true
            } else { // block id: 2063
                var_1679144135007_1053;
                if (var_1679144135007_780) { var_1679144135007_1926 } else { var_1679144135007_1926 } ;
                false
            }
        }
    }
;
    func func_1679144135007_1905(namedParam_1679144135007_1875 ! : Option<(Unit, Int8, Int16, Int64)>, namedParam_1679144135007_1876 ! : (Interface_1679144135007_556) -> Range<UInt32>) : String { // block id: 1879
        var loopTimeVar_1679144135007_1900 : Int64 = 0;
        while ((var_1679144135007_1882) && loopTimeVar_1679144135007_1900 < 100 ) {
            loopTimeVar_1679144135007_1900++;
            match (var_1679144135007_1887) {
                case _ => 
                    var_1679144135007_39
                
            }
        };
        let var_1679144135007_2082 : Range<UInt16> = ((UInt16(92)&127)..(UInt16(208)&127):(87|1));
        var var_1679144135007_2156 : Option<Rune> = ((Int64(UInt16(3)), (-48.0), ((Int8(72)&127)..(Int8(UInt8(14))&127):(((-83)|1))), ((Int32(92)&127)..=(Int32(56)&127):((Int64(Int32(-72))|1))), ((Int32(-57)&127)..=(Int32(119)&127):((-38)|1))) as Rune);
        if (var_1679144135007_558.func_1679144135007_1905(namedParam_1679144135007_1906 : var_1679144135007_1816, namedParam_1679144135007_1907 : var_1679144135007_1128, namedParam_1679144135007_1908 : (UInt8(105), ((UInt16(18)&127)..=(UInt16(244)&127):((-120)|1)), var_1679144135007_2076, Int16(6), var_1679144135007_1037), namedParam_1679144135007_1909 : (var_1679144135007_2082, ((UInt32(22)&127)..=(var_1679144135007_963&127):((var_1679144135007_909|1))), var_1679144135007_1620, "q'uCqD,]@*", ()))) { // block id: 2091
            (var_1679144135007_1639, var_1679144135007_34, 39, Int32(-88), var_1679144135007_681);
            if (true) { // block id: 2100
                var_1679144135007_2102
            } else if (var_1679144135007_780) { // block id: 2105
                var_1679144135007_39;
                (103, 17.0, var_1679144135007_55, ((Int32(-12)&127)..(Int32(73)&127):(19|1)), ((Int32(97)&127)..(Int32(8)&127):((-105)|1)));
                if (var_1679144135007_780) { "W+%vH(1.-}" } else { var_1679144135007_2102 } 
            } else { // block id: 2117
                var_1679144135007_2102
            }
        } else { // block id: 2119
            let var_1679144135007_2122 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            let var_1679144135007_2181 : UInt8 = UInt8(158);
            match (var_1679144135007_2122) {
                case _ : UInt16 => 
                    if (true) { ((var_1679144135007_909&127)..=((-63)&127):((var_1679144135007_1009|1))) } else { (((-29)&127)..(var_1679144135007_909&127):((14|1))) } ;
                    UInt8(149)
                
                case caseVar_1679144135007_2150 => 
                    var_1679144135007_1816 += UInt16(154);
                    var_1679144135007_2156;
                    var_1679144135007_141
                
                case _ : (UInt8, Range<UInt16>, Unit, Int16, Option<(Unit, Int8, Int16, Int64)>) => 
                    UInt32(107);
                    ();
                    var_1679144135007_2181 >> ((var_1679144135007_2181) & 7)
                
                case _ => 
                    UInt8(187)
                
                case _ => 
                    UInt8(98)
                
            };
            var_1679144135007_558.var_1679144135007_2194;
            var_1679144135007_2102
        }
    }
;
    func func_1679144135007_2433(param_1679144135007_2434 : Range<Int8>, namedParam_1679144135007_2435 ! : (Bool, Int64) -> Array<Unit>, namedParam_1679144135007_2439 ! : (UInt8) -> Option<Array<UInt64>>) : Unit { // block id: 2442
        var var_1679144135007_2448 : (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>) = (((Int16(96)&127)..(Int16(-76)&127):(((-55)|1))), ((Int8(UInt8(Int8(-111)))&127)..=(Int8(-79)&127):((102|1))), (Int32(98) is Rune), ((Int32(-96)&127)..=(Int32(UInt32(Int32(-58)))&127):((Int64(Int32(-1))|1))), ((Int32(-7)&127)..=(Int32(-119)&127):(120|1)), ((UInt16(170)&127)..=(UInt16(105)&127):((-46)|1)));
        try (resource = Class_1679144135007_553()) { // block id: 2444
            (var_1679144135007_55 as Unit);
            var_1679144135007_2448;
            match (var_1679144135007_2473) {
                case _ => 
                    var_1679144135007_1123 -= var_1679144135007_1559;
                    var_1679144135007_1123 = UInt64(208)
                
                case caseVar_1679144135007_2486 : Unit => 
                    var_1679144135007_34
                
                case _ : UInt32 => 
                    var_1679144135007_1635
                
                case _ => 
                    if (false) { var_1679144135007_1037 } else { var_1679144135007_1037 } ;
                    var_1679144135007_2076
                
            }
        } finally { // block id: 2500
            var_1679144135007_2024;
            if (var_1679144135007_1882) { // block id: 2504
                ();
                UInt16(51);
                ()
            } else if (var_1679144135007_1882) { // block id: 2509
                ();
                var_1679144135007_1715 /= ((Int32(-82)) | 1);
                ()
            }
        };
        var_1679144135007_558.var_1679144135007_2518;
        let var_1679144135007_2537 : (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>) = (Int64(UInt16(216)), Float64(Float32(-76.0)), ((Int8(-25)&127)..=(Int8(47)&127):(51|1)), ((Int32(UInt8(111))&127)..=(Int32(-50)&127):((Int64(UInt8(UInt8(108)))|1))), ((Int32(UInt8(225))&127)..=(Int32(-88)&127):(((-117)|1))));
        if (((var_1679144135007_2528 ?? var_1679144135007_2537) is (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>))) { // block id: 2556
            var_1679144135007_2562.var_1679144135007_2565;
            UInt32(var_1679144135007_1715);
            match (var_1679144135007_2573) {
                case defaultValue => 
                    var_1679144135007_1635
                
                case defaultValue => 
                    var_1679144135007_246 ||= var_1679144135007_780;
                    ();
                    var_1679144135007_34
                
                case caseVar_1679144135007_2589 => 
                    ();
                    [(), (), (), (), (), (), (), (), (), ()];
                    ()
                
                case _ => 
                    var_1679144135007_1381;
                    var_1679144135007_1715 |= Int32(-43)
                
            }
        }
    }

}

public open class Class_1679144135007_553 <: Interface_1679144135007_556 & Resource {
    public init() { // block id: 555

    }
;
    public let var_1679144135007_561 : Bool = false;
    public static mut prop var_1679144135007_1441 : UInt64 { // block id: 1442
        get() { // block id: 1444
            [((UInt32(UInt16(161))&127)..=(UInt32(238)&127):((Int64(Int32(-122))|1))), ((UInt32(28)&127)..(UInt32(71)&127):(74|1)), ((UInt32(77)&127)..=(UInt32(248)&127):(((-121)|1))), ((UInt32(42)&127)..(UInt32(99)&127):(111|1)), ((UInt32(UInt8(198))&127)..(UInt32(206)&127):((Int64(UInt64(203))|1))), ((UInt32(193)&127)..=(UInt32(UInt32(31))&127):(((-68)|1))), ((UInt32(77)&127)..(UInt32(97)&127):(((-51)|1))), ((UInt32(28)&127)..(UInt32(121)&127):(71|1)), ((UInt32(Int32(20))&127)..=(UInt32(188)&127):(((-97)|1))), ((UInt32(152)&127)..(UInt32(0)&127):(1|1))];
            UInt64(164);
            var_1679144135007_3054
        }

        set(Value) { // block id: 1483
            (((UInt64((-77))&127)..(UInt64(UInt64(56))&127):((101|1))) as Array<UInt64>);
            ();
            ();
            var_1679144135007_3054 = Value
        }

    };
    public static let var_1679144135007_1759 : Bool = true;
    public mut prop var_1679144135007_2194 : Unit { // block id: 2195
        get() { // block id: 2197

        }

        set(Value) { // block id: 2200
            ();
            ();
            ()
        }

    };
    public static mut prop var_1679144135007_2237 : Rune { // block id: 2238
        get() { // block id: 2240
            ();
            r'j'
        }

        set(Value) { // block id: 2245
            [[UInt64(UInt64(48)), UInt64(233), UInt64(UInt64(61)), UInt64(176), UInt64(Int32(-82)), UInt64(252), UInt64(189), UInt64(145), UInt64(UInt64(25)), UInt64(143)], [UInt64(36), UInt64(209), UInt64(UInt16(30)), UInt64(161), UInt64(Int8(107)), UInt64(UInt8(197)), UInt64(141), UInt64(UInt32(254)), UInt64(54), UInt64(UInt64(12))], [UInt64(233), UInt64(234), UInt64(196), UInt64(146), UInt64(196), UInt64(188), UInt64(98), UInt64(43), UInt64(86), UInt64(207)], [UInt64(199), UInt64(206), UInt64(243), UInt64(204), UInt64(87), UInt64(42), UInt64(112), UInt64(9), UInt64(198), UInt64(142)], [UInt64(147), UInt64(55), UInt64(78), UInt64(175), UInt64(15), UInt64(189), UInt64(70), UInt64(145), UInt64(201), UInt64(19)], [UInt64(16), UInt64(148), UInt64(UInt64(51)), UInt64(75), UInt64(UInt64(163)), UInt64((-34)), UInt64(236), UInt64(254), UInt64(69), UInt64((-48))], [UInt64(UInt32(172)), UInt64(UInt64(159)), UInt64(Int16(-43)), UInt64(170), UInt64(11), UInt64(88), UInt64(221), UInt64(129), UInt64(UInt16(19)), UInt64(Int32(32))], [UInt64(87), UInt64(34), UInt64(189), UInt64((-64)), UInt64(Int16(94)), UInt64(27), UInt64(204), UInt64(105), UInt64(UInt64(172)), UInt64(50)], [UInt64(230), UInt64(UInt64(150)), UInt64(137), UInt64(Int8(106)), UInt64(50), UInt64(40), UInt64(139), UInt64(Int32(-111)), UInt64(Int16(-122)), UInt64(74)], [UInt64(UInt64(124)), UInt64(118), UInt64(50), UInt64(147), UInt64(UInt64(123)), UInt64(85), UInt64(UInt16(177)), UInt64(Int16(121)), UInt64(129), UInt64(UInt32(230))]];
            ()
        }

    };
    public static let var_1679144135007_2419 : Int64 = (-38);
    public let var_1679144135007_2518 : UInt64 = UInt64(219);
    public let var_1679144135007_2612 : UInt8 = UInt8(152);
    public static prop var_1679144135007_2645 : String { // block id: 2646
        get() { // block id: 2648
            ();
            ();
            "-64JYslOa["
        }

    };
    static mut prop var_1679144135007_3054 : UInt64 { // block id: 3055
        get() { // block id: 3057
            ();
            UInt64(249)
        }

        set(Value) { // block id: 3062
            ();
            ()
        }

    }
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public func func_1679144135007_492<T0, T1>(param_1679144135007_493 : Range<UInt32>) : Unit where T1 <: Interface_1679144135007_556 { // block id: 494
    var_1679144135007_499[2][4];
    let var_1679144135007_619 : Unit = ();
    var var_1679144135007_627 : Bool = ([UInt64(228), UInt64(103), UInt64(87), UInt64(131), UInt64(119), UInt64(124), UInt64(99), UInt64(98), UInt64(111), UInt64(165)] is Int8);
    if ((var_1679144135007_558.var_1679144135007_561)) { [(), (), (), (), (), (), (), (), (), ()] } else { match (((Int32(-96)&127)..(var_1679144135007_568&127):((99|1)))) {
        case _ => 
            ();
            var_1679144135007_576;
            [var_1679144135007_39, var_1679144135007_34, (), var_1679144135007_39, (), (), var_1679144135007_34, (), (), var_1679144135007_34]
        
        case caseVar_1679144135007_591 : (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>) => 
            ();
            if (var_1679144135007_246) { var_1679144135007_597 } else { var_1679144135007_597 } 
        
        case _ : Range<Int32> => 
            let var_1679144135007_613 : Unit = ();
            if (var_1679144135007_246) { [(), (), (), (), (), (), (), (), (), ()] } else { [(), var_1679144135007_34, var_1679144135007_34, var_1679144135007_39, (), var_1679144135007_613, (), (), var_1679144135007_613, var_1679144135007_619] } 
        
        case _ => 
            var_1679144135007_200++;
            var_1679144135007_627 ||= false;
            var_1679144135007_597
        
    } } [0]
}

public func func_1679144135007_649(param_1679144135007_650 : Interface_1679144135007_556) : Range<UInt32> { // block id: 651
    ();
    let var_1679144135007_670 : (Unit, Int8, Int16, Int64) = ((), Int8(Int8(44)), Int16(-75), 107);
    match (var_1679144135007_659[1]) {
        case _ : UInt64 => 
            if (true) { var_1679144135007_670 } else { (var_1679144135007_39, var_1679144135007_127, var_1679144135007_681, var_1679144135007_200) } ;
            var_1679144135007_685
        
        case _ => 
            ();
            var_1679144135007_685
        
        case 176 | 208 | 99 => 
            let var_1679144135007_735 : Array<Range<UInt32>> = [((UInt32(160)&127)..(UInt32(30)&127):(9|1)), ((UInt32(120)&127)..(UInt32(244)&127):(35|1)), ((UInt32(183)&127)..=(UInt32(184)&127):(37|1)), ((UInt32(Int32(Int16(-10)))&127)..=(UInt32(Int16(UInt8(139)))&127):((Int64(Int8(Int8(-80)))|1))), ((UInt32(127)&127)..(UInt32(67)&127):((-103)|1)), ((UInt32(30)&127)..=(UInt32(Int32(28))&127):(((-39)|1))), ((UInt32(Int8(-109))&127)..(UInt32(Int32(Int32(-85)))&127):((Int64(UInt8(UInt8(174)))|1))), ((UInt32(94)&127)..(UInt32(118)&127):(103|1)), ((UInt32(UInt32(Int8(-62)))&127)..=(UInt32(UInt16(Int16(28)))&127):((66|1))), ((UInt32(90)&127)..(UInt32(216)&127):(42|1))];
            if (true) { [((UInt32(204)&127)..=(UInt32(195)&127):(40|1)), ((UInt32(9)&127)..(UInt32(106)&127):((-93)|1)), ((UInt32(238)&127)..=(UInt32(52)&127):((-126)|1)), ((UInt32(209)&127)..(UInt32(55)&127):((-59)|1)), ((UInt32(99)&127)..=(UInt32(184)&127):((-72)|1)), ((UInt32(68)&127)..=(UInt32(225)&127):(53|1)), ((UInt32(81)&127)..=(UInt32(84)&127):(70|1)), ((UInt32(69)&127)..=(UInt32(3)&127):(22|1)), ((UInt32(227)&127)..=(UInt32(171)&127):((-89)|1)), ((UInt32(139)&127)..(UInt32(115)&127):((-108)|1))] } else { var_1679144135007_735 } 
        
        case _ => 
            UInt32(4);
            if (var_1679144135007_780) { var_1679144135007_685 } else { [var_1679144135007_192, var_1679144135007_192, ((UInt32(118)&127)..=(UInt32(166)&127):((-92)|1)), var_1679144135007_192, var_1679144135007_192, ((UInt32(70)&127)..(var_1679144135007_319&127):((var_1679144135007_200|1))), ((UInt32(46)&127)..(UInt32(136)&127):(51|1)), ((UInt32(119)&127)..=(UInt32(60)&127):((var_1679144135007_200|1))), ((var_1679144135007_319&127)..=(UInt32(11)&127):((var_1679144135007_200|1))), ((UInt32(250)&127)..=(UInt32(66)&127):(110|1))] } 
        
    }[8]
}

public func func_1679144135007_387(param_1679144135007_388 : Bool, optionalParam_1679144135007_389 ! : Int64 = Int64(UInt8(62))) : Array<Unit> { // block id: 392
    try { // block id: 397
        var_1679144135007_39;
        var_1679144135007_200 + var_1679144135007_200;
        if (var_1679144135007_246) { [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] } else { [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] } 
    } finally { // block id: 406
        var_1679144135007_408
    }[2][0];
    var var_1679144135007_634 : (Range<UInt32>) -> Unit = { lambdaParameter_1679144135007_637 : Range<UInt32> =>  };
    let var_1679144135007_643 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    let var_1679144135007_810 : (Array<UInt64>, UInt64, Array<Range<UInt32>>, (Unit, UInt64), Bool, Range<UInt64>, (Unit, UInt64)) = ([UInt64(151), UInt64(19), UInt64(178), UInt64(197), UInt64(137), UInt64(170), UInt64(60), UInt64(80), UInt64(62), UInt64(16)], UInt64(Int32(Int32(99))), [((UInt32(132)&127)..(UInt32(150)&127):((-52)|1)), ((UInt32(138)&127)..=(UInt32(202)&127):((-15)|1)), ((UInt32(80)&127)..=(UInt32(22)&127):((-77)|1)), ((UInt32(109)&127)..(UInt32(7)&127):((-20)|1)), ((UInt32(109)&127)..(UInt32(72)&127):(124|1)), ((UInt32(43)&127)..=(UInt32(2)&127):((-36)|1)), ((UInt32(79)&127)..(UInt32(27)&127):(16|1)), ((UInt32(53)&127)..=(UInt32(130)&127):((-44)|1)), ((UInt32(199)&127)..=(UInt32(239)&127):(12|1)), ((UInt32(123)&127)..(UInt32(9)&127):(76|1))], ((), UInt64(UInt16(UInt16(241)))), true, ((UInt64(91)&127)..=(UInt64(174)&127):((Int64(UInt16(UInt16(36)))|1))), ((), UInt64(Int16(125))));
    var loopTimeVar_1679144135007_836 : Int64 = 0;
    var loopTimeVar_1679144135007_844 : Array<Range<UInt32>> = [((UInt32(UInt32(UInt32(230)))&127)..(UInt32(UInt32(180))&127):((120|1))), ((UInt32(229)&127)..(UInt32(132)&127):((-103)|1)), ((UInt32(UInt16(47))&127)..(UInt32(7)&127):((Int64(Int16(4))|1))), ((UInt32(195)&127)..(UInt32(32)&127):((Int64(UInt16(Int16(9)))|1))), ((UInt32(137)&127)..(UInt32(59)&127):(115|1)), ((UInt32(188)&127)..=(UInt32(126)&127):((-36)|1)), ((UInt32(60)&127)..(UInt32(37)&127):((8|1))), ((UInt32(179)&127)..(UInt32(UInt32(UInt32(241)))&127):(((-128)|1))), ((UInt32(UInt32(Int32(-62)))&127)..(UInt32(120)&127):((Int64(UInt64(Int32(-53)))|1))), ((UInt32(186)&127)..(UInt32(87)&127):((-24)|1))];
    let var_1679144135007_950 : Int64 = (-118);
    [(var_1679144135007_489 ?? (((UInt32(27)&127)..=(UInt32(109)&127):(105|1))|>var_1679144135007_634)), var_1679144135007_34, var_1679144135007_643[4], (), func_1679144135007_492<Array<Array<Unit>>, Interface_1679144135007_556>((Class_1679144135007_553()|>func_1679144135007_649)), while ((var_1679144135007_810[4]) && loopTimeVar_1679144135007_836 < 100 ) {
        loopTimeVar_1679144135007_836++;

    }, for (i in loopTimeVar_1679144135007_844 where var_1679144135007_558.var_1679144135007_561) {
        var_1679144135007_34;
        ()
    }, if (false) { // block id: 891
        var_1679144135007_893
    } else { // block id: 903
        ((UInt32(66)&127)..(UInt32(131)&127):(77|1));
        (6.0, (), var_1679144135007_909, Int32(54), Int16(-51));
        ((-123.0), (), (-63), Int32(-117), Int16(-22))
    }[1], (try { // block id: 924
        var_1679144135007_34;
        var_1679144135007_192
    } catch (e: Exception) { // block id: 927
        let var_1679144135007_931 : UInt64 = UInt64(83);
        [UInt64(163), var_1679144135007_931, var_1679144135007_931, UInt64(115), UInt64(131), var_1679144135007_931, var_1679144135007_931, UInt64(61), UInt64(212), UInt64(80)];
        var_1679144135007_568 >> ((Int32(9)) & 7);
        ((UInt32(157)&127)..(UInt32(127)&127):(72|1))
    } finally { // block id: 945
        ((var_1679144135007_319&127)..=(var_1679144135007_319&127):((var_1679144135007_950|1)))
    }|>func_1679144135007_492<Array<Array<Unit>>, Interface_1679144135007_556>), [(), (), (), (), (), (), (), (), (), ()][5]]
}


public func func_1679144135007_1033(param_1679144135007_1034 : UInt64) : Option<(Unit, Int8, Int16, Int64)> { // block id: 1035
    var_1679144135007_1037
}


public func func_1679144135007_1206(param_1679144135007_1207 : UInt8) : Option<Array<UInt64>> { // block id: 1208
    Option<Array<UInt64>>.None
}

public func func_1679144135007_1213<T0>(param_1679144135007_1214 : Array<Option<(Unit, Int8, Int16, Int64)>>) : Array<UInt64> { // block id: 1215
    if (match (match (var_1679144135007_489) {
        case caseVar_1679144135007_1222 => 
            ();
            if (var_1679144135007_780) { Option<Array<UInt64>>.Some([UInt64(64), UInt64(148), UInt64(130), UInt64(71), UInt64(111), UInt64(198), UInt64(149), UInt64(193), UInt64(6), UInt64(40)]) } else { var_1679144135007_1230 } 
        
        case caseVar_1679144135007_1234 => 
            var_1679144135007_681 >>= ((Int16(-54)) & 7);
            Float32(-10.0);
            Option<Array<UInt64>>.None
        
        case _ => 
            var_1679144135007_1230
        
    }) {
        case _ : ((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>) => 
            false
        
        case _ : (Int32, Array<Array<Unit>>, Array<Unit>, Range<UInt16>, Array<Int64>, Array<Unit>, Int32) => 
            if (var_1679144135007_246) { [UInt64(30), UInt64(58), UInt64(127), UInt64(51), UInt64(151), UInt64(0), UInt64(244), UInt64(56), UInt64(75), UInt64(158)] } else { [UInt64(3), UInt64(210), UInt64(192), UInt64(70), UInt64(71), UInt64(39), UInt64(249), UInt64(148), UInt64(17), UInt64(76)] } ;
            ();
            var_1679144135007_780
        
        case _ : (Unit, UInt64) => 
            let var_1679144135007_1262 : Float32 = Float32(Float32(Float32(15.0)));
            -var_1679144135007_1262;
            var_1679144135007_780
        
        case _ => 
            [(), (), (), (), var_1679144135007_34, (), var_1679144135007_34, (), (), ()];
            false
        
    }) { [UInt64(46), UInt64(85), UInt64(35), UInt64(68), UInt64(210), UInt64(41), UInt64(104), UInt64(115), UInt64(166), UInt64(21)] } else { [[UInt64(166), UInt64(83), UInt64(48), var_1679144135007_1123, UInt64(180), UInt64(201), UInt64(57), UInt64(20), UInt64(118), var_1679144135007_1123], [UInt64(6), UInt64(112), UInt64(115), UInt64(23), UInt64(92), UInt64(11), UInt64(156), UInt64(119), UInt64(13), UInt64(220)], var_1679144135007_1298, var_1679144135007_1298, [UInt64(174), var_1679144135007_1123, UInt64(110), var_1679144135007_1123, UInt64(173), var_1679144135007_1123, UInt64(222), UInt64(18), UInt64(135), UInt64(105)], [UInt64(147), UInt64(231), UInt64(49), var_1679144135007_1123, var_1679144135007_1123, var_1679144135007_1123, UInt64(137), UInt64(234), UInt64(175), var_1679144135007_1123], [UInt64(67), UInt64(235), UInt64(150), UInt64(216), UInt64(29), UInt64(196), UInt64(20), UInt64(116), UInt64(4), UInt64(235)], var_1679144135007_1350, [UInt64(162), UInt64(86), UInt64(204), UInt64(187), UInt64(212), UInt64(95), UInt64(148), UInt64(201), UInt64(6), UInt64(151)], var_1679144135007_1298][4] } 
}

public func func_1679144135007_1192(namedParam_1679144135007_1193 ! : Class_1679144135007_553, namedParam_1679144135007_1194 ! : Option<Array<Unit>>, namedParam_1679144135007_1195 ! : (Float64, Unit, Int64, Int32, Int16), optionalParam_1679144135007_1196 ! : Array<Range<UInt32>> = [((UInt32(227)&127)..(UInt32(140)&127):((-83)|1)), ((UInt32(86)&127)..=(UInt32(48)&127):((-78)|1)), ((UInt32(137)&127)..=(UInt32(242)&127):((-1)|1)), ((UInt32(20)&127)..(UInt32(28)&127):(51|1)), ((UInt32(13)&127)..=(UInt32(110)&127):(82|1)), ((UInt32(184)&127)..(UInt32(138)&127):((-113)|1)), ((UInt32(108)&127)..=(UInt32(89)&127):((-78)|1)), ((UInt32(184)&127)..=(UInt32(133)&127):((-124)|1)), ((UInt32(92)&127)..(UInt32(39)&127):(58|1)), ((UInt32(108)&127)..(UInt32(49)&127):(40|1))]) : UInt64 { // block id: 1198
    var var_1679144135007_1372 : (Array<Option<(Unit, Int8, Int16, Int64)>>) -> Array<UInt64> = func_1679144135007_1213<Range<UInt8>>;
    ((var_1679144135007_141|>func_1679144135007_1206) ?? (var_1679144135007_1066|>var_1679144135007_1372))[9];
    (var_1679144135007_1381[4] * (Class_1679144135007_553.var_1679144135007_1441)) << (((try { // block id: 1495
        UInt64(198) / ((var_1679144135007_1123) | 1)
    } finally { // block id: 1499
        let var_1679144135007_1529 : UInt64 = UInt64(Int8(Int8(116)));
        let var_1679144135007_1534 : UInt64 = UInt64(UInt64(96));
        if (var_1679144135007_780) { [[var_1679144135007_1123, var_1679144135007_1123, var_1679144135007_1123, UInt64(159), var_1679144135007_1123, UInt64(101), UInt64(91), var_1679144135007_1123, var_1679144135007_1123, var_1679144135007_1123], [UInt64(17), UInt64(68), UInt64(235), UInt64(142), UInt64(137), UInt64(94), UInt64(80), UInt64(156), UInt64(142), UInt64(50)], var_1679144135007_1298, [var_1679144135007_1123, var_1679144135007_1123, var_1679144135007_1123, UInt64(212), var_1679144135007_1522, UInt64(181), var_1679144135007_1123, UInt64(208), var_1679144135007_1529, var_1679144135007_1534], var_1679144135007_1350, [UInt64(5), UInt64(196), UInt64(202), UInt64(222), UInt64(199), UInt64(48), UInt64(218), UInt64(158), UInt64(45), UInt64(138)], [UInt64(118), var_1679144135007_1529, var_1679144135007_1123, var_1679144135007_1529, var_1679144135007_1123, var_1679144135007_1522, UInt64(236), UInt64(196), var_1679144135007_1522, UInt64(221)], var_1679144135007_1298, [UInt64(41), UInt64(193), UInt64(244), UInt64(101), UInt64(252), UInt64(113), UInt64(107), UInt64(177), UInt64(128), UInt64(187)], var_1679144135007_1350] } else { var_1679144135007_1554 } ;
        22;
        UInt64(18)
    } & var_1679144135007_1559)) & 7)
}

public func func_1679144135007_382<T0, T1>(param_1679144135007_383 : Rune) : (Unit, Int8, Int16, Int64) { // block id: 384
    var var_1679144135007_972 : UInt16 = UInt16(UInt16(130));
    func_1679144135007_387(if (true) { // block id: 957
        true
    } else if (false) { // block id: 960
        var_1679144135007_963 |= UInt32(179);
        var_1679144135007_972 /= ((var_1679144135007_328) | 1);
        false
    } else { // block id: 977
        var_1679144135007_568 > Int32(-9)
    }, optionalParam_1679144135007_389 : try { // block id: 982
        if (false) { [var_1679144135007_909, (-65), 90, var_1679144135007_200, 25, var_1679144135007_200, (-74), var_1679144135007_909, 93, var_1679144135007_909] } else { [27, (-87), (-107), (-27), var_1679144135007_200, 48, 63, 109, 57, 119] } ;
        var_1679144135007_39;
        var_1679144135007_1009
    } catch (_) { // block id: 1015
        (-37)
    } finally { // block id: 1017
        var var_1679144135007_1020 : UInt8 = UInt8(Int8(56));
        var_1679144135007_1020++;
        UInt16(84);
        123
    })[7];
    var_1679144135007_34;
    ((func_1679144135007_1192(namedParam_1679144135007_1193 : Class_1679144135007_553(), namedParam_1679144135007_1194 : var_1679144135007_24, namedParam_1679144135007_1195 : var_1679144135007_893, optionalParam_1679144135007_1196 : [var_1679144135007_192, var_1679144135007_1567, ((UInt32(54)&127)..(UInt32(135)&127):(82|1)), var_1679144135007_1567, ((var_1679144135007_319&127)..(var_1679144135007_319&127):(((-69)|1))), var_1679144135007_192, ((UInt32(201)&127)..(UInt32(75)&127):((-96)|1)), var_1679144135007_1567, var_1679144135007_192, ((var_1679144135007_319&127)..(UInt32(222)&127):((124|1)))])|>{ lambdaParameter_1679144135007_1041 : UInt64 => [if (var_1679144135007_780) { var_1679144135007_1037 } else { var_1679144135007_1037 } , var_1679144135007_1053[4], var_1679144135007_1066[9], if (var_1679144135007_780) { var_1679144135007_1037 } else { var_1679144135007_1037 } , var_1679144135007_1037, try { // block id: 1109
        var_1679144135007_246 ||= var_1679144135007_780;
        var_1679144135007_681 *= var_1679144135007_681;
        var_1679144135007_1037
    } finally { // block id: 1117
        ();
        var_1679144135007_39;
        Option<(Unit, Int8, Int16, Int64)>.None
    }, func_1679144135007_1033(var_1679144135007_1123), var_1679144135007_1128[1], Option<(Unit, Int8, Int16, Int64)>.Some(var_1679144135007_1176), if (var_1679144135007_246) { Option<(Unit, Int8, Int16, Int64)>.Some(var_1679144135007_1176) } else { var_1679144135007_1037 } ][7] }) ?? if (var_1679144135007_558.var_1679144135007_561) { // block id: 1587
        ();
        ((), var_1679144135007_1592, Int16(79), var_1679144135007_200)
    } else if (var_1679144135007_780 && var_1679144135007_246) { // block id: 1599
        ();
        var_1679144135007_39;
        (var_1679144135007_34, var_1679144135007_127, var_1679144135007_1606, 124)
    } else { // block id: 1609
        var_1679144135007_34;
        ((), Int8(-58), Int16(55), (-102))
    })
}

public func func_1679144135007_347(namedParam_1679144135007_348 ! : Option<Array<Unit>>) : Int64 { // block id: 349
    let var_1679144135007_1617 : (Rune) -> (Unit, Int8, Int16, Int64) = func_1679144135007_382<Array<Array<UInt64>>, Array<Array<UInt64>>>;
    if (match (Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()])) {
        case _ => 
            ();
            true
        
        case _ : Range<Int64> => 
            ();
            true
        
        case _ => 
            let var_1679144135007_369 : (Unit, Int8, Int16, Int64) = ((), Int8(-99), Int16(UInt8(130)), Int64(UInt8(Int8(Int8(-16)))));
            var_1679144135007_369;
            !true
        
    }) { (var_1679144135007_1620|>var_1679144135007_1617) } else { var_1679144135007_1176 } [3]
}



func func_1679144135007_340(param_1679144135007_341 : String, param_1679144135007_342 : Range<Int32>) : Unit { // block id: 343
    var var_1679144135007_1662 : Float32 = Float32(Float32(Float32(-11.0)));
    var var_1679144135007_1675 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    var var_1679144135007_1805 : Range<Int32> = ((Int32(-68)&127)..=(Int32(90)&127):((-111)|1));
    if (func_1679144135007_347(namedParam_1679144135007_348 : var_1679144135007_24) < (-68)) { // block id: 1626
        match (Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()])) {
            case caseVar_1679144135007_1632 : Range<Int8> => 
                var_1679144135007_1635;
                var_1679144135007_1639 /= Float64((Int32(108.0)) | 1)
            
            case _ : Option<Unit> => 
                ();
                ()
            
            case _ => 
                ();
                ()
            
        };
        let var_1679144135007_1678 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        match (Option<Unit>.None) {
            case caseVar_1679144135007_1656 => 
                ();
                Float32(33.0) + var_1679144135007_1662;
                -var_1679144135007_1662
            
            case caseVar_1679144135007_1670 => 
                [[(), (), (), (), (), (), (), (), (), ()], var_1679144135007_1675, var_1679144135007_1678, var_1679144135007_1675, [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), var_1679144135007_34, var_1679144135007_1635, (), var_1679144135007_39, (), (), var_1679144135007_1635, var_1679144135007_39, var_1679144135007_1635], [(), (), (), (), (), (), (), (), (), ()], var_1679144135007_1678];
                Float32(-110.0) - var_1679144135007_1662
            
            case _ => 
                var_1679144135007_1715 -= Int32(-107);
                ((UInt64(177)&127)..=(UInt64(1)&127):((-21)|1));
                var_1679144135007_1662 / Float32((Int32(var_1679144135007_1662)) | 1)
            
            case _ => 
                var var_1679144135007_1727 : (Array<UInt64>, UInt64, Array<Range<UInt32>>, (Unit, UInt64), Bool, Range<UInt64>, (Unit, UInt64)) = ([UInt64(127), UInt64(25), UInt64(5), UInt64(142), UInt64(176), UInt64(249), UInt64(44), UInt64(147), UInt64(254), UInt64(179)], UInt64(Int16(37)), [((UInt32(81)&127)..=(UInt32(227)&127):(18|1)), ((UInt32(157)&127)..(UInt32(64)&127):(84|1)), ((UInt32(153)&127)..(UInt32(80)&127):(39|1)), ((UInt32(11)&127)..=(UInt32(223)&127):(116|1)), ((UInt32(171)&127)..=(UInt32(219)&127):(98|1)), ((UInt32(239)&127)..=(UInt32(32)&127):(41|1)), ((UInt32(68)&127)..(UInt32(236)&127):(32|1)), ((UInt32(89)&127)..(UInt32(170)&127):((-55)|1)), ((UInt32(88)&127)..=(UInt32(79)&127):((-107)|1)), ((UInt32(125)&127)..=(UInt32(84)&127):(60|1))], ((), UInt64(55)), (((UInt16(151)&127)..(UInt16(143)&127):(78|1)) is UInt16), ((UInt64(3)&127)..=(UInt64(171)&127):((Int64(UInt16(67))|1))), ((), UInt64(Int8(-71))));
                if (var_1679144135007_780) { var_1679144135007_1727 } else { var_1679144135007_1727 } ;
                let var_1679144135007_1751 : Float32 = Float32(Float32(Float32(Float32(87.0))));
                Float32(-36.0) - var_1679144135007_1751
            
        }
    } else if (Class_1679144135007_553.var_1679144135007_1759) { // block id: 1761
        Float32(var_1679144135007_1662);
        match (Option<Unit>.Some(())) {
            case _ => 
                if (var_1679144135007_780) { var_1679144135007_1773 } else { ((Int16(-60)&127)..=(var_1679144135007_1606&127):((123|1))) } ;
                var_1679144135007_39;
                Float32(55.0) - var_1679144135007_1662
            
            case caseVar_1679144135007_1785 : (Int32, Array<Array<Unit>>, Array<Unit>, Range<UInt16>, Array<Int64>, Array<Unit>, Int32) => 
                var_1679144135007_1662
            
            case _ => 
                ();
                var_1679144135007_1715 |= var_1679144135007_568;
                var_1679144135007_1662 * var_1679144135007_1662
            
            case _ : (Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>) => 
                var_1679144135007_1662
            
            case _ => 
                var_1679144135007_1805;
                Float32(33.0) * var_1679144135007_1662
            
        }
    } else { // block id: 1810
        if (var_1679144135007_780) { // block id: 1813
            var_1679144135007_1816 += var_1679144135007_1816;
            var_1679144135007_34
        };
        match (Option<(Unit, Int8, Int16, Int64)>.Some((var_1679144135007_1635, var_1679144135007_127, Int16(45), var_1679144135007_1009))) {
            case _ => 
                var_1679144135007_39;
                if (false) { ((Int16(-23)&127)..=(Int16(-65)&127):(13|1)) } else { ((var_1679144135007_1606&127)..(Int16(102)&127):(((-40)|1))) } ;
                if (var_1679144135007_246) { Class_1679144135007_553() } else { Class_1679144135007_553() } 
            
        };
        Float32(-3.0)
    };
    var loopTimeVar_1679144135007_1870 : Int64 = 0;
    while ((if ((Option<Bool>.None ?? true)) { // block id: 1851
        var_1679144135007_963 <<= ((UInt32(55)) & 7);
        false
    } else { // block id: 1856
        !false
    }) && loopTimeVar_1679144135007_1870 < 100 ) {
        loopTimeVar_1679144135007_1870++;
        var var_1679144135007_1866 : Option<Int8> = Option<Int8>.None;
        (var_1679144135007_1866 ?? var_1679144135007_1592)
    }
}




public func func_1679144135007_336(param_1679144135007_337 : Int8) : Range<UInt16> { // block id: 338
    var var_1679144135007_2207 : (Interface_1679144135007_556) -> Range<UInt32> = func_1679144135007_649;
    func_1679144135007_340(var_1679144135007_558.func_1679144135007_1905(namedParam_1679144135007_1875 : var_1679144135007_1037, namedParam_1679144135007_1876 : var_1679144135007_2207), if (false) { ((Int32(-39)&127)..(Int32(-75)&127):(((-2)|1))) } else { (Option<Range<Int32>>.None ?? ((Int32(101)&127)..=(Int32(103)&127):((83|1)))) } );
    ((UInt16(224)&127)..=(UInt16(221)&127):((-105)|1))
}

public func func_1679144135007_237(optionalParam_1679144135007_238 ! : UInt32 = UInt32(UInt8(199))) : Range<Int8> { // block id: 241
    var var_1679144135007_270 : UInt64 = UInt64(89);
    match (if (if (var_1679144135007_246) { // block id: 248
        var_1679144135007_127 |= Int8(30);
        true && var_1679144135007_246
    } else if (true) { // block id: 256
        var var_1679144135007_259 : Float64 = Float64(Float64((-114.0)));
        var_1679144135007_259 = var_1679144135007_259;
        false || var_1679144135007_246
    } else { // block id: 267
        var_1679144135007_270++;
        var_1679144135007_273;
        var_1679144135007_246
    }) { var_1679144135007_24 } else { Option<Array<Unit>>.None } ) {
        case caseVar_1679144135007_293 => 
            if (true) { var_1679144135007_192 } else { var_1679144135007_192 } 
        
        case _ => 
            var_1679144135007_34;
            ((UInt32(94)&127)..(UInt32(195)&127):((-38)|1))
        
        case caseVar_1679144135007_306 => 
            if (true) { ((UInt32(44)&127)..(UInt32(147)&127):((-102)|1)) } else { ((UInt32(220)&127)..=(UInt32(26)&127):((-91)|1)) } 
        
        case caseVar_1679144135007_314 : Range<Int16> => 
            ((UInt32(61)&127)..=(var_1679144135007_319&127):((105|1)))
        
        case _ => 
            ();
            ((UInt16(40)&127)..(var_1679144135007_328&127):(((-115)|1)));
            ((UInt32(6)&127)..=(UInt32(67)&127):(73|1))
        
    };
    var var_1679144135007_2227 : (Int8) -> Range<UInt16> = func_1679144135007_336;
    match (((var_1679144135007_1592|>var_1679144135007_2227), ((var_1679144135007_319&127)..=(UInt32(56)&127):(((-61)|1))), Class_1679144135007_553.var_1679144135007_2237, """
FHR]S
kTu0<
""", (var_1679144135007_2362 >>= ((var_1679144135007_141) & 7)))) {
        case _ : Array<Array<UInt64>> => 
            var var_1679144135007_2372 : Float32 = Float32(Float32(Float32(Float32(122.0))));
            var_1679144135007_2372 = Float32(41.0);
            var_1679144135007_2379;
            var_1679144135007_200
        
        case _ => 
            if (var_1679144135007_780) { ((var_1679144135007_1816&127)..(var_1679144135007_328&127):((45|1))) } else { var_1679144135007_2024 } ;
            var_1679144135007_1635;
            var_1679144135007_909 / ((68) | 1)
        
    };
    ((Int8(111)&127)..(Int8(-121)&127):(95|1))
}


public struct Struct_1679144135007_2558<T0> {
    public init() { // block id: 2560

    }
;
    public let var_1679144135007_2565 : Unit = ()
}

public enum Enum_1679144135007_2570 {
    defaultValue
}
public func func_1679144135007_227(optionalParam_1679144135007_228 ! : UInt64 = UInt64(UInt32(Int32(-112)))) : UInt8 { // block id: 232
    try { // block id: 234
        ();
        func_1679144135007_237(optionalParam_1679144135007_238 : UInt32(220));
        if (var_1679144135007_246) { // block id: 2399
            var_1679144135007_909 % (((-60)) | 1)
        } else if (var_1679144135007_246) { // block id: 2404
            var_1679144135007_909
        } else { // block id: 2406
            var_1679144135007_2362 &= var_1679144135007_141;
            if (var_1679144135007_246) { var_1679144135007_1037 } else { var_1679144135007_1037 } ;
            var_1679144135007_200
        }
    } catch (_) { // block id: 2415
        Class_1679144135007_553.var_1679144135007_2419
    };
    var var_1679144135007_2602 : (Bool, Int64) -> Array<Unit> = func_1679144135007_387;
    var loopTimeVar_1679144135007_2608 : Int64 = 0;
    do {
        loopTimeVar_1679144135007_2608++;
        var var_1679144135007_2605 : (UInt8) -> Option<Array<UInt64>> = func_1679144135007_1206;
        var_1679144135007_2430.func_1679144135007_2433(((Int8(42)&127)..(Int8(-24)&127):((-73)|1)), namedParam_1679144135007_2435 : var_1679144135007_2602, namedParam_1679144135007_2439 : var_1679144135007_2605)
    } while ((((if (var_1679144135007_1882) { var_1679144135007_1037 } else { Option<(Unit, Int8, Int16, Int64)>.None } ) is Array<Option<(Unit, Int8, Int16, Int64)>>)) && loopTimeVar_1679144135007_2608 < 100 ) ;
    var_1679144135007_558.var_1679144135007_2612
}

public func func_1679144135007_176(param_1679144135007_177 : String) : UInt8 { // block id: 178
    var var_1679144135007_183 : Bool = (UInt32(Int16(Int8(-7))) is Float64);
    var var_1679144135007_196 : UInt32 = UInt32(100);
    if (if (var_1679144135007_183) { // block id: 188
        if (false) { var_1679144135007_192 } else { ((var_1679144135007_196&127)..(var_1679144135007_196&127):((var_1679144135007_200|1))) } ;
        var_1679144135007_200
    } else { // block id: 203
        ();
        ();
        (-83)
    } == [71, 116, (-89), 115, (-95), 94, (-100), 101, 77, 61][2]) { // block id: 211
        try (resource = Class_1679144135007_553()) { // block id: 213
            var_1679144135007_34;
            ()
        } catch (e: Exception) { // block id: 216
            var_1679144135007_34;
            var_1679144135007_196 %= ((UInt32(8)) | 1)
        };
        var var_1679144135007_223 : UInt32 = UInt32(245);
        var_1679144135007_223 *= UInt32(249);
        func_1679144135007_227(optionalParam_1679144135007_228 : UInt64(85))
    } else { // block id: 2615
        var loopTimeVar_1679144135007_2619 : Range<UInt64> = ((UInt64(UInt64(UInt8(UInt8(119))))&127)..(UInt64(UInt64(UInt16(Int8(-2))))&127):((66|1)));
        for (i in loopTimeVar_1679144135007_2619 where var_1679144135007_183) {

        };
        if (false) { // block id: 2632
            ();
            UInt8(172)
        } else { // block id: 2635
            ();
            var_1679144135007_2076;
            UInt8(32)
        }
    }
}


public func func_1679144135007_169(namedParam_1679144135007_170 ! : Range<UInt32>, optionalParam_1679144135007_171 ! : UInt32 = UInt32(UInt16(44))) : Unit { // block id: 174
    var var_1679144135007_2640 : (String) -> UInt8 = func_1679144135007_176;
    Class_1679144135007_553.var_1679144135007_2645|>var_1679144135007_2640;
    if (var_1679144135007_558.var_1679144135007_561) { // block id: 2656
        (Option<Range<Int64>>.Some(((59&127)..=(94&127):(80|1))) ?? (((-80)&127)..=(14&127):((-70)|1)));
        (Option<Unit>.None ?? ())
    }
}


public func func_1679144135007_153(param_1679144135007_154 : Int64) : Array<Unit> { // block id: 155
    func func_1679144135007_157(param_1679144135007_158 : Int64, namedParam_1679144135007_159 ! : Array<UInt64>, optionalParam_1679144135007_160 ! : Int16 = Int16(UInt8(UInt8(UInt8(UInt8(61))))), namedParam_1679144135007_166 ! : Int16) : Array<Unit> { // block id: 167
        func_1679144135007_169(namedParam_1679144135007_170 : try { // block id: 2669
            ((UInt32(199)&127)..(UInt32(161)&127):(82|1))
        } catch (_) { // block id: 2671
            if (true) { var_1679144135007_2430 } else { Class_1679144135007_553() } ;
            ((UInt32(9)&127)..(UInt32(203)&127):((-104)|1))
        } finally { // block id: 2677
            var_1679144135007_131;
            if (var_1679144135007_1882) { var_1679144135007_192 } else { var_1679144135007_192 } 
        });
        let var_1679144135007_2690 : Array<Int64> = [Int64(Int32(-83)), (-18), Int64(UInt16(UInt8(Int8(-93)))), 90, (-51), 57, 118, Int64(UInt32(Int16(109))), 29, 109];
        ((match (var_1679144135007_1639) {
            case _ => 
                var_1679144135007_2690
            
        } as Array<Unit>) ?? [(), (), (), (), (), (), (), (), (), ()])
    }
;
    func_1679144135007_157(Int64((var_1679144135007_319 << ((UInt32(188)) & 7))), namedParam_1679144135007_159 : match ((Option<((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>)>.None ?? var_1679144135007_1128)) {
        case caseVar_1679144135007_2723 => 
            [var_1679144135007_1123, UInt64(131), var_1679144135007_1559, UInt64(12), UInt64(85), UInt64(58), var_1679144135007_1559, var_1679144135007_1123, var_1679144135007_1559, UInt64(210)]
        
        case _ => 
            ();
            if (var_1679144135007_1882) { var_1679144135007_1350 } else { [var_1679144135007_1522, var_1679144135007_1123, UInt64(101), UInt64(210), UInt64(49), UInt64(136), UInt64(227), UInt64(27), var_1679144135007_1522, var_1679144135007_1522] } 
        
    }, namedParam_1679144135007_166 : try { // block id: 2754
        Int16(-93)
    } finally { // block id: 2756
        var_1679144135007_1606
    })
}

func func_1679144135007_149(param_1679144135007_150 : Int8) : (Range<UInt16>, Range<UInt32>, Rune, String, Unit) { // block id: 151
    try { // block id: 2760
        var_1679144135007_2430;
        var_1679144135007_685;
        119 & (-73)
    } finally { // block id: 2766
        var_1679144135007_1635;
        var_1679144135007_1123 *= UInt64(72);
        var_1679144135007_909
    }|>func_1679144135007_153;
    let var_1679144135007_2780 : Class_1679144135007_553 = Class_1679144135007_553();
    var var_1679144135007_2859 : UInt64 = UInt64(254);
    let var_1679144135007_2919 : Int64 = 70;
    match (if (var_1679144135007_780) { // block id: 2775
        var_1679144135007_2102;
        if (false) { var_1679144135007_2780 } else { var_1679144135007_558 } ;
        if (false) { "&@CF+[ZQ!d" } else { var_1679144135007_2787 } 
    } else if (match ([((UInt32(190)&127)..(UInt32(224)&127):(((-85)|1))), ((UInt32(201)&127)..=(UInt32(248)&127):(47|1)), ((var_1679144135007_319&127)..(UInt32(43)&127):(((-118)|1))), ((UInt32(134)&127)..(UInt32(51)&127):(71|1)), var_1679144135007_1567, ((UInt32(33)&127)..=(UInt32(72)&127):(86|1)), var_1679144135007_192, var_1679144135007_1567, ((UInt32(183)&127)..=(UInt32(11)&127):((-101)|1)), ((UInt32(161)&127)..(UInt32(174)&127):(99|1))]) {
        case caseVar_1679144135007_2809 => 
            true
        
        case caseVar_1679144135007_2814 : Array<Range<UInt32>> => 
            true
        
        case _ : (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>) => 
            var_1679144135007_34;
            Int32(30);
            false
        
        case caseVar_1679144135007_2825 : Option<(Int64, Float64, Range<Int8>, Range<Int32>, Range<Int32>)> => 
            [var_1679144135007_1298, [UInt64(217), UInt64(23), UInt64(63), UInt64(243), UInt64(41), UInt64(37), UInt64(93), UInt64(182), UInt64(250), UInt64(2)], [var_1679144135007_1522, var_1679144135007_1559, UInt64(134), var_1679144135007_1522, var_1679144135007_1522, var_1679144135007_1559, UInt64(21), UInt64(55), var_1679144135007_1123, var_1679144135007_2841], var_1679144135007_1350, [UInt64(153), UInt64(107), UInt64(151), UInt64(181), UInt64(237), UInt64(77), UInt64(74), UInt64(242), UInt64(32), UInt64(122)], [UInt64(73), UInt64(27), UInt64(90), UInt64(141), UInt64(199), UInt64(168), UInt64(112), UInt64(177), UInt64(155), UInt64(145)], [var_1679144135007_1522, UInt64(3), UInt64(103), var_1679144135007_1522, var_1679144135007_2841, UInt64(35), var_1679144135007_1559, UInt64(115), UInt64(94), var_1679144135007_2859], var_1679144135007_1350, var_1679144135007_1298, [var_1679144135007_1522, UInt64(120), UInt64(172), var_1679144135007_2841, UInt64(231), var_1679144135007_2859, var_1679144135007_1522, var_1679144135007_1559, var_1679144135007_1522, var_1679144135007_2874]];
            var_1679144135007_2076;
            var_1679144135007_780
        
        case _ => 
            var_1679144135007_1882
        
    }) { // block id: 2882
        var_1679144135007_39;
        var var_1679144135007_2888 : String = """
NZMco
RdK8#
""";
        if (var_1679144135007_246) { var_1679144135007_2102 } else { var_1679144135007_2888 } 
    } else { // block id: 2890
        let var_1679144135007_2895 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        let var_1679144135007_2899 : UInt16 = UInt16(Int16(Int8(40)));
        (var_1679144135007_568, var_1679144135007_408, var_1679144135007_2895, ((var_1679144135007_2899&127)..(var_1679144135007_2899&127):(((-21)|1))), [82, (-92), 87, (-126), 33, 38, (-43), (-28), (-89), 114], [(), (), (), (), (), (), (), (), (), ()], Int32(89));
        """
]-`~2
m];K9
"""
    }) {
        case _ => 
            if (var_1679144135007_246) { (var_1679144135007_2024, ((var_1679144135007_319&127)..=(UInt32(121)&127):((var_1679144135007_2919|1))), r'm', var_1679144135007_2102, ()) } else { (((UInt16(213)&127)..(UInt16(77)&127):((-11)|1)), ((UInt32(71)&127)..=(UInt32(115)&127):((114|1))), var_1679144135007_1620, var_1679144135007_2787, ()) } 
        
    }
}


func func_1679144135007_44(param_1679144135007_45 : Rune) : Option<Array<Unit>> { // block id: 46
    let var_1679144135007_101 : (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>) = (((Int16(56)&127)..=(Int16(-45)&127):((-127)|1)), ((Int8(Int8(UInt8(143)))&127)..=(Int8(UInt8(62))&127):((Int64(Int8(83))|1))), true, ((Int32(UInt32(Int32(-118)))&127)..(Int32(-62)&127):(((-124)|1))), ((Int32(-125)&127)..=(Int32(-35)&127):(116|1)), ((UInt16(253)&127)..(UInt16(45)&127):(103|1)));
    func func_1679144135007_76(param_1679144135007_77 : Int32, optionalParam_1679144135007_78 ! : UInt32 = UInt32(Int16(Int16(UInt8(195)))), namedParam_1679144135007_83 ! : Range<UInt32>, optionalParam_1679144135007_84 ! : Option<Array<Unit>> = (((Int32(22)&127)..(Int32(Int16(Int8(17)))&127):((Int64(UInt32(198))|1))) as Array<Unit>)) : Unit { // block id: 93
        ();
        var var_1679144135007_2935 : Int8 = Int8(30);
        if (var_1679144135007_101[2]) { if (true) { // block id: 124
            var_1679144135007_127 %= ((Int8(-126)) | 1);
            var_1679144135007_131
        } else if (true) { // block id: 139
            var_1679144135007_141;
            ();
            var_1679144135007_131
        } else { // block id: 146
            var_1679144135007_131
        } } else { (var_1679144135007_2935|>func_1679144135007_149) } [4];
        try (resource = Class_1679144135007_553()) { // block id: 2939
            match (Struct_1679144135007_2558<Option<(Unit, Int8, Int16, Int64)>>()) {
                case _ : Enum_1679144135007_2570 => 
                    var_1679144135007_1715 %= ((var_1679144135007_568) | 1);
                    ();
                    var_1679144135007_192
                
                case caseVar_1679144135007_2952 => 
                    [(), (), (), (), (), (), (), (), (), ()];
                    ((UInt32(165)&127)..(UInt32(220)&127):((-76)|1))
                
                case caseVar_1679144135007_2958 => 
                    ((UInt32(168)&127)..(UInt32(112)&127):((-57)|1))
                
                case _ : String => 
                    var_1679144135007_192
                
                case _ => 
                    var_1679144135007_1715 ^= Int32(64);
                    ((UInt32(36)&127)..=(var_1679144135007_963&127):((var_1679144135007_1009|1)))
                
            };
            (var_1679144135007_489 ?? var_1679144135007_2076)
        } finally { // block id: 2977
            if (false) { // block id: 2980

            };
            var_1679144135007_39
        }
    }
;
    if (match ((114, 102.0, var_1679144135007_55, ((Int32(-114)&127)..=(Int32(56)&127):((-51)|1)), ((Int32(-108)&127)..(Int32(-15)&127):(16|1)))[1]) {
        case _ => 
            99.0 > (-119.0)
        
    }) { // block id: 74
        func_1679144135007_76(var_1679144135007_1715, namedParam_1679144135007_83 : ((var_1679144135007_963&127)..(UInt32(167)&127):(((-128)|1))))
    };
    Option<((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>)>.None;
    (Option<Option<Array<Unit>>>.Some(Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()])) ?? if ((var_1679144135007_558 is Array<Range<UInt32>>)) { try { // block id: 3000
        var_1679144135007_24
    } finally { // block id: 3002
        if (false) { var_1679144135007_893 } else { var_1679144135007_893 } ;
        var_1679144135007_1635;
        if (false) { var_1679144135007_24 } else { Option<Array<Unit>>.Some([(), (), (), (), (), (), (), (), (), ()]) } 
    } } else { Option<Array<Unit>>.Some([(), var_1679144135007_39, (), var_1679144135007_3019, (), (), var_1679144135007_39, var_1679144135007_3025, (), ()]) } )
}

main(): Int64 {
    try {
        (var_1679144135007_24 ?? [(), (), (), (), (), (), var_1679144135007_34, (), (), var_1679144135007_39])[0];
        var var_1679144135007_3030 : (Rune) -> Option<Array<Unit>> = func_1679144135007_44;
        match ((r'S'|>var_1679144135007_3030)) {
            case caseVar_1679144135007_3035 : (Unit, UInt64) => 
                ();
                true
            
            case caseVar_1679144135007_3041 => 
                var_1679144135007_780
            
            case _ : Option<((Unit, Int8, Int16, Int64), Option<(Unit, Int8, Int16, Int64)>, (Range<Int16>, Range<Int8>, Bool, Range<Int32>, Range<Int32>, Range<UInt16>), Array<UInt64>)> => 
                true
            
            case _ => 
                true
            
        };
        var_1679144135007_200
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1679144135007_141*var_1679144135007_141), 64)
        crccheck.updateBuffer(UInt64(var_1679144135007_200*var_1679144135007_200), 64)
        crccheck.updateBuffer(UInt64(var_1679144135007_319*var_1679144135007_319), 64)
        crccheck.updateBuffer(UInt64(var_1679144135007_909*var_1679144135007_909), 64)
        crccheck.updateBuffer(UInt64(var_1679144135007_1009*var_1679144135007_1009), 64)
        crccheck.updateBuffer(UInt64(var_1679144135007_2362*var_1679144135007_2362), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1679144135007_553 {

}

extend Enum_1679144135007_2570 {

}

