/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC-PIPE: %run %run_opt %output %run_args 

let var_1679147997196_14 : UInt16 = UInt16(UInt8(Int8(UInt8(UInt8(51)))))
public var var_1679147997196_45 : Class_1679147997196_41 = Class_1679147997196_41()
public let var_1679147997196_64 : Int16 = Int16(Int8(UInt8(Int8(UInt8(56)))))
public let var_1679147997196_154 : Unit = ()
public let var_1679147997196_181 : Bool = true
var var_1679147997196_189 : UInt16 = UInt16(180)
let var_1679147997196_235 : Unit = ()
var var_1679147997196_250 : Float64 = Float64(50.0)
public let var_1679147997196_322 : Range<Int16> = ((Int16(UInt8(UInt8(171)))&127)..=(Int16(UInt16(Int16(Int8(-47))))&127):((Int64(Int8(101))|1)))
public var var_1679147997196_381 : UInt16 = UInt16(UInt8(50))
let var_1679147997196_389 : Unit = ()
public var var_1679147997196_412 : (UInt8, UInt8, Int16, Float64, Unit, UInt32) = (UInt8(UInt8(11)), UInt8(UInt8(148)), Int16(UInt8(116)), Float64(Float64(Float32(Float32(-40.0)))), (), UInt32(Int32(-24)))
public let var_1679147997196_447 : Int64 = (-23)
public let var_1679147997196_468 : Int32 = Int32(Int8(UInt8(UInt8(121))))
var var_1679147997196_479 : Range<UInt8> = ((UInt8(143)&127)..(UInt8(Int8(Int8(-1)))&127):((0|1)))
var var_1679147997196_490 : UInt32 = UInt32(UInt32(UInt16(UInt8(157))))
var var_1679147997196_523 : Unit = ()
var var_1679147997196_626 : (Int32, UInt8, Range<UInt16>, Int32, UInt64, UInt16) = (Int32(Int32(UInt16(UInt8(188)))), UInt8(54), ((UInt16(40)&127)..(UInt16(0)&127):((Int64(Int32(Int8(85)))|1))), Int32(12), UInt64(Int8(UInt8(UInt8(6)))), UInt16(168))
public var var_1679147997196_655 : Int16 = Int16(85)
public var var_1679147997196_775 : ?Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)> = (Float64(Float64((-16.0))) as Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>)
let var_1679147997196_849 : UInt64 = UInt64(Int16(-33))
public let var_1679147997196_865 : Option<String> = ([(), (), (), (), (), (), (), (), (), ()] as String)
var var_1679147997196_887 : String = "LkC5ycAgL>"
public let var_1679147997196_899 : Array<Bool> = [(UInt16(UInt16(Int8(-114))) is Range<UInt16>), true, true, false, (Option<String>.None is Option<Range<UInt64>>), (Option<String>.None is (Class_1679147997196_41) -> Range<UInt64>), true, (UInt64(UInt16(Int16(56))) is Struct_1679147997196_713<Option<Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>>>), (Float32(53.0) is (UInt16) -> Unit), true]
public var var_1679147997196_927 : (Int16, String, Float32, Int32, Range<Int16>, UInt32) = (Int16(UInt8(185)), "8^${var_1679147997196_887}nDcno,${var_1679147997196_887}]${var_1679147997196_887}i", Float32(Float32(95.0)), Int32(48), ((Int16(71)&127)..(Int16(-53)&127):((-62)|1)), UInt32(238))
public var var_1679147997196_981 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
var var_1679147997196_1082 : UInt8 = UInt8(180)
public let var_1679147997196_1086 : Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)> = ([Option<Int16>.None, (((Int32(-6)&127)..(Int32(123)&127):((-31)|1)) as Int16), (Struct_1679147997196_713<Option<Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>>>() as Int16), ('y' as Int16), (Class_1679147997196_41() as Int16), Option<Int16>.None, (UInt8(178) as Int16), Option<Int16>.None, Option<Int16>.None, Option<Int16>.None] as (UInt8, UInt8, Int16, Float64, Unit, UInt32))

public open class Class_1679147997196_41 <: Resource {
    public init() { // block id: 43

    }
;
    public let var_1679147997196_48 : UInt8 = UInt8(76);
    public prop var_1679147997196_194 : Unit { // block id: 195
        get() { // block id: 197
            ();
            ###"*0rh.ZB[dm"###;
            ()
        }

    };
    static let var_1679147997196_293 : Unit = ();
    static let var_1679147997196_569 : UInt8 = UInt8(57)
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


public func func_1679147997196_148(param_1679147997196_149 : UInt16) : Unit { // block id: 150
    try (resource = Class_1679147997196_41()) { // block id: 152
        var_1679147997196_154
    } catch (_) { // block id: 156

    };
    var var_1679147997196_163 : Unit = ();
    let var_1679147997196_173 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]];
    try { // block id: 161
        var_1679147997196_163;
        [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
    } catch (_) { // block id: 166
        var var_1679147997196_169 : Bool = (Option<Int16>.None is Class_1679147997196_41);
        if (var_1679147997196_169) { var_1679147997196_173 } else { [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] } 
    } finally { // block id: 176
        ();
        ();
        if (var_1679147997196_181) { [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] } else { [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]] } 
    }[6][7]
}


func func_1679147997196_132(namedParam_1679147997196_133 ! : Bool) : (UInt8, UInt8, Int16, Float64, Unit, UInt32) { // block id: 134
    var loopTimeVar_1679147997196_207 : Int64 = 0;
    var var_1679147997196_229 : UInt64 = UInt64(UInt16(Int16(-33)));
    var var_1679147997196_245 : UInt8 = UInt8(126);
    let var_1679147997196_254 : Unit = ();
    let var_1679147997196_264 : UInt32 = UInt32(UInt8(Int8(81)));
    var var_1679147997196_281 : Bool = false;
    var loopTimeVar_1679147997196_299 : Int64 = 0;
    [(var_1679147997196_189|>func_1679147997196_148), var_1679147997196_45.var_1679147997196_194, func_1679147997196_148(UInt16(5)), do {
        loopTimeVar_1679147997196_207++;

    } while ((var_1679147997196_181) && loopTimeVar_1679147997196_207 < 100 ) , match (Option<String>.None) {
        case caseVar_1679147997196_212 => 
            var var_1679147997196_218 : Int64 = (-41);
            ((var_1679147997196_189&127)..=(var_1679147997196_189&127):((var_1679147997196_218|1)));
            var_1679147997196_218 /= (((-80)) | 1)
        
        case caseVar_1679147997196_225 => 
            var_1679147997196_229 >>= ((var_1679147997196_229) & 7);
            var_1679147997196_235;
            var_1679147997196_235
        
        case _ => 
            if (true) { (var_1679147997196_245, var_1679147997196_245, var_1679147997196_64, var_1679147997196_250, var_1679147997196_254, UInt32(138)) } else { (UInt8(54), var_1679147997196_245, var_1679147997196_64, (-74.0), (), var_1679147997196_264) } ;
            ()
        
        case _ => 
            var var_1679147997196_273 : Bool = true;
            var_1679147997196_273 ||= false
        
    }, (var_1679147997196_189|>func_1679147997196_148), (var_1679147997196_281 ||= var_1679147997196_181), if (false) { // block id: 286
        (((-49)&127)..=((-56)&127):(73|1));
        true;
        var_1679147997196_235
    }, Class_1679147997196_41.var_1679147997196_293, do {
        loopTimeVar_1679147997196_299++;

    } while ((false) && loopTimeVar_1679147997196_299 < 100 ) ][8];
    var var_1679147997196_335 : (UInt8, UInt8, Int16, Float64, Unit, UInt32) = (UInt8(UInt8(UInt8(Int8(-4)))), UInt8(UInt8(Int8(UInt8(224)))), Int16(Int8(Int8(UInt8(5)))), 16.0, (), UInt32(UInt8(Int8(121))));
    (Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some(try { // block id: 308
        var_1679147997196_254;
        var_1679147997196_154;
        (var_1679147997196_245, var_1679147997196_245, var_1679147997196_64, var_1679147997196_250, (), UInt32(42))
    } catch (e: Exception) { // block id: 318
        if (var_1679147997196_281) { var_1679147997196_322 } else { var_1679147997196_322 } ;
        var_1679147997196_335
    }) ?? try { // block id: 355
        Float32(-103.0) - Float32(-85.0);
        let var_1679147997196_371 : UInt8 = UInt8(62);
        if (var_1679147997196_181) { (var_1679147997196_245, UInt8(6), Int16(-76), (-24.0), (), UInt32(144)) } else { (var_1679147997196_245, var_1679147997196_371, Int16(-91), (-57.0), (), var_1679147997196_264) } 
    } catch (_) { // block id: 377
        ((var_1679147997196_189&127)..(var_1679147997196_381&127):(((-39)|1)));
        var_1679147997196_335
    } finally { // block id: 386
        UInt32(30);
        var_1679147997196_389;
        var var_1679147997196_397 : UInt8 = UInt8(13);
        if (var_1679147997196_181) { var_1679147997196_335 } else { (UInt8(235), var_1679147997196_397, Int16(-29), var_1679147997196_250, (), UInt32(61)) } 
    })
}


func func_1679147997196_71(optionalParam_1679147997196_72 ! : Int32 = Int32(40), optionalParam_1679147997196_74 ! : Int32 = Int32(UInt16(Int16(-90)))) : Float64 { // block id: 78
    var var_1679147997196_86 : UInt16 = UInt16(80);
    try (resource = Class_1679147997196_41()) { // block id: 80
        if (false) { // block id: 83
            var_1679147997196_86 -= UInt16(220);
            ()
        }
    } finally { // block id: 90
        (var_1679147997196_45 as String);
        Int16(Int8(-73));
        var loopTimeVar_1679147997196_102 : Int64 = 0;
        do {
            loopTimeVar_1679147997196_102++;
            var_1679147997196_86++;
            break
        } while ((true) && loopTimeVar_1679147997196_102 < 100 ) 
    };
    func func_1679147997196_104<T0, T1>(param_1679147997196_105 : Int32) : Float64 { // block id: 106
        var var_1679147997196_112 : ((UInt8, UInt8, Int16, Float64, Unit, UInt32), Bool, Bool) = ((UInt8(Int8(Int8(101))), UInt8(UInt8(Int8(-67))), Int16(UInt8(70)), 6.0, (), UInt32(UInt8(226))), (Option<Int16>.None is Option<String>), false);
        let var_1679147997196_404 : Bool = false;
        var var_1679147997196_429 : Int8 = Int8(Int8(-93));
        if (var_1679147997196_112[1]) { func_1679147997196_132(namedParam_1679147997196_133 : var_1679147997196_404) } else { if (true) { // block id: 408
            var_1679147997196_235;
            var_1679147997196_389;
            var_1679147997196_412
        } else { // block id: 427
            var_1679147997196_429;
            ();
            var_1679147997196_412
        } } [3]
    }
;
    let var_1679147997196_450 : ?Int32 = (((UInt16(126)&127)..(UInt16(58)&127):((119|1))) as Int32);
    let var_1679147997196_458 : Int32 = Int32(UInt32(25));
    func_1679147997196_104<Range<UInt32>, Int32>((try { // block id: 441
        ((UInt32(156)&127)..(UInt32(100)&127):((-67)|1));
        ((Int16(-105)&127)..(var_1679147997196_64&127):((var_1679147997196_447|1)));
        var_1679147997196_450
    } finally { // block id: 456
        var_1679147997196_458;
        Option<Int16>.None;
        Option<Int32>.Some(Int32(88))
    } ?? (var_1679147997196_468, ((Int32(-59)&127)..(Int32(85)&127):((-47)|1)))[0]))
}


public struct Struct_1679147997196_713<T0> {
    public init() { // block id: 715

    }
;
    static let var_1679147997196_718 : (Unit, Array<UInt64>) = ((), [UInt64(144), UInt64(2), UInt64(157), UInt64(80), UInt64(116), UInt64(55), UInt64(126), UInt64(181), UInt64(2), UInt64(165)])
}



public func func_1679147997196_600<T0, T1>(param_1679147997196_601 : Int16) : Range<UInt64> { // block id: 602
    let var_1679147997196_649 : Int8 = Int8(-111);
    UInt16(79)|>{ lambdaParameter_1679147997196_606 : UInt16 => try (resource = Class_1679147997196_41()) { // block id: 609
        let var_1679147997196_612 : (UInt16) -> Unit = func_1679147997196_148;
        let var_1679147997196_615 : UInt16 = UInt16(Int8(-90));
        var_1679147997196_615|>var_1679147997196_612;
        var_1679147997196_523
    } finally { // block id: 619
        let var_1679147997196_668 : UInt64 = UInt64(10);
        var var_1679147997196_672 : (Int32, UInt8, Range<UInt16>, Int32, UInt64, UInt16) = (Int32(66), UInt8(222), ((UInt16(190)&127)..=(UInt16(44)&127):((-94)|1)), Int32(-97), UInt64(227), UInt16(23));
        try { // block id: 621
            ();
            if (var_1679147997196_181) { var_1679147997196_626 } else { var_1679147997196_626 } 
        } catch (_) { // block id: 646
            ((var_1679147997196_649&127)..=(var_1679147997196_649&127):((79|1)));
            var_1679147997196_655++;
            if (var_1679147997196_181) { (var_1679147997196_468, UInt8(156), ((UInt16(254)&127)..(var_1679147997196_189&127):((var_1679147997196_447|1))), var_1679147997196_468, var_1679147997196_668, UInt16(61)) } else { var_1679147997196_672 } 
        } finally { // block id: 680
            (var_1679147997196_468, UInt8(88), ((UInt16(109)&127)..=(UInt16(207)&127):((-57)|1)), Int32(-5), var_1679147997196_668, var_1679147997196_381)
        };
        var_1679147997196_490;
        func_1679147997196_148(UInt16(186))
    } };
    let var_1679147997196_741 : Struct_1679147997196_713<Option<Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>>> = Struct_1679147997196_713<Option<Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>>>();
    let var_1679147997196_748 : Range<UInt64> = ((UInt64(177)&127)..=(UInt64(32)&127):(43|1));
    func func_1679147997196_693(param_1679147997196_694 : Class_1679147997196_41) : Range<UInt64> { // block id: 695
        'P';
        var var_1679147997196_707 : Option<(Unit, Array<UInt64>)> = (Option<Int16>.Some(Int16(102)) as (Unit, Array<UInt64>));
        (if (false) { var_1679147997196_707 } else { Option<(Unit, Array<UInt64>)>.None }  ?? Struct_1679147997196_713<Option<Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>>>.var_1679147997196_718)[0];
        var var_1679147997196_729 : UInt8 = UInt8(134);
        var var_1679147997196_745 : Bool = false;
        let var_1679147997196_764 : UInt64 = UInt64((-68));
        try { // block id: 724
            ((UInt8(197), var_1679147997196_729, Int16(-7), var_1679147997196_250, var_1679147997196_235, var_1679147997196_490), true, var_1679147997196_181);
            try { // block id: 738
                var_1679147997196_523;
                var_1679147997196_741;
                if (var_1679147997196_745) { var_1679147997196_748 } else { ((UInt64(254)&127)..=(UInt64(39)&127):(6|1)) } 
            } catch (_) { // block id: 751
                var_1679147997196_389;
                var_1679147997196_154;
                var_1679147997196_748
            } finally { // block id: 755
                if (var_1679147997196_181) { Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.None } else { Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some(var_1679147997196_412) } ;
                ((UInt64(130)&127)..(var_1679147997196_764&127):((var_1679147997196_447|1)))
            }
        } catch (e: Exception) { // block id: 768
            (var_1679147997196_775 ?? Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some(var_1679147997196_412));
            Class_1679147997196_41.var_1679147997196_293;
            var var_1679147997196_791 : Option<Range<UInt64>> = ("J/_qQNRg\"R" as Range<UInt64>);
            (var_1679147997196_791 ?? ((UInt64(95)&127)..=(UInt64(79)&127):((-48)|1)))
        }
    }
;
    func_1679147997196_693(match (Option<Int16>.Some(var_1679147997196_64)) {
        case _ => 
            var_1679147997196_490 >>= ((UInt32(167)) & 7);
            var var_1679147997196_807 : Class_1679147997196_41 = Class_1679147997196_41();
            if (var_1679147997196_181) { var_1679147997196_807 } else { Class_1679147997196_41() } 
        
        case caseVar_1679147997196_812 : Int8 => 
            var var_1679147997196_815 : Unit = ();
            var_1679147997196_815;
            var_1679147997196_45
        
        case _ => 
            var_1679147997196_154;
            var_1679147997196_45
        
    })
}

func func_1679147997196_590(param_1679147997196_591 : Array<UInt64>) : Int8 { // block id: 592
    var var_1679147997196_833 : Int8 = Int8(-106);
    try { // block id: 594
        Int8(Int8(73))
    } finally { // block id: 597
        var_1679147997196_235;
        var_1679147997196_64|>func_1679147997196_600<UInt8, Rune>;
        match (Option<Int32>.Some(Int32(-23))) {
            case caseVar_1679147997196_829 : (Unit, Array<UInt64>) => 
                var_1679147997196_833 %= ((Int8(-36)) | 1);
                Int8(-86)
            
            case _ => 
                if (var_1679147997196_181) { ((UInt64(98)&127)..=(UInt64(239)&127):((-4)|1)) } else { ((UInt64(18)&127)..(UInt64(30)&127):((-50)|1)) } ;
                Int8(65)
            
        }
    }
}

public func func_1679147997196_32<T0, T1>(optionalParam_1679147997196_33 ! : Bool = ("Y3l)`@&&a0" is Float32)) : Option<String> { // block id: 36
    var loopTimeVar_1679147997196_488 : Int64 = 0;
    (var_1679147997196_45.var_1679147997196_48, try { // block id: 51
        UInt8(167)
    } finally { // block id: 53
        ();
        UInt8(101)
    }, (Option<Int16>.Some(Int16(-58)) ?? var_1679147997196_64), func_1679147997196_71(), while ((var_1679147997196_181) && loopTimeVar_1679147997196_488 < 100 ) {
        loopTimeVar_1679147997196_488++;
        var_1679147997196_479;
        ()
    }, var_1679147997196_490)[4];
    var var_1679147997196_555 : Bool = true;
    match (try { // block id: 498
        let var_1679147997196_502 : Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)> = Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some((UInt8(51), UInt8(242), Int16(UInt8(Int8(-26))), (-56.0), (), UInt32(231)));
        var var_1679147997196_516 : UInt8 = UInt8(UInt8(48));
        if (true) { var_1679147997196_502 } else { Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some((var_1679147997196_516, var_1679147997196_516, var_1679147997196_64, 118.0, var_1679147997196_523, var_1679147997196_490)) } 
    } finally { // block id: 526
        Option<(UInt8, UInt8, Int16, Float64, Unit, UInt32)>.Some(var_1679147997196_412)
    }) {
        case caseVar_1679147997196_531 => 
            var_1679147997196_447;
            ();
            var_1679147997196_45
        
        case caseVar_1679147997196_538 : Unit => 
            [UInt64(14), UInt64(201), UInt64(218), UInt64(180), UInt64(177), UInt64(7), UInt64(24), UInt64(126), UInt64(6), UInt64(210)];
            var_1679147997196_45
        
        case caseVar_1679147997196_544 : ((UInt8, UInt8, Int16, Float64, Unit, UInt32), Bool, Bool) => 
            if (false) { Class_1679147997196_41() } else { Class_1679147997196_41() } 
        
        case _ => 
            var_1679147997196_523;
            if (var_1679147997196_555) { var_1679147997196_45 } else { var_1679147997196_45 } 
        
    };
    func func_1679147997196_561(optionalParam_1679147997196_562 ! : UInt64 = UInt64(35), namedParam_1679147997196_564 ! : Int8) : UInt32 { // block id: 565
        Class_1679147997196_41.var_1679147997196_569;
        var_1679147997196_490
    }
;
    var var_1679147997196_575 : (Int32, UInt8, Range<UInt16>, Int32, UInt64, UInt16) = (Int32(UInt32(36)), UInt8(UInt8(10)), ((UInt16(12)&127)..=(UInt16(81)&127):((-5)|1)), Int32(Int8(Int8(-78))), UInt64(92), UInt16(57));
    match (func_1679147997196_561(optionalParam_1679147997196_562 : var_1679147997196_575[4], namedParam_1679147997196_564 : ([UInt64(182), UInt64(254), var_1679147997196_849, UInt64(50), UInt64(229), var_1679147997196_849, UInt64(236), var_1679147997196_849, UInt64(49), UInt64(247)]|>func_1679147997196_590))) {
        case caseVar_1679147997196_861 : Int16 => 
            ();
            var_1679147997196_865
        
        case caseVar_1679147997196_870 => 
            var_1679147997196_189;
            var_1679147997196_865
        
        case 160 | 191 | 215 => 
            Option<String>.Some("ydzD6c yV2")
        
        case 223 => 
            var_1679147997196_655 = var_1679147997196_64;
            Option<String>.Some(var_1679147997196_887)
        
        case _ => 
            if (var_1679147997196_181) { var_1679147997196_865 } else { Option<String>.Some(###"pllA8La{ZTQ"###) } 
        
    }
}

main(): Int64 {
    try {
        var var_1679147997196_9 : Int8 = Int8(125);
        UInt16(var_1679147997196_9) * (UInt16(10) % ((var_1679147997196_14) | 1));
        func func_1679147997196_26(param_1679147997196_27 : Int8, param_1679147997196_28 : UInt32, param_1679147997196_29 : UInt64) : Option<String> { // block id: 30
            func_1679147997196_32<Range<UInt64>, Option<(Unit, Array<UInt64>)>>(optionalParam_1679147997196_33 : var_1679147997196_899[1])
        }
;
        (func_1679147997196_26(var_1679147997196_9, UInt32(75), UInt64(230)) ?? var_1679147997196_927[1]);
        var var_1679147997196_942 : Array<Option<Int16>> = [Option<Int16>.None, ('Z' as Int16), Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(Int16(Int8(UInt8(135)))), Option<Int16>.Some(Int16(-98)), (((80.0 as Range<UInt64>) is (Int16) -> Range<UInt64>) as Int16), Option<Int16>.None, (((UInt32(142)&127)..(UInt32(34)&127):(84|1)) as Int16), (((Class_1679147997196_41() as Range<UInt64>) as String) as Int16)];
        let var_1679147997196_971 : Option<Int16> = Option<Int16>.Some(Int16(16));
        match (var_1679147997196_942[6]) {
            case _ : Array<Bool> => 
                var_1679147997196_971;
                var_1679147997196_775;
                113
            
            case caseVar_1679147997196_978 => 
                var_1679147997196_981;
                Option<Int32>.Some(Int32(-27));
                var_1679147997196_447
            
            case caseVar_1679147997196_1078 => 
                var_1679147997196_1082 &= var_1679147997196_1082;
                var_1679147997196_1086;
                var_1679147997196_447
            
            case _ : ((UInt8, UInt8, Int16, Float64, Unit, UInt32), Bool, Bool) => 
                ();
                106
            
            case _ => 
                [false, true, false, var_1679147997196_181, true, true, var_1679147997196_181, true, var_1679147997196_181, true];
                var var_1679147997196_1125 : Int64 = (-119);
                var_1679147997196_1125 %= (((-32)) | 1);
                var_1679147997196_1125
            
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1679147997196_9*var_1679147997196_9), 64)
        crccheck.updateBuffer(UInt64(var_1679147997196_14*var_1679147997196_14), 64)
        crccheck.updateBuffer(UInt64(var_1679147997196_1082*var_1679147997196_1082), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0> Struct_1679147997196_713<T0> {

}

