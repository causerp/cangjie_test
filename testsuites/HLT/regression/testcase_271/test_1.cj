/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC-PIPE: %run %run_opt %output %run_args 

let var_1679141737831_56 : UInt64 = UInt64(UInt16(119))
public var var_1679141737831_63 : UInt32 = UInt32(UInt16(Int8(Int8(-12))))
public var var_1679141737831_104 : Unit = ()
let var_1679141737831_143 : Class_1679141737831_13 = Class_1679141737831_13()
let var_1679141737831_280 : String = ###"kc0O^|Uz)B"###
var var_1679141737831_341 : ?Bool = Option<Bool>.None
var var_1679141737831_350 : UInt8 = UInt8(Int8(36))
public var var_1679141737831_427 : Bool = false
public var var_1679141737831_488 : Bool = false
public let var_1679141737831_494 : Int16 = Int16(58)
let var_1679141737831_544 : ??UInt16 = ((Enum_1679141737831_27.defaultValue, Int16(UInt16(Int16(-105))), Int32(-80), Int16(45), ()) as Option<UInt16>)
var var_1679141737831_558 : ?UInt16 = Option<UInt16>.None
public let var_1679141737831_593 : Rune = r'X'
public let var_1679141737831_631 : Bool = false
var var_1679141737831_661 : Bool = (() is Array<Range<Int16>>)
public var var_1679141737831_693 : Int64 = Int64(Int8(Int8(83)))
let var_1679141737831_698 : Range<Int16> = ((Int16(-114)&127)..=(Int16(45)&127):(64|1))
var var_1679141737831_753 : Int8 = Int8(16)
public let var_1679141737831_767 : Range<UInt8> = ((UInt8(169)&127)..(UInt8(76)&127):((-113)|1))
let var_1679141737831_799 : Class_1679141737831_13 = Class_1679141737831_13()
var var_1679141737831_821 : UInt8 = UInt8(Int8(Int8(-11)))
var var_1679141737831_938 : Range<Int32> = ((Int32(26)&127)..=(Int32(-54)&127):((Int64(Int8(87))|1)))
let var_1679141737831_958 : UInt16 = UInt16(UInt8(UInt8(UInt8(106))))
public let var_1679141737831_976 : Unit = ()
public var var_1679141737831_990 : Rune = r'l'
var var_1679141737831_1035 : UInt16 = UInt16(Int8(-3))
var var_1679141737831_1105 : (UInt32, Int8, Int64, Float32, UInt64, Range<Int64>, Bool, Unit) = (UInt32(Int16(-22)), Int8(UInt8(Int8(-17))), (-122), Float32(Float32(98.0)), UInt64(47), ((89&127)..=(114&127):(14|1)), (((), (((UInt64(249)&127)..(UInt64(81)&127):(((-45)|1))) is Option<Unit>), UInt8(2), Int16(UInt16(232)), r'h', "O4`a{${var_1679141737831_280}h#PL$m") is Bool), ())
public let var_1679141737831_1142 : Unit = ()
public let var_1679141737831_1251 : Bool = false
public interface Interface_1679141737831_16<T0, T1> {
    func func_1679141737831_473(namedParam_1679141737831_474 ! : Int8, namedParam_1679141737831_475 ! : UInt32) : Unit { // block id: 476

    }
;
    static func func_1679141737831_1184(param_1679141737831_1185 : Range<UInt8>) : Int64 

}

public open class Class_1679141737831_13 <: Interface_1679141737831_16<Array<Unit>, Array<Unit>> & Resource {
    public init() { // block id: 15

    }
;
    public let var_1679141737831_42 : Bool = true;
    protected prop var_1679141737831_207 : Range<Int8> { // block id: 208
        get() { // block id: 210
            ((Int8(-92)&127)..=(Int8(119)&127):(32|1))
        }

    };
    public open func func_1679141737831_158(namedParam_1679141737831_159 ! : UInt32) : Bool { // block id: 160
        var var_1679141737831_166 : (Enum_1679141737831_27, Int16, Int32, Int16, Unit) = (Enum_1679141737831_27.defaultValue, Int16(Int16(Int16(UInt16(184)))), Int32(-57), Int16(29), ());
        var var_1679141737831_228 : Float32 = Float32(Float32(Float32(Float32(12.0))));
        try { // block id: 162
            var_1679141737831_166[0];
            [var_1679141737831_42, true, var_1679141737831_42, var_1679141737831_42, var_1679141737831_42, true, true, false, var_1679141737831_42, true][9]
        } finally { // block id: 200
            var loopTimeVar_1679141737831_221 : Range<UInt64> = ((UInt64(204)&127)..=(UInt64(12)&127):(((-120)|1)));
            for (i in loopTimeVar_1679141737831_221 where false) {
                if (false) { var_1679141737831_207 } else { var_1679141737831_207 } ;
                let var_1679141737831_217 : Int64 = Int64(Int64(UInt64(114)));
                ((var_1679141737831_56&127)..(UInt64(28)&127):((var_1679141737831_217|1)))
            };
            var_1679141737831_228 += Float32(11.0);
            let var_1679141737831_238 : Int64 = 108;
            (((39&127)..(var_1679141737831_238&127):(((-86)|1))) is Bool)
        }
    }
;
    static prop var_1679141737831_246 : Int8 { // block id: 247
        get() { // block id: 249
            ();
            Int32(-86);
            Int8(Int8(Int8(-24)))
        }

    };
    public static mut prop var_1679141737831_378 : Unit { // block id: 379
        get() { // block id: 381
            UInt8(181);
            ()
        }

        set(Value) { // block id: 386

        }

    };
    public static mut prop var_1679141737831_575 : Rune { // block id: 576
        get() { // block id: 578
            r'Z'
        }

        set(Value) { // block id: 582
            ();
            ();
            ()
        }

    };
    private static var var_1679141737831_776 : Int16 = Int16(119);
    public init(param_1679141737831_678 : Array<Range<Int16>>, namedParam_1679141737831_679 ! : (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>)) { // block id: 680
        match (match ([((var_1679141737831_494&127)..(var_1679141737831_494&127):((107|1))), ((Int16(-8)&127)..=(var_1679141737831_494&127):((var_1679141737831_693|1))), var_1679141737831_698, ((var_1679141737831_494&127)..=(Int16(51)&127):((14|1))), ((Int16(-67)&127)..=(Int16(3)&127):((-55)|1)), var_1679141737831_698, ((Int16(56)&127)..=(Int16(-90)&127):(30|1)), var_1679141737831_698, ((Int16(-20)&127)..=(Int16(-78)&127):((-93)|1)), ((Int16(40)&127)..(Int16(-85)&127):((-13)|1))][9]) {
            case _ : UInt16 => 
                var_1679141737831_693 %= ((var_1679141737831_693) | 1);
                var var_1679141737831_718 : Option<Array<Bool>> = Option<Array<Bool>>.None;
                var_1679141737831_718
            
            case _ : Range<Int8> => 
                if (false) { Option<Array<Bool>>.Some([true, false, false, true, false, var_1679141737831_631, false, false, false, false]) } else { Option<Array<Bool>>.None } 
            
            case _ => 
                let var_1679141737831_745 : Option<Array<Bool>> = Option<Array<Bool>>.Some([false, false, true, false, true, false, true, false, false, true]);
                if (false) { Option<Array<Bool>>.Some([false, true, false, false, true, false, false, false, false, true]) } else { var_1679141737831_745 } 
            
        }) {
            case _ : Option<Float64> => 
                var_1679141737831_753 /= ((var_1679141737831_753) | 1);
                UInt8(207)
            
            case _ => 
                if (var_1679141737831_631) { var_1679141737831_341 } else { var_1679141737831_341 } ;
                if (true) { ((UInt8(153)&127)..=(UInt8(239)&127):(73|1)) } else { var_1679141737831_767 } ;
                var_1679141737831_350 * UInt8(207)
            
        };
        Class_1679141737831_13.var_1679141737831_776 /= ((Class_1679141737831_13.var_1679141737831_776) | 1)
    }
;
    static let var_1679141737831_1100 : Int64 = 84;
    static prop var_1679141737831_1160 : (Unit, Bool, UInt8, Int16, Rune, String) { // block id: 1161
        get() { // block id: 1163
            ();
            ();
            ((), (Option<Bool>.None is String), UInt8(Int8(Int8(65))), Int16(Int8(UInt8(91))), r'W', ###"v^k3$El!p`"###)
        }

    };
    static prop var_1679141737831_1604 : Array<Option<Rune>> { // block id: 1605
        get() { // block id: 1607
            ((Int32(Int8(-8))&127)..=(Int32(UInt32(UInt8(40)))&127):(((-91)|1)));
            ();
            [Option<Rune>.None, (((UInt32(2)&127)..(UInt32(156)&127):((-111)|1)) as Rune), (((((Int32(56)&127)..=(Int32(44)&127):((-70)|1)), (), Option<Rune>.None, UInt64(219), ###"/3l\"zND?20"###, ((Int8(-12)&127)..(Int8(56)&127):(((-61)|1)))), r'5', ((UInt16(188)&127)..=(UInt16(169)&127):(((-48)|1)))) as Rune), ((UInt32(64), Int8(11), 26, Float32(106.0), UInt64(39), ((23&127)..((-93)&127):((-51)|1)), true, ()) as Rune), (false as Rune), (Int32(102) as Rune), Option<Rune>.None, (Enum_1679141737831_858.defaultValue as Rune), Option<Rune>.None, Option<Rune>.None]
        }

    };
    public static func func_1679141737831_1184(param_1679141737831_1185 : Range<UInt8>) : Int64 { // block id: 1186
        var var_1679141737831_1195 : Array<Array<Unit>> = [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]];
        var var_1679141737831_1258 : Float32 = Float32(Float32(-44.0));
        try { // block id: 1191
            [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
        } catch (_) { // block id: 1193
            var_1679141737831_1195
        } finally { // block id: 1247
            ();
            if (var_1679141737831_1251) { (UInt32(51), Int8(102), 49, var_1679141737831_1258, UInt64(32), (((-7)&127)..=(var_1679141737831_693&127):((var_1679141737831_693|1))), true, ()) } else { (UInt32(40), var_1679141737831_753, 122, var_1679141737831_1258, var_1679141737831_56, ((var_1679141737831_693&127)..=(26&127):((29|1))), false, ()) } ;
            [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]]
        }[2][3];
        var var_1679141737831_1295 : ?Rune = ([[(((Int32(-8)&127)..=(Int32(-68)&127):((-51)|1)) is Option<UInt16>), false, ("""
}$>2x
y'K*(
""" is Interface_1679141737831_16<Array<Unit>, Array<Unit>>), (((UInt16(9)&127)..(UInt16(130)&127):(((-114)|1))) is Option<Array<Bool>>), true, (((UInt64(207)&127)..=(UInt64(76)&127):((110|1))) is Int16), (Option<Float64>.None is () -> (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>)), ([(), (), (), (), (), (), (), (), (), ()] is (Int16) -> (Unit, Bool, UInt8, Int16, Rune, String)), (((UInt64(54)&127)..(UInt64(24)&127):((-116)|1)) is () -> (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>)), false], [(Option<Option<UInt16>>.None is Range<Int64>), true, (((Int16(-68)&127)..(Int16(92)&127):(70|1)) is (Int8) -> Array<UInt64>), (Int16(-12) is (UInt64) -> Int64), false, true, true, ((((Int32(-6)&127)..(Int32(-42)&127):(((-55)|1))), (), Option<Rune>.Some(r'v'), UInt64(41), "rl4sk9nfj`", ((Int8(114)&127)..(Int8(121)&127):(3|1))) is (Int8, UInt32) -> Unit), (###"AG3OL1RZ':"### is ((Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>), Rune, Range<UInt16>)), ((((-36)&127)..(53&127):((-125)|1)) is Int64)], [false, true, true, false, true, true, false, true, false, true], [((((-128)&127)..=(91&127):((-40)|1)) is (Bool, Int16, Bool)), true, (Option<Bool>.None is Option<Array<Bool>>), true, (((Int16(-54)&127)..(Int16(-70)&127):(95|1)) is Array<Unit>), false, (Option<Array<Bool>>.Some([true, true, true, false, false, false, true, false, true, true]) is Array<Unit>), false, ([(), (), (), (), (), (), (), (), (), ()] is (Bool) -> Bool), (((Int16(82)&127)..(Int16(-8)&127):((-101)|1)) is Range<Int8>)], [false, true, (Option<Rune>.None is Option<Array<Bool>>), false, true, (((Int8(98)&127)..=(Int8(23)&127):(((-48)|1))) is String), true, false, true, ([(), (), (), (), (), (), (), (), (), ()] is (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>))], [(Option<Float64>.None is () -> (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>)), true, true, true, (UInt16(182) is (Bool) -> Bool), (r'K' is Interface_1679141737831_16<Array<Unit>, Array<Unit>>), ((Enum_1679141737831_27.defaultValue, Int16(48), Int32(65), Int16(-13), ()) is (Unit, Bool, UInt8, Int16, Rune, String)), false, true, false], [true, false, true, false, false, false, true, true, false, true], [(0.0 is Struct_1679141737831_827<UInt8>), (((((Int32(-106)&127)..=(Int32(122)&127):((0|1))), (), Option<Rune>.Some(r'i'), UInt64(82), ###"E2`:D8tWeD"###, ((Int8(-97)&127)..(Int8(68)&127):(34|1))), r's', ((UInt16(250)&127)..=(UInt16(113)&127):(25|1))) is Range<Int16>), ([false, false, false, false, true, true, true, true, true, true] is () -> Class_1679141737831_13), (Option<Bool>.Some(false) is (UInt16) -> UInt32), ((UInt32(6), Int8(-72), 108, Float32(57.0), UInt64(249), ((14&127)..=((-32)&127):(80|1)), false, ()) is Array<Array<Bool>>), false, false, true, (Struct_1679141737831_827<UInt8>() is Unit), (() is Option<Bool>)], [(UInt32(112) is Range<Int64>), (((Int16(-1)&127)..(Int16(-30)&127):(29|1)) is Option<Array<Bool>>), true, false, false, false, (((UInt32(131)&127)..=(UInt32(1)&127):((-107)|1)) is Array<UInt64>), true, (Float32(-9.0) is UInt8), true], [false, (Int32(67) is Range<UInt8>), false, true, true, true, (Option<Bool>.None is Array<Unit>), (((UInt16(51)&127)..(UInt16(202)&127):((-46)|1)) is Bool), (((), true, UInt8(70), Int16(20), r'C', ###"|]^p4MoXq8"###) is Enum_1679141737831_858), true]] as Rune);
        if ((!var_1679141737831_661)) { try { // block id: 1289
            var_1679141737831_63 += UInt32(176);
            [var_1679141737831_1295, var_1679141737831_1295, Option<Rune>.Some(var_1679141737831_593), var_1679141737831_1295, var_1679141737831_1295, Option<Rune>.Some(r'n'), var_1679141737831_1295, var_1679141737831_1295, Option<Rune>.None, Option<Rune>.None]
        } catch (_) { // block id: 1513
            var_1679141737831_976;
            var_1679141737831_776 |= Int16(-101);
            var var_1679141737831_1521 : Array<Option<Rune>> = [([[true, true, false, false, true, true, false, false, true, true], [true, true, false, true, true, false, true, false, true, true], [false, false, false, true, false, false, false, false, false, false], [true, false, true, true, false, false, false, false, false, true], [false, true, false, true, false, false, true, true, true, false], [false, true, true, false, true, false, false, true, false, false], [true, false, true, true, true, false, true, true, true, true], [false, false, true, false, true, true, false, false, true, true], [false, true, false, true, false, false, false, false, false, true], [true, true, true, false, true, false, true, false, true, true]] as Rune), Option<Rune>.None, Option<Rune>.Some(r'9'), (UInt32(18) as Rune), ((Option<Array<Bool>>.Some([true, true, false, false, false, true, false, true, false, true]) as Bool) as Rune), ("T(o.J~iLmX" as Rune), Option<Rune>.None, Option<Rune>.None, Option<Rune>.Some(r'D'), Option<Rune>.Some(r'2')];
            if (true) { var_1679141737831_1521 } else { var_1679141737831_1521 } 
        } } else { var_1679141737831_1604 } [8];
        var var_1679141737831_1715 : Int64 = 63;
        let var_1679141737831_1735 : Int64 = (-18);
        Int64(UInt32(Int8(-59))) >> ((if (match (Option<UInt16>.None) {
            case caseVar_1679141737831_1666 => 
                -var_1679141737831_776;
                var_1679141737831_494 >= Int16(-110)
            
            case _ : Array<Range<Int16>> => 
                var_1679141737831_63 > UInt32(104);
                var_1679141737831_63 < UInt32(195)
            
            case caseVar_1679141737831_1684 => 
                UInt32(180);
                var_1679141737831_661
            
            case caseVar_1679141737831_1690 : UInt64 => 
                var var_1679141737831_1693 : (Enum_1679141737831_27, Int16, Int32, Int16, Unit) = (Enum_1679141737831_27.defaultValue, Int16(94), Int32(Int8(113)), Int16(UInt16(164)), ());
                var_1679141737831_1693;
                true || true
            
            case _ => 
                true
            
        }) { // block id: 1708
            if (true) { Option<Bool>.None } else { var_1679141737831_341 } ;
            ();
            var_1679141737831_1715
        } else if (try { // block id: 1718
            var_1679141737831_631
        } finally { // block id: 1720
            var var_1679141737831_1723 : Unit = ();
            (var_1679141737831_1723, var_1679141737831_488, var_1679141737831_350, Int16(-99), r'h', "ma{w;r/#q5U");
            false
        }) { // block id: 1731
            var_1679141737831_693 % ((var_1679141737831_1735) | 1)
        } else { // block id: 1737
            var var_1679141737831_1740 : Int32 = Int32(-65);
            var_1679141737831_1740 >>= ((var_1679141737831_1740) & 7);
            ();
            111 & 126
        }) & 7)
    }

    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public enum Enum_1679141737831_27 {
    defaultValue
}
func func_1679141737831_21(optionalParam_1679141737831_22 ! : UInt16 = UInt16(UInt8(13))) : UInt32 { // block id: 25
    match (Enum_1679141737831_27.defaultValue) {
        case _ => 
            let var_1679141737831_33 : Unit = ();
            var_1679141737831_33;
            UInt16(194)
        
    };
    let var_1679141737831_39 : Class_1679141737831_13 = Class_1679141737831_13();
    var var_1679141737831_70 : Float32 = Float32(Float32(Float32(Float32(99.0))));
    var var_1679141737831_76 : Unit = ();
    if (var_1679141737831_39.var_1679141737831_42) { // block id: 44
        if (false) { // block id: 47
            ();
            var var_1679141737831_50 : UInt32 = UInt32(122);
            var_1679141737831_50
        } else if (false) { // block id: 53
            var_1679141737831_56 + var_1679141737831_56;
            UInt32(17) | var_1679141737831_63
        } else { // block id: 68
            var_1679141737831_70;
            var_1679141737831_76;
            UInt32(40)
        }
    } else { // block id: 79
        let var_1679141737831_84 : Bool = (Int8(-53) is Int64);
        try { // block id: 81
            if (var_1679141737831_84) { Class_1679141737831_13() } else { Class_1679141737831_13() } ;
            UInt32(76)
        } finally { // block id: 90
            ();
            ();
            UInt32(190)
        }
    }
}







public func func_1679141737831_519<T0>(param_1679141737831_520 : Rune) : UInt16 { // block id: 521
    ((try { // block id: 533
        ();
        var var_1679141737831_536 : ??UInt16 = Option<Option<UInt16>>.None;
        var_1679141737831_536
    } catch (_) { // block id: 538
        ();
        var_1679141737831_104;
        if (false) { var_1679141737831_544 } else { var_1679141737831_544 } 
    } ?? (Option<Option<UInt16>>.Some(var_1679141737831_558) ?? Option<UInt16>.None)) ?? UInt16(71))
}


func func_1679141737831_515(param_1679141737831_516 : Class_1679141737831_13) : Array<Bool> { // block id: 517
    if ((((), true, var_1679141737831_350, Int16(125), r'K', var_1679141737831_280) is Array<UInt64>)) { (Class_1679141737831_13.var_1679141737831_575) } else { ((), false, var_1679141737831_350, var_1679141737831_494, var_1679141737831_593, """
ob,u/
tqk_+
""")[4] } |>func_1679141737831_519<Enum_1679141737831_858>;
    let var_1679141737831_603 : Array<Bool> = [false, false, false, true, true, false, true, false, true, false];
    var var_1679141737831_620 : Array<Bool> = [true, true, true, true, false, true, true, false, false, true];
    try { // block id: 598
        [var_1679141737831_603, var_1679141737831_603, [true, true, false, true, true, false, true, true, false, true], [true, false, true, var_1679141737831_488, var_1679141737831_427, var_1679141737831_427, var_1679141737831_488, var_1679141737831_488, false, var_1679141737831_427], [false, false, false, true, true, false, true, false, false, false], var_1679141737831_620, [false, true, true, false, false, true, false, false, false, true], [var_1679141737831_427, var_1679141737831_427, false, var_1679141737831_427, true, false, var_1679141737831_631, var_1679141737831_488, var_1679141737831_427, true], var_1679141737831_603, [true, false, true, false, false, true, false, false, true, false]][9]
    } finally { // block id: 639
        [((Int16(-20)&127)..=(Int16(-40)&127):((-37)|1)), ((Int16(86)&127)..(Int16(-88)&127):(8|1)), ((Int16(73)&127)..=(Int16(23)&127):(50|1)), ((Int16(-57)&127)..=(Int16(5)&127):((-114)|1)), ((Int16(40)&127)..=(Int16(-9)&127):((-99)|1)), ((Int16(-94)&127)..=(Int16(109)&127):((-13)|1)), ((Int16(31)&127)..(Int16(-101)&127):((-112)|1)), ((Int16(-8)&127)..(Int16(94)&127):((-101)|1)), ((Int16(121)&127)..=(Int16(-96)&127):(96|1)), ((Int16(111)&127)..(Int16(71)&127):((-63)|1))][4];
        (Option<Array<Bool>>.None ?? [false, var_1679141737831_427, var_1679141737831_427, var_1679141737831_427, var_1679141737831_631, var_1679141737831_488, var_1679141737831_631, var_1679141737831_631, true, var_1679141737831_661])
    }
}

func func_1679141737831_480(param_1679141737831_481 : Range<Int64>) : Bool { // block id: 482
    var loopTimeVar_1679141737831_512 : Int64 = 0;
    do {
        loopTimeVar_1679141737831_512++;

    } while ((Int32(88) == if (var_1679141737831_488) { // block id: 490
        (var_1679141737831_488, var_1679141737831_494, var_1679141737831_488);
        var_1679141737831_104;
        -Int32(44)
    } else { // block id: 500
        [(), (), (), (), (), (), (), (), (), ()];
        16.0;
        var var_1679141737831_505 : Int32 = Int32(UInt16(Int16(92)));
        var_1679141737831_505 & var_1679141737831_505
    }) && loopTimeVar_1679141737831_512 < 100 ) ;
    let var_1679141737831_665 : (Class_1679141737831_13) -> Array<Bool> = func_1679141737831_515;
    var var_1679141737831_783 : (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>) = (((Int32(-16)&127)..(Int32(91)&127):((Int64(UInt64(Int32(-94)))|1))), (), Option<Rune>.Some(r'N'), UInt64(UInt16(216)), "A ;1>Y&EhW", ((Int8(21)&127)..(Int8(-100)&127):((-42)|1)));
    let var_1679141737831_804 : UInt16 = UInt16(238);
    (try { // block id: 668
        if (var_1679141737831_488) { var_1679141737831_143 } else { Class_1679141737831_13() } 
    } catch (e: Exception) { // block id: 673
        if (true) { Class_1679141737831_13([((Int16(-19)&127)..=(Int16(49)&127):(96|1)), ((Int16(-81)&127)..(Int16(-120)&127):((-96)|1)), ((Int16(-1)&127)..(Int16(35)&127):((-90)|1)), ((Int16(-107)&127)..=(Int16(-116)&127):((-45)|1)), ((Int16(-39)&127)..(Int16(46)&127):((-127)|1)), ((Int16(50)&127)..=(Int16(-109)&127):((-30)|1)), ((Int16(-1)&127)..=(Int16(-105)&127):(56|1)), ((Int16(82)&127)..=(Int16(-16)&127):((-35)|1)), ((Int16(65)&127)..(Int16(76)&127):((-46)|1)), ((Int16(-53)&127)..(Int16(-123)&127):(87|1))], namedParam_1679141737831_679 : var_1679141737831_783) } else { var_1679141737831_799 } 
    } finally { // block id: 801
        var_1679141737831_104;
        var_1679141737831_804;
        var_1679141737831_143
    }|>var_1679141737831_665)[2]
}

public func func_1679141737831_389(param_1679141737831_390 : Bool) : Bool { // block id: 391
    var var_1679141737831_402 : Int64 = (-68);
    var var_1679141737831_406 : Unit = ();
    try (resource = Class_1679141737831_13()) { // block id: 393
        ();
        match (Enum_1679141737831_27.defaultValue) {
            case _ => 
                ((19&127)..=(var_1679141737831_402&127):(((-23)|1)))
            
        };
        var_1679141737831_406
    } catch (e: Exception) { // block id: 408
        ()
    } finally { // block id: 410
        [(), (), (), var_1679141737831_406, var_1679141737831_104, var_1679141737831_406, var_1679141737831_406, (), var_1679141737831_406, var_1679141737831_104][1]
    };
    var loopTimeVar_1679141737831_431 : Int64 = 0;
    while ((var_1679141737831_427) && loopTimeVar_1679141737831_431 < 100 ) {
        loopTimeVar_1679141737831_431++;

    };
    var var_1679141737831_451 : Option<Float64> = Option<Float64>.None;
    var var_1679141737831_459 : Int16 = Int16(Int8(UInt8(Int8(UInt8(78)))));
    try { // block id: 433
        var var_1679141737831_439 : Unit = ();
        try (resource = Class_1679141737831_13()) { // block id: 435
            var_1679141737831_406;
            ();
            var_1679141737831_439
        } finally { // block id: 441
            var_1679141737831_406;
            var_1679141737831_406;
            ()
        };
        (var_1679141737831_451 ?? (-27.0));
        (var_1679141737831_427, var_1679141737831_459, false)[0]
    } finally { // block id: 467
        var var_1679141737831_470 : Interface_1679141737831_16<Array<Unit>, Array<Unit>> = Class_1679141737831_13();
        var_1679141737831_470.func_1679141737831_473(namedParam_1679141737831_474 : Int8(-108), namedParam_1679141737831_475 : UInt32(186));
        ((30&127)..(var_1679141737831_402&127):((16|1)))|>func_1679141737831_480
    }
}

public struct Struct_1679141737831_827<T0> {
    public init() { // block id: 829

    }
;
    var var_1679141737831_834 : (Bool, Int16, Bool) = (false, Int16(-38), true);
    static mut prop var_1679141737831_1009 : Int32 { // block id: 1010
        get() { // block id: 1012
            Int32(UInt16(84));
            var_1679141737831_1752
        }

        set(Value) { // block id: 1017
            ();
            var_1679141737831_1752 = Value
        }

    };
    static var var_1679141737831_1752 : Int32 = Int32(9)
}

func func_1679141737831_372(param_1679141737831_373 : Bool) : Unit { // block id: 374
    Class_1679141737831_13.var_1679141737831_378;
    let var_1679141737831_831 : Struct_1679141737831_827<UInt8> = Struct_1679141737831_827<UInt8>();
    var loopTimeVar_1679141737831_840 : Int64 = 0;
    while ((((var_1679141737831_341 ?? var_1679141737831_661)|>func_1679141737831_389)) && loopTimeVar_1679141737831_840 < 100 ) {
        loopTimeVar_1679141737831_840++;
        ((var_1679141737831_350&127)..=(var_1679141737831_821&127):((var_1679141737831_693|1)));
        var_1679141737831_831.var_1679141737831_834
    }
}

public enum Enum_1679141737831_858 {
    defaultValue
}
func func_1679141737831_312<T0, T1, T2>(param_1679141737831_313 : Int32) : Option<Rune> { // block id: 314
    let var_1679141737831_869 : (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>) = (((Int32(-83)&127)..(Int32(-113)&127):((-112)|1)), (), (Option<Array<Bool>>.None as Rune), UInt64(254), "8i#lC`pgv:", ((Int8(34)&127)..=(Int8(-125)&127):(111|1)));
    let var_1679141737831_884 : ((Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>), Rune, Range<UInt16>) = ((((Int32(61)&127)..=(Int32(-113)&127):((-127)|1)), (), Option<Rune>.None, UInt64(UInt32(Int32(107))), """
a{W&_u
l;]S0
""", ((Int8(100)&127)..=(Int8(-111)&127):(46|1))), r'R', ((UInt16(212)&127)..(UInt16(223)&127):(49|1)));
    let var_1679141737831_983 : ?Rune = Option<Rune>.Some(r'a');
    let var_1679141737831_998 : Rune = r'P';
    func func_1679141737831_318() : (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>) { // block id: 319
        let var_1679141737831_321 : (Enum_1679141737831_27, Int16, Int32, Int16, Unit) = (Enum_1679141737831_27.defaultValue, Int16(UInt16(95)), Int32(Int8(Int8(Int8(51)))), Int16(Int16(-93)), ());
        var_1679141737831_321;
        var var_1679141737831_344 : Bool = true;
        var var_1679141737831_357 : Bool = false;
        var var_1679141737831_363 : Int16 = Int16(UInt8(UInt8(Int8(-74))));
        let var_1679141737831_842 : (Bool) -> Unit = func_1679141737831_372;
        var loopTimeVar_1679141737831_852 : Int64 = 0;
        do {
            loopTimeVar_1679141737831_852++;
            false|>var_1679141737831_842;
            var loopTimeVar_1679141737831_850 : Int64 = 0;
            do {
                loopTimeVar_1679141737831_850++;
                ()
            } while ((var_1679141737831_344) && loopTimeVar_1679141737831_850 < 100 ) 
        } while ((if ((var_1679141737831_341 ?? var_1679141737831_344)) { // block id: 346
            var_1679141737831_104;
            var_1679141737831_350 += var_1679141737831_350;
            var_1679141737831_344 && var_1679141737831_357
        } else { // block id: 359
            var_1679141737831_104;
            var_1679141737831_363 <<= ((Int16(41)) & 7);
            false
        }) && loopTimeVar_1679141737831_852 < 100 ) ;
        let var_1679141737831_905 : Interface_1679141737831_16<Array<Unit>, Array<Unit>> = Class_1679141737831_13();
        let var_1679141737831_993 : Range<UInt16> = ((UInt16(60)&127)..(UInt16(105)&127):(11|1));
        if (var_1679141737831_661) { match (Enum_1679141737831_858.defaultValue) {
            case defaultValue => 
                Option<Bool>.None;
                if (var_1679141737831_427) { (var_1679141737831_869, var_1679141737831_593, ((UInt16(107)&127)..=(UInt16(200)&127):((36|1)))) } else { var_1679141737831_884 } 
            
            case defaultValue => 
                var_1679141737831_884
            
            case defaultValue => 
                var_1679141737831_905;
                ();
                let var_1679141737831_917 : (Range<Int32>, Unit, Option<Rune>, UInt64, String, Range<Int8>) = (((Int32(-112)&127)..(Int32(-120)&127):(67|1)), (), Option<Rune>.None, UInt64(UInt8(Int8(Int8(-5)))), ###"DBechfDe[*"###, ((Int8(UInt8(UInt8(189)))&127)..(Int8(-69)&127):((108|1))));
                if (true) { (var_1679141737831_917, var_1679141737831_593, ((UInt16(245)&127)..=(UInt16(11)&127):((-59)|1))) } else { ((var_1679141737831_938, (), Option<Rune>.None, var_1679141737831_56, "Vt~()hs#U*", ((Int8(-46)&127)..(Int8(114)&127):(123|1))), r'V', ((UInt16(161)&127)..=(UInt16(230)&127):(84|1))) } 
            
            case defaultValue => 
                var var_1679141737831_964 : ?UInt16 = (((Int8(46)&127)..(Int8(Int8(-117))&127):((Int64(Int8(38))|1))) as UInt16);
                if (true) { Option<UInt16>.Some(var_1679141737831_958) } else { var_1679141737831_964 } ;
                var_1679141737831_884
            
            case _ => 
                var_1679141737831_976;
                ((((Int32(-68)&127)..(Int32(101)&127):(93|1)), var_1679141737831_104, var_1679141737831_983, var_1679141737831_56, var_1679141737831_280, ((Int8(122)&127)..=(Int8(-126)&127):(65|1))), var_1679141737831_990, var_1679141737831_993)
            
        } } else { (var_1679141737831_869, var_1679141737831_998, ((UInt16(95)&127)..=(UInt16(224)&127):(52|1))) } [0]
    }
;
    func_1679141737831_318()[2]
}

public func func_1679141737831_303<T0, T1>(param_1679141737831_304 : Int8) : Array<UInt64> { // block id: 305
    let var_1679141737831_1004 : (Int32) -> Option<Rune> = func_1679141737831_312<Range<UInt32>, Float64, Array<Option<Rune>>>;
    ((Struct_1679141737831_827<UInt8>.var_1679141737831_1009|>var_1679141737831_1004) ?? if (if (var_1679141737831_631) { // block id: 1022
        var_1679141737831_427 && false
    } else { // block id: 1026
        if (var_1679141737831_631) { Option<Unit>.None } else { Option<Unit>.None } ;
        true
    }) { // block id: 1032
        var_1679141737831_1035 >>= ((var_1679141737831_1035) & 7);
        var_1679141737831_593
    } else if ((UInt64(27) is (UInt16) -> UInt32)) { // block id: 1042
        var_1679141737831_990
    } else { // block id: 1044
        var_1679141737831_593;
        ();
        if (var_1679141737831_427) { r'R' } else { var_1679141737831_990 } 
    });
    [UInt64(240), UInt64(21), UInt64(106), UInt64(101), UInt64(221), UInt64(54), UInt64(183), UInt64(25), UInt64(84), UInt64(48)]
}


public func func_1679141737831_296(param_1679141737831_297 : UInt64) : Int64 { // block id: 298
    var var_1679141737831_1057 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    try (resource = Class_1679141737831_13()) { // block id: 300
        var_1679141737831_104;
        Int8(3)|>func_1679141737831_303<Struct_1679141737831_827<UInt8>, Int64>;
        var_1679141737831_1057[1]
    } finally { // block id: 1070
        var var_1679141737831_1082 : Bool = ((-89) is Rune);
        (Option<Array<Bool>>.None ?? [false, var_1679141737831_631, true, var_1679141737831_1082, var_1679141737831_1082, false, var_1679141737831_488, false, true, true]);
        var loopTimeVar_1679141737831_1095 : Int64 = 0;
        do {
            loopTimeVar_1679141737831_1095++;

        } while ((true) && loopTimeVar_1679141737831_1095 < 100 ) 
    };
    (((-113)&127)..(49&127):((-4)|1));
    Class_1679141737831_13.var_1679141737831_1100
}

public func func_1679141737831_291(param_1679141737831_292 : Array<Bool>) : Unit { // block id: 293
    match (func_1679141737831_296(var_1679141737831_1105[4])) {
        case caseVar_1679141737831_1134 : Range<Int8> => 
            ()
        
        case caseVar_1679141737831_1139 : Range<UInt64> => 
            var_1679141737831_1142;
            ();
            var_1679141737831_976
        
        case _ => 
            ();
            ();
            ()
        
    }
}

main(): Int64 {
    try {
        let var_1679141737831_99 : Int8 = Int8(74);
        let var_1679141737831_116 : Rune = r'W';
        let var_1679141737831_155 : Class_1679141737831_13 = Class_1679141737831_13();
        let var_1679141737831_1152 : (Array<Bool>) -> Unit = func_1679141737831_291;
        func func_1679141737831_8(param_1679141737831_9 : Int16) : (Unit, Bool, UInt8, Int16, Rune, String) { // block id: 10
            let var_1679141737831_128 : Bool = (Int8(Int8(-104)) is Int16);
            func func_1679141737831_18<T0>() : Class_1679141737831_13 { // block id: 19
                func_1679141737831_21();
                match (try { // block id: 96
                    var_1679141737831_99 - Int8(-72)
                } finally { // block id: 102
                    var_1679141737831_104;
                    ();
                    Int8(-86) + Int8(122)
                }) {
                    case 17 => 
                        if (false) { var_1679141737831_116 } else { var_1679141737831_116 } ;
                        ();
                        let var_1679141737831_121 : Class_1679141737831_13 = Class_1679141737831_13();
                        var_1679141737831_121
                    
                    case -83 => 
                        if (var_1679141737831_128) { Class_1679141737831_13() } else { Class_1679141737831_13() } 
                    
                    case _ => 
                        var_1679141737831_104;
                        var_1679141737831_104;
                        if (var_1679141737831_128) { Class_1679141737831_13() } else { var_1679141737831_143 } 
                    
                    case _ => 
                        var_1679141737831_104;
                        var_1679141737831_104;
                        Class_1679141737831_13()
                    
                    case _ => 
                        Int8(12);
                        var_1679141737831_155
                    
                }
            }
;
            var loopTimeVar_1679141737831_256 : Int64 = 0;
            while ((func_1679141737831_18<Bool>().func_1679141737831_158(namedParam_1679141737831_159 : var_1679141737831_63)) && loopTimeVar_1679141737831_256 < 100 ) {
                loopTimeVar_1679141737831_256++;
                Class_1679141737831_13.var_1679141737831_246
            };
            ((if (true) { // block id: 265
                let var_1679141737831_268 : Float32 = Float32(Float32(Float32(Float32(Float32(-95.0)))));
                -var_1679141737831_268;
                UInt8(253);
                "K.9Tx-r}B6"
            } else if (true) { // block id: 277
                var_1679141737831_104;
                var_1679141737831_280
            } else { // block id: 282
                Int8(53) - var_1679141737831_99;
                if (var_1679141737831_128) { "W+2jjWbq,p" } else { var_1679141737831_280 } 
            } as Unit) ?? ([[false, true, false, false, true, false, false, true, true, false], [false, false, false, false, true, false, false, true, false, false], [true, true, false, false, false, true, true, true, true, false], [false, false, false, false, false, false, true, true, true, false], [true, false, true, false, true, false, false, false, true, false], [false, false, false, true, true, false, false, false, false, false], [true, true, false, false, false, false, false, true, true, true], [false, false, true, true, true, false, false, true, false, true], [false, false, false, false, true, true, false, true, false, false], [false, true, false, false, true, false, false, true, true, true]][3]|>var_1679141737831_1152));
            Class_1679141737831_13.var_1679141737831_1160
        }
;
        func_1679141737831_8(var_1679141737831_494)[3];
        var_1679141737831_1142;
        Class_1679141737831_13.func_1679141737831_1184(((var_1679141737831_350&127)..(var_1679141737831_350&127):((87|1))))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1679141737831_56*var_1679141737831_56), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_63*var_1679141737831_63), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_99*var_1679141737831_99), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_350*var_1679141737831_350), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_494*var_1679141737831_494), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_693*var_1679141737831_693), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_753*var_1679141737831_753), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_821*var_1679141737831_821), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_958*var_1679141737831_958), 64)
        crccheck.updateBuffer(UInt64(var_1679141737831_1035*var_1679141737831_1035), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
