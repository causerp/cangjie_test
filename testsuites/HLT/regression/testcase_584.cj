/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

var var_1710161325309_67 : Option<Struct_1710161325309_12> = Option<Struct_1710161325309_12>.None
var var_1710161325309_188 : Class_1710161325309_182 = Class_1710161325309_182()
var var_1710161325309_229 : Class_1710161325309_24 = Class_1710161325309_24()
let var_1710161325309_247 : (UInt32, UInt64, Bool, Option<Struct_1710161325309_12>, Option<Option<Struct_1710161325309_12>>) = (UInt32(224), UInt64(106), (Option<Struct_1710161325309_12>.None is (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186)), (Int64(Int64(74)) as Struct_1710161325309_12), (() as Option<Struct_1710161325309_12>))
public var var_1710161325309_316 : Option<Unit> = (Class_1710161325309_182() as Unit)
var var_1710161325309_380 : Int = Int64(-15)
public const var_1710161325309_389 : Bool = false
let var_1710161325309_395 : Unit = ()
public let var_1710161325309_453 : Class_1710161325309_449 = Class_1710161325309_449()
public var var_1710161325309_468 : (UInt64, Int64, Bool, Int64, Int16, UInt64) = (UInt64(160), Int64(Int8(Int8(Int8(-89)))), false, Int64(115), Int16(-109), UInt64(UInt64(UInt16(33))))
let var_1710161325309_500 : Int16 = Int16(UInt16(UInt8(131)))
public var var_1710161325309_603 : VArray<Int8, $5> = [Int8(101), Int8(109), Int8(UInt8(37)), Int8(0), Int8(23)]
var var_1710161325309_709 : Range<Int32> = ((Int32(Int32(49))&127)..(Int32(Int32(UInt32(UInt32(UInt16(135)))))&127):(Int64(-75)|1))
const var_1710161325309_718 : UInt32 = 81
public var var_1710161325309_730 : UInt32 = UInt32(UInt16(248))
public var var_1710161325309_756 : UInt = UInt64(UInt16(183))
var var_1710161325309_789 : Int32 = Int32(Int16(Int16(-91)))
public let var_1710161325309_813 : Float64 = Float64(Float32(42.0))
public var var_1710161325309_821 : (Int32, Option<Option<Struct_1710161325309_12>>, VArray<Unit, $6>, VArray<Unit, $6>, Array<UInt64>, Option<Option<Struct_1710161325309_12>>) = (Int32(-77), (Float64(Float32(114.0)) as Option<Struct_1710161325309_12>), VArray<Unit, $6>(repeat: ()), VArray<Unit, $6>({ i => ()}), [UInt64(130), UInt64(148), UInt64(152), UInt64(59), UInt64(222), UInt64(68), UInt64(78), UInt64(33), UInt64(178), UInt64(146)], Option<Option<Struct_1710161325309_12>>.None)
public let var_1710161325309_930 : Interface_1710161325309_185 = Class_1710161325309_182()
public const var_1710161325309_942 : Float32 = -108.0
public var var_1710161325309_958 : UInt32 = UInt32(UInt8(Int8(UInt8(34))))
public var var_1710161325309_1076 : Array<Bool> = [false, ((((UInt16(UInt16(189))&127)..=(UInt16(UInt16(80))&127):(Int64(-45)|1)) as Struct_1710161325309_12) is Interface_1710161325309_186), (((UInt32(UInt32(122))&127)..=(UInt32(UInt32(227))&127):(Int64(-33)|1)) is UInt64), (UInt64(UInt64(138)) is UInt16), (((UInt8(UInt8(96))&127)..=(UInt8(UInt8(149))&127):(Int64(66)|1)) is VArray<UInt64, $6>), true, (Class_1710161325309_449() is Option<Option<Struct_1710161325309_12>>), (Option<Option<Struct_1710161325309_12>>.None is Range<Int32>), false, true]
var var_1710161325309_1205 : Range<UInt32> = ((UInt32(UInt32(31))&127)..(UInt32(UInt32(196))&127):(Int64(72)|1))
var var_1710161325309_1258 : VArray<Unit, $6> = [(), (), (), (), (), ()]
public const var_1710161325309_1272 : UInt = 115
let var_1710161325309_1285 : ?Option<Struct_1710161325309_12> = Option<Option<Struct_1710161325309_12>>.None
public var var_1710161325309_1315 : ?(UInt64, Int64, Bool, Int64, Int16, UInt64) = Option<(UInt64, Int64, Bool, Int64, Int16, UInt64)>.None
let var_1710161325309_1332 : ?Int16 = (Class_1710161325309_449() as Int16)
public var var_1710161325309_1366 : Bool = (Class_1710161325309_182() is (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186))
var var_1710161325309_1378 : Int8 = Int8(111)
let var_1710161325309_1393 : UInt16 = UInt16(39)
let var_1710161325309_1403 : UInt16 = UInt16(Int16(-59))
public struct Struct_1710161325309_12 {
    public init() { // block id: 14

    }
;
    static mut prop var_1710161325309_218 : Interface_1710161325309_186 { // block id: 219
        get() { // block id: 221
            Class_1710161325309_182()
        }

        set(Value) { // block id: 225
            ()
        }

    };
    public static var var_1710161325309_357 : VArray<UInt64, $6> = VArray<UInt64, $6>({ i => UInt64(182)});
    public static const var_1710161325309_385 : Float32 = -44.0;
    public static var var_1710161325309_405 : UInt64 = UInt64(44);
    public func func_1710161325309_329(optionalParam_1710161325309_330 ! : Unit = (), optionalParam_1710161325309_332 ! : (Int16) -> Unit = func_1710161325309_75, optionalParam_1710161325309_336 ! : (UInt16) -> Int16 = func_1710161325309_155, namedParam_1710161325309_340 ! : (UInt64) -> UInt32) : Unit { // block id: 343
        (var_1710161325309_357[1] is (Int16) -> Unit);
        var var_1710161325309_400 : Int16 = Int16(-7);
        let var_1710161325309_432 : VArray<Unit, $6> = [(), (), (), (), (), ()];
        var loopTimeVar_1710161325309_435 : Range<UInt64> = ((UInt64(UInt64(191))&127)..(UInt64(UInt64(Int32(17)))&127):(Int64(-20)|1));
        for (i in loopTimeVar_1710161325309_435 where match (Option<Option<Struct_1710161325309_12>>.Some(Option<Struct_1710161325309_12>.None)) {
            case _ => 
                false
            
            case caseVar_1710161325309_376 : Bool => 
                var_1710161325309_380 >>= ((Int64(36)) & 7);
                var_1710161325309_385 + var_1710161325309_385;
                var_1710161325309_389
            
            case _ => 
                var_1710161325309_395;
                (var_1710161325309_380, var_1710161325309_400, UInt32(151), var_1710161325309_385, var_1710161325309_405);
                var_1710161325309_389 || true
            
        }) {
            (((UInt16(UInt16(10))&127)..(UInt16(UInt16(168))&127):(Int64(-85)|1)), UInt64(164), var_1710161325309_357, var_1710161325309_395, false, ((UInt16(UInt16(231))&127)..=(UInt16(UInt16(42))&127):(Int64(-59)|1)), VArray<UInt64, $6>({ i => UInt64(253)}), ((Int16(Int16(77))&127)..=(Int16(Int16(20))&127):(Int64(-10)|1)))[3];
            var_1710161325309_432[0]
        }
    }

}

public open class Class_1710161325309_24 <: Resource {
    public init() { // block id: 26

    }
;
    static const var_1710161325309_29 : Bool = false;
    public var var_1710161325309_92 : Struct_1710161325309_12 = Struct_1710161325309_12();
    mut prop var_1710161325309_191 : UInt { // block id: 192
        get() { // block id: 194
            Option<Struct_1710161325309_12>.None;
            UInt64(Int16(27))
        }

        set(Value) { // block id: 200
            '5';
            Int16(-127);
            ()
        }

    };
    protected mut prop var_1710161325309_265 : Bool { // block id: 266
        get() { // block id: 268
            ();
            ();
            true
        }

        set(Value) { // block id: 274
            Int16(UInt16(Int8(-76)));
            ()
        }

    };
    public static const var_1710161325309_322 : Unit = ();
    public mut prop var_1710161325309_456 : Float32 { // block id: 457
        get() { // block id: 459
            Float32(-114.0);
            var_1710161325309_1540
        }

        set(Value) { // block id: 463
            var_1710161325309_1540 = Value
        }

    };
    public static let var_1710161325309_593 : Range<Int64>;
    func func_1710161325309_232(param_1710161325309_233 : UInt64, param_1710161325309_234 : Int8, namedParam_1710161325309_235 ! : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186), namedParam_1710161325309_236 ! : Option<Struct_1710161325309_12>) : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) { // block id: 237
        ((var_1710161325309_247[4] ?? try { // block id: 260
            var_1710161325309_67
        } catch (e: Exception) { // block id: 262
            var_1710161325309_265 &&= false;
            var var_1710161325309_281 : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) = (Option<Struct_1710161325309_12>.None, (), (UInt64(221), Int64(-103), (UInt32(199) is UInt16), Int64(-66), Int16(Int16(-29)), UInt64(Int64(UInt32(179)))), ((UInt64(169), Int64(84), true, Int64(Int16(94)), Int16(-85), UInt64(UInt64(229))) as Struct_1710161325309_12), Class_1710161325309_182(namedParam_1710161325309_308 : Int64(17)));
            var_1710161325309_281;
            var_1710161325309_67
        }), (var_1710161325309_453.var_1710161325309_456 /= Float32((Int32(Float32(-105.0))) | 1)), try { // block id: 466
            var_1710161325309_468
        } finally { // block id: 481
            (UInt64(216), var_1710161325309_380, var_1710161325309_265, var_1710161325309_380, Int16(66), var_1710161325309_191)
        }, var_1710161325309_67, (Int16(-121), ((Int64(Int64(-99))&127)..=(Int64(var_1710161325309_380)&127):(var_1710161325309_380|1)), ((Int16(var_1710161325309_500)&127)..=(Int16(var_1710161325309_500)&127):(var_1710161325309_380|1)), Class_1710161325309_182(Int8(-109), optionalParam_1710161325309_546 : var_1710161325309_593, namedParam_1710161325309_551 : var_1710161325309_593))[3])
    }
;
    public var var_1710161325309_897 : (UInt64, Int64, Bool, Int64, Int16, UInt64) = (UInt64(172), Int64(105), true, Int64(-57), Int16(33), UInt64(211));
    var var_1710161325309_1540 : Float32 = Float32(51.0)
    static init() {
        var_1710161325309_593 = ((Int64(Int64(-68))&127)..=(Int64(Int64(-54))&127):(Int64(-126)|1))
    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


public const func func_1710161325309_75(param_1710161325309_76 : Int16) : Unit { // block id: 77
    58 / ((37) | 1);
    ()
}

public func func_1710161325309_119(namedParam_1710161325309_17 ! : Int16) : Struct_1710161325309_12 { // block id: 18
    func func_1710161325309_20() : Struct_1710161325309_12 { // block id: 21
        let var_1710161325309_54 : Class_1710161325309_24 = Class_1710161325309_24();
        var loopTimeVar_1710161325309_71 : Int64 = 0;
        while ((Class_1710161325309_24.var_1710161325309_29) && loopTimeVar_1710161325309_71 < 100 ) {
            loopTimeVar_1710161325309_71++;
            let var_1710161325309_51 : Bool = true;
            try (resource = Class_1710161325309_24()) { // block id: 33
                var var_1710161325309_35 : Class_1710161325309_24 = Class_1710161325309_24();
                var_1710161325309_35;
                var var_1710161325309_39 : Bool = (Int8(UInt8(Int8(Int8(6)))) is Int32);
                var_1710161325309_39 = var_1710161325309_39
            } catch (e: Exception) { // block id: 46
                ()
            } finally { // block id: 48
                if (var_1710161325309_51) { var_1710161325309_54 } else { var_1710161325309_54 } ;
                Int32(19);
                let var_1710161325309_59 : Unit = ();
                var_1710161325309_59
            };
            (var_1710161325309_67 ?? Struct_1710161325309_12())
        };
        let var_1710161325309_84 : Int16 = Int16(104);
        try { // block id: 73
            var_1710161325309_84|>func_1710161325309_75;
            var_1710161325309_67.getOrThrow()
        } finally { // block id: 88
            var_1710161325309_54.var_1710161325309_92
        }
    }
;
    func_1710161325309_20()
}

public const func func_1710161325309_144(param_1710161325309_145 : UInt64) : UInt32 { // block id: 146
    227
}

const func func_1710161325309_155(param_1710161325309_156 : UInt16) : Int16 { // block id: 157
    195;
    78
}

public interface Interface_1710161325309_185 {
    static func func_1710161325309_1130(namedParam_1710161325309_1131 ! : VArray<Unit, $6>) : Option<Bool> { // block id: 1132
        Int8(UInt8(match (var_1710161325309_316) {
            case _ => 
                Option<Bool>.None;
                Int8(23)
            
        }));
        var var_1710161325309_1150 : Option<Option<Bool>> = ((UInt64(Int8(Int8(-24))), Int64(UInt32(197)), true, Int64(UInt64(0)), Int16(-12), UInt64(UInt64(204))) as Option<Bool>);
        var var_1710161325309_1168 : Option<Bool> = (Option<Option<Struct_1710161325309_12>>.None as Bool);
        (try { // block id: 1148
            var_1710161325309_1150
        } catch (_) { // block id: 1164
            var_1710161325309_395;
            var_1710161325309_1150
        } ?? var_1710161325309_1168)
    }

}

public interface Interface_1710161325309_186 {

}

public open class Class_1710161325309_182 <: Class_1710161325309_24 & Interface_1710161325309_185 & Interface_1710161325309_186 {
    public init() { // block id: 184

    }
;
    public init(namedParam_1710161325309_308 ! : Int64) { // block id: 309
        (var_1710161325309_316 ?? Class_1710161325309_24.var_1710161325309_322);
        var var_1710161325309_326 : Struct_1710161325309_12 = Struct_1710161325309_12();
        let var_1710161325309_442 : (UInt16) -> Int16 = func_1710161325309_155;
        var_1710161325309_326.func_1710161325309_329(optionalParam_1710161325309_336 : var_1710161325309_442, namedParam_1710161325309_340 : func_1710161325309_144)
    }
;
    public init(param_1710161325309_545 : Int8, optionalParam_1710161325309_546 ! : Range<Int64> = ((Int64(Int64(-113))&127)..=(Int64(Int64(-78))&127):(Int64(-124)|1)), namedParam_1710161325309_551 ! : Range<Int64>) { // block id: 552
        (Int8(20) as Struct_1710161325309_12);
        const var_1710161325309_559 : UInt64 = 106;
        var loopTimeVar_1710161325309_590 : Int64 = 0;
        while ((match (((UInt64(var_1710161325309_559)&127)..=(UInt64(var_1710161325309_559)&127):(Int64(49)|1))) {
            case caseVar_1710161325309_565 => 
                var_1710161325309_389
            
            case _ : Option<Unit> => 
                var_1710161325309_389
            
            case _ : String => 
                true
            
            case _ => 
                ();
                var_1710161325309_389
            
            case _ => 
                var_1710161325309_389 || false
            
        }) && loopTimeVar_1710161325309_590 < 100 ) {
            loopTimeVar_1710161325309_590++;
            var_1710161325309_559
        }
    }
;
    public static var var_1710161325309_909 : (UInt64, Int64, Bool, Int64, Int16, UInt64);
    protected static const var_1710161325309_1185 : Unit = ();
    public static func func_1710161325309_1130(namedParam_1710161325309_1131 ! : VArray<Unit, $6>) : Option<Bool> { // block id: 1132
        Int8(UInt8(match (var_1710161325309_316) {
            case _ => 
                Option<Bool>.None;
                Int8(23)
            
        }));
        var var_1710161325309_1150 : Option<Option<Bool>> = ((UInt64(Int8(Int8(-24))), Int64(UInt32(197)), true, Int64(UInt64(0)), Int16(-12), UInt64(UInt64(204))) as Option<Bool>);
        var var_1710161325309_1168 : Option<Bool> = (Option<Option<Struct_1710161325309_12>>.None as Bool);
        (try { // block id: 1148
            var_1710161325309_1150
        } catch (_) { // block id: 1164
            var_1710161325309_395;
            var_1710161325309_1150
        } ?? var_1710161325309_1168)
    }

    static init() {
        var_1710161325309_909 = (UInt64(71), Int64(82), false, Int64(-1), Int16(104), UInt64(31))
    }
}



public open class Class_1710161325309_449 <: Class_1710161325309_182 {
    public init() { // block id: 451

    }
;
    public init(namedParam_1710161325309_1057 ! : Float64, namedParam_1710161325309_1058 ! : UInt16) { // block id: 1059
        if (if (true) { // block id: 1065
            Option<Option<Struct_1710161325309_12>>.None;
            var_1710161325309_316;
            if (var_1710161325309_389) { [false, false, true, false, false, true, true, true, false, true] } else { [false, true, false, false, false, true, true, true, true, true] } 
        } else if (var_1710161325309_389) { // block id: 1073
            ();
            var_1710161325309_1076
        } else { // block id: 1099
            let var_1710161325309_1111 : Bool = ((((Int64(Int64(Int8(-43)))&127)..(Int64(Int64(0))&127):(Int64(Int64(-46))|1)) as Struct_1710161325309_12) is (Int16, Range<Int64>, Range<Int16>, Interface_1710161325309_186));
            [true, var_1710161325309_389, var_1710161325309_389, var_1710161325309_389, false, true, var_1710161325309_389, false, true, var_1710161325309_1111]
        }[3]) { // block id: 1121

        } else if ((Interface_1710161325309_185.func_1710161325309_1130(namedParam_1710161325309_1131 : VArray<Unit, $6>(repeat: var_1710161325309_395)) ?? var_1710161325309_958 >= UInt32(55))) { // block id: 1181
            Class_1710161325309_182.var_1710161325309_1185;
            ();
            [(), (), (), (), (), (), (), (), (), ()][0]
        }
    }
;
    public static func func_1710161325309_1130(namedParam_1710161325309_1131 ! : VArray<Unit, $6>) : Option<Bool> { // block id: 1132
        Int8(UInt8(match (var_1710161325309_316) {
            case _ => 
                Option<Bool>.None;
                Int8(23)
            
        }));
        var var_1710161325309_1150 : Option<Option<Bool>> = ((UInt64(Int8(Int8(-24))), Int64(UInt32(197)), true, Int64(UInt64(0)), Int16(-12), UInt64(UInt64(204))) as Option<Bool>);
        var var_1710161325309_1168 : Option<Bool> = (Option<Option<Struct_1710161325309_12>>.None as Bool);
        (try { // block id: 1148
            var_1710161325309_1150
        } catch (_) { // block id: 1164
            var_1710161325309_395;
            var_1710161325309_1150
        } ?? var_1710161325309_1168)
    }

}


public func func_1710161325309_212(param_1710161325309_213 : Int64) : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) { // block id: 214
    Struct_1710161325309_12.var_1710161325309_218;
    let var_1710161325309_613 : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) = ((((Int16(Int16(Int8(95)))&127)..(Int16(Int16(Int16(60)))&127):(Int64(Int64(-82))|1)) as Struct_1710161325309_12), (), (UInt64(202), Int64(UInt64(UInt16(92))), false, Int64(UInt32(22)), Int16(-30), UInt64(Int8(Int8(-119)))), (((UInt64(UInt64(UInt8(34)))&127)..=(UInt64(UInt64(237))&127):(Int64(Int16(-105))|1)) as Struct_1710161325309_12), Class_1710161325309_449());
    var var_1710161325309_650 : Option<Option<Struct_1710161325309_12>> = (((Int8(Int8(-19))&127)..=(Int8(Int8(-71))&127):(Int64(81)|1)) as Option<Struct_1710161325309_12>);
    var var_1710161325309_654 : Option<Struct_1710161325309_12> = Option<Struct_1710161325309_12>.None;
    var_1710161325309_229.func_1710161325309_232(UInt64(90) >> ((UInt64(98)) & 7), var_1710161325309_603[1], namedParam_1710161325309_235 : var_1710161325309_613, namedParam_1710161325309_236 : (var_1710161325309_650 ?? var_1710161325309_654))
}


func func_1710161325309_206(param_1710161325309_207 : Interface_1710161325309_185) : (UInt64, Int64, Bool, Int64, Int16, UInt64) { // block id: 208
    var var_1710161325309_669 : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) = (Option<Struct_1710161325309_12>.None, (), (UInt64(139), Int64(34), true, Int64(-6), Int16(UInt8(144)), UInt64(71)), (UInt8(252) as Struct_1710161325309_12), Class_1710161325309_182(Int8(Int8(106)), optionalParam_1710161325309_546 : ((Int64(Int64(-72))&127)..(Int64(Int64(33))&127):(Int64(-105)|1)), namedParam_1710161325309_551 : ((Int64(Int64(Int32(-118)))&127)..(Int64(Int64(15))&127):(Int64(UInt32(14))|1))));
    (if (true) { // block id: 659
        Int64(-6)
    } else if (false) { // block id: 662
        var_1710161325309_395;
        Int64(94) / ((var_1710161325309_380) | 1)
    } else { // block id: 667
        var_1710161325309_669;
        ();
        var_1710161325309_380
    }|>func_1710161325309_212)[3];
    const var_1710161325309_746 : Int8 = -23;
    var var_1710161325309_751 : ?UInt32 = ("""
bEEo.
}&:$X
""" as UInt32);
    var var_1710161325309_772 : Int16 = Int16(40);
    var var_1710161325309_797 : Struct_1710161325309_12 = Struct_1710161325309_12();
    let var_1710161325309_844 : (Int64, Int16, UInt32, Float32, UInt64) = (Int64(111), Int16(Int8(Int8(UInt8(200)))), UInt32(UInt8(239)), Float32(Float32(Float32(Float32(-56.0)))), UInt64(124));
    (((Class_1710161325309_449() as UInt32) ?? if (var_1710161325309_389) { // block id: 706
        var_1710161325309_395;
        var_1710161325309_709;
        var_1710161325309_718
    } else if (var_1710161325309_389) { // block id: 721
        var var_1710161325309_724 : UInt64 = UInt64(Int16(Int16(23)));
        var_1710161325309_724--;
        var_1710161325309_730 |= UInt32(124);
        var_1710161325309_718 % ((var_1710161325309_730) | 1)
    } else { // block id: 737
        let var_1710161325309_740 : UInt16 = UInt16(78);
        -var_1710161325309_740;
        var_1710161325309_730
    }), if (var_1710161325309_746 >= Int8(66)) { // block id: 749
        var_1710161325309_751;
        var_1710161325309_395;
        var_1710161325309_756
    } else if (if (var_1710161325309_389) { // block id: 761
        var_1710161325309_389
    } else { // block id: 763
        var_1710161325309_751;
        var_1710161325309_395;
        var_1710161325309_389 && true
    }) { // block id: 769
        var_1710161325309_772 *= var_1710161325309_772;
        ();
        -var_1710161325309_756
    } else { // block id: 778
        UInt64(20) >> ((var_1710161325309_756) & 7)
    }, false, try { // block id: 785
        var_1710161325309_380;
        var_1710161325309_789 &= Int32(-76);
        (Option<Struct_1710161325309_12>.Some(var_1710161325309_797), var_1710161325309_395, var_1710161325309_468, var_1710161325309_67, Class_1710161325309_182())
    } finally { // block id: 803
        var_1710161325309_669
    }[0], (var_1710161325309_316, var_1710161325309_813, ((Int32(Int32(-69))&127)..=(Int32(Int32(-69))&127):(var_1710161325309_380|1)), var_1710161325309_821, var_1710161325309_844)[3][1]);
    try { // block id: 861
        var loopTimeVar_1710161325309_866 : Int = 0;
        do {
            loopTimeVar_1710161325309_866++;

        } while ((false) && loopTimeVar_1710161325309_866 < 100 ) ;
        var loopTimeVar_1710161325309_871 : Array<UInt64> = [UInt64(131), UInt64(159), UInt64(UInt16(UInt8(UInt8(139)))), UInt64(142), UInt64(UInt32(Int16(124))), UInt64(Int32(UInt32(241))), UInt64(Int8(Int8(-60))), UInt64(33), UInt64(UInt32(UInt32(50))), UInt64(101)];
        for (i in loopTimeVar_1710161325309_871 where true) {
            var_1710161325309_395
        };
        var_1710161325309_229.var_1710161325309_897
    } finally { // block id: 905
        Class_1710161325309_182.var_1710161325309_909
    }
}


func func_1710161325309_149(param_1710161325309_150 : (UInt64, Int64, Bool, Int64, Int16, UInt64)) : UInt32 { // block id: 151
    var var_1710161325309_161 : (UInt16) -> Int16 = { lambdaParameter_1710161325309_164 : UInt16 => Int16(UInt16(UInt16(UInt8(156)))) };
    var loopTimeVar_1710161325309_180 : Int64 = 0;
    do {
        loopTimeVar_1710161325309_180++;
        let var_1710161325309_177 : Float32 = Float32(9.0);
        Float32(var_1710161325309_177)
    } while (((UInt16(155)|>var_1710161325309_161) <= (UInt16(216)|>var_1710161325309_161)) && loopTimeVar_1710161325309_180 < 100 ) ;
    var_1710161325309_188.var_1710161325309_191;
    let var_1710161325309_918 : (Interface_1710161325309_185) -> (UInt64, Int64, Bool, Int64, Int16, UInt64) = func_1710161325309_206;
    let var_1710161325309_926 : ?Interface_1710161325309_185 = Option<Interface_1710161325309_185>.Some(Class_1710161325309_182());
    match (((var_1710161325309_926 ?? var_1710161325309_930)|>var_1710161325309_918)) {
        case (caseVar_1710161325309_934 : Option<Interface_1710161325309_185>,_,caseVar_1710161325309_935 : Range<UInt16>,_,caseVar_1710161325309_936,caseVar_1710161325309_937 : Struct_1710161325309_12) => 
            ();
            var_1710161325309_942 - Float32(-64.0);
            var_1710161325309_718 ^ UInt32(187)
        
        case (caseVar_1710161325309_950,caseVar_1710161325309_951,_ : Interface_1710161325309_185,caseVar_1710161325309_952 : Option<Option<Struct_1710161325309_12>>,caseVar_1710161325309_953 : VArray<Unit, $6>,_) => 
            UInt32(105) % ((var_1710161325309_958) | 1)
        
        case (_,caseVar_1710161325309_965 : Int16,caseVar_1710161325309_966,_ : Range<UInt64>,_,caseVar_1710161325309_967) => 
            var_1710161325309_958
        
        case _ => 
            var_1710161325309_756++;
            UInt32(185)
        
        case _ => 
            let var_1710161325309_981 : UInt32 = UInt32(215);
            let var_1710161325309_987 : ?Option<Struct_1710161325309_12> = Option<Option<Struct_1710161325309_12>>.Some((Option<Option<Struct_1710161325309_12>>.None as Struct_1710161325309_12));
            (var_1710161325309_981, var_1710161325309_756, var_1710161325309_389, var_1710161325309_67, var_1710161325309_987);
            var_1710161325309_395;
            var_1710161325309_981
        
    }
}




func func_1710161325309_994(param_1710161325309_995 : UInt64) : (UInt64, Int64, Bool, Int64, Int16, UInt64) { // block id: 996
    var var_1710161325309_1001 : (Range<UInt16>, UInt64, VArray<UInt64, $6>, Unit, Bool, Range<UInt16>, VArray<UInt64, $6>, Range<Int16>) = (((UInt16(UInt16(253))&127)..=(UInt16(UInt16(12))&127):(Int64(88)|1)), UInt64(156), VArray<UInt64, $6>({ i => UInt64(150)}), (), (VArray<Int8, $5>(repeat: Int8(UInt8(8))) is (Int64) -> (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186)), ((UInt16(UInt16(49))&127)..(UInt16(UInt16(Int8(UInt8(44))))&127):(Int64(-123)|1)), VArray<UInt64, $6>(repeat: UInt64(Int16(UInt16(43)))), ((Int16(Int16(40))&127)..(Int16(Int16(65))&127):(Int64(89)|1)));
    var var_1710161325309_1047 : (UInt64, Int64, Bool, Int64, Int16, UInt64) = (UInt64(87), Int64(Int16(Int8(Int8(124)))), (Class_1710161325309_449(namedParam_1710161325309_1057 : Float64(-84.0), namedParam_1710161325309_1058 : UInt16(135)) is Interface_1710161325309_186), Int64(-24), Int16(Int8(Int8(UInt8(187)))), UInt64(178));
    var var_1710161325309_1241 : UInt8 = UInt8(Int8(-30));
    var var_1710161325309_1291 : Unit = ();
    try { // block id: 998
        var_1710161325309_1001[3];
        try { // block id: 1044
            ();
            var_1710161325309_1047
        } finally { // block id: 1200
            var_1710161325309_395;
            var_1710161325309_1047
        }
    } catch (e: Exception) { // block id: 1203
        var_1710161325309_1205;
        var var_1710161325309_1209 : (Option<Struct_1710161325309_12>, Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), Option<Struct_1710161325309_12>, Interface_1710161325309_186) = ((Class_1710161325309_449() as Struct_1710161325309_12), (), (UInt64(Int32(-46)), Int64(98), true, Int64(-100), Int16(UInt16(164)), UInt64(UInt64(Int64(-33)))), Option<Struct_1710161325309_12>.Some(Struct_1710161325309_12()), Class_1710161325309_182(Int8(Int8(103)), namedParam_1710161325309_551 : ((Int64(Int64(-13))&127)..=(Int64(Int64(Int8(76)))&127):(Int64(-50)|1))));
        var_1710161325309_1209[2]
    } finally { // block id: 1236
        const var_1710161325309_1252 : Unit = ();
        try { // block id: 1238
            var_1710161325309_1241 += var_1710161325309_1241;
            VArray<Unit, $6>(repeat: var_1710161325309_395);
            (var_1710161325309_789, Option<Option<Struct_1710161325309_12>>.None, var_1710161325309_1258, var_1710161325309_1258, [UInt64(156), var_1710161325309_756, var_1710161325309_756, var_1710161325309_1272, var_1710161325309_756, UInt64(250), var_1710161325309_1272, var_1710161325309_1272, UInt64(112), UInt64(15)], Option<Option<Struct_1710161325309_12>>.None)
        } catch (e: Exception) { // block id: 1281
            (var_1710161325309_789, var_1710161325309_1285, VArray<Unit, $6>({ i => ()}), var_1710161325309_1258, [UInt64(89), UInt64(119), UInt64(203), var_1710161325309_1272, UInt64(37), UInt64(154), UInt64(182), UInt64(46), UInt64(204), var_1710161325309_756], var_1710161325309_1285)
        };
        (var_1710161325309_1315 ?? (UInt64(122), Int64(120), true, var_1710161325309_380, Int16(-20), UInt64(204)))
    }
}


public func func_1710161325309_136(param_1710161325309_137 : (UInt64, Int64, Bool, Int64, Int16, UInt64)) : UInt32 { // block id: 138
    Int32(UInt16(77)) & Int32(-114);
    UInt64((var_1710161325309_1332 ?? Int16(48)))|>(func_1710161325309_994~>func_1710161325309_149)
}

public func func_1710161325309_119() : (UInt64, Int64, Bool, Int64, Int16, UInt64) { // block id: 120
    let var_1710161325309_1337 : ((UInt64, Int64, Bool, Int64, Int16, UInt64)) -> UInt32 = func_1710161325309_136;
    if (match (Int8(57)) {
        case _ => 
            ();
            const var_1710161325309_131 : Int16 = 61;
            var_1710161325309_131 << ((var_1710161325309_131) & 7);
            UInt32(18)
        
    } != ((UInt64(227), var_1710161325309_380, false, Int64(59), Int16(96), UInt64(51))|>var_1710161325309_1337)) { // block id: 1346
        var loopTimeVar_1710161325309_1351 : Int64 = 0;
        do {
            loopTimeVar_1710161325309_1351++;

        } while ((var_1710161325309_389) && loopTimeVar_1710161325309_1351 < 100 ) ;
        let var_1710161325309_1361 : Struct_1710161325309_12 = Struct_1710161325309_12();
        if (true) { // block id: 1354
            (var_1710161325309_730, var_1710161325309_756, var_1710161325309_389, Option<Struct_1710161325309_12>.Some(var_1710161325309_1361), var_1710161325309_1285);
            var_1710161325309_1366 &&= var_1710161325309_1366;
            let var_1710161325309_1372 : UInt32 = UInt32(193);
            var_1710161325309_1372 & var_1710161325309_730
        } else { // block id: 1375
            var_1710161325309_1378 += Int8(6);
            UInt32(121) >> ((var_1710161325309_730) & 7)
        }
    } else if (if (true) { // block id: 1387
        Int8(77) * var_1710161325309_1378;
        ();
        var_1710161325309_1393
    } else { // block id: 1395
        var_1710161325309_395;
        var var_1710161325309_1398 : Range<UInt64> = ((UInt64(UInt64(33))&127)..(UInt64(UInt64(24))&127):(Int64(8)|1));
        var_1710161325309_1398;
        var_1710161325309_1393
    } > (var_1710161325309_1403 % ((var_1710161325309_1403) | 1))) { // block id: 1407
        (Option<Unit>.None ?? ());
        UInt32(155)
    } else { // block id: 1412
        if (var_1710161325309_389) { // block id: 1415

        };
        (var_1710161325309_380, Int16(2), UInt32(153), var_1710161325309_942, var_1710161325309_756)[2]
    };
    let var_1710161325309_1429 : Option<Bool> = (UInt32(181) as Bool);
    let var_1710161325309_1435 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
    if ((var_1710161325309_1429 ?? var_1710161325309_389)) { // block id: 1433
        var_1710161325309_1435
    } else if (var_1710161325309_389) { // block id: 1438
        if (var_1710161325309_389) { var_1710161325309_1435 } else { var_1710161325309_1435 } 
    } else { // block id: 1443
        VArray<Unit, $8>(repeat: var_1710161325309_395)
    }[3];
    var var_1710161325309_1497 : (Unit, (UInt64, Int64, Bool, Int64, Int16, UInt64), String, Int16) = ((), (UInt64(Int8(39)), Int64(Int8(Int8(-67))), true, Int64(UInt16(UInt16(251))), Int16(UInt8(194)), UInt64(Int8(85))), "m#y(ZBH)CY", Int16(-43));
    try { // block id: 1455
        let var_1710161325309_1459 : VArray<Unit, $7> = [(), (), (), (), (), (), ()];
        var_1710161325309_1459[4];
        match (var_1710161325309_395) {
            case () => 
                ()
            
            case _ => 
                ();
                UInt32(23);
                var_1710161325309_380 /= ((Int64(28)) | 1)
            
        };
        Option<(UInt64, Int64, Bool, Int64, Int16, UInt64)>.Some(var_1710161325309_468).getOrThrow()
    } catch (e: Exception) { // block id: 1479
        try (resource = Class_1710161325309_24()) { // block id: 1481
            var_1710161325309_1378++;
            Float32(82.0) * Float32(16.0);
            var_1710161325309_395
        } finally { // block id: 1488
            Option<Unit>.Some(());
            var_1710161325309_789 += var_1710161325309_789
        };
        var_1710161325309_1497[1]
    }
}

public func func_1710161325309_8(param_1710161325309_9 : Unit) : (UInt64, Int64, Bool, Int64, Int16, UInt64) { // block id: 10
    let var_1710161325309_98 : Int = Int64(125);
    let var_1710161325309_1521 : (Int64, Int16, UInt32, Float32, UInt64) = (Int64(-65), Int16(UInt8(UInt8(102))), UInt32(Int16(Int16(-96))), Float32(-36.0), UInt64(215));
    func_1710161325309_119(namedParam_1710161325309_17 : (var_1710161325309_98, Int16(25), UInt32(110), Float32(-45.0), UInt64(233))[1]).func_1710161325309_106(var_1710161325309_500 & var_1710161325309_500, namedParam_1710161325309_108 : var_1710161325309_1521, optionalParam_1710161325309_109 : func_1710161325309_75);
    var_1710161325309_468
}

main(): Int64 {
    try {
        let var_1710161325309_1535 : (Unit) -> (UInt64, Int64, Bool, Int64, Int16, UInt64) = func_1710161325309_8;
        (()|>var_1710161325309_1535)[3]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Struct_1710161325309_12 {
    func func_1710161325309_106(param_1710161325309_107 : Int16, namedParam_1710161325309_108 ! : (Int64, Int16, UInt32, Float32, UInt64), optionalParam_1710161325309_109 ! : (Int16) -> Unit = { lambdaParameter_1710161325309_112 : Int16 => () }) : (UInt64, Int64, Bool, Int64, Int16, UInt64) { // block id: 117
        func_1710161325309_119()
    }

}

