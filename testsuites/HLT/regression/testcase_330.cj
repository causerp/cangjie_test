/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

let var_1687032556091_32 : ??UInt8 = (Int64(UInt32(252)) as Option<UInt8>)
var var_1687032556091_96 : (Int8, Unit, Float32, Float32, UInt32) = (Int8(Int8(41)), (), Float32(64.0), Float32(Float32(Float32(20.0))), UInt32(159))
public var var_1687032556091_109 : UInt32 = UInt32(UInt8(Int8(-68)))
let var_1687032556091_143 : Int16 = Int16(UInt16(43))
public let var_1687032556091_193 : UInt16 = UInt16(117)
public let var_1687032556091_201 : String = "B/w24fniB8"
let var_1687032556091_236 : Int8 = Int8(UInt8(Int8(Int8(-47))))
public let var_1687032556091_245 : (Bool, UInt32, UInt8, Int8, Bool) = ((UInt32(Int32(Int8(-92))) is Rune), UInt32(191), UInt8(206), Int8(-103), false)
public let var_1687032556091_291 : Option<UInt8> = (((Int8(UInt8(22)), (), Float32(Float32(80.0)), Float32(Float32(-53.0)), UInt32(152)), Int16(Int8(7)), UInt64(Int16(67)), UInt32(UInt16(219))) as UInt8)
public let var_1687032556091_326 : Float32 = Float32(Float32(Float32(29.0)))
public var var_1687032556091_349 : Array<Float64> = [Float64(Float32(12.0)), Float64(47.0), 80.0, 32.0, (-24.0), Float64(Float32(-125.0)), 94.0, 76.0, (-1.0), Float64(Float32(Float32(-9.0)))]
public let var_1687032556091_374 : Option<Unit> = ((Int8(-128), (), Float32(-55.0), Float32(Float32(Float32(55.0))), UInt32(UInt16(73))) as Unit)
public var var_1687032556091_386 : Unit = ()
var var_1687032556091_394 : Class_1687032556091_59 = Class_1687032556091_59()
public let var_1687032556091_500 : (Unit, Range<UInt64>, ((Int8, Unit, Float32, Float32, UInt32), Int16, UInt64, UInt32), Range<UInt16>, UInt16, (Range<Int16>, Float32, Int32, Int32, Range<UInt16>, (Int8, Unit, Float32, Float32, UInt32))) = ((), ((UInt64(UInt64(236))&127)..(UInt64(UInt64(229))&127):((-35)|1)), ((Int8(Int8(115)), (), Float32(Float32(56.0)), Float32(Float32(-105.0)), UInt32(Int32(42))), Int16(Int8(-17)), UInt64(145), UInt32(49)), ((UInt16(UInt16(UInt16(UInt16(105))))&127)..(UInt16(UInt16(171))&127):((103|1))), UInt16(27), (((Int16(Int16(-62))&127)..(Int16(Int16(-92))&127):((-125)|1)), Float32(26.0), Int32(-52), Int32(80), ((UInt16(UInt16(178))&127)..(UInt16(UInt16(138))&127):(1|1)), (Int8(Int8(-99)), (), Float32(Float32(59.0)), Float32(Float32(4.0)), UInt32(Int32(83)))))
public let var_1687032556091_548 : (Class_1687032556091_59, (Range<Int16>, Float32, Int32, Int32, Range<UInt16>, (Int8, Unit, Float32, Float32, UInt32))) = (Class_1687032556091_59(), (((Int16(Int16(113))&127)..(Int16(Int16(-102))&127):(92|1)), Float32(Float32(6.0)), Int32(-80), Int32(UInt32(238)), ((UInt16(UInt16(Int8(-7)))&127)..(UInt16(UInt16(203))&127):(((-74)|1))), (Int8(39), (), Float32(-112.0), Float32(Float32(-76.0)), UInt32(UInt8(166)))))
public var var_1687032556091_577 : Option<Bool> = Option<Bool>.None
var var_1687032556091_592 : Option<UInt32> = (Int8(Int8(-13)) as UInt32)
public var var_1687032556091_626 : UInt8 = UInt8(UInt8(Int8(UInt8(UInt8(13)))))
var var_1687032556091_634 : Bool = false



public interface Interface_1687032556091_62<T0> {

}

public open class Class_1687032556091_59 <: Interface_1687032556091_62<Unit> {
    init() { // block id: 61

    }
;
    static mut prop var_1687032556091_122 : Bool { // block id: 123
        get() { // block id: 125
            false
        }

        set(Value) { // block id: 129
            true;
            (Int8(Int8(UInt8(11))), (), Float32(116.0), Float32(Float32(-17.0)), UInt32(174));
            ()
        }

    };
    mut prop var_1687032556091_397 : (Range<Int16>, Float32, Int32, Int32, Range<UInt16>, (Int8, Unit, Float32, Float32, UInt32)) { // block id: 398
        get() { // block id: 400
            true;
            ###"} 7|'bEp>F"###;
            (((Int16(Int16(79))&127)..=(Int16(Int16(102))&127):(1|1)), Float32(Float32(-19.0)), Int32(Int16(UInt16(73))), Int32(UInt32(UInt8(55))), ((UInt16(UInt16(Int8(86)))&127)..(UInt16(UInt16(Int8(-128)))&127):((Int64(Int16(-36))|1))), (Int8(11), (), Float32(-104.0), Float32(-112.0), UInt32(UInt32(69))));
            var_1687032556091_689
        }

        set(Value) { // block id: 429
            (Int8(UInt8(108)), (), Float32(Float32(Float32(-11.0))), Float32(Float32(Float32(60.0))), UInt32(UInt16(111)));
            Option<UInt8>.None;
            ();
            var_1687032556091_689 = Value
        }

    };
    let var_1687032556091_598 : ??UInt8 = Option<Option<UInt8>>.None;
    public static prop var_1687032556091_683 : Int8 { // block id: 684
        get() { // block id: 686
            Int8(71)
        }

    };
    mut prop var_1687032556091_689 : (Range<Int16>, Float32, Int32, Int32, Range<UInt16>, (Int8, Unit, Float32, Float32, UInt32)) { // block id: 690
        get() { // block id: 692
            (((Int16(Int16(-123))&127)..(Int16(Int16(25))&127):(36|1)), Float32(Float32(-78.0)), Int32(-91), Int32(89), ((UInt16(UInt16(36))&127)..=(UInt16(UInt16(62))&127):((61|1))), (Int8(Int8(-29)), (), Float32(16.0), Float32(Float32(8.0)), UInt32(105)))
        }

        set(Value) { // block id: 713
            UInt16(93);
            ()
        }

    }
}






func func_1687032556091_64(namedParam_1687032556091_65 ! : Bool, optionalParam_1687032556091_66 ! : UInt32 = UInt32(Int8(Int8(UInt8(Int8(-74)))))) : Class_1687032556091_59 { // block id: 72
    Class_1687032556091_59.func_1687032556091_78<UInt32>()[1];
    let var_1687032556091_463 : (UInt16, Int16, (Int8, Unit, Float32, Float32, UInt32), Bool, UInt32, Bool, String) = (UInt16(Int8(Int8(-39))), Int16(Int8(119)), (Int8(Int8(104)), (), Float32(115.0), Float32(Float32(-21.0)), UInt32(Int32(UInt8(24)))), false, UInt32(224), (((Int16(Int16(UInt16(72)))&127)..=(Int16(Int16(43))&127):((Int64(Int8(35))|1))) is Option<UInt8>), """
<h5d2
g6=xl
""");
    (Int8(-100), Class_1687032556091_59.func_1687032556091_186(), var_1687032556091_394.var_1687032556091_397[1], if ((UInt64(197) is Interface_1687032556091_62<Unit>)) { // block id: 448
        Float32(71.0) + Float32(-49.0)
    } else { // block id: 452
        var_1687032556091_193 & UInt16(38);
        if (false) { ((UInt16(UInt16(134))&127)..=(UInt16(UInt16(172))&127):((-12)|1)) } else { ((UInt16(UInt16(97))&127)..(UInt16(UInt16(191))&127):((-34)|1)) } ;
        var_1687032556091_326
    }, var_1687032556091_463[4]);
    ((var_1687032556091_500[2] as Class_1687032556091_59) ?? try { // block id: 546
        var_1687032556091_548
    } catch (e: Exception) { // block id: 571
        Option<String>.None;
        var_1687032556091_548
    }[0])
}


func func_1687032556091_55<T0, T1>(param_1687032556091_56 : Option<UInt8>) : Option<UInt8> { // block id: 57
    var var_1687032556091_580 : Bool = ((Float32(Float32(Float32(117.0))) as UInt8) is (Range<Int16>, Float32, Int32, Int32, Range<UInt16>, (Int8, Unit, Float32, Float32, UInt32)));
    func_1687032556091_64(namedParam_1687032556091_65 : (var_1687032556091_577 ?? var_1687032556091_580), optionalParam_1687032556091_66 : (var_1687032556091_592 ?? var_1687032556091_109)).var_1687032556091_598;
    var_1687032556091_291
}

public func func_1687032556091_9(param_1687032556091_10 : Int8) : Int64 { // block id: 11
    var var_1687032556091_39 : Float64 = Float64(Float32(Float32(Float32(Float32(-71.0)))));
    var var_1687032556091_602 : (Option<UInt8>) -> Option<UInt8> = func_1687032556091_55<Option<Option<UInt8>>, UInt64>;
    ((try { // block id: 23
        UInt16(143);
        var var_1687032556091_28 : UInt32 = UInt32(UInt16(13));
        UInt32(33) % ((var_1687032556091_28) | 1);
        var_1687032556091_32
    } catch (e: Exception) { // block id: 36
        var_1687032556091_39 += var_1687032556091_39;
        ();
        var_1687032556091_32
    } ?? Option<UInt8>.None) ?? ((Option<UInt8>.None|>var_1687032556091_602) ?? try { // block id: 606
        Option<Class_1687032556091_59>.Some(Class_1687032556091_59());
        let var_1687032556091_611 : Bool = true;
        (var_1687032556091_611, var_1687032556091_109, UInt8(126), Int8(-62), false);
        UInt8(176)
    } catch (_) { // block id: 618
        Class_1687032556091_59();
        var_1687032556091_386;
        UInt8(188)
    }));
    var loopTimeVar_1687032556091_640 : Int64 = 0;
    while ((if ((var_1687032556091_626 is Unit)) { // block id: 632
        var_1687032556091_634
    } else { // block id: 636
        var_1687032556091_634
    }) && loopTimeVar_1687032556091_640 < 100 ) {
        loopTimeVar_1687032556091_640++;

    };
    var var_1687032556091_649 : Int64 = (-119);
    try { // block id: 642
        if (var_1687032556091_634) { // block id: 645
            var_1687032556091_386;
            var_1687032556091_649 %= ((72) | 1);
            var_1687032556091_649 >> ((var_1687032556091_649) & 7)
        } else if (var_1687032556091_634) { // block id: 656
            var_1687032556091_649 -= (-22);
            ((Int64(var_1687032556091_649)&127)..=(Int64(66)&127):((107|1)));
            60
        } else { // block id: 665
            (var_1687032556091_236, var_1687032556091_386, Float32(82.0), Float32(68.0), var_1687032556091_109);
            var_1687032556091_649 >> ((var_1687032556091_649) & 7)
        }
    } finally { // block id: 675
        var_1687032556091_649
    }
}

main(): Int64 {
    try {
        ###"Bf)Z.t4l4]"###;
        ();
        let var_1687032556091_678 : (Int8) -> Int64 = func_1687032556091_9;
        Class_1687032556091_59.var_1687032556091_683|>var_1687032556091_678
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1687032556091_143*var_1687032556091_143), 64)
        crccheck.updateBuffer(UInt64(var_1687032556091_193*var_1687032556091_193), 64)
        crccheck.updateBuffer(UInt64(var_1687032556091_236*var_1687032556091_236), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1687032556091_59 {
    static func func_1687032556091_186() : Unit { // block id: 187
        func func_1687032556091_258(optionalParam_1687032556091_259 ! : UInt8 = UInt8(65), optionalParam_1687032556091_261 ! : (UInt16, Int16, (Int8, Unit, Float32, Float32, UInt32), Bool, UInt32, Bool, String) = (UInt16(Int8(Int8(78))), Int16(UInt8(123)), (Int8(19), (), Float32(Float32(69.0)), Float32(-90.0), UInt32(94)), (Int64(UInt64(Int16(-69))) is (Int8, Unit, Float32, Float32, UInt32)), UInt32(Int32(0)), ((Option<Option<UInt8>>.Some(Option<UInt8>.None) as UInt8) is Option<Int16>), "56ZK/m+E>}")) : Option<UInt8> { // block id: 286
            (try { // block id: 289
                var_1687032556091_291
            } finally { // block id: 309
                ();
                Option<UInt8>.Some(UInt8(179))
            } as String);
            let var_1687032556091_314 : ?UInt8 = (UInt8(Int8(88)) as UInt8);
            var_1687032556091_314
        }
;
        if (((var_1687032556091_193, Int16(122), var_1687032556091_96, false, UInt32(164), false, var_1687032556091_201)[4] is () -> (Int8, Unit, Float32, Float32, UInt32))) { // block id: 204
            var loopTimeVar_1687032556091_210 : Int64 = 0;
            do {
                loopTimeVar_1687032556091_210++;
                ()
            } while ((false) && loopTimeVar_1687032556091_210 < 100 ) ;
            let var_1687032556091_214 : Int64 = 80;
            84.0 ** var_1687032556091_214
        } else if (try { // block id: 219
            var var_1687032556091_222 : UInt8 = UInt8(Int8(UInt8(Int8(38))));
            var_1687032556091_222 ^= UInt8(201);
            let var_1687032556091_229 : Unit = ();
            var_1687032556091_229;
            (false, UInt32(239), UInt8(222), var_1687032556091_236, false)
        } finally { // block id: 242
            ();
            var_1687032556091_245
        }[0]) { // block id: 256
            func_1687032556091_258(optionalParam_1687032556091_259 : UInt8(192), optionalParam_1687032556091_261 : (var_1687032556091_193, var_1687032556091_143, (Int8(-95), (), var_1687032556091_326, Float32(-113.0), UInt32(124)), var_1687032556091_122, var_1687032556091_109, var_1687032556091_122, ";V]I<bSdcq"));
            var_1687032556091_201;
            var_1687032556091_349[8]
        } else { // block id: 367
            (var_1687032556091_374 ?? var_1687032556091_386);
            74.0
        };
        ()
    }
;
    static func func_1687032556091_78<T0>() : (Int8, Unit, Float32, Float32, UInt32) { // block id: 79
        var var_1687032556091_158 : ?String = ((UInt16(36), Int16(UInt16(UInt16(29))), (Int8(Int8(-127)), (), Float32(3.0), Float32(Float32(58.0)), UInt32(37)), (() is Interface_1687032556091_62<Unit>), UInt32(157), true, "VRuRia{}of'") as String);
        (UInt16(Int16(-70)), (Option<Int16>.None ?? Int16(-107)), (var_1687032556091_96, Int16(73), UInt64(28), var_1687032556091_109)[0], (Option<Bool>.Some(false) ?? var_1687032556091_122), UInt32(var_1687032556091_143), try { // block id: 147
            false
        } finally { // block id: 149
            ();
            var_1687032556091_122
        }, (var_1687032556091_158 ?? "BmWoJ$:X+="))[2]
    }

}

