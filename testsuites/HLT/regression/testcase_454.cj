/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1692391324145_70 : UInt32 = UInt32(Int32(16))
var var_1692391324145_96 : Bool = (Float64(Float32(Float32(44.0))) is Int16)
var var_1692391324145_118 : Int16 = Int16(-24)
var var_1692391324145_207 : UInt8 = UInt8(165)
let var_1692391324145_213 : UInt16 = UInt16(Int8(Int8(61)))
public let var_1692391324145_222 : Unit = ()
var var_1692391324145_237 : Float32 = Float32(-92.0)
let var_1692391324145_244 : String = "=XqW?k?<+b"
public let var_1692391324145_295 : Option<Unit> = (Struct_1692391324145_146() as Unit)
var var_1692391324145_311 : Class_1692391324145_24 = Class_1692391324145_24()
public let var_1692391324145_333 : Class_1692391324145_24 = Class_1692391324145_24()
public var var_1692391324145_400 : (UInt32, UInt32, Int16, Option<Class_1692391324145_24>) = (UInt32(Int8(Int8(Int8(-26)))), UInt32(248), Int16(Int8(73)), Option<Class_1692391324145_24>.None)
var var_1692391324145_411 : Range<Int8> = ((Int8(Int8(92))&127)..=(Int8(Int8(Int8(-24)))&127):(Int64(Int32(-11))|1))
public var var_1692391324145_430 : Option<Class_1692391324145_24> = Option<Class_1692391324145_24>.None
public var var_1692391324145_440 : Struct_1692391324145_436<Unit, Int8, Option<UInt32>> = Struct_1692391324145_436<Unit, Int8, Option<UInt32>>()
public const var_1692391324145_535 : Float32 = -52.0
var var_1692391324145_553 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1692391324145_582 : UInt = UInt64(254)
public let var_1692391324145_751 : UInt64 = UInt64(Int8(-69))
public var var_1692391324145_887 : Option<UInt32> = (Int16(Int16(UInt8(UInt8(187)))) as UInt32)
public let var_1692391324145_1001 : ?Int16 = Option<Int16>.None
let var_1692391324145_1052 : UInt16 = UInt16(106)
public open class Class_1692391324145_24 {
    init() { // block id: 26

    }
;
    mut prop var_1692391324145_314 : UInt { // block id: 315
        get() { // block id: 317
            ();
            UInt64(42)
        }

        set(Value) { // block id: 322
            Int16(-95);
            ()
        }

    };
    public let var_1692391324145_336 : Range<Int32> = ((Int32(Int32(-109))&127)..(Int32(Int32(19))&127):(Int64(-82)|1));
    public static const var_1692391324145_344 : String = """
ss5/K
V$C#I
""";
    public let var_1692391324145_614 : UInt32 = UInt32(128);
    private prop var_1692391324145_667 : (VArray<Unit, $6>, Bool, (Int8, String, Float32), (Rune, Float64, UInt32, UInt8), Range<Int64>) { // block id: 668
        get() { // block id: 670
            (VArray<Unit, $6>({ i => ()}), (Struct_1692391324145_146() is Option<Option<Unit>>), (Int8(86), "/Q~/i*8p\"p", Float32(Float32(-125.0))), (r'7', Float64(-11.0), UInt32(UInt8(238)), UInt8(Int8(-110))), ((Int64(Int64(Int16(126)))&127)..=(Int64(Int64(66))&127):(Int64(Int16(97))|1)))
        }

    };
    public func func_1692391324145_648(param_1692391324145_649 : Int16, optionalParam_1692391324145_650 ! : (Float32) -> UInt16 = func_1692391324145_226, namedParam_1692391324145_654 ! : (Range<UInt16>, UInt16, Unit, String, Unit, UInt64, Unit, Range<Int32>, String)) : Bool { // block id: 655
        var var_1692391324145_657 : Range<Int64> = ((Int64(Int64(Int64(-66)))&127)..=(Int64(Int64(-16))&127):(Int64(-99)|1));
        var_1692391324145_657;
        var loopTimeVar_1692391324145_702 : Int64 = 0;
        while ((var_1692391324145_667[1]) && loopTimeVar_1692391324145_702 < 100 ) {
            loopTimeVar_1692391324145_702++;

        };
        var var_1692391324145_707 : ?Unit = (r'h' as Unit);
        try { // block id: 704
            match (var_1692391324145_707) {
                case _ => 
                    [UInt64(109), UInt64(118), UInt64(155), UInt64(238), UInt64(134), UInt64(179), UInt64(15), UInt64(109), UInt64(14), UInt64(14)];
                    false
                
            }
        } catch (_) { // block id: 714
            var_1692391324145_96
        }
    }
;
    mut prop var_1692391324145_767 : Array<Unit> { // block id: 768
        get() { // block id: 770
            [(), (), (), (), (), (), (), (), (), ()];
            var_1692391324145_1080
        }

        set(Value) { // block id: 774
            ();
            ();
            ();
            var_1692391324145_1080 = Value
        }

    };
    private static mut prop var_1692391324145_795 : ((Int16, UInt16, Option<Array<Struct_1692391324145_146>>, (Rune, Float64, UInt32, UInt8), Range<UInt8>, Float64), (Range<UInt16>, UInt16, Unit, String, Unit, UInt64, Unit, Range<Int32>, String)) { // block id: 796
        get() { // block id: 798
            ();
            ((Int16(70), UInt16(64), Option<Array<Struct_1692391324145_146>>.None, (r'N', Float64(55.0), UInt32(3), UInt8(18)), ((UInt8(UInt8(11))&127)..=(UInt8(UInt8(138))&127):(Int64(13)|1)), Float64(Float64(32.0))), (((UInt16(UInt16(32))&127)..=(UInt16(UInt16(188))&127):(Int64(-80)|1)), UInt16(187), (), """
\"] 'i
r#N*^
""", (), UInt64(61), (), ((Int32(Int32(91))&127)..(Int32(Int32(100))&127):(Int64(-115)|1)), "iQc\"Qqc5Bi"))
        }

        set(Value) { // block id: 831
            (Int16(125), UInt16(26), Option<Array<Struct_1692391324145_146>>.None, (r's', Float64(77.0), UInt32(149), UInt8(74)), ((UInt8(UInt8(80))&127)..=(UInt8(UInt8(250))&127):(Int64(81)|1)), Float64(Float32(Float32(-84.0))));
            ()
        }

    };
    public static func func_1692391324145_787(namedParam_1692391324145_788 ! : Array<UInt64>) : Option<Array<Struct_1692391324145_146>> { // block id: 789
        var_1692391324145_795[0][2]
    }
;
    func func_1692391324145_150(param_1692391324145_151 : (Int8, String, Float32), optionalParam_1692391324145_152 ! : Option<UInt32> = (("""
%SAD?
).ew}
""" is UInt8) as UInt32), namedParam_1692391324145_156 ! : UInt8, namedParam_1692391324145_157 ! : Int32) : Struct_1692391324145_146 { // block id: 158
        let var_1692391324145_160 : UInt16 = UInt16(UInt8(57));
        var_1692391324145_160;
        ((Option<Option<Class_1692391324145_24>>.Some(Option<Class_1692391324145_24>.None) ?? var_1692391324145_430)|>func_1692391324145_175)[5]
    }
;
    var var_1692391324145_974 : (UInt32, Range<Int32>, (Rune, Float64, UInt32, UInt8)) = (UInt32(59), ((Int32(Int32(-118))&127)..(Int32(Int32(-31))&127):(Int64(-77)|1)), (r'b', Float64(0.0), UInt32(190), UInt8(115)));
    prop var_1692391324145_1009 : Int64 { // block id: 1010
        get() { // block id: 1012
            Int64(Int32(UInt16(100)))
        }

    };
    public func func_1692391324145_135(namedParam_1692391324145_136 ! : UInt16, namedParam_1692391324145_137 ! : UInt16, namedParam_1692391324145_138 ! : UInt32, optionalParam_1692391324145_139 ! : UInt32 = UInt32(Int8(66))) : Int16 { // block id: 142
        func_1692391324145_150((Int8(18), var_1692391324145_344, var_1692391324145_535), optionalParam_1692391324145_152 : var_1692391324145_887, namedParam_1692391324145_156 : UInt8(129), namedParam_1692391324145_157 : Int32(76)).func_1692391324145_896(var_1692391324145_70, var_1692391324145_440, Option<Int16>.None)[0];
        let var_1692391324145_966 : Class_1692391324145_962<Int32> = Class_1692391324145_962<Int32>();
        var_1692391324145_966.var_1692391324145_969;
        if ((var_1692391324145_974 is Range<Int8>)) { // block id: 983
            var loopTimeVar_1692391324145_988 : Range<UInt64> = ((UInt64(UInt64(101))&127)..(UInt64(UInt64(7))&127):(Int64(Int16(UInt16(40)))|1));
            for (i in loopTimeVar_1692391324145_988 where true) {
                UInt16(103)
            };
            (var_1692391324145_1001 ?? Int16(-128))
        } else if (match (((UInt8(UInt8(208))&127)..=(UInt8(UInt8(151))&127):(var_1692391324145_1009|1))) {
            case _ : Option<UInt32> => 
                var_1692391324145_222;
                var_1692391324145_96
            
            case _ => 
                true && var_1692391324145_96
            
        }) { // block id: 1026
            Int16(-52) << ((var_1692391324145_118) & 7)
        } else { // block id: 1030
            var loopTimeVar_1692391324145_1039 : Int = 0;
            while ((var_1692391324145_96) && loopTimeVar_1692391324145_1039 < 100 ) {
                loopTimeVar_1692391324145_1039++;
                ((UInt8(var_1692391324145_207)&127)..=(UInt8(var_1692391324145_207)&127):(var_1692391324145_1009|1))
            };
            var var_1692391324145_1043 : VArray<Int16, $1> = [Int16(Int8(47))];
            var_1692391324145_1043[0]
        }
    }
;
    var var_1692391324145_1080 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
    static init() {
    }
}





public struct Struct_1692391324145_146 {
    init() { // block id: 148

    }
;
    private static mut prop var_1692391324145_939 : Range<Int64> { // block id: 940
        get() { // block id: 942
            ((Int64(Int64(89))&127)..=(Int64(Int64(-105))&127):(Int64(Int16(-37))|1))
        }

        set(Value) { // block id: 950
            ();
            ();
            ()
        }

    };
    public func func_1692391324145_896(param_1692391324145_897 : UInt32, param_1692391324145_898 : Struct_1692391324145_436<Unit, Int8, Option<UInt32>>, param_1692391324145_899 : Option<Int16>) : (Rune, Float64, UInt32, UInt8) { // block id: 900
        var var_1692391324145_915 : Int64 = Int64(UInt16(Int8(Int8(Int8(-105)))));
        var var_1692391324145_924 : (UInt32, Range<Int32>, (Rune, Float64, UInt32, UInt8)) = (UInt32(UInt16(17)), ((Int32(Int32(-21))&127)..(Int32(Int32(-123))&127):(Int64(-42)|1)), (r'8', Float64(Float64(Float64(-93.0))), UInt32(175), UInt8(Int8(91))));
        ("""
2F1@\\
fOUQp
""", UInt32(98), (r'n', Float64(95.0), var_1692391324145_70, var_1692391324145_207), ((Int64(var_1692391324145_915)&127)..=(Int64(Int64(-35))&127):(Int64(-11)|1)), var_1692391324145_924, var_1692391324145_118, var_1692391324145_939, UInt8(147))[4][2]
    }

}

const func func_1692391324145_226(param_1692391324145_227 : Float32) : UInt16 { // block id: 228
    -50;
    const var_1692391324145_231 : UInt16 = 143;
    var_1692391324145_231
}



public func func_1692391324145_247<T0, T1>(param_1692391324145_248 : UInt16) : Unit { // block id: 249
    var var_1692391324145_261 : ?Bool = (UInt8(158) as Bool);
    var loopTimeVar_1692391324145_281 : Range<UInt64> = ((UInt64(UInt64(86))&127)..(UInt64(UInt64(6))&127):(Int64(Int32(UInt8(UInt8(187))))|1));
    for (i in loopTimeVar_1692391324145_281 where (if (var_1692391324145_96) { Option<Bool>.Some(var_1692391324145_96) } else { var_1692391324145_261 }  ?? match (Option<Class_1692391324145_24>.None) {
        case _ => 
            var_1692391324145_222;
            !var_1692391324145_96
        
        case _ : Array<Struct_1692391324145_146> => 
            ();
            var_1692391324145_96
        
        case _ => 
            true
        
    })) {

    };
    var loopTimeVar_1692391324145_304 : Int = 0;
    (var_1692391324145_295 ?? while ((var_1692391324145_96) && loopTimeVar_1692391324145_304 < 100 ) {
        loopTimeVar_1692391324145_304++;
        var_1692391324145_222;
        var_1692391324145_222
    })
}


public struct Struct_1692391324145_436<T0, T1, T2> {
    init() { // block id: 438

    }
;
    public var var_1692391324145_443 : Unit = ()
}



public func func_1692391324145_192<T0>(param_1692391324145_193 : Option<Class_1692391324145_24>) : Array<Unit> { // block id: 194
    let var_1692391324145_234 : (Float32) -> UInt16 = func_1692391324145_226;
    let var_1692391324145_306 : (UInt16) -> Unit = func_1692391324145_247<String, Option<Option<Class_1692391324145_24>>>;
    let var_1692391324145_328 : Unit = ();
    (match (Option<Option<Class_1692391324145_24>>.None) {
        case caseVar_1692391324145_202 : (Int8, String, Float32) => 
            ();
            var_1692391324145_207 = var_1692391324145_207;
            ((UInt16(UInt16(243))&127)..=(UInt16(var_1692391324145_213)&127):(Int64(-124)|1))
        
        case _ => 
            [(), (), (), (), (), (), (), (), (), ()];
            var_1692391324145_222;
            ((UInt16(UInt16(152))&127)..(UInt16(UInt16(99))&127):(Int64(37)|1))
        
    }, (var_1692391324145_237|>var_1692391324145_234), (), if (var_1692391324145_96) { "H(7cM'^g)u" } else { var_1692391324145_244 } , (UInt16(203)|>var_1692391324145_306), var_1692391324145_311.var_1692391324145_314, (Option<Unit>.Some(var_1692391324145_328) ?? ()), var_1692391324145_333.var_1692391324145_336, Class_1692391324145_24.var_1692391324145_344)[4];
    var var_1692391324145_361 : ?Bool = Option<Bool>.None;
    var var_1692391324145_367 : UInt16 = UInt16(165);
    if (false) { // block id: 350
        var_1692391324145_118 /= ((Int16(44)) | 1);
        if (true) { "XUl5-*#AYj" } else { var_1692391324145_244 } ;
        [(), (), (), (), (), (), (), (), (), ()]
    } else if ((var_1692391324145_361 ?? var_1692391324145_96)) { // block id: 364
        var_1692391324145_367 |= var_1692391324145_213;
        [(), var_1692391324145_328, (), (), var_1692391324145_328, (), var_1692391324145_222, (), var_1692391324145_328, var_1692391324145_328]
    } else { // block id: 381
        [(), (), (), (), (), (), (), (), (), ()]
    }[8];
    var var_1692391324145_392 : Option<Option<Unit>> = Option<Option<Unit>>.Some(Option<Unit>.None);
    var var_1692391324145_479 : Int8 = Int8(-89);
    var loopTimeVar_1692391324145_524 : Int = 0;
    var loopTimeVar_1692391324145_544 : Int = 0;
    const var_1692391324145_574 : UInt64 = 38;
    [((var_1692391324145_392 ?? Option<Unit>.Some(())) ?? try { // block id: 398
        var_1692391324145_400;
        var_1692391324145_411;
        ()
    } finally { // block id: 419
        var_1692391324145_118 /= ((var_1692391324145_118) | 1)
    }), try { // block id: 424
        (UInt32(136), var_1692391324145_70, var_1692391324145_118, var_1692391324145_430);
        var_1692391324145_222
    } finally { // block id: 433
        var_1692391324145_328
    }, var_1692391324145_440.var_1692391324145_443, (Option<Unit>.None ?? VArray<Unit, $6>({ i => ()})[5]), match (Option<UInt32>.Some(var_1692391324145_70)) {
        case caseVar_1692391324145_466 : Option<Unit> => 
            var_1692391324145_328
        
        case caseVar_1692391324145_471 => 
            if (var_1692391324145_96) { var_1692391324145_361 } else { var_1692391324145_361 } ;
            var_1692391324145_479 &= var_1692391324145_479
        
        case _ : Option<Option<Class_1692391324145_24>> => 
            let var_1692391324145_486 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            var_1692391324145_486;
            var var_1692391324145_500 : Float32 = Float32(79.0);
            var_1692391324145_500 /= Float32((Int32(Float32(64.0))) | 1)
        
        case caseVar_1692391324145_505 : (Int8, String, Float32) => 
            (r'i', Float64(-61.0), UInt32(176), UInt8(158));
            var_1692391324145_222;
            ()
        
        case _ => 
            var_1692391324145_328
        
    }, do {
        loopTimeVar_1692391324145_524++;
        Option<Option<Unit>>.None;
        ()
    } while (((var_1692391324145_213 is VArray<Unit, $6>)) && loopTimeVar_1692391324145_524 < 100 ) , do {
        loopTimeVar_1692391324145_544++;

    } while ((if (true) { // block id: 528
        var_1692391324145_96 ||= var_1692391324145_96;
        Float32(12.0) != var_1692391324145_535
    } else { // block id: 537
        Option<Option<Class_1692391324145_24>>.None;
        var_1692391324145_118 < Int16(-33)
    }) && loopTimeVar_1692391324145_544 < 100 ) , (Option<Array<Unit>>.None ?? var_1692391324145_553)[4], (((UInt16(UInt16(110))&127)..=(UInt16(UInt16(31))&127):(Int64(-3)|1)), var_1692391324145_367, (), var_1692391324145_244, var_1692391324145_222, var_1692391324145_574, (), ((Int32(Int32(62))&127)..=(Int32(Int32(45))&127):(Int64(109)|1)), "/-6fSgYm2W")[2], (var_1692391324145_582 += UInt64(var_1692391324145_479))]
}

public open class Class_1692391324145_617<T0, T1> {
    init() { // block id: 619

    }
;
    public static mut prop var_1692391324145_622 : Class_1692391324145_24 { // block id: 623
        get() { // block id: 625
            Class_1692391324145_24()
        }

        set(Value) { // block id: 629
            ();
            ()
        }

    };
    public init(namedParam_1692391324145_643 ! : Option<Option<Unit>>) { // block id: 644
        var var_1692391324145_722 : ?Int16 = (((Int64(Int64(-121))&127)..=(Int64(Int64(60))&127):(Int64(UInt64(UInt8(59)))|1)) as Int16);
        var var_1692391324145_733 : Range<UInt16> = ((UInt16(UInt16(Int8(UInt8(130))))&127)..=(UInt16(UInt16(UInt16(UInt8(Int8(-93)))))&127):(Int64(Int32(Int32(UInt32(146))))|1));
        var_1692391324145_333.func_1692391324145_648((var_1692391324145_722 ?? Int16(43)), namedParam_1692391324145_654 : (var_1692391324145_733, var_1692391324145_213, (), "Q_n'Mr;Ic\\", (), var_1692391324145_751, var_1692391324145_222, ((Int32(Int32(88))&127)..(Int32(Int32(-6))&127):(Int64(-79)|1)), "ErmKbK *zj"));
        ()
    }
;
    let var_1692391324145_761 : Class_1692391324145_24 = Class_1692391324145_24()
}


public func func_1692391324145_183(optionalParam_1692391324145_184 ! : Int32 = Int32(Int16(110)), optionalParam_1692391324145_187 ! : Unit = (), namedParam_1692391324145_189 ! : Range<UInt32>) : Class_1692391324145_24 { // block id: 190
    (if (var_1692391324145_96) { // block id: 590
        var_1692391324145_96 ||= var_1692391324145_96;
        true && true
    } else if (true) { // block id: 598
        var_1692391324145_582 >>= ((var_1692391324145_582) & 7);
        var_1692391324145_222;
        true
    } else { // block id: 604
        ();
        !true
    } as Class_1692391324145_24)|>func_1692391324145_192<UInt32>;
    const var_1692391324145_635 : Int8 = -54;
    let var_1692391324145_640 : Class_1692391324145_617<Float64, Struct_1692391324145_436<Unit, Int8, Option<UInt32>>> = Class_1692391324145_617<Float64, Struct_1692391324145_436<Unit, Int8, Option<UInt32>>>(namedParam_1692391324145_643 : (true as Option<Unit>));
    if ((var_1692391324145_70 <= (var_1692391324145_311.var_1692391324145_614))) { (Class_1692391324145_617<Float64, Struct_1692391324145_436<Unit, Int8, Option<UInt32>>>.var_1692391324145_622) } else { (if ((var_1692391324145_635 < Int8(-13))) { (var_1692391324145_640.var_1692391324145_761) } else { var_1692391324145_333 } ) } 
}


func func_1692391324145_175(param_1692391324145_176 : Option<Class_1692391324145_24>) : Array<Struct_1692391324145_146> { // block id: 177
    ();
    func_1692391324145_183(optionalParam_1692391324145_184 : Int32(-14), namedParam_1692391324145_189 : ((UInt32(UInt32(21))&127)..=(UInt32(UInt32(7))&127):(Int64(-80)|1))).var_1692391324145_767[4];
    let var_1692391324145_850 : UInt64 = UInt64(81);
    let var_1692391324145_860 : UInt = UInt64(108);
    let var_1692391324145_864 : Array<Struct_1692391324145_146> = [Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146(), Struct_1692391324145_146()];
    (Class_1692391324145_24.func_1692391324145_787(namedParam_1692391324145_788 : [var_1692391324145_850, UInt64(232), UInt64(69), UInt64(96), var_1692391324145_582, UInt64(106), UInt64(6), UInt64(65), var_1692391324145_860, var_1692391324145_860]) ?? var_1692391324145_864)
}

public open class Class_1692391324145_962<T0> {
    init() { // block id: 964

    }
;
    let var_1692391324145_969 : Int16 = Int16(-21)
    static init() {
    }
}


public func func_1692391324145_20(param_1692391324145_21 : Rune) : Unit { // block id: 22
    let var_1692391324145_77 : Class_1692391324145_24 = Class_1692391324145_24();
    let var_1692391324145_88 : Option<Class_1692391324145_24> = (Int16(UInt8(110)) as Class_1692391324145_24);
    func func_1692391324145_28<T0, T1>(param_1692391324145_29 : Int64, param_1692391324145_30 : UInt32, param_1692391324145_31 : UInt32, optionalParam_1692391324145_32 ! : UInt16 = UInt16(Int8(-66))) : Class_1692391324145_24 { // block id: 35
        let var_1692391324145_50 : (UInt32, UInt32, Int16, Option<Class_1692391324145_24>) = (UInt32(31), UInt32(142), Int16(Int16(-32)), Option<Class_1692391324145_24>.Some(Class_1692391324145_24()));
        var var_1692391324145_61 : Int = Int64(Int32(Int32(UInt16(Int8(-32)))));
        const var_1692391324145_108 : Unit = ();
        (try { // block id: 44
            Float64(60.0);
            var var_1692391324145_47 : Unit = ();
            var_1692391324145_47;
            var_1692391324145_50
        } finally { // block id: 58
            var_1692391324145_61 >>= ((Int64(-86)) & 7);
            (var_1692391324145_70, UInt32(200), Int16(63), Option<Class_1692391324145_24>.Some(var_1692391324145_77))
        }[3] ?? ((Option<Option<Class_1692391324145_24>>.Some(var_1692391324145_88) ?? Option<Class_1692391324145_24>.Some(Class_1692391324145_24())) ?? if (var_1692391324145_96) { // block id: 101
            if (true) { var_1692391324145_77 } else { Class_1692391324145_24() } 
        } else { // block id: 106
            var_1692391324145_108;
            if (var_1692391324145_96) { Class_1692391324145_24() } else { var_1692391324145_77 } 
        }))
    }
;
    func_1692391324145_28<Int16, Int32>(Int64(-22), UInt32(var_1692391324145_118), (Option<UInt32>.None ?? UInt32(108)), optionalParam_1692391324145_32 : (Option<UInt16>.None ?? UInt16(238))).func_1692391324145_135(namedParam_1692391324145_136 : var_1692391324145_213, namedParam_1692391324145_137 : (Option<UInt16>.Some(var_1692391324145_1052) ?? var_1692391324145_213), namedParam_1692391324145_138 : UInt32(219), optionalParam_1692391324145_139 : UInt32(var_1692391324145_118));
    var_1692391324145_222
}

main(): Int64 {
    try {
        let var_1692391324145_8 : (Int8, String, Float32) = (Int8(Int8(Int8(-107))), "Ni6A+$Y.Ae", Float32(Float32(Float32(Float32(34.0)))));
        var_1692391324145_8[0];
        var var_1692391324145_1064 : Rune = r'w';
        [var_1692391324145_1064, r'j', var_1692391324145_1064, r'7', var_1692391324145_1064, var_1692391324145_1064, var_1692391324145_1064, r'N', r'q', r'd'][1]|>func_1692391324145_20;
        [Int64(-69), Int64(14), Int64(8), Int64(-26), Int64(-93), Int64(2), Int64(3), Int64(87), Int64(-28), Int64(-112)][6]
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1692391324145_70*var_1692391324145_70), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_118*var_1692391324145_118), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_207*var_1692391324145_207), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_213*var_1692391324145_213), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_582*var_1692391324145_582), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_751*var_1692391324145_751), 64)
        crccheck.updateBuffer(UInt64(var_1692391324145_1052*var_1692391324145_1052), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
        if ( res == "2003317211716222463276236120671507" ){
            return 0
        }
        return 1
    }
}
