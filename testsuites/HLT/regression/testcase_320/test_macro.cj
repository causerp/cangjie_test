/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// DEPENDENCE: test_macro_definition.cj
// EXEC: %compiler %cmp_macro test_macro_definition.cj
// ERRCHECK: %run_macro %compiler %cmp_opt %f -o %output

import define.*
@echo public let var_1686173962304_55 : Int16 = Int16(UInt8(Int8(UInt8(Int8(-10)))))
@echo public var var_1686173962304_63 : Rune = r'g'
@echo var var_1686173962304_79 : Class_1686173962304_70 = Class_1686173962304_70()
@echo public var var_1686173962304_102 : UInt8 = UInt8(167)
@echo let var_1686173962304_176 : UInt64 = UInt64(Int64(UInt8(Int8(-113))))
@echo var var_1686173962304_183 : Unit = ()
@echo var var_1686173962304_228 : Range<UInt8> = ((UInt8(UInt8(130))&127)..(UInt8(UInt8(60))&127):((-100)|1))
@echo public var var_1686173962304_234 : Bool = false
@echo var var_1686173962304_444 : ?Int16 = Option<Int16>.None
@echo public var var_1686173962304_487 : Float32 = Float32(-85.0)
@echo var var_1686173962304_560 : Range<Int16> = ((Int16(Int16(-17))&127)..=(Int16(Int16(-83))&127):((-74)|1))
@echo public var var_1686173962304_571 : Bool = false
@echo let var_1686173962304_639 : ?Range<UInt16> = Option<Range<UInt16>>.None
@echo public var var_1686173962304_646 : Int16 = Int16(59)
@echo public var var_1686173962304_658 : Int64 = (-90)
@echo public let var_1686173962304_685 : Struct_1686173962304_86 = Struct_1686173962304_86()
@echo public var var_1686173962304_700 : Range<Int64> = ((Int64(59)&127)..=(Int64(Int64(UInt64(Int32(-24))))&127):((Int64(UInt16(Int8(Int8(-15))))|1)))
@echo let var_1686173962304_822 : (Float32, Float32, Int16, Int64) = (Float32(-50.0), Float32(116.0), Int16(125), Int64(Int16(121)))
@echo public var var_1686173962304_852 : Int32 = Int32(UInt32(UInt8(138)))
@echo public var var_1686173962304_884 : Enum_1686173962304_281 = Enum_1686173962304_281.defaultValue
@echo public var var_1686173962304_899 : Range<UInt16> = ((UInt16(UInt16(141))&127)..=(UInt16(UInt16(80))&127):((-5)|1))
@echo let var_1686173962304_907 : Array<UInt64> = [UInt64(156), UInt64(201), UInt64(100), UInt64(23), UInt64(51), UInt64(143), UInt64(245), UInt64(77), UInt64(81), UInt64(50)]
@echo public var var_1686173962304_941 : Option<(UInt8, Int16, Rune, Rune)> = (((UInt16(UInt16(Int16(UInt16(69))))&127)..(UInt16(UInt16(181))&127):(((-117)|1))) as (UInt8, Int16, Rune, Rune))
@echo var var_1686173962304_1005 : (Range<UInt16>, Range<Int16>, (Range<Int16>, Range<Int64>, Array<Unit>, Int16, Int8, Bool, Unit, Int32, Range<UInt8>), Array<Unit>, Range<UInt8>) = (((UInt16(UInt16(174))&127)..=(UInt16(UInt16(254))&127):(49|1)), ((Int16(Int16(-21))&127)..=(Int16(Int16(-59))&127):(113|1)), (((Int16(Int16(Int16(114)))&127)..=(Int16(Int16(-98))&127):((Int64(UInt32(251))|1))), ((Int64((-93))&127)..=(Int64(42)&127):((-60)|1)), [(), (), (), (), (), (), (), (), (), ()], Int16(-90), Int8(UInt8(33)), ([(), (), (), (), (), (), (), (), (), ()] is Unit), (), Int32(Int32(67)), ((UInt8(UInt8(164))&127)..=(UInt8(UInt8(30))&127):((-47)|1))), [(), (), (), (), (), (), (), (), (), ()], ((UInt8(UInt8(89))&127)..=(UInt8(UInt8(UInt8(246)))&127):(((-39)|1))))
@echo public let var_1686173962304_1080 : Unit = ()
@echo public let var_1686173962304_1217 : ((Range<Int16>, Range<Int64>, Array<Unit>, Int16, Int8, Bool, Unit, Int32, Range<UInt8>), Int32, Range<UInt16>, Bool, Rune, Range<Int64>, Range<Int16>) = ((((Int16(Int16(Int16(7)))&127)..(Int16(Int16(UInt16(118)))&127):((Int64(Int8(42))|1))), ((Int64(90)&127)..=(Int64((-117))&127):((-13)|1)), [(), (), (), (), (), (), (), (), (), ()], Int16(98), Int8(107), false, (), Int32(-47), ((UInt8(UInt8(70))&127)..=(UInt8(UInt8(189))&127):((Int64(UInt64(41))|1)))), Int32(UInt8(Int8(UInt8(74)))), ((UInt16(UInt16(176))&127)..=(UInt16(UInt16(71))&127):(45|1)), (((UInt8(121), Int16(33), r'i', r'S'), ((UInt16(UInt16(1))&127)..=(UInt16(UInt16(197))&127):(((-99)|1))), [true, true, true, true, false, false, true, false, false, false], UInt64(69), Int16(-113)) is () -> UInt8), r'T', ((Int64((-1))&127)..(Int64(67)&127):(69|1)), ((Int16(Int16(115))&127)..(Int16(Int16(-44))&127):(122|1)))
@echo public var var_1686173962304_1295 : UInt64 = UInt64(UInt8(67))
@echo public let var_1686173962304_1431 : Range<Int8> = ((Int8(Int8(-120))&127)..=(Int8(Int8(UInt8(Int8(Int8(-25)))))&127):(((-7)|1)))
@echo var var_1686173962304_1458 : Range<Int16> = ((Int16(Int16(12))&127)..(Int16(Int16(Int16(27)))&127):((Int64(UInt16(UInt8(126)))|1)))
@echo public var var_1686173962304_1509 : UInt32 = UInt32(210)
@echo public let var_1686173962304_1520 : Int8 = Int8(-14)
@echo public var var_1686173962304_1530 : UInt16 = UInt16(UInt8(Int8(UInt8(UInt8(215)))))
@echo public var var_1686173962304_1538 : Int8 = Int8(Int8(Int8(-7)))
@echo public let var_1686173962304_1623 : Unit = ()
@echo public let var_1686173962304_1636 : UInt32 = UInt32(121)
@echo public var var_1686173962304_1726 : Int16 = Int16(33)

@echo sealed public interface Interface_1686173962304_76 {

}

@echo sealed public interface Interface_1686173962304_77<T0> {

}

@echo public interface Interface_1686173962304_75<T0, T1> <: Interface_1686173962304_76 & Interface_1686173962304_77<UInt8> {
    @echo func func_1686173962304_377(param_1686173962304_378 : Array<Unit>) : UInt8 { // block id: 379
        @echo var var_1686173962304_386 : Range<Int16> = ((Int16(Int16(-120))&127)..(Int16(Int16(74))&127):(104|1));
        @echo let var_1686173962304_390 : Int64 = 8;
        @echo var var_1686173962304_410 : Int32 = Int32(-35);
        UInt8((var_1686173962304_386, ((Int64(var_1686173962304_390)&127)..=(Int64(var_1686173962304_390)&127):((var_1686173962304_390|1))), [(), var_1686173962304_183, (), var_1686173962304_183, (), (), (), (), var_1686173962304_183, var_1686173962304_183], var_1686173962304_55, Int8(-18), true, (), var_1686173962304_410, ((UInt8(UInt8(162))&127)..(UInt8(UInt8(75))&127):((-103)|1)))[4]) << ((func_1686173962304_415()) & 7)
    }

}

@echo sealed public interface Interface_1686173962304_74 <: Interface_1686173962304_75<Bool, UInt16> & Interface_1686173962304_76 {
    @echo func func_1686173962304_377(param_1686173962304_378 : Array<Unit>) : UInt8 { // block id: 379
        @echo var var_1686173962304_386 : Range<Int16> = ((Int16(Int16(-120))&127)..(Int16(Int16(74))&127):(104|1));
        @echo let var_1686173962304_390 : Int64 = 8;
        @echo var var_1686173962304_410 : Int32 = Int32(-35);
        UInt8((var_1686173962304_386, ((Int64(var_1686173962304_390)&127)..=(Int64(var_1686173962304_390)&127):((var_1686173962304_390|1))), [(), var_1686173962304_183, (), var_1686173962304_183, (), (), (), (), var_1686173962304_183, var_1686173962304_183], var_1686173962304_55, Int8(-18), true, (), var_1686173962304_410, ((UInt8(UInt8(162))&127)..(UInt8(UInt8(75))&127):((-103)|1)))[4]) << ((func_1686173962304_415()) & 7)
    }

}

@echo public interface Interface_1686173962304_73 <: Interface_1686173962304_74 & Interface_1686173962304_75<Bool, UInt16> {
    @echo func func_1686173962304_377(param_1686173962304_378 : Array<Unit>) : UInt8 { // block id: 379
        @echo var var_1686173962304_386 : Range<Int16> = ((Int16(Int16(-120))&127)..(Int16(Int16(74))&127):(104|1));
        @echo let var_1686173962304_390 : Int64 = 8;
        @echo var var_1686173962304_410 : Int32 = Int32(-35);
        UInt8((var_1686173962304_386, ((Int64(var_1686173962304_390)&127)..=(Int64(var_1686173962304_390)&127):((var_1686173962304_390|1))), [(), var_1686173962304_183, (), var_1686173962304_183, (), (), (), (), var_1686173962304_183, var_1686173962304_183], var_1686173962304_55, Int8(-18), true, (), var_1686173962304_410, ((UInt8(UInt8(162))&127)..(UInt8(UInt8(75))&127):((-103)|1)))[4]) << ((func_1686173962304_415()) & 7)
    }

}

@echo public open class Class_1686173962304_70 <: Interface_1686173962304_73 & Interface_1686173962304_75<Bool, UInt16> & Resource {
    @echo public init() { // block id: 72

    }
;
    @echo var var_1686173962304_82 : Int8 = Int8(43);
    @echo init(param_1686173962304_136 : Range<Int16>, namedParam_1686173962304_137 ! : (UInt8, Int16, Rune, Rune)) { // block id: 138
        @echo var var_1686173962304_207 : Bool = (((Int16(Int16(Int8(Int8(74))))&127)..(Int16(Int16(Int16(-101)))&127):(((-32)|1))) is Struct_1686173962304_86);
        try (resource = Class_1686173962304_70()) { // block id: 140
            UInt8(200);
            @echo var var_1686173962304_144 : Int8 = Int8(-97);
            var_1686173962304_144++;
            @echo let var_1686173962304_148 : Range<UInt16> = ((UInt16(UInt16(248))&127)..(UInt16(UInt16(124))&127):((-114)|1));
            @echo var var_1686173962304_155 : Bool = true;
            match (var_1686173962304_148) {
                case _ => 
                    ();
                    var_1686173962304_155 &&= true;
                    ()
                
            }
        } catch (e: Exception) { // block id: 159
            @echo var var_1686173962304_166 : UInt64 = UInt64(54);
            if (true) { // block id: 162
                [UInt64(3), var_1686173962304_166, UInt64(21), var_1686173962304_166, var_1686173962304_166, UInt64(205), UInt64(231), var_1686173962304_166, UInt64(5), var_1686173962304_176];
                Class_1686173962304_70();
                var_1686173962304_183
            };
            @echo var var_1686173962304_190 : Int64 = Int64(Int32(Int16(-41)));
            match (((UInt8(UInt8(170))&127)..=(UInt8(UInt8(89))&127):((var_1686173962304_190|1)))) {
                case _ : Float32 => 
                    @echo let var_1686173962304_199 : UInt32 = UInt32(UInt16(150));
                    ((UInt32(var_1686173962304_199)&127)..(UInt32(var_1686173962304_199)&127):((var_1686173962304_190|1)));
                    var_1686173962304_183;
                    var_1686173962304_207 ||= false
                
                case caseVar_1686173962304_219 : Interface_1686173962304_76 => 
                    @echo var var_1686173962304_223 : Int8 = Int8(-83);
                    var_1686173962304_223++
                
                case _ => 
                    var_1686173962304_228;
                    var_1686173962304_102--;
                    var_1686173962304_234 ||= false
                
            }
        }
    }
;
    @echo static func func_1686173962304_675(namedParam_1686173962304_676 ! : Option<Int16>, optionalParam_1686173962304_677 ! : UInt16 = UInt16(UInt16(192))) : Float32 { // block id: 680
        Int16(Int16((var_1686173962304_685.var_1686173962304_688)));
        @echo var var_1686173962304_739 : Int32 = Int32(-21);
        if (match (if (var_1686173962304_571) { var_1686173962304_700 } else { ((Int64((-23))&127)..=(Int64(1)&127):((-110)|1)) } ) {
            case _ : Int64 => 
                false
            
            case _ => 
                @echo var var_1686173962304_720 : Float64 = 66.0;
                var_1686173962304_720 > var_1686173962304_720
            
            case _ => 
                var_1686173962304_63;
                ();
                var_1686173962304_102 == UInt8(75)
            
            case _ => 
                var_1686173962304_183;
                var_1686173962304_183;
                var_1686173962304_571
            
        }) { try { // block id: 737
            var_1686173962304_739;
            Struct_1686173962304_86()
        } finally { // block id: 742
            @echo let var_1686173962304_744 : Float64 = Float64(Float32(126.0));
            var_1686173962304_744;
            Class_1686173962304_70();
            var_1686173962304_685
        } } else { Struct_1686173962304_86() } ;
        var_1686173962304_487
    }
;
    @echo prop var_1686173962304_866 : Range<UInt16> { // block id: 867
        get() { // block id: 869
            ((UInt16(UInt16(Int8(UInt8(184))))&127)..(UInt16(UInt16(Int8(-76)))&127):((57|1)))
        }

    };
    @echo public open override func func_1686173962304_377(param_1686173962304_378 : Array<Unit>) : UInt8 { // block id: 379
        @echo var var_1686173962304_386 : Range<Int16> = ((Int16(Int16(-120))&127)..(Int16(Int16(74))&127):(104|1));
        @echo let var_1686173962304_390 : Int64 = 8;
        @echo var var_1686173962304_410 : Int32 = Int32(-35);
        UInt8((var_1686173962304_386, ((Int64(var_1686173962304_390)&127)..=(Int64(var_1686173962304_390)&127):((var_1686173962304_390|1))), [(), var_1686173962304_183, (), var_1686173962304_183, (), (), (), (), var_1686173962304_183, var_1686173962304_183], var_1686173962304_55, Int8(-18), true, (), var_1686173962304_410, ((UInt8(UInt8(162))&127)..(UInt8(UInt8(75))&127):((-103)|1)))[4]) << ((func_1686173962304_415()) & 7)
    }

    static init() {
    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

@echo public struct Struct_1686173962304_86 {
    @echo init() { // block id: 88

    }
;
    @echo static prop var_1686173962304_91 : Bool { // block id: 92
        get() { // block id: 94
            Int8(-80);
            false
        }

    };
    @echo prop var_1686173962304_688 : Int16 { // block id: 689
        get() { // block id: 691
            (-106);
            Float32(-105.0);
            Int16(0)
        }

    }
}

@echo public enum Enum_1686173962304_123 {
    defaultValue
}
@echo public enum Enum_1686173962304_281 {
    defaultValue
}


@echo func func_1686173962304_456(param_1686173962304_457 : Float32) : Option<Range<UInt16>> { // block id: 458
    Option<Range<UInt16>>.None
}

@echo func func_1686173962304_608(optionalParam_1686173962304_609 ! : Range<UInt32> = ((UInt32(UInt32(234))&127)..(UInt32(UInt32(168))&127):(26|1)), optionalParam_1686173962304_611 ! : String = """
pskqV
hgm?7
""", namedParam_1686173962304_613 ! : Range<UInt16>, namedParam_1686173962304_614 ! : Int32) : Unit { // block id: 615
    @echo var var_1686173962304_618 : UInt64 = UInt64(UInt16(Int8(Int8(UInt8(244)))));
    var_1686173962304_618 %= (([UInt64(118), UInt64(167), var_1686173962304_176, var_1686173962304_618, UInt64(153), UInt64(70), var_1686173962304_618, UInt64(99), var_1686173962304_618, var_1686173962304_176][1]) | 1)
}

@echo public func func_1686173962304_494(param_1686173962304_495 : Interface_1686173962304_75<Bool, UInt16>) : Float32 { // block id: 496
    @echo let var_1686173962304_534 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
    @echo var loopTimeVar_1686173962304_601 : Range<UInt64> = ((UInt64(UInt64(25))&127)..(UInt64(UInt64(Int16(40)))&127):((76|1)));
    for (i in loopTimeVar_1686173962304_601 where match (match (Enum_1686173962304_281.defaultValue) {
        case caseVar_1686173962304_503 => 
            @echo let var_1686173962304_506 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
            var_1686173962304_506
        
        case _ : Option<(UInt8, Int16, Rune, Rune)> => 
            ();
            var_1686173962304_183;
            @echo var var_1686173962304_516 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
            if (false) { var_1686173962304_516 } else { var_1686173962304_516 } 
        
        case defaultValue => 
            @echo let var_1686173962304_523 : Interface_1686173962304_75<Bool, UInt16> = Class_1686173962304_70(((Int16(Int16(108))&127)..(Int16(Int16(54))&127):((-96)|1)), namedParam_1686173962304_137 : (UInt8(137), Int16(89), r'6', r'T'));
            var_1686173962304_523;
            if (var_1686173962304_234) { var_1686173962304_534 } else { Enum_1686173962304_123.defaultValue } 
        
        case _ => 
            @echo var var_1686173962304_540 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            var_1686173962304_540;
            var_1686173962304_183;
            Enum_1686173962304_123.defaultValue
        
    }) {
        case _ => 
            if (var_1686173962304_234) { var_1686173962304_560 } else { ((Int16(Int16(-31))&127)..=(Int16(Int16(-7))&127):(63|1)) } ;
            var_1686173962304_487 < var_1686173962304_487
        
        case defaultValue => 
            var_1686173962304_183;
            var_1686173962304_571
        
        case defaultValue => 
            @echo var var_1686173962304_578 : UInt16 = UInt16(Int16(88));
            var_1686173962304_578 = UInt16(100);
            @echo let var_1686173962304_585 : (UInt8, Int16, Rune, Rune) = (UInt8(1), Int16(Int16(UInt16(UInt8(201)))), r'w', r'P');
            Class_1686173962304_70(var_1686173962304_560, namedParam_1686173962304_137 : var_1686173962304_585);
            var_1686173962304_234
        
        case _ => 
            ();
            var_1686173962304_183;
            var_1686173962304_571
        
    }) {

    };
    @echo var var_1686173962304_653 : UInt16 = UInt16(UInt16(236));
    func_1686173962304_608(namedParam_1686173962304_613 : (var_1686173962304_639 ?? if (var_1686173962304_571) { // block id: 643
        var_1686173962304_646 %= ((Int16(-115)) | 1);
        if (true) { ((UInt16(var_1686173962304_653)&127)..(UInt16(UInt16(152))&127):((var_1686173962304_658|1))) } else { ((UInt16(UInt16(108))&127)..(UInt16(UInt16(65))&127):((71|1))) } 
    } else { // block id: 664
        ();
        var_1686173962304_183;
        ((UInt16(UInt16(200))&127)..=(UInt16(UInt16(238))&127):((var_1686173962304_658|1)))
    }), namedParam_1686173962304_614 : Int32(69));
    Class_1686173962304_70.func_1686173962304_675(namedParam_1686173962304_676 : (((UInt64(var_1686173962304_176)&127)..=(UInt64(var_1686173962304_176)&127):((var_1686173962304_658|1))) as Int16), optionalParam_1686173962304_677 : try { // block id: 757
        UInt16(34)
    } catch (e: Exception) { // block id: 759
        ();
        UInt16(239)
    })
}

@echo public enum Enum_1686173962304_775 {
    defaultValue
}
@echo public func func_1686173962304_468<T0, T1>(param_1686173962304_469 : UInt16) : Float32 { // block id: 470
    @echo var var_1686173962304_482 : Int64 = Int64(UInt32(103));
    @echo let var_1686173962304_786 : UInt64 = UInt64(Int8(UInt8(Int8(UInt8(215)))));
    @echo var var_1686173962304_793 : Range<Int8> = ((Int8(Int8(85))&127)..=(Int8(Int8(UInt8(50)))&127):((112|1)));
    if ((if (false) { // block id: 475
        ();
        -Float32(-77.0)
    } else if (var_1686173962304_234) { // block id: 480
        var_1686173962304_482;
        var_1686173962304_183;
        var_1686173962304_487
    } else { // block id: 489
        ();
        var_1686173962304_487
    } is Interface_1686173962304_73)) { // block id: 492
        @echo var var_1686173962304_764 : Interface_1686173962304_75<Bool, UInt16> = Class_1686173962304_70(((Int16(Int16(-66))&127)..=(Int16(Int16(-96))&127):((-102)|1)), namedParam_1686173962304_137 : (UInt8(209), Int16(UInt16(195)), r'H', r'K'));
        var_1686173962304_764|>func_1686173962304_494
    } else { // block id: 773
        match (Enum_1686173962304_775.defaultValue) {
            case _ : Range<Int32> => 
                var_1686173962304_183
            
            case _ : Int32 => 
                var_1686173962304_786;
                var_1686173962304_793;
                var_1686173962304_183
            
            case caseVar_1686173962304_802 => 
                var_1686173962304_102;
                @echo let var_1686173962304_807 : UInt16 = UInt16(Int16(UInt16(Int8(-96))));
                var_1686173962304_807 >> ((UInt16(47)) & 7);
                var_1686173962304_487 += Float32(32.0)
            
            case _ => 
                ()
            
        };
        var_1686173962304_822[0]
    }
}

@echo func func_1686173962304_37(param_1686173962304_453 : (Range<Int16>, Range<Int64>, Array<Unit>, Int16, Int8, Bool, Unit, Int32, Range<UInt8>)) : Option<Range<UInt16>> { // block id: 454
    @echo let var_1686173962304_461 : (Float32) -> Option<Range<UInt16>> = { lambdaParameter_1686173962304_464 : Float32 => Option<Range<UInt16>>.None };
    (UInt16(UInt16(241))|>func_1686173962304_468<Unit, Array<Unit>>)|>var_1686173962304_461
}

@echo func func_1686173962304_423(param_1686173962304_424 : Range<UInt16>) : Option<Range<UInt16>> { // block id: 425
    var_1686173962304_183;
    @echo let var_1686173962304_434 : Enum_1686173962304_281 = Enum_1686173962304_281.defaultValue;
    try { // block id: 428
        @echo var loopTimeVar_1686173962304_437 : Int64 = 0;
        do {
            loopTimeVar_1686173962304_437++;
            ();
            var_1686173962304_434
        } while ((false) && loopTimeVar_1686173962304_437 < 100 ) ;
        (var_1686173962304_444 ?? var_1686173962304_55)
    } catch (e: Exception) { // block id: 447
        Int16(105) << ((var_1686173962304_55) & 7)
    };
    @echo var var_1686173962304_837 : Range<UInt16> = ((UInt16(UInt16(69))&127)..(UInt16(UInt16(166))&127):((-57)|1));
    func_1686173962304_37((var_1686173962304_837, ((Int16(var_1686173962304_55)&127)..(Int16(Int16(11))&127):(((-36)|1))), (var_1686173962304_560, ((Int64(0)&127)..(Int64((-120))&127):(113|1)), [(), (), (), (), (), (), (), (), (), ()], var_1686173962304_646, Int8(-7), var_1686173962304_571, (), var_1686173962304_852, ((UInt8(UInt8(50))&127)..=(UInt8(UInt8(1))&127):(110|1))), [(), (), (), (), (), (), (), (), (), ()], var_1686173962304_228)[2])
}


@echo func func_1686173962304_415() : UInt8 { // block id: 416
    @echo let var_1686173962304_861 : (Range<UInt16>) -> Option<Range<UInt16>> = func_1686173962304_423;
    @echo let var_1686173962304_888 : UInt16 = UInt16(UInt8(Int8(-106)));
    ((var_1686173962304_79.var_1686173962304_866|>var_1686173962304_861) ?? match ((var_1686173962304_183, var_1686173962304_852, var_1686173962304_884, ((UInt16(var_1686173962304_888)&127)..=(UInt16(UInt16(228))&127):((var_1686173962304_658|1))))[2]) {
        case defaultValue => 
            var_1686173962304_899
        
        case defaultValue => 
            if (false) { var_1686173962304_907 } else { [UInt64(64), UInt64(66), UInt64(248), UInt64(184), UInt64(249), UInt64(97), UInt64(129), UInt64(74), UInt64(29), UInt64(5)] } ;
            var_1686173962304_183;
            @echo let var_1686173962304_912 : Range<UInt16> = ((UInt16(UInt16(78))&127)..=(UInt16(UInt16(UInt8(Int8(9))))&127):((Int64(Int32(-51))|1)));
            var_1686173962304_912
        
        case _ => 
            Class_1686173962304_70(((Int16(Int16(-37))&127)..=(Int16(var_1686173962304_55)&127):((117|1))), namedParam_1686173962304_137 : (UInt8(221), Int16(114), r'u', var_1686173962304_63));
            var_1686173962304_183;
            if (var_1686173962304_234) { var_1686173962304_899 } else { ((UInt16(UInt16(213))&127)..=(UInt16(UInt16(254))&127):((-110)|1)) } 
        
    });
    @echo let var_1686173962304_956 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
    @echo let var_1686173962304_966 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
    match (if ((var_1686173962304_941 is Float32)) { (Option<Enum_1686173962304_123>.None ?? var_1686173962304_956) } else { try { // block id: 959
        if (var_1686173962304_234) { Enum_1686173962304_123.defaultValue } else { var_1686173962304_956 } 
    } finally { // block id: 964
        var_1686173962304_966
    } } ) {
        case defaultValue => 
            var_1686173962304_852--
        
        case defaultValue => 
            ()
        
        case _ : Interface_1686173962304_73 => 
            var_1686173962304_658 /= ((84) | 1);
            var_1686173962304_183;
            @echo var var_1686173962304_986 : String = ###"X]m!!R.&HF"###;
            var_1686173962304_986 = """
O${var_1686173962304_986}^${var_1686173962304_986}+[${var_1686173962304_986}X
KhBkX
"""
        
        case defaultValue => 
            var_1686173962304_63;
            var_1686173962304_646 %= ((var_1686173962304_55) | 1)
        
        case _ => 
            var_1686173962304_183
        
    };
    @echo var var_1686173962304_1088 : Range<UInt64> = ((UInt64(UInt64(Int16(49)))&127)..(UInt64(UInt64(198))&127):((Int64(UInt32(187))|1)));
    @echo var var_1686173962304_1097 : ((Range<UInt16>, Range<Int16>, (Range<Int16>, Range<Int64>, Array<Unit>, Int16, Int8, Bool, Unit, Int32, Range<UInt8>), Array<Unit>, Range<UInt8>), String, UInt64, UInt8, Range<UInt64>) = ((((UInt16(UInt16(UInt8(110)))&127)..=(UInt16(UInt16(130))&127):((Int64(Int16(90))|1))), ((Int16(Int16(Int8(-24)))&127)..=(Int16(Int16(-28))&127):((100|1))), (((Int16(Int16(57))&127)..(Int16(Int16(77))&127):((-107)|1)), ((Int64((-2))&127)..=(Int64(72)&127):(102|1)), [(), (), (), (), (), (), (), (), (), ()], Int16(Int16(97)), Int8(Int8(-18)), false, (), Int32(-52), ((UInt8(UInt8(93))&127)..(UInt8(UInt8(119))&127):((-53)|1))), [(), (), (), (), (), (), (), (), (), ()], ((UInt8(UInt8(5))&127)..(UInt8(UInt8(Int8(16)))&127):((61|1)))), """
O,ht|
ea{1X7
""", UInt64(227), UInt8(163), ((UInt64(UInt64(118))&127)..(UInt64(UInt64(138))&127):(104|1)));
    try { // block id: 1003
        var_1686173962304_1005;
        ((var_1686173962304_899, ((Int16(Int16(-41))&127)..(Int16(Int16(7))&127):((-53)|1)), (((Int16(Int16(121))&127)..=(Int16(Int16(-47))&127):((var_1686173962304_658|1))), ((Int64(30)&127)..(Int64((-16))&127):((-57)|1)), [(), (), (), (), (), (), (), (), (), ()], Int16(-128), Int8(-23), false, var_1686173962304_183, var_1686173962304_852, ((UInt8(UInt8(212))&127)..(UInt8(UInt8(16))&127):(17|1))), [(), var_1686173962304_183, var_1686173962304_183, var_1686173962304_183, (), var_1686173962304_183, (), var_1686173962304_183, var_1686173962304_1080, ()], var_1686173962304_228), "!6aDpuL}C'", var_1686173962304_176, var_1686173962304_102, var_1686173962304_1088)
    } finally { // block id: 1095
        var_1686173962304_1097
    }[3] * var_1686173962304_102
}


@echo public func func_1686173962304_66<T0, T1>(param_1686173962304_67 : UInt64) : (UInt8, Int16, Rune, Rune) where T1 <: Interface_1686173962304_74 & Interface_1686173962304_75<Bool, UInt16> { // block id: 68
    var_1686173962304_79.var_1686173962304_82;
    @echo var var_1686173962304_126 : Enum_1686173962304_123 = Enum_1686173962304_123.defaultValue;
    @echo var var_1686173962304_290 : Int32 = Int32(-28);
    @echo var var_1686173962304_297 : Interface_1686173962304_73 = Class_1686173962304_70();
    @echo var var_1686173962304_301 : UInt32 = UInt32(118);
    if (Struct_1686173962304_86.var_1686173962304_91) { // block id: 97
        match (Option<(UInt8, Int16, Rune, Rune)>.Some((var_1686173962304_102, Int16(90), r'B', var_1686173962304_63))) {
            case _ => 
                Int16(-22);
                UInt64(53)
            
        }
    } else if (match (var_1686173962304_126) {
        case _ => 
            @echo var var_1686173962304_131 : Array<Bool> = [(Class_1686173962304_70(((Int16(Int16(-60))&127)..(Int16(Int16(-104))&127):(42|1)), namedParam_1686173962304_137 : (UInt8(133), Int16(58), r'u', r'X')) is Interface_1686173962304_74), (Int16(Int8(UInt8(173))) is Range<UInt64>), false, false, false, false, (UInt8(36) is Option<(UInt8, Int16, Rune, Rune)>), (Option<(UInt8, Int16, Rune, Rune)>.Some((UInt8(149), Int16(9), r'X', r'r')) is (UInt8, Int16, Rune, Rune)), false, (((Int8(Int8(-68))&127)..=(Int8(Int8(55))&127):(113|1)) is Unit)];
            var_1686173962304_131
        
    }[2]) { // block id: 264
        var_1686173962304_183;
        [UInt64(30), UInt64(106), UInt64(166), UInt64(221), UInt64(230), var_1686173962304_176, UInt64(185), UInt64(112), UInt64(38), UInt64(101)][1]
    } else { // block id: 279
        match (Enum_1686173962304_281.defaultValue) {
            case caseVar_1686173962304_286 => 
                var_1686173962304_290 -= var_1686173962304_290
            
            case _ => 
                ();
                var_1686173962304_297;
                var_1686173962304_301 += var_1686173962304_301
            
        };
        @echo var var_1686173962304_308 : Int8 = Int8(114);
        try { // block id: 305
            var_1686173962304_308 /= ((Int8(34)) | 1);
            UInt64(153)
        } catch (e: Exception) { // block id: 312
            -UInt64(25)
        } finally { // block id: 315
            var_1686173962304_176 ^ UInt64(10)
        }
    };
    @echo let var_1686173962304_326 : (UInt8, Int16, Rune, Rune) = (UInt8(UInt8(40)), Int16(-62), r'q', r'2');
    @echo let var_1686173962304_374 : Class_1686173962304_70 = Class_1686173962304_70();
    @echo let var_1686173962304_1174 : Bool = (Class_1686173962304_70() is Float64);
    @echo let var_1686173962304_1320 : UInt64 = UInt64(146);
    try { // block id: 320
        try { // block id: 322
            ();
            ();
            var_1686173962304_326
        } catch (_) { // block id: 333
            var_1686173962304_326
        } finally { // block id: 335
            var_1686173962304_326
        }
    } catch (e: Exception) { // block id: 337
        @echo func func_1686173962304_345<T0, T1>() : Unit { // block id: 346
            ();
            @echo var var_1686173962304_360 : Unit = ();
            try { // block id: 351
                var_1686173962304_183;
                ();
                [(), var_1686173962304_183, (), (), var_1686173962304_360, (), (), (), var_1686173962304_360, var_1686173962304_183]
            } catch (e: Exception) { // block id: 367
                ();
                [(), (), (), (), (), (), (), (), (), ()]
            }[6]
        }
;
        @echo let var_1686173962304_1156 : ?((UInt8, Int16, Rune, Rune), Range<UInt16>, Array<Bool>, UInt64, Int16) = (Int32(UInt16(239)) as ((UInt8, Int16, Rune, Rune), Range<UInt16>, Array<Bool>, UInt64, Int16));
        @echo let var_1686173962304_1201 : Range<UInt64> = ((UInt64(UInt64(147))&127)..=(UInt64(UInt64(169))&127):((Int64(Int8(UInt8(UInt8(181))))|1)));
        @echo func func_1686173962304_339(param_1686173962304_340 : Range<UInt16>, param_1686173962304_341 : Range<Int8>) : (UInt8, Int16, Rune, Rune) { // block id: 342
            var_1686173962304_183;
            func_1686173962304_345<Range<Int32>, Bool>();
            @echo let var_1686173962304_1138 : Unit = ();
            @echo var var_1686173962304_1165 : Rune = r'7';
            @echo var var_1686173962304_1310 : Float32 = Float32(Float32(Float32(-45.0)));
            @echo var var_1686173962304_1412 : Unit = ();
            (var_1686173962304_374.func_1686173962304_377([(), var_1686173962304_1138, (), var_1686173962304_1138, (), (), (), (), (), var_1686173962304_1080]), (var_1686173962304_1156 ?? ((UInt8(224), var_1686173962304_646, var_1686173962304_1165, r'I'), ((UInt16(UInt16(15))&127)..=(UInt16(UInt16(148))&127):((-46)|1)), [false, var_1686173962304_234, true, var_1686173962304_1174, false, var_1686173962304_571, true, false, var_1686173962304_234, var_1686173962304_571], UInt64(12), Int16(99)))[4], if (match (Enum_1686173962304_281.defaultValue) {
                case _ => 
                    Int8(23) > Int8(119)
                
            }) { // block id: 1194
                var_1686173962304_571 &&= var_1686173962304_1174;
                if (true) { var_1686173962304_1201 } else { ((UInt64(UInt64(163))&127)..=(UInt64(UInt64(168))&127):(((-59)|1))) } ;
                r'2'
            } else if (var_1686173962304_1217[3]) { // block id: 1282
                r'j'
            } else { // block id: 1284
                var_1686173962304_658 &= 44;
                var_1686173962304_1138;
                var_1686173962304_63
            }, match (try { // block id: 1292
                [var_1686173962304_1295, var_1686173962304_176, var_1686173962304_176, UInt64(223), var_1686173962304_176, UInt64(47), UInt64(17), UInt64(121), var_1686173962304_176, var_1686173962304_176]
            } catch (e: Exception) { // block id: 1307
                var_1686173962304_1310 / Float32((Int32(Float32(-31.0))) | 1);
                Class_1686173962304_70();
                [UInt64(89), var_1686173962304_176, var_1686173962304_1320, UInt64(122), var_1686173962304_1320, var_1686173962304_176, var_1686173962304_1320, UInt64(254), var_1686173962304_1320, var_1686173962304_1320]
            } finally { // block id: 1329
                var_1686173962304_183;
                ();
                [UInt64(218), var_1686173962304_176, var_1686173962304_1295, var_1686173962304_1320, var_1686173962304_1295, UInt64(111), UInt64(211), UInt64(117), var_1686173962304_176, UInt64(196)]
            }) {
                case _ => 
                    var_1686173962304_658 %= (((-98)) | 1);
                    r'D'
                
                case _ => 
                    ((Int8(Int8(-75))&127)..=(Int8(Int8(114))&127):(22|1));
                    r'g'
                
                case _ => 
                    if (true) { var_1686173962304_63 } else { var_1686173962304_1165 } 
                
                case caseVar_1686173962304_1364 => 
                    ((Int16(Int16(38))&127)..=(Int16(Int16(93))&127):((4|1)));
                    @echo var var_1686173962304_1374 : (Range<Int16>, Range<Int64>, Array<Unit>, Int16, Int8, Bool, Unit, Int32, Range<UInt8>) = (((Int16(Int16(-29))&127)..=(Int16(Int16(UInt8(Int8(25))))&127):((113|1))), ((Int64(75)&127)..(Int64(17)&127):((-30)|1)), [(), (), (), (), (), (), (), (), (), ()], Int16(-95), Int8(113), true, (), Int32(UInt32(Int32(16))), ((UInt8(UInt8(60))&127)..(UInt8(UInt8(Int8(16)))&127):((19|1))));
                    (((UInt16(UInt16(191))&127)..(UInt16(UInt16(60))&127):(81|1)), ((Int16(Int16(-116))&127)..=(Int16(Int16(23))&127):((-113)|1)), var_1686173962304_1374, [(), (), var_1686173962304_1138, var_1686173962304_1080, var_1686173962304_1412, var_1686173962304_1412, var_1686173962304_183, var_1686173962304_1138, (), ()], var_1686173962304_228);
                    @echo let var_1686173962304_1423 : Rune = r'C';
                    if (false) { var_1686173962304_1423 } else { r'6' } 
                
                case _ => 
                    var_1686173962304_63
                
            })
        }
;
        func_1686173962304_339(((UInt16(UInt16(76))&127)..(UInt16(UInt16(212))&127):(57|1)), var_1686173962304_1431)
    }
}

@echo public func func_1686173962304_37(namedParam_1686173962304_38 ! : Int8, namedParam_1686173962304_39 ! : Float64, namedParam_1686173962304_40 ! : UInt16) : (UInt8, Int16, Rune, Rune) { // block id: 41
    @echo var var_1686173962304_50 : UInt8 = UInt8(UInt8(UInt8(169)));
    @echo let var_1686173962304_1449 : UInt16 = UInt16(UInt8(UInt8(UInt8(UInt8(51)))));
    @echo var var_1686173962304_1495 : Unit = ();
    (Option<(UInt8, Int16, Rune, Rune)>.Some((var_1686173962304_50, var_1686173962304_55, r'z', var_1686173962304_63)) ?? (match (Int32(-104)) {
        case caseVar_1686173962304_1444 : Float64 => 
            (((UInt16(var_1686173962304_1449)&127)..(UInt16(var_1686173962304_1449)&127):((var_1686173962304_658|1))), var_1686173962304_1458, (((Int16(Int16(-78))&127)..(Int16(Int16(46))&127):((-26)|1)), var_1686173962304_700, [(), var_1686173962304_1080, var_1686173962304_1080, (), (), var_1686173962304_183, (), (), var_1686173962304_183, var_1686173962304_1080], var_1686173962304_646, Int8(124), var_1686173962304_234, var_1686173962304_1080, Int32(8), var_1686173962304_228), [var_1686173962304_1080, var_1686173962304_183, var_1686173962304_1080, (), (), (), var_1686173962304_1080, var_1686173962304_1495, (), ()], ((UInt8(UInt8(148))&127)..=(UInt8(var_1686173962304_102)&127):((var_1686173962304_658|1))));
            var_1686173962304_1495;
            var_1686173962304_1295
        
        case _ => 
            var_1686173962304_1509 >>= ((var_1686173962304_1509) & 7);
            UInt64(141)
        
    }|>func_1686173962304_66<UInt16, Interface_1686173962304_74>))
}

@echo public func func_1686173962304_27(optionalParam_1686173962304_28 ! : Bool = false, optionalParam_1686173962304_30 ! : Unit = (), optionalParam_1686173962304_32 ! : UInt16 = UInt16(84), namedParam_1686173962304_34 ! : Unit) : (UInt8, Int16, Rune, Rune) { // block id: 35
    @echo var var_1686173962304_1524 : Float64 = Float64(61.0);
    func_1686173962304_37(namedParam_1686173962304_38 : match ([UInt64(183), UInt64(232), UInt64(58), UInt64(59), UInt64(133), UInt64(162), UInt64(182), UInt64(159), UInt64(139), UInt64(111)]) {
        case _ => 
            Int16(-125);
            var_1686173962304_1520 & Int8(-103)
        
    }, namedParam_1686173962304_39 : var_1686173962304_1524, namedParam_1686173962304_40 : UInt16(UInt16(var_1686173962304_1530)))
}

@echo public open class Class_1686173962304_1543 <: Class_1686173962304_70 {
    @echo init() { // block id: 1545

    }
;
    @echo public static prop var_1686173962304_1548 : UInt16 { // block id: 1549
        get() { // block id: 1551
            UInt16(89)
        }

    };
    @echo public open override func func_1686173962304_377(param_1686173962304_378 : Array<Unit>) : UInt8 { // block id: 379
        @echo var var_1686173962304_386 : Range<Int16> = ((Int16(Int16(-120))&127)..(Int16(Int16(74))&127):(104|1));
        @echo let var_1686173962304_390 : Int64 = 8;
        @echo var var_1686173962304_410 : Int32 = Int32(-35);
        UInt8((var_1686173962304_386, ((Int64(var_1686173962304_390)&127)..=(Int64(var_1686173962304_390)&127):((var_1686173962304_390|1))), [(), var_1686173962304_183, (), var_1686173962304_183, (), (), (), (), var_1686173962304_183, var_1686173962304_183], var_1686173962304_55, Int8(-18), true, (), var_1686173962304_410, ((UInt8(UInt8(162))&127)..(UInt8(UInt8(75))&127):((-103)|1)))[4]) << ((func_1686173962304_415()) & 7)
    }

    static init() {
    }
}

@echo public func func_1686173962304_8(param_1686173962304_9 : UInt32) : Rune { // block id: 10
    @echo var var_1686173962304_17 : Unit = ();
    UInt8(try { // block id: 13
        UInt8(40)
    } finally { // block id: 15
        var_1686173962304_17;
        @echo let var_1686173962304_20 : UInt64 = UInt64(UInt64(166));
        var_1686173962304_20;
        UInt8(84)
    });
    @echo let var_1686173962304_1557 : Bool = ((((Int16(Int16(-38))&127)..(Int16(Int16(Int8(28)))&127):((Int64(Int16(-110))|1))), ((Int64(4)&127)..=(Int64((-5))&127):((Int64(UInt16(177))|1))), [(), (), (), (), (), (), (), (), (), ()], Int16(-107), Int8(Int8(-43)), ((((Int16(Int16(-67))&127)..(Int16(Int16(64))&127):(((-85)|1))), ((Int64(38)&127)..(Int64(122)&127):(((-24)|1))), [(), (), (), (), (), (), (), (), (), ()], Int16(118), Int8(11), true, (), Int32(110), ((UInt8(UInt8(36))&127)..(UInt8(UInt8(16))&127):(((-26)|1)))) is (Int8, Float64, UInt16) -> (UInt8, Int16, Rune, Rune)), (), Int32(Int16(-77)), ((UInt8(UInt8(181))&127)..(UInt8(UInt8(219))&127):(123|1))) is UInt16);
    @echo let var_1686173962304_1628 : Unit = ();
    func_1686173962304_27(optionalParam_1686173962304_30 : var_1686173962304_1538++, optionalParam_1686173962304_32 : Class_1686173962304_1543.var_1686173962304_1548, namedParam_1686173962304_34 : (var_1686173962304_1557, var_1686173962304_17, [(), var_1686173962304_1623, var_1686173962304_17, var_1686173962304_17, var_1686173962304_1628, var_1686173962304_1628, var_1686173962304_17, (), var_1686173962304_1628, ()], var_1686173962304_1636, (), var_1686173962304_1557)[1])[3]
}

main(): Int64 {
    try {
        if (var_1686173962304_234) { // block id: 1645
            var_1686173962304_1509 - var_1686173962304_1509
        } else if (var_1686173962304_234) { // block id: 1650
            !var_1686173962304_571;
            -UInt32(13)
        } else { // block id: 1655
            (((Int16(var_1686173962304_646)&127)..(Int16(var_1686173962304_55)&127):((51|1))), ((Int64((-3))&127)..=(Int64(95)&127):(111|1)), [(), (), (), (), (), (), (), (), (), ()], var_1686173962304_55, var_1686173962304_1520, var_1686173962304_571, (), Int32(66), ((UInt8(UInt8(124))&127)..(UInt8(UInt8(195))&127):(((-67)|1))));
            @echo let var_1686173962304_1673 : Interface_1686173962304_73 = Class_1686173962304_70(((Int16(Int16(UInt16(UInt8(6))))&127)..(Int16(Int16(-36))&127):((Int64(UInt32(UInt8(23)))|1))), namedParam_1686173962304_137 : (UInt8(Int8(Int8(-89))), Int16(UInt16(Int8(-1))), r'7', r'j'));
            var_1686173962304_1673;
            var_1686173962304_1636 / ((var_1686173962304_1509) | 1)
        }|>func_1686173962304_8;
        (Float32(-120.0), [var_1686173962304_487, Float32(-112.0), var_1686173962304_487, Float32(58.0), Float32(37.0), var_1686173962304_487, var_1686173962304_487, Float32(20.0), Float32(86.0), var_1686173962304_487][0], match (Float32(-32.0)) {
            case caseVar_1686173962304_1715 : Option<Enum_1686173962304_123> => 
                var_1686173962304_1080;
                var_1686173962304_1080;
                Int16(-37) >> ((var_1686173962304_55) & 7)
            
            case _ => 
                var_1686173962304_1726 - var_1686173962304_646
            
        }, var_1686173962304_658);
        (-8)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1686173962304_1636*var_1686173962304_1636), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum_1686173962304_775 {

}

extend Struct_1686173962304_86 {

}

extend Enum_1686173962304_123 {

}

extend Class_1686173962304_1543 {

}
// ASSERT: scan parse_redundant_modifier
// ASSERT: scan sema_unreachable_pattern
// ASSERT: scan chir_typecast_overflow
// ASSERT: scan chir_dce_unused_variable
// ASSERT: scan chir_dce_unused_expression
// ASSERT: scan chir_dce_unused_operator
// ASSERT: scan chir_arithmetic_operator_overflow
