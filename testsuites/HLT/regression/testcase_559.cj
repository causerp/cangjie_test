/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1702385825048_25 : Int = Int64(UInt8(212))
public let var_1702385825048_29 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1702385825048_63 : Bool = false
public const var_1702385825048_67 : UInt16 = 46
let var_1702385825048_71 : Int = Int64(-102)
public var var_1702385825048_74 : Range<UInt16> = ((UInt16(UInt16(230))&127)..(UInt16(UInt16(Int16(-108)))&127):(Int64(87)|1))
var var_1702385825048_99 : Class_1702385825048_95 = Class_1702385825048_95()
public const var_1702385825048_185 : Bool = false
var var_1702385825048_285 : UInt32 = UInt32(178)
public var var_1702385825048_288 : Int8 = Int8(59)
public const var_1702385825048_467 : Float32 = -72.0
public let var_1702385825048_609 : Struct_1702385825048_35 = Struct_1702385825048_35()
let var_1702385825048_625 : Class_1702385825048_95 = Class_1702385825048_95()
var var_1702385825048_636 : Option<Unit> = (r'u' as Unit)
public var var_1702385825048_658 : Unit = ()
public let var_1702385825048_668 : Range<Int64> = ((Int64(Int64(120))&127)..=(Int64(Int64(-117))&127):(Int64(97)|1))
public var var_1702385825048_695 : Option<(UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>)> = (UInt32(227) as (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>))
public let var_1702385825048_699 : (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>) = (UInt8(UInt8(Int8(Int8(73)))), ((UInt32(UInt32(198))&127)..(UInt32(UInt32(243))&127):(Int64(-112)|1)), Float32(Float32(Float32(38.0))), VArray<UInt32, $8>({ i => UInt32(34)}))
public var var_1702385825048_741 : ?Bool = Option<Bool>.None
public var var_1702385825048_786 : Int32 = Int32(UInt8(89))
public var var_1702385825048_836 : Option<UInt64> = Option<UInt64>.None
public const var_1702385825048_839 : UInt = 117
public let var_1702385825048_861 : ?(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64) = Option<(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64)>.None
var var_1702385825048_985 : Int32 = Int32(23)
const var_1702385825048_1064 : Unit = ()
public let var_1702385825048_1084 : Unit = ()
var var_1702385825048_1111 : Interface_1702385825048_1097 = Class_1702385825048_1094<Rune, Unit>()
public let var_1702385825048_1124 : (Bool, Int16) = (true, Int16(-55))
public var var_1702385825048_1147 : Option<Range<UInt16>> = Option<Range<UInt16>>.None
var var_1702385825048_1151 : Unit = ()
public var var_1702385825048_1163 : Interface_1702385825048_1099 = Class_1702385825048_1094<Rune, Unit>()
public let var_1702385825048_1166 : Range<Int16> = ((Int16(Int16(Int16(Int16(-114))))&127)..=(Int16(Int16(Int16(UInt8(55))))&127):(Int64(UInt32(108))|1))
public let var_1702385825048_1239 : Array<Bool> = [true, false, false, true, true, false, true, true, true, true]
public let var_1702385825048_1247 : Interface_1702385825048_1098 = Class_1702385825048_1094<Rune, Unit>()
var var_1702385825048_1327 : (Array<UInt64>, VArray<Unit, $7>, Class_1702385825048_95, Option<Option<Range<UInt16>>>, Interface_1702385825048_1098, (Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64), Option<Int32>, Int32) = ([UInt64(109), UInt64(176), UInt64(54), UInt64(87), UInt64(33), UInt64(241), UInt64(4), UInt64(161), UInt64(27), UInt64(80)], VArray<Unit, $7>({ i => ()}), Class_1702385825048_95(), (((UInt8(UInt8(54))&127)..(UInt8(UInt8(141))&127):(Int64(107)|1)) as Option<Range<UInt16>>), Class_1702385825048_1094<Rune, Unit>(), ((Class_1702385825048_1094<Rune, Unit>() as Bool), ((Int64(Int64(Int64(-63)))&127)..(Int64(Int64(UInt16(148)))&127):(Int64(UInt32(106))|1)), (UInt32(234), Int32(70), UInt32(UInt8(210)), Int8(Int8(88)), ((Struct_1702385825048_35(), ((Int8(Int8(10))&127)..=(Int8(Int8(-101))&127):(Int64(-48)|1)), ((Int8(Int8(63))&127)..=(Int8(Int8(-52))&127):(Int64(-119)|1))) as Range<UInt16>)), [(), (), (), (), (), (), (), (), (), ()], (), (UInt32(38), Int32(-71), UInt32(Int16(54)), Int8(-41), (VArray<Unit, $7>({ i => ()}) as Range<UInt16>)), Float64(Float64(Float32(-13.0)))), Option<Int32>.None, Int32(Int32(12)))
let var_1702385825048_1401 : Byte = UInt8(108)
public const var_1702385825048_1407 : Bool = true
var var_1702385825048_1584 : VArray<Bool, $8> = [true, false, true, true, true, false, true, true]
public struct Struct_1702385825048_35 {
    public init() { // block id: 37

    }
;
    public let var_1702385825048_1154 : (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>) = (UInt32(5), Int32(-18), UInt32(77), Int8(86), Option<Range<UInt16>>.None);
    public func func_1702385825048_1089(param_1702385825048_1090 : Int64) : Bool { // block id: 1091
        var var_1702385825048_1102 : Class_1702385825048_1094<Rune, Unit> = Class_1702385825048_1094<Rune, Unit>();
        if (var_1702385825048_1102.func_1702385825048_1105(namedParam_1702385825048_1106 : var_1702385825048_1111, namedParam_1702385825048_1107 : var_1702385825048_699)) { // block id: 1114
            false
        } else if ((Option<(Bool, Int16)>.Some(var_1702385825048_1124) ?? (var_1702385825048_63, Int16(82)))[0]) { // block id: 1132
            (var_1702385825048_1124, Option<(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64)>.Some((var_1702385825048_741, var_1702385825048_668, (UInt32(242), Int32(-114), var_1702385825048_285, Int8(99), var_1702385825048_1147), [(), (), (), (), (), (), (), (), (), ()], var_1702385825048_1151, var_1702385825048_1154, Float64(-92.0))), var_1702385825048_1163, var_1702385825048_1166)[2];
            match (var_1702385825048_625) {
                case caseVar_1702385825048_1181 : (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>) => 
                    [(), (), (), (), (), (), (), (), (), ()]
                
                case _ => 
                    var_1702385825048_288 /= ((Int8(-37)) | 1);
                    ((UInt16(var_1702385825048_67)&127)..=(UInt16(UInt16(88))&127):(var_1702385825048_71|1));
                    [(), var_1702385825048_1151, (), var_1702385825048_658, (), var_1702385825048_1064, (), (), (), var_1702385825048_1064]
                
            };
            var_1702385825048_63
        } else { // block id: 1206
            let var_1702385825048_1210 : VArray<Unit, $7> = [(), (), (), (), (), (), ()];
            var_1702385825048_1210[3];
            ();
            try { // block id: 1215
                var var_1702385825048_1218 : UInt16 = UInt16(Int16(UInt8(UInt8(UInt8(17)))));
                var_1702385825048_1218 *= var_1702385825048_67;
                var_1702385825048_185
            } finally { // block id: 1226
                false
            }
        }
    }
;
    static const var_1702385825048_1700 : Int = 46
}


public open class Class_1702385825048_95 <: Resource {
    public init() { // block id: 97

    }
;
    public mut prop var_1702385825048_102 : UInt32 { // block id: 103
        get() { // block id: 105
            ((Int16(Int16(-2))&127)..(Int16(Int16(114))&127):(Int64(10)|1));
            ([true, (() is Range<Int64>), true, ([(), (), (), (), (), (), (), (), (), ()] is Range<Int32>), (UInt8(218) is Class_1702385825048_95), (true is Range<UInt64>), (() is Int64), (UInt64(211) is Range<Int32>), false, true] is Struct_1702385825048_35);
            UInt32(UInt32(31))
        }

        set(Value) { // block id: 142
            VArray<Bool, $8>(repeat: true);
            ()
        }

    };
    let var_1702385825048_207 : Bool = true;
    public var var_1702385825048_644 : UInt64 = UInt64(103);
    public func func_1702385825048_628(optionalParam_1702385825048_629 ! : UInt8 = UInt8(Int8(80)), namedParam_1702385825048_632 ! : Range<Int64>) : Unit { // block id: 633
        (var_1702385825048_636 ?? (try { // block id: 641
            var_1702385825048_644 /= ((UInt64(109)) | 1);
            Option<Unit>.None
        } catch (e: Exception) { // block id: 648
            if (var_1702385825048_207) { Option<Unit>.None } else { Option<Unit>.None } 
        } ?? try (resource = Class_1702385825048_1094<Rune, Unit>()) { // block id: 654

        } finally { // block id: 655
            true;
            var_1702385825048_658
        }))
    }
;
    public func func_1702385825048_1077(namedParam_1702385825048_678 ! : UInt16, namedParam_1702385825048_679 ! : (UInt32) -> Unit, namedParam_1702385825048_682 ! : Float64, namedParam_1702385825048_683 ! : Option<Unit>) : UInt32 { // block id: 684
        (var_1702385825048_695 ?? var_1702385825048_699)[3][3]
    }
;
    mut prop var_1702385825048_995 : ?Int32 { // block id: 996
        get() { // block id: 998
            ();
            ();
            Option<Int32>.None;
            var_1702385825048_1702
        }

        set(Value) { // block id: 1004
            [false, ((true, Int16(-114)) is Int8), ((((Int64(Int64(14))&127)..=(Int64(Int64(-38))&127):(Int64(-106)|1)), [UInt64(156), UInt64(221), UInt64(141), UInt64(45), UInt64(53), UInt64(141), UInt64(194), UInt64(155), UInt64(129), UInt64(45)], ((Int64(Int64(77))&127)..(Int64(Int64(10))&127):(Int64(95)|1)), ((Int64(Int64(-75))&127)..(Int64(Int64(-14))&127):(Int64(-49)|1)), Struct_1702385825048_35(), [true, false, true, false, true, false, false, false, false, false]) is Range<Int32>), false, ((Option<Bool>.None as Bool) is Range<Int8>), true, true, true, ((Struct_1702385825048_35(), ((Int8(Int8(-73))&127)..(Int8(Int8(-24))&127):(Int64(47)|1)), ((Int8(Int8(43))&127)..(Int8(Int8(43))&127):(Int64(-9)|1))) is VArray<Bool, $8>), (((Int16(Int16(36))&127)..(Int16(Int16(-44))&127):(Int64(95)|1)) is (Float32) -> Int8)];
            ();
            var_1702385825048_1702 = Value
        }

    };
    public open func func_1702385825048_1077(param_1702385825048_1078 : UInt32, param_1702385825048_1079 : String, param_1702385825048_1080 : Array<Bool>, param_1702385825048_1081 : Option<Bool>) : Bool { // block id: 1082
        var_1702385825048_1084;
        var_1702385825048_609.func_1702385825048_1089((Option<Int64>.Some(var_1702385825048_25) ?? var_1702385825048_71))
    }
;
    var var_1702385825048_1702 : ?Int32 = Option<Int32>.None
    static init() {
    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}



func func_1702385825048_293(param_1702385825048_294 : Float32) : Int8 { // block id: 295
    let var_1702385825048_298 : UInt8 = UInt8(UInt8(UInt8(239)));
    Int8(var_1702385825048_298)
}

public const func func_1702385825048_386(param_1702385825048_387 : Unit) : Bool { // block id: 388
    const var_1702385825048_398 : Unit = ();
    const func func_1702385825048_390(namedParam_1702385825048_391 ! : Int8, namedParam_1702385825048_392 ! : Int64, namedParam_1702385825048_393 ! : UInt64, optionalParam_1702385825048_394 ! : UInt32 = 109) : Unit { // block id: 396
        var_1702385825048_398
    }
;
    const func func_1702385825048_405<T0, T1>(namedParam_1702385825048_406 ! : UInt8, namedParam_1702385825048_407 ! : UInt64, optionalParam_1702385825048_408 ! : Int16 = -115) : UInt32 { // block id: 410
        -103;
        37
    }
;
    const var_1702385825048_414 : UInt8 = 224;
    const var_1702385825048_422 : UInt = 183;
    const func func_1702385825048_417(optionalParam_1702385825048_418 ! : Rune = r'x') : UInt64 { // block id: 420
        var_1702385825048_422
    }
;
    const func func_1702385825048_442(namedParam_1702385825048_443 ! : UInt8, namedParam_1702385825048_444 ! : Int64, optionalParam_1702385825048_445 ! : Int8 = -47, namedParam_1702385825048_447 ! : Float32) : UInt8 { // block id: 448
        141
    }
;
    const func func_1702385825048_430(param_1702385825048_431 : Int64, namedParam_1702385825048_432 ! : UInt32, optionalParam_1702385825048_433 ! : Float32 = 56.0, namedParam_1702385825048_435 ! : UInt64) : UInt8 { // block id: 436
        const var_1702385825048_438 : Int64 = 35;
        var_1702385825048_438;
        ();
        func_1702385825048_442(namedParam_1702385825048_443 : 157, namedParam_1702385825048_444 : var_1702385825048_438, namedParam_1702385825048_447 : -14.0)
    }
;
    const var_1702385825048_454 : Int = 58;
    const func func_1702385825048_402() : Int64 { // block id: 403
        const var_1702385825048_425 : Rune = r'w';
        func_1702385825048_405<UInt32, Int16>(namedParam_1702385825048_406 : var_1702385825048_414, namedParam_1702385825048_407 : func_1702385825048_417(optionalParam_1702385825048_418 : var_1702385825048_425));
        var_1702385825048_414 & func_1702385825048_430(var_1702385825048_454, namedParam_1702385825048_432 : 2, namedParam_1702385825048_435 : var_1702385825048_422);
        69
    }
;
    const var_1702385825048_464 : Int = 82;
    func_1702385825048_390(namedParam_1702385825048_391 : -117, namedParam_1702385825048_392 : func_1702385825048_402(), namedParam_1702385825048_393 : var_1702385825048_422, optionalParam_1702385825048_394 : func_1702385825048_405<UInt32, Int16>(namedParam_1702385825048_406 : func_1702385825048_442(namedParam_1702385825048_443 : 138, namedParam_1702385825048_444 : var_1702385825048_464, namedParam_1702385825048_447 : var_1702385825048_467), namedParam_1702385825048_407 : func_1702385825048_417()));
    true
}


func func_1702385825048_263(param_1702385825048_264 : UInt32) : Unit { // block id: 265
    let var_1702385825048_313 : Range<Int16> = ((Int16(Int16(UInt16(UInt16(Int16(-89)))))&127)..(Int16(Int16(Int16(Int8(84))))&127):(Int64(Int64(-64))|1));
    const var_1702385825048_562 : Int16 = -17;
    let var_1702385825048_570 : Option<Option<Range<UInt16>>> = (((Int32(Int32(38))&127)..(Int32(Int32(-111))&127):(Int64(-55)|1)) as Option<Range<UInt16>>);
    func func_1702385825048_272() : Option<Range<UInt16>> { // block id: 273
        var var_1702385825048_281 : Int32 = Int32(Int16(126));
        var loopTimeVar_1702385825048_380 : Int = 0;
        do {
            loopTimeVar_1702385825048_380++;
            try (resource = Class_1702385825048_95()) { // block id: 363
                ()
            } finally { // block id: 365
                ((Int64(var_1702385825048_71)&127)..=(Int64(var_1702385825048_25)&127):(var_1702385825048_25|1));
                var_1702385825048_288 &= var_1702385825048_288;
                var_1702385825048_281 |= Int32(64)
            };
            var_1702385825048_29[7]
        } while (((UInt32(133), var_1702385825048_281, var_1702385825048_285, var_1702385825048_288, Option<Range<UInt16>>.None)[3] <= (Float32(80.0)|>{ lambdaParameter_1702385825048_304 : Float32 => const var_1702385825048_358 : Int8 = -67; match ((try { // block id: 309
            if (false) { var_1702385825048_313 } else { ((Int16(Int16(-16))&127)..(Int16(Int16(-40))&127):(Int64(108)|1)) } ;
            UInt16(29) + var_1702385825048_67
        } catch (_) { // block id: 328
            Int16(-27);
            ();
            UInt16(250)
        } finally { // block id: 332
            Int64(46);
            var_1702385825048_67
        } is String)) {
            case caseVar_1702385825048_337 : Rune => 
                if (true) { Class_1702385825048_95() } else { var_1702385825048_99 } ;
                var_1702385825048_313;
                var_1702385825048_288
            
            case _ => 
                ((Int64(var_1702385825048_25)&127)..(Int64(var_1702385825048_71)&127):(var_1702385825048_71|1));
                var_1702385825048_288 *= Int8(-72);
                Int8(108) >> ((var_1702385825048_358) & 7)
            
        } })) && loopTimeVar_1702385825048_380 < 100 ) ;
        func func_1702385825048_382() : Struct_1702385825048_35 { // block id: 383
            var loopTimeVar_1702385825048_476 : Array<UInt64> = [UInt64(Int32(110)), UInt64(Int32(UInt8(UInt8(21)))), UInt64(UInt16(188)), UInt64(18), UInt64(83), UInt64(UInt16(UInt8(Int8(-84)))), UInt64(UInt32(174)), UInt64(119), UInt64(21), UInt64(84)];
            var loopTimeVar_1702385825048_499 : Int = 0;
            while (((for (i in loopTimeVar_1702385825048_476 where false) {
                ()
            }|>func_1702385825048_386)) && loopTimeVar_1702385825048_499 < 100 ) {
                loopTimeVar_1702385825048_499++;

            };
            var var_1702385825048_509 : (Struct_1702385825048_35, Range<Int8>, Range<Int8>) = (Struct_1702385825048_35(), ((Int8(Int8(-82))&127)..=(Int8(Int8(-125))&127):(Int64(-75)|1)), ((Int8(Int8(Int8(UInt8(64))))&127)..=(Int8(Int8(16))&127):(Int64(-64)|1)));
            let var_1702385825048_524 : (Range<Int64>, Array<UInt64>, Range<Int64>, Range<Int64>, Struct_1702385825048_35, Array<Bool>) = (((Int64(Int64(Int8(Int8(22))))&127)..=(Int64(Int64(-34))&127):(Int64(-10)|1)), [UInt64(149), UInt64(168), UInt64(UInt32(177)), UInt64(226), UInt64(UInt8(172)), UInt64(107), UInt64(238), UInt64(Int8(100)), UInt64(63), UInt64(Int64(Int8(43)))], ((Int64(Int64(4))&127)..=(Int64(Int64(73))&127):(Int64(Int32(59))|1)), ((Int64(Int64(-6))&127)..=(Int64(Int64(25))&127):(Int64(35)|1)), Struct_1702385825048_35(), [false, false, false, false, true, false, false, false, false, false]);
            try { // block id: 501
                const var_1702385825048_503 : Unit = ();
                var_1702385825048_503;
                Option<Unit>.None;
                var_1702385825048_509[0]
            } catch (_) { // block id: 520
                var_1702385825048_524[4]
            }
        }
;
        func_1702385825048_382();
        let var_1702385825048_574 : Option<Range<UInt16>> = (Int16(UInt8(UInt8(UInt8(65)))) as Range<UInt16>);
        try { // block id: 558
            UInt8(182);
            Int32(var_1702385825048_562);
            (var_1702385825048_570 ?? var_1702385825048_574)
        } finally { // block id: 580
            ();
            if (var_1702385825048_63) { // block id: 584
                UInt16(224)
            } else { // block id: 586
                var_1702385825048_67
            };
            var_1702385825048_574
        }
    }
;
    (func_1702385825048_272() ?? match (if (var_1702385825048_63) { // block id: 592
        ((UInt32(UInt32(37))&127)..=(UInt32(UInt32(41))&127):(Int64(26)|1));
        var_1702385825048_71 & var_1702385825048_71;
        var var_1702385825048_601 : Struct_1702385825048_35 = Struct_1702385825048_35();
        var_1702385825048_601
    } else if (var_1702385825048_63) { // block id: 604
        Struct_1702385825048_35()
    } else { // block id: 606
        ();
        var_1702385825048_609
    }) {
        case _ => 
            ((UInt32(UInt32(5))&127)..=(UInt32(UInt32(206))&127):(Int64(41)|1));
            UInt16(196);
            ((UInt16(UInt16(171))&127)..=(UInt16(var_1702385825048_67)&127):(Int64(14)|1))
        
    });
    let var_1702385825048_663 : UInt8 = UInt8(198);
    var_1702385825048_625.func_1702385825048_628(optionalParam_1702385825048_629 : UInt8(232) | var_1702385825048_663, namedParam_1702385825048_632 : if (true) { var_1702385825048_668 } else { var_1702385825048_668 } )
}



public func func_1702385825048_259(param_1702385825048_260 : UInt64) : Option<Unit> { // block id: 261
    let var_1702385825048_672 : (UInt32) -> Unit = func_1702385825048_263;
    var_1702385825048_625.func_1702385825048_1077(namedParam_1702385825048_678 : var_1702385825048_67, namedParam_1702385825048_679 : func_1702385825048_263, namedParam_1702385825048_682 : Float64(-116.0), namedParam_1702385825048_683 : var_1702385825048_636)|>var_1702385825048_672;
    var var_1702385825048_753 : Int16 = Int16(-105);
    let var_1702385825048_765 : Option<Unit> = Option<Unit>.None;
    if ((try { // block id: 733
        ();
        var_1702385825048_288 -= Int8(122);
        Option<Bool>.None
    } catch (e: Exception) { // block id: 739
        var_1702385825048_741
    } finally { // block id: 743
        if (false) { Option<Bool>.None } else { var_1702385825048_741 } 
    } ?? (false, var_1702385825048_753)[0])) { // block id: 756
        [var_1702385825048_636, var_1702385825048_636, Option<Unit>.Some(var_1702385825048_658), var_1702385825048_765, var_1702385825048_636, Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()), var_1702385825048_765, var_1702385825048_636][9]
    } else if ((if (var_1702385825048_63) { // block id: 778
        ();
        var var_1702385825048_781 : Unit = ();
        var_1702385825048_781;
        ((Int32(Int32(100))&127)..=(Int32(var_1702385825048_786)&127):(var_1702385825048_71|1))
    } else if (var_1702385825048_185) { // block id: 791
        if (false) { ((Int32(Int32(59))&127)..=(Int32(Int32(-115))&127):(Int64(-14)|1)) } else { ((Int32(Int32(-39))&127)..=(Int32(var_1702385825048_786)&127):(var_1702385825048_25|1)) } 
    } else { // block id: 799
        ((Int32(Int32(-94))&127)..=(Int32(Int32(-108))&127):(Int64(-70)|1))
    } is Option<Range<UInt16>>)) { // block id: 801
        (Option<Float64>.None ?? Float64(109.0));
        var_1702385825048_29[8];
        [Option<Unit>.None, Option<Unit>.None, var_1702385825048_636, var_1702385825048_636, var_1702385825048_636, var_1702385825048_765, var_1702385825048_636, var_1702385825048_765, Option<Unit>.Some(var_1702385825048_658), Option<Unit>.None][1]
    } else { // block id: 826
        var_1702385825048_636
    }
}




func func_1702385825048_81(param_1702385825048_82 : Range<Int64>) : Bool { // block id: 83
    let var_1702385825048_219 : Option<Unit> = Option<Unit>.None;
    const var_1702385825048_224 : Bool = false;
    let var_1702385825048_227 : ?Bool = Option<Bool>.Some(false);
    func func_1702385825048_90(namedParam_1702385825048_91 ! : UInt16) : Option<Unit> { // block id: 92
        const var_1702385825048_161 : UInt32 = 208;
        var_1702385825048_99.var_1702385825048_102 %= ((var_1702385825048_161) | 1);
        const var_1702385825048_175 : Bool = false;
        match (if (var_1702385825048_63) { // block id: 167
            ();
            false
        } else { // block id: 170
            false
        } || [var_1702385825048_175, false, true, false, true, var_1702385825048_63, var_1702385825048_63, var_1702385825048_63, var_1702385825048_185, false][9]) {
            case _ => 
                ();
                const var_1702385825048_194 : Unit = ();
                var_1702385825048_194;
                ()
            
        };
        let var_1702385825048_850 : Array<Bool> = [false, false, true, false, false, true, true, true, false, true];
        if ((Option<Bool>.None ?? var_1702385825048_99.var_1702385825048_207)) { // block id: 209
            ((UInt8(UInt8(130))&127)..=(UInt8(UInt8(46))&127):(Int64(-34)|1));
            const var_1702385825048_215 : Unit = ();
            try { // block id: 212
                Option<Unit>.Some(var_1702385825048_215)
            } catch (_) { // block id: 217
                var_1702385825048_219
            }
        } else if ((if (var_1702385825048_224) { var_1702385825048_227 } else { var_1702385825048_227 }  ?? var_1702385825048_99.var_1702385825048_207)) { // block id: 234
            match (Option<Unit>.None) {
                case caseVar_1702385825048_239 => 
                    Option<Unit>.Some(())
                
                case _ => 
                    var_1702385825048_219
                
            }
        } else { // block id: 247
            ();
            ();
            func func_1702385825048_251(optionalParam_1702385825048_252 ! : Option<Bool> = (((Int32(Int32(61))&127)..(Int32(Int32(-71))&127):(Int64(-54)|1)) as Bool), optionalParam_1702385825048_255 ! : Array<Bool> = [true, false, true, true, true, true, true, true, true, false]) : Option<Unit> { // block id: 257
                (var_1702385825048_836 ?? var_1702385825048_839) % ((if (true) { // block id: 843
                    var_1702385825048_839
                } else { // block id: 845
                    var_1702385825048_658;
                    UInt64(146)
                }) | 1)|>func_1702385825048_259
            }
;
            func_1702385825048_251(optionalParam_1702385825048_252 : var_1702385825048_227, optionalParam_1702385825048_255 : var_1702385825048_850)
        }
    }
;
    let var_1702385825048_875 : Option<Range<UInt16>> = (((UInt32(UInt32(221))&127)..(UInt32(UInt32(157))&127):(Int64(56)|1)) as Range<UInt16>);
    var var_1702385825048_887 : Unit = ();
    let var_1702385825048_899 : Float64 = Float64(-100.0);
    (func_1702385825048_90(namedParam_1702385825048_91 : UInt16(204)) ?? (var_1702385825048_861 ?? (var_1702385825048_741, ((Int64(Int64(97))&127)..=(Int64(Int64(-62))&127):(Int64(-44)|1)), (var_1702385825048_285, var_1702385825048_786, var_1702385825048_285, var_1702385825048_288, var_1702385825048_875), [var_1702385825048_658, (), (), var_1702385825048_658, (), (), (), var_1702385825048_887, (), ()], var_1702385825048_658, (UInt32(147), var_1702385825048_786, var_1702385825048_285, var_1702385825048_288, Option<Range<UInt16>>.None), var_1702385825048_899))[4]);
    const var_1702385825048_917 : Int = 79;
    if ((if (var_1702385825048_63) { // block id: 906
        if (var_1702385825048_63) { Option<Bool>.None } else { Option<Bool>.None } 
    } else { // block id: 911
        (((Int64(var_1702385825048_71)&127)..(Int64(var_1702385825048_25)&127):(var_1702385825048_917|1)), [var_1702385825048_839, UInt64(220), UInt64(7), var_1702385825048_839, UInt64(157), UInt64(104), UInt64(249), UInt64(170), var_1702385825048_839, var_1702385825048_839], ((Int64(Int64(49))&127)..(Int64(Int64(-5))&127):(Int64(116)|1)), var_1702385825048_668, var_1702385825048_609, [true, true, true, false, false, false, false, false, false, true]);
        ();
        Option<Bool>.Some(var_1702385825048_185)
    } is Range<UInt32>)) { // block id: 937

    } else if (try { // block id: 939
        var_1702385825048_67;
        false
    } finally { // block id: 942
        ((UInt8(UInt8(204))&127)..=(UInt8(UInt8(46))&127):(Int64(21)|1));
        let var_1702385825048_960 : UInt64 = UInt64(Int16(Int8(UInt8(86))));
        (((Int64(Int64(82))&127)..=(Int64(Int64(72))&127):(Int64(-37)|1)), [var_1702385825048_839, UInt64(63), var_1702385825048_839, UInt64(138), UInt64(6), UInt64(94), var_1702385825048_839, var_1702385825048_839, UInt64(5), var_1702385825048_960], ((Int64(Int64(116))&127)..(Int64(Int64(120))&127):(Int64(96)|1)), var_1702385825048_668, var_1702385825048_609, [false, true, false, var_1702385825048_185, true, false, var_1702385825048_63, var_1702385825048_63, false, false]);
        Int32(-96) < var_1702385825048_786
    }) { // block id: 982

    };
    let var_1702385825048_1058 : ?Float64 = Option<Float64>.None;
    var_1702385825048_985 > (var_1702385825048_99.var_1702385825048_995 ?? try { // block id: 1054
        if (var_1702385825048_185) { var_1702385825048_1058 } else { var_1702385825048_1058 } ;
        Int32(84)
    } finally { // block id: 1062
        var_1702385825048_1064;
        var_1702385825048_985
    })
}

sealed public interface Interface_1702385825048_1097 {

}

sealed public interface Interface_1702385825048_1099 {
    func func_1702385825048_1105(namedParam_1702385825048_1106 ! : Interface_1702385825048_1097, namedParam_1702385825048_1107 ! : (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>)) : Bool { // block id: 1108
        var_1702385825048_185
    }

}

public interface Interface_1702385825048_1100 {

}

public interface Interface_1702385825048_1098 <: Interface_1702385825048_1099 & Interface_1702385825048_1100 {
    func func_1702385825048_1105(namedParam_1702385825048_1106 ! : Interface_1702385825048_1097, namedParam_1702385825048_1107 ! : (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>)) : Bool { // block id: 1108
        var_1702385825048_185
    }

}

public open class Class_1702385825048_1094<T0, T1> <: Interface_1702385825048_1097 & Interface_1702385825048_1098 & Resource {
    public init() { // block id: 1096

    }
;
    public open override func func_1702385825048_1105(namedParam_1702385825048_1106 ! : Interface_1702385825048_1097, namedParam_1702385825048_1107 ! : (UInt8, Range<UInt32>, Float32, VArray<UInt32, $8>)) : Bool { // block id: 1108
        var_1702385825048_185
    }

    static init() {
    }
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}



public func func_1702385825048_56(namedParam_1702385825048_57 ! : Unit) : VArray<Bool, $8> { // block id: 58
    let var_1702385825048_1068 : (Range<Int64>) -> Bool = func_1702385825048_81;
    var var_1702385825048_1252 : Int16 = Int16(UInt8(152));
    var var_1702385825048_1287 : ?(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64) = ([(Int16(UInt16(1)) as Unit), Option<Unit>.None, Option<Unit>.Some(()), (Class_1702385825048_1094<Rune, Unit>() as Unit), Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.Some(()), ((UInt8(110), ((UInt32(UInt32(110))&127)..(UInt32(UInt32(45))&127):(Int64(94)|1)), Float32(41.0), VArray<UInt32, $8>({ i => UInt32(0)})) as Unit), Option<Unit>.None, Option<Unit>.None] as (Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64));
    VArray<Bool, $8>(repeat: ((if (var_1702385825048_63) { ((UInt16(var_1702385825048_67)&127)..=(UInt16(var_1702385825048_67)&127):(var_1702385825048_71|1)) } else { var_1702385825048_74 } ) is UInt32))
}


func func_1702385825048_49(param_1702385825048_50 : Array<UInt64>) : Array<Bool> { // block id: 51
    if (func_1702385825048_56(namedParam_1702385825048_57 : ())[3]) { // block id: 1442
        var_1702385825048_1407;
        match (var_1702385825048_839) {
            case caseVar_1702385825048_1448 : Interface_1702385825048_1098 => 
                Option<Range<UInt16>>.None;
                var_1702385825048_288 -= var_1702385825048_288
            
            case 248 | 71 | 90 | 80 => 
                if (var_1702385825048_185) { Option<Unit>.None } else { var_1702385825048_636 } ;
                var var_1702385825048_1463 : Int16 = Int16(UInt16(141));
                var_1702385825048_1463 %= ((var_1702385825048_1463) | 1)
            
            case caseVar_1702385825048_1469 => 
                ();
                var_1702385825048_1151
            
            case _ => 
                var_1702385825048_658
            
        }
    };
    let var_1702385825048_1480 : (Range<Int32>, Int32, VArray<UInt32, $8>, Range<UInt64>, (Array<UInt64>, VArray<Unit, $7>, Class_1702385825048_95, Option<Option<Range<UInt16>>>, Interface_1702385825048_1098, (Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64), Option<Int32>, Int32)) = (((Int32(Int32(-8))&127)..=(Int32(Int32(-118))&127):(Int64(99)|1)), Int32(Int32(UInt16(116))), VArray<UInt32, $8>({ i => UInt32(144)}), ((UInt64(UInt64(86))&127)..=(UInt64(UInt64(240))&127):(Int64(80)|1)), ([UInt64(UInt8(70)), UInt64(Int16(-92)), UInt64(Int16(-50)), UInt64(Int32(-82)), UInt64(UInt8(220)), UInt64(16), UInt64(UInt16(46)), UInt64(UInt32(229)), UInt64(36), UInt64(UInt8(216))], VArray<Unit, $7>(repeat: ()), Class_1702385825048_95(), Option<Option<Range<UInt16>>>.None, Class_1702385825048_1094<Rune, Unit>(), (Option<Bool>.Some(true), ((Int64(Int64(92))&127)..(Int64(Int64(125))&127):(Int64(-94)|1)), (UInt32(242), Int32(-74), UInt32(185), Int8(-60), Option<Range<UInt16>>.Some(((UInt16(UInt16(10))&127)..(UInt16(UInt16(131))&127):(Int64(13)|1)))), [(), (), (), (), (), (), (), (), (), ()], (), (UInt32(44), Int32(-37), UInt32(68), Int8(40), Option<Range<UInt16>>.None), Float64(68.0)), Option<Int32>.Some(Int32(-67)), Int32(41)));
    var_1702385825048_1480[4];
    var var_1702385825048_1588 : Option<Unit> = Option<Unit>.None;
    ((Option<Array<Array<Bool>>>.Some([[false, true, true, false, false, true, true, true, false, false], [false, false, true, false, true, false, true, true, false, true], [false, false, false, true, true, true, true, true, true, false], [false, false, true, true, true, false, false, true, true, true], [true, false, false, true, true, true, true, false, true, false], [false, true, false, true, true, true, false, false, true, false], [true, true, false, false, false, true, true, true, false, true], [true, false, true, true, false, true, false, true, true, false], [false, true, false, false, false, false, true, true, true, false], [false, true, false, true, false, true, false, true, true, false]]), var_1702385825048_1584, " 7kpz94t4`", var_1702385825048_1588)[0] ?? [[true, true, false, false, false, true, false, false, false, true], [true, false, false, false, true, true, true, false, true, true], [true, false, true, false, false, false, false, true, true, true], [true, true, true, true, true, false, true, false, true, false], [false, true, false, true, false, false, true, true, true, true], [false, false, false, false, false, false, false, false, false, false], [true, false, true, true, false, true, false, false, false, false], [false, true, true, false, true, true, false, false, true, true], [false, true, true, false, true, false, false, false, true, true], [true, false, true, true, true, false, false, false, false, false]])[8]
}



public func func_1702385825048_39(param_1702385825048_40 : Range<UInt16>) : Struct_1702385825048_35 { // block id: 41
    const var_1702385825048_43 : Unit = ();
    var_1702385825048_43;
    let var_1702385825048_1594 : (Array<UInt64>) -> Array<Bool> = func_1702385825048_49;
    let var_1702385825048_1605 : ?Interface_1702385825048_1098 = (Class_1702385825048_1094<Rune, Unit>() as Interface_1702385825048_1098);
    var var_1702385825048_1610 : ?(Bool, Int16) = Option<(Bool, Int16)>.None;
    var var_1702385825048_1620 : ?Int32 = Option<Int32>.Some(Int32(3));
    var var_1702385825048_1646 : ?(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64) = Option<(Option<Bool>, Range<Int64>, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Array<Unit>, Unit, (UInt32, Int32, UInt32, Int8, Option<Range<UInt16>>), Float64)>.Some((Option<Bool>.Some(false), ((Int64(Int64(24))&127)..(Int64(Int64(51))&127):(Int64(UInt64(168))|1)), (UInt32(Int32(99)), Int32(UInt32(97)), UInt32(37), Int8(Int8(9)), Option<Range<UInt16>>.Some(((UInt16(UInt16(88))&127)..=(UInt16(UInt16(55))&127):(Int64(67)|1)))), [(), (), (), (), (), (), (), (), (), ()], (), (UInt32(UInt32(117)), Int32(Int32(-43)), UInt32(61), Int8(-54), (Option<Unit>.Some(()) as Range<UInt16>)), Float64(Float64(Float64(109.0)))));
    if (([UInt64(17), UInt64(71), UInt64(227), UInt64(122), UInt64(53), UInt64(80), UInt64(24), UInt64(50), UInt64(165), UInt64(165)]|>var_1702385825048_1594)[0]) { // block id: 1598
        (var_1702385825048_1605 ?? Class_1702385825048_1094<Rune, Unit>());
        var_1702385825048_1610;
        var_1702385825048_609
    } else if (try { // block id: 1614
        var_1702385825048_1407
    } finally { // block id: 1616
        var_1702385825048_285--;
        var_1702385825048_1620;
        var_1702385825048_185
    }) { // block id: 1624
        (Option<Struct_1702385825048_35>.Some(var_1702385825048_609) ?? Struct_1702385825048_35())
    } else { // block id: 1633
        if (false) { // block id: 1636
            ();
            Struct_1702385825048_35()
        } else if (false) { // block id: 1640
            Struct_1702385825048_35()
        } else { // block id: 1642
            (var_1702385825048_1124, var_1702385825048_1646, var_1702385825048_1163, var_1702385825048_1166);
            Option<Int64>.None;
            var_1702385825048_609
        }
    }
}

main(): Int64 {
    try {
        try { // block id: 17
            true || false;
            ((UInt64(UInt64(28))&127)..=(UInt64(UInt64(66))&127):(var_1702385825048_25|1));
            var_1702385825048_29
        } catch (_) { // block id: 31
            var_1702385825048_29
        }[8];
        Struct_1702385825048_35.var_1702385825048_1700
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1702385825048_71*var_1702385825048_71), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_285*var_1702385825048_285), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_288*var_1702385825048_288), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_786*var_1702385825048_786), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_839*var_1702385825048_839), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_985*var_1702385825048_985), 64)
        crcCheck.updateBuffer(UInt64(var_1702385825048_1401*var_1702385825048_1401), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

