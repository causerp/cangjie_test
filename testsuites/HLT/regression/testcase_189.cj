/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args
    
var var_1667220244191_15 : Struct_1667220244191_11 = Struct_1667220244191_11()
public var var_1667220244191_50 : Float32 = Float32(Float32(Float32(Float32(Float32(-92.0)))))
public var var_1667220244191_62 : UInt32 = UInt32(UInt16(61))
public let var_1667220244191_69 : Rune = r'V'
let var_1667220244191_223 : Int8 = Int8(-24)
public var var_1667220244191_247 : Range<Int32> = ((Int32(-62)&127)..=(Int32(96)&127):(2|1))
public var var_1667220244191_267 : (Range<UInt8>, Range<Int32>, Range<Int32>, UInt8, Range<Int32>) = (((UInt8(186)&127)..(UInt8(46)&127):((-17)|1)), ((Int32(-72)&127)..(Int32(-110)&127):((-112)|1)), ((Int32(71)&127)..=(Int32(32)&127):(45|1)), UInt8(UInt8(UInt8(Int8(108)))), ((Int32(-44)&127)..=(Int32(-11)&127):((-93)|1)))
var var_1667220244191_279 : Array<Option<Int16>> = [Option<Int16>.None, (Int8(-107) as Int16), Option<Int16>.None, (Option<Unit>.None as Int16), Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, (((UInt8(UInt8(179))&127)..=(UInt8(113)&127):((120|1))) as Int16), Option<Int16>.None, ((-74.0) as Int16)]
var var_1667220244191_303 : (Option<Int16>, Range<Int64>) = (([Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, Option<Int16>.None, (() as Int16), (Option<Int8>.None as Int16), (r'5' as Int16), Option<Int16>.None, (((Int8(-20)&127)..(Int8(-66)&127):((42|1))) as Int16), (((Int16(112)&127)..(Int16(74)&127):((-38)|1)) as Int16)] as Int16), (((-88)&127)..=(Int64(Int16(Int16(-95)))&127):((Int64(Int64(Int16(4)))|1))))
public var var_1667220244191_336 : Int32 = Int32(96)
let var_1667220244191_344 : Option<Int16> = Option<Int16>.None
public let var_1667220244191_488 : UInt64 = UInt64(UInt8(191))
public let var_1667220244191_495 : Bool = (Float64(Float64(Float32(-87.0))) is Rune)
public let var_1667220244191_507 : Option<Unit> = (Class_1667220244191_402<Range<UInt64>>() as Unit)
public var var_1667220244191_546 : UInt8 = UInt8(UInt8(Int8(-86)))
var var_1667220244191_591 : Array<UInt64> = [UInt64(UInt64(162)), UInt64(239), UInt64(Int16(UInt8(101))), UInt64(156), UInt64(UInt32(UInt16(10))), UInt64(UInt64(138)), UInt64(115), UInt64(167), UInt64(135), UInt64(UInt8(UInt8(122)))]
public var var_1667220244191_798 : Class_1667220244191_402<Range<UInt64>> = Class_1667220244191_402<Range<UInt64>>()
public let var_1667220244191_810 : Bool = true
public var var_1667220244191_826 : Range<Int8> = ((Int8(109)&127)..(Int8(-71)&127):((-126)|1))
public let var_1667220244191_834 : Bool = true
public var var_1667220244191_841 : UInt16 = UInt16(Int16(24))
public let var_1667220244191_858 : Struct_1667220244191_11 = Struct_1667220244191_11()
public let var_1667220244191_1067 : Interface_1667220244191_405<Range<UInt64>, Option<Range<Int32>>> = Class_1667220244191_402<Range<UInt64>>()
var var_1667220244191_1114 : Int32 = Int32(-87)
public let var_1667220244191_1622 : UInt8 = UInt8(150)
public let var_1667220244191_1728 : ?Unit = Option<Unit>.None
public var var_1667220244191_1731 : Float32 = Float32(-106.0)
let var_1667220244191_1747 : Option<Option<Int16>> = ((() as Int16) as Option<Int16>)
public let var_1667220244191_1763 : Array<Option<Unit>> = [Option<Unit>.None, (((Int64((-5))&127)..=((-35)&127):(((-96)|1))) as Unit), Option<Unit>.None, (Class_1667220244191_402<Range<UInt64>>() as Unit), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, (((UInt32(33)&127)..(UInt32(47)&127):((Int64(UInt64(117))|1))) as Unit), Option<Unit>.None, (((UInt8(104)&127)..(UInt8(Int8(19))&127):((Int64(Int32(-104))|1))) as Unit)]
let var_1667220244191_1967 : (Array<UInt64>, Array<UInt64>, Array<Int16>, String, Range<Int16>, Range<Int16>) = ([UInt64(UInt64(82)), UInt64(Int8(93)), UInt64(UInt64(221)), UInt64(126), UInt64(43), UInt64(90), UInt64(1), UInt64(Int32(Int8(37))), UInt64(UInt8(UInt8(3))), UInt64(132)], [UInt64(Int32(-27)), UInt64(68), UInt64(168), UInt64(UInt32(107)), UInt64(216), UInt64(27), UInt64(Int8(-95)), UInt64(102), UInt64(114), UInt64(247)], [Int16(77), Int16(-111), Int16(Int16(29)), Int16(UInt8(83)), Int16(Int8(Int8(-66))), Int16(Int16(Int8(38))), Int16(82), Int16(UInt8(139)), Int16(UInt16(169)), Int16(Int16(-128))], """
~WzGQ
9sLi[
""", ((Int16(74)&127)..=(Int16(-21)&127):(49|1)), ((Int16(110)&127)..(Int16(54)&127):(((-46)|1))))
public var var_1667220244191_2032 : Array<Int16> = [Int16(-72), Int16(-35), Int16(-64), Int16(29), Int16(40), Int16(-91), Int16(-76), Int16(-82), Int16(-22), Int16(121)]
public var var_1667220244191_2172 : ?UInt8 = ("""
,KM+_
n %fa{
""" as UInt8)
var var_1667220244191_2197 : Float64 = (-1.0)
public let var_1667220244191_2339 : Int64 = 93
public struct Struct_1667220244191_11 {
    public init() { // block id: 13

    }
;
    private static var var_1667220244191_47 : Unit = ();
    public func func_1667220244191_18(namedParam_1667220244191_19 ! : Bool, optionalParam_1667220244191_20 ! : Int8 = Int8(113)) : Unit { // block id: 22
        let var_1667220244191_43 : UInt64 = UInt64(UInt64(122));
        (Option<Unit>.None ?? try { // block id: 32
            var var_1667220244191_34 : Rune = r'Y';
            var_1667220244191_34;
            Float32(-72.0) * Float32(87.0);
            (UInt32(120), r'e', var_1667220244191_43, var_1667220244191_47, var_1667220244191_50, Int32(-30), var_1667220244191_43, var_1667220244191_43)
        } finally { // block id: 59
            var_1667220244191_62 /= ((UInt32(126)) | 1);
            (UInt32(72), var_1667220244191_69, UInt64(226), (), Float32(-94.0), Int32(-69), UInt64(144), UInt64(72))
        }[3])
    }
;
    let var_1667220244191_861 : ((Array<Option<Unit>>, Range<UInt32>, Float32), Array<Array<UInt64>>, Int64, Int32) = (([Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None], ((UInt32(249)&127)..(UInt32(82)&127):(((-125)|1))), Float32(40.0)), [[UInt64(7), UInt64(191), UInt64(254), UInt64(253), UInt64(140), UInt64(211), UInt64(20), UInt64(74), UInt64(236), UInt64(203)], [UInt64(160), UInt64(109), UInt64(110), UInt64(31), UInt64(106), UInt64(88), UInt64(174), UInt64(24), UInt64(243), UInt64(32)], [UInt64(117), UInt64(158), UInt64(140), UInt64(182), UInt64(44), UInt64(60), UInt64(46), UInt64(208), UInt64(141), UInt64(188)], [UInt64(147), UInt64(62), UInt64(182), UInt64(251), UInt64(234), UInt64(136), UInt64(148), UInt64(175), UInt64(99), UInt64(211)], [UInt64(17), UInt64(233), UInt64(161), UInt64(66), UInt64(159), UInt64(29), UInt64(58), UInt64(239), UInt64(215), UInt64(128)], [UInt64(186), UInt64(4), UInt64(92), UInt64(9), UInt64(248), UInt64(205), UInt64(31), UInt64(229), UInt64(77), UInt64(34)], [UInt64(90), UInt64(209), UInt64(7), UInt64(171), UInt64(166), UInt64(227), UInt64(198), UInt64(117), UInt64(215), UInt64(32)], [UInt64(155), UInt64(191), UInt64(129), UInt64(222), UInt64(2), UInt64(171), UInt64(112), UInt64(194), UInt64(175), UInt64(16)], [UInt64(251), UInt64(134), UInt64(44), UInt64(82), UInt64(179), UInt64(203), UInt64(14), UInt64(2), UInt64(77), UInt64(92)], [UInt64(187), UInt64(157), UInt64(43), UInt64(231), UInt64(150), UInt64(118), UInt64(69), UInt64(194), UInt64(111), UInt64(186)]], 2, Int32(-48));
    public static let var_1667220244191_1000 : (UInt16, (UInt32, Rune, UInt64, Unit, Float32, Int32, UInt64, UInt64), (UInt8, Bool, String, Int32, Unit, Bool), Array<Int16>, (UInt16, UInt64, (Array<Array<UInt64>>, Float64, Bool, Range<Int32>), Int32, Bool)) = (UInt16(170), (UInt32(178), r'L', UInt64(119), (), Float32(95.0), Int32(-109), UInt64(25), UInt64(249)), (UInt8(160), false, """
O!v]M
--H6_
""", Int32(20), (), true), [Int16(51), Int16(101), Int16(71), Int16(103), Int16(88), Int16(54), Int16(50), Int16(84), Int16(112), Int16(-37)], (UInt16(109), UInt64(97), ([[UInt64(100), UInt64(54), UInt64(196), UInt64(12), UInt64(209), UInt64(128), UInt64(75), UInt64(131), UInt64(171), UInt64(47)], [UInt64(189), UInt64(116), UInt64(186), UInt64(97), UInt64(46), UInt64(121), UInt64(146), UInt64(227), UInt64(21), UInt64(145)], [UInt64(60), UInt64(42), UInt64(249), UInt64(47), UInt64(110), UInt64(175), UInt64(159), UInt64(97), UInt64(240), UInt64(56)], [UInt64(106), UInt64(88), UInt64(128), UInt64(206), UInt64(149), UInt64(58), UInt64(164), UInt64(96), UInt64(177), UInt64(203)], [UInt64(151), UInt64(224), UInt64(12), UInt64(28), UInt64(61), UInt64(5), UInt64(76), UInt64(177), UInt64(111), UInt64(22)], [UInt64(124), UInt64(152), UInt64(38), UInt64(130), UInt64(203), UInt64(152), UInt64(27), UInt64(54), UInt64(0), UInt64(116)], [UInt64(216), UInt64(185), UInt64(129), UInt64(129), UInt64(207), UInt64(65), UInt64(181), UInt64(167), UInt64(41), UInt64(174)], [UInt64(14), UInt64(54), UInt64(34), UInt64(48), UInt64(216), UInt64(131), UInt64(229), UInt64(153), UInt64(56), UInt64(161)], [UInt64(225), UInt64(104), UInt64(9), UInt64(246), UInt64(219), UInt64(31), UInt64(251), UInt64(172), UInt64(101), UInt64(51)], [UInt64(160), UInt64(177), UInt64(186), UInt64(153), UInt64(95), UInt64(89), UInt64(239), UInt64(202), UInt64(93), UInt64(192)]], (-108.0), false, ((Int32(56)&127)..=(Int32(58)&127):((11|1)))), Int32(-76), true));
    private static prop var_1667220244191_1123 : (UInt32, Rune, UInt64, Unit, Float32, Int32, UInt64, UInt64) { // block id: 1124
        get() { // block id: 1126
            ();
            ();
            (UInt32(208), r'o', UInt64(95), (), Float32(-98.0), Int32(80), UInt64(Int32(UInt16(55))), UInt64(58))
        }

    };
    public init(param_1667220244191_950 : (UInt32, Rune, UInt64, Unit, Float32, Int32, UInt64, UInt64), param_1667220244191_951 : Array<Option<Unit>>, optionalParam_1667220244191_952 ! : Interface_1667220244191_407<Range<Int32>, Range<Int64>> = Class_1667220244191_402<Range<UInt64>>(), namedParam_1667220244191_954 ! : Array<Int16>) { // block id: 955
        (Option<Unit>.None ?? ());
        var_1667220244191_798.var_1667220244191_967 += Int32((Option<UInt8>.None ?? UInt8(96)));
        var var_1667220244191_994 : Option<Bool> = Option<Bool>.None;
        if ((!(var_1667220244191_994 ?? var_1667220244191_834))) { var_1667220244191_1000[1] } else { match (match (var_1667220244191_826) {
            case caseVar_1667220244191_1049 : Interface_1667220244191_409 => 
                var_1667220244191_47;
                UInt64(124)
            
            case caseVar_1667220244191_1055 : Range<UInt64> => 
                ();
                -UInt64(127)
            
            case _ : Range<UInt8> => 
                var_1667220244191_488
            
            case _ => 
                var_1667220244191_1067;
                var_1667220244191_488
            
        }) {
            case 108 | 107 | 89 | 35 => 
                var_1667220244191_47;
                var_1667220244191_47;
                let var_1667220244191_1076 : (UInt32, Rune, UInt64, Unit, Float32, Int32, UInt64, UInt64) = (UInt32(188), r'M', UInt64(21), (), Float32(119.0), Int32(Int16(Int8(Int8(9)))), UInt64(UInt16(Int8(UInt8(137)))), UInt64(32));
                var_1667220244191_1076
            
            case 56 | 39 | 214 | 102 => 
                (var_1667220244191_62, r'a', UInt64(99), var_1667220244191_47, var_1667220244191_50, Int32(-68), UInt64(46), var_1667220244191_488)
            
            case 166 => 
                (UInt32(201), r'u', var_1667220244191_488, var_1667220244191_47, var_1667220244191_50, var_1667220244191_1114, UInt64(231), var_1667220244191_488)
            
            case _ => 
                var_1667220244191_47;
                ();
                var_1667220244191_1123
            
        } } 
    }
;
    static var var_1667220244191_1482 : Option<Bool> = Option<Bool>.None;
    private static mut prop var_1667220244191_1525 : (Array<Array<UInt64>>, Float64, Bool, Range<Int32>) { // block id: 1526
        get() { // block id: 1528
            ();
            ([[UInt64(233), UInt64(42), UInt64(22), UInt64(84), UInt64(69), UInt64(77), UInt64(226), UInt64(185), UInt64(195), UInt64(9)], [UInt64(187), UInt64(128), UInt64(63), UInt64(64), UInt64(0), UInt64(140), UInt64(143), UInt64(94), UInt64(65), UInt64(111)], [UInt64(117), UInt64(142), UInt64(137), UInt64(4), UInt64(59), UInt64(165), UInt64(24), UInt64(104), UInt64(26), UInt64(25)], [UInt64(195), UInt64(28), UInt64(95), UInt64(163), UInt64(178), UInt64(219), UInt64(39), UInt64(92), UInt64(244), UInt64(180)], [UInt64(1), UInt64(223), UInt64(110), UInt64(234), UInt64(59), UInt64(55), UInt64(122), UInt64(252), UInt64(60), UInt64(216)], [UInt64(142), UInt64(31), UInt64(37), UInt64(95), UInt64(115), UInt64(168), UInt64(244), UInt64(153), UInt64(167), UInt64(26)], [UInt64(198), UInt64(156), UInt64(165), UInt64(200), UInt64(204), UInt64(106), UInt64(146), UInt64(143), UInt64(137), UInt64(198)], [UInt64(37), UInt64(73), UInt64(56), UInt64(118), UInt64(73), UInt64(53), UInt64(34), UInt64(160), UInt64(35), UInt64(34)], [UInt64(122), UInt64(130), UInt64(235), UInt64(207), UInt64(199), UInt64(239), UInt64(107), UInt64(223), UInt64(77), UInt64(247)], [UInt64(183), UInt64(69), UInt64(180), UInt64(134), UInt64(95), UInt64(61), UInt64(15), UInt64(218), UInt64(39), UInt64(146)]], Float64(Float32(Float32(23.0))), true, ((Int32(-114)&127)..(Int32(53)&127):((102|1))))
        }

        set(Value) { // block id: 1612
            ()
        }

    };
    private static prop var_1667220244191_1615 : Range<Int32> { // block id: 1616
        get() { // block id: 1618
            ((Int32(88)&127)..(Int32(-128)&127):(19|1))
        }

    };
    public init(namedParam_1667220244191_1473 ! : (Array<UInt64>) -> Float32) { // block id: 1476
        var_1667220244191_546 -= if ((var_1667220244191_1482 ?? true)) { // block id: 1485
            var_1667220244191_546
        } else { // block id: 1487
            let var_1667220244191_1489 : Class_1667220244191_402<Range<UInt64>> = Class_1667220244191_402<Range<UInt64>>();
            var_1667220244191_1489;
            var_1667220244191_546
        };
        var var_1667220244191_1648 : UInt64 = UInt64(Int8(UInt8(189)));
        match (((Option<Range<UInt8>>.None ?? ((UInt8(66)&127)..(UInt8(83)&127):((-102)|1))), (Option<Range<Int32>>.None ?? ((Int32(-72)&127)..=(Int32(113)&127):((-7)|1))), try { // block id: 1509
            ();
            ((UInt32(174)&127)..(var_1667220244191_62&127):(((-35)|1)));
            ((Int32(-80)&127)..(var_1667220244191_1114&127):((50|1)))
        } catch (_) { // block id: 1519
            r'i';
            var_1667220244191_247
        } finally { // block id: 1522
            ();
            var_1667220244191_1525;
            var_1667220244191_1615
        }, var_1667220244191_1622 / ((UInt8(86)) | 1), ((Int32(96)&127)..(Int32(91)&127):((-6)|1)))) {
            case (_,_ : Interface_1667220244191_409,caseVar_1667220244191_1628,caseVar_1667220244191_1629 : Float32,caseVar_1667220244191_1630 : Array<UInt64>) => 
                let var_1667220244191_1636 : Interface_1667220244191_408 = Class_1667220244191_402<Range<UInt64>>();
                if (var_1667220244191_495) { Class_1667220244191_402<Range<UInt64>>() } else { var_1667220244191_1636 } ;
                var_1667220244191_47
            
            case _ : (UInt8, Bool, String, Int32, Unit, Bool) => 
                var_1667220244191_47
            
            case (_ : Int32,_ : Range<Int64>,_,_ : Int32,_ : Array<Option<Unit>>) => 
                var_1667220244191_1648 %= ((UInt64(157)) | 1)
            
            case _ : Range<Int16> => 
                var_1667220244191_47
            
            case _ => 
                var var_1667220244191_1661 : UInt8 = UInt8(253);
                var_1667220244191_1661++;
                var_1667220244191_47
            
        };
        let var_1667220244191_1675 : Float64 = 28.0;
        var loopTimeVar_1667220244191_1714 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        for (i in loopTimeVar_1667220244191_1714 where if (UInt8(92) > UInt8(7)) { // block id: 1669
            var_1667220244191_841 /= ((var_1667220244191_841) | 1);
            var var_1667220244191_1678 : Float64 = (-124.0);
            var_1667220244191_1675 >= var_1667220244191_1678
        } else if (try { // block id: 1681
            var_1667220244191_834
        } finally { // block id: 1683
            ();
            let var_1667220244191_1686 : Option<Range<Int32>> = (((Int8(95)&127)..(Int8(-55)&127):((-20)|1)) as Range<Int32>);
            var_1667220244191_1686;
            true
        }) { // block id: 1690
            ();
            var_1667220244191_47;
            true
        } else { // block id: 1694
            [UInt64(186), var_1667220244191_488, var_1667220244191_1648, UInt64(40), UInt64(201), UInt64(206), var_1667220244191_488, UInt64(182), UInt64(203), var_1667220244191_488];
            !var_1667220244191_810
        }) {
            var loopTimeVar_1667220244191_1713 : Int64 = 0;
            do {
                loopTimeVar_1667220244191_1713++;

            } while ((true) && loopTimeVar_1667220244191_1713 < 100 ) 
        }
    }

}




public func func_1667220244191_182(param_1667220244191_183 : Range<Int8>) : Range<UInt16> { // block id: 184
    var var_1667220244191_192 : Int16 = Int16(-107);
    let var_1667220244191_201 : Bool = ("d(F$AQth7}" is UInt16);
    var var_1667220244191_208 : Int8 = Int8(-46);
    var var_1667220244191_219 : Int8 = Int8(45);
    if (try { // block id: 189
        var_1667220244191_192 |= var_1667220244191_192;
        let var_1667220244191_196 : Bool = false;
        var_1667220244191_196
    } finally { // block id: 198
        !var_1667220244191_201
    }) { (if (false) { [var_1667220244191_208, Int8(87), var_1667220244191_208, Int8(103), Int8(-108), var_1667220244191_208, var_1667220244191_208, var_1667220244191_208, var_1667220244191_208, var_1667220244191_219] } else { [var_1667220244191_223, Int8(42), var_1667220244191_223, var_1667220244191_219, var_1667220244191_223, var_1667220244191_219, Int8(-121), Int8(26), Int8(-76), var_1667220244191_219] } ) } else { [Int8(103), Int8(-94), Int8(-111), Int8(88), Int8(-54), Int8(-93), var_1667220244191_223, Int8(-75), var_1667220244191_219, Int8(37)] } [0];
    var_1667220244191_247;
    ((UInt16(211)&127)..(UInt16(94)&127):(67|1))
}



public interface Interface_1667220244191_409 {

}

public interface Interface_1667220244191_408 <: Interface_1667220244191_409 {

}

public interface Interface_1667220244191_407<T0, T1> <: Interface_1667220244191_408 {

}

public interface Interface_1667220244191_406 <: Interface_1667220244191_407<Range<Int32>, Range<Int64>> & Interface_1667220244191_408 {
    func func_1667220244191_801() : Unit { // block id: 802
        (Option<Unit>.None ?? if (if (true) { // block id: 808
            var_1667220244191_810
        } else { // block id: 812
            ();
            Int8(-81) <= Int8(-117)
        }) { // block id: 817
            Class_1667220244191_402<Range<UInt64>>();
            var_1667220244191_495;
            ()
        } else if (try { // block id: 822
            if (false) { var_1667220244191_826 } else { var_1667220244191_826 } ;
            ((UInt32(128)&127)..(UInt32(86)&127):(20|1));
            !var_1667220244191_810
        } catch (_) { // block id: 832
            var_1667220244191_834
        }) { // block id: 836
            if (true) { ((var_1667220244191_841&127)..(var_1667220244191_841&127):(((-41)|1))) } else { ((UInt16(139)&127)..(var_1667220244191_841&127):((81|1))) } ;
            ()
        })
    }

}

public interface Interface_1667220244191_405<T0, T1> <: Interface_1667220244191_406 {

}

public open class Class_1667220244191_402<T0> <: Interface_1667220244191_405<Range<UInt64>, Option<Range<Int32>>> & Resource {
    public init() { // block id: 404

    }
;
    public static let var_1667220244191_412 : (Unit, Rune, UInt16, Range<UInt64>, (UInt8, Bool, String, Int32, Unit, Bool)) = ((), r'V', UInt16(206), ((UInt64(149)&127)..(UInt64(108)&127):(((-92)|1))), (UInt8(148), true, """
kcc39
n_O8z
""", Int32(-124), (), false));
    public mut prop var_1667220244191_474 : UInt64 { // block id: 475
        get() { // block id: 477
            Int16(Int16(UInt8(UInt8(232))));
            UInt64(144);
            var_1667220244191_2341
        }

        set(Value) { // block id: 485
            var_1667220244191_2341 = Value
        }

    };
    public static let var_1667220244191_565 : Unit = ();
    public static let var_1667220244191_780 : (UInt32, Rune, UInt64, Unit, Float32, Int32, UInt64, UInt64) = (UInt32(48), r'O', UInt64(90), (), Float32(75.0), Int32(-88), UInt64(108), UInt64(187));
    public var var_1667220244191_919 : Bool = true;
    public mut prop var_1667220244191_967 : Int32 { // block id: 968
        get() { // block id: 970
            Int32(UInt8(214))
        }

        set(Value) { // block id: 975
            ();
            ()
        }

    };
    var var_1667220244191_2341 : UInt64 = UInt64(118)
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

func func_1667220244191_396<T0, T1>(param_1667220244191_397 : Array<UInt64>) : Float32 { // block id: 398
    Class_1667220244191_402<Range<UInt64>>.var_1667220244191_412[4];
    let var_1667220244191_439 : (Array<Array<UInt64>>, Float64, Bool, Range<Int32>) = ([[UInt64(13), UInt64(148), UInt64(37), UInt64(163), UInt64(92), UInt64(84), UInt64(117), UInt64(115), UInt64(166), UInt64(192)], [UInt64(67), UInt64(143), UInt64(178), UInt64(198), UInt64(237), UInt64(226), UInt64(4), UInt64(121), UInt64(229), UInt64(197)], [UInt64(150), UInt64(21), UInt64(218), UInt64(250), UInt64(179), UInt64(229), UInt64(249), UInt64(138), UInt64(194), UInt64(12)], [UInt64(166), UInt64(206), UInt64(6), UInt64(124), UInt64(229), UInt64(55), UInt64(43), UInt64(13), UInt64(89), UInt64(100)], [UInt64(44), UInt64(100), UInt64(49), UInt64(21), UInt64(118), UInt64(160), UInt64(57), UInt64(51), UInt64(18), UInt64(90)], [UInt64(123), UInt64(189), UInt64(201), UInt64(15), UInt64(0), UInt64(60), UInt64(157), UInt64(235), UInt64(15), UInt64(234)], [UInt64(4), UInt64(22), UInt64(116), UInt64(82), UInt64(51), UInt64(173), UInt64(100), UInt64(219), UInt64(64), UInt64(130)], [UInt64(68), UInt64(247), UInt64(105), UInt64(56), UInt64(157), UInt64(73), UInt64(4), UInt64(88), UInt64(43), UInt64(55)], [UInt64(189), UInt64(136), UInt64(211), UInt64(107), UInt64(164), UInt64(204), UInt64(205), UInt64(217), UInt64(147), UInt64(101)], [UInt64(27), UInt64(12), UInt64(141), UInt64(53), UInt64(32), UInt64(166), UInt64(162), UInt64(20), UInt64(15), UInt64(41)]], 97.0, true, ((Int32(Int16(Int8(82)))&127)..(Int32(UInt16(UInt16(200)))&127):(((-30)|1))));
    let var_1667220244191_454 : Unit = ();
    var var_1667220244191_471 : Class_1667220244191_402<Range<UInt64>> = Class_1667220244191_402<Range<UInt64>>();
    var var_1667220244191_531 : Option<Unit> = Option<Unit>.None;
    if (try { // block id: 433
        ();
        var_1667220244191_62 >>= ((var_1667220244191_62) & 7);
        var_1667220244191_439
    } finally { // block id: 452
        var_1667220244191_454;
        var_1667220244191_439
    }[2]) { // block id: 458
        var var_1667220244191_461 : Int32 = Int32(Int16(UInt16(UInt8(74))));
        var_1667220244191_461 << ((var_1667220244191_461) & 7);
        Float32(-62.0)
    } else if ((var_1667220244191_471.var_1667220244191_474) >= (var_1667220244191_488 / ((var_1667220244191_488) | 1))) { // block id: 492
        var loopTimeVar_1667220244191_543 : Int64 = 0;
        while ((var_1667220244191_495) && loopTimeVar_1667220244191_543 < 100 ) {
            loopTimeVar_1667220244191_543++;
            let var_1667220244191_524 : Option<Unit> = Option<Unit>.Some(());
            if (true) { [Option<Unit>.Some(()), var_1667220244191_507, Option<Unit>.None, var_1667220244191_507, var_1667220244191_507, Option<Unit>.Some(var_1667220244191_454), var_1667220244191_507, Option<Unit>.Some(var_1667220244191_454), Option<Unit>.None, var_1667220244191_507] } else { [Option<Unit>.Some(()), var_1667220244191_524, var_1667220244191_524, Option<Unit>.Some(var_1667220244191_454), var_1667220244191_531, Option<Unit>.Some(var_1667220244191_454), var_1667220244191_531, Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.Some(())] } ;
            var_1667220244191_454
        };
        var_1667220244191_546 <<= ((UInt8(159)) & 7);
        -var_1667220244191_50
    } else { // block id: 553
        match (Option<Unit>.Some(var_1667220244191_454)) {
            case _ => 
                var_1667220244191_531;
                var_1667220244191_546++
            
        };
        Class_1667220244191_402<Range<UInt64>>.var_1667220244191_565;
        Float32(78.0)
    }
}

public func func_1667220244191_386(param_1667220244191_387 : String) : Array<Option<Unit>> { // block id: 388
    let var_1667220244191_574 : Unit = ();
    let var_1667220244191_642 : (Array<Array<UInt64>>, Float64, Bool, Range<Int32>) = ([[UInt64(161), UInt64(67), UInt64(233), UInt64(15), UInt64(201), UInt64(43), UInt64(104), UInt64(85), UInt64(22), UInt64(186)], [UInt64(247), UInt64(187), UInt64(204), UInt64(107), UInt64(86), UInt64(109), UInt64(244), UInt64(121), UInt64(37), UInt64(223)], [UInt64(48), UInt64(57), UInt64(UInt64(111)), UInt64(Int16(-1)), UInt64(UInt16(134)), UInt64(15), UInt64(UInt64(189)), UInt64(Int32(-10)), UInt64(UInt64(83)), UInt64(Int32(-112))], [UInt64(242), UInt64(13), UInt64(213), UInt64(223), UInt64(168), UInt64(247), UInt64(6), UInt64(0), UInt64(22), UInt64(158)], [UInt64(42), UInt64(133), UInt64(230), UInt64(221), UInt64(224), UInt64(210), UInt64(46), UInt64(154), UInt64(208), UInt64(27)], [UInt64(Int32(8)), UInt64(Int32(-14)), UInt64(Int8(-91)), UInt64(156), UInt64(30), UInt64((-92)), UInt64(UInt64(48)), UInt64(Int8(126)), UInt64(13), UInt64(31)], [UInt64(41), UInt64(254), UInt64(204), UInt64(Int8(46)), UInt64(251), UInt64(UInt64(182)), UInt64(122), UInt64(Int8(15)), UInt64((-65)), UInt64(100)], [UInt64(31), UInt64(UInt8(168)), UInt64(UInt16(32)), UInt64(UInt16(71)), UInt64(UInt8(235)), UInt64(175), UInt64(160), UInt64(222), UInt64(42), UInt64(211)], [UInt64(220), UInt64(186), UInt64(199), UInt64(156), UInt64(211), UInt64(11), UInt64(92), UInt64(180), UInt64(252), UInt64(209)], [UInt64(Int32(28)), UInt64(149), UInt64(185), UInt64(214), UInt64(95), UInt64(97), UInt64(108), UInt64(142), UInt64(UInt32(157)), UInt64(174)]], (-25.0), (((UInt64(UInt64(216))&127)..=(UInt64(UInt8(92))&127):((Int64((-72))|1))) is Range<Int32>), ((Int32(110)&127)..(Int32(106)&127):(33|1)));
    let var_1667220244191_753 : Unit = ();
    func func_1667220244191_392() : Array<Unit> { // block id: 393
        ();
        [UInt64(176), UInt64(215), UInt64(92), UInt64(245), UInt64(138), UInt64(176), UInt64(68), UInt64(127), UInt64(7), UInt64(148)]|>func_1667220244191_396<Float32, Bool>;
        var loopTimeVar_1667220244191_634 : Int64 = 0;
        var var_1667220244191_741 : Int32 = Int32(UInt16(UInt8(Int8(UInt8(32)))));
        var loopTimeVar_1667220244191_755 : Range<UInt64> = ((UInt64(UInt8(Int8(UInt8(95))))&127)..=(UInt64(227)&127):((Int64(UInt8(Int8(UInt8(154))))|1)));
        var loopTimeVar_1667220244191_775 : Int64 = 0;
        [match (Option<Unit>.Some(var_1667220244191_574)) {
            case _ => 
                var_1667220244191_574
            
            case _ : Array<Array<UInt64>> => 
                ()
            
            case caseVar_1667220244191_586 => 
                if (false) { var_1667220244191_591 } else { [UInt64(26), UInt64(45), UInt64(190), UInt64(118), UInt64(168), UInt64(27), UInt64(125), UInt64(63), UInt64(119), UInt64(228)] } ;
                r'h';
                var_1667220244191_574
            
            case _ : Range<UInt32> => 
                ();
                var_1667220244191_574
            
            case _ => 
                ((Int16(124)&127)..=(Int16(-95)&127):(10|1));
                var_1667220244191_574
            
        }, try (resource = Class_1667220244191_402<Range<UInt64>>()) { // block id: 624

        } catch (_) { // block id: 625
            var_1667220244191_574
        }, while ((var_1667220244191_223 > var_1667220244191_223) && loopTimeVar_1667220244191_634 < 100 ) {
            loopTimeVar_1667220244191_634++;
            Class_1667220244191_402<Range<UInt64>>()
        }, for (i in loopTimeVar_1667220244191_755 where (UInt16(235), UInt64(13), var_1667220244191_642, var_1667220244191_741, var_1667220244191_495)[4]) {
            var_1667220244191_546--;
            var_1667220244191_753
        }, while ((var_1667220244191_495) && loopTimeVar_1667220244191_775 < 100 ) {
            loopTimeVar_1667220244191_775++;
            var_1667220244191_753;
            if (var_1667220244191_495) { var_1667220244191_507 } else { Option<Unit>.None } 
        }, Class_1667220244191_402<Range<UInt64>>.var_1667220244191_780[3], (), (), Class_1667220244191_402<Range<UInt64>>.var_1667220244191_565, var_1667220244191_798.func_1667220244191_801()]
    }
;
    func_1667220244191_392()[5];
    var_1667220244191_858.var_1667220244191_861[0][0]
}








func func_1667220244191_160(param_1667220244191_161 : Range<Int16>) : Array<Option<Int16>> { // block id: 162
    func func_1667220244191_165(param_1667220244191_166 : Array<UInt64>, param_1667220244191_167 : Range<UInt16>, param_1667220244191_168 : UInt8) : Bool { // block id: 169
        let var_1667220244191_171 : Bool = (Float64(Float64(Float64(Float32(-17.0)))) is UInt32);
        var_1667220244191_171
    }
;
    var var_1667220244191_251 : (Range<Int8>) -> Range<UInt16> = { lambdaParameter_1667220244191_254 : Range<Int8> => ((UInt16(58)&127)..=(UInt16(Int8(UInt8(181)))&127):((Int64(113)|1))) };
    let var_1667220244191_932 : ?Struct_1667220244191_11 = Option<Struct_1667220244191_11>.Some(Struct_1667220244191_11());
    func func_1667220244191_348(optionalParam_1667220244191_349 ! : Range<Int8> = ((Int8(UInt8(22))&127)..(Int8(105)&127):(((-118)|1))), optionalParam_1667220244191_355 ! : Option<Int8> = (UInt8(59) as Int8)) : Option<Int16> { // block id: 358
        let var_1667220244191_886 : (String) -> Array<Option<Unit>> = func_1667220244191_386;
        let var_1667220244191_889 : String = "|HOm>wNxZ7";
        let var_1667220244191_900 : Unit = ();
        let var_1667220244191_927 : ??Struct_1667220244191_11 = Option<Option<Struct_1667220244191_11>>.Some((((Int8(-88)&127)..(Int8(-38)&127):((-70)|1)) as Struct_1667220244191_11));
        let var_1667220244191_941 : Array<Struct_1667220244191_11> = [Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11((UInt32(Int8(120)), r'F', UInt64(98), (), Float32(Float32(-88.0)), Int32(114), UInt64(Int16(-36)), UInt64(Int16(-23))), [Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.None, ([Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11(), Struct_1667220244191_11()] as Unit), Option<Unit>.Some(()), ((((-41)&127)..(33&127):((78|1))) as Unit), (Int8(-68) as Unit), Option<Unit>.None, ([Int8(49), Int8(-46), Int8(-44), Int8(-117), Int8(-44), Int8(8), Int8(-85), Int8(51), Int8(-54), Int8(-50)] as Unit), (Option<UInt8>.None as Unit)], optionalParam_1667220244191_952 : Class_1667220244191_402<Range<UInt64>>(), namedParam_1667220244191_954 : [Int16(-9), Int16(35), Int16(51), Int16(3), Int16(-43), Int16(60), Int16(94), Int16(-1), Int16(86), Int16(84)]), Struct_1667220244191_11((UInt32(89), r'i', UInt64(UInt16(62)), (), Float32(-77.0), Int32(Int16(68)), UInt64(11), UInt64(Int16(92))), [Option<Unit>.Some(()), ((UInt16(32), UInt64(238), ([[UInt64(90), UInt64(111), UInt64(84), UInt64(78), UInt64(69), UInt64(51), UInt64(198), UInt64(173), UInt64(3), UInt64(8)], [UInt64(162), UInt64(135), UInt64(179), UInt64(64), UInt64(169), UInt64(1), UInt64(20), UInt64(215), UInt64(79), UInt64(158)], [UInt64(102), UInt64(140), UInt64(200), UInt64(162), UInt64(77), UInt64(53), UInt64(42), UInt64(251), UInt64(1), UInt64(173)], [UInt64(223), UInt64(141), UInt64(169), UInt64(182), UInt64(126), UInt64(3), UInt64(83), UInt64(117), UInt64(193), UInt64(220)], [UInt64(202), UInt64(27), UInt64(162), UInt64(43), UInt64(131), UInt64(5), UInt64(187), UInt64(92), UInt64(176), UInt64(77)], [UInt64(42), UInt64(38), UInt64(170), UInt64(20), UInt64(123), UInt64(2), UInt64(184), UInt64(36), UInt64(151), UInt64(133)], [UInt64(153), UInt64(143), UInt64(226), UInt64(186), UInt64(240), UInt64(136), UInt64(172), UInt64(50), UInt64(53), UInt64(222)], [UInt64(37), UInt64(36), UInt64(136), UInt64(160), UInt64(32), UInt64(250), UInt64(144), UInt64(32), UInt64(3), UInt64(153)], [UInt64(33), UInt64(153), UInt64(7), UInt64(162), UInt64(29), UInt64(134), UInt64(60), UInt64(211), UInt64(148), UInt64(120)], [UInt64(14), UInt64(67), UInt64(43), UInt64(252), UInt64(168), UInt64(176), UInt64(106), UInt64(187), UInt64(178), UInt64(164)]], (-87.0), false, ((Int32(-71)&127)..(Int32(108)&127):((-106)|1))), Int32(79), true) as Unit), Option<Unit>.Some(()), Option<Unit>.None, (Option<UInt8>.Some(UInt8(198)) as Unit), Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None, (((UInt8(246)&127)..(UInt8(8)&127):((22|1))) as Unit), ((UInt16(101), (UInt32(224), r'Q', UInt64(89), (), Float32(38.0), Int32(-40), UInt64(234), UInt64(67)), (UInt8(121), true, ###"^SYu${var_1667220244191_889}i.`vp3"###, Int32(111), (), true), [Int16(6), Int16(91), Int16(118), Int16(3), Int16(-105), Int16(118), Int16(-20), Int16(98), Int16(-102), Int16(10)], (UInt16(247), UInt64(241), ([[UInt64(166), UInt64(75), UInt64(240), UInt64(91), UInt64(170), UInt64(191), UInt64(70), UInt64(131), UInt64(15), UInt64(162)], [UInt64(50), UInt64(117), UInt64(111), UInt64(93), UInt64(249), UInt64(220), UInt64(25), UInt64(65), UInt64(205), UInt64(226)], [UInt64(170), UInt64(231), UInt64(102), UInt64(39), UInt64(120), UInt64(254), UInt64(104), UInt64(97), UInt64(195), UInt64(99)], [UInt64(95), UInt64(203), UInt64(138), UInt64(221), UInt64(58), UInt64(236), UInt64(168), UInt64(73), UInt64(170), UInt64(229)], [UInt64(119), UInt64(198), UInt64(16), UInt64(105), UInt64(69), UInt64(142), UInt64(58), UInt64(133), UInt64(246), UInt64(17)], [UInt64(62), UInt64(2), UInt64(150), UInt64(134), UInt64(18), UInt64(159), UInt64(33), UInt64(151), UInt64(125), UInt64(70)], [UInt64(161), UInt64(60), UInt64(185), UInt64(190), UInt64(14), UInt64(28), UInt64(189), UInt64(37), UInt64(26), UInt64(130)], [UInt64(203), UInt64(133), UInt64(248), UInt64(157), UInt64(193), UInt64(200), UInt64(131), UInt64(219), UInt64(39), UInt64(80)], [UInt64(188), UInt64(62), UInt64(127), UInt64(41), UInt64(203), UInt64(99), UInt64(117), UInt64(182), UInt64(200), UInt64(33)], [UInt64(142), UInt64(146), UInt64(164), UInt64(163), UInt64(27), UInt64(45), UInt64(181), UInt64(161), UInt64(159), UInt64(222)]], (-52.0), true, ((Int32(122)&127)..(Int32(-86)&127):(((-88)|1)))), Int32(0), false)) as Unit)], namedParam_1667220244191_954 : [Int16(15), Int16(45), Int16(UInt8(86)), Int16(-22), Int16(-72), Int16(16), Int16(-40), Int16(8), Int16(67), Int16(Int16(41))]), Struct_1667220244191_11((UInt32(229), r'4', UInt64(142), (), Float32(Float32(76.0)), Int32(-116), UInt64(25), UInt64(25)), [("z;${var_1667220244191_889}\"${var_1667220244191_889}e~VSB-:" as Unit), (UInt8(245) as Unit), Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, (((UInt16(247)&127)..(UInt16(202)&127):(48|1)) as Unit), Option<Unit>.Some(()), Option<Unit>.Some(())], namedParam_1667220244191_954 : [Int16(25), Int16(Int8(-76)), Int16(-3), Int16(Int8(-87)), Int16(Int16(81)), Int16(UInt16(40)), Int16(53), Int16(UInt8(177)), Int16(UInt16(104)), Int16(27)]), Struct_1667220244191_11(), Struct_1667220244191_11(namedParam_1667220244191_1473 : func_1667220244191_396<Float32, Bool>)];
        func func_1667220244191_368(param_1667220244191_369 : Option<Unit>, param_1667220244191_370 : Float32, optionalParam_1667220244191_371 ! : Struct_1667220244191_11 = Struct_1667220244191_11(), optionalParam_1667220244191_373 ! : Int8 = Int8(UInt8(Int8(0)))) : Array<Struct_1667220244191_11> { // block id: 377
            var loopTimeVar_1667220244191_902 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            ((var_1667220244191_889|>var_1667220244191_886)[9] ?? for (i in loopTimeVar_1667220244191_902 where var_1667220244191_810) {
                if (false) { Struct_1667220244191_11() } else { Struct_1667220244191_11() } ;
                var_1667220244191_900
            });
            match (if ((var_1667220244191_798.var_1667220244191_919)) { (var_1667220244191_927 ?? var_1667220244191_932) } else { Option<Struct_1667220244191_11>.None } ) {
                case _ => 
                    -1.0;
                    var_1667220244191_941
                
            }
        }
;
        (Option<Struct_1667220244191_11>.None ?? func_1667220244191_368(var_1667220244191_1728, var_1667220244191_1731, optionalParam_1667220244191_371 : var_1667220244191_858)[9]);
        var var_1667220244191_1757 : Int16 = Int16(-53);
        let var_1667220244191_1796 : Int64 = Int64(UInt64(240));
        var var_1667220244191_1805 : (Array<Option<Unit>>, Range<UInt32>, Float32) = ([Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.Some(()), (Int32(UInt8(234)) as Unit), Option<Unit>.None, Option<Unit>.None, (UInt32(Int32(-76)) as Unit), (Option<Unit>.None as Unit), (([Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.Some(()), Option<Unit>.Some(()), Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None], ((UInt32(105)&127)..=(UInt32(90)&127):((25|1))), Float32(92.0)) as Unit), ([(), (), (), (), (), (), (), (), (), ()] as Unit)], ((UInt32(209)&127)..=(UInt32(172)&127):(5|1)), Float32(-115.0));
        var var_1667220244191_1890 : (Array<Option<Unit>>, Range<UInt32>, Float32) = ([(UInt16(125) as Unit), Option<Unit>.None, ([[UInt64(243), UInt64(48), UInt64(196), UInt64(70), UInt64(229), UInt64(229), UInt64(198), UInt64(201), UInt64(118), UInt64(121)], [UInt64(127), UInt64(43), UInt64(90), UInt64(192), UInt64(17), UInt64(49), UInt64(183), UInt64(160), UInt64(148), UInt64(4)], [UInt64(98), UInt64(29), UInt64(243), UInt64(12), UInt64(56), UInt64(87), UInt64(190), UInt64(3), UInt64(118), UInt64(23)], [UInt64(46), UInt64(182), UInt64(138), UInt64(239), UInt64(186), UInt64(60), UInt64(33), UInt64(67), UInt64(102), UInt64(96)], [UInt64(99), UInt64(22), UInt64(192), UInt64(114), UInt64(155), UInt64(154), UInt64(145), UInt64(57), UInt64(227), UInt64(8)], [UInt64(189), UInt64(3), UInt64(35), UInt64(153), UInt64(115), UInt64(222), UInt64(195), UInt64(78), UInt64(112), UInt64(9)], [UInt64(30), UInt64(99), UInt64(194), UInt64(99), UInt64(118), UInt64(86), UInt64(229), UInt64(137), UInt64(234), UInt64(191)], [UInt64(114), UInt64(192), UInt64(154), UInt64(146), UInt64(111), UInt64(120), UInt64(62), UInt64(65), UInt64(109), UInt64(188)], [UInt64(141), UInt64(152), UInt64(91), UInt64(71), UInt64(219), UInt64(84), UInt64(79), UInt64(237), UInt64(164), UInt64(237)], [UInt64(126), UInt64(203), UInt64(215), UInt64(109), UInt64(49), UInt64(79), UInt64(58), UInt64(86), UInt64(50), UInt64(225)]] as Unit), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()), (((UInt8(94)&127)..=(UInt8(96)&127):(((-22)|1))) as Unit), ((UInt32(39), r'X', UInt64(17), (), Float32(82.0), Int32(126), UInt64(92), UInt64(116)) as Unit), Option<Unit>.None], ((UInt32(Int16(103))&127)..(UInt32(134)&127):((Int64(UInt16(37))|1))), Float32(Float32(Float32(-109.0))));
        match ((if (true) { Option<Option<Int16>>.None } else { Option<Option<Int16>>.None }  ?? (var_1667220244191_1747 ?? var_1667220244191_344))) {
            case _ => 
                var_1667220244191_1757 /= ((var_1667220244191_1757) | 1);
                var_1667220244191_900;
                (var_1667220244191_1763, ((UInt32(207)&127)..=(UInt32(76)&127):((var_1667220244191_1796|1))), var_1667220244191_1731)
            
            case _ : (Unit, Rune, UInt16, Range<UInt64>, (UInt8, Bool, String, Int32, Unit, Bool)) => 
                var_1667220244191_303;
                var_1667220244191_1805
            
            case _ => 
                Int32(13) & Int32(-126);
                if (var_1667220244191_810) { var_1667220244191_1805 } else { var_1667220244191_1805 } 
            
            case caseVar_1667220244191_1873 : Option<Bool> => 
                var_1667220244191_546 <<= ((var_1667220244191_1622) & 7);
                var_1667220244191_488;
                (var_1667220244191_1763, ((var_1667220244191_62&127)..=(UInt32(232)&127):((115|1))), var_1667220244191_1731)
            
            case _ => 
                var_1667220244191_900;
                var_1667220244191_1890
            
        };
        let var_1667220244191_1930 : Option<Range<Int32>> = Option<Range<Int32>>.Some(((Int32(31)&127)..=(Int32(UInt8(Int8(123)))&127):((80|1))));
        (var_1667220244191_1930 as Int16)
    }
;
    let var_1667220244191_1939 : ?Int8 = ((((UInt32(UInt32(53))&127)..=(UInt32(237)&127):((Int64(18)|1))) as Unit) as Int8);
    var var_1667220244191_1953 : Int16 = Int16(29);
    if (func_1667220244191_165([[UInt64(46), UInt64(119), UInt64(212), UInt64(121), UInt64(123), UInt64(189), UInt64(175), UInt64(146), UInt64(15), UInt64(200)], [UInt64(75), UInt64(50), UInt64(165), UInt64(79), UInt64(57), UInt64(209), UInt64(78), UInt64(7), UInt64(82), UInt64(30)], [UInt64(90), UInt64(103), UInt64(154), UInt64(32), UInt64(137), UInt64(97), UInt64(97), UInt64(186), UInt64(29), UInt64(162)], [UInt64(148), UInt64(152), UInt64(166), UInt64(177), UInt64(16), UInt64(146), UInt64(137), UInt64(73), UInt64(253), UInt64(200)], [UInt64(85), UInt64(250), UInt64(164), UInt64(164), UInt64(93), UInt64(81), UInt64(34), UInt64(5), UInt64(57), UInt64(136)], [UInt64(243), UInt64(239), UInt64(204), UInt64(104), UInt64(145), UInt64(237), UInt64(88), UInt64(232), UInt64(104), UInt64(185)], [UInt64(126), UInt64(93), UInt64(213), UInt64(249), UInt64(52), UInt64(236), UInt64(123), UInt64(136), UInt64(98), UInt64(193)], [UInt64(199), UInt64(189), UInt64(145), UInt64(19), UInt64(31), UInt64(151), UInt64(76), UInt64(142), UInt64(221), UInt64(97)], [UInt64(168), UInt64(22), UInt64(206), UInt64(245), UInt64(129), UInt64(132), UInt64(229), UInt64(51), UInt64(202), UInt64(232)], [UInt64(144), UInt64(149), UInt64(67), UInt64(93), UInt64(12), UInt64(192), UInt64(149), UInt64(189), UInt64(8), UInt64(157)]][0], (((Int8(-11)&127)..=(Int8(12)&127):(98|1))|>var_1667220244191_251), var_1667220244191_267[3])) { var_1667220244191_279 } else { [var_1667220244191_303[0], (var_1667220244191_336 as Int16), var_1667220244191_279[5], if (true) { var_1667220244191_344 } else { var_1667220244191_344 } , func_1667220244191_348(optionalParam_1667220244191_355 : var_1667220244191_1939), if (false) { var_1667220244191_344 } else { Option<Int16>.Some(var_1667220244191_1953) } , (var_1667220244191_1747 ?? Option<Int16>.None), var_1667220244191_344, (var_1667220244191_1747 ?? var_1667220244191_344), var_1667220244191_344] } 
}


public func func_1667220244191_7<T0, T1, T2>(param_1667220244191_8 : UInt8) : UInt8 { // block id: 9
    var var_1667220244191_79 : Bool = true;
    var_1667220244191_15.func_1667220244191_18(namedParam_1667220244191_19 : var_1667220244191_79, optionalParam_1667220244191_20 : (Option<Int8>.Some(Int8(95)) ?? Int8(54)));
    func func_1667220244191_93<T0, T1>(optionalParam_1667220244191_94 ! : Int16 = Int16(-95), namedParam_1667220244191_96 ! : Int64, optionalParam_1667220244191_97 ! : String = "5 W+0bU<_x") : UInt8 { // block id: 99
        var var_1667220244191_121 : Option<Int16> = Option<Int16>.Some(Int16(-79));
        var var_1667220244191_138 : Int16 = Int16(UInt8(Int8(-128)));
        func func_1667220244191_154(namedParam_1667220244191_155 ! : Array<Int16>) : Option<Int16> { // block id: 156
            ();
            (var_1667220244191_1967[4]|>func_1667220244191_160)[4]
        }
;
        ([Option<Int16>.Some(Int16(-125)), var_1667220244191_121, var_1667220244191_121, Option<Int16>.Some(Int16(46)), var_1667220244191_121, var_1667220244191_121, var_1667220244191_121, var_1667220244191_121, var_1667220244191_121, Option<Int16>.None][5] ?? [var_1667220244191_138, Int16(-63), var_1667220244191_138, var_1667220244191_138, var_1667220244191_138, var_1667220244191_138, var_1667220244191_138, var_1667220244191_138, Int16(-118), var_1667220244191_138][5]) % ((match (func_1667220244191_154(namedParam_1667220244191_155 : var_1667220244191_2032)) {
            case caseVar_1667220244191_2036 : Option<Bool> => 
                var_1667220244191_138
            
            case caseVar_1667220244191_2041 => 
                var_1667220244191_138
            
            case _ => 
                Int16(66)
            
        }) | 1);
        var_1667220244191_546
    }
;
    var var_1667220244191_2070 : (Array<Array<UInt64>>, Float64, Bool, Range<Int32>) = ([[UInt64(135), UInt64(100), UInt64(54), UInt64(224), UInt64(208), UInt64(104), UInt64(26), UInt64(221), UInt64(232), UInt64(137)], [UInt64(110), UInt64(110), UInt64(222), UInt64(132), UInt64(27), UInt64(1), UInt64(112), UInt64(91), UInt64(183), UInt64(8)], [UInt64(25), UInt64(114), UInt64(181), UInt64(181), UInt64(60), UInt64(219), UInt64(141), UInt64(133), UInt64(166), UInt64(240)], [UInt64(117), UInt64(81), UInt64(115), UInt64(53), UInt64(210), UInt64(192), UInt64(241), UInt64(81), UInt64(39), UInt64(113)], [UInt64(158), UInt64(89), UInt64(33), UInt64(240), UInt64(210), UInt64(138), UInt64(171), UInt64(163), UInt64(16), UInt64(245)], [UInt64(228), UInt64(187), UInt64(72), UInt64(73), UInt64(154), UInt64(186), UInt64(78), UInt64(17), UInt64(224), UInt64(118)], [UInt64(21), UInt64(164), UInt64(199), UInt64(210), UInt64(236), UInt64(248), UInt64(235), UInt64(138), UInt64(91), UInt64(34)], [UInt64(184), UInt64(188), UInt64(24), UInt64(197), UInt64(93), UInt64(243), UInt64(96), UInt64(224), UInt64(99), UInt64(143)], [UInt64(90), UInt64(65), UInt64(169), UInt64(248), UInt64(31), UInt64(211), UInt64(221), UInt64(197), UInt64(42), UInt64(59)], [UInt64(12), UInt64(243), UInt64(199), UInt64(124), UInt64(194), UInt64(154), UInt64(1), UInt64(5), UInt64(171), UInt64(219)]], Float64(Float64(Float32(Float32(-36.0)))), (Class_1667220244191_402<Range<UInt64>>() is Array<Int16>), ((Int32(36)&127)..=(Int32(85)&127):(((-37)|1))));
    let var_1667220244191_2086 : String = """
@'QM_
6n4%J
""";
    (func_1667220244191_93<Unit, Range<Int64>>(optionalParam_1667220244191_94 : Int16(30), namedParam_1667220244191_96 : (-37), optionalParam_1667220244191_97 : ###"+zIm3IN HK"###), var_1667220244191_495, match (var_1667220244191_507) {
        case _ : UInt8 => 
            ">=]:A}q?-n"
        
        case _ => 
            var var_1667220244191_2063 : Interface_1667220244191_406 = Class_1667220244191_402<Range<UInt64>>();
            if (var_1667220244191_495) { var_1667220244191_2063 } else { var_1667220244191_2063 } ;
            (var_1667220244191_841, var_1667220244191_488, var_1667220244191_2070, var_1667220244191_336, var_1667220244191_810);
            var_1667220244191_2086
        
    }, Int32(var_1667220244191_62), (), true && false)[3];
    var var_1667220244191_2103 : ?Bool = (###"I${var_1667220244191_2086}\"po${var_1667220244191_2086}v?${var_1667220244191_2086}LMH${var_1667220244191_2086}S"### as Bool);
    let var_1667220244191_2115 : ((Array<Option<Unit>>, Range<UInt32>, Float32), Array<Array<UInt64>>, Int64, Int32) = (([(r'd' as Unit), ([Option<Int16>.None, Option<Int16>.Some(Int16(108)), Option<Int16>.None, Option<Int16>.None, Option<Int16>.Some(Int16(-31)), Option<Int16>.Some(Int16(-121)), Option<Int16>.None, Option<Int16>.Some(Int16(-95)), Option<Int16>.None, Option<Int16>.Some(Int16(8))] as Unit), Option<Unit>.None, (Option<Unit>.None as Unit), Option<Unit>.None, (((), r'e', UInt16(191), ((UInt64(248)&127)..(UInt64(218)&127):(73|1)), (UInt8(242), true, """
i)G${var_1667220244191_2086}d?
pO ${var_1667220244191_2086}5/${var_1667220244191_2086}
""", Int32(94), (), false)) as Unit), Option<Unit>.None, (Float32(-22.0) as Unit), Option<Unit>.None, Option<Unit>.None], ((UInt32(66)&127)..=(UInt32(30)&127):((-111)|1)), Float32(Float32(Float32(28.0)))), [[UInt64(216), UInt64(37), UInt64(75), UInt64(247), UInt64(223), UInt64(10), UInt64(94), UInt64(130), UInt64(116), UInt64(238)], [UInt64(253), UInt64(196), UInt64(237), UInt64(240), UInt64(101), UInt64(102), UInt64(4), UInt64(203), UInt64(156), UInt64(253)], [UInt64(129), UInt64(3), UInt64(67), UInt64(189), UInt64(83), UInt64(174), UInt64(65), UInt64(180), UInt64(82), UInt64(158)], [UInt64(99), UInt64(128), UInt64(19), UInt64(195), UInt64(47), UInt64(199), UInt64(138), UInt64(230), UInt64(63), UInt64(211)], [UInt64(29), UInt64(155), UInt64(61), UInt64(182), UInt64(234), UInt64(66), UInt64(76), UInt64(4), UInt64(172), UInt64(168)], [UInt64(173), UInt64(162), UInt64(3), UInt64(45), UInt64(117), UInt64(100), UInt64(179), UInt64(21), UInt64(124), UInt64(191)], [UInt64(154), UInt64(210), UInt64(227), UInt64(142), UInt64(211), UInt64(32), UInt64(196), UInt64(104), UInt64(12), UInt64(104)], [UInt64(163), UInt64(152), UInt64(162), UInt64(181), UInt64(101), UInt64(49), UInt64(189), UInt64(2), UInt64(197), UInt64(3)], [UInt64(182), UInt64(254), UInt64(193), UInt64(138), UInt64(112), UInt64(111), UInt64(8), UInt64(89), UInt64(247), UInt64(243)], [UInt64(225), UInt64(129), UInt64(15), UInt64(22), UInt64(198), UInt64(191), UInt64(225), UInt64(42), UInt64(86), UInt64(120)]], Int64(UInt32(206)), Int32(-44));
    (if ((var_1667220244191_2103 ?? var_1667220244191_810)) { (if (var_1667220244191_495) { Option<UInt8>.Some(UInt8(47)) } else { Option<UInt8>.Some(UInt8(18)) } ) } else { (var_1667220244191_2115 as UInt8) }  ?? (if (var_1667220244191_834) { var_1667220244191_2172 } else { Option<UInt8>.Some(UInt8(42)) }  ?? (Option<UInt8>.None ?? var_1667220244191_1622)))
}

main(): Int64 {
    try {
        var var_1667220244191_2181 : (UInt8) -> UInt8 = func_1667220244191_7<Int16, Int16, Range<UInt8>>;
        match (Option<Range<UInt8>>.None) {
            case _ => 
                var var_1667220244191_2191 : Range<Int64> = ((100&127)..((-39)&127):((-22)|1));
                if (true) { (((-127)&127)..=((-25)&127):(45|1)) } else { var_1667220244191_2191 } ;
                UInt8(108)
            
        }|>var_1667220244191_2181;
        let var_1667220244191_2203 : (Array<Array<UInt64>>, Float64, Bool, Range<Int32>) = ([[UInt64((-54)), UInt64(UInt16(51)), UInt64((-15)), UInt64(58), UInt64(99), UInt64(216), UInt64(Int32(-70)), UInt64(46), UInt64(45), UInt64(59)], [UInt64(101), UInt64(158), UInt64(27), UInt64(195), UInt64(0), UInt64(172), UInt64(110), UInt64(215), UInt64(208), UInt64(156)], [UInt64(UInt32(69)), UInt64(54), UInt64(UInt8(41)), UInt64(Int32(-36)), UInt64(Int16(54)), UInt64(UInt8(126)), UInt64(Int32(-10)), UInt64(128), UInt64(UInt64(182)), UInt64((-41))], [UInt64(117), UInt64(246), UInt64(UInt32(112)), UInt64(Int8(112)), UInt64(60), UInt64(UInt16(51)), UInt64(UInt8(122)), UInt64(UInt32(57)), UInt64(150), UInt64(62)], [UInt64(128), UInt64(Int16(71)), UInt64(UInt32(177)), UInt64(UInt64(171)), UInt64(244), UInt64(Int16(103)), UInt64(179), UInt64(55), UInt64(76), UInt64(249)], [UInt64(30), UInt64(69), UInt64(42), UInt64(227), UInt64(90), UInt64(112), UInt64(17), UInt64(7), UInt64(123), UInt64(244)], [UInt64(124), UInt64(229), UInt64(170), UInt64(UInt16(197)), UInt64(UInt16(68)), UInt64(UInt64(144)), UInt64(1), UInt64(157), UInt64(131), UInt64(UInt32(111))], [UInt64(Int8(3)), UInt64(Int16(123)), UInt64(Int16(109)), UInt64(UInt64(171)), UInt64(UInt32(38)), UInt64(Int8(0)), UInt64(164), UInt64(Int8(-99)), UInt64(10), UInt64(UInt64(234))], [UInt64(28), UInt64(48), UInt64(74), UInt64(127), UInt64(78), UInt64(131), UInt64(11), UInt64(253), UInt64(147), UInt64(24)], [UInt64((-59)), UInt64(17), UInt64(UInt64(187)), UInt64(54), UInt64(Int32(-55)), UInt64(176), UInt64(217), UInt64(UInt64(84)), UInt64(UInt16(54)), UInt64(UInt8(217))]], Float64(Float64(Float32(Float32(123.0)))), true, ((Int32(57)&127)..=(Int32(85)&127):((-68)|1)));
        if ((var_1667220244191_2197 is Range<UInt8>)) { // block id: 2199
            if (var_1667220244191_495) { var_1667220244191_2203 } else { var_1667220244191_2203 } ;
            -75
        } else { // block id: 2337
            var_1667220244191_2339
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1667220244191_336*var_1667220244191_336), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
