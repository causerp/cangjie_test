/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt

public var var_1713218456358_21 : UInt32 = UInt32(17)
const var_1713218456358_38 : Rune = r'c'
let var_1713218456358_52 : Class_1713218456358_47 = Class_1713218456358_47()
let var_1713218456358_92 : Bool = false
let var_1713218456358_143 : Int64 = Int64(-23)
public var var_1713218456358_153 : Class_1713218456358_47 = Class_1713218456358_47()
let var_1713218456358_194 : Float64 = Float64(77.0)
public let var_1713218456358_199 : (Float64, Rune, Bool, Int8) = (Float64(36.0), r'u', false, Int8(-87))
public let var_1713218456358_236 : Class_1713218456358_229 = Class_1713218456358_229()
let var_1713218456358_242 : Int8 = Int8(91)
var var_1713218456358_309 : UInt16 = UInt16(155)
public let var_1713218456358_318 : (Interface_1713218456358_50, Class_1713218456358_229) = (Class_1713218456358_229(), Class_1713218456358_229())
let var_1713218456358_326 : Float32 = Float32(Float32(Float32(Float32(59.0))))
public var var_1713218456358_362 : Range<UInt64> = ((UInt64(UInt64(UInt64(UInt16(UInt8(192)))))&127)..=(UInt64(UInt64(231))&127):(Int64(UInt32(UInt16(Int8(7))))|1))
public const var_1713218456358_379 : Byte = 98
public const var_1713218456358_397 : Unit = ()
let var_1713218456358_411 : Int8 = Int8(19)
public let var_1713218456358_424 : Interface_1713218456358_50 = Class_1713218456358_47()
public const var_1713218456358_455 : Float64 = -14.0
public const var_1713218456358_462 : UInt16 = 53
public const var_1713218456358_470 : Bool = false
let var_1713218456358_596 : VArray<Bool, $1> = [false]
public const var_1713218456358_604 : Bool = true
public var var_1713218456358_651 : Range<Int32> = ((Int32(Int32(-77))&127)..=(Int32(Int32(117))&127):(Int64(-45)|1))
var var_1713218456358_659 : Range<UInt16> = ((UInt16(UInt16(132))&127)..=(UInt16(UInt16(252))&127):(Int64(78)|1))
var var_1713218456358_684 : ?Bool = Option<Bool>.None
public let var_1713218456358_891 : Class_1713218456358_887<Float64, Int8> = Class_1713218456358_887<Float64, Int8>()
public var var_1713218456358_912 : ?UInt8 = Option<UInt8>.None
let var_1713218456358_971 : Range<Int8> = ((Int8(Int8(UInt8(UInt8(134))))&127)..(Int8(Int8(14))&127):(Int64(-22)|1))
let var_1713218456358_991 : Array<VArray<Bool, $1>> = [VArray<Bool, $1>(repeat: (VArray<Unit, $8>({ i => ()}) is Array<UInt64>)), VArray<Bool, $1>({ i => true}), VArray<Bool, $1>({ i => true}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>(repeat: (Class_1713218456358_887<Float64, Int8>() is (Unit) -> Int8)), VArray<Bool, $1>(repeat: ([VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => true}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => true}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => false}), VArray<Bool, $1>({ i => true}), VArray<Bool, $1>({ i => false})] is Class_1713218456358_229)), VArray<Bool, $1>(repeat: (Class_1713218456358_887<Float64, Int8>() is Range<UInt8>)), VArray<Bool, $1>(repeat: ((((Int16(Int16(74))&127)..(Int16(Int16(5))&127):(Int64(-110)|1)), Class_1713218456358_47(), Int64(37), Option<UInt32>.None, Class_1713218456358_229(), Class_1713218456358_47(), ((Int64(Int64(-60))&127)..(Int64(Int64(34))&127):(Int64(-7)|1)), UInt16(125)) is (UInt32) -> Class_1713218456358_229)), VArray<Bool, $1>({ i => false})]
let var_1713218456358_1062 : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8) = ((VArray<Unit, $8>({ i => ()}) as (Float64, Rune, Bool, Int8)), ((Int8(Int8(-73))&127)..(Int8(Int8(84))&127):(Int64(-108)|1)), ((Int8(Int8(85))&127)..(Int8(Int8(-76))&127):(Int64(-50)|1)), Option<(Float64, Rune, Bool, Int8)>.None, ((UInt32(UInt32(251))&127)..(UInt32(UInt32(194))&127):(Int64(70)|1)), Int8(-20), Float64(Float32(Float32(123.0))), Int8(-72))
public let var_1713218456358_1099 : Int = Int64(UInt64(Int16(Int16(UInt8(63)))))
public let var_1713218456358_1115 : Array<Range<Int32>> = [((Int32(Int32(-128))&127)..=(Int32(Int32(-106))&127):(Int64(39)|1)), ((Int32(Int32(-118))&127)..(Int32(Int32(-123))&127):(Int64(-66)|1)), ((Int32(Int32(72))&127)..=(Int32(Int32(-128))&127):(Int64(-49)|1)), ((Int32(Int32(69))&127)..=(Int32(Int32(-77))&127):(Int64(52)|1)), ((Int32(Int32(64))&127)..(Int32(Int32(-56))&127):(Int64(-96)|1)), ((Int32(Int32(70))&127)..=(Int32(Int32(-71))&127):(Int64(70)|1)), ((Int32(Int32(5))&127)..(Int32(Int32(111))&127):(Int64(-63)|1)), ((Int32(Int32(59))&127)..(Int32(Int32(17))&127):(Int64(109)|1)), ((Int32(Int32(-56))&127)..=(Int32(Int32(-64))&127):(Int64(-108)|1)), ((Int32(Int32(22))&127)..(Int32(Int32(-4))&127):(Int64(14)|1))]
var var_1713218456358_1121 : UInt = UInt64(254)
public let var_1713218456358_1135 : Int32 = Int32(UInt8(UInt8(201)))
public const var_1713218456358_1216 : UInt16 = 57
public var var_1713218456358_1302 : Int16 = Int16(-64)
public interface Interface_1713218456358_50 {
    static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }

}

public open class Class_1713218456358_47 <: Interface_1713218456358_50 {
    public init() { // block id: 49

    }
;
    public mut prop var_1713218456358_55 : Bool { // block id: 56
        get() { // block id: 58
            (UInt64(UInt16(45)) is (Float64, Rune, Bool, Int8));
            (UInt8(71) is Int8)
        }

        set(Value) { // block id: 66
            ();
            Int64(33);
            ()
        }

    };
    public let var_1713218456358_156 : Option<(Float64, Rune, Bool, Int8)> = Option<(Float64, Rune, Bool, Int8)>.None;
    public static const var_1713218456358_239 : Int8 = 66;
    public static let var_1713218456358_905 : Array<String>;
    public static let var_1713218456358_1361 : Range<Int8>;
    public static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    public static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    public open override func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }

    static init() {
        var_1713218456358_905 = ["""
Y&`@~
;B7YZ
""", ###"(Z<c?pZt*g"###, ###"\"\\x79[A*r6"###, """
(TVMJ
KF/yD
""", """
0T&W>
ojNt(
""", """
dnG>;
(4?ZE
""", "yFX-urZtp\\", """
2X<O}
zm,bb
""", "a6P1pHBd@j", ###"!o~6['FQKh"###]
        var_1713218456358_1361 = ((Int8(Int8(-116))&127)..=(Int8(Int8(97))&127):(Int64(-85)|1))
    }
}


public func func_1713218456358_123(param_1713218456358_124 : UInt8) : Bool { // block id: 125
    let var_1713218456358_162 : Option<(Float64, Rune, Bool, Int8)> = ((Float64(-38.0), r'i', false, Int8(Int8(-20))) as (Float64, Rune, Bool, Int8));
    var var_1713218456358_172 : Range<Int8> = ((Int8(Int8(Int8(UInt8(5))))&127)..(Int8(Int8(-100))&127):(Int64(UInt8(27))|1));
    var var_1713218456358_182 : Range<UInt32> = ((UInt32(UInt32(9))&127)..=(UInt32(UInt32(113))&127):(Int64(UInt32(Int32(UInt32(232))))|1));
    const var_1713218456358_191 : Int8 = 107;
    (if (if (true) { // block id: 134
        let var_1713218456358_137 : Int32 = Int32(Int8(Int8(-77)));
        ((Int32(var_1713218456358_137)&127)..(Int32(var_1713218456358_137)&127):(var_1713218456358_143|1));
        let var_1713218456358_146 : Unit = ();
        var_1713218456358_146;
        var_1713218456358_92
    } else { // block id: 149
        var_1713218456358_92
    }) { (var_1713218456358_153.var_1713218456358_156) } else { (var_1713218456358_162, ((Int8(Int8(-87))&127)..=(Int8(Int8(-112))&127):(Int64(-108)|1)), var_1713218456358_172, Option<(Float64, Rune, Bool, Int8)>.None, var_1713218456358_182, var_1713218456358_191, var_1713218456358_194, var_1713218456358_191)[3] }  ?? var_1713218456358_199);
    false
}


sealed public interface Interface_1713218456358_234 <: Interface_1713218456358_50 {
    func func_1713218456358_894(param_1713218456358_895 : Range<Int8>, namedParam_1713218456358_896 ! : Range<UInt32>, namedParam_1713218456358_897 ! : () -> Int8) : Option<UInt8> { // block id: 899
        Class_1713218456358_47.var_1713218456358_905[6];
        var var_1713218456358_919 : Float64 = Float64(-8.0);
        if ((match (var_1713218456358_912) {
            case _ => 
                var_1713218456358_919 *= var_1713218456358_455;
                Int8(107) | var_1713218456358_411
            
            case _ => 
                Int8(-111)
            
            case caseVar_1713218456358_931 => 
                var_1713218456358_21++;
                Int8(125)
            
            case _ => 
                ();
                Int8(-30)
            
            case _ => 
                var_1713218456358_411 ^ Int8(-3)
            
        } is Option<Bool>)) { // block id: 947
            try { // block id: 949
                Option<UInt8>.None
            } catch (_) { // block id: 951
                ((Int8(Int8(-113))&127)..(Int8(var_1713218456358_411)&127):(Int64(-50)|1));
                if (true) { Option<UInt8>.None } else { var_1713218456358_912 } 
            }
        } else { // block id: 960
            var loopTimeVar_1713218456358_966 : Int = 0;
            while ((false) && loopTimeVar_1713218456358_966 < 100 ) {
                loopTimeVar_1713218456358_966++;
                ()
            };
            ();
            Option<UInt8>.Some(UInt8(120))
        }
    }
;
    static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }

}

sealed public interface Interface_1713218456358_233 <: Interface_1713218456358_50 & Interface_1713218456358_234 {
    static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }
;
    func func_1713218456358_894(param_1713218456358_895 : Range<Int8>, namedParam_1713218456358_896 ! : Range<UInt32>, namedParam_1713218456358_897 ! : () -> Int8) : Option<UInt8> { // block id: 899
        Class_1713218456358_47.var_1713218456358_905[6];
        var var_1713218456358_919 : Float64 = Float64(-8.0);
        if ((match (var_1713218456358_912) {
            case _ => 
                var_1713218456358_919 *= var_1713218456358_455;
                Int8(107) | var_1713218456358_411
            
            case _ => 
                Int8(-111)
            
            case caseVar_1713218456358_931 => 
                var_1713218456358_21++;
                Int8(125)
            
            case _ => 
                ();
                Int8(-30)
            
            case _ => 
                var_1713218456358_411 ^ Int8(-3)
            
        } is Option<Bool>)) { // block id: 947
            try { // block id: 949
                Option<UInt8>.None
            } catch (_) { // block id: 951
                ((Int8(Int8(-113))&127)..(Int8(var_1713218456358_411)&127):(Int64(-50)|1));
                if (true) { Option<UInt8>.None } else { var_1713218456358_912 } 
            }
        } else { // block id: 960
            var loopTimeVar_1713218456358_966 : Int = 0;
            while ((false) && loopTimeVar_1713218456358_966 < 100 ) {
                loopTimeVar_1713218456358_966++;
                ()
            };
            ();
            Option<UInt8>.Some(UInt8(120))
        }
    }

}

sealed public interface Interface_1713218456358_232 <: Interface_1713218456358_50 & Interface_1713218456358_233 {
    static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }
;
    func func_1713218456358_894(param_1713218456358_895 : Range<Int8>, namedParam_1713218456358_896 ! : Range<UInt32>, namedParam_1713218456358_897 ! : () -> Int8) : Option<UInt8> { // block id: 899
        Class_1713218456358_47.var_1713218456358_905[6];
        var var_1713218456358_919 : Float64 = Float64(-8.0);
        if ((match (var_1713218456358_912) {
            case _ => 
                var_1713218456358_919 *= var_1713218456358_455;
                Int8(107) | var_1713218456358_411
            
            case _ => 
                Int8(-111)
            
            case caseVar_1713218456358_931 => 
                var_1713218456358_21++;
                Int8(125)
            
            case _ => 
                ();
                Int8(-30)
            
            case _ => 
                var_1713218456358_411 ^ Int8(-3)
            
        } is Option<Bool>)) { // block id: 947
            try { // block id: 949
                Option<UInt8>.None
            } catch (_) { // block id: 951
                ((Int8(Int8(-113))&127)..(Int8(var_1713218456358_411)&127):(Int64(-50)|1));
                if (true) { Option<UInt8>.None } else { var_1713218456358_912 } 
            }
        } else { // block id: 960
            var loopTimeVar_1713218456358_966 : Int = 0;
            while ((false) && loopTimeVar_1713218456358_966 < 100 ) {
                loopTimeVar_1713218456358_966++;
                ()
            };
            ();
            Option<UInt8>.Some(UInt8(120))
        }
    }

}

public open class Class_1713218456358_229 <: Class_1713218456358_47 & Interface_1713218456358_50 & Interface_1713218456358_232 {
    public init() { // block id: 231

    }
;
    public init(param_1713218456358_338 : Range<UInt8>, optionalParam_1713218456358_339 ! : Range<Int64> = ((Int64(Int64(Int16(UInt16(220))))&127)..=(Int64(Int64(UInt16(28)))&127):(Int64(Int64(UInt8(UInt8(35))))|1)), optionalParam_1713218456358_350 ! : Float32 = Float32(Float32(Float32(26.0)))) { // block id: 354
        let var_1713218456358_374 : Unit = ();
        match (-UInt32(159)) {
            case _ => 
                var_1713218456358_362;
                var_1713218456358_374;
                Int16(105)
            
        }
    }
;
    public static var var_1713218456358_1289 : Unit = ();
    public static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    public static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    public open override func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }
;
    public open override func func_1713218456358_894(param_1713218456358_895 : Range<Int8>, namedParam_1713218456358_896 ! : Range<UInt32>, namedParam_1713218456358_897 ! : () -> Int8) : Option<UInt8> { // block id: 899
        Class_1713218456358_47.var_1713218456358_905[6];
        var var_1713218456358_919 : Float64 = Float64(-8.0);
        if ((match (var_1713218456358_912) {
            case _ => 
                var_1713218456358_919 *= var_1713218456358_455;
                Int8(107) | var_1713218456358_411
            
            case _ => 
                Int8(-111)
            
            case caseVar_1713218456358_931 => 
                var_1713218456358_21++;
                Int8(125)
            
            case _ => 
                ();
                Int8(-30)
            
            case _ => 
                var_1713218456358_411 ^ Int8(-3)
            
        } is Option<Bool>)) { // block id: 947
            try { // block id: 949
                Option<UInt8>.None
            } catch (_) { // block id: 951
                ((Int8(Int8(-113))&127)..(Int8(var_1713218456358_411)&127):(Int64(-50)|1));
                if (true) { Option<UInt8>.None } else { var_1713218456358_912 } 
            }
        } else { // block id: 960
            var loopTimeVar_1713218456358_966 : Int = 0;
            while ((false) && loopTimeVar_1713218456358_966 < 100 ) {
                loopTimeVar_1713218456358_966++;
                ()
            };
            ();
            Option<UInt8>.Some(UInt8(120))
        }
    }

}

func func_1713218456358_302(param_1713218456358_303 : UInt32) : Class_1713218456358_229 { // block id: 304
    try { // block id: 306
        var_1713218456358_309 >>= ((UInt16(206)) & 7);
        const var_1713218456358_313 : Unit = ();
        var_1713218456358_313;
        var_1713218456358_318[1]
    } catch (_) { // block id: 323
        var_1713218456358_143;
        var_1713218456358_326;
        try { // block id: 332
            var var_1713218456358_334 : Unit = ();
            var_1713218456358_334;
            Class_1713218456358_229(((UInt8(var_1713218456358_379)&127)..=(UInt8(UInt8(157))&127):(var_1713218456358_143|1)), optionalParam_1713218456358_339 : ((Int64(Int64(-128))&127)..(Int64(Int64(-30))&127):(Int64(-31)|1)))
        } catch (_) { // block id: 384
            Class_1713218456358_229()
        } finally { // block id: 386
            ((UInt32(var_1713218456358_21)&127)..(UInt32(var_1713218456358_21)&127):(var_1713218456358_143|1));
            var_1713218456358_236;
            Class_1713218456358_229()
        }
    }
}


public const func func_1713218456358_452() : Int8 { // block id: 453
    var_1713218456358_455;
    197 - ((var_1713218456358_462 >> ((77) & 7)) % ((10) | 1));
    const var_1713218456358_467 : Int8 = -95;
    var_1713218456358_467
}

public const func func_1713218456358_438(optionalParam_1713218456358_439 ! : Unit = ()) : Int8 { // block id: 441
    var_1713218456358_397;
    ();
    const func func_1713218456358_445(optionalParam_1713218456358_446 ! : Bool = true, namedParam_1713218456358_448 ! : String, namedParam_1713218456358_449 ! : Int64) : Int8 { // block id: 450
        func_1713218456358_452()
    }
;
    func_1713218456358_445(optionalParam_1713218456358_446 : var_1713218456358_470, namedParam_1713218456358_448 : """
cPToG
?og:L
""", namedParam_1713218456358_449 : 17)
}


public open class Class_1713218456358_887<T0, T1> <: Class_1713218456358_229 & Interface_1713218456358_232 & Interface_1713218456358_50 {
    public init() { // block id: 889

    }
;
    public static func func_1713218456358_73(param_1713218456358_74 : Int8, namedParam_1713218456358_75 ! : Float64) : Int8 { // block id: 76
        try { // block id: 89
            const var_1713218456358_96 : Unit = ();
            let var_1713218456358_106 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            if (var_1713218456358_92) { VArray<Unit, $8>(repeat: var_1713218456358_96) } else { var_1713218456358_106 } 
        } finally { // block id: 116
            var var_1713218456358_118 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()];
            var_1713218456358_118
        }[3];
        let var_1713218456358_214 : UInt8 = UInt8(Int8(13));
        var loopTimeVar_1713218456358_219 : Int = 0;
        while ((((Option<UInt8>.None ?? var_1713218456358_214)|>func_1713218456358_123)) && loopTimeVar_1713218456358_219 < 100 ) {
            loopTimeVar_1713218456358_219++;

        };
        const var_1713218456358_223 : Int8 = 86;
        try { // block id: 221
            var_1713218456358_223
        } finally { // block id: 225
            UInt8(UInt8(49));
            Class_1713218456358_229.var_1713218456358_239
        }
    }
;
    public static func func_1713218456358_73(namedParam_1713218456358_587 ! : (Float64, Rune, Bool, Int8)) : UInt8 { // block id: 588
        var loopTimeVar_1713218456358_654 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_654++;
            try { // block id: 618
                UInt8(54) * var_1713218456358_379;
                var var_1713218456358_623 : Range<Int64> = ((Int64(Int64(UInt64(Int32(Int8(54)))))&127)..(Int64(Int64(-121))&127):(Int64(UInt16(Int8(UInt8(68))))|1));
                var_1713218456358_623
            } catch (e: Exception) { // block id: 634
                ();
                var_1713218456358_397;
                let var_1713218456358_638 : Range<Int64> = ((Int64(Int64(UInt64(47)))&127)..(Int64(Int64(-127))&127):(Int64(35)|1));
                var_1713218456358_638
            } finally { // block id: 644
                ();
                if (false) { ((Int64(Int64(-77))&127)..(Int64(Int64(-97))&127):(Int64(126)|1)) } else { ((Int64(Int64(-70))&127)..=(Int64(Int64(-34))&127):(Int64(53)|1)) } 
            };
            var_1713218456358_651
        } while (([var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604), VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_92), var_1713218456358_596, VArray<Bool, $1>(repeat: var_1713218456358_604)][5][0]) && loopTimeVar_1713218456358_654 < 100 ) ;
        let var_1713218456358_665 : ?UInt8 = Option<UInt8>.Some(UInt8(199));
        (match ((var_1713218456358_659 as UInt8)) {
            case _ : (Float64, Rune, Bool, Int8) => 
                var_1713218456358_665;
                Float32(72.0) * Float32(88.0)
            
            case _ => 
                Float32(-22.0)
            
        } as UInt8);
        let var_1713218456358_717 : (UInt64, Float64, Option<(Float64, Rune, Bool, Int8)>, VArray<Bool, $1>, UInt16) = (UInt64(UInt64(227)), Float64(Float64(Float32(21.0))), Option<(Float64, Rune, Bool, Int8)>.Some((Float64(9.0), r'D', (() is Range<Int64>), Int8(UInt8(241)))), VArray<Bool, $1>(repeat: ((Float64(-44.0), r'P', true, Int8(-42)) is (Interface_1713218456358_50, Class_1713218456358_229))), UInt16(Int16(Int16(110))));
        let var_1713218456358_746 : VArray<UInt64, $9> = [UInt64(155), UInt64(23), UInt64(UInt32(53)), UInt64(Int8(UInt8(72))), UInt64(147), UInt64(33), UInt64(UInt64(Int16(74))), UInt64(179), UInt64(135)];
        let var_1713218456358_776 : (String, Range<Int32>, VArray<Bool, $6>, Array<UInt64>, Int64, Unit) = ("aa{8V13HVL1", ((Int32(Int32(Int16(10)))&127)..(Int32(Int32(UInt16(UInt8(169))))&127):(Int64(-21)|1)), VArray<Bool, $6>(repeat: ([((Int32(Int32(-1))&127)..(Int32(Int32(-95))&127):(Int64(-52)|1)), ((Int32(Int32(-116))&127)..(Int32(Int32(60))&127):(Int64(62)|1)), ((Int32(Int32(-77))&127)..=(Int32(Int32(-69))&127):(Int64(-60)|1)), ((Int32(Int32(-119))&127)..(Int32(Int32(-36))&127):(Int64(-74)|1)), ((Int32(Int32(72))&127)..(Int32(Int32(61))&127):(Int64(-47)|1)), ((Int32(Int32(68))&127)..=(Int32(Int32(-92))&127):(Int64(-3)|1)), ((Int32(Int32(-87))&127)..=(Int32(Int32(104))&127):(Int64(105)|1)), ((Int32(Int32(-112))&127)..=(Int32(Int32(69))&127):(Int64(113)|1)), ((Int32(Int32(11))&127)..=(Int32(Int32(81))&127):(Int64(105)|1)), ((Int32(Int32(90))&127)..=(Int32(Int32(93))&127):(Int64(80)|1))] is Class_1713218456358_229)), [UInt64(180), UInt64(UInt16(228)), UInt64(Int64(Int64(-116))), UInt64(101), UInt64(UInt16(210)), UInt64(94), UInt64(Int32(86)), UInt64(UInt16(130)), UInt64(UInt32(UInt8(31))), UInt64(199)], Int64(Int32(UInt8(254))), ());
        if ((if (var_1713218456358_92) { var_1713218456358_684 } else { Option<Bool>.None }  ?? VArray<Bool, $6>({ i => false})[2])) { // block id: 697
            const var_1713218456358_703 : UInt8 = 158;
            try { // block id: 699
                var_1713218456358_379 | var_1713218456358_703;
                UInt8(107) * UInt8(196)
            } finally { // block id: 708
                UInt64(43);
                var_1713218456358_703 + UInt8(228)
            }
        } else if (var_1713218456358_717[0] > var_1713218456358_746[0]) { // block id: 763
            if (false) { // block id: 766
                ()
            };
            const var_1713218456358_770 : Byte = 240;
            UInt8(var_1713218456358_770)
        } else { // block id: 772
            var_1713218456358_776[2];
            match (UInt32(181)) {
                case 249 | 159 => 
                    var_1713218456358_379 + UInt8(230)
                
                case _ => 
                    if (true) { var_1713218456358_665 } else { var_1713218456358_665 } ;
                    UInt8(132)
                
            }
        }
    }
;
    public open override func func_1713218456358_881(param_1713218456358_882 : Array<VArray<Bool, $1>>, namedParam_1713218456358_883 ! : Int32, namedParam_1713218456358_884 ! : (Option<(Float64, Rune, Bool, Int8)>, Range<Int8>, Range<Int8>, Option<(Float64, Rune, Bool, Int8)>, Range<UInt32>, Int8, Float64, Int8)) : Option<UInt8> { // block id: 885
        var var_1713218456358_985 : Range<UInt32> = ((UInt32(UInt32(142))&127)..=(UInt32(UInt32(15))&127):(Int64(-64)|1));
        var var_1713218456358_988 : () -> Int8 = func_1713218456358_452;
        var_1713218456358_891.func_1713218456358_894(var_1713218456358_971, namedParam_1713218456358_896 : if (false) { ((UInt32(UInt32(217))&127)..(UInt32(var_1713218456358_21)&127):(Int64(34)|1)) } else { var_1713218456358_985 } , namedParam_1713218456358_897 : var_1713218456358_988)
    }
;
    public open override func func_1713218456358_894(param_1713218456358_895 : Range<Int8>, namedParam_1713218456358_896 ! : Range<UInt32>, namedParam_1713218456358_897 ! : () -> Int8) : Option<UInt8> { // block id: 899
        Class_1713218456358_47.var_1713218456358_905[6];
        var var_1713218456358_919 : Float64 = Float64(-8.0);
        if ((match (var_1713218456358_912) {
            case _ => 
                var_1713218456358_919 *= var_1713218456358_455;
                Int8(107) | var_1713218456358_411
            
            case _ => 
                Int8(-111)
            
            case caseVar_1713218456358_931 => 
                var_1713218456358_21++;
                Int8(125)
            
            case _ => 
                ();
                Int8(-30)
            
            case _ => 
                var_1713218456358_411 ^ Int8(-3)
            
        } is Option<Bool>)) { // block id: 947
            try { // block id: 949
                Option<UInt8>.None
            } catch (_) { // block id: 951
                ((Int8(Int8(-113))&127)..(Int8(var_1713218456358_411)&127):(Int64(-50)|1));
                if (true) { Option<UInt8>.None } else { var_1713218456358_912 } 
            }
        } else { // block id: 960
            var loopTimeVar_1713218456358_966 : Int = 0;
            while ((false) && loopTimeVar_1713218456358_966 < 100 ) {
                loopTimeVar_1713218456358_966++;
                ()
            };
            ();
            Option<UInt8>.Some(UInt8(120))
        }
    }

    static init() {
    }
}

public func func_1713218456358_269(param_1713218456358_270 : Range<Int8>) : UInt8 { // block id: 271
    let var_1713218456358_493 : Option<UInt32> = Option<UInt32>.Some(UInt32(253));
    var var_1713218456358_507 : Int8 = Int8(-90);
    const var_1713218456358_512 : Int32 = 108;
    let var_1713218456358_544 : Range<Int16> = ((Int16(Int16(-96))&127)..(Int16(Int16(-14))&127):(Int64(-59)|1));
    let var_1713218456358_552 : Range<Int8> = ((Int8(Int8(UInt8(UInt8(Int8(58)))))&127)..=(Int8(Int8(Int8(33)))&127):(Int64(Int64(107))|1));
    var var_1713218456358_572 : Range<Int32> = ((Int32(Int32(29))&127)..=(Int32(Int32(8))&127):(Int64(Int16(Int8(Int8(102))))|1));
    try { // block id: 273
        var loopTimeVar_1713218456358_278 : Int64 = 0;
        do {
            loopTimeVar_1713218456358_278++;

        } while ((false) && loopTimeVar_1713218456358_278 < 100 ) ;
        func func_1713218456358_280(param_1713218456358_281 : Float32, param_1713218456358_282 : Int64, namedParam_1713218456358_283 ! : Option<UInt8>) : UInt32 { // block id: 284
            func func_1713218456358_286<T0, T1>(namedParam_1713218456358_287 ! : Unit) : Unit { // block id: 288

            }
;
            var loopTimeVar_1713218456358_298 : Int = 0;
            func_1713218456358_286<UInt64, Range<Int16>>(namedParam_1713218456358_287 : do {
                loopTimeVar_1713218456358_298++;
                ((Int64(Int64(-45))&127)..=(Int64(Int64(89))&127):(var_1713218456358_143|1))
            } while (((var_1713218456358_194 is Int16)) && loopTimeVar_1713218456358_298 < 100 ) );
            if (((var_1713218456358_21|>func_1713218456358_302) is Range<Int32>)) { // block id: 395
                var_1713218456358_397;
                var_1713218456358_92 || false
            } else { // block id: 402
                const var_1713218456358_407 : Rune = r'J';
                (Float64(15.0), var_1713218456358_407, var_1713218456358_92, var_1713218456358_411)[2]
            };
            ((((Int16(Int16(-53))&127)..(Int16(Int16(-31))&127):(Int64(106)|1)), var_1713218456358_424, var_1713218456358_143, Option<UInt32>.None, var_1713218456358_153, var_1713218456358_424, ((Int64(Int64(-66))&127)..(Int64(var_1713218456358_143)&127):(Int64(9)|1)), var_1713218456358_309)[3] ?? UInt32(func_1713218456358_438()))
        }
;
        func_1713218456358_280(var_1713218456358_326, Int64(99), namedParam_1713218456358_283 : Option<UInt8>.None);
        let var_1713218456358_480 : Array<Range<Int32>> = [((Int32(Int32(-96))&127)..=(Int32(Int32(-122))&127):(Int64(-98)|1)), ((Int32(Int32(28))&127)..(Int32(Int32(123))&127):(Int64(108)|1)), ((Int32(Int32(-124))&127)..=(Int32(Int32(102))&127):(Int64(61)|1)), ((Int32(Int32(123))&127)..(Int32(Int32(-46))&127):(Int64(-78)|1)), ((Int32(Int32(-60))&127)..(Int32(Int32(-103))&127):(Int64(69)|1)), ((Int32(Int32(-53))&127)..=(Int32(Int32(8))&127):(Int64(-122)|1)), ((Int32(Int32(-110))&127)..(Int32(Int32(62))&127):(Int64(27)|1)), ((Int32(Int32(-120))&127)..(Int32(Int32(69))&127):(Int64(72)|1)), ((Int32(Int32(68))&127)..(Int32(Int32(-38))&127):(Int64(-42)|1)), ((Int32(Int32(-3))&127)..=(Int32(Int32(-104))&127):(Int64(22)|1))];
        var_1713218456358_480[0]
    } catch (_) { // block id: 483
        [UInt64(241), UInt64(96), UInt64(87), UInt64(143), UInt64(3), UInt64(82), UInt64(65), UInt64(41), UInt64(4), UInt64(80)];
        var loopTimeVar_1713218456358_490 : Int = 0;
        while ((false) && loopTimeVar_1713218456358_490 < 100 ) {
            loopTimeVar_1713218456358_490++;
            continue
        };
        match (var_1713218456358_493) {
            case caseVar_1713218456358_498 : UInt64 => 
                ((Int32(Int32(-109))&127)..(Int32(Int32(62))&127):(Int64(76)|1))
            
            case caseVar_1713218456358_503 : Range<Int64> => 
                var_1713218456358_507 -= var_1713218456358_411;
                ((Int32(var_1713218456358_512)&127)..=(Int32(Int32(-11))&127):(Int64(89)|1))
            
            case _ => 
                if (true) { ((Int32(Int32(-21))&127)..(Int32(Int32(21))&127):(Int64(83)|1)) } else { ((Int32(Int32(-36))&127)..=(Int32(Int32(95))&127):(var_1713218456358_143|1)) } 
            
            case _ => 
                ((Int32(Int32(123))&127)..(Int32(Int32(-23))&127):(Int64(-92)|1))
            
        }
    } finally { // block id: 533
        var loopTimeVar_1713218456358_539 : Int64 = 0;
        while ((true) && loopTimeVar_1713218456358_539 < 100 ) {
            loopTimeVar_1713218456358_539++;
            var_1713218456358_397
        };
        if (false) { // block id: 542
            var_1713218456358_544;
            let var_1713218456358_548 : Option<(Float64, Rune, Bool, Int8)> = (Option<UInt32>.None as (Float64, Rune, Bool, Int8));
            (var_1713218456358_548, var_1713218456358_552, var_1713218456358_552, var_1713218456358_548, ((UInt32(var_1713218456358_21)&127)..(UInt32(UInt32(132))&127):(Int64(4)|1)), Int8(118), var_1713218456358_194, var_1713218456358_411);
            var_1713218456358_572
        } else { // block id: 580
            ((Int32(Int32(-82))&127)..(Int32(Int32(-67))&127):(Int64(-5)|1))
        }
    };
    (Interface_1713218456358_50.func_1713218456358_73(namedParam_1713218456358_587 : var_1713218456358_199)) - (var_1713218456358_424.func_1713218456358_881(var_1713218456358_991, namedParam_1713218456358_883 : var_1713218456358_512, namedParam_1713218456358_884 : var_1713218456358_1062) ?? var_1713218456358_379 - var_1713218456358_379)
}

public struct Struct_1713218456358_1171 {
    public init() { // block id: 1173

    }
;
    public static mut prop var_1713218456358_1176 : Array<UInt64> { // block id: 1177
        get() { // block id: 1179
            (###"Cp``;ruere"### is Int16);
            ((Int64(Int64(-11))&127)..(Int64(Int64(-75))&127):(Int64(38)|1));
            [UInt64(19), UInt64(231), UInt64(194), UInt64(43), UInt64(191), UInt64(124), UInt64(249), UInt64(242), UInt64(100), UInt64(212)];
            var_1713218456358_1382
        }

        set(Value) { // block id: 1186
            ();
            var_1713218456358_1382 = Value
        }

    };
    static var var_1713218456358_1382 : Array<UInt64> = [UInt64(122), UInt64(80), UInt64(229), UInt64(133), UInt64(176), UInt64(146), UInt64(50), UInt64(28), UInt64(123), UInt64(190)]
}

func func_1713218456358_249(param_1713218456358_250 : Float64, namedParam_1713218456358_251 ! : Interface_1713218456358_232, optionalParam_1713218456358_252 ! : UInt32 = UInt32(56), namedParam_1713218456358_254 ! : Interface_1713218456358_50) : Unit { // block id: 255
    let var_1713218456358_259 : (UInt8) -> Bool = { lambdaParameter_1713218456358_262 : UInt8 => ((Class_1713218456358_47() is Range<Int16>) is UInt32) };
    var var_1713218456358_1093 : (Range<Int8>) -> UInt8 = func_1713218456358_269;
    var loopTimeVar_1713218456358_1108 : Int = 0;
    do {
        loopTimeVar_1713218456358_1108++;
        [((Int32(Int32(87))&127)..=(Int32(Int32(103))&127):(Int64(-14)|1)), ((Int32(Int32(108))&127)..(Int32(Int32(-12))&127):(Int64(109)|1)), ((Int32(Int32(-107))&127)..(Int32(Int32(-60))&127):(Int64(-84)|1)), ((Int32(Int32(-47))&127)..(Int32(Int32(-103))&127):(Int64(30)|1)), ((Int32(Int32(-72))&127)..=(Int32(Int32(62))&127):(Int64(23)|1)), ((Int32(Int32(-2))&127)..(Int32(Int32(-113))&127):(Int64(17)|1)), ((Int32(Int32(25))&127)..=(Int32(Int32(101))&127):(Int64(80)|1)), ((Int32(Int32(12))&127)..(Int32(Int32(34))&127):(Int64(-54)|1)), ((Int32(Int32(-59))&127)..(Int32(Int32(-36))&127):(Int64(-80)|1)), ((Int32(Int32(29))&127)..=(Int32(Int32(-125))&127):(Int64(-34)|1))]
    } while ((((((Int8(Int8(-113))&127)..(Int8(var_1713218456358_242)&127):(var_1713218456358_1099|1))|>var_1713218456358_1093)|>var_1713218456358_259)) && loopTimeVar_1713218456358_1108 < 100 ) ;
    var loopTimeVar_1713218456358_1188 : Array<UInt64> = [UInt64(67), UInt64(UInt32(73)), UInt64(UInt32(Int32(UInt16(77)))), UInt64(UInt32(61)), UInt64(Int64(-82)), UInt64(77), UInt64(UInt64(115)), UInt64(UInt16(Int8(26))), UInt64(138), UInt64(170)];
    for (i in loopTimeVar_1713218456358_1188 where (try { // block id: 1112
        var_1713218456358_397;
        var_1713218456358_1115
    } catch (e: Exception) { // block id: 1117
        VArray<UInt64, $9>(repeat: UInt64(187));
        ();
        [var_1713218456358_651, ((Int32(var_1713218456358_1135)&127)..(Int32(Int32(-34))&127):(var_1713218456358_1099|1)), ((Int32(Int32(-47))&127)..=(Int32(Int32(-67))&127):(Int64(-66)|1)), ((Int32(Int32(84))&127)..(Int32(Int32(-1))&127):(Int64(-17)|1)), ((Int32(Int32(-116))&127)..=(Int32(Int32(10))&127):(Int64(-101)|1)), ((Int32(var_1713218456358_1135)&127)..(Int32(var_1713218456358_1135)&127):(var_1713218456358_1099|1)), ((Int32(Int32(90))&127)..(Int32(Int32(12))&127):(Int64(114)|1)), ((Int32(Int32(-97))&127)..(Int32(Int32(94))&127):(Int64(4)|1)), ((Int32(Int32(89))&127)..=(Int32(Int32(-27))&127):(Int64(-28)|1)), ((Int32(Int32(-65))&127)..=(Int32(Int32(-82))&127):(Int64(84)|1))]
    } is (UInt32) -> Class_1713218456358_229)) {
        var var_1713218456358_1164 : Int16 = Int16(Int16(-126));
        if (var_1713218456358_470) { // block id: 1158
            ();
            r'm'
        } else { // block id: 1161
            var_1713218456358_1164 -= Int16(-85);
            var_1713218456358_397;
            var_1713218456358_38
        };
        Struct_1713218456358_1171.var_1713218456358_1176
    };
    var loopTimeVar_1713218456358_1292 : Int64 = 0;
    do {
        loopTimeVar_1713218456358_1292++;
        var var_1713218456358_1272 : Unit = ();
        match (var_1713218456358_912) {
            case caseVar_1713218456358_1245 : (Range<Int16>, Interface_1713218456358_50, Int64, Option<UInt32>, Class_1713218456358_47, Interface_1713218456358_50, Range<Int64>, UInt16) => 
                ();
                ();
                ()
            
            case caseVar_1713218456358_1252 : VArray<UInt64, $9> => 
                var_1713218456358_397;
                var var_1713218456358_1257 : Bool = ((Class_1713218456358_887<Float64, Int8>(), Class_1713218456358_229(((UInt8(UInt8(246))&127)..=(UInt8(UInt8(107))&127):(Int64(-68)|1)), optionalParam_1713218456358_339 : ((Int64(Int64(42))&127)..(Int64(Int64(108))&127):(Int64(-9)|1)), optionalParam_1713218456358_350 : Float32(65.0))) is Array<Range<Int32>>);
                var_1713218456358_1257 ||= var_1713218456358_1257;
                ()
            
            case _ : Option<Bool> => 
                var_1713218456358_651;
                var_1713218456358_1272
            
            case _ : (Interface_1713218456358_50, Class_1713218456358_229) => 
                var_1713218456358_1272
            
            case _ => 
                var var_1713218456358_1283 : Int32 = Int32(UInt16(114));
                var_1713218456358_1283--
            
        };
        Class_1713218456358_229.var_1713218456358_1289
    } while (((if (false) { // block id: 1213
        ((UInt16(var_1713218456358_1216)&127)..=(UInt16(UInt16(92))&127):(Int64(-57)|1));
        Class_1713218456358_887<Float64, Int8>();
        Int64(104)
    } else if (var_1713218456358_470) { // block id: 1223
        var var_1713218456358_1226 : Int64 = Int64(UInt16(Int8(-121)));
        var_1713218456358_1226 << ((Int64(-79)) & 7)
    } else { // block id: 1231
        var var_1713218456358_1233 : Struct_1713218456358_1171 = Struct_1713218456358_1171();
        var_1713218456358_1233;
        if (var_1713218456358_470) { ((UInt32(UInt32(110))&127)..=(UInt32(UInt32(112))&127):(Int64(-26)|1)) } else { ((UInt32(UInt32(24))&127)..(UInt32(UInt32(149))&127):(Int64(-20)|1)) } ;
        Int64(-32)
    } is (Interface_1713218456358_50, Class_1713218456358_229))) && loopTimeVar_1713218456358_1292 < 100 ) 
}


main(): Int64 {
    try {
        var var_1713218456358_13 : Float64 = Float64(Float32(Float32(23.0)));
        (try { // block id: 9
            r'P';
            var_1713218456358_13 ** Int64(18)
        } finally { // block id: 18
            var_1713218456358_21 -= var_1713218456358_21;
            Float64(-121.0)
        }, try { // block id: 26
            var var_1713218456358_29 : Int32 = Int32(UInt16(Int8(56)));
            var_1713218456358_29 ^= var_1713218456358_29;
            var_1713218456358_21 *= var_1713218456358_21;
            var_1713218456358_38
        } finally { // block id: 40
            ();
            if (false) { r'o' } else { var_1713218456358_38 } 
        }, var_1713218456358_52.var_1713218456358_55, Interface_1713218456358_50.func_1713218456358_73(var_1713218456358_242, namedParam_1713218456358_75 : var_1713218456358_13))[1];
        var var_1713218456358_1337 : Range<Int8> = ((Int8(Int8(-63))&127)..=(Int8(Int8(Int8(UInt8(192))))&127):(Int64(120)|1));
        try { // block id: 247
            func_1713218456358_249(Float64(25.0), namedParam_1713218456358_251 : Class_1713218456358_887<Float64, Int8>(), optionalParam_1713218456358_252 : var_1713218456358_21, namedParam_1713218456358_254 : Class_1713218456358_47());
            var loopTimeVar_1713218456358_1324 : Range<UInt64> = ((UInt64(UInt64(UInt32(Int16(-14))))&127)..=(UInt64(UInt64(Int64(UInt64(128))))&127):(Int64(85)|1));
            for (i in loopTimeVar_1713218456358_1324 where var_1713218456358_470) {
                var_1713218456358_1302 |= Int16(111);
                let var_1713218456358_1306 : VArray<Bool, $6> = [false, false, (VArray<Unit, $8>({ i => ()}) is Range<Int64>), (Class_1713218456358_887<Float64, Int8>() is Unit), false, true];
                var_1713218456358_1306
            };
            if (true) { // block id: 1335
                var_1713218456358_1337
            } else if (var_1713218456358_470) { // block id: 1345
                Float64(8.0) / Float64((Int32(Float64(84.0))) | 1);
                var_1713218456358_1337
            } else { // block id: 1350
                ();
                ();
                ((Int8(Int8(-14))&127)..=(Int8(var_1713218456358_242)&127):(Int64(70)|1))
            }
        } catch (_) { // block id: 1357
            Class_1713218456358_47.var_1713218456358_1361
        };
        ((Option<Int64>.None ?? Int64(82)), (var_1713218456358_1099, Int64(15))[1])[0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1713218456358_242*var_1713218456358_242), 64)
        crcCheck.updateBuffer(UInt64(var_1713218456358_1121*var_1713218456358_1121), 64)
        crcCheck.updateBuffer(UInt64(var_1713218456358_1135*var_1713218456358_1135), 64)
        crcCheck.updateBuffer(UInt64(var_1713218456358_1216*var_1713218456358_1216), 64)
        crcCheck.updateBuffer(UInt64(var_1713218456358_1302*var_1713218456358_1302), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1713218456358_229 {

}

extend<T0, T1> Class_1713218456358_887<T0, T1> {

}

extend Class_1713218456358_47 {

}
// ASSERT: scan-8 sema_varray_cjvm_in_ref_type

