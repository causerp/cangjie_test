/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

var var_1667222836066_58 : Float64 = (-4.0)
public var var_1667222836066_230 : Interface_1667222836066_38 = Class_1667222836066_35()
public let var_1667222836066_245 : Range<Int8> = ((Int8(-108)&127)..=(Int8(UInt8(UInt8(58)))&127):((Int64(Int32(105))|1)))
public var var_1667222836066_374 : UInt16 = UInt16(142)
var var_1667222836066_425 : Array<Bool> = [false, false, false, false, true, true, true, false, true, false]
var var_1667222836066_525 : Array<Class_1667222836066_35> = [Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35()]
let var_1667222836066_570 : Bool = false
let var_1667222836066_609 : UInt8 = UInt8(Int8(UInt8(Int8(-46))))
public var var_1667222836066_701 : Option<Array<Class_1667222836066_35>> = Option<Array<Class_1667222836066_35>>.None
let var_1667222836066_770 : Range<UInt32> = ((UInt32(Int8(UInt8(165)))&127)..=(UInt32(59)&127):((76|1)))
let var_1667222836066_943 : Option<Option<Float32>> = Option<Option<Float32>>.None
var var_1667222836066_1036 : (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>) = (((83&127)..(28&127):((Int64(UInt32(Int16(-127)))|1))), [true, false, true, (Option<Array<Class_1667222836066_35>>.None is Range<UInt8>), (((Int32(-66)&127)..=(Int32(-19)&127):((49|1))) is Array<Unit>), ([(), (), (), (), (), (), (), (), (), ()] is Option<Range<Int64>>), false, false, (Class_1667222836066_35() is (Range<UInt64>) -> Bool), (Int32(Int32(-98)) is Rune)], UInt8(203), 29, Int8(-12), Float32(Float32(-127.0)), [UInt64(75), UInt64(160), UInt64(210), UInt64(UInt64(Int16(51))), UInt64(93), UInt64(Int64(UInt16(96))), UInt64(185), UInt64(UInt16(Int8(94))), UInt64(UInt8(UInt8(28))), UInt64(145)])
let var_1667222836066_1109 : Int32 = Int32(UInt8(14))
public let var_1667222836066_1142 : UInt64 = UInt64(151)
public var var_1667222836066_1162 : UInt32 = UInt32(90)
let var_1667222836066_1193 : Int64 = (-53)
public let var_1667222836066_1199 : UInt8 = UInt8(230)
var var_1667222836066_1220 : Int32 = Int32(-28)
public let var_1667222836066_1231 : Range<Int32> = ((Int32(2)&127)..(Int32(-35)&127):((-43)|1))
let var_1667222836066_1248 : Option<Unit> = (Class_1667222836066_35() as Unit)
var var_1667222836066_1539 : ?Class_1667222836066_35 = (() as Class_1667222836066_35)
public interface Interface_1667222836066_38 {
    static func func_1667222836066_965(namedParam_1667222836066_966 ! : Range<UInt32>) : Int32 

}

public open class Class_1667222836066_35 <: Interface_1667222836066_38 & Resource {
    public init() { // block id: 37

    }
;
    static let var_1667222836066_41 : Int8 = Int8(-4);
    static prop var_1667222836066_615 : (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>) { // block id: 616
        get() { // block id: 618
            ();
            (((Int64(UInt8(59))&127)..=(Int64(Int8(110))&127):((Int64(UInt8(230))|1))), [false, false, true, false, true, true, false, true, true, true], UInt8(UInt8(21)), (-31), Int8(UInt8(Int8(-33))), Float32(112.0), [UInt64(222), UInt64(105), UInt64(220), UInt64(213), UInt64(159), UInt64(186), UInt64(248), UInt64(54), UInt64(80), UInt64(53)])
        }

    };
    static let var_1667222836066_642 : UInt32 = UInt32(86);
    static var var_1667222836066_657 : Class_1667222836066_35 = Class_1667222836066_35();
    protected let var_1667222836066_660 : Unit = ();
    public init(namedParam_1667222836066_679 ! : Option<Unit>) { // block id: 680
        var var_1667222836066_709 : Option<Array<Class_1667222836066_35>> = (((UInt64(Int8(Int8(62)))&127)..=(UInt64(68)&127):((Int64(Int8(UInt8(60)))|1))) as Array<Class_1667222836066_35>);
        let var_1667222836066_726 : Option<Range<Int64>> = (UInt32(176) as Range<Int64>);
        var var_1667222836066_730 : Range<Int64> = (((-122)&127)..=((-97)&127):(89|1));
        var var_1667222836066_739 : Class_1667222836066_35 = Class_1667222836066_35();
        (try { // block id: 687
            ();
            [var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, UInt16(70), var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, UInt16(185)];
            var_1667222836066_701
        } catch (_) { // block id: 703
            if (true) { Option<Array<Class_1667222836066_35>>.Some(var_1667222836066_525) } else { var_1667222836066_709 } 
        } ?? match ((var_1667222836066_726 ?? var_1667222836066_730)) {
            case _ => 
                if (var_1667222836066_570) { var_1667222836066_525 } else { [var_1667222836066_739, var_1667222836066_739, Class_1667222836066_35(), var_1667222836066_739, Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), var_1667222836066_739] } 
            
        })
    }
;
    private static prop var_1667222836066_800 : (UInt8, (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>), Option<Option<Float32>>, Range<UInt32>) { // block id: 801
        get() { // block id: 803
            ();
            UInt8(Int8(UInt8(46)));
            (UInt8(Int8(88)), ((((-20)&127)..((-58)&127):((30|1))), [true, false, true, true, true, false, false, false, false, false], UInt8(UInt8(181)), Int64(Int32(15)), Int8(Int8(69)), Float32(-9.0), [UInt64(120), UInt64(141), UInt64(75), UInt64(17), UInt64(52), UInt64(93), UInt64(214), UInt64(196), UInt64(120), UInt64(197)]), (28.0 as Option<Float32>), ((UInt32(238)&127)..=(UInt32(69)&127):(108|1)))
        }

    };
    static mut prop var_1667222836066_858 : Int64 { // block id: 859
        get() { // block id: 861
            ((Int16(35)&127)..(Int16(-65)&127):(124|1));
            Int64(Int64(Int16(UInt16(159))))
        }

        set(Value) { // block id: 869

        }

    };
    public static prop var_1667222836066_872 : Float32 { // block id: 873
        get() { // block id: 875
            Float32(Float32(2.0))
        }

    };
    static let var_1667222836066_885 : UInt64 = UInt64(53);
    protected static func func_1667222836066_965(param_1667222836066_599 : Option<Option<Float32>>, param_1667222836066_600 : Int16, param_1667222836066_601 : Struct_1667222836066_403) : (UInt8, (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>), Option<Option<Float32>>, Range<UInt32>) { // block id: 602
        var var_1667222836066_638 : Option<Option<Float32>> = Option<Option<Float32>>.None;
        var var_1667222836066_664 : Array<UInt16> = [UInt16(11), UInt16(144), UInt16(138), UInt16(156), UInt16(170), UInt16(105), UInt16(182), UInt16(154), UInt16(195), UInt16(48)];
        var var_1667222836066_755 : Range<Int16> = ((Int16(7)&127)..=(Int16(59)&127):(89|1));
        var var_1667222836066_842 : Option<Float32> = (Struct_1667222836066_403() as Float32);
        let var_1667222836066_881 : UInt64 = UInt64(UInt8(15));
        var var_1667222836066_912 : Bool = (((UInt32(6)&127)..(UInt32(225)&127):((-63)|1)) is (Unit, Int64) -> Int8);
        try { // block id: 604
            if (false) { (var_1667222836066_609, var_1667222836066_615, var_1667222836066_638, ((var_1667222836066_642&127)..(var_1667222836066_642&127):((63|1)))) } else { (UInt8(128), var_1667222836066_615, Option<Option<Float32>>.Some(Option<Float32>.Some(Float32(28.0))), ((UInt32(30)&127)..(UInt32(70)&127):((-22)|1))) } 
        } catch (_) { // block id: 653
            ();
            var_1667222836066_657.var_1667222836066_660;
            let var_1667222836066_759 : Bool = (UInt32(Int16(Int8(Int8(-99)))) is (Unit, Int64) -> Int8);
            match (var_1667222836066_664) {
                case _ => 
                    [var_1667222836066_657, var_1667222836066_657, Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), var_1667222836066_657, Class_1667222836066_35(namedParam_1667222836066_679 : Option<Unit>.None), Class_1667222836066_35(), Class_1667222836066_35(namedParam_1667222836066_679 : Option<Unit>.None)];
                    var_1667222836066_755;
                    if (var_1667222836066_759) { (UInt8(127), var_1667222836066_615, var_1667222836066_638, var_1667222836066_770) } else { (UInt8(85), var_1667222836066_615, var_1667222836066_638, ((var_1667222836066_642&127)..(UInt32(149)&127):(((-99)|1)))) } 
                
                case _ => 
                    if (var_1667222836066_570) { (var_1667222836066_609, var_1667222836066_615, Option<Option<Float32>>.Some(Option<Float32>.Some(Float32(-37.0))), ((UInt32(75)&127)..=(var_1667222836066_642&127):(((-56)|1)))) } else { var_1667222836066_800 } 
                
            }
        } finally { // block id: 838
            let var_1667222836066_848 : Option<Range<Int64>> = (((Int8(75)&127)..(Int8(-66)&127):((-107)|1)) as Range<Int64>);
            try { // block id: 840
                var_1667222836066_842;
                var_1667222836066_800
            } catch (_) { // block id: 846
                var_1667222836066_848;
                (var_1667222836066_609, ((((-127)&127)..(53&127):(9|1)), [true, false, true, true, false, false, true, false, true, true], UInt8(99), var_1667222836066_858, Int8(-104), var_1667222836066_872, [UInt64(165), var_1667222836066_881, var_1667222836066_885, var_1667222836066_881, UInt64(130), UInt64(109), var_1667222836066_885, var_1667222836066_881, UInt64(7), var_1667222836066_881]), var_1667222836066_638, ((var_1667222836066_642&127)..(UInt32(232)&127):(((-57)|1))))
            } finally { // block id: 899
                ((var_1667222836066_609&127)..=(var_1667222836066_609&127):(((-53)|1)));
                var var_1667222836066_927 : Array<UInt64> = [UInt64(93), UInt64(110), UInt64(180), UInt64(93), UInt64(2), UInt64(91), UInt64(215), UInt64(Int16(-16)), UInt64(231), UInt64(8)];
                (var_1667222836066_609, (((95&127)..(113&127):(102|1)), [var_1667222836066_570, var_1667222836066_570, var_1667222836066_912, true, var_1667222836066_570, var_1667222836066_570, true, var_1667222836066_912, true, false], var_1667222836066_609, 10, Int8(105), var_1667222836066_872, var_1667222836066_927), var_1667222836066_638, var_1667222836066_770)
            }
        }
    }
;
    public init(namedParam_1667222836066_589 ! : Int64, namedParam_1667222836066_590 ! : String, namedParam_1667222836066_591 ! : Float32) { // block id: 592
        let var_1667222836066_946 : Int16 = Int16(42);
        Class_1667222836066_35.func_1667222836066_965(var_1667222836066_943, var_1667222836066_946, Struct_1667222836066_403())[2]
    }
;
    public static mut prop var_1667222836066_1002 : Unit { // block id: 1003
        get() { // block id: 1005
            Struct_1667222836066_403();
            ();
            ();
            var_1667222836066_1661
        }

        set(Value) { // block id: 1011
            ();
            var_1667222836066_1661 = Value
        }

    };
    public static mut prop var_1667222836066_1114 : Range<Int64> { // block id: 1115
        get() { // block id: 1117
            '8';
            Option<Float32>.None;
            (((-120)&127)..=(72&127):(14|1))
        }

        set(Value) { // block id: 1123
            ();
            ()
        }

    };
    public static func func_1667222836066_965(namedParam_1667222836066_966 ! : Range<UInt32>) : Int32 { // block id: 967
        let var_1667222836066_985 : Option<Array<Class_1667222836066_35>> = Option<Array<Class_1667222836066_35>>.None;
        match (try { // block id: 970
            var_1667222836066_701
        } finally { // block id: 972
            var var_1667222836066_975 : Bool = (((UInt32(81)&127)..(UInt32(141)&127):((-88)|1)) is Array<Bool>);
            var_1667222836066_975 &&= var_1667222836066_975;
            var var_1667222836066_980 : Unit = ();
            var_1667222836066_980;
            if (false) { var_1667222836066_985 } else { Option<Array<Class_1667222836066_35>>.Some([var_1667222836066_657, var_1667222836066_657, Class_1667222836066_35(), var_1667222836066_657, Class_1667222836066_35(), var_1667222836066_657, Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35()]) } 
        }) {
            case _ => 
                var_1667222836066_1002;
                var_1667222836066_1002
            
        };
        ();
        let var_1667222836066_1021 : Option<Int32> = (Int32(UInt32(169)) as Int32);
        let var_1667222836066_1138 : UInt64 = UInt64(180);
        var var_1667222836066_1148 : Range<Int16> = ((Int16(Int16(UInt16(Int16(67))))&127)..=(Int16(62)&127):((Int64(UInt32(Int16(Int8(-33))))|1)));
        (var_1667222836066_1021 ?? if (true) { (UInt16(28), ((Int8(61)&127)..=(Int8(-80)&127):((-104)|1)), UInt64(219), Float32(84.0), Int32(51), var_1667222836066_1036, var_1667222836066_245, ((Int16(74)&127)..=(Int16(49)&127):((var_1667222836066_858|1)))) } else { (UInt16(18), ((Int8(15)&127)..=(Int8(-48)&127):((-46)|1)), UInt64(69), Float32(-65.0), var_1667222836066_1109, (var_1667222836066_1114, [false, true, true, true, false, false, true, false, true, false], UInt8(189), var_1667222836066_858, Int8(-31), var_1667222836066_872, [var_1667222836066_885, var_1667222836066_885, var_1667222836066_885, var_1667222836066_885, var_1667222836066_885, var_1667222836066_1138, var_1667222836066_885, var_1667222836066_1142, var_1667222836066_885, var_1667222836066_1138]), ((Int8(122)&127)..(Int8(-49)&127):((-16)|1)), var_1667222836066_1148) } [4])
    }
;
    public init(param_1667222836066_957 : Range<UInt16>) { // block id: 958
        let var_1667222836066_960 : UInt64 = UInt64(116);
        var_1667222836066_960;
        let var_1667222836066_1166 : Int64 = 44;
        Class_1667222836066_35.func_1667222836066_965(namedParam_1667222836066_966 : ((var_1667222836066_1162&127)..=(UInt32(134)&127):((var_1667222836066_1166|1))));
        var var_1667222836066_1169 : Unit = ();
        var_1667222836066_1169
    }
;
    static mut prop var_1667222836066_1605 : (Float32, Float64, Int32, Range<UInt8>) { // block id: 1606
        get() { // block id: 1608
            ();
            (Float32(-112.0), Float64(Float64((-85.0))), Int32(UInt32(12)), ((UInt8(223)&127)..=(UInt8(173)&127):(62|1)))
        }

        set(Value) { // block id: 1620
            ();
            UInt64(142);
            ()
        }

    };
    static var var_1667222836066_1661 : Unit = ()
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}


func func_1667222836066_70() : Float64 { // block id: 71
    var var_1667222836066_113 : (Float32, Float64, Int32, Range<UInt8>) = (Float32(Float32(-85.0)), Float64(Float32(Float32(-44.0))), Int32(-96), ((UInt8(65)&127)..=(UInt8(69)&127):(33|1)));
    var var_1667222836066_130 : Int8 = Int8(-100);
    let var_1667222836066_134 : Array<Bool> = [true, false, (() is Range<UInt16>), false, (UInt64(UInt64(175)) is Int16), false, ([(), (), (), (), (), (), (), (), (), ()] is Array<UInt64>), false, (Float32(Float32(-23.0)) is Interface_1667222836066_38), (Int64(UInt64(182)) is Float32)];
    var var_1667222836066_198 : Bool = false;
    var var_1667222836066_202 : UInt64 = UInt64(156);
    var var_1667222836066_212 : Unit = ();
    if (false) { // block id: 74
        let var_1667222836066_87 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var_1667222836066_87[7];
        let var_1667222836066_108 : Unit = ();
        (Option<Unit>.Some(()) ?? var_1667222836066_108);
        var_1667222836066_113[1]
    } else if (try { // block id: 126
        ();
        var_1667222836066_130 = var_1667222836066_130;
        var_1667222836066_134
    } finally { // block id: 154
        ();
        [true, true, false, false, false, true, true, true, true, true]
    }[1]) { // block id: 158
        var loopTimeVar_1667222836066_162 : Array<Bool> = [false, (((Int16(Int8(49))&127)..=(Int16(Int8(25))&127):((Int64(Int32(-55))|1))) is Float32), true, false, ([true, false, false, false, false, false, false, false, false, true] is Int64), false, true, (Float32(114.0) is Bool), ((Float32(Float32(85.0)), (-92.0), Int32(-10), ((UInt8(129)&127)..=(UInt8(41)&127):(13|1))) is Range<UInt16>), (((UInt32(UInt32(42))&127)..=(UInt32(206)&127):(((-112)|1))) is Range<Int16>)];
        for (i in loopTimeVar_1667222836066_162 where false) {

        };
        var_1667222836066_58
    } else { // block id: 195
        if (var_1667222836066_198) { // block id: 200
            var_1667222836066_202;
            var_1667222836066_198 &&= var_1667222836066_198;
            var_1667222836066_58
        } else if (false) { // block id: 209
            Int16(51);
            var_1667222836066_212;
            var_1667222836066_58
        } else { // block id: 215
            (-7.0)
        }
    }
}


public func func_1667222836066_294(param_1667222836066_295 : Range<UInt64>) : Bool { // block id: 296
    true
}

public struct Struct_1667222836066_403 {
    public init() { // block id: 405

    }
;
    prop var_1667222836066_410 : UInt16 { // block id: 411
        get() { // block id: 413
            UInt16(173)
        }

    }
}








func func_1667222836066_539(param_1667222836066_540 : (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>)) : Class_1667222836066_35 { // block id: 541
    let var_1667222836066_554 : Option<Option<Float32>> = ((Float32(Float32(-5.0)), 82.0, Int32(UInt16(UInt16(199))), ((UInt8(172)&127)..=(UInt8(218)&127):((-43)|1))) as Option<Float32>);
    var var_1667222836066_565 : Option<Float32> = (((Int8(99)&127)..=(Int8(-36)&127):((-115)|1)) as Float32);
    var var_1667222836066_1186 : Float32 = Float32(52.0);
    Float32(((var_1667222836066_554 ?? var_1667222836066_565) ?? if (var_1667222836066_570) { // block id: 572
        var var_1667222836066_574 : Unit = ();
        var_1667222836066_574;
        var var_1667222836066_580 : ?Array<Class_1667222836066_35> = Option<Array<Class_1667222836066_35>>.Some([Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(), Class_1667222836066_35(namedParam_1667222836066_589 : Int64(Int8(-104)), namedParam_1667222836066_590 : """
}z,GP
nvE8q
""", namedParam_1667222836066_591 : Float32(2.0)), Class_1667222836066_35(), Class_1667222836066_35(((UInt16(99)&127)..=(UInt16(16)&127):(((-28)|1)))), Class_1667222836066_35(namedParam_1667222836066_679 : (Int16(73) as Unit)), Class_1667222836066_35(), Class_1667222836066_35(((UInt16(211)&127)..(UInt16(45)&127):(((-8)|1))))]);
        if (var_1667222836066_570) { Option<Array<Class_1667222836066_35>>.None } else { var_1667222836066_580 } ;
        var_1667222836066_1186 / Float32((Int32(var_1667222836066_1186)) | 1)
    } else { // block id: 1189
        var_1667222836066_1186
    }));
    ((var_1667222836066_1193&127)..(var_1667222836066_1193&127):((Int64((var_1667222836066_1199 % ((var_1667222836066_1199) | 1)))|1)));
    var var_1667222836066_1212 : Class_1667222836066_35 = Class_1667222836066_35(namedParam_1667222836066_589 : 2, namedParam_1667222836066_590 : ###"}1xW]D4zla{"###, namedParam_1667222836066_591 : Float32(14.0));
    var var_1667222836066_1244 : Unit = ();
    var var_1667222836066_1309 : (Class_1667222836066_35, Range<Int64>) = (Class_1667222836066_35(), (((-87)&127)..((-96)&127):((Int64(UInt64(UInt32(94)))|1))));
    var var_1667222836066_1341 : String = """
`0'M<
YK~zF
""";
    [Class_1667222836066_35(), try { // block id: 1206
        if (false) { Class_1667222836066_35() } else { var_1667222836066_1212 } 
    } finally { // block id: 1217
        var_1667222836066_1220 %= ((var_1667222836066_1220) | 1);
        ();
        Class_1667222836066_35(namedParam_1667222836066_589 : var_1667222836066_1193, namedParam_1667222836066_590 : "%J`J6Ej)e)", namedParam_1667222836066_591 : var_1667222836066_1186)
    }, try { // block id: 1229
        var_1667222836066_1231;
        let var_1667222836066_1237 : Option<Unit> = Option<Unit>.None;
        if (false) { Class_1667222836066_35(namedParam_1667222836066_679 : var_1667222836066_1237) } else { var_1667222836066_1212 } 
    } finally { // block id: 1240
        Option<Float32>.Some(Float32(78.0));
        var_1667222836066_1244;
        Class_1667222836066_35(namedParam_1667222836066_679 : var_1667222836066_1248)
    }, match (var_1667222836066_943) {
        case _ => 
            let var_1667222836066_1259 : ?Interface_1667222836066_38 = (((UInt64(110)&127)..(UInt64(120)&127):(5|1)) as Interface_1667222836066_38);
            if (false) { var_1667222836066_1259 } else { var_1667222836066_1259 } ;
            let var_1667222836066_1267 : Class_1667222836066_35 = Class_1667222836066_35(namedParam_1667222836066_589 : Int64(Int64(UInt8(Int8(-54)))), namedParam_1667222836066_590 : """
U<Yu6
+_o:+
""", namedParam_1667222836066_591 : Float32(-110.0));
            if (var_1667222836066_570) { var_1667222836066_1212 } else { var_1667222836066_1267 } 
        
        case _ => 
            var_1667222836066_609;
            if (false) { Class_1667222836066_35() } else { Class_1667222836066_35(namedParam_1667222836066_589 : (-8), namedParam_1667222836066_590 : """
FT}!I
1a{y3E
""", namedParam_1667222836066_591 : var_1667222836066_1186) } 
        
        case _ => 
            var_1667222836066_1212
        
        case caseVar_1667222836066_1292 : Array<Bool> => 
            var_1667222836066_245;
            if (true) { var_1667222836066_1212 } else { var_1667222836066_1212 } 
        
        case _ => 
            var_1667222836066_1220--;
            27;
            var_1667222836066_1212
        
    }, var_1667222836066_1212, var_1667222836066_1309[0], (Option<Class_1667222836066_35>.Some(Class_1667222836066_35()) ?? Class_1667222836066_35(((UInt16(25)&127)..(UInt16(100)&127):(((-96)|1))))), var_1667222836066_1212, [Class_1667222836066_35(namedParam_1667222836066_679 : Option<Unit>.Some(var_1667222836066_1244)), Class_1667222836066_35(), Class_1667222836066_35(namedParam_1667222836066_589 : var_1667222836066_1193, namedParam_1667222836066_590 : var_1667222836066_1341, namedParam_1667222836066_591 : var_1667222836066_1186), Class_1667222836066_35(), Class_1667222836066_35(namedParam_1667222836066_589 : (-107), namedParam_1667222836066_590 : var_1667222836066_1341, namedParam_1667222836066_591 : Float32(21.0)), var_1667222836066_1212, Class_1667222836066_35(), var_1667222836066_1212, var_1667222836066_1212, var_1667222836066_1212][1], if (var_1667222836066_570) { var_1667222836066_1212 } else { var_1667222836066_1212 } ][3]
}

public func func_1667222836066_218(param_1667222836066_219 : Range<UInt64>) : Int64 { // block id: 220
    let var_1667222836066_329 : Float32 = Float32(Float32(92.0));
    func func_1667222836066_270(optionalParam_1667222836066_271 ! : Array<UInt64> = [UInt64(233), UInt64(237), UInt64(UInt64(Int32(-22))), UInt64(141), UInt64(Int16(-11)), UInt64(22), UInt64(75), UInt64(227), UInt64(38), UInt64(UInt64(UInt8(81)))], optionalParam_1667222836066_288 ! : Int8 = Int8(-105), optionalParam_1667222836066_290 ! : Range<UInt32> = ((UInt32(98)&127)..=(UInt32(155)&127):(35|1))) : Bool { // block id: 292
        let var_1667222836066_316 : Range<Int64> = ((11&127)..(Int64(UInt64(Int8(-108)))&127):(((-106)|1)));
        let var_1667222836066_326 : Unit = ();
        ((UInt64(90)&127)..=(UInt64(120)&127):((-31)|1))|>{ lambdaParameter_1667222836066_300 : Range<UInt64> => let var_1667222836066_307 : Bool = (Int16(UInt16(Int8(Int8(40)))) is Int64); var var_1667222836066_336 : (Bool, Unit, Float32) = (true, (), Float32(Float32(100.0))); !if (var_1667222836066_307) { // block id: 313
            var_1667222836066_230;
            var_1667222836066_316;
            (var_1667222836066_307, var_1667222836066_326, var_1667222836066_329)
        } else if (false) { // block id: 333
            var_1667222836066_326;
            var_1667222836066_336
        } else { // block id: 342
            (var_1667222836066_307, var_1667222836066_326, var_1667222836066_329)
        }[0] }
    }
;
    try { // block id: 222
        (Option<Interface_1667222836066_38>.None ?? var_1667222836066_230);
        Option<Unit>.None.getOrThrow();
        var var_1667222836066_236 : Bool = true;
        if (var_1667222836066_236) { // block id: 238
            true && var_1667222836066_236
        } else if (false) { // block id: 243
            var_1667222836066_245;
            var_1667222836066_236
        } else { // block id: 254
            ();
            var_1667222836066_236 &&= var_1667222836066_236;
            let var_1667222836066_261 : UInt8 = UInt8(Int8(UInt8(UInt8(UInt8(239)))));
            var_1667222836066_261 > var_1667222836066_261
        }
    } catch (e: Exception) { // block id: 268
        let var_1667222836066_350 : Int8 = Int8(-67);
        func_1667222836066_270(optionalParam_1667222836066_288 : var_1667222836066_350)
    };
    let var_1667222836066_428 : UInt8 = UInt8(170);
    let var_1667222836066_441 : UInt64 = UInt64(Int8(Int8(-58)));
    let var_1667222836066_1454 : (Array<Bool>, Array<UInt64>) = ([true, true, (((UInt8(174)&127)..(UInt8(138)&127):((6|1))) is Option<Range<Int64>>), ((UInt8(142), ((((-70)&127)..(43&127):(3|1)), [true, false, false, true, true, false, true, true, true, false], UInt8(59), (-49), Int8(80), Float32(-78.0), [UInt64(142), UInt64(10), UInt64(223), UInt64(253), UInt64(198), UInt64(215), UInt64(102), UInt64(56), UInt64(83), UInt64(50)]), Option<Option<Float32>>.Some(Option<Float32>.None), ((UInt32(10)&127)..=(UInt32(27)&127):((-23)|1))) is (Range<UInt64>) -> Bool), false, (((Int32(-82)&127)..=(Int32(-22)&127):(23|1)) is Int64), ((UInt16(86), ((Int8(-59)&127)..=(Int8(-47)&127):((44|1))), UInt64(171), Float32(-27.0), Int32(-35), (((93&127)..=((-23)&127):((26|1))), [true, true, true, false, true, true, true, false, false, false], UInt8(123), (-1), Int8(11), Float32(75.0), [UInt64(56), UInt64(50), UInt64(35), UInt64(107), UInt64(157), UInt64(142), UInt64(144), UInt64(52), UInt64(232), UInt64(181)]), ((Int8(-79)&127)..=(Int8(72)&127):((-119)|1)), ((Int16(-110)&127)..(Int16(112)&127):(((-111)|1)))) is (Bool, Unit, Float32)), (Int32(Int8(-127)) is Option<Int32>), true, ([UInt16(3), UInt16(193), UInt16(19), UInt16(103), UInt16(136), UInt16(80), UInt16(221), UInt16(140), UInt16(182), UInt16(86)] is Option<Float32>)], [UInt64(82), UInt64(135), UInt64(159), UInt64(Int8(UInt8(74))), UInt64(Int64(UInt16(209))), UInt64(Int8(34)), UInt64(24), UInt64(Int64(Int32(119))), UInt64(Int64(UInt16(17))), UInt64(Int64(UInt32(245)))]);
    func func_1667222836066_354(param_1667222836066_355 : Unit, param_1667222836066_356 : (Float32, Float64, Int32, Range<UInt8>)) : Array<UInt64> { // block id: 357
        let var_1667222836066_396 : Int64 = 72;
        let var_1667222836066_407 : Struct_1667222836066_403 = Struct_1667222836066_403();
        let var_1667222836066_457 : ?Interface_1667222836066_38 = Option<Interface_1667222836066_38>.None;
        let var_1667222836066_475 : Range<UInt32> = ((UInt32(162)&127)..(UInt32(UInt32(177))&127):((111|1)));
        let var_1667222836066_512 : Bool = false;
        let var_1667222836066_1361 : ((Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>)) -> Class_1667222836066_35 = func_1667222836066_539;
        let var_1667222836066_1407 : Array<UInt64> = [UInt64(Int64(UInt64(Int32(114)))), UInt64(Int32(0)), UInt64(252), UInt64(217), UInt64(Int64(UInt8(Int8(124)))), UInt64(238), UInt64(239), UInt64(Int64(UInt64(UInt8(8)))), UInt64(38), UInt64(UInt16(53))];
        let var_1667222836066_1442 : Bool = true;
        let var_1667222836066_1544 : (Array<Bool>, Array<UInt64>) = ([true, true, true, true, false, false, true, false, true, true], [UInt64(247), UInt64(71), UInt64(245), UInt64(24), UInt64(72), UInt64(40), UInt64(87), UInt64(228), UInt64(106), UInt64(236)]);
        func func_1667222836066_361(namedParam_1667222836066_362 ! : UInt16) : Array<Bool> { // block id: 363
            [UInt16(230), UInt16(220), UInt16(132), UInt16(138), UInt16(147), var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, var_1667222836066_374, var_1667222836066_374][7] * (match (Option<Interface_1667222836066_38>.None) {
                case caseVar_1667222836066_386 => 
                    ();
                    UInt16(245) - UInt16(88)
                
                case _ : UInt32 => 
                    var_1667222836066_396;
                    UInt16(194)
                
                case _ => 
                    var_1667222836066_374
                
            } | (var_1667222836066_407.var_1667222836066_410));
            let var_1667222836066_432 : Int8 = Int8(UInt8(Int8(Int8(UInt8(166)))));
            var var_1667222836066_500 : UInt32 = UInt32(Int16(-106));
            var var_1667222836066_1378 : UInt64 = UInt64(UInt16(107));
            if (func_1667222836066_270(optionalParam_1667222836066_288 : ((((-41)&127)..((-49)&127):((var_1667222836066_396|1))), var_1667222836066_425, var_1667222836066_428, var_1667222836066_396, var_1667222836066_432, Float32(-36.0), [var_1667222836066_441, UInt64(167), var_1667222836066_441, UInt64(28), UInt64(155), UInt64(5), UInt64(225), var_1667222836066_441, UInt64(149), var_1667222836066_441])[4], optionalParam_1667222836066_290 : match (var_1667222836066_457) {
                case caseVar_1667222836066_461 => 
                    var_1667222836066_374 |= UInt16(70);
                    var var_1667222836066_468 : UInt64 = UInt64(Int16(Int16(UInt8(62))));
                    var_1667222836066_468 -= UInt64(223);
                    var_1667222836066_475
                
                case caseVar_1667222836066_483 => 
                    let var_1667222836066_486 : Unit = ();
                    var_1667222836066_486;
                    ((UInt32(119)&127)..=(UInt32(4)&127):(45|1))
                
                case _ : Range<UInt64> => 
                    var_1667222836066_475
                
                case caseVar_1667222836066_495 : Rune => 
                    ((UInt32(203)&127)..=(var_1667222836066_500&127):((var_1667222836066_396|1)))
                
                case _ => 
                    var var_1667222836066_507 : Unit = ();
                    var_1667222836066_507;
                    var_1667222836066_507;
                    if (var_1667222836066_512) { var_1667222836066_475 } else { ((UInt32(52)&127)..=(UInt32(40)&127):(65|1)) } 
                
            })) { (Option<Array<Class_1667222836066_35>>.None ?? var_1667222836066_525)[1] } else { (((), [var_1667222836066_441, UInt64(212), var_1667222836066_441, var_1667222836066_1142, UInt64(168), var_1667222836066_441, var_1667222836066_441, var_1667222836066_1142, var_1667222836066_441, var_1667222836066_1378], var_1667222836066_1036, UInt8(7), Int8(108))[2]|>var_1667222836066_1361) } ;
            if (true) { // block id: 1389
                var_1667222836066_1378++;
                let var_1667222836066_1431 : (Array<Bool>, Array<UInt64>) = ([true, false, true, false, true, false, false, true, true, false], [UInt64(56), UInt64(109), UInt64(33), UInt64(50), UInt64(227), UInt64(11), UInt64(99), UInt64(115), UInt64(134), UInt64(185)]);
                if (var_1667222836066_512) { ([false, true, true, true, var_1667222836066_570, true, var_1667222836066_570, var_1667222836066_570, var_1667222836066_570, true], var_1667222836066_1407) } else { var_1667222836066_1431 } ;
                var_1667222836066_1431
            } else if ([true, var_1667222836066_512, var_1667222836066_570, var_1667222836066_1442, true, true, true, false, true, var_1667222836066_570][2]) { // block id: 1451
                ();
                var_1667222836066_1454
            } else { // block id: 1535
                if (false) { var_1667222836066_1539 } else { var_1667222836066_1539 } ;
                var_1667222836066_1544
            }[0]
        }
;
        try (resource = Class_1667222836066_35()) { // block id: 359
            func_1667222836066_361(namedParam_1667222836066_362 : UInt16(95));
            if (true) { // block id: 1552
                var_1667222836066_1162 |= UInt32(184);
                ();
                var var_1667222836066_1558 : Unit = ();
                var_1667222836066_1558
            }
        } finally { // block id: 1560

        };
        var var_1667222836066_1585 : UInt64 = UInt64(114);
        try { // block id: 1562
            var loopTimeVar_1667222836066_1567 : Int64 = 0;
            while ((false) && loopTimeVar_1667222836066_1567 < 100 ) {
                loopTimeVar_1667222836066_1567++;

            };
            [UInt64(97), UInt64(74), UInt64(77), UInt64(118), UInt64(219), UInt64(109), UInt64(235), UInt64(247), UInt64(244), UInt64(10)]
        } catch (e: Exception) { // block id: 1569
            if (false) { [UInt64(111), UInt64(5), UInt64(46), UInt64(27), UInt64(177), var_1667222836066_1142, UInt64(248), UInt64(220), UInt64(17), var_1667222836066_1142] } else { [var_1667222836066_1585, var_1667222836066_441, var_1667222836066_1142, UInt64(11), UInt64(167), UInt64(42), UInt64(208), var_1667222836066_1585, UInt64(252), var_1667222836066_441] } 
        } finally { // block id: 1596
            Int8(7);
            var_1667222836066_1407
        }
    }
;
    match (func_1667222836066_354(Class_1667222836066_35.var_1667222836066_1002, Class_1667222836066_35.var_1667222836066_1605)) {
        case caseVar_1667222836066_1626 : (UInt8, (Range<Int64>, Array<Bool>, UInt8, Int64, Int8, Float32, Array<UInt64>), Option<Option<Float32>>, Range<UInt32>) => 
            84 >> ((var_1667222836066_1193) & 7)
        
        case _ => 
            let var_1667222836066_1634 : Unit = ();
            var_1667222836066_1634;
            var_1667222836066_1193
        
    }
}

main(): Int64 {
    try {
        let var_1667222836066_32 : Unit = ();
        func func_1667222836066_7(optionalParam_1667222836066_8 ! : Int64 = 32, namedParam_1667222836066_10 ! : Float64) : Bool { // block id: 11
            var var_1667222836066_16 : Int8 = Int8(UInt8(Int8(107)));
            var var_1667222836066_52 : Float32 = Float32(-42.0);
            try { // block id: 13
                var_1667222836066_16 % ((Int8(87)) | 1);
                func func_1667222836066_22(param_1667222836066_23 : Unit, namedParam_1667222836066_24 ! : Int64) : Int8 { // block id: 25
                    try { // block id: 27
                        -Int8(124)
                    } catch (_) { // block id: 30
                        var_1667222836066_32;
                        Class_1667222836066_35.var_1667222836066_41
                    }
                }
;
                var var_1667222836066_45 : Int64 = (-30);
                func_1667222836066_22(var_1667222836066_32, namedParam_1667222836066_24 : var_1667222836066_45);
                true
            } finally { // block id: 48
                Float32(98.0) >= var_1667222836066_52
            }
        }
;
        let var_1667222836066_55 : Int64 = 124;
        let var_1667222836066_64 : UInt64 = UInt64(10);
        var loopTimeVar_1667222836066_68 : Int64 = 0;
        while ((func_1667222836066_7(optionalParam_1667222836066_8 : var_1667222836066_55, namedParam_1667222836066_10 : var_1667222836066_58)) && loopTimeVar_1667222836066_68 < 100 ) {
            loopTimeVar_1667222836066_68++;
            UInt64(127) + var_1667222836066_64;
            var_1667222836066_58
        };
        func_1667222836066_70();
        let var_1667222836066_1641 : (Range<UInt64>, Int16, Array<Unit>) = (((UInt64(238)&127)..(UInt64(146)&127):(91|1)), Int16(UInt16(UInt16(105))), [(), (), (), (), (), (), (), (), (), ()]);
        var_1667222836066_1641[0]|>func_1667222836066_218
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1667222836066_55*var_1667222836066_55), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_64*var_1667222836066_64), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_374*var_1667222836066_374), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_609*var_1667222836066_609), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1109*var_1667222836066_1109), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1142*var_1667222836066_1142), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1162*var_1667222836066_1162), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1193*var_1667222836066_1193), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1199*var_1667222836066_1199), 64)
        crccheck.updateBuffer(UInt64(var_1667222836066_1220*var_1667222836066_1220), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1667222836066_35 {

}

