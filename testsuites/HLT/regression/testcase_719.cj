/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1731937914449_17: Byte = UInt8(UInt8(Int8(-4)))
public let var_1731937914449_22: Bool = true
@Deprecated
public const var_1731937914449_92: UInt32 = 238
@Deprecated
public const var_1731937914449_95: Unit = ()
public var var_1731937914449_157: Int64 = Int64(UInt8(161))
public let var_1731937914449_207: Array<Bool> = [true, true, true, true, true, false, true, false, true, true]
internal let var_1731937914449_250: Class_1731937914449_241 = Class_1731937914449_241()
public const var_1731937914449_297: Int16 = 23
public var var_1731937914449_319: Option<Option<UInt64>> = (Int16(UInt16(UInt8(137))) as Option<UInt64>)
@Deprecated
const var_1731937914449_337: UInt = 154
@Deprecated
public var var_1731937914449_357: Class_1731937914449_241 = Class_1731937914449_241()
public let var_1731937914449_474: Range<Int8> = ((Int8(Int8(75)) & 127)..=(Int8(Int8(1)) & 127) : (Int64(-127) | 1))
public var var_1731937914449_487: Bool = true
public var var_1731937914449_500: Int32 = Int32(UInt8(UInt8(Int8(-48))))
public var var_1731937914449_526: Float32 = Float32(-91.0)
public let var_1731937914449_554: String = """
}s,;E
B`r]/
"""
@Deprecated
let var_1731937914449_620: VArray<Int64, $7> = [Int64(16), Int64(UInt32(112)), Int64(79), Int64(UInt32(113)), Int64(33),
    Int64(-38), Int64(Int16(UInt16(202)))]
public const var_1731937914449_653: Int = 97
public var var_1731937914449_660: Int8 = Int8(UInt8(59))
@Deprecated
let var_1731937914449_708: ?Int8 = Option<Int8>.None
@Deprecated
public let var_1731937914449_722: (Range<UInt32>, Rune, Rune, Range<Int32>, Class_1731937914449_241, Rune) = (((UInt32(UInt32(28)) &
        127)..(UInt32(UInt32(Int16(96))) & 127) : (Int64(Int64(-122)) | 1)), r'8', r'y', ((Int32(Int32(-117)) & 127)..=(Int32(Int32(-29)) &
        127) : (Int64(-9) | 1)), Class_1731937914449_241(), r'7')
public const var_1731937914449_750: Bool = true
public var var_1731937914449_755: Range<Int32> = ((Int32(Int32(67)) & 127)..=(Int32(Int32(Int16(UInt8(160)))) & 127) : (Int64(Int32(112)) |
    1))
@Deprecated
var var_1731937914449_775: Byte = UInt8(UInt8(Int8(58)))
@Deprecated
public let var_1731937914449_804: Class_1731937914449_800 = Class_1731937914449_800()
@Deprecated
let var_1731937914449_848: Struct_1731937914449_844 = Struct_1731937914449_844()
let var_1731937914449_900: VArray<Unit, $3> = [(), (), ()]
internal var var_1731937914449_965: UInt32 = UInt32(59)
public var var_1731937914449_981: Bool = (((Int32(Int32(41)) & 127)..=(Int32(Int32(UInt32(113))) & 127) : (Int64(Int16(UInt16(237))) |
    1)) is (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8))
let var_1731937914449_1012: ?(Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, 
    Interface_1731937914449_245) = Option<(Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, 
        Interface_1731937914449_245)>.None
@Deprecated
public let var_1731937914449_1015: (Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, 
    Interface_1731937914449_245) = ([false, true, true, false, false, true, true, true, false, true], [true, true, false,
        true, false, true, true, false, true, true], [UInt64(186), UInt64(172), UInt64(3), UInt64(190), UInt64(217),
        UInt64(203), UInt64(18), UInt64(36), UInt64(30), UInt64(214)], Class_1731937914449_241(),
    Class_1731937914449_241())
public var var_1731937914449_1037: Array<Bool> = [true, false, true, false, false, false, false, false, true, false]
public let var_1731937914449_1040: Array<UInt64> = [UInt64(Int16(Int8(-116))), UInt64(UInt32(121)), UInt64(215),
    UInt64(188), UInt64(Int8(33)), UInt64(UInt8(0)), UInt64(115), UInt64(205), UInt64(Int8(UInt8(18))), UInt64(48)]
public let var_1731937914449_1060: Interface_1731937914449_246 = Class_1731937914449_800()
@Deprecated
public var var_1731937914449_1063: Interface_1731937914449_245 = Class_1731937914449_800()
@Deprecated
public let var_1731937914449_1069: Int = Int64(126)
public let var_1731937914449_1115: ?Unit = (((UInt64(UInt64(82)) & 127)..(UInt64(UInt64(226)) & 127) : (Int64(-37) | 1)) as Unit)
@Deprecated
public let var_1731937914449_1120: Unit = ()
internal let var_1731937914449_1138: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()]
internal let var_1731937914449_1330: ?Unit = (UInt16(UInt8(UInt8(146))) as Unit)
public let var_1731937914449_1602: UInt16 = UInt16(Int8(-31))
@Deprecated
public var var_1731937914449_1987: Range<UInt16> = ((UInt16(UInt16(91)) & 127)..(UInt16(UInt16(184)) & 127) : (Int64(-126) |
    1))
@Deprecated
public let var_1731937914449_2259: (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, 
    UInt8) = (([(), (), (), (), (), (), (), (), (), ()] as Option<UInt64>), ((Int8(Int8(-63)) & 127)..=(Int8(Int8(Int8(12))) &
        127) : (Int64(-110) | 1)), ((((UInt32(UInt32(29)) & 127)..=(UInt32(UInt32(138)) & 127) : (Int64(116) | 1)) is (Bool, 
            UInt64, UInt16, Int32, Int16)), UInt64(198), UInt16(Int8(72)), Int32(Int32(Int32(-80))), Int16(120)), ((Int64(Int64(-24)) &
        127)..(Int64(Int64(-18)) & 127) : (Int64(UInt32(Int32(48))) | 1)), UInt8(30))
public let var_1731937914449_2301: Range<Int64> = ((Int64(Int64(120)) & 127)..(Int64(Int64(-60)) & 127) : (Int64(89) | 1))
@Deprecated
public var var_1731937914449_2315: UInt64 = UInt64(74)
@Deprecated
public var var_1731937914449_2377: Bool = false
@Deprecated
public var var_1731937914449_2495: Interface_1731937914449_248 = Class_1731937914449_800()
public let var_1731937914449_2517: Range<UInt8> = ((UInt8(UInt8(195)) & 127)..=(UInt8(UInt8(UInt8(Int8(UInt8(243))))) &
    127) : (Int64(UInt16(UInt8(UInt8(116)))) | 1))
@Deprecated
internal var var_1731937914449_2540: Int16 = Int16(UInt8(134))
public var var_1731937914449_2551: UInt32 = UInt32(203)
@Deprecated
public let var_1731937914449_2581: ?Option<VArray<Unit, $3>> = Option<Option<VArray<Unit, $3>>>.None
@Deprecated
public var var_1731937914449_2599: Option<Class_1731937914449_262> = (((Class_1731937914449_241() as Class_1731937914449_262),
    [true, false, false, true, false, false, true, false, false, false], Class_1731937914449_800(), (([false, false,
            false, false, false, false, true, true, false, true], (true, UInt64(217), UInt16(214), Int32(64), Int16(87))) as Unit),
    [UInt64(56), UInt64(197), UInt64(165), UInt64(198), UInt64(241), UInt64(16), UInt64(148), UInt64(97), UInt64(67),
        UInt64(15)], [(), (), (), (), (), (), (), (), (), ()]) as Class_1731937914449_262)
@Deprecated
public let var_1731937914449_2663: Unit = ()
public const var_1731937914449_2679: Unit = ()
public let var_1731937914449_2683: VArray<Unit, $3> = [(), (), ()]
internal let var_1731937914449_2692: (Unit, Range<Int16>, Array<Bool>) = ((), ((Int16(Int16(-79)) & 127)..=(Int16(Int16(1)) &
        127) : (Int64(73) | 1)), [(Int64(-59) is (Option<Unit>, Array<Bool>, Unit, Range<UInt64>)),
        (([(), (), (), (), (), (), (), (), (), ()], Class_1731937914449_262(), [VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()})], [false, true, true,
            true, true, true, false, true, true, true], [true, false, false, true, true, false, true, false, true, true]) is (UInt64, 
        UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)), (Option<Option<UInt64>>, Range<Int8>, 
        (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8))), true, true, true,
        (((), ((Int16(Int16(66)) & 127)..(Int16(Int16(-4)) & 127) : (Int64(-108) | 1)), [false, false, true, false, true,
            true, false, false, true, false]) is Class_1731937914449_800),
        (Option<(Bool, UInt64, UInt16, Int32, Int16)>.None is Option<(Bool, UInt64, UInt16, Int32, Int16)>), false,
        (Option<VArray<Unit, $3>>.None is Option<Bool>), true])
public var var_1731937914449_2906: Option<Option<Unit>> = Option<Option<Unit>>.None
@Deprecated
public var var_1731937914449_2910: (Bool, UInt64, UInt16, Int32, Int16) = (true, UInt64(253), UInt16(114), Int32(UInt16(156)),
    Int16(Int16(UInt8(UInt8(51)))))
@Deprecated
public const var_1731937914449_2969: Int8 = -79
public var var_1731937914449_3012: Range<UInt16> = ((UInt16(UInt16(239)) & 127)..=(UInt16(UInt16(204)) & 127) : (Int64(77) |
    1))
internal let var_1731937914449_3045: VArray<Unit, $3> = [(), (), ()]
public var var_1731937914449_3053: Int8 = Int8(-44)
public const var_1731937914449_3072: Bool = false
public var var_1731937914449_3080: UInt = UInt64(148)
@Deprecated
public var var_1731937914449_3083: UInt = UInt64(Int16(UInt8(Int8(UInt8(87)))))
public var var_1731937914449_3090: Array<Bool> = [(false is () -> Class_1731937914449_262), false, true, false, false,
    (Int8(Int8(UInt8(67))) is Option<Option<Unit>>), false, (Option<Unit>.None is (Interface_1731937914449_248) -> Rune),
    (((Int16(Int16(-32)) & 127)..(Int16(Int16(-120)) & 127) : (Int64(-112) | 1)) is (Unit, Range<Int16>, Array<Bool>)),
    false]
let var_1731937914449_3275: Option<Range<Int16>> = ((Int8(Int8(Int8(-47))) as (Array<Bool>, Array<Bool>, Array<UInt64>, 
    Interface_1731937914449_246, Interface_1731937914449_245)) as Range<Int16>)
let var_1731937914449_3340: UInt8 = UInt8(166)
public let var_1731937914449_3469: Unit = ()
public const var_1731937914449_3550: Bool = true
public let var_1731937914449_3634: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()]
public var var_1731937914449_3672: (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)) = ([false, false, false, false,
        true, true, true, false, true, true], (false, UInt64(UInt64(151)), UInt16(Int16(56)), Int32(31), Int16(-9)))
var var_1731937914449_3704: Bool = ([VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
    VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
    VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()})] is (Option<Unit>) -> Bool)
public let var_1731937914449_3833: Float64 = Float64(Float32(123.0))
public const var_1731937914449_3850: Bool = false
public let var_1731937914449_3906: Class_1731937914449_220<Int16> = Class_1731937914449_220<Int16>()
public var var_1731937914449_3919: String = "%90\"tv7qh-"

internal func func_1731937914449_73(param_1731937914449_74: Option<Unit>): Bool { // block id: 75
    let var_1731937914449_105: Bool = (r'E' is Range<Int64>);
    try { // block id: 88
        UInt32(218) * var_1731937914449_92;
        var_1731937914449_95;
        [true, false, true, true, false, true, true, false, false, true]
    } catch (_) { // block id: 98
        [UInt64(8), UInt64(110), UInt64(56), UInt64(162), UInt64(35), UInt64(7), UInt64(104), UInt64(55), UInt64(74),
            UInt64(103)];
        ();
        let var_1731937914449_113: Bool = ([UInt64(51), UInt64(Int16(108)), UInt64(Int16(-3)), UInt64(203),
            UInt64(UInt32(UInt32(228))), UInt64(173), UInt64(119), UInt64(247), UInt64(UInt16(Int16(67))), UInt64(209)] is Bool);
        var var_1731937914449_133: Bool = true;
        [var_1731937914449_22, var_1731937914449_22, var_1731937914449_105, var_1731937914449_105, var_1731937914449_105,
            false, true, var_1731937914449_113, var_1731937914449_133, false]
    }[2]
}

public open class Class_1731937914449_220<T0> <: Resource {
    @Frozen
    public init() { // block id: 222

    }

    static init() {
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

public sealed interface Interface_1731937914449_244 {
    @Frozen
    static func func_1731937914449_770(): Bool { // block id: 771
        var var_1731937914449_836: Unit = ();
        if (var_1731937914449_775 < (UInt8(106) % ((UInt8(30)) | 1))) { // block id: 782
            VArray<Unit, $9>(repeat: var_1731937914449_95);
            var_1731937914449_95;
            [(), (), (), (), (), (), (), (), (), ()][1]
        } else if (match (var_1731937914449_804.var_1731937914449_807) {
            case caseVar_1731937914449_811 => var_1731937914449_750

            case _ => var_1731937914449_157 == Int64(-119)

            case _ => false

            case _ =>
                Int16(57);
                [var_1731937914449_95, (), (), var_1731937914449_95, var_1731937914449_95, var_1731937914449_95,
                    var_1731937914449_836, var_1731937914449_836, (), ()];
                var_1731937914449_750
        }) { // block id: 842
            var_1731937914449_848.var_1731937914449_851;
            var var_1731937914449_864: (Bool, UInt64, UInt16, Int32, Int16) = ((Struct_1731937914449_844() is Rune),
                UInt64(78), UInt16(Int16(Int8(42))), Int32(UInt16(Int16(-123))), Int16(-14));
            (Option<Option<UInt64>>.Some(Option<UInt64>.Some(UInt64(21))), ((Int8(Int8(-24)) & 127)..=(Int8(Int8(-13)) &
                    127) : (Int64(39) | 1)), var_1731937914449_864, ((Int64(Int64(-112)) & 127)..=(Int64(Int64(35)) & 127) : (Int64(55) |
                    1)), UInt8(31))[3];
            var loopTimeVar_1731937914449_887: Int = 0;
            do {
                loopTimeVar_1731937914449_887++;
                var_1731937914449_95
            } while ((true) && loopTimeVar_1731937914449_887 < 100)
        };
        ((((Int32(Int32(2)) & 127)..=(Int32(Int32(-69)) & 127) : (Int64(-32) | 1)) as VArray<Unit, $3>) ?? if (var_1731937914449_750) {
            var_1731937914449_900
        } else {
            VArray<Unit, $3>({i => ()})
        })[1];
        var_1731937914449_750
    }
}

public sealed interface Interface_1731937914449_248 {}

public sealed interface Interface_1731937914449_247 <: Interface_1731937914449_244 & Interface_1731937914449_248 {
    static func func_1731937914449_770(): Bool { // block id: 3589
        var_1731937914449_2551 >> ((try { // block id: 3593
            (UInt64(199), UInt16(164), [(), (), var_1731937914449_3469, var_1731937914449_95, var_1731937914449_95, (),
                    (), (), (), ()], ([var_1731937914449_2377, var_1731937914449_3550, true, var_1731937914449_2377,
                        false, var_1731937914449_2377, true, var_1731937914449_2377, var_1731937914449_2377,
                        var_1731937914449_750], var_1731937914449_2910), (Option<Option<UInt64>>.Some(
                        Option<UInt64>.None), ((Int8(Int8(-41)) & 127)..=(Int8(var_1731937914449_660) & 127) : (Int64(51) |
                        1)), var_1731937914449_2910, var_1731937914449_2301, UInt8(44)));
            if (var_1731937914449_2377) {
                var_1731937914449_3634
            } else {
                VArray<Unit, $9>({i => ()})
            };
            var_1731937914449_2551
        } finally { // block id: 3647
            UInt32(109) & var_1731937914449_2551
        }) & 7);
        let var_1731937914449_3655: Array<VArray<Unit, $9>> = [[(), (), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (),
            ()], [(), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), ()],
            [(), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (),
            ()], [(), (), (), (), (), (), (), (), ()]];
        let var_1731937914449_3684: Rune = r'j';
        let var_1731937914449_3695: Option<Bool> = (((Int32(Int32(-100)) & 127)..(Int32(Int32(-77)) & 127) : (Int64(81) |
            1)) as Bool);
        let var_1731937914449_3818: Bool = false;
        (if (match (var_1731937914449_3655) {
            case _: Struct_1731937914449_844 =>
                Float64(-6.0);
                ();
                false

            case _: Range<UInt8> =>
                ();
                true

            case _ =>
                var_1731937914449_3672;
                var_1731937914449_3684;
                var_1731937914449_2377

            case _ => var_1731937914449_750
        }) {
            if (var_1731937914449_3550) { // block id: 3693
                var_1731937914449_3695
            } else { // block id: 3698
                var_1731937914449_2315 |= UInt64(91)
                if (var_1731937914449_3704) {
                    Option<Bool>.None
                } else {
                    var_1731937914449_3695
                }
            }
        } else {
            ([true, false, var_1731937914449_750, var_1731937914449_3704, var_1731937914449_2377, true,
                var_1731937914449_3818, var_1731937914449_3550, var_1731937914449_3704, true] as Bool)
        } ?? (-Float32(-115.0)) <= Float32(Float32(113.0)))
    }
}

public interface Interface_1731937914449_246 <: Interface_1731937914449_244 & Interface_1731937914449_247 {
    static func func_1731937914449_770(): Bool { // block id: 3553
        let var_1731937914449_3558: Option<Bool> = Option<Bool>.Some(true);
        if ((var_1731937914449_3558 ?? var_1731937914449_3550)) { // block id: 3562
            var_1731937914449_1602
        } else { // block id: 3564
            var_1731937914449_1602
        } > (var_1731937914449_1602 ^ if (true) { // block id: 3570
            ();
            UInt16(75) - var_1731937914449_1602
        } else { // block id: 3575
            var_1731937914449_500 /= ((Int32(3)) | 1)
            var var_1731937914449_3581: UInt16 = UInt16(UInt8(Int8(Int8(-68))));
            var_1731937914449_3581 <<= ((UInt16(15)) & 7)
            var_1731937914449_3581
        })
    }
}

public interface Interface_1731937914449_245 <: Interface_1731937914449_244 & Interface_1731937914449_246 {
    func func_1731937914449_1545(namedParam_1731937914449_1546!: Array<UInt64>, namedParam_1731937914449_1547!: Bool,
        namedParam_1731937914449_1548!: Bool): Range<Int64> { // block id: 1549
        var var_1731937914449_1576: Range<Int16> = ((Int16(Int16(73)) & 127)..(Int16(Int16(48)) & 127) : (Int64(Int64(54)) |
            1));
        try { // block id: 1551
            var_1731937914449_775 ^= var_1731937914449_775
            let var_1731937914449_1561: Option<Range<Int16>> = Option<Range<Int16>>.Some(
                ((Int16(Int16(119)) & 127)..(Int16(Int16(81)) & 127) : (Int64(-107) | 1)));
            var var_1731937914449_1565: Range<Int16> = ((Int16(Int16(-39)) & 127)..=(Int16(Int16(93)) & 127) : (Int64(21) |
                1));
            (var_1731937914449_1561 ?? var_1731937914449_1565)
        } finally { // block id: 1567
            (Int16(-85) as Option<UInt64>);
            var var_1731937914449_1572: Option<Range<Int16>> = (false as Range<Int16>);
            (var_1731937914449_1572 ?? var_1731937914449_1576)
        };
        var var_1731937914449_1590: ?(Bool, UInt64, UInt16, Int32, Int16) = (((UInt32(UInt32(Int32(25))) & 127)..=(UInt32(UInt32(249)) &
            127) : (Int64(UInt16(69)) | 1)) as (Bool, UInt64, UInt16, Int32, Int16));
        var var_1731937914449_1617: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var var_1731937914449_1630: Interface_1731937914449_244 = Class_1731937914449_800(
            [VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>({i => ()}),
                VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
                VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
                VArray<Unit, $9>({i => ()})], namedParam_1731937914449_1634: UInt16(UInt16(189)),
            namedParam_1731937914449_1635: ((Int64(Int64(Int32(UInt16(93)))) & 127)..=(Int64(Int64(UInt64(219))) & 127) : (Int64(-53) |
                1)), optionalParam_1731937914449_1636: func_1731937914449_699);
        var var_1731937914449_1792: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
        let var_1731937914449_1804: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
        const var_1731937914449_1832: Unit = ();
        let var_1731937914449_1854: Unit = ();
        let var_1731937914449_1876: (Array<Unit>, Interface_1731937914449_244, Array<VArray<Unit, $9>>, Array<Bool>, 
            Array<Bool>) = ([(), (), (), (), (), (), (), (), (), ()], Class_1731937914449_241(
                [(), (), (), (), (), (), (), (), (), ()]), [VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
                VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
                VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
                VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()})], [false, false, true, true, false, false,
                false, true, false, true], [([VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()),
                VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
                VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
                VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>({i => ()})] is Interface_1731937914449_245), true,
                ((Option<Option<UInt64>>.None, ((Int8(Int8(0)) & 127)..=(Int8(Int8(81)) & 127) : (Int64(-75) | 1)), (false,
                    UInt64(71), UInt16(132), Int32(51), Int16(6)), ((Int64(Int64(-29)) & 127)..(Int64(Int64(15)) & 127) : (Int64(-97) |
                    1)), UInt8(95)) is Int32), (Float64(Float64(72.0)) is Range<Int64>), (UInt64(UInt64(213)) is Rune),
                true, (UInt32(208) is (Option<Unit>) -> Bool), true, false, true]);
        let var_1731937914449_2246: (Bool, UInt64, UInt16, Int32, Int16) = (((Float32(Float32(58.0)) as Unit) is String),
            UInt64(UInt8(14)), UInt16(UInt16(78)), Int32(-12), Int16(-128));
        if ((var_1731937914449_1590 ?? (var_1731937914449_750, UInt64(247), var_1731937914449_1602, Int32(-114), Int16(-11)))[0]) {
            (Option<(Array<Unit>, Interface_1731937914449_244, Array<VArray<Unit, $9>>, Array<Bool>, Array<Bool>)>
                .Some(
                    (var_1731937914449_1617, var_1731937914449_1630, [var_1731937914449_1792, var_1731937914449_1804,
                            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: var_1731937914449_95),
                            VArray<Unit, $9>({i => ()}), var_1731937914449_1804, var_1731937914449_1792,
                            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: var_1731937914449_1832),
                            var_1731937914449_1792], [false, false, var_1731937914449_750, var_1731937914449_981, true,
                            var_1731937914449_981, false, var_1731937914449_750, false, true], [true, false, true, true,
                            true, false, true, false, false, false])) ?? var_1731937914449_1876)[3]
        } else {
            (UInt64(227), var_1731937914449_1602, [(), (), (), (), (), (), (), (), (), ()], ([false, false, false, true,
                        true, false, true, false, true, false], var_1731937914449_2246), var_1731937914449_2259)[3][0]
        };
        var_1731937914449_2301
    };

    static func func_1731937914449_770(): Bool { // block id: 3431
        ((Int64(Int64(-120)) & 127)..=(Int64(Int64(-60)) & 127) : (Int64(39) | 1));
        var var_1731937914449_3454: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
        try (resource = Class_1731937914449_241()) { // block id: 3434
            [var_1731937914449_2315, UInt64(145), var_1731937914449_2315, UInt64(177), UInt64(152),
                var_1731937914449_2315, UInt64(62), var_1731937914449_2315, var_1731937914449_2315, UInt64(110)];
            var var_1731937914449_3521: UInt16 = UInt16(122);
            let var_1731937914449_3529: String = "pZb$;jE:<a{";
            match ("""
6mX0]
I2vxW
""") {
                case caseVar_1731937914449_3450: Option<(UInt64, UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, 
                        UInt16, Int32, Int16)), (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, 
                        Int16), Range<Int64>, UInt8))> =>
                    var var_1731937914449_3478: VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
                    [var_1731937914449_3454, VArray<Unit, $9>(repeat: var_1731937914449_95), var_1731937914449_3478,
                        VArray<Unit, $9>({i => ()}), var_1731937914449_3478, var_1731937914449_3478,
                        VArray<Unit, $9>({i => ()}), var_1731937914449_3478,
                        VArray<Unit, $9>(repeat: var_1731937914449_95), var_1731937914449_3478];
                    Option<(Bool, UInt64, UInt16, Int32, Int16)>.None;
                    var_1731937914449_2663

                case """
u3wni
P_1yu
""" =>
                    var_1731937914449_3521 &= UInt16(192)
                    ()

                case _: Float64 =>
                    var_1731937914449_3529;
                    var_1731937914449_95

                case _ => var_1731937914449_775 >>= ((var_1731937914449_3340) & 7)
            }
        } finally { // block id: 3538
            Int8(Int8(-32));
            var_1731937914449_95
        };
        ((Int8(111) as Bool) ?? var_1731937914449_3550)
    }
}

public open class Class_1731937914449_241 <: Interface_1731937914449_244 & Interface_1731937914449_245 & Resource {
    public init() { // block id: 243

    }

    public var var_1731937914449_253: Array<Bool> = [true, true, false, false, false, true, true, false, true, true];
    public var var_1731937914449_269: Unit = ();

    @Frozen
    public mut prop var_1731937914449_360: UInt { // block id: 361
        get() { // block id: 363
            UInt64(176);
            var_1731937914449_3111
        }
        set(Value) { // block id: 367
            ();
            ();
            var_1731937914449_3111 = Value
        }
    }
    public init(param_1731937914449_1881: Array<Unit>) { // block id: 1882
        var var_1731937914449_1901: UInt16 = UInt16(226);
        var loopTimeVar_1731937914449_1938: Int = 0;
        do {
            loopTimeVar_1731937914449_1938++;
            var loopTimeVar_1731937914449_1936: Int64 = 0;
            do {
                loopTimeVar_1731937914449_1936++;
                UInt64(112)
            } while ((false) && loopTimeVar_1731937914449_1936 < 100)
        } while (((Option<Bool>.None ?? match (var_1731937914449_207) {
            case _ =>
                var_1731937914449_95;
                var var_1731937914449_1898: UInt16 = UInt16(104);
                var_1731937914449_1898 <<= ((var_1731937914449_1901) & 7)
                true

            case caseVar_1731937914449_1906 =>
                ();
                false

            case caseVar_1731937914449_1912: Array<Unit> => false || false

            case caseVar_1731937914449_1919 =>
                ((Int32(Int32(29)) & 127)..=(Int32(var_1731937914449_500) & 127) : (var_1731937914449_157 | 1));
                false

            case _ => var_1731937914449_981
        })) && loopTimeVar_1731937914449_1938 < 100);
        let var_1731937914449_1954: ?(Bool, UInt64, UInt16, Int32, Int16) = ([(), (), (), (), (), (), (), (), (), ()] as (Bool, 
            UInt64, UInt16, Int32, Int16));
        UInt64(Int64(match (((Int64(Int64(-68)) & 127)..(Int64(Int64(-6)) & 127) : (Int64(-107) | 1))) {
            case _ =>
                Struct_1731937914449_844(Int32(58));
                var_1731937914449_1954;
                UInt8(201)

            case caseVar_1731937914449_1970 =>
                var_1731937914449_775;
                var_1731937914449_981 ||= true
                UInt8(227)

            case _ =>
                var_1731937914449_95;
                ();
                UInt8(167)

            case _ =>
                var_1731937914449_1987;
                if (false) {
                    Option<Int8>.None
                } else {
                    Option<Int8>.None
                };
                var_1731937914449_775

            case _ => var_1731937914449_775 % ((var_1731937914449_775) | 1)
        }))
    };

    var var_1731937914449_3111: UInt64 = UInt64(119);
    private static let var_1731937914449_3192: (UInt64, UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, 
        Int16)), (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8)) = (UInt64(228),
        UInt16(72), [(), (), (), (), (), (), (), (), (), ()], ([true, false, false, false, true, true, false, true, true,
                true], (false, UInt64(134), UInt16(233), Int32(113), Int16(6))), (Option<Option<UInt64>>.None, ((Int8(Int8(60)) &
                127)..=(Int8(Int8(-98)) & 127) : (Int64(-124) | 1)), (true, UInt64(153), UInt16(66), Int32(-128), Int16(-105)),
            ((Int64(Int64(-114)) & 127)..=(Int64(Int64(-78)) & 127) : (Int64(-116) | 1)), UInt8(163)));
    private static mut prop var_1731937914449_3250: Int16 { // block id: 3251
        get() { // block id: 3253
            ();
            (Option<Range<Int16>>.None as Option<UInt64>);
            Int16(Int16(-55))
        }
        set(Value) { // block id: 3261
            ();
            ()
        }
    }
    public static let var_1731937914449_3380: ?UInt64 = Option<UInt64>.None;
    private static mut prop var_1731937914449_3401: UInt32 { // block id: 3402
        get() { // block id: 3404
            Option<VArray<Unit, $3>>.None;
            ((Int8(Int8(-61)) & 127)..=(Int8(Int8(-69)) & 127) : (Int64(-37) | 1));
            UInt32(159)
        }
        set(Value) { // block id: 3410
            ((Int64(Int64(46)) & 127)..(Int64(Int64(80)) & 127) : (Int64(123) | 1));
            ()
        }
    }
    public static func func_1731937914449_770(): Bool { // block id: 3118
        var var_1731937914449_3132: (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)) = ([(Int16(UInt16(115)) is UInt32),
                false, ((Option<UInt64>.None as Bool) is (Interface_1731937914449_247) -> Option<Unit>),
                (((Option<Option<UInt64>>.Some(Option<UInt64>.None), ((Int8(Int8(110)) & 127)..(Int8(Int8(5)) & 127) : (Int64(-13) |
                    1)), (false, UInt64(166), UInt16(179), Int32(-125), Int16(-88)), ((Int64(Int64(-45)) & 127)..=(Int64(Int64(-14)) &
                    127) : (Int64(-65) | 1)), UInt8(63)) as Bool) is (Array<Unit>, Interface_1731937914449_244, Array<VArray<Unit, $9>>, 
                Array<Bool>, Array<Bool>)), ([false, true, false, true, false, true, false, true, false, true] is Option<UInt64>),
                (Option<Range<Int16>>.Some(((Int16(Int16(-68)) & 127)..(Int16(Int16(-13)) & 127) : (Int64(75) | 1))) is (Option<Option<UInt64>>) -> Rune),
                false, true, false, false], ((((), ((Int16(Int16(83)) & 127)..=(Int16(Int16(-78)) & 127) : (Int64(-100) |
                        1)), [true, true, true, false, false, true, true, false, true, true]) is UInt16), UInt64(84),
                UInt16(UInt16(218)), Int32(UInt16(88)), Int16(-17)));
        try { // block id: 3120
            (Option<(UInt64, UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)), (Option<Option<UInt64>>, 
                    Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8))>.Some(
                (UInt64(61), var_1731937914449_1602, [(), (), (), (), (), (), (), (), (), ()], var_1731937914449_3132,
                    var_1731937914449_2259)) ?? var_1731937914449_3192);
            match (var_1731937914449_157) {
                case -88 | -58 | -5 | -90 => var_1731937914449_2663

                case _: Float64 =>
                    var_1731937914449_3250 %= ((Int16(-113)) | 1)
                    ();
                    var_1731937914449_981 &&= var_1731937914449_750

                case _ =>
                    ();
                    var_1731937914449_95
            };
            var_1731937914449_3275
        } catch (e: Exception) { // block id: 3281
            try { // block id: 3283
                Float32(122.0);
                var_1731937914449_2663;
                var_1731937914449_3275
            } catch (e: Exception) { // block id: 3287
                let var_1731937914449_3289: UInt32 = UInt32(121);
                var_1731937914449_3289;
                var_1731937914449_3275
            }
        } finally { // block id: 3292
            (Option<Unit>.None ?? var_1731937914449_95);
            (Option<Option<Range<Int16>>>.Some(
                Option<Range<Int16>>.Some(((Int16(Int16(105)) & 127)..=(Int16(Int16(-89)) & 127) : (Int64(47) | 1)))) ??
                var_1731937914449_3275)
        };
        var var_1731937914449_3319: ?(UInt64, UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)), 
            (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8)) = Option<(UInt64, 
                UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)), (Option<Option<UInt64>>, Range<Int8>, 
                (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8))>.None;
        var var_1731937914449_3331: UInt64 = UInt64(UInt64(15));
        var var_1731937914449_3362: UInt16 = UInt16(Int8(-109));
        [UInt64(Int8(60)), try { // block id: 3309
            ();
            var_1731937914449_95;
            var_1731937914449_2315
        } finally { // block id: 3313
            if (true) {
                Option<(UInt64, UInt16, Array<Unit>, (Array<Bool>, (Bool, UInt64, UInt16, Int32, Int16)), (Option<Option<UInt64>>, 
                        Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8))>.Some(
                    var_1731937914449_3192)
            } else {
                var_1731937914449_3319
            };
            UInt64(74)
        }, match (var_1731937914449_2683) {
            case _ =>
                var_1731937914449_95;
                -var_1731937914449_3331

            case _ =>
                var_1731937914449_95;
                var_1731937914449_3340 * UInt8(11);
                var_1731937914449_3331
        } / ((if (false) { // block id: 3346
            var_1731937914449_157 >>= ((var_1731937914449_157) & 7)
            UInt64(33)
        } else if (true) { // block id: 3352
            let var_1731937914449_3356: Int64 = Int64(Int16(Int16(41)));
            var_1731937914449_157 ^= var_1731937914449_3356
            var_1731937914449_3362 %= ((var_1731937914449_1602) | 1)
            UInt64(71)
        } else { // block id: 3367
            var_1731937914449_2315 = UInt64(22)
            var_1731937914449_2315
        }) | 1), if (true) { // block id: 3374
            if (var_1731937914449_750) {
                Option<UInt64>.Some(var_1731937914449_3331)
            } else {
                var_1731937914449_3380
            };
            var_1731937914449_2663;
            UInt64(138) % ((UInt64(140)) | 1)
        } else { // block id: 3386
            Option<Unit>.Some(());
            -var_1731937914449_3331
        }, UInt64(var_1731937914449_2551), var_1731937914449_3331, try { // block id: 3395
            var_1731937914449_500 += Int32(48)
            var_1731937914449_3401 >>= ((var_1731937914449_2551) & 7)
            UInt64(3)
        } finally { // block id: 3415
            Struct_1731937914449_844(Int32(-61));
            var_1731937914449_3331
        }, UInt64(27), try { // block id: 3421
            UInt64(119)
        } finally { // block id: 3423
            var_1731937914449_3331 | var_1731937914449_2315
        }, -UInt64(215)];
        true
    };

    public open override func func_1731937914449_1545(namedParam_1731937914449_1546!: Array<UInt64>,
        namedParam_1731937914449_1547!: Bool, namedParam_1731937914449_1548!: Bool): Range<Int64> { // block id: 3886
        ();
        ((Int64(Int64(-112)) & 127)..=(Int64(Int64(67)) & 127) : (Int64(67) | 1))
    };

    public prop var_1731937914449_3954: Int32 { // block id: 3955
        get() { // block id: 3957
            (Int32(125) as Int8);
            Int32(Int32(80))
        }
    }
    static init() {
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Deprecated
public open class Class_1731937914449_262 <: Class_1731937914449_241 {
    @Frozen
    public init() { // block id: 264

    }

    static var var_1731937914449_580: UInt32
    public static func func_1731937914449_770(): Bool { // block id: 3829
        if (var_1731937914449_3833 >= Float64(-46.0)) { // block id: 3837
            var loopTimeVar_1731937914449_3842: Int64 = 0;
            while ((false) && loopTimeVar_1731937914449_3842 < 100) {
                loopTimeVar_1731937914449_3842++;
            };
            (Option<Bool>.Some(var_1731937914449_3850) ?? false)
        } else { // block id: 3853
            try (resource = Class_1731937914449_220<Int16>()) { // block id: 3855
                var_1731937914449_2663
            } catch (e: Exception) { // block id: 3857
                ((UInt16(UInt16(201)) & 127)..=(UInt16(UInt16(249)) & 127) : (Int64(26) | 1));
                var_1731937914449_95
            };
            if (true) { // block id: 3862
                var_1731937914449_981 = var_1731937914449_2377
            };
            try { // block id: 3867
                var_1731937914449_95;
                [UInt64(141), UInt64(236), UInt64(48), UInt64(131), UInt64(216), UInt64(213), UInt64(166), UInt64(74),
                    UInt64(98), UInt64(7)];
                var_1731937914449_92 == UInt32(231)
            } catch (e: Exception) { // block id: 3873
                var_1731937914449_981 &&= var_1731937914449_3550
                var_1731937914449_3469;
                var_1731937914449_500 == Int32(-20)
            }
        }
    };

    private static const var_1731937914449_3936: Int64 = -80;
    public open override func func_1731937914449_1545(namedParam_1731937914449_1546!: Array<UInt64>,
        namedParam_1731937914449_1547!: Bool, namedParam_1731937914449_1548!: Bool): Range<Int64> { // block id: 3890
        match (if (match (((UInt32(UInt32(194)) & 127)..(UInt32(UInt32(6)) & 127) : (Int64(-96) | 1))) {
            case _: Array<Bool> => false

            case _ =>
                ();
                if (true) {
                    var_1731937914449_3906
                } else {
                    Class_1731937914449_220<Int16>()
                };
                false
        }) {
            try { // block id: 3911
                Option<Int8>.None;
                var_1731937914449_2517
            } finally { // block id: 3914
                if (var_1731937914449_3850) {
                    var_1731937914449_554
                } else {
                    var_1731937914449_3919
                };
                var_1731937914449_2517
            }
        } else {
            (if (true) {
                ((UInt8(UInt8(209)) & 127)..=(UInt8(UInt8(61)) & 127) : (Int64(23) | 1))
            } else {
                ((UInt8(UInt8(117)) & 127)..=(UInt8(UInt8(202)) & 127) : (Int64(121) | 1))
            })
        }) {
            case _ =>
                ((UInt64(UInt64(110)) & 127)..=(UInt64(UInt64(131)) & 127) : (Int64(6) | 1));
                var_1731937914449_269
        };
        ((Int64(var_1731937914449_3936) & 127)..(Int64((if (false) {
            Option<Int64>.None
        } else {
            Option<Int64>.Some(Int64(98))
        } ?? try { // block id: 3949
            var_1731937914449_653
        } catch (e: Exception) { // block id: 3951
            ((Int32(var_1731937914449_3954) & 127)..=(Int32(var_1731937914449_500) & 127) : (var_1731937914449_157 | 1));
            Int64(-16) & Int64(13)
        } finally { // block id: 3967
            var_1731937914449_269;
            Int64(123) ** UInt64(227)
        })) & 127) : (if (true) { // block id: 3975
            Int64(-117)
        } else { // block id: 3977
            -var_1731937914449_1069
        } ^ Int64(-48) | 1))
    }

    static init() {
        var_1731937914449_580 = UInt32(47)
    }
}

internal const func func_1731937914449_372(param_1731937914449_463: UInt32, param_1731937914449_464: Int32): Unit { // block id: 465
    ();
    var_1731937914449_95
}

public func func_1731937914449_381(param_1731937914449_382: Interface_1731937914449_248): Rune { // block id: 383
    let var_1731937914449_389: (Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, 
        Interface_1731937914449_245) = ([false, (Class_1731937914449_262() is Bool),
            (VArray<Int64, $7>({i => Int64(41)}) is Class_1731937914449_241), false,
            (((UInt64(UInt64(253)) & 127)..=(UInt64(UInt64(201)) & 127) : (Int64(-51) | 1)) is Range<Int8>),
            (((Int8(Int8(94)) & 127)..=(Int8(Int8(79)) & 127) : (Int64(6) | 1)) is Unit),
            (((UInt32(UInt32(239)) & 127)..=(UInt32(UInt32(107)) & 127) : (Int64(-31) | 1)) is Range<UInt16>), true,
            false, false], [(false is Range<Int32>),
            (((UInt32(UInt32(185)) & 127)..=(UInt32(UInt32(106)) & 127) : (Int64(-10) | 1)) is Interface_1731937914449_248),
            true, (UInt64(UInt64(245)) is UInt8), ("fPVHoJ-S+L" is (Option<Unit>) -> Bool), true, false, true, true,
            (((UInt16(UInt16(46)) & 127)..=(UInt16(UInt16(11)) & 127) : (Int64(-77) | 1)) is Unit)], [UInt64(48),
            UInt64(UInt32(UInt16(52))), UInt64(Int8(UInt8(192))), UInt64(UInt8(52)), UInt64(Int16(UInt8(183))),
            UInt64(54), UInt64(UInt64(40)), UInt64(207), UInt64(48), UInt64(UInt8(120))], Class_1731937914449_241(),
        Class_1731937914449_241());
    const var_1731937914449_470: Int32 = 97;
    var var_1731937914449_506: Class_1731937914449_220<Int16> = Class_1731937914449_220<Int16>();
    var var_1731937914449_510: Rune = r'E';
    const var_1731937914449_564: Int16 = 48;
    const var_1731937914449_649: Int = 66;
    let var_1731937914449_666: Rune = r's';
    let var_1731937914449_680: Bool = true;
    func func_1731937914449_517<T0, T1, T2>(): Rune { // block id: 518
        var var_1731937914449_537: (Bool, UInt64, UInt16, Int32, Int16) = (true, UInt64(UInt16(Int8(99))), UInt16(113),
            Int32(Int32(Int32(-2))), Int16(Int8(UInt8(236))));
        match (var_1731937914449_250) {
            case _: Range<Int8> =>
                var_1731937914449_526 *= Float32(-66.0)
                var_1731937914449_297;
                Int16(98) | var_1731937914449_297

            case _ =>
                var_1731937914449_537;
                if (false) {
                    "MHXZ?-_I66"
                } else {
                    var_1731937914449_554
                };
                Int16(-43) - var_1731937914449_297

            case caseVar_1731937914449_561 => var_1731937914449_564

            case caseVar_1731937914449_568: Interface_1731937914449_245 =>
                var_1731937914449_95;
                var_1731937914449_564

            case _ => var_1731937914449_297
        };
        const var_1731937914449_605: Int16 = -45;
        Class_1731937914449_262.var_1731937914449_580 |= match ((Option<Option<UInt64>>.None as Unit)) {
            case _ => var_1731937914449_92

            case _: Range<Int64> =>
                ();
                ();
                UInt32(2) >> ((var_1731937914449_92) & 7)

            case _ =>
                var var_1731937914449_602: Int16 = Int16(-30);
                var_1731937914449_602 |= var_1731937914449_605
                UInt32(203) % ((UInt32(222)) | 1)

            case _ =>
                var_1731937914449_487 ||= false
                Float32(-50.0);
                UInt32(137)
        }
        match (var_1731937914449_620) {
            case caseVar_1731937914449_635: UInt8 =>
                if (var_1731937914449_22) {
                    VArray<Int64, $7>(repeat: var_1731937914449_157)
                } else {
                    VArray<Int64, $7>(repeat: var_1731937914449_649)
                };
                var_1731937914449_660;
                if (var_1731937914449_22) {
                    var_1731937914449_666
                } else {
                    r'Q'
                }

            case caseVar_1731937914449_671: UInt32 =>
                if (true) {
                    var_1731937914449_207
                } else {
                    [var_1731937914449_22, false, var_1731937914449_680, false, true, var_1731937914449_487, true, false,
                        true, var_1731937914449_487]
                };
                var_1731937914449_666

            case _ =>
                Int8(33) ^ var_1731937914449_660;
                var_1731937914449_95;
                r'T'
        }
    };

    if ((var_1731937914449_389[2] is Array<Bool>)) { // block id: 460
        func_1731937914449_372(UInt32(101), var_1731937914449_470);
        match (var_1731937914449_474) {
            case _ =>
                var_1731937914449_95;
                var_1731937914449_95

            case caseVar_1731937914449_483: Range<UInt64> =>
                var_1731937914449_487 ||= var_1731937914449_22
                let var_1731937914449_492: UInt16 = UInt16(130);
                -var_1731937914449_492
                ()

            case _ =>
                var_1731937914449_500++;
                var_1731937914449_506;
                ()
        };
        var_1731937914449_510
    } else { // block id: 512
        (Option<Unit>.None ?? var_1731937914449_95);
        func_1731937914449_517<Range<Int32>, Range<Int64>, Range<Int64>>()
    }
}

@Frozen
public func func_1731937914449_699(param_1731937914449_700: Option<Option<UInt64>>): Rune { // block id: 701
    (var_1731937914449_708 ?? ((var_1731937914449_526 as Int8) ?? try { // block id: 714
        Int8(-68)
    } finally { // block id: 716
        var_1731937914449_95;
        Int8(20)
    }));
    var_1731937914449_722[2]
}

public open class Class_1731937914449_800 <: Class_1731937914449_241 & Interface_1731937914449_246 {
    @Frozen
    public init() { // block id: 802

    }

    public let var_1731937914449_807: ?UInt64 = Option<UInt64>.None;
    public init(param_1731937914449_1633: Array<VArray<Unit, $9>>, namedParam_1731937914449_1634!: UInt16,
        namedParam_1731937914449_1635!: Range<Int64>,
        optionalParam_1731937914449_1636!: (Option<Option<UInt64>>) -> Rune = func_1731937914449_699) { // block id: 1640
        ((), if (false) { // block id: 1647
                ((UInt32(UInt32(106)) & 127)..=(UInt32(UInt32(23)) & 127) : (Int64(71) | 1));
                ((Int16(Int16(-40)) & 127)..(Int16(Int16(-51)) & 127) : (Int64(-25) | 1))
            } else { // block id: 1650
                ();
                ((Int16(Int16(48)) & 127)..(Int16(Int16(11)) & 127) : (Int64(-123) | 1))
            }, match (VArray<Int64, $7>(repeat: var_1731937914449_157)) {
                case _ =>
                    Option<(Bool, UInt64, UInt16, Int32, Int16)>.None;
                    ();
                    [true, false, var_1731937914449_981, false, var_1731937914449_750, false, var_1731937914449_981,
                        true, false, var_1731937914449_750]
            })[0]
    };

    public static func func_1731937914449_770(): Bool { // block id: 3882
        var_1731937914449_2679;
        false
    };

    public open override func func_1731937914449_1545(namedParam_1731937914449_1546!: Array<UInt64>,
        namedParam_1731937914449_1547!: Bool, namedParam_1731937914449_1548!: Bool): Range<Int64> { // block id: 3982
        var_1731937914449_2663;
        ((Int64(Int64(89)) & 127)..=(Int64(Int64(27)) & 127) : (Int64(125) | 1))
    }

    static init() {
    }
}

public struct Struct_1731937914449_844 {
    public init() { // block id: 846

    }

    @Frozen
    prop var_1731937914449_851: Range<Int8> { // block id: 852
        get() { // block id: 854
            ((Int8(Int8(-5)) & 127)..=(Int8(Int8(100)) & 127) : (Int64(71) | 1))
        }
    }

    @Frozen
    init(param_1731937914449_1948: Int32) { // block id: 1949
        var_1731937914449_95;
        var_1731937914449_900
    }
}

@Deprecated
public func func_1731937914449_739(param_1731937914449_740: Interface_1731937914449_248): Option<Option<UInt64>> { // block id: 741
    if (try { // block id: 744
        var_1731937914449_500 += Int32(45)
        ();
        var_1731937914449_750
    } finally { // block id: 752
        UInt16(0);
        var_1731937914449_755;
        Int32(58) > Int32(5)
    }) { // block id: 766

    } else if (Interface_1731937914449_244.func_1731937914449_770()) { // block id: 911
        var_1731937914449_660;
        (Option<Unit>.Some(var_1731937914449_95) ?? ())
    };
    let var_1731937914449_998: VArray<Unit, $3> = [(), (), ()];
    if (true) { // block id: 924
        var_1731937914449_95;
        var var_1731937914449_927: (Option<Option<UInt64>>, Range<Int8>, (Bool, UInt64, UInt16, Int32, Int16), Range<Int64>, 
            UInt8) = ((() as Option<UInt64>), ((Int8(Int8(Int8(-109))) & 127)..(Int8(Int8(78)) & 127) : (Int64(-95) | 1)),
            (true, UInt64(UInt64(UInt16(248))), UInt16(Int8(Int8(-68))), Int32(-89), Int16(-104)), ((Int64(Int64(Int64(2))) &
                127)..=(Int64(Int64(UInt16(61))) & 127) : (Int64(UInt64(UInt32(99))) | 1)), UInt8(179));
        var_1731937914449_927;
        if (true) {
            var_1731937914449_900
        } else {
            var_1731937914449_900
        }
    } else if (Int16(107) < var_1731937914449_297) { // block id: 962
        var_1731937914449_965 <= var_1731937914449_965;
        (var_1731937914449_750, UInt64(207), UInt16(97), var_1731937914449_500, var_1731937914449_297);
        VArray<Unit, $3>(repeat: var_1731937914449_95)
    } else { // block id: 978
        var_1731937914449_981 &&= false
        if (false) {
            VArray<Unit, $3>(repeat: var_1731937914449_95)
        } else {
            var_1731937914449_998
        }
    }[2];
    var_1731937914449_319
}

internal func func_1731937914449_377(param_1731937914449_378: Option<Unit>): VArray<Unit, $9> { // block id: 379
    var var_1731937914449_737: (Option<Option<UInt64>>) -> Rune = func_1731937914449_699;
    Class_1731937914449_262() |> (func_1731937914449_739 ~> var_1731937914449_737);
    (Option<(Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, Interface_1731937914449_245)>.Some(
        (var_1731937914449_1012 ?? var_1731937914449_1015)) ?? (Option<(Array<Bool>, Array<Bool>, Array<UInt64>, 
            Interface_1731937914449_246, Interface_1731937914449_245)>.None ?? ([false, true, var_1731937914449_750,
            false, false, true, false, var_1731937914449_22, true, false], var_1731937914449_1037, var_1731937914449_1040,
        var_1731937914449_1060, var_1731937914449_1063)));
    const var_1731937914449_1084: String = "~`4Tmym},I";
    var loopTimeVar_1731937914449_1158: Int = 0;
    var loopTimeVar_1731937914449_1166: Range<UInt64> = ((UInt64(UInt64(UInt32(Int32(Int16(-121))))) & 127)..(UInt64(UInt64(92)) &
        127) : (Int64(UInt64(Int8(-39))) | 1));
    let var_1731937914449_1180: (Option<Unit>, Array<Bool>, Unit, Range<UInt64>) = (Option<Unit>.Some(()), [true, false,
            false, true, true, true, false, true, true, false], (), ((UInt64(UInt64(226)) & 127)..=(UInt64(UInt64(UInt8(UInt8(113)))) &
            127) : (Int64(Int64(-2)) | 1)));
    var var_1731937914449_1207: (Array<Unit>, Interface_1731937914449_244, Array<VArray<Unit, $9>>, Array<Bool>, Array<Bool>) = ([(),
            (), (), (), (), (), (), (), (), ()], Class_1731937914449_241(), [VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>(repeat: ()), VArray<Unit, $9>(repeat: ()),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()})], [false, true, false,
            false, false, true, true, false, true, true], [true, false, true, true, false, false, true, true, false,
            true]);
    if (match (match (var_1731937914449_1069) {
        case caseVar_1731937914449_1073 =>
            var var_1731937914449_1076: ?Unit = Option<Unit>.None;
            var_1731937914449_1076

        case _ =>
            if (false) {
                var_1731937914449_1084
            } else {
                var_1731937914449_554
            };
            ();
            let var_1731937914449_1089: ?Unit = ((Option<Unit>.None as UInt64) as Unit);
            var_1731937914449_1089
    }) {
        case _: Option<UInt64> =>
            var var_1731937914449_1097: ?UInt64 = Option<UInt64>.None;
            var_1731937914449_1097;
            var_1731937914449_157--;
            var_1731937914449_981

        case _ =>
            if (false) {
                Option<Unit>.Some(())
            } else {
                Option<Unit>.None
            };
            var_1731937914449_95;
            var_1731937914449_981
    }) {
        VArray<Unit, $9>(repeat: (var_1731937914449_1115 ?? ()))
    } else {
        var_1731937914449_1207[2][5]
    }
}

@Frozen
public func func_1731937914449_372(): Class_1731937914449_262 { // block id: 373
    var var_1731937914449_1327: (Option<Unit>) -> VArray<Unit, $9> = func_1731937914449_377;
    (var_1731937914449_1330 |> var_1731937914449_1327)[7];
    var var_1731937914449_1338: Byte = UInt8(UInt8(UInt8(UInt8(UInt8(235)))));
    let var_1731937914449_1359: (Array<Unit>, Interface_1731937914449_244, Array<VArray<Unit, $9>>, Array<Bool>, Array<Bool>) = ([(),
            (), (), (), (), (), (), (), (), ()], Class_1731937914449_241(), [VArray<Unit, $9>(repeat: ()),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}),
            VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()}), VArray<Unit, $9>({i => ()})], [true, false, true,
            true, true, false, false, true, false, true], [(((Int8(Int8(-94)) & 127)..=(Int8(Int8(-51)) & 127) : (Int64(-42) |
            1)) is Array<UInt64>), (Float64(Float64(-76.0)) is Class_1731937914449_241), true,
            ((Option<Option<UInt64>>.Some(Option<UInt64>.Some(UInt64(200))), ((Int8(Int8(50)) & 127)..(Int8(Int8(-4)) &
                127) : (Int64(115) | 1)), (true, UInt64(27), UInt16(157), Int32(-17), Int16(-2)), ((Int64(Int64(80)) &
                127)..(Int64(Int64(-97)) & 127) : (Int64(22) | 1)), UInt8(82)) is Range<UInt8>),
            (Option<Unit>.Some(()) is Float32),
            (((UInt64(UInt64(76)) & 127)..(UInt64(UInt64(160)) & 127) : (Int64(123) | 1)) is (Range<UInt32>, Rune, Rune, 
            Range<Int32>, Class_1731937914449_241, Rune)), (Class_1731937914449_241() is Option<Unit>), false, false,
            false]);
    var_1731937914449_1338 /= ((if (true) { // block id: 1346
        var_1731937914449_620;
        var_1731937914449_95;
        UInt8(171)
    } else if (try { // block id: 1351
        Struct_1731937914449_844();
        var_1731937914449_157 != Int64(-93)
    } finally { // block id: 1356
        var_1731937914449_1120;
        var_1731937914449_1359;
        var_1731937914449_750
    }) { // block id: 1513
        Int64(102);
        var_1731937914449_1338 >> ((UInt8(109)) & 7)
    } else { // block id: 1518
        var_1731937914449_1120;
        UInt8(188)
    }) | 1)
    var var_1731937914449_1531: (Bool, UInt64, UInt16, Int32, Int16) = ((r'3' is (Option<Option<UInt64>>, Range<Int8>, (Bool, 
            UInt64, UInt16, Int32, Int16), Range<Int64>, UInt8)), UInt64(237), UInt16(UInt16(81)), Int32(Int8(-53)),
        Int16(-93));
    ((((Int32(Int32(-89)) & 127)..(Int32(Int32(-110)) & 127) : (Int64(25) | 1)) as Class_1731937914449_262) ?? if (var_1731937914449_1531[0]) {
        Class_1731937914449_262()
    } else {
        Class_1731937914449_262()
    })
}

@Frozen
public func func_1731937914449_301(param_1731937914449_302: Interface_1731937914449_247): Option<Unit> { // block id: 303
    func func_1731937914449_305(): Option<Unit> { // block id: 306
        var var_1731937914449_325: ?UInt64 = (Class_1731937914449_262() as UInt64);
        const var_1731937914449_330: UInt16 = 124;
        ((var_1731937914449_319 ?? var_1731937914449_325) ?? UInt64(var_1731937914449_330)) ^ (try { // block id: 334
            [var_1731937914449_337, var_1731937914449_337, var_1731937914449_337, var_1731937914449_337, UInt64(181),
                var_1731937914449_337, UInt64(60), var_1731937914449_337, var_1731937914449_337, UInt64(128)];
            if (var_1731937914449_22) {
                var_1731937914449_325
            } else {
                Option<UInt64>.None
            }
        } finally { // block id: 352
            Option<UInt64>.Some(var_1731937914449_337)
        } ?? var_1731937914449_357.var_1731937914449_360);
        func_1731937914449_372().func_1731937914449_1545(namedParam_1731937914449_1546: try { // block id: 2304
            var_1731937914449_95;
            ();
            var_1731937914449_1040
        } finally { // block id: 2308
            ();
            var_1731937914449_981 &&= var_1731937914449_487
            [var_1731937914449_2315, var_1731937914449_337, UInt64(103), var_1731937914449_337, UInt64(55),
                var_1731937914449_2315, UInt64(148), var_1731937914449_337, UInt64(196), UInt64(165)]
        }, namedParam_1731937914449_1547: var_1731937914449_981, namedParam_1731937914449_1548: var_1731937914449_487);
        let var_1731937914449_2393: (Option<Class_1731937914449_262>, Array<Bool>, Interface_1731937914449_244, Option<Unit>, 
            Array<UInt64>, Array<Unit>) = ((() as Class_1731937914449_262), [(Class_1731937914449_241() is Option<Int8>),
                ((UInt64(208), UInt16(227), [(), (), (), (), (), (), (), (), (), ()], ([true, false, false, false, true,
                        false, true, true, true, false], (true, UInt64(186), UInt16(115), Int32(-120), Int16(118))), (Option<Option<UInt64>>
                        .None, ((Int8(Int8(11)) & 127)..=(Int8(Int8(42)) & 127) : (Int64(96) | 1)), (false, UInt64(115),
                        UInt16(149), Int32(94), Int16(60)), ((Int64(Int64(100)) & 127)..(Int64(Int64(72)) & 127) : (Int64(63) |
                        1)), UInt8(147))) is UInt8), true, ((UInt64(6) is Option<Unit>) is Range<Int64>), true, true,
                false, false, (Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: ())) is UInt32), false],
            Class_1731937914449_800(), Option<Unit>.None, [UInt64(107), UInt64(174), UInt64(99), UInt64(31), UInt64(100),
                UInt64(98), UInt64(180), UInt64(73), UInt64(79), UInt64(38)], [(), (), (), (), (), (), (), (), (), ()]);
        try { // block id: 2329
            var var_1731937914449_2337: UInt16 = UInt16(47);
            try (resource = Class_1731937914449_220<Int16>()) { // block id: 2331

            } catch (_) { // block id: 2332
                var_1731937914449_1120;
                ();
                var_1731937914449_2337 /= ((UInt16(135)) | 1)
            };
            var_1731937914449_1120;
            if (false) { // block id: 2343
                var_1731937914449_157 |= Int64(-73)
                var_1731937914449_500 = var_1731937914449_500
                if (true) {
                    Option<Unit>.None
                } else {
                    var_1731937914449_1330
                }
            } else if (false) { // block id: 2355
                var_1731937914449_1330
            } else { // block id: 2357
                Option<Unit>.None
            }
        } catch (e: Exception) { // block id: 2359
            try { // block id: 2361
                var_1731937914449_157++;
                var_1731937914449_1330
            } finally { // block id: 2365
                var_1731937914449_1120;
                if (true) {
                    var_1731937914449_1330
                } else {
                    var_1731937914449_1330
                }
            }
        } finally { // block id: 2371
            var loopTimeVar_1731937914449_2382: Int = 0;
            while ((false) && loopTimeVar_1731937914449_2382 < 100) {
                loopTimeVar_1731937914449_2382++;
                var_1731937914449_2377 &&= var_1731937914449_487
                var_1731937914449_1120
            };
            var var_1731937914449_2385: UInt32 = UInt32(Int32(Int16(23)));
            var_1731937914449_2385 |= UInt32(138)
            var_1731937914449_2393[3]
        }
    };

    func_1731937914449_305()
}

@Frozen
public func func_1731937914449_62(namedParam_1731937914449_63!: Float32): (Bool, UInt64, UInt16, Int32, Int16) { // block id: 64
    const func func_1731937914449_66(optionalParam_1731937914449_67!: Int8 = 117): Unit { // block id: 69

    }

    func_1731937914449_66();
    let var_1731937914449_224: Class_1731937914449_220<Int16> = Class_1731937914449_220<Int16>();
    const var_1731937914449_2513: Float64 = 21.0;
    var loopTimeVar_1731937914449_2554: Array<UInt64> = [UInt64(248), UInt64(Int16(57)), UInt64(UInt16(67)), UInt64(32),
        UInt64(UInt8(24)), UInt64(UInt32(227)), UInt64(Int64(UInt32(167))), UInt64(UInt8(172)), UInt64(230), UInt64(44)];
    for (i in loopTimeVar_1731937914449_2554 where if ((Option<Unit>.None |> {
        lambdaParameter_1731937914449_139: Option<Unit> =>
            const var_1731937914449_152: Int32 = -63;
            let var_1731937914449_171: VArray<Int64, $7> = VArray<Int64, $7>({i => Int64(-93)});
            let var_1731937914449_186: ?Unit = (VArray<Int64, $7>({i => Int64(-60)}) as Unit);
            var_1731937914449_224.func_1731937914449_228<Unit>(var_1731937914449_2513,
                namedParam_1731937914449_230: func_1731937914449_73,
                namedParam_1731937914449_235: var_1731937914449_2517) |> {
                lambdaParameter_1731937914449_144: Option<Unit> => (((Int64(try { // block id: 149
                    ();
                    var_1731937914449_152;
                    Int64(36) & var_1731937914449_157
                } catch (_) { // block id: 160
                    const var_1731937914449_162: Unit = ();
                    var_1731937914449_162;
                    ();
                    var_1731937914449_157
                } finally { // block id: 166
                    var_1731937914449_157
                }) & 127)..(Int64(var_1731937914449_171[3]) & 127) : (match (var_1731937914449_186) {
                    case caseVar_1731937914449_204: Bool =>
                        var_1731937914449_207;
                        var_1731937914449_95;
                        Int64(-125) * Int64(-115)

                    case _ => var_1731937914449_157 / ((Int64(68)) | 1)
                } | 1)) is Range<Int16>)
            }
    })) { // block id: 2529
        ();
        var_1731937914449_337 >= UInt64(210)
    } else { // block id: 2534
        var_1731937914449_2315 -= var_1731937914449_337
        var_1731937914449_2540 >>= ((Int16(-121)) & 7)
        var_1731937914449_487
    }) {
        if (var_1731937914449_2377) { // block id: 2548

        }
        var_1731937914449_2551 <<= ((UInt32(128)) & 7)
    };
    try { // block id: 2574
        (var_1731937914449_2581 ?? Option<VArray<Unit, $3>>.None);
        let var_1731937914449_2629: Interface_1731937914449_247 = Class_1731937914449_241();
        (Option<Option<VArray<Unit, $3>>>.None, VArray<Unit, $9>({i => ()}), var_1731937914449_2599,
            var_1731937914449_1015, var_1731937914449_2629, [var_1731937914449_1138, var_1731937914449_1138,
                var_1731937914449_1138, var_1731937914449_1138, VArray<Unit, $9>(repeat: var_1731937914449_95),
                VArray<Unit, $9>(repeat: ()), var_1731937914449_1138, VArray<Unit, $9>({i => ()}),
                var_1731937914449_1138, VArray<Unit, $9>({i => ()})], var_1731937914449_2683)[2];
        var var_1731937914449_2841: (Bool, UInt64, UInt16, Int32, Int16) = (true, UInt64(29), UInt16(Int8(87)), Int32(UInt16(UInt8(UInt8(178)))),
            Int16(Int16(Int16(6))));
        try { // block id: 2690
            var_1731937914449_2692;
            var_1731937914449_2841
        } catch (_) { // block id: 2854
            if (var_1731937914449_487) {
                VArray<Int64, $7>({i => Int64(-47)})
            } else {
                VArray<Int64, $7>({i => Int64(64)})
            };
            ();
            (true, UInt64(224), UInt16(173), var_1731937914449_500, var_1731937914449_297)
        }
    } finally { // block id: 2880
        if (true) { // block id: 2883
            ();
            var_1731937914449_2679;
            Option<(Array<Bool>, Array<Bool>, Array<UInt64>, Interface_1731937914449_246, Interface_1731937914449_245)>
                .Some(
                    (var_1731937914449_1037, [false, true, false, true, true, true, true, false, true, false],
                        var_1731937914449_1040, var_1731937914449_1060, Class_1731937914449_800()))
        } else if (var_1731937914449_487) { // block id: 2894
            var_1731937914449_1012
        } else { // block id: 2896
            Class_1731937914449_262();
            var_1731937914449_2599;
            var_1731937914449_1012
        };
        (var_1731937914449_2906 ?? var_1731937914449_1330);
        var_1731937914449_2910
    }
}

@Frozen
public func func_1731937914449_37(param_1731937914449_38: Int8): Option<Unit> { // block id: 39
    var loopTimeVar_1731937914449_57: Int64 = 0;
    while ((try { // block id: 42
            !var_1731937914449_22
        } finally { // block id: 45
            UInt8(77) + var_1731937914449_17;
            Float32(98.0) / Float32((Int32(Float32(-33.0))) | 1);
            var_1731937914449_22
        }) && loopTimeVar_1731937914449_57 < 100) {
        loopTimeVar_1731937914449_57++;
        (Int64(-41) as Unit)
    };
    var loopTimeVar_1731937914449_2925: Int64 = 0;
    while ((func_1731937914449_62(namedParam_1731937914449_63: var_1731937914449_526)[0]) &&
            loopTimeVar_1731937914449_2925 < 100) {
        loopTimeVar_1731937914449_2925++;
    };
    (Option<Option<Unit>>.None ?? match (Class_1731937914449_262()) {
        case caseVar_1731937914449_2932 =>
            var_1731937914449_1120;
            const var_1731937914449_2937: Unit = ();
            Option<Unit>.Some(var_1731937914449_2937)

        case caseVar_1731937914449_2941: Array<Unit> =>
            Int32(46);
            var_1731937914449_1330

        case _ => var_1731937914449_1330

        case _ =>
            ();
            if (false) {
                Option<Unit>.None
            } else {
                Option<Unit>.None
            }

        case _ =>
            ();
            if (true) {
                var_1731937914449_1330
            } else {
                Option<Unit>.None
            }
    })
}

main(): Int64 {
    try {
        var var_1731937914449_12: Int64 = Int64(Int16(-65));
        let var_1731937914449_3018: (Bool, UInt64, UInt16, Int32, Int16) = ((Class_1731937914449_220<Int16>() is Option<Option<Unit>>),
            UInt64(Int64(UInt16(99))), UInt16(185), Int32(UInt16(UInt16(224))), Int16(1));
        var loopTimeVar_1731937914449_3039: Int64 = 0;
        while ((if (true) { // block id: 9
                var_1731937914449_12 >>= ((var_1731937914449_12) & 7)
                var_1731937914449_17;
                var_1731937914449_22
            } else { // block id: 24
                true
            }) && loopTimeVar_1731937914449_3039 < 100) {
            loopTimeVar_1731937914449_3039++;
            let var_1731937914449_2966: (Int8) -> Option<Unit> = func_1731937914449_37;
            func func_1731937914449_28(): UInt8 { // block id: 29
                var loopTimeVar_1731937914449_2988: Array<UInt64> = [UInt64(160), UInt64(Int16(-10)), UInt64(113),
                    UInt64(Int64(UInt8(UInt8(172)))), UInt64(247), UInt64(177), UInt64(UInt32(206)), UInt64(227),
                    UInt64(147), UInt64(Int32(Int32(75)))];
                (match ((var_1731937914449_2969 |> var_1731937914449_2966)) {
                    case _ =>
                        var var_1731937914449_2976: UInt = UInt64(Int64(Int8(89)));
                        var_1731937914449_2976 -= UInt64(215)
                        var var_1731937914449_2982: ?Unit = Option<Unit>.Some(());
                        var_1731937914449_2982
                } ?? for (i in loopTimeVar_1731937914449_2988 where var_1731937914449_487) {
                });
                let var_1731937914449_3035: UInt8 = UInt8(Int8(92));
                try { // block id: 3008
                    if (true) {
                        var_1731937914449_3012
                    } else {
                        var_1731937914449_3012
                    };
                    try { // block id: 3016
                        var_1731937914449_3018;
                        var_1731937914449_17
                    } catch (e: Exception) { // block id: 3031
                        var_1731937914449_17
                    }
                } finally { // block id: 3033
                    var_1731937914449_3035
                }
            };

            func_1731937914449_28()
        };
        match (if (var_1731937914449_22) { // block id: 3043
            var_1731937914449_3045
        } else { // block id: 3050
            var_1731937914449_3053 = Int8(-41)
            var_1731937914449_1120;
            var_1731937914449_3045
        }) {
            case caseVar_1731937914449_3060 => [var_1731937914449_22, false, var_1731937914449_487,
                var_1731937914449_487, var_1731937914449_487, var_1731937914449_487, false, false,
                var_1731937914449_3072, var_1731937914449_3072]

            case _ =>
                var_1731937914449_3080 = var_1731937914449_3083
                var_1731937914449_3090
        };
        Int64(122)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1731937914449_12 * var_1731937914449_12), 64)
        crcCheck.updateBuffer(UInt64(var_1731937914449_3080 * var_1731937914449_3080), 64)
        crcCheck.updateBuffer(UInt64(var_1731937914449_3083 * var_1731937914449_3083), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend<T0> Class_1731937914449_220<T0> {
    public func func_1731937914449_228<T0>(param_1731937914449_229: Float64,
        namedParam_1731937914449_230!: (Option<Unit>) -> Bool,
        optionalParam_1731937914449_233!: Range<UInt8> = ((UInt8(UInt8(49)) & 127)..(UInt8(UInt8(136)) & 127) : (Int64(103) |
            1)), namedParam_1731937914449_235!: Range<UInt8>): Option<Unit> { // block id: 236
        var loopTimeVar_1731937914449_258: Int64 = 0;
        while ((var_1731937914449_250.var_1731937914449_253[7]) && loopTimeVar_1731937914449_258 < 100) {
            loopTimeVar_1731937914449_258++;
        };
        let var_1731937914449_275: UInt64 = UInt64(UInt8(UInt8(70)));
        try { // block id: 260
            var var_1731937914449_266: Class_1731937914449_262 = Class_1731937914449_262();
            var_1731937914449_266.var_1731937914449_269;
            var var_1731937914449_282: Range<Int64> = ((Int64(Int64(76)) & 127)..(Int64(Int64(-28)) & 127) : (Int64(-6) |
                1));
            let var_1731937914449_291: UInt16 = UInt16(UInt16(UInt8(76)));
            if (true) { // block id: 273
                var_1731937914449_275;
                if (var_1731937914449_22) {
                    var_1731937914449_282
                } else {
                    ((Int64(Int64(2)) & 127)..=(Int64(Int64(-115)) & 127) : (Int64(64) | 1))
                }
            } else { // block id: 285
                var_1731937914449_95;
                (true, UInt64(56), var_1731937914449_291, Int32(-40), var_1731937914449_297);
                ((Int64(Int64(-2)) & 127)..=(Int64(Int64(121)) & 127) : (Int64(-106) | 1))
            };
            var var_1731937914449_2461: (Interface_1731937914449_247) -> Option<Unit> = func_1731937914449_301;
            let var_1731937914449_2464: Interface_1731937914449_247 = Class_1731937914449_241();
            var_1731937914449_2464 |> var_1731937914449_2461
        } catch (e: Exception) { // block id: 2466
            ((UInt32(UInt32(230)) & 127)..(UInt32(UInt32(234)) & 127) : (Int64(-117) | 1));
            try { // block id: 2469
                var_1731937914449_487 ||= false
                var_1731937914449_660 /= ((Int8(75)) | 1)
                if (var_1731937914449_750) {
                    var_1731937914449_1330
                } else {
                    Option<Unit>.Some(())
                }
            } catch (e: Exception) { // block id: 2481
                Option<Unit>.None
            }
        } finally { // block id: 2483
            (Option<Unit>.Some(()) ?? var_1731937914449_1120);
            (Option<Interface_1731937914449_248>.None ?? var_1731937914449_2495);
            if (var_1731937914449_487) { // block id: 2499
                if (var_1731937914449_2377) {
                    var_1731937914449_1330
                } else {
                    Option<Unit>.None
                }
            } else { // block id: 2504
                ();
                Float64(12.0);
                if (true) {
                    Option<Unit>.Some(var_1731937914449_95)
                } else {
                    var_1731937914449_1330
                }
            }
        }
    }
}

extend Struct_1731937914449_844 {}
