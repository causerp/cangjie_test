/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

public var var_1694556069318_32 : Float64 = Float64(-36.0)
public const var_1694556069318_35 : Float32 = 32.0
public var var_1694556069318_42 : (Int64, Unit, Float64, Float32, Float32) = (Int64(UInt64(UInt32(Int32(-80)))), (), Float64(Float32(-121.0)), Float32(Float32(Float32(Float32(85.0)))), Float32(Float32(Float32(Float32(105.0)))))
public let var_1694556069318_63 : Bool = (() is Float32)
public var var_1694556069318_90 : UInt8 = UInt8(UInt8(Int8(Int8(35))))
public var var_1694556069318_285 : Bool = (Class_1694556069318_140() is Array<VArray<Float32, $6>>)
public let var_1694556069318_337 : Int64 = Int64(UInt16(Int16(-55)))
public var var_1694556069318_345 : Unit = ()
public var var_1694556069318_556 : Struct_1694556069318_149 = Struct_1694556069318_149()
public var var_1694556069318_580 : Class_1694556069318_352 = Class_1694556069318_352()
let var_1694556069318_627 : Array<VArray<Float32, $6>> = [[Float32(-18.0), Float32(-86.0), Float32(-83.0), Float32(96.0), Float32(-2.0), Float32(80.0)], [Float32(-40.0), Float32(-84.0), Float32(-32.0), Float32(-115.0), Float32(102.0), Float32(-53.0)], [Float32(77.0), Float32(-120.0), Float32(-96.0), Float32(56.0), Float32(-97.0), Float32(-17.0)], [Float32(-13.0), Float32(-80.0), Float32(117.0), Float32(120.0), Float32(96.0), Float32(-80.0)], [Float32(-40.0), Float32(52.0), Float32(122.0), Float32(126.0), Float32(93.0), Float32(-73.0)], [Float32(-103.0), Float32(105.0), Float32(-115.0), Float32(38.0), Float32(1.0), Float32(-15.0)], [Float32(-57.0), Float32(-71.0), Float32(98.0), Float32(-30.0), Float32(42.0), Float32(-19.0)], [Float32(76.0), Float32(-6.0), Float32(78.0), Float32(76.0), Float32(-74.0), Float32(14.0)], [Float32(51.0), Float32(104.0), Float32(-90.0), Float32(-81.0), Float32(121.0), Float32(27.0)], [Float32(45.0), Float32(-2.0), Float32(-47.0), Float32(-60.0), Float32(-49.0), Float32(92.0)]]
public let var_1694556069318_776 : Option<Int8> = Option<Int8>.None
public let var_1694556069318_920 : Unit = ()
var var_1694556069318_950 : Range<Int16> = ((Int16(Int16(6))&127)..=(Int16(Int16(8))&127):(Int64(-74)|1))
let var_1694556069318_977 : (Range<Int8>, ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16), Float32) = (((Int8(Int8(113))&127)..(Int8(Int8(-92))&127):(Int64(Int32(31))|1)), (((true as Unit), (), Int32(-95), Class_1694556069318_352(), (), Int64(UInt8(14)), Int64(99), Int16(-79)), Int32(-49), Int16(Int8(Int8(-37)))), Float32(Float32(0.0)))
let var_1694556069318_1030 : Option<Class_1694556069318_72> = Option<Class_1694556069318_72>.None
public var var_1694556069318_1117 : Int16 = Int16(15)
public var var_1694556069318_1122 : UInt32 = UInt32(112)
let var_1694556069318_1369 : Array<UInt64> = [UInt64(Int64(58)), UInt64(183), UInt64(204), UInt64(Int32(-80)), UInt64(Int32(Int32(100))), UInt64(Int8(UInt8(Int8(76)))), UInt64(19), UInt64(UInt64(180)), UInt64(217), UInt64(UInt8(Int8(-73)))]
let var_1694556069318_1470 : VArray<Float32, $6> = [Float32(-97.0), Float32(43.0), Float32(45.0), Float32(96.0), Float32(-51.0), Float32(16.0)]
public let var_1694556069318_1530 : Range<Int32> = ((Int32(Int32(-50))&127)..=(Int32(Int32(72))&127):(Int64(-69)|1))
let var_1694556069318_1533 : UInt64 = UInt64(151)
public open class Class_1694556069318_72 <: Resource {
    public init() { // block id: 74

    }
;
    prop var_1694556069318_639 : Range<Int32> { // block id: 640
        get() { // block id: 642
            ();
            ((Int32(Int32(22))&127)..(Int32(Int32(-104))&127):(Int64(97)|1))
        }

    };
    static mut prop var_1694556069318_648 : ??Range<Int32> { // block id: 649
        get() { // block id: 651
            ();
            UInt64(UInt64(99));
            Option<Option<Range<Int32>>>.None
        }

        set(Value) { // block id: 658
            UInt32(155);
            ()
        }

    };
    mut prop var_1694556069318_787 : Float64 { // block id: 788
        get() { // block id: 790
            Float64(Float32(Float32(5.0)))
        }

        set(Value) { // block id: 796
            r'n';
            ()
        }

    };
    mut prop var_1694556069318_851 : Range<Int16> { // block id: 852
        get() { // block id: 854
            ((Int16(Int16(-98))&127)..=(Int16(Int16(-120))&127):(Int64(-9)|1));
            var_1694556069318_1574
        }

        set(Value) { // block id: 858
            ();
            ();
            var_1694556069318_1574 = Value
        }

    };
    private static var var_1694556069318_897 : (Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16) = (Option<Unit>.None, (), Int32(-39), Class_1694556069318_352(), (), Int64(60), Int64(23), Int16(0));
    public open func func_1694556069318_830() : Unit { // block id: 831
        var var_1694556069318_868 : Struct_1694556069318_864<Option<Rune>, Option<Class_1694556069318_72>> = Struct_1694556069318_864<Option<Rune>, Option<Class_1694556069318_72>>();
        var var_1694556069318_882 : (Range<Int64>, Bool) = (((Int64(Int64(81))&127)..=(Int64(Int64(-121))&127):(Int64(-82)|1)), ((Int8(Int8(63)) as Rune) is Array<UInt64>));
        var loopTimeVar_1694556069318_891 : Int = 0;
        do {
            loopTimeVar_1694556069318_891++;
            var_1694556069318_868.var_1694556069318_871;
            var_1694556069318_882[1]
        } while ((match (if (var_1694556069318_285) { // block id: 836
            ();
            var var_1694556069318_840 : UInt32 = UInt32(76);
            ((UInt32(var_1694556069318_840)&127)..=(UInt32(UInt32(83))&127):(Int64(99)|1))
        } else { // block id: 844
            var_1694556069318_285;
            ((UInt32(UInt32(66))&127)..=(UInt32(UInt32(216))&127):(Int64(-34)|1))
        }) {
            case _ => 
                var_1694556069318_851;
                false
            
        }) && loopTimeVar_1694556069318_891 < 100 ) ;
        match (try { // block id: 895
            var_1694556069318_897
        } finally { // block id: 907
            var_1694556069318_897
        }[2]) {
            case -58 | -14 | -72 => 
                ((UInt32(UInt32(174))&127)..=(UInt32(UInt32(47))&127):(Int64(56)|1));
                var_1694556069318_285;
                var_1694556069318_345
            
            case _ => 
                var_1694556069318_920
            
        };
        var var_1694556069318_924 : Int32 = Int32(-107);
        var_1694556069318_924 -= Int32(-54)
    }
;
    private static var var_1694556069318_1107 : Rune = r'7';
    public open func func_1694556069318_1048() : Int64 { // block id: 1049
        var var_1694556069318_1071 : ?Rune = ((((Int64(Int64(Int8(30)))&127)..(Int64(Int64(53))&127):(Int64(116)|1)), (r'N' is Int16)) as Rune);
        let var_1694556069318_1136 : VArray<Float32, $6> = [Float32(30.0), Float32(-81.0), Float32(-50.0), Float32(-114.0), Float32(52.0), Float32(-1.0)];
        try { // block id: 1051
            if (var_1694556069318_285) { // block id: 1054
                var_1694556069318_345;
                Int64(30)
            } else { // block id: 1057
                Float32(-87.0);
                ();
                Int64(91) / ((Int64(-99)) | 1)
            }
        } catch (e: Exception) { // block id: 1063
            var var_1694556069318_1099 : VArray<Int64, $1> = [Int64(UInt32(80))];
            if (var_1694556069318_285) { // block id: 1066
                var_1694556069318_920;
                if (var_1694556069318_285) { var_1694556069318_1071 } else { var_1694556069318_1071 } 
            } else if (true) { // block id: 1083
                var var_1694556069318_1086 : UInt = UInt64(Int16(UInt16(Int16(56))));
                var_1694556069318_1086 &= UInt64(39);
                if (true) { var_1694556069318_1071 } else { var_1694556069318_1071 } 
            } else { // block id: 1096
                ();
                var_1694556069318_1099;
                if (false) { Option<Rune>.Some(var_1694556069318_1107) } else { var_1694556069318_1071 } 
            };
            var var_1694556069318_1140 : Int32 = Int32(UInt16(Int16(-14)));
            try (resource = Class_1694556069318_72()) { // block id: 1111
                Int64(-1);
                var_1694556069318_345
            } catch (e: Exception) { // block id: 1114
                var_1694556069318_1117 |= Int16(35);
                var_1694556069318_1122 %= ((var_1694556069318_1122) | 1);
                var var_1694556069318_1127 : Bool = ("-](/9z)a7X" is Unit);
                var_1694556069318_1127 ||= var_1694556069318_285
            } finally { // block id: 1131
                var_1694556069318_285 ||= false;
                var_1694556069318_1136;
                var_1694556069318_1140 %= ((Int32(-57)) | 1)
            };
            Int64(54)
        } finally { // block id: 1146
            VArray<Unit, $2>(repeat: var_1694556069318_345)[1];
            let var_1694556069318_1155 : String = "<T8},*<]'J";
            match (var_1694556069318_1155) {
                case _ : Float32 => 
                    Int64(71)
                
                case """
b!Prv
QNAa{o
""" | "=Q26t!P)rs" | ###"Sa}eS\"87tq"### | ###"w9.7>*iAcb"### => 
                    ();
                    Int64(15)
                
                case ###"jymEL}<X?8"### | """
5H;Dz
W1A&D
""" => 
                    Int64(-96) % ((Int64(17)) | 1)
                
                case _ => 
                    var_1694556069318_345;
                    Option<Rune>.Some(var_1694556069318_1107);
                    Int64(68)
                
            }
        }
    }
;
    var var_1694556069318_1574 : Range<Int16> = ((Int16(Int16(-98))&127)..=(Int16(Int16(86))&127):(Int64(-46)|1))
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


func func_1694556069318_109(param_1694556069318_110 : Unit) : Unit { // block id: 111

}


public open class Class_1694556069318_140 <: Class_1694556069318_72 {
    public init() { // block id: 142

    }
;
    protected mut prop var_1694556069318_672 : Rune { // block id: 673
        get() { // block id: 675
            ();
            ();
            r'e'
        }

        set(Value) { // block id: 681
            ();
            ();
            ()
        }

    };
    let var_1694556069318_754 : Range<UInt64> = ((UInt64(UInt64(192))&127)..=(UInt64(UInt64(17))&127):(Int64(-16)|1));
    static mut prop var_1694556069318_1191 : (Struct_1694556069318_149, Bool) { // block id: 1192
        get() { // block id: 1194
            (((Int64(Int64(UInt16(54)))&127)..=(Int64(Int64(121))&127):(Int64(-108)|1)), true);
            UInt64(156);
            (Struct_1694556069318_149(), (true is Class_1694556069318_140))
        }

        set(Value) { // block id: 1209
            ();
            ()
        }

    };
    static let var_1694556069318_1552 : String = "P+phjTvqh ";
    static let var_1694556069318_1556 : ?Range<Int32> = Option<Range<Int32>>.None;
    public open func func_1694556069318_602() : Struct_1694556069318_149 { // block id: 1180
        if (match (r'z') {
            case _ => 
                var_1694556069318_285
            
        }) { var_1694556069318_1191[0] } else { (if ((UInt64(184) == UInt64(130))) { [var_1694556069318_556, var_1694556069318_556, var_1694556069318_556, Struct_1694556069318_149(), Struct_1694556069318_149(), var_1694556069318_556, Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(Option<Range<Int32>>.None, var_1694556069318_1552), Struct_1694556069318_149(var_1694556069318_1556, """
uzJTf
4/$\\B
""")][6] } else { if (var_1694556069318_285) { // block id: 1562
            var_1694556069318_345;
            if (var_1694556069318_285) { Struct_1694556069318_149() } else { var_1694556069318_556 } 
        } else { // block id: 1568
            var_1694556069318_920;
            if (var_1694556069318_285) { Struct_1694556069318_149() } else { var_1694556069318_556 } 
        } } ) } 
    }

}

public struct Struct_1694556069318_149 {
    public init() { // block id: 151

    }
;
    static const var_1694556069318_258 : Unit = ();
    public static func func_1694556069318_241<T0, T1>(optionalParam_1694556069318_242 ! : Int64 = Int64(95), optionalParam_1694556069318_244 ! : Range<UInt64> = ((UInt64(UInt64(227))&127)..(UInt64(UInt64(194))&127):(Int64(89)|1))) : Unit { // block id: 246
        ();
        var var_1694556069318_300 : UInt64 = UInt64(11);
        match (try { // block id: 250
            ();
            var_1694556069318_90
        } finally { // block id: 253
            Float32(16.0) - Float32(-5.0);
            var_1694556069318_258;
            var_1694556069318_90 | UInt8(6)
        }) {
            case 139 | 105 | 115 => 
                var_1694556069318_258
            
            case 149 => 
                var_1694556069318_35 / Float32((Int32(var_1694556069318_35)) | 1);
                var var_1694556069318_275 : UInt32 = UInt32(UInt8(75));
                var_1694556069318_275 &= UInt32(112)
            
            case caseVar_1694556069318_281 : Option<Class_1694556069318_72> => 
                var_1694556069318_285 &&= var_1694556069318_285;
                var_1694556069318_285 &&= true;
                var_1694556069318_258
            
            case caseVar_1694556069318_295 : Int64 => 
                false;
                var_1694556069318_300 *= var_1694556069318_300
            
            case _ => 
                var_1694556069318_258;
                ();
                ()
            
        }
    }
;
    let var_1694556069318_559 : VArray<Int64, $1> = [Int64(-44)];
    public var var_1694556069318_815 : Class_1694556069318_140 = Class_1694556069318_140();
    private static var var_1694556069318_1392 : ?Range<Int32> = Option<Range<Int32>>.None;
    public static mut prop var_1694556069318_1402 : Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)> { // block id: 1403
        get() { // block id: 1405
            (VArray<Int64, $8>({ i => Int64(62)}) as (Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>))
        }

        set(Value) { // block id: 1421
            [(), (), (), (), (), (), (), (), (), ()];
            ()
        }

    };
    public static let var_1694556069318_1480 : VArray<Float32, $6> = [Float32(41.0), Float32(-93.0), Float32(-109.0), Float32(-2.0), Float32(17.0), Float32(54.0)];
    static var var_1694556069318_1497 : Float32 = Float32(56.0);
    public static prop var_1694556069318_1539 : Option<Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>> { // block id: 1540
        get() { // block id: 1542
            (Option<Range<Int32>>.None as Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>)
        }

    };
    public init(param_1694556069318_1229 : Option<Range<Int32>>, param_1694556069318_1230 : String) { // block id: 1231
        var var_1694556069318_1238 : (Range<Int32>, (Bool, Int32, Array<VArray<Float32, $6>>, Range<UInt8>)) = (((Int32(Int32(21))&127)..=(Int32(Int32(Int8(Int8(92))))&127):(Int64(-127)|1)), (((Option<Option<Range<Int32>>>.Some(Option<Range<Int32>>.Some(((Int32(Int32(-118))&127)..(Int32(Int32(118))&127):(Int64(-91)|1)))) as Range<Int32>) is (Float64) -> Class_1694556069318_352), Int32(Int16(UInt8(116))), [VArray<Float32, $6>({ i => Float32(116.0)}), VArray<Float32, $6>({ i => Float32(70.0)}), VArray<Float32, $6>(repeat: Float32(-33.0)), VArray<Float32, $6>({ i => Float32(115.0)}), VArray<Float32, $6>(repeat: Float32(3.0)), VArray<Float32, $6>({ i => Float32(-33.0)}), VArray<Float32, $6>({ i => Float32(100.0)}), VArray<Float32, $6>({ i => Float32(-46.0)}), VArray<Float32, $6>({ i => Float32(94.0)}), VArray<Float32, $6>({ i => Float32(46.0)})], ((UInt8(UInt8(Int8(6)))&127)..(UInt8(UInt8(92))&127):(Int64(Int32(65))|1))));
        var loopTimeVar_1694556069318_1353 : Int64 = 0;
        do {
            loopTimeVar_1694556069318_1353++;
            [var_1694556069318_920, (), (), (), (), var_1694556069318_258, var_1694556069318_258, (), (), var_1694556069318_920][2]
        } while ((var_1694556069318_1238[1][0]) && loopTimeVar_1694556069318_1353 < 100 ) ;
        let var_1694556069318_1398 : ?Rune = Option<Rune>.Some(r'D');
        let var_1694556069318_1428 : Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)> = Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>.None;
        var var_1694556069318_1463 : Float32 = Float32(25.0);
        var var_1694556069318_1489 : VArray<Float32, $6> = [Float32(106.0), Float32(-118.0), Float32(-95.0), Float32(-113.0), Float32(27.0), Float32(-20.0)];
        let var_1694556069318_1505 : Float32 = Float32(Float32(Float32(Float32(-8.0))));
        (if (true) { if (false) { // block id: 1363
            const var_1694556069318_1395 : UInt64 = 19;
            if (var_1694556069318_285) { Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>.Some((var_1694556069318_1369, var_1694556069318_1392, var_1694556069318_1395, var_1694556069318_1398)) } else { var_1694556069318_1402 } 
        } else if (var_1694556069318_285) { // block id: 1425
            var_1694556069318_258;
            var_1694556069318_1428
        } else { // block id: 1430
            var_1694556069318_1117 ^= Int16(-77);
            var var_1694556069318_1436 : Bool = (([UInt64(82), UInt64(108), UInt64(73), UInt64(185), UInt64(225), UInt64(218), UInt64(59), UInt64(152), UInt64(249), UInt64(92)], (((UInt16(UInt16(254))&127)..(UInt16(UInt16(246))&127):(Int64(71)|1)) as Range<Int32>), UInt64(Int8(-116)), Option<Rune>.None) is Range<Int16>);
            if (var_1694556069318_1436) { var_1694556069318_1402 } else { Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>.None } 
        } } else { ((((Int32(Int32(-36))&127)..(Int32(Int32(79))&127):(var_1694556069318_337|1)), (var_1694556069318_285, Int32(126), [VArray<Float32, $6>({ i => Float32(72.0)}), var_1694556069318_1470, VArray<Float32, $6>(repeat: var_1694556069318_1463), var_1694556069318_1480, var_1694556069318_1489, VArray<Float32, $6>({ i => Float32(-82.0)}), VArray<Float32, $6>(repeat: var_1694556069318_1497), var_1694556069318_1470, var_1694556069318_1480, var_1694556069318_1480], ((UInt8(UInt8(58))&127)..=(UInt8(UInt8(176))&127):(Int64(-37)|1)))) as (Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)) }  ?? ((Option<Option<(Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>)>>.None ?? var_1694556069318_1428) ?? try { // block id: 1525
            ([UInt64(159), UInt64(69), UInt64(183), UInt64(231), UInt64(212), UInt64(39), UInt64(211), UInt64(114), UInt64(134), UInt64(84)], Option<Range<Int32>>.Some(var_1694556069318_1530), var_1694556069318_1533, var_1694556069318_1398)
        } finally { // block id: 1536
            var_1694556069318_345;
            var_1694556069318_1539;
            (var_1694556069318_1369, var_1694556069318_1392, UInt64(252), var_1694556069318_1398)
        }))
    }

}

public open class Class_1694556069318_352 <: Class_1694556069318_140 {
    public init() { // block id: 354

    }
;
    private mut prop var_1694556069318_612 : UInt16 { // block id: 613
        get() { // block id: 615
            UInt16(55)
        }

        set(Value) { // block id: 619
            ();
            ((Int32(Int32(50))&127)..(Int32(Int32(-117))&127):(Int64(17)|1));
            ()
        }

    };
    static let var_1694556069318_766 : ?Array<Struct_1694556069318_149>;
    public override func func_1694556069318_602() : Struct_1694556069318_149 { // block id: 603
        try { // block id: 605
            Option<Range<Int32>>.Some(((Int32(Int32(-17))&127)..(Int32(Int32(-36))&127):(Int64(71)|1)))
        } catch (_) { // block id: 608
            UInt16(57) % ((var_1694556069318_612) | 1);
            if (var_1694556069318_285) { // block id: 625
                var_1694556069318_627;
                var_1694556069318_345
            };
            (Option<Option<Range<Int32>>>.Some(Option<Range<Int32>>.None) ?? Option<Range<Int32>>.Some(var_1694556069318_639))
        } finally { // block id: 645
            (var_1694556069318_648 ?? Option<Range<Int32>>.Some(var_1694556069318_639))
        };
        let var_1694556069318_706 : (Int64, Unit, Float64, Float32, Float32) = (Int64(60), (), Float64(Float32(Float32(Float32(-76.0)))), Float32(-40.0), Float32(114.0));
        var loopTimeVar_1694556069318_717 : Range<UInt64> = ((UInt64(UInt64(Int64(114)))&127)..=(UInt64(UInt64(177))&127):(Int64(Int8(94))|1));
        for (i in loopTimeVar_1694556069318_717 where ((Option<Rune>.Some(var_1694556069318_672) ?? var_1694556069318_672) is Bool)) {
            let var_1694556069318_690 : (Array<UInt64>, Option<Range<Int32>>, UInt64, Option<Rune>) = ([UInt64(120), UInt64(230), UInt64(83), UInt64(102), UInt64(2), UInt64(140), UInt64(114), UInt64(61), UInt64(112), UInt64(216)], Option<Range<Int32>>.Some(((Int32(Int32(21))&127)..(Int32(Int32(-8))&127):(Int64(-79)|1))), UInt64(Int16(UInt16(120))), Option<Rune>.Some(r'9'));
            var_1694556069318_690[2];
            var_1694556069318_706[4]
        };
        var var_1694556069318_740 : Array<Struct_1694556069318_149> = [Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149(), Struct_1694556069318_149()];
        ((((Int64(Int64(88))&127)..(Int64(Int64(96))&127):(var_1694556069318_337|1)), Option<Array<Struct_1694556069318_149>>.Some(var_1694556069318_740), ###"]2)\\vIoWQw"###, var_1694556069318_754)[1] ?? (var_1694556069318_766 ?? var_1694556069318_740))[0]
    }

    static init() {
        var_1694556069318_766 = Option<Array<Struct_1694556069318_149>>.None
    }
}


public struct Struct_1694556069318_438<T0, T1> {
    public init() { // block id: 440

    }
;
    static let var_1694556069318_443 : UInt8 = UInt8(123)
}


func func_1694556069318_549(param_1694556069318_550 : Float64) : Class_1694556069318_352 { // block id: 551
    var_1694556069318_556.var_1694556069318_559[0];
    let var_1694556069318_568 : ?Range<Int32> = Option<Range<Int32>>.Some(((Int32(Int32(-65))&127)..(Int32(Int32(52))&127):(Int64(54)|1)));
    let var_1694556069318_572 : Range<Int32> = ((Int32(Int32(54))&127)..=(Int32(Int32(UInt32(Int32(54))))&127):(Int64(121)|1));
    (var_1694556069318_568 ?? var_1694556069318_572);
    var_1694556069318_580
}

func func_1694556069318_356(optionalParam_1694556069318_357 ! : VArray<Float32, $6> = VArray<Float32, $6>({ i => Float32(104.0)}), namedParam_1694556069318_370 ! : Bool) : Class_1694556069318_352 { // block id: 371
    let var_1694556069318_498 : Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)> = (((UInt16(UInt16(78))&127)..(UInt16(UInt16(163))&127):(Int64(UInt64(239))|1)) as ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16));
    const var_1694556069318_523 : Float64 = 9.0;
    let var_1694556069318_530 : ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16) = (((() as Unit), (), Int32(-22), Class_1694556069318_352(), (), Int64(115), Int64(Int16(UInt8(141))), Int16(-72)), Int32(103), Int16(-39));
    func func_1694556069318_377() : ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16) { // block id: 378
        let var_1694556069318_384 : (Range<Int8>, ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16), Float32) = (((Int8(Int8(10))&127)..(Int8(Int8(29))&127):(Int64(53)|1)), ((Option<Unit>.None, (), Int32(Int8(-11)), Class_1694556069318_352(), (), Int64(-125), Int64(60), Int16(-118)), Int32(113), Int16(-101)), Float32(-4.0));
        var var_1694556069318_417 : UInt16 = UInt16(25);
        UInt16(match (var_1694556069318_384[1]) {
            case ((caseVar_1694556069318_407 : (Range<Int8>, ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16), Float32),caseVar_1694556069318_408,_,_,_ : Int64,caseVar_1694556069318_409 : (Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16),caseVar_1694556069318_410 : String,caseVar_1694556069318_411),caseVar_1694556069318_412 : Int8,caseVar_1694556069318_413) => 
                ((UInt16(var_1694556069318_417)&127)..=(UInt16(var_1694556069318_417)&127):(var_1694556069318_337|1));
                var_1694556069318_90
            
            case _ : Int64 => 
                var_1694556069318_90
            
            case _ => 
                ();
                var_1694556069318_90
            
        });
        (match (Struct_1694556069318_438<Int16, Range<UInt8>>.var_1694556069318_443) {
            case caseVar_1694556069318_447 => 
                var var_1694556069318_453 : ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16) = (((Int8(-122) as Unit), (), Int32(-95), Class_1694556069318_352(), (), Int64(-20), Int64(88), Int16(UInt16(UInt16(235)))), Int32(Int16(Int16(UInt16(1)))), Int16(Int16(-28)));
                if (false) { Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)>.Some(var_1694556069318_453) } else { Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)>.None } 
            
            case 145 | 249 | 160 | 115 => 
                var_1694556069318_345;
                let var_1694556069318_482 : ?Unit = (UInt8(116) as Unit);
                Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)>.Some(((var_1694556069318_482, var_1694556069318_345, Int32(108), Class_1694556069318_352(), var_1694556069318_345, var_1694556069318_337, var_1694556069318_337, Int16(-61)), Int32(40), Int16(96)))
            
            case 250 | 247 => 
                var_1694556069318_498
            
            case 159 | 192 => 
                var_1694556069318_345;
                var var_1694556069318_511 : Int64 = Int64(Int16(Int8(-110)));
                var_1694556069318_511 %= ((Int64(-112)) | 1);
                var_1694556069318_498
            
            case _ => 
                var_1694556069318_32 ** var_1694556069318_523;
                var_1694556069318_523 + Float64(-49.0);
                var_1694556069318_498
            
        } ?? var_1694556069318_530)
    }
;
    func_1694556069318_377()[0][4];
    Float64(Float64(Float32(28.0)))|>func_1694556069318_549
}






public func func_1694556069318_153(namedParam_1694556069318_154 ! : Int8, optionalParam_1694556069318_155 ! : Float64 = Float64(16.0), namedParam_1694556069318_157 ! : String) : Struct_1694556069318_149 { // block id: 158
    const var_1694556069318_180 : Bool = true;
    var var_1694556069318_211 : VArray<Float32, $6> = [Float32(Float32(-2.0)), Float32(-93.0), Float32(Float32(-25.0)), Float32(Float32(Float32(41.0))), Float32(-113.0), Float32(-83.0)];
    if (try { // block id: 172
        var var_1694556069318_174 : Bool = (Class_1694556069318_72() is Range<UInt64>);
        var_1694556069318_174
    } catch (_) { // block id: 177
        """
NfcAG
}zM56
""";
        var_1694556069318_180
    } finally { // block id: 182
        UInt32(11) >= UInt32(243)
    }) { [VArray<Float32, $6>(repeat: var_1694556069318_35), VArray<Float32, $6>({ i => Float32(-125.0)}), VArray<Float32, $6>({ i => Float32(0.0)}), var_1694556069318_211, var_1694556069318_211, VArray<Float32, $6>(repeat: var_1694556069318_35), var_1694556069318_211, var_1694556069318_211, var_1694556069318_211, var_1694556069318_211][5] } else { var_1694556069318_211 } [2];
    Struct_1694556069318_149.func_1694556069318_241<UInt8, Range<UInt32>>(optionalParam_1694556069318_242 : match (var_1694556069318_285) {
        case true | false | true => 
            [UInt64(21), UInt64(132), UInt64(173), UInt64(50), UInt64(115), UInt64(35), UInt64(249), UInt64(122), UInt64(52), UInt64(83)];
            Int64(-74)
        
        case false => 
            Int64(28) - Int64(-57)
        
        case true | true | false => 
            var var_1694556069318_326 : Range<UInt8> = ((UInt8(UInt8(178))&127)..=(UInt8(UInt8(54))&127):(Int64(9)|1));
            var_1694556069318_326;
            Int64(11) % ((Int64(-8)) | 1)
        
        case false => 
            Int64(0) * var_1694556069318_337
        
        case _ => 
            var_1694556069318_345;
            const var_1694556069318_348 : UInt16 = 65;
            var_1694556069318_348;
            Int64(10)
        
    });
    func_1694556069318_356(optionalParam_1694556069318_357 : (Option<VArray<Float32, $6>>.Some(var_1694556069318_211) ?? VArray<Float32, $6>({ i => Float32(100.0)})), namedParam_1694556069318_370 : true).func_1694556069318_602()
}


public func func_1694556069318_144<T0, T1>(param_1694556069318_145 : Int64) : Class_1694556069318_140 { // block id: 146
    r'H';
    var var_1694556069318_779 : Int8 = Int8(UInt8(217));
    var var_1694556069318_784 : Class_1694556069318_72 = Class_1694556069318_140();
    func_1694556069318_153(namedParam_1694556069318_154 : (var_1694556069318_776 ?? var_1694556069318_779), optionalParam_1694556069318_155 : var_1694556069318_784.var_1694556069318_787, namedParam_1694556069318_157 : try { // block id: 800
        ###";q~cSp:VRa{"###
    } catch (_) { // block id: 802
        Struct_1694556069318_149();
        ();
        if (false) { """
h*hur
0SNMO
""" } else { "%Px'|:+Xuq" } 
    } finally { // block id: 809
        var_1694556069318_285 &&= false;
        """
9(h@8
f736|
"""
    }).var_1694556069318_815
}

public struct Struct_1694556069318_864<T0, T1> {
    public init() { // block id: 866

    }
;
    public mut prop var_1694556069318_871 : Unit { // block id: 872
        get() { // block id: 874

        }

        set(Value) { // block id: 877
            ()
        }

    }
}


func func_1694556069318_133(optionalParam_1694556069318_134 ! : UInt8 = UInt8(Int8(Int8(21)))) : Option<Class_1694556069318_72> { // block id: 138
    func_1694556069318_144<Unit, Range<Int8>>(VArray<Int64, $8>(repeat: var_1694556069318_337)[2]).func_1694556069318_830();
    let var_1694556069318_939 : Range<UInt64> = ((UInt64(UInt64(42))&127)..(UInt64(UInt64(Int16(Int16(-128))))&127):(Int64(UInt8(Int8(Int8(-100))))|1));
    let var_1694556069318_957 : ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16) = (((UInt64(17) as Unit), (), Int32(Int8(Int8(107))), Class_1694556069318_352(), (), Int64(Int16(-113)), Int64(41), Int16(-49)), Int32(20), Int16(Int16(Int16(25))));
    let var_1694556069318_1004 : Rune = r'3';
    var loopTimeVar_1694556069318_1008 : Array<UInt64> = [UInt64(52), UInt64(UInt64(UInt32(187))), UInt64(212), UInt64(UInt32(149)), UInt64(198), UInt64(Int8(Int8(1))), UInt64(Int64(121)), UInt64(87), UInt64(UInt64(117)), UInt64(193)];
    for (i in loopTimeVar_1694556069318_1008 where (Option<(Unit, Range<UInt64>, Range<Int16>, Range<UInt32>, Bool, Range<UInt16>, Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)>, (Range<Int8>, ((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16), Float32), Option<Rune>)>.None ?? (var_1694556069318_920, var_1694556069318_939, var_1694556069318_950, ((UInt32(UInt32(75))&127)..(UInt32(UInt32(95))&127):(Int64(90)|1)), var_1694556069318_285, ((UInt16(UInt16(75))&127)..(UInt16(UInt16(239))&127):(Int64(10)|1)), Option<((Option<Unit>, Unit, Int32, Class_1694556069318_352, Unit, Int64, Int64, Int16), Int32, Int16)>.Some(var_1694556069318_957), var_1694556069318_977, Option<Rune>.Some(var_1694556069318_1004)))[4]) {

    };
    Option<Class_1694556069318_72>.None
}

public func func_1694556069318_76(optionalParam_1694556069318_77 ! : Float32 = Float32(25.0)) : Class_1694556069318_72 { // block id: 79
    var var_1694556069318_84 : Bool = ("U@~L1?fn:F" is Float64);
    let var_1694556069318_113 : (Unit) -> Unit = { lambdaParameter_1694556069318_116 : Unit =>  };
    const var_1694556069318_123 : Unit = ();
    try (resource = Class_1694556069318_72()) { // block id: 81
        if (var_1694556069318_84) { // block id: 87
            Int64(18);
            var_1694556069318_90
        } else { // block id: 95
            UInt8(107)
        };
        let var_1694556069318_103 : ?Unit = Option<Unit>.Some(());
        var_1694556069318_103.getOrThrow();
        ()
    } catch (_) { // block id: 107
        ()|>var_1694556069318_113;
        var loopTimeVar_1694556069318_126 : Int = 0;
        do {
            loopTimeVar_1694556069318_126++;
            var_1694556069318_123
        } while ((var_1694556069318_84) && loopTimeVar_1694556069318_126 < 100 ) 
    };
    var var_1694556069318_1045 : Class_1694556069318_72 = Class_1694556069318_72();
    (func_1694556069318_133() ?? (var_1694556069318_1030 ?? if (false) { // block id: 1034
        ();
        let var_1694556069318_1039 : Class_1694556069318_72 = Class_1694556069318_140();
        if (false) { var_1694556069318_1039 } else { Class_1694556069318_72() } 
    } else { // block id: 1043
        var_1694556069318_1045
    }))
}

main(): Int64 {
    try {
        var var_1694556069318_28 : Int = Int64(-46);
        try { // block id: 9
            ();
            var var_1694556069318_12 : (Int64, Unit, Float64, Float32, Float32) = (Int64(-26), (), Float64(Float32(67.0)), Float32(Float32(-74.0)), Float32(Float32(-3.0)));
            var_1694556069318_12
        } catch (_) { // block id: 22
            var var_1694556069318_24 : Unit = ();
            var_1694556069318_24;
            (var_1694556069318_28, var_1694556069318_24, var_1694556069318_32, var_1694556069318_35, Float32(10.0))
        } finally { // block id: 38
            Int32(-18);
            ();
            var_1694556069318_42
        }[1];
        if (var_1694556069318_63) { // block id: 66
            ();
            Int64(108)
        } else { // block id: 69
            var_1694556069318_28
        } / (((func_1694556069318_76().func_1694556069318_1048())) | 1)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1694556069318_28*var_1694556069318_28), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
        if ( res == "204225562541711" ){
            return 0
        }
        return 1
    }
}

// ASSERT: scan-10 sema_varray_cjvm_in_ref_type

