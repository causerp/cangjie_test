/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1686687005075_55 : Int64 = Int64(UInt64(214))
public let var_1686687005075_68 : Option<UInt8> = (Class_1686687005075_31() as UInt8)
var var_1686687005075_75 : Unit = ()
public var var_1686687005075_84 : Int64 = Int64(UInt16(93))
public var var_1686687005075_116 : UInt8 = UInt8(204)
public let var_1686687005075_154 : ?Unit = (UInt8(UInt8(114)) as Unit)
let var_1686687005075_198 : Bool = (((), (UInt32(UInt8(6)) as Bool), (r'w' is Unit), "d\"|$1Yda{b_", Int8(Int8(Int8(94)))) is Int16)
public var var_1686687005075_214 : Float64 = 25.0
let var_1686687005075_334 : Range<UInt8> = ((UInt8(UInt8(UInt8(UInt8(Int8(-98)))))&127)..(UInt8(UInt8(16))&127):((Int64(UInt16(31))|1)))
var var_1686687005075_352 : Bool = (UInt16(35) is Range<UInt64>)
public var var_1686687005075_383 : Int16 = Int16(99)
let var_1686687005075_394 : UInt16 = UInt16(Int8(Int8(UInt8(169))))
let var_1686687005075_402 : Int16 = Int16(UInt8(30))
let var_1686687005075_413 : Class_1686687005075_31 = Class_1686687005075_31()
public var var_1686687005075_442 : Int8 = Int8(-45)
let var_1686687005075_462 : Rune = r'9'
let var_1686687005075_509 : Range<UInt64> = ((UInt64(UInt64(Int8(-91)))&127)..(UInt64(UInt64(UInt16(UInt16(Int16(-92)))))&127):((Int64(Int8(UInt8(UInt8(88))))|1)))
var var_1686687005075_603 : Option<Option<Unit>> = (((), Option<Bool>.None, true, ###"-#CAR,`8eh"###, Int8(112)) as Option<Unit>)
public let var_1686687005075_649 : Array<Rune> = [r'c', r'h', r'3', r'e', r'F', r's', r'n', r'D', r'm', r'z']
var var_1686687005075_655 : Option<UInt8> = ((###"UAUetE}}bV"### as Bool) as UInt8)
public let var_1686687005075_670 : Array<Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>> = [Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, ((-70.0) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, (UInt8(UInt8(UInt8(151))) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (Option<Bool>.None as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (UInt8(133) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (((Int8(Int8(13))&127)..=(Int8(Int8(22))&127):((43|1))) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None]
public let var_1686687005075_712 : String = """
0&mN]
@N6S+
"""
public var var_1686687005075_729 : Int32 = Int32(123)
var var_1686687005075_749 : ?Option<UInt8> = (((Int8(Int8(UInt8(15)))&127)..(Int8(Int8(47))&127):((Int64(UInt32(63))|1))) as Option<UInt8>)
var var_1686687005075_764 : Option<Option<Bool>> = (Float32(Float32(-73.0)) as Option<Bool>)
public let var_1686687005075_864 : (Float64, Rune, Int8, UInt32, Array<Int16>) = (28.0, r'T', Int8(Int8(Int8(Int8(-97)))), UInt32(UInt16(168)), [Int16(Int16(119)), Int16(-14), Int16(Int8(UInt8(89))), Int16(Int8(Int8(-101))), Int16(-6), Int16(Int16(UInt16(251))), Int16(-11), Int16(UInt8(UInt8(146))), Int16(-105), Int16(-75)])
let var_1686687005075_1063 : (Unit, Option<Bool>, Bool, String, Int8) = ((), Option<Bool>.None, ([Int16(Int8(-42)), Int16(Int16(-84)), Int16(UInt16(191)), Int16(Int8(82)), Int16(-93), Int16(-65), Int16(-19), Int16(UInt8(156)), Int16(-91), Int16(UInt16(151))] is Range<Int32>), ###"f${var_1686687005075_712}0:${var_1686687005075_712}MDC3C${var_1686687005075_712}Wr"###, Int8(Int8(UInt8(174))))
public var var_1686687005075_1247 : Class_1686687005075_31 = Class_1686687005075_31()
public let var_1686687005075_1261 : ?Bool = Option<Bool>.None
public var var_1686687005075_1266 : Array<Bool> = [(([Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None] as Option<Bool>) is (Unit, Option<Bool>, Bool, String, Int8)), false, (((), Option<Bool>.None, true, """
6${var_1686687005075_712}\"be_
N(${var_1686687005075_712}A-`${var_1686687005075_712}
""", Int8(Int8(67))) is (Float64, Rune, Int8, UInt32, Array<Int16>)), false, false, false, (Int16(UInt16(212)) is UInt32), ([(((UInt64(UInt64(2))&127)..(UInt64(UInt64(105))&127):(25|1)) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, (51.0 as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (r'r' as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), ([false, false, true, true, true, true, false, true, false, true] as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (Class_1686687005075_31() as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, ((30.0, r'K', Int8(107), UInt32(75), [Int16(-5), Int16(-119), Int16(-83), Int16(11), Int16(92), Int16(30), Int16(21), Int16(97), Int16(96), Int16(59)]) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), (((UInt8(UInt8(244))&127)..=(UInt8(UInt8(72))&127):(34|1)) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)), ([UInt64(4), UInt64(221), UInt64(135), UInt64(71), UInt64(73), UInt64(58), UInt64(210), UInt64(148), UInt64(172), UInt64(190)] as ((Unit, Option<Bool>, Bool, String, Int8), Bool))] is Range<UInt64>), false, false]
public let var_1686687005075_1410 : (Array<Int16>, Array<Rune>) = ([Int16(Int16(UInt16(153))), Int16(-21), Int16(84), Int16(-57), Int16(Int8(73)), Int16(-83), Int16(Int8(UInt8(151))), Int16(64), Int16(-40), Int16(-19)], [r'Q', r'1', r'j', r'j', r'g', r'D', r'f', r'x', r'i', r'7'])
public let var_1686687005075_1453 : Option<Int32> = (UInt32(Int32(UInt16(61))) as Int32)
let var_1686687005075_1478 : Class_1686687005075_31 = Class_1686687005075_31()
var var_1686687005075_1519 : Float32 = Float32(Float32(107.0))
public let var_1686687005075_1582 : ((Unit, Option<Bool>, Bool, String, Int8), Bool) = (((), (((UInt8(UInt8(245))&127)..=(UInt8(UInt8(192))&127):((-119)|1)) as Bool), false, "%${var_1686687005075_712}oiJ\"F]X${var_1686687005075_712}d'", Int8(Int8(-127))), ([true, false, false, false, false, true, true, true, false, true] is Unit))
let var_1686687005075_1614 : Range<UInt32> = ((UInt32(UInt32(40))&127)..(UInt32(UInt32(UInt32(124)))&127):(((-19)|1)))
var var_1686687005075_1696 : Int8 = Int8(-23)
var var_1686687005075_1721 : Array<Int16> = [Int16(-42), Int16(0), Int16(-81), Int16(53), Int16(31), Int16(52), Int16(125), Int16(42), Int16(-43), Int16(83)]
let var_1686687005075_1751 : Int16 = Int16(-122)
let var_1686687005075_1754 : Int16 = Int16(-104)
public var var_1686687005075_1804 : Rune = r'a'
public let var_1686687005075_1980 : Range<Int64> = ((Int64((-102))&127)..=(Int64((-12))&127):((-49)|1))
public var var_1686687005075_2007 : ?UInt64 = (((UInt32(UInt32(194))&127)..(UInt32(UInt32(5))&127):(23|1)) as UInt64)
public var var_1686687005075_2012 : UInt64 = UInt64(Int32(UInt32(UInt8(UInt8(20)))))
func func_1686687005075_12(param_1686687005075_13 : Int8) : Bool { // block id: 14
    true
}


public open class Class_1686687005075_31 <: Resource {
    public init() { // block id: 33

    }
;
    let var_1686687005075_47 : UInt64 = UInt64(165);
    public static let var_1686687005075_64 : Bool = false;
    var var_1686687005075_109 : Option<UInt8> = Option<UInt8>.None;
    let var_1686687005075_225 : Unit = ();
    public let var_1686687005075_427 : ?Bool = Option<Bool>.None;
    public var var_1686687005075_534 : Range<UInt64> = ((UInt64(UInt64(35))&127)..=(UInt64(UInt64(243))&127):(39|1));
    public var var_1686687005075_558 : Array<UInt64> = [UInt64(176), UInt64(116), UInt64(245), UInt64(67), UInt64(178), UInt64(145), UInt64(43), UInt64(251), UInt64(139), UInt64(161)];
    let var_1686687005075_578 : Array<Bool> = [false, false, false, false, true, true, false, false, false, false];
    public open func func_1686687005075_416(namedParam_1686687005075_417 ! : Unit, namedParam_1686687005075_418 ! : Bool, namedParam_1686687005075_419 ! : Option<UInt8>, namedParam_1686687005075_420 ! : Option<Bool>) : (Unit, Option<Bool>, Bool, String, Int8) { // block id: 421
        let var_1686687005075_506 : (Range<UInt64>) -> Array<Rune> = func_1686687005075_431<Option<UInt8>>;
        if ((var_1686687005075_427 ?? true)) { (var_1686687005075_509|>var_1686687005075_506) } else { (((UInt64(UInt64(254))&127)..(UInt64(UInt64(211))&127):((-66)|1))|>func_1686687005075_431<Option<UInt8>>) } [3];
        var var_1686687005075_618 : Range<UInt16> = ((UInt16(UInt16(UInt8(Int8(108))))&127)..=(UInt16(UInt16(UInt16(7)))&127):((88|1)));
        func_1686687005075_526(if (false) { try { // block id: 539
            ((Int16(Int16(119))&127)..=(Int16(Int16(22))&127):((6|1)));
            if (var_1686687005075_64) { [UInt64(77), var_1686687005075_47, UInt64(237), UInt64(39), var_1686687005075_47, var_1686687005075_47, var_1686687005075_47, UInt64(97), UInt64(177), var_1686687005075_47] } else { var_1686687005075_558 } 
        } finally { // block id: 570
            if (var_1686687005075_198) { [UInt64(13), UInt64(88), UInt64(13), UInt64(97), UInt64(7), UInt64(46), UInt64(239), UInt64(112), UInt64(236), UInt64(237)] } else { [UInt64(107), UInt64(25), UInt64(235), UInt64(48), UInt64(34), UInt64(142), UInt64(162), UInt64(1), UInt64(82), UInt64(78)] } 
        } } else { try { // block id: 576
            var_1686687005075_578;
            UInt32(84);
            var_1686687005075_558
        } catch (e: Exception) { // block id: 592
            var_1686687005075_225;
            ();
            var_1686687005075_558
        } } , match ((var_1686687005075_603 ?? Option<Unit>.None)) {
            case caseVar_1686687005075_614 => 
                ();
                var_1686687005075_618;
                var_1686687005075_68
            
            case caseVar_1686687005075_629 : UInt32 => 
                if (true) { var_1686687005075_68 } else { var_1686687005075_68 } 
            
            case _ => 
                [r'y', var_1686687005075_462, r'y', var_1686687005075_462, var_1686687005075_462, var_1686687005075_462, r'B', var_1686687005075_462, r't', var_1686687005075_462];
                var_1686687005075_649;
                if (true) { Option<UInt8>.None } else { var_1686687005075_655 } 
            
        }, (-14.0));
        (var_1686687005075_670[5] ?? (Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None ?? (((), var_1686687005075_427, true, ":%\"6n9;xOj", Int8(32)), false)))[0]
    }
;
    public static prop var_1686687005075_780 : (Unit, Option<Bool>, Bool, String, Int8) { // block id: 781
        get() { // block id: 783
            ((), (((UInt16(UInt16(121))&127)..=(UInt16(UInt16(99))&127):(((-85)|1))) as Bool), (Float64(Float32(114.0)) is Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>), "z}+Yl}q\\RZ", Int8(-35))
        }

    };
    public mut prop var_1686687005075_1211 : Array<Int16> { // block id: 1212
        get() { // block id: 1214
            [r'i', r'L', r'y', r'F', r'4', r'i', r'Q', r'J', r'O', r'u'];
            [Int16(Int16(UInt8(247))), Int16(Int8(103)), Int16(Int8(Int8(-125))), Int16(39), Int16(75), Int16(UInt8(82)), Int16(-61), Int16(Int8(UInt8(211))), Int16(Int16(51)), Int16(-15)]
        }

        set(Value) { // block id: 1238
            Int8(Int8(-46));
            ()
        }

    };
    public prop var_1686687005075_1250 : Bool { // block id: 1251
        get() { // block id: 1253
            ([Int16(-48), Int16(101), Int16(-44), Int16(24), Int16(119), Int16(72), Int16(-37), Int16(-33), Int16(-105), Int16(120)], [r'B', r'k', r'z', r'z', r'U', r'T', r'l', r'z', r'7', r't']);
            ([Int16(4), Int16(-107), Int16(5), Int16(-16), Int16(113), Int16(-127), Int16(85), Int16(-17), Int16(-31), Int16(26)] is Option<Option<Unit>>)
        }

    };
    let var_1686687005075_1466 : Enum_1686687005075_1463<Option<Option<UInt8>>> = Enum_1686687005075_1463<Option<Option<UInt8>>>.defaultValue;
    protected mut prop var_1686687005075_1507 : Float32 { // block id: 1508
        get() { // block id: 1510
            ((Int16(Int16(-75))&127)..(Int16(Int16(-127))&127):((-98)|1));
            Float32(119.0);
            var_1686687005075_2062
        }

        set(Value) { // block id: 1515
            ();
            ();
            var_1686687005075_2062 = Value
        }

    };
    public open func func_1686687005075_38() : Option<UInt8> { // block id: 39
        Int32(-52);
        let var_1686687005075_44 : Class_1686687005075_31 = Class_1686687005075_31();
        (var_1686687005075_44.var_1686687005075_47) / ((match (Int8(-19)) {
            case _ => 
                ();
                var_1686687005075_55;
                var_1686687005075_47 | UInt64(202)
            
        }) | 1);
        let var_1686687005075_100 : Bool = true;
        let var_1686687005075_1460 : (Int8) -> Int32 = func_1686687005075_1377;
        func func_1686687005075_124() : Option<UInt8> { // block id: 125
            var loopTimeVar_1686687005075_1485 : Range<UInt64> = ((UInt64(UInt64(130))&127)..(UInt64(UInt64(UInt32(Int8(UInt8(209)))))&127):((116|1)));
            for (i in loopTimeVar_1686687005075_1485 where (match (var_1686687005075_1466) {
                case defaultValue => 
                    Int8(-23)
                
                case _ => 
                    var_1686687005075_442
                
            }|>(var_1686687005075_1460~>func_1686687005075_129<Class_1686687005075_31, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>>))) {
                var_1686687005075_1478.var_1686687005075_225;
                (Option<Unit>.Some(var_1686687005075_225) ?? var_1686687005075_225)
            };
            match (Int8(53)) {
                case _ => 
                    Option<Option<Bool>>.Some(var_1686687005075_1261);
                    var_1686687005075_225;
                    Option<Int32>.Some(var_1686687005075_729)
                
            };
            let var_1686687005075_1533 : Range<Int64> = ((Int64((-42))&127)..(Int64(58)&127):((-88)|1));
            if (try { // block id: 1504
                var_1686687005075_1507 + var_1686687005075_1519;
                false
            } finally { // block id: 1523
                var_1686687005075_64 && var_1686687005075_198
            }) { try { // block id: 1528
                Option<UInt8>.None
            } catch (e: Exception) { // block id: 1530
                ();
                var_1686687005075_1533;
                var_1686687005075_655
            } finally { // block id: 1536
                var_1686687005075_442 >> ((var_1686687005075_442) & 7);
                if (var_1686687005075_1250) { Option<UInt8>.None } else { var_1686687005075_68 } 
            } } else { Option<UInt8>.None } 
        }
;
        match (if (var_1686687005075_64) { match (var_1686687005075_68) {
            case _ : Int32 => 
                var_1686687005075_75;
                var_1686687005075_68
            
            case caseVar_1686687005075_80 : Int64 => 
                var_1686687005075_84 >>= ((72) & 7);
                var var_1686687005075_93 : UInt8 = UInt8(231);
                if (false) { var_1686687005075_68 } else { Option<UInt8>.Some(var_1686687005075_93) } 
            
            case _ : Bool => 
                if (var_1686687005075_100) { var_1686687005075_68 } else { var_1686687005075_68 } 
            
            case caseVar_1686687005075_106 => 
                var_1686687005075_109
            
            case _ => 
                UInt8(190) | var_1686687005075_116;
                36.0;
                let var_1686687005075_121 : UInt8 = UInt8(94);
                Option<UInt8>.Some(var_1686687005075_121)
            
        } } else { func_1686687005075_124() } ) {
            case _ => 
                var_1686687005075_109
            
            case _ => 
                Option<Option<Bool>>.None;
                var_1686687005075_655
            
        }
    }
;
    public prop var_1686687005075_1599 : (Option<Range<Int16>>, Range<Int64>) { // block id: 1600
        get() { // block id: 1602
            ((((Int32(Int32(-7))&127)..=(Int32(Int32(-37))&127):(34|1)) as Range<Int16>), ((Int64(29)&127)..=(Int64((-87))&127):((-72)|1)))
        }

    };
    public static let var_1686687005075_1985 : Float32 = Float32(-33.0);
    mut prop var_1686687005075_2062 : Float32 { // block id: 2063
        get() { // block id: 2065
            Float32(Float32(Float32(Float32(78.0))))
        }

        set(Value) { // block id: 2072
            ()
        }

    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}



public func func_1686687005075_228(param_1686687005075_229 : Float32) : Unit { // block id: 230

}

public func func_1686687005075_145(param_1686687005075_146 : Int16) : Bool { // block id: 147
    let var_1686687005075_162 : (Unit, Option<Bool>, Bool, String, Int8) = ((), (UInt8(UInt8(126)) as Bool), false, ###"B a{3A4ZWVS"###, Int8(Int8(-51)));
    (var_1686687005075_154 ?? match (var_1686687005075_162[1]) {
        case caseVar_1686687005075_175 => 
            var_1686687005075_75;
            62;
            ()
        
        case _ => 
            ();
            ();
            var var_1686687005075_186 : Bool = (Float64(Float64(16.0)) is Class_1686687005075_31);
            let var_1686687005075_192 : Bool = true;
            var_1686687005075_186 &&= var_1686687005075_192
        
    });
    var loopTimeVar_1686687005075_239 : Int64 = 0;
    do {
        loopTimeVar_1686687005075_239++;
        var var_1686687005075_222 : Class_1686687005075_31 = Class_1686687005075_31();
        var_1686687005075_222.var_1686687005075_225;
        let var_1686687005075_232 : (Float32) -> Unit = { lambdaParameter_1686687005075_235 : Float32 =>  };
        Float32(-58.0)|>var_1686687005075_232
    } while ((try { // block id: 196
        var_1686687005075_198
    } catch (e: Exception) { // block id: 211
        ();
        var_1686687005075_214;
        false
    } finally { // block id: 217
        false
    }) && loopTimeVar_1686687005075_239 < 100 ) ;
    var var_1686687005075_255 : UInt64 = UInt64(Int32(Int32(UInt32(Int8(-128)))));
    let var_1686687005075_262 : UInt64 = UInt64(UInt64(Int32(27)));
    let var_1686687005075_279 : Unit = ();
    let var_1686687005075_285 : Class_1686687005075_31 = Class_1686687005075_31();
    let var_1686687005075_288 : Array<Bool> = [true, (UInt8(Int8(UInt8(9))) is Float32), false, true, ((-26) is Bool), (((Int64((-86))&127)..(Int64(55)&127):(77|1)) is Range<Int64>), ((((UInt8(UInt8(209))&127)..=(UInt8(UInt8(155))&127):(54|1)) as Bool) is Int8), ((-32) is Range<Int16>), false, (Int8(104) is Int32)];
    let var_1686687005075_357 : Bool = (((UInt16(UInt16(Int8(72)))&127)..(UInt16(UInt16(250))&127):((Int64(UInt8(Int8(-59)))|1))) is (Float32) -> Unit);
    !match ([var_1686687005075_255, var_1686687005075_262, UInt64(211), UInt64(240), var_1686687005075_255, var_1686687005075_262, UInt64(16), var_1686687005075_262, UInt64(177), UInt64(202)]) {
        case caseVar_1686687005075_276 : Option<Bool> => 
            var_1686687005075_279;
            if (false) { Class_1686687005075_31() } else { var_1686687005075_285 } ;
            var_1686687005075_288
        
        case caseVar_1686687005075_311 => 
            var var_1686687005075_315 : Bool = (((Int8(Int8(88))&127)..(Int8(Int8(-105))&127):((-91)|1)) is String);
            var var_1686687005075_325 : Bool = true;
            [var_1686687005075_315, var_1686687005075_198, false, false, var_1686687005075_315, true, false, var_1686687005075_325, var_1686687005075_315, var_1686687005075_325]
        
        case caseVar_1686687005075_331 : Int16 => 
            var_1686687005075_334;
            if (var_1686687005075_198) { [true, var_1686687005075_198, true, var_1686687005075_198, true, var_1686687005075_352, true, var_1686687005075_357, false, var_1686687005075_352] } else { var_1686687005075_288 } 
        
        case _ => 
            ((UInt64(UInt64(8))&127)..=(UInt64(var_1686687005075_255)&127):((var_1686687005075_55|1)));
            [true, true, true, true, true, true, false, true, true, true]
        
    }[1]
}

func func_1686687005075_431<T0>(param_1686687005075_432 : Range<UInt64>) : Array<Rune> { // block id: 433
    var_1686687005075_75;
    let var_1686687005075_445 : Int8 = Int8(-41);
    try { // block id: 436
        if (true) { // block id: 439
            var_1686687005075_442 <<= ((var_1686687005075_445) & 7);
            var_1686687005075_75;
            [r'J', r'T', r'e', r'o', r'X', r'R', r'L', r'w', r'K', r'I']
        } else if (var_1686687005075_198) { // block id: 450
            ();
            [r'B', r'b', r'y', r'4', r'6', r'W', r'K', r'Y', r'R', r'w']
        } else { // block id: 453
            if (var_1686687005075_352) { [r'Y', r'w', r'l', r'z', r'U', r'l', r'o', r'z', r'm', r'Z'] } else { [r'M', r'P', r'k', var_1686687005075_462, var_1686687005075_462, r'l', var_1686687005075_462, var_1686687005075_462, r'7', var_1686687005075_462] } 
        }
    } finally { // block id: 470
        var loopTimeVar_1686687005075_476 : Int64 = 0;
        while ((true) && loopTimeVar_1686687005075_476 < 100 ) {
            loopTimeVar_1686687005075_476++;
            var_1686687005075_75
        };
        func_1686687005075_228(Float32(-107.0));
        let var_1686687005075_483 : Rune = r'k';
        if (true) { [var_1686687005075_483, r'4', var_1686687005075_462, r'x', var_1686687005075_462, var_1686687005075_483, r'6', var_1686687005075_483, var_1686687005075_462, r'G'] } else { [r'3', var_1686687005075_462, var_1686687005075_483, var_1686687005075_462, r'Z', r'G', var_1686687005075_483, r'o', r'A', var_1686687005075_483] } 
    }
}

public func func_1686687005075_526(param_1686687005075_527 : Array<UInt64>, param_1686687005075_528 : Option<UInt8>, param_1686687005075_529 : Float64) : Range<UInt64> { // block id: 530
    var_1686687005075_413.var_1686687005075_534
}





public func func_1686687005075_408(param_1686687005075_409 : (Unit, Option<Bool>, Bool, String, Int8)) : (Unit, Option<Bool>, Bool, String, Int8) { // block id: 410
    let var_1686687005075_769 : ?Bool = (((Float32(59.0) as Option<Bool>) as Unit) as Bool);
    var_1686687005075_413.func_1686687005075_416(namedParam_1686687005075_417 : try (resource = Class_1686687005075_31()) { // block id: 705
        (((), Option<Bool>.None, true, var_1686687005075_712, var_1686687005075_442), false);
        var_1686687005075_75;
        var_1686687005075_383 %= ((Int16(-89)) | 1)
    } finally { // block id: 720
        var_1686687005075_352 ||= var_1686687005075_352;
        UInt64(183) & UInt64(39);
        var_1686687005075_729 -= Int32(-105)
    }, namedParam_1686687005075_418 : try { // block id: 733
        true
    } catch (_) { // block id: 735
        106.0 + var_1686687005075_214;
        var_1686687005075_198
    } finally { // block id: 740
        var_1686687005075_75;
        var_1686687005075_352
    }, namedParam_1686687005075_419 : (var_1686687005075_749 ?? var_1686687005075_655), namedParam_1686687005075_420 : (var_1686687005075_764 ?? var_1686687005075_769))
}

public func func_1686687005075_378(param_1686687005075_379 : Int8) : Int16 { // block id: 380
    var_1686687005075_383 <<= ((try { // block id: 386
        Int16(-78) | var_1686687005075_383
    } finally { // block id: 390
        ((UInt16(UInt16(2))&127)..=(UInt16(var_1686687005075_394)&127):((118|1)));
        var_1686687005075_402 ^ var_1686687005075_402
    }) & 7);
    let var_1686687005075_775 : ((Unit, Option<Bool>, Bool, String, Int8)) -> (Unit, Option<Bool>, Bool, String, Int8) = func_1686687005075_408;
    let var_1686687005075_831 : Range<Int32> = ((Int32(Int32(8))&127)..(Int32(Int32(-93))&127):((-22)|1));
    var var_1686687005075_847 : Range<Int64> = ((Int64((-123))&127)..=(Int64((-76))&127):(32|1));
    match ((Class_1686687005075_31.var_1686687005075_780|>var_1686687005075_775)) {
        case _ => 
            if (true) { ((Int16(Int16(-12))&127)..=(Int16(Int16(8))&127):((var_1686687005075_55|1))) } else { ((Int16(Int16(-37))&127)..(Int16(Int16(120))&127):(55|1)) } ;
            ((Int64(98)&127)..(Int64(18)&127):(120|1))
        
        case _ : Option<UInt8> => 
            r'u';
            var var_1686687005075_812 : Range<UInt32> = ((UInt32(UInt32(100))&127)..(UInt32(UInt32(149))&127):(75|1));
            var_1686687005075_812;
            var var_1686687005075_815 : Range<Int64> = ((Int64((-121))&127)..(Int64(21)&127):(62|1));
            var_1686687005075_815
        
        case caseVar_1686687005075_819 : Array<Bool> => 
            var var_1686687005075_822 : UInt32 = UInt32(21);
            var_1686687005075_822;
            ((Int64(95)&127)..=(Int64((-56))&127):(41|1))
        
        case (caseVar_1686687005075_827 : String,_,_ : Int32,caseVar_1686687005075_828 : Int16,_ : Int16) => 
            var_1686687005075_831;
            var var_1686687005075_836 : Range<Int64> = ((Int64(13)&127)..=(Int64(80)&127):((-61)|1));
            if (false) { var_1686687005075_836 } else { ((Int64(43)&127)..=(Int64((-35))&127):((-93)|1)) } 
        
        case _ => 
            ();
            ();
            if (var_1686687005075_198) { ((Int64((-115))&127)..(Int64(19)&127):((-6)|1)) } else { var_1686687005075_847 } 
        
    };
    var var_1686687005075_855 : Array<Int16> = [Int16(-27), Int16(93), Int16(-11), Int16(125), Int16(57), Int16(121), Int16(102), Int16(52), Int16(15), Int16(-71)];
    (var_1686687005075_855, var_1686687005075_649)[0][9]
}


public func func_1686687005075_129<T0, T1>(param_1686687005075_130 : Int32) : Bool { // block id: 131
    let var_1686687005075_947 : UInt32 = UInt32(Int8(Int8(-103)));
    let var_1686687005075_980 : ?Range<Int16> = Option<Range<Int16>>.None;
    let var_1686687005075_1141 : ?Bool = (("""
M?^L(
liZO2
""" as Bool) as Bool);
    let var_1686687005075_1195 : ?Option<UInt8> = Option<Option<UInt8>>.Some(Option<UInt8>.Some(UInt8(UInt8(104))));
    func func_1686687005075_139(param_1686687005075_140 : UInt16) : Option<Bool> { // block id: 141
        let var_1686687005075_909 : Float32 = Float32(-15.0);
        if ((var_1686687005075_864[2]|>(func_1686687005075_378~>func_1686687005075_145))) { // block id: 895
            match (var_1686687005075_764) {
                case caseVar_1686687005075_900 : UInt32 => 
                    UInt32(79)
                
                case _ => 
                    Float32(93.0) - var_1686687005075_909;
                    var_1686687005075_442 |= Int8(-19);
                    UInt32(195) >> ((UInt32(86)) & 7)
                
                case _ => 
                    UInt32(1)
                
            }
        } else if (var_1686687005075_352) { // block id: 921
            if (true) { // block id: 924
                if (var_1686687005075_352) { var_1686687005075_413 } else { var_1686687005075_413 } ;
                UInt16(79)
            } else { // block id: 930
                var_1686687005075_394 % ((UInt16(75)) | 1)
            };
            var loopTimeVar_1686687005075_938 : Int64 = 0;
            while ((var_1686687005075_198) && loopTimeVar_1686687005075_938 < 100 ) {
                loopTimeVar_1686687005075_938++;

            };
            var var_1686687005075_964 : UInt32 = UInt32(Int8(UInt8(217)));
            if (var_1686687005075_352) { // block id: 941
                var_1686687005075_729 * Int32(-32);
                var_1686687005075_947 + UInt32(162)
            } else if (false) { // block id: 953
                ((UInt32(UInt32(144))&127)..=(UInt32(var_1686687005075_947)&127):((61|1)));
                UInt32(182) | UInt32(193)
            } else { // block id: 961
                var_1686687005075_964 |= UInt32(51);
                Class_1686687005075_31();
                var_1686687005075_964 ^ var_1686687005075_964
            }
        } else { // block id: 973
            (var_1686687005075_980 ?? ((Int16(Int16(-105))&127)..(Int16(Int16(-86))&127):(33|1)));
            var var_1686687005075_987 : (Array<Int16>, Array<Rune>) = ([Int16(-128), Int16(-50), Int16(-58), Int16(-71), Int16(-72), Int16(-54), Int16(-4), Int16(-36), Int16(-121), Int16(-102)], [r'B', r'3', r'N', r'3', r'r', r'2', r'3', r'z', r'F', r'2']);
            (var_1686687005075_987, var_1686687005075_334, (var_1686687005075_214, var_1686687005075_462, var_1686687005075_442, var_1686687005075_947, [Int16(-31), Int16(-83), Int16(-53), Int16(92), Int16(-9), Int16(-55), Int16(38), Int16(-76), Int16(13), Int16(-78)]), ([Int16(-126), Int16(-7), Int16(49), Int16(-31), Int16(-119), Int16(75), Int16(-120), Int16(-16), Int16(-94), Int16(49)], [r'3', r'z', r'd', r'P', r'A', r'P', r'M', r'F', r'U', r'h']), r'2')[2];
            try { // block id: 1004
                var_1686687005075_947
            } finally { // block id: 1006
                -var_1686687005075_947
            }
        };
        let var_1686687005075_1056 : Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)> = Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None;
        let var_1686687005075_1131 : UInt16 = UInt16(122);
        if (var_1686687005075_413.var_1686687005075_578[6]) { // block id: 1015
            match (UInt32(212)) {
                case _ : Unit => 
                    var_1686687005075_729++;
                    ()
                
                case caseVar_1686687005075_1026 => 
                    var_1686687005075_947;
                    var_1686687005075_75;
                    var_1686687005075_75
                
                case caseVar_1686687005075_1033 => 
                    ()
                
                case _ => 
                    var_1686687005075_980;
                    var_1686687005075_75
                
            };
            let var_1686687005075_1092 : ((Unit, Option<Bool>, Bool, String, Int8), Bool) = (((), Option<Bool>.None, (UInt32(Int32(108)) is Range<Int64>), " #*5zH%f6M", Int8(-75)), (((((), Option<Bool>.None, true, "\\$<&8#%_cf", Int8(42)), false) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)) is Float32));
            var var_1686687005075_1162 : UInt32 = UInt32(UInt16(12));
            match (Option<UInt8>.None) {
                case caseVar_1686687005075_1044 => 
                    var var_1686687005075_1048 : UInt32 = UInt32(Int16(Int16(UInt16(80))));
                    var_1686687005075_1048 |= var_1686687005075_1048;
                    [var_1686687005075_1056, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.Some((var_1686687005075_1063, true)), Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.Some(var_1686687005075_1092), var_1686687005075_1056, var_1686687005075_1056, var_1686687005075_1056, Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.Some((var_1686687005075_1063, var_1686687005075_352)), var_1686687005075_1056];
                    var_1686687005075_394 / ((var_1686687005075_394) | 1)
                
                case caseVar_1686687005075_1125 : Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)> => 
                    var_1686687005075_75;
                    var_1686687005075_75;
                    var_1686687005075_1131 | UInt16(5)
                
                case _ => 
                    ();
                    if (true) { var_1686687005075_1141 } else { Option<Bool>.None } ;
                    var_1686687005075_394
                
                case _ : (Unit, Option<Bool>, Bool, String, Int8) => 
                    var_1686687005075_649;
                    var_1686687005075_75;
                    var_1686687005075_394 % ((var_1686687005075_1131) | 1)
                
                case _ => 
                    var_1686687005075_116 &= var_1686687005075_116;
                    var_1686687005075_1162 /= ((UInt32(215)) | 1);
                    UInt16(172)
                
            }
        } else if (true || match (###"osab>2V,uy"###) {
            case "-5p]Bp9fib" => 
                ();
                var_1686687005075_116;
                var_1686687005075_352 && var_1686687005075_198
            
            case caseVar_1686687005075_1181 : Rune => 
                UInt32(208) > var_1686687005075_947
            
            case _ => 
                Option<Range<Int16>>.Some(((Int16(Int16(-52))&127)..(Int16(Int16(-114))&127):((29|1))));
                var_1686687005075_1195;
                Int32(125) >= var_1686687005075_729
            
            case _ => 
                var_1686687005075_352
            
        }) { // block id: 1206
            var_1686687005075_75;
            var_1686687005075_413.var_1686687005075_1211;
            UInt16(Int16(-28))
        } else { // block id: 1244
            var_1686687005075_1247.var_1686687005075_1250;
            var_1686687005075_1131
        };
        var_1686687005075_1261
    }
;
    if ((func_1686687005075_139(var_1686687005075_394) ?? var_1686687005075_1266[1])) { // block id: 1344
        (Option<Range<Int16>>.Some(((Int16(Int16(108))&127)..=(Int16(Int16(-42))&127):(7|1))), ((Int64(99)&127)..(Int64((-40))&127):(6|1)))[0];
        false
    } else { // block id: 1353
        let var_1686687005075_1355 : (Option<Range<Int16>>, Range<Int64>) = (([Int16(-11), Int16(-94), Int16(-104), Int16(35), Int16(-88), Int16(-74), Int16(46), Int16(-58), Int16(-59), Int16(58)] as Range<Int16>), ((Int64(Int64(Int32(3)))&127)..=(Int64(119)&127):((Int64(UInt32(51))|1))));
        var_1686687005075_1355;
        let var_1686687005075_1368 : (Class_1686687005075_31, Float32) = (Class_1686687005075_31(), Float32(43.0));
        var_1686687005075_1368[0];
        var_1686687005075_1247.var_1686687005075_1250
    }
}


func func_1686687005075_1377(param_1686687005075_1378 : Int8) : Int32 { // block id: 1379
    try { // block id: 1381
        let var_1686687005075_1396 : Array<Int16> = [Int16(-45), Int16(75), Int16(125), Int16(-74), Int16(-3), Int16(40), Int16(59), Int16(-90), Int16(51), Int16(-13)];
        match (r'T') {
            case r'x' => 
                ()
            
            case r'9' => 
                ()
            
            case r'H' | r'Q' => 
                var_1686687005075_1396;
                if (false) { r'z' } else { var_1686687005075_462 } ;
                ()
            
            case r'r' | r'u' | r'N' => 
                ()
            
            case _ => 
                var_1686687005075_1410;
                ()
            
        };
        [Int32(-15), var_1686687005075_729, Int32(81), Int32(69), var_1686687005075_729, Int32(-93), Int32(73), Int32(-106), Int32(70), Int32(57)][0]
    } catch (e: Exception) { // block id: 1444
        UInt32(UInt32(108));
        (var_1686687005075_1453 ?? var_1686687005075_729)
    }
}

public enum Enum_1686687005075_1463<T0> {
    defaultValue |
    enumValue_1686687005075_1892((Range<UInt64>) -> Array<Rune>, Option<Option<UInt8>>, Option<Bool>)
}

public func func_1686687005075_526(param_1686687005075_23 : Int32) : UInt16 { // block id: 24
    var var_1686687005075_35 : Class_1686687005075_31 = Class_1686687005075_31();
    (var_1686687005075_35.func_1686687005075_38() ?? var_1686687005075_1478.func_1686687005075_1556(namedParam_1686687005075_1557 : Option<Option<Unit>>.Some(Option<Unit>.None), optionalParam_1686687005075_1558 : var_1686687005075_1582));
    var var_1686687005075_1713 : (Class_1686687005075_31, Float32) = (Class_1686687005075_31(), Float32(Float32(32.0)));
    var var_1686687005075_1784 : Rune = r'E';
    (match ((Option<Int32>.None ?? var_1686687005075_729)) {
        case 8 | 89 | -69 | -44 => 
            var_1686687005075_1713;
            if (true) { var_1686687005075_1721 } else { [Int16(124), var_1686687005075_383, Int16(-124), var_1686687005075_383, var_1686687005075_402, Int16(-48), Int16(-45), var_1686687005075_402, Int16(-68), Int16(60)] } 
        
        case caseVar_1686687005075_1736 => 
            [Int16(75), Int16(-91), Int16(-25), Int16(107), Int16(75), Int16(90), Int16(64), Int16(102), Int16(79), Int16(42)]
        
        case _ => 
            [Int16(-13), var_1686687005075_383, Int16(-71), Int16(0), Int16(-5), Int16(35), Int16(-36), var_1686687005075_1751, var_1686687005075_1754, var_1686687005075_1754]
        
        case _ => 
            var_1686687005075_394;
            [Int16(-125), Int16(-27), Int16(-32), Int16(-84), Int16(-115), Int16(40), Int16(-28), Int16(77), Int16(31), Int16(38)]
        
    }, (Option<((Array<Int16>, Array<Rune>), (Int8, UInt8), Array<Rune>, UInt16, Int8, UInt8)>.None ?? (([var_1686687005075_402, Int16(-34), var_1686687005075_383, Int16(-116), var_1686687005075_1751, Int16(-26), var_1686687005075_1751, Int16(96), var_1686687005075_1751, var_1686687005075_1751], [r'T', var_1686687005075_1784, var_1686687005075_1784, r'p', var_1686687005075_462, var_1686687005075_1784, r'u', var_1686687005075_462, r'k', r'W']), (Int8(-92), UInt8(189)), [r'W', r'r', var_1686687005075_462, r'4', var_1686687005075_1784, var_1686687005075_1804, var_1686687005075_1804, r'G', r'3', r'Z'], UInt16(40), var_1686687005075_442, UInt8(106)))[2]);
    var_1686687005075_1478.func_1686687005075_1817(namedParam_1686687005075_1818 : (Option<Option<Bool>>.Some(var_1686687005075_1261) as Unit))
}





public func func_1686687005075_7<T0>(param_1686687005075_8 : UInt64) : UInt64 { // block id: 9
    var var_1686687005075_1867 : UInt64 = UInt64(UInt8(Int8(UInt8(41))));
    match ((Int8(6)|>{ lambdaParameter_1686687005075_18 : Int8 => func_1686687005075_526(Int32(-123)) < UInt16(166) })) {
        case caseVar_1686687005075_1836 => 
            ()
        
        case caseVar_1686687005075_1841 : Rune => 
            var var_1686687005075_1845 : Bool = (([Int16(108), Int16(Int8(-1)), Int16(17), Int16(Int8(93)), Int16(UInt8(190)), Int16(-84), Int16(6), Int16(125), Int16(80), Int16(23)], [r'V', r'Q', r'n', r'W', r'G', r'A', r'a', r'Y', r'E', r'E']) is Array<Rune>);
            var_1686687005075_1845 &&= false;
            var_1686687005075_75;
            var_1686687005075_1867 ^= var_1686687005075_1867
        
        case _ => 
            var_1686687005075_749;
            var_1686687005075_75
        
    };
    Float32((var_1686687005075_413.func_1686687005075_1881(((UInt64(var_1686687005075_1867)&127)..=(UInt64(var_1686687005075_1867)&127):(((-40)|1))))));
    (match ([UInt64(40), UInt64(97), UInt64(231), UInt64(219), UInt64(38), UInt64(205), UInt64(173), UInt64(182), UInt64(93), UInt64(123)][0]) {
        case 232 => 
            if (true) { var_1686687005075_2007 } else { Option<UInt64>.Some(var_1686687005075_2012) } 
        
        case _ => 
            var_1686687005075_1867 ^= var_1686687005075_1867;
            if (var_1686687005075_198) { var_1686687005075_712 } else { var_1686687005075_712 } ;
            var_1686687005075_2007
        
    } ?? (Option<UInt64>.Some(UInt64(15)) ?? UInt64(171)) - if (var_1686687005075_198) { // block id: 2039
        var var_1686687005075_2042 : UInt16 = UInt16(Int16(Int8(17)));
        var_1686687005075_2042 |= var_1686687005075_394;
        let var_1686687005075_2048 : Int64 = Int64(Int32(Int8(85)));
        var_1686687005075_2048;
        UInt64(101)
    } else { // block id: 2053
        var_1686687005075_75;
        UInt64(177)
    })
}

main(): Int64 {
    try {
        var var_1686687005075_2057 : (UInt64) -> UInt64 = func_1686687005075_7<Bool>;
        Int64((UInt64(208)|>var_1686687005075_2057))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1686687005075_55*var_1686687005075_55), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_84*var_1686687005075_84), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_116*var_1686687005075_116), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_383*var_1686687005075_383), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_394*var_1686687005075_394), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_402*var_1686687005075_402), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_442*var_1686687005075_442), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_729*var_1686687005075_729), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_1696*var_1686687005075_1696), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_1751*var_1686687005075_1751), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_1754*var_1686687005075_1754), 64)
        crccheck.updateBuffer(UInt64(var_1686687005075_2012*var_1686687005075_2012), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0> Enum_1686687005075_1463<T0> {

}

extend Class_1686687005075_31 {
    func func_1686687005075_1881(param_1686687005075_1882 : Range<UInt64>) : Float32 { // block id: 1883
        var var_1686687005075_1886 : ?Range<Int16> = (([(Enum_1686687005075_1463<Option<Option<UInt8>>>.enumValue_1686687005075_1892(func_1686687005075_431<Option<UInt8>>, Option<Option<UInt8>>.Some(Option<UInt8>.None), Option<Bool>.Some(false)) is Option<UInt8>), (((UInt8(UInt8(20))&127)..=(UInt8(UInt8(193))&127):(((-1)|1))) is UInt64), true, false, (UInt16(177) is String), (Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None is UInt8), false, (Option<Unit>.Some(()) is ((Array<Int16>, Array<Rune>), (Int8, UInt8), Array<Rune>, UInt16, Int8, UInt8)), true, true] as Range<Int16>) as Range<Int16>);
        (var_1686687005075_1886 as Range<Int16>);
        try { // block id: 1921
            try (resource = Class_1686687005075_31()) { // block id: 1923
                [var_1686687005075_47, UInt64(35), UInt64(150), UInt64(208), var_1686687005075_47, UInt64(54), UInt64(125), UInt64(173), UInt64(145), UInt64(149)];
                ()
            } catch (_) { // block id: 1936
                var_1686687005075_75;
                ()
            };
            [var_1686687005075_1466, var_1686687005075_1466, var_1686687005075_1466, var_1686687005075_1466, var_1686687005075_1466, Enum_1686687005075_1463<Option<Option<UInt8>>>.defaultValue, var_1686687005075_1466, Enum_1686687005075_1463<Option<Option<UInt8>>>.defaultValue, Enum_1686687005075_1463<Option<Option<UInt8>>>.defaultValue, Enum_1686687005075_1463<Option<Option<UInt8>>>.defaultValue][6];
            (Option<(Option<Range<Int16>>, Range<Int64>)>.Some((Option<Range<Int16>>.Some(((Int16(Int16(78))&127)..=(Int16(Int16(34))&127):(50|1))), ((Int64(10)&127)..(Int64((-90))&127):(116|1)))) ?? (var_1686687005075_1886, ((Int64(var_1686687005075_84)&127)..(Int64(47)&127):((47|1)))))
        } catch (_) { // block id: 1969
            (Option<(Option<Range<Int16>>, Range<Int64>)>.None ?? (Option<Range<Int16>>.Some(((Int16(Int16(-43))&127)..(Int16(Int16(-55))&127):(122|1))), var_1686687005075_1980))
        };
        Class_1686687005075_31.var_1686687005075_1985
    }
;
    public func func_1686687005075_1817(namedParam_1686687005075_1818 ! : Option<Unit>, optionalParam_1686687005075_1819 ! : Range<Int32> = ((Int32(Int32(-23))&127)..(Int32(Int32(96))&127):(91|1))) : UInt16 { // block id: 1821
        var_1686687005075_352 &&= var_1686687005075_1478.var_1686687005075_1250;
        var_1686687005075_394
    }
;
    func func_1686687005075_1556(namedParam_1686687005075_1557 ! : Option<Option<Unit>>, optionalParam_1686687005075_1558 ! : ((Unit, Option<Bool>, Bool, String, Int8), Bool) = (((), Option<Bool>.Some((((Int8(Int8(5))&127)..(Int8(Int8(-52))&127):((71|1))) is Enum_1686687005075_1463<Option<Option<UInt8>>>)), ((((UInt32(UInt32(247))&127)..(UInt32(UInt32(196))&127):(4|1)) as ((Unit, Option<Bool>, Bool, String, Int8), Bool)) is (Int8) -> Bool), "]TaqJR lm]", Int8(Int8(UInt8(19)))), true)) : UInt8 { // block id: 1576
        var loopTimeVar_1686687005075_1624 : Int64 = 0;
        while (((Option<((Unit, Option<Bool>, Bool, String, Int8), Bool)>.None ?? var_1686687005075_1582)[1]) && loopTimeVar_1686687005075_1624 < 100 ) {
            loopTimeVar_1686687005075_1624++;
            var_1686687005075_413.var_1686687005075_1599;
            var loopTimeVar_1686687005075_1622 : Int64 = 0;
            do {
                loopTimeVar_1686687005075_1622++;
                if (false) { ((UInt32(UInt32(2))&127)..=(UInt32(UInt32(187))&127):((-11)|1)) } else { var_1686687005075_1614 } ;
                ()
            } while ((var_1686687005075_64) && loopTimeVar_1686687005075_1622 < 100 ) 
        };
        var var_1686687005075_1634 : ((Array<Int16>, Array<Rune>), (Int8, UInt8), Array<Rune>, UInt16, Int8, UInt8) = (([Int16(-9), Int16(113), Int16(-123), Int16(-29), Int16(62), Int16(-65), Int16(111), Int16(-78), Int16(59), Int16(71)], [r'3', r'p', r'6', r'w', r'N', r'H', r'Q', r'p', r'x', r'R']), (Int8(-67), UInt8(58)), [r'H', r'T', r'J', r'o', r'1', r'g', r'W', r'o', r'S', r'i'], UInt16(Int8(UInt8(8))), Int8(103), UInt8(40));
        let var_1686687005075_1687 : Int16 = Int16(107);
        try { // block id: 1630
            ();
            ();
            var_1686687005075_1634
        } finally { // block id: 1668
            let var_1686687005075_1675 : Int16 = Int16(Int16(Int8(Int8(116))));
            (([Int16(109), var_1686687005075_402, var_1686687005075_1675, Int16(99), Int16(22), Int16(-91), Int16(63), var_1686687005075_383, Int16(-90), var_1686687005075_1687], [r'0', r'Z', r'S', r'H', r'a', r'D', r'Z', r'b', r'G', r'G']), (Int8(-64), var_1686687005075_116), [r'P', r'x', r'f', r'8', r'd', r'5', r'C', r'u', r'J', r'8'], var_1686687005075_394, var_1686687005075_1696, var_1686687005075_116)
        }[1][1]
    }

}

