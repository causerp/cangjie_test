/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1667647196791_27 : Class_1667647196791_23 = Class_1667647196791_23()
let var_1667647196791_64 : Int64 = Int64(Int64(UInt16(UInt16(148))))
public let var_1667647196791_70 : Unit = ()
var var_1667647196791_131 : Int32 = Int32(UInt32(214))
var var_1667647196791_190 : Array<Int8> = [Int8(-111), Int8(-85), Int8(-56), Int8(113), Int8(-111), Int8(-94), Int8(90), Int8(115), Int8(22), Int8(-75)]
public var var_1667647196791_199 : Option<Int8> = (((UInt32(109)&127)..=(UInt32(84)&127):((-88)|1)) as Int8)
public var var_1667647196791_208 : UInt64 = UInt64(106)
var var_1667647196791_225 : Bool = (((UInt16(251)&127)..=(UInt16(254)&127):(111|1)) is Range<Int16>)
public var var_1667647196791_312 : Int64 = 103
public let var_1667647196791_315 : Array<UInt64> = [UInt64(175), UInt64(145), UInt64(247), UInt64(117), UInt64(70), UInt64(15), UInt64(244), UInt64(37), UInt64(190), UInt64(194)]
public var var_1667647196791_324 : UInt32 = UInt32(94)
var var_1667647196791_416 : (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16) = (((UInt64(44)&127)..=(UInt64(180)&127):((Int64(Int8(3))|1))), Int8(31), ((UInt64(UInt8(232))&127)..(UInt64(247)&127):(((-75)|1))), (UInt32(Int16(125)), ((UInt16(Int16(-3))&127)..=(UInt16(UInt8(5))&127):((Int64(Int32(-89))|1))), (), UInt8(245)), UInt8(Int8(27)), [UInt64(148), UInt64(Int16(59)), UInt64(UInt16(UInt16(202))), UInt64(Int16(UInt16(21))), UInt64(UInt8(Int8(-99))), UInt64(131), UInt64(188), UInt64(Int16(-26)), UInt64(200), UInt64(Int32(-65))], Int16(110))
public var var_1667647196791_535 : Int16 = Int16(Int8(124))
var var_1667647196791_580 : Unit = ()
public var var_1667647196791_668 : Struct_1667647196791_482 = Struct_1667647196791_482()
public var var_1667647196791_677 : String = """
2irq)
Q7zHE
"""
public var var_1667647196791_704 : UInt16 = UInt16(UInt8(10))
let var_1667647196791_776 : Range<UInt16> = ((UInt16(95)&127)..(UInt16(19)&127):(84|1))
public var var_1667647196791_821 : Array<Range<UInt8>> = [((UInt8(145)&127)..(UInt8(250)&127):(1|1)), ((UInt8(219)&127)..(UInt8(177)&127):((-10)|1)), ((UInt8(207)&127)..(UInt8(58)&127):(74|1)), ((UInt8(207)&127)..(UInt8(244)&127):(85|1)), ((UInt8(133)&127)..=(UInt8(63)&127):((-63)|1)), ((UInt8(12)&127)..=(UInt8(76)&127):((-7)|1)), ((UInt8(114)&127)..=(UInt8(143)&127):((-124)|1)), ((UInt8(84)&127)..(UInt8(37)&127):(92|1)), ((UInt8(60)&127)..=(UInt8(121)&127):(105|1)), ((UInt8(150)&127)..=(UInt8(7)&127):((-122)|1))]
public let var_1667647196791_885 : (Bool, Range<UInt64>, Range<UInt64>, UInt64, Range<UInt8>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16)) = (((UInt8(Int8(39)), Int32(47), ((UInt16(235)&127)..=(UInt16(152)&127):((-84)|1))) is Range<Int64>), ((UInt64(181)&127)..=(UInt64(104)&127):(84|1)), ((UInt64(UInt16(57))&127)..=(UInt64(UInt64(Int16(-84)))&127):((26|1))), UInt64(Int16(-4)), ((UInt8(79)&127)..(UInt8(UInt8(69))&127):((Int64(UInt64(166))|1))), (((UInt64(Int16(121))&127)..(UInt64(68)&127):((Int64(UInt64(23))|1))), Int8(UInt8(Int8(58))), ((UInt64(205)&127)..=(UInt64(178)&127):(111|1)), (UInt32(UInt32(74)), ((UInt16(3)&127)..=(UInt16(160)&127):(((-125)|1))), (), UInt8(UInt8(238))), UInt8(Int8(UInt8(1))), [UInt64(29), UInt64(33), UInt64((-58)), UInt64(UInt8(80)), UInt64(43), UInt64(132), UInt64(222), UInt64(Int16(68)), UInt64(UInt64(0)), UInt64(UInt32(0))], Int16(UInt16(Int16(-88)))))
var var_1667647196791_955 : Class_1667647196791_23 = Class_1667647196791_23()
var var_1667647196791_990 : Float64 = Float64(Float64((-58.0)))
let var_1667647196791_1001 : Enum_1667647196791_101 = Enum_1667647196791_101.defaultValue
let var_1667647196791_1055 : (UInt32, Range<UInt16>, Unit, UInt8) = (UInt32(Int32(57)), ((UInt16(105)&127)..(UInt16(204)&127):((Int64(Int64(Int32(2)))|1))), (), UInt8(Int8(UInt8(Int8(-123)))))
let var_1667647196791_1133 : Array<String> = ["C${var_1667647196791_677}oBA6${var_1667647196791_677}v${var_1667647196791_677}!8gc${var_1667647196791_677}", """
NVd&${var_1667647196791_677}_
,GVe,
""", """
gFZ${var_1667647196791_677}z_${var_1667647196791_677}
k${var_1667647196791_677}T${var_1667647196791_677}.&[
""", ".${var_1667647196791_677};x8${var_1667647196791_677}x(${var_1667647196791_677}r<WB", """
7[${var_1667647196791_677}r[d${var_1667647196791_677}
c<Epf
""", "hIza{${var_1667647196791_677}rvb_KN", "%${var_1667647196791_677}D)3${var_1667647196791_677}-:UKD${var_1667647196791_677}Z", """
4mvc${var_1667647196791_677}l
4(~${var_1667647196791_677}Jl
""", "/,i${var_1667647196791_677}(y,7V${var_1667647196791_677}/$", """
iQelQ
M+%97${var_1667647196791_677}
"""]
public let var_1667647196791_1152 : Range<Int8> = ((Int8(5)&127)..=(Int8(49)&127):((-84)|1))
public var var_1667647196791_1294 : ?Array<Option<Int64>> = ([Int8(-18), Int8(UInt8(150)), Int8(Int8(-12)), Int8(Int8(11)), Int8(-3), Int8(-67), Int8(109), Int8(-14), Int8(30), Int8(UInt8(79))] as Array<Option<Int64>>)
public var var_1667647196791_1375 : Range<Int16> = ((Int16(UInt8(Int8(-72)))&127)..=(Int16(-90)&127):((Int64(UInt16(14))|1)))
public let var_1667647196791_1410 : (UInt32, Range<UInt16>, Unit, UInt8) = (UInt32(170), ((UInt16(93)&127)..=(UInt16(80)&127):(41|1)), (), UInt8(87))
var var_1667647196791_1419 : Option<Int8> = ("<*$Qp${var_1667647196791_677}Uh+#W" as Int8)
let var_1667647196791_1545 : Int64 = 85
public open class Class_1667647196791_23 {
    public init() { // block id: 25

    }
;
    public let var_1667647196791_30 : Float32 = Float32(-49.0);
    public static var var_1667647196791_252 : Int64 = 64;
    public static var var_1667647196791_546 : (Int8, Range<Int8>, (Unit, Range<UInt16>), Int64, Unit, (Unit, Range<UInt16>)) = (Int8(-16), ((Int8(-121)&127)..(Int8(-5)&127):((-124)|1)), ((), ((UInt16(13)&127)..(UInt16(110)&127):((12|1)))), 109, (), ((), ((UInt16(173)&127)..(UInt16(5)&127):((2|1)))));
    public open func func_1667647196791_958() : Unit { // block id: 959

    }
;
    public static func func_1667647196791_1236<T0, T1>(optionalParam_1667647196791_1237 ! : UInt16 = UInt16(10), optionalParam_1667647196791_1239 ! : (Option<Int64>, Range<UInt32>) = (((((UInt64(120)&127)..=(UInt64(117)&127):(((-106)|1))), Int8(Int8(19)), ((UInt64(252)&127)..=(UInt64(143)&127):((15|1))), (UInt32(73), ((UInt16(80)&127)..=(UInt16(165)&127):((-98)|1)), (), UInt8(141)), UInt8(211), [UInt64(29), UInt64(224), UInt64(189), UInt64(113), UInt64(66), UInt64(84), UInt64(178), UInt64(250), UInt64(145), UInt64(111)], Int16(UInt8(152))) as Int64), ((UInt32(242)&127)..=(UInt32(136)&127):((-73)|1))), namedParam_1667647196791_1273 ! : Rune) : Unit { // block id: 1274

    }
;
    public init(param_1667647196791_1229 : Option<Int16>, param_1667647196791_1230 : Range<Int16>, param_1667647196791_1231 : Float64) { // block id: 1232
        var var_1667647196791_1283 : Rune = 'P';
        Class_1667647196791_23.func_1667647196791_1236<Option<Array<Option<Int64>>>, Unit>(optionalParam_1667647196791_1237 : var_1667647196791_704, namedParam_1667647196791_1273 : (Option<Rune>.None ?? var_1667647196791_1283));
        var var_1667647196791_1312 : Array<Option<Int64>> = [((-104.0) as Int64), ((UInt8(1), Int32(UInt32(186)), ((UInt16(223)&127)..(UInt16(138)&127):((-39)|1))) as Int64), Option<Int64>.None, (Float32(Float32(-114.0)) as Int64), Option<Int64>.None, (((UInt16(30)&127)..=(UInt16(227)&127):(65|1)) as Int64), (Int32(35) as Int64), Option<Int64>.Some((-122)), ('o' as Int64), Option<Int64>.None];
        let var_1667647196791_1342 : Array<Range<Int16>> = [((Int16(-57)&127)..(Int16(-20)&127):(65|1)), ((Int16(-39)&127)..=(Int16(37)&127):(45|1)), ((Int16(29)&127)..(Int16(36)&127):((-51)|1)), ((Int16(-111)&127)..(Int16(33)&127):((-105)|1)), ((Int16(7)&127)..=(Int16(-128)&127):(5|1)), ((Int16(-48)&127)..(Int16(92)&127):((-40)|1)), ((Int16(99)&127)..(Int16(-54)&127):(2|1)), ((Int16(-74)&127)..=(Int16(42)&127):(88|1)), ((Int16(106)&127)..(Int16(-40)&127):(116|1)), ((Int16(-116)&127)..=(Int16(-30)&127):(116|1))];
        match ((var_1667647196791_1294 ?? var_1667647196791_1312)[5]) {
            case caseVar_1667647196791_1339 => 
                var_1667647196791_1342
            
            case caseVar_1667647196791_1346 => 
                var_1667647196791_324 /= ((var_1667647196791_324) | 1);
                var_1667647196791_1342
            
            case _ => 
                ();
                'h';
                let var_1667647196791_1391 : Int64 = Int64(UInt32(UInt8(227)));
                if (var_1667647196791_225) { [((Int16(87)&127)..=(Int16(-123)&127):((-91)|1)), ((Int16(-73)&127)..(Int16(-17)&127):((-42)|1)), ((Int16(103)&127)..(Int16(-70)&127):((-5)|1)), ((Int16(46)&127)..(Int16(-90)&127):(99|1)), ((Int16(60)&127)..(Int16(-92)&127):((-76)|1)), ((Int16(-8)&127)..=(Int16(67)&127):((-109)|1)), ((Int16(-63)&127)..(Int16(-32)&127):(113|1)), ((Int16(-98)&127)..(Int16(-93)&127):((-41)|1)), ((Int16(-116)&127)..(Int16(-48)&127):(116|1)), ((Int16(103)&127)..=(Int16(60)&127):(112|1))] } else { [((var_1667647196791_535&127)..(Int16(80)&127):((64|1))), ((Int16(-42)&127)..=(Int16(64)&127):(77|1)), ((var_1667647196791_535&127)..(var_1667647196791_535&127):(((-8)|1))), ((Int16(-81)&127)..(var_1667647196791_535&127):(((-79)|1))), var_1667647196791_1375, ((var_1667647196791_535&127)..=(Int16(114)&127):((var_1667647196791_312|1))), ((Int16(-67)&127)..(var_1667647196791_535&127):((var_1667647196791_1391|1))), ((Int16(-119)&127)..=(Int16(98)&127):(89|1)), var_1667647196791_1375, var_1667647196791_1375] } 
            
            case _ => 
                [((Int16(53)&127)..(Int16(-10)&127):((-64)|1)), ((Int16(17)&127)..(Int16(52)&127):((-124)|1)), ((Int16(-99)&127)..(Int16(36)&127):(94|1)), ((Int16(-26)&127)..=(Int16(7)&127):(96|1)), ((Int16(-48)&127)..(Int16(40)&127):((-48)|1)), ((Int16(-37)&127)..=(Int16(72)&127):((-56)|1)), ((Int16(27)&127)..=(Int16(0)&127):(17|1)), ((Int16(-28)&127)..(Int16(83)&127):((-86)|1)), ((Int16(-28)&127)..(Int16(119)&127):((-54)|1)), ((Int16(-117)&127)..=(Int16(-118)&127):(30|1))]
            
        }
    }
;
    public mut prop var_1667647196791_1488 : Unit { // block id: 1489
        get() { // block id: 1491
            (false, ((UInt64(230)&127)..(UInt64(253)&127):((-87)|1)), ((UInt64(UInt8(206))&127)..=(UInt64(200)&127):((10|1))), UInt64(UInt64(172)), ((UInt8(53)&127)..(UInt8(230)&127):((-96)|1)), (((UInt64(17)&127)..(UInt64(192)&127):((28|1))), Int8(-47), ((UInt64(251)&127)..(UInt64(104)&127):((32|1))), (UInt32(150), ((UInt16(104)&127)..=(UInt16(54)&127):((1|1))), (), UInt8(39)), UInt8(UInt8(85)), [UInt64(190), UInt64(228), UInt64(167), UInt64(138), UInt64(119), UInt64(116), UInt64(34), UInt64(242), UInt64(95), UInt64(77)], Int16(UInt8(60))));
            ();
            var_1667647196791_1552
        }

        set(Value) { // block id: 1529
            ();
            ((), ((UInt16(32)&127)..(UInt16(122)&127):((-19)|1)));
            ();
            var_1667647196791_1552 = Value
        }

    };
    var var_1667647196791_1552 : Unit = ()
}

public func func_1667647196791_8(optionalParam_1667647196791_9 ! : Int64 = Int64(Int8(UInt8(144))), optionalParam_1667647196791_13 ! : Float32 = Float32(Float32(Float32(49.0))), namedParam_1667647196791_17 ! : Unit) : Unit { // block id: 18
    var loopTimeVar_1667647196791_33 : Array<UInt64> = [UInt64(152), UInt64(UInt8(243)), UInt64(Int8(118)), UInt64(UInt8(Int8(Int8(-62)))), UInt64(230), UInt64(Int8(35)), UInt64(28), UInt64(147), UInt64(226), UInt64(UInt8(135))];
    for (i in loopTimeVar_1667647196791_33 where Float32(13.0) > (var_1667647196791_27.var_1667647196791_30)) {

    }
}

public enum Enum_1667647196791_101 {
    defaultValue
}
func func_1667647196791_140(param_1667647196791_141 : Enum_1667647196791_101) : UInt16 { // block id: 142
    UInt16(158)
}



public func func_1667647196791_88(param_1667647196791_89 : Int8) : Bool { // block id: 90
    let var_1667647196791_104 : Enum_1667647196791_101 = Enum_1667647196791_101.defaultValue;
    let var_1667647196791_145 : (Enum_1667647196791_101) -> UInt16 = { lambdaParameter_1667647196791_148 : Enum_1667647196791_101 => UInt16(UInt8(UInt8(87))) };
    func func_1667647196791_92<T0, T1, T2>(param_1667647196791_93 : Range<UInt64>) : Range<Int8> { // block id: 94
        func func_1667647196791_97(param_1667647196791_98 : UInt16) : Bool { // block id: 99
            match (var_1667647196791_104) {
                case defaultValue => 
                    var var_1667647196791_110 : Int16 = Int16(-14);
                    var_1667647196791_110;
                    ();
                    Int8(-67) > Int8(111)
                
                case _ => 
                    ();
                    false
                
                case _ : Range<UInt8> => 
                    32.0 >= 29.0
                
                case _ => 
                    var_1667647196791_131 |= Int32(-103);
                    ();
                    false && true
                
            }
        }
;
        var var_1667647196791_163 : Int16 = Int16(Int8(-113));
        var var_1667647196791_168 : Int8 = Int8(Int8(Int8(Int8(UInt8(39)))));
        if (func_1667647196791_97((var_1667647196791_104|>var_1667647196791_145))) { (match ((((-22)&127)..=((-55)&127):((-90)|1))) {
            case caseVar_1667647196791_159 : Int64 => 
                var_1667647196791_163--;
                [UInt64(10), UInt64(245), UInt64(121), UInt64(250), UInt64(137), UInt64(163), UInt64(105), UInt64(106), UInt64(99), UInt64(112)];
                var_1667647196791_168
            
            case _ => 
                Int8(58)
            
        }&127)..(var_1667647196791_168&127):(((Option<Int64>.Some((-27)) ?? (-49))|1)) } else { ((var_1667647196791_190[5]&127)..=((var_1667647196791_199 ?? var_1667647196791_168)&127):((6|1))) }
    }
;
    func_1667647196791_92<Range<Int16>, Bool, Array<Range<UInt8>>>(if (true) { ((var_1667647196791_208&127)..(UInt64(194)&127):((61|1))) } else { ((var_1667647196791_208&127)..=(var_1667647196791_208&127):((88|1))) } );
    var var_1667647196791_218 : UInt16 = UInt16(UInt16(Int8(Int8(Int8(-123)))));
    var_1667647196791_218;
    var_1667647196791_225
}

func func_1667647196791_229(param_1667647196791_230 : Enum_1667647196791_101) : Bool { // block id: 231
    false
}

public func func_1667647196791_398<T0>(param_1667647196791_399 : Int16) : Unit { // block id: 400
    var var_1667647196791_402 : Range<UInt64> = ((UInt64(119)&127)..(UInt64(Int64(UInt16(161)))&127):((14|1)));
    var_1667647196791_402;
    if (var_1667647196791_225) { var_1667647196791_416 } else { var_1667647196791_416 } [3][2]
}

public struct Struct_1667647196791_482 {
    public init() { // block id: 484

    }
;
    static prop var_1667647196791_487 : (Unit, Range<UInt16>) { // block id: 488
        get() { // block id: 490
            ((), ((UInt16(Int16(-84))&127)..=(UInt16(UInt16(205))&127):((Int64(Int8(113))|1))))
        }

    };
    public static var var_1667647196791_1018 : Int64 = 68
}



public func func_1667647196791_502(param_1667647196791_503 : Range<UInt16>) : Int64 { // block id: 504
    func func_1667647196791_506(param_1667647196791_507 : Option<Int64>, param_1667647196791_508 : Int16) : Float32 { // block id: 509
        ((((UInt8(244)&127)..(UInt8(93)&127):((-64)|1)) as Float32) ?? Float32((-Float32(-34.0))))
    }
;
    func_1667647196791_506(try { // block id: 521
        Option<Int64>.Some(28)
    } finally { // block id: 524
        ();
        Option<Int64>.Some(var_1667647196791_312)
    }, (Option<Int16>.Some(var_1667647196791_535) ?? Int16(UInt16(154))));
    Class_1667647196791_23.var_1667647196791_546[3] ^ try { // block id: 568
        var_1667647196791_70;
        ();
        ((-22), (UInt32(180), ((UInt16(43)&127)..=(UInt16(82)&127):((-103)|1)), var_1667647196791_70, UInt8(62)))
    } finally { // block id: 578
        var_1667647196791_580;
        var_1667647196791_208 ^= UInt64(88);
        var var_1667647196791_592 : UInt8 = UInt8(59);
        ((-119), (UInt32(203), ((UInt16(209)&127)..(UInt16(98)&127):((-52)|1)), (), var_1667647196791_592))
    }[0]
}


func func_1667647196791_244(param_1667647196791_245 : Float64) : Bool { // block id: 246
    let var_1667647196791_265 : Range<UInt64> = ((UInt64(89)&127)..=(UInt64(124)&127):((-53)|1));
    let var_1667647196791_277 : ?Int64 = Option<Int64>.None;
    let var_1667647196791_291 : (Option<Int64>, Range<UInt32>) = ((Class_1667647196791_23() as Int64), ((UInt32(160)&127)..=(UInt32(Int8(UInt8(116)))&127):((Int64(Int16(51))|1))));
    let var_1667647196791_392 : Range<Int8> = ((Int8(-111)&127)..=(Int8(85)&127):((-74)|1));
    let var_1667647196791_606 : ?(Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>) = (((), ((UInt16(220)&127)..(UInt16(66)&127):((-26)|1))) as (Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>));
    let var_1667647196791_782 : (UInt8, Int32, Range<UInt16>) = (UInt8(Int8(117)), Int32(UInt16(33)), ((UInt16(205)&127)..(UInt16(239)&127):((Int64(UInt16(UInt16(160)))|1))));
    func func_1667647196791_255(param_1667647196791_256 : Option<Int64>, param_1667647196791_257 : Range<Int32>, param_1667647196791_258 : Int8) : Int64 { // block id: 259
        var var_1667647196791_328 : (Option<Int64>, Range<UInt32>) = (Option<Int64>.None, ((UInt32(235)&127)..(UInt32(Int8(11))&127):((Int64(UInt32(Int8(40)))|1))));
        let var_1667647196791_361 : Unit = ();
        match (match (var_1667647196791_265) {
            case _ => 
                let var_1667647196791_271 : Float32 = Float32(Float32(Float32(39.0)));
                var_1667647196791_271;
                (var_1667647196791_277, ((UInt32(144)&127)..=(UInt32(136)&127):(10|1)))
            
            case caseVar_1667647196791_282 => 
                if (var_1667647196791_225) { Option<Int8>.Some(Int8(-90)) } else { var_1667647196791_199 } ;
                var_1667647196791_70;
                var_1667647196791_291
            
            case caseVar_1667647196791_304 : Rune => 
                var_1667647196791_291
            
            case caseVar_1667647196791_309 => 
                var_1667647196791_312;
                var_1667647196791_315;
                if (true) { (var_1667647196791_277, ((UInt32(171)&127)..=(var_1667647196791_324&127):((var_1667647196791_312|1)))) } else { var_1667647196791_328 } 
            
            case _ => 
                ((UInt16(108)&127)..(UInt16(239)&127):(90|1));
                if (var_1667647196791_225) { var_1667647196791_291 } else { (Option<Int64>.None, ((var_1667647196791_324&127)..(var_1667647196791_324&127):((6|1)))) } 
            
        }[0]) {
            case caseVar_1667647196791_353 => 
                ()
            
            case caseVar_1667647196791_358 : Range<Int64> => 
                var_1667647196791_361
            
            case caseVar_1667647196791_365 : Int8 => 
                var_1667647196791_131--
            
            case _ => 
                ()
            
        };
        if ((var_1667647196791_324 & UInt32(152)) != var_1667647196791_324) { // block id: 378

        } else if (try { // block id: 380
            let var_1667647196791_382 : Range<Int8> = ((Int8(77)&127)..=(Int8(-54)&127):((Int64(UInt16(161))|1)));
            var_1667647196791_382;
            false
        } finally { // block id: 389
            var_1667647196791_225;
            var_1667647196791_392;
            var_1667647196791_225
        }) { // block id: 395
            ();
            let var_1667647196791_468 : (Int16) -> Unit = func_1667647196791_398<Option<Array<Option<Int64>>>>;
            Int16(-43)|>var_1667647196791_468
        };
        let var_1667647196791_596 : (Range<UInt16>) -> Int64 = func_1667647196791_502;
        func func_1667647196791_472(param_1667647196791_473 : String, namedParam_1667647196791_474 ! : Option<Int8>, optionalParam_1667647196791_475 ! : Array<Int8> = [Int8(65), Int8(74), Int8(-67), Int8(-82), Int8(30), Int8(-20), Int8(-7), Int8(-44), Int8(123), Int8(-89)], namedParam_1667647196791_477 ! : (UInt32, Range<UInt16>, Unit, UInt8)) : Int64 { // block id: 478
            Struct_1667647196791_482.var_1667647196791_487[0];
            var var_1667647196791_612 : (Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>) = ([UInt64(39), UInt64(176), UInt64(156), UInt64(237), UInt64(72), UInt64(161), UInt64(185), UInt64(125), UInt64(236), UInt64(180)], UInt16(UInt8(Int8(126))), (UInt32(Int8(Int8(-60))), ((UInt16(91)&127)..(UInt16(218)&127):((-57)|1)), (), UInt8(187)), (((UInt16(106)&127)..=(UInt16(UInt8(83))&127):((Int64(UInt64(63))|1))) is (Enum_1667647196791_101) -> UInt16), ((UInt16(206)&127)..=(UInt16(202)&127):(((-49)|1))), ((Int16(108)&127)..(Int16(27)&127):(116|1)), (((UInt64(129)&127)..(UInt64(37)&127):(25|1)), Int8(10), ((UInt64(20)&127)..(UInt64((-101))&127):((70|1))), (UInt32(56), ((UInt16(19)&127)..=(UInt16(94)&127):((-93)|1)), (), UInt8(Int8(-67))), UInt8(94), [UInt64(97), UInt64(146), UInt64(89), UInt64(182), UInt64(58), UInt64(81), UInt64(236), UInt64(152), UInt64(212), UInt64(249)], Int16(-98)), ((UInt8(19)&127)..=(UInt8(131)&127):(112|1)));
            (var_1667647196791_606 ?? var_1667647196791_612)[4]|>var_1667647196791_596
        }
;
        var var_1667647196791_662 : Int8 = Int8(15);
        let var_1667647196791_734 : (Int64, (UInt32, Range<UInt16>, Unit, UInt8)) = (Int64(UInt8(116)), (UInt32(UInt32(Int32(60))), ((UInt16(184)&127)..(UInt16(253)&127):((-106)|1)), (), UInt8(69)));
        func_1667647196791_472(try { // block id: 657
            if (true) { Option<Int8>.Some(var_1667647196791_662) } else { var_1667647196791_199 } ;
            if (false) { var_1667647196791_668 } else { Struct_1667647196791_482() } ;
            var var_1667647196791_674 : String = """
bBk; 
`_gc_
""";
            if (true) { var_1667647196791_674 } else { var_1667647196791_677 } 
        } finally { // block id: 679
            (-16);
            [UInt64(34), UInt64(157), var_1667647196791_208, var_1667647196791_208, var_1667647196791_208, var_1667647196791_208, UInt64(137), var_1667647196791_208, UInt64(22), UInt64(63)];
            if (true) { var_1667647196791_677 } else { "S`bCA#\"!@m" } 
        }, namedParam_1667647196791_474 : if (match (var_1667647196791_606) {
            case _ : Enum_1667647196791_101 => 
                var_1667647196791_704 > UInt16(41)
            
            case caseVar_1667647196791_710 : Int16 => 
                var_1667647196791_225
            
            case _ : (Unit, Range<UInt16>) => 
                Int8(-112) != var_1667647196791_662
            
            case _ => 
                ((UInt16(10)&127)..(var_1667647196791_704&127):((var_1667647196791_312|1)));
                var_1667647196791_225
            
        }) { Option<Int8>.None } else { var_1667647196791_199 } , namedParam_1667647196791_477 : (UInt32(106) & UInt32(143), match (var_1667647196791_734) {
            case _ : Option<(Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>)> => 
                var_1667647196791_324 ^= var_1667647196791_324;
                ((UInt16(245)&127)..(UInt16(70)&127):(((-90)|1)))
            
            case (caseVar_1667647196791_757 : Range<Int8>,caseVar_1667647196791_758 : UInt8) => 
                ((UInt16(78)&127)..=(var_1667647196791_704&127):(((-2)|1)))
            
            case _ : (Int64, (UInt32, Range<UInt16>, Unit, UInt8)) => 
                let var_1667647196791_768 : Range<UInt16> = ((UInt16(79)&127)..=(UInt16(236)&127):(110|1));
                var_1667647196791_768
            
            case _ => 
                if (false) { ((UInt16(78)&127)..=(UInt16(252)&127):((-38)|1)) } else { var_1667647196791_776 } 
            
        }, (), var_1667647196791_782[0]))
    }
;
    var var_1667647196791_798 : Int8 = Int8(-4);
    var loopTimeVar_1667647196791_811 : Int64 = 0;
    while (((Class_1667647196791_23.var_1667647196791_252) > func_1667647196791_255(var_1667647196791_277, ((Int32(6)&127)..=(Int32(30)&127):((-79)|1)), var_1667647196791_798)) && loopTimeVar_1667647196791_811 < 100 ) {
        loopTimeVar_1667647196791_811++;
        var var_1667647196791_802 : Range<Int32> = ((Int32(77)&127)..(Int32(49)&127):((Int64(UInt8(Int8(85)))|1)));
        var_1667647196791_802;
        ()
    };
    let var_1667647196791_813 : Unit = ();
    var_1667647196791_813;
    let var_1667647196791_850 : Float64 = (-124.0);
    match (if (var_1667647196791_225) { var_1667647196791_821 } else { var_1667647196791_821 } [3]) {
        case caseVar_1667647196791_827 : Unit => 
            var_1667647196791_70;
            var_1667647196791_225
        
        case _ : Float64 => 
            ();
            var_1667647196791_312 |= (-114);
            var_1667647196791_312 > var_1667647196791_312
        
        case _ => 
            Option<(Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>)>.None;
            var_1667647196791_312 /= ((var_1667647196791_312) | 1);
            var_1667647196791_850 <= var_1667647196791_850
        
        case _ => 
            [var_1667647196791_798, Int8(-15), var_1667647196791_798, Int8(-60), var_1667647196791_798, var_1667647196791_798, Int8(97), Int8(-114), var_1667647196791_798, var_1667647196791_798];
            var_1667647196791_225 ||= false;
            var_1667647196791_225
        
    }
}



public func func_1667647196791_873(param_1667647196791_874 : Enum_1667647196791_101) : Float64 { // block id: 875
    ((var_1667647196791_885[3] as Unit) ?? var_1667647196791_955.func_1667647196791_958());
    let var_1667647196791_972 : Float32 = Float32(Float32(Float32(Float32(26.0))));
    var var_1667647196791_980 : Option<Float64> = ((-12) as Float64);
    (match ((Option<Unit>.Some(var_1667647196791_70) as (Array<UInt64>, UInt16, (UInt32, Range<UInt16>, Unit, UInt8), Bool, Range<UInt16>, Range<Int16>, (Range<UInt64>, Int8, Range<UInt64>, (UInt32, Range<UInt16>, Unit, UInt8), UInt8, Array<UInt64>, Int16), Range<UInt8>))) {
        case _ => 
            var_1667647196791_972;
            if (var_1667647196791_225) { var_1667647196791_980 } else { Option<Float64>.Some(45.0) } 
        
    } ?? try { // block id: 986
        var_1667647196791_70;
        var_1667647196791_990 - var_1667647196791_990
    } catch (e: Exception) { // block id: 995
        ();
        ();
        32.0
    })
}

func func_1667647196791_239(param_1667647196791_240 : Range<Int16>) : Bool { // block id: 241
    let var_1667647196791_871 : (Float64) -> Bool = func_1667647196791_244;
    var_1667647196791_1001|>(func_1667647196791_873~>var_1667647196791_871)
}

public func func_1667647196791_234<T0, T1>(param_1667647196791_235 : Int8) : Enum_1667647196791_101 { // block id: 236
    var var_1667647196791_1007 : Array<Range<Int16>> = [((Int16(-103)&127)..=(Int16(23)&127):((-74)|1)), ((Int16(-74)&127)..(Int16(89)&127):(55|1)), ((Int16(20)&127)..(Int16(61)&127):(55|1)), ((Int16(-27)&127)..=(Int16(-67)&127):((-56)|1)), ((Int16(95)&127)..=(Int16(1)&127):(54|1)), ((Int16(-56)&127)..(Int16(15)&127):((-111)|1)), ((Int16(-89)&127)..(Int16(6)&127):(41|1)), ((Int16(-125)&127)..(Int16(120)&127):((-108)|1)), ((Int16(9)&127)..(Int16(-68)&127):((-85)|1)), ((Int16(49)&127)..=(Int16(-16)&127):((-41)|1))];
    var loopTimeVar_1667647196791_1012 : Int64 = 0;
    while (((var_1667647196791_1007[4]|>func_1667647196791_239)) && loopTimeVar_1667647196791_1012 < 100 ) {
        loopTimeVar_1667647196791_1012++;

    };
    if (((Struct_1667647196791_482.var_1667647196791_1018) < if (false) { // block id: 1022
        ();
        64
    } else if (var_1667647196791_225) { // block id: 1026
        var_1667647196791_208 ^ UInt64(211);
        (-64)
    } else { // block id: 1031
        var_1667647196791_312 ^ var_1667647196791_312
    })) { Enum_1667647196791_101.defaultValue } else { try { // block id: 1037
        var_1667647196791_225;
        var_1667647196791_1001
    } finally { // block id: 1040
        Enum_1667647196791_101.defaultValue
    } } 
}



public func func_1667647196791_74(optionalParam_1667647196791_75 ! : Range<UInt16> = ((UInt16(Int16(Int16(-125)))&127)..=(UInt16(UInt16(Int8(UInt8(145))))&127):((9|1)))) : Class_1667647196791_23 { // block id: 85
    let var_1667647196791_1043 : (Int8) -> Enum_1667647196791_101 = func_1667647196791_234<Range<UInt16>, Int16>;
    var var_1667647196791_1095 : UInt8 = UInt8(233);
    var loopTimeVar_1667647196791_1098 : Array<Range<Int16>> = [((Int16(-70)&127)..=(Int16(91)&127):((-109)|1)), ((Int16(2)&127)..(Int16(-51)&127):((Int64(Int16(40))|1))), ((Int16(UInt16(UInt8(143)))&127)..=(Int16(-81)&127):(((-3)|1))), ((Int16(-104)&127)..(Int16(58)&127):(34|1)), ((Int16(79)&127)..=(Int16(-19)&127):(38|1)), ((Int16(63)&127)..=(Int16(-6)&127):(19|1)), ((Int16(-31)&127)..(Int16(31)&127):(83|1)), ((Int16(UInt16(80))&127)..(Int16(UInt16(UInt8(96)))&127):(((-62)|1))), ((Int16(112)&127)..(Int16(-107)&127):(106|1)), ((Int16(118)&127)..(Int16(-29)&127):((Int64(UInt32(Int32(93)))|1)))];
    for (i in loopTimeVar_1667647196791_1098 where ((var_1667647196791_199 ?? Int8(41))|>(var_1667647196791_1043~>func_1667647196791_229))) {
        if (false) { // block id: 1051
            let var_1667647196791_1074 : UInt16 = UInt16(78);
            var var_1667647196791_1080 : UInt8 = UInt8(99);
            if (var_1667647196791_225) { var_1667647196791_1055 } else { (var_1667647196791_324, ((var_1667647196791_1074&127)..=(var_1667647196791_704&127):((112|1))), var_1667647196791_580, var_1667647196791_1080) } ;
            var_1667647196791_312 = var_1667647196791_312;
            var_1667647196791_324++
        } else if (false) { // block id: 1088
            if (false) { ((UInt8(57)&127)..=(UInt8(31)&127):((-64)|1)) } else { ((UInt8(164)&127)..=(UInt8(25)&127):((-101)|1)) } ;
            var_1667647196791_1095 %= ((var_1667647196791_1095) | 1)
        }
    };
    var_1667647196791_1133[0];
    var var_1667647196791_1175 : Int8 = Int8(-21);
    let var_1667647196791_1181 : Range<UInt8> = ((UInt8(1)&127)..(UInt8(68)&127):(11|1));
    var var_1667647196791_1216 : Option<Float32> = (((Int32(28)&127)..(Int32(-104)&127):(114|1)) as Float32);
    var var_1667647196791_1226 : Class_1667647196791_23 = Class_1667647196791_23(Option<Int16>.Some(Int16(28)), ((Int16(24)&127)..=(Int16(-105)&127):((-57)|1)), Float64(126.0));
    let var_1667647196791_1425 : (Unit, Range<Int8>, Class_1667647196791_23, Int64, Bool, Range<Int64>, (UInt32, Range<UInt16>, Unit, UInt8)) = ((), ((Int8(UInt8(UInt8(100)))&127)..=(Int8(UInt8(Int8(-41)))&127):((53|1))), Class_1667647196791_23(Option<Int16>.None, ((Int16(UInt16(187))&127)..(Int16(4)&127):((Int64(UInt8(138))|1))), (-83.0)), Int64(UInt64(UInt8(UInt8(186)))), (Class_1667647196791_23(((((-64)&127)..=((-13)&127):(85|1)) as Int16), ((Int16(72)&127)..(Int16(-79)&127):((27|1))), Float64(Float32(57.0))) is (Range<Int16>) -> Bool), ((71&127)..(83&127):(113|1)), (UInt32(UInt8(Int8(123))), ((UInt16(65)&127)..(UInt16(146)&127):((Int64(Int8(-8))|1))), (), UInt8(172)));
    if ((((UInt8(11)&127)..=(UInt8(186)&127):((-19)|1)) is (Option<Int64>, Range<Int32>, Int8) -> Int64)) { // block id: 1141
        Int32(-70) << ((var_1667647196791_131) & 7);
        ((Int16(-30)&127)..=(var_1667647196791_535&127):((70|1)));
        var var_1667647196791_1158 : Range<Int64> = (((-125)&127)..((-9)&127):((Int64(Int8(-104))|1)));
        ((), var_1667647196791_1152, var_1667647196791_955, var_1667647196791_312, var_1667647196791_225, var_1667647196791_1158, var_1667647196791_1055)
    } else if (if (false) { // block id: 1167
        !var_1667647196791_225
    } else if (var_1667647196791_225) { // block id: 1171
        Int32(-48);
        var_1667647196791_1175 >>= ((Int8(-36)) & 7);
        var_1667647196791_225
    } else { // block id: 1179
        var_1667647196791_1181;
        [var_1667647196791_208, UInt64(196), UInt64(178), var_1667647196791_208, var_1667647196791_208, UInt64(220), var_1667647196791_208, var_1667647196791_208, var_1667647196791_208, UInt64(103)];
        false
    }) { // block id: 1195
        let var_1667647196791_1199 : Range<UInt64> = ((UInt64(79)&127)..(UInt64(UInt64(44))&127):((Int64(UInt64(Int32(UInt8(100))))|1)));
        if (true) { var_1667647196791_1199 } else { ((UInt64(147)&127)..(UInt64(208)&127):(16|1)) } ;
        var var_1667647196791_1213 : Float32 = Float32(46.0);
        if (var_1667647196791_225) { Option<Float32>.Some(var_1667647196791_1213) } else { var_1667647196791_1216 } ;
        ((), ((var_1667647196791_1175&127)..(Int8(105)&127):(((-28)|1))), var_1667647196791_1226, (-28), var_1667647196791_225, (((-14)&127)..((-74)&127):(57|1)), var_1667647196791_1410)
    } else { // block id: 1416
        ();
        var_1667647196791_1419;
        if (var_1667647196791_225) { var_1667647196791_1425 } else { ((), ((var_1667647196791_1175&127)..(var_1667647196791_1175&127):(((-78)|1))), Class_1667647196791_23(), var_1667647196791_312, var_1667647196791_225, (((-113)&127)..=(var_1667647196791_312&127):(((-118)|1))), var_1667647196791_1055) } 
    }[2]
}

main(): Int64 {
    try {
        func_1667647196791_8(optionalParam_1667647196791_9 : 124, namedParam_1667647196791_17 : func_1667647196791_8(optionalParam_1667647196791_9 : var_1667647196791_64, namedParam_1667647196791_17 : var_1667647196791_70));
        func_1667647196791_74(optionalParam_1667647196791_75 : ((UInt16(119)&127)..=(UInt16(3)&127):(24|1))).var_1667647196791_1488;
        [var_1667647196791_64, var_1667647196791_64, var_1667647196791_312, 104, var_1667647196791_312, 61, var_1667647196791_1545, 13, 18, var_1667647196791_1545][1]
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1667647196791_64*var_1667647196791_64), 64)
        crccheck.updateBuffer(UInt64(var_1667647196791_1545*var_1667647196791_1545), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Struct_1667647196791_482 {

}

