/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

const var_1713287353326_11 : Unit = ()
public const var_1713287353326_16 : String = "Jay~(XLnXF"
const var_1713287353326_24 : Int64 = -113
const var_1713287353326_78 : Bool = true
public var var_1713287353326_88 : VArray<Bool, $8> = [true, true, true, false, false, true, false, true]
public const var_1713287353326_107 : Unit = ()
var var_1713287353326_155 : Int = Int64(38)
public let var_1713287353326_300 : Option<Unit> = (r'T' as Unit)
let var_1713287353326_318 : Range<UInt16> = ((UInt16(UInt16(164))&127)..(UInt16(UInt16(90))&127):(Int64(-31)|1))
public let var_1713287353326_407 : Rune = r'M'
public var var_1713287353326_511 : UInt32 = UInt32(206)
let var_1713287353326_520 : String = "r7NZ5&oYBo"
let var_1713287353326_543 : Int8 = Int8(-127)
public let var_1713287353326_554 : Int16 = Int16(UInt8(188))
var var_1713287353326_633 : Option<Unit> = (((UInt8(UInt8(99))&127)..(UInt8(UInt8(UInt8(137)))&127):(Int64(-64)|1)) as Unit)
public let var_1713287353326_743 : Float64 = Float64(92.0)
var var_1713287353326_797 : UInt16 = UInt16(UInt8(Int8(Int8(-78))))
public var var_1713287353326_835 : Class_1713287353326_830 = Class_1713287353326_830()
let var_1713287353326_851 : (Interface_1713287353326_177, (Float32, Unit), Class_1713287353326_203, Range<UInt32>, VArray<Bool, $8>, (Interface_1713287353326_177, UInt16, Array<Rune>, Range<Int16>, VArray<Bool, $8>, Range<UInt16>, UInt32, Int8), (Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>)) = (Class_1713287353326_203(), (Float32(-72.0), ()), Class_1713287353326_830(), ((UInt32(UInt32(Int32(-57)))&127)..=(UInt32(UInt32(UInt32(5)))&127):(Int64(4)|1)), VArray<Bool, $8>(repeat: (Class_1713287353326_830() is (Int32) -> Bool)), (Class_1713287353326_830(), UInt16(Int8(Int8(-16))), [r'Z', r'h', r'e', r'I', r'H', r'z', r't', r'4', r'w', r'n'], ((Int16(Int16(-60))&127)..(Int16(Int16(77))&127):(Int64(84)|1)), VArray<Bool, $8>(repeat: (((Int8(Int8(-63))&127)..(Int8(Int8(77))&127):(Int64(-52)|1)) is Option<Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>>)), ((UInt16(UInt16(103))&127)..=(UInt16(UInt16(128))&127):(Int64(35)|1)), UInt32(UInt16(UInt8(22))), Int8(-125)), (((Int8(Int8(-39))&127)..=(Int8(Int8(-104))&127):(Int64(-3)|1)), ((UInt64(UInt64(159))&127)..(UInt64(UInt64(91))&127):(Int64(103)|1)), Int16(UInt16(Int16(14))), ((Int64(Int64(-16))&127)..=(Int64(Int64(5))&127):(Int64(81)|1)), ((Int32(Int32(UInt16(64)))&127)..=(Int32(Int32(UInt16(186)))&127):(Int64(51)|1))))
public var var_1713287353326_946 : Range<Int16> = ((Int16(Int16(UInt8(UInt8(UInt8(90)))))&127)..=(Int16(Int16(UInt16(81)))&127):(Int64(Int32(UInt16(UInt8(102))))|1))
var var_1713287353326_977 : (Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16) = (Float64(Float64(-115.0)), Float32(42.0), Class_1713287353326_830(), Class_1713287353326_203(), Class_1713287353326_203(), true, UInt16(UInt16(224)))
var var_1713287353326_1032 : Int32 = Int32(Int32(Int32(Int8(UInt8(26)))))
var var_1713287353326_1060 : UInt64 = UInt64(175)
public const var_1713287353326_1091 : Float32 = 69.0
public var var_1713287353326_1095 : Array<UInt64> = [UInt64(4), UInt64(56), UInt64(48), UInt64(56), UInt64(26), UInt64(145), UInt64(41), UInt64(147), UInt64(138), UInt64(200)]
public const var_1713287353326_1139 : Bool = false
public var var_1713287353326_1156 : Array<Range<Int8>> = [((Int8(Int8(UInt8(96)))&127)..=(Int8(Int8(-117))&127):(Int64(Int8(UInt8(213)))|1)), ((Int8(Int8(-40))&127)..(Int8(Int8(Int8(UInt8(188))))&127):(Int64(-108)|1)), ((Int8(Int8(UInt8(22)))&127)..=(Int8(Int8(73))&127):(Int64(UInt64(104))|1)), ((Int8(Int8(32))&127)..=(Int8(Int8(-57))&127):(Int64(-2)|1)), ((Int8(Int8(46))&127)..(Int8(Int8(-108))&127):(Int64(-107)|1)), ((Int8(Int8(-27))&127)..(Int8(Int8(Int8(UInt8(15))))&127):(Int64(Int8(-94))|1)), ((Int8(Int8(-77))&127)..(Int8(Int8(-69))&127):(Int64(UInt8(Int8(-77)))|1)), ((Int8(Int8(122))&127)..=(Int8(Int8(-71))&127):(Int64(-64)|1)), ((Int8(Int8(-89))&127)..(Int8(Int8(30))&127):(Int64(116)|1)), ((Int8(Int8(67))&127)..(Int8(Int8(32))&127):(Int64(35)|1))]
let var_1713287353326_1222 : Option<Bool> = Option<Bool>.None
public let var_1713287353326_1248 : Class_1713287353326_203 = Class_1713287353326_830()
let var_1713287353326_1255 : Array<Rune> = [r'd', r'F', r'5', r'w', r'T', r'8', r'z', r'U', r'2', r'W']
public const func func_1713287353326_21() : Int64 { // block id: 22
    var_1713287353326_24
}

public const func func_1713287353326_7(param_1713287353326_8 : Rune) : Int64 { // block id: 9
    var_1713287353326_11;
    if (true) { var_1713287353326_16 } else { var_1713287353326_16 } ;
    func_1713287353326_21() & ((-79 ** 140) ^ -6)
}

public const func func_1713287353326_32(param_1713287353326_33 : Int16) : Int64 { // block id: 34
    -47
}

public const func func_1713287353326_37(param_1713287353326_38 : Rune) : Int16 { // block id: 39
    -69
}



public enum Enum_1713287353326_110 {
    defaultValue |
    enumValue_1713287353326_113(UInt16, Int64) |
    enumValue_1713287353326_260(Range<UInt16>, Int16)
}
public const func func_1713287353326_135(param_1713287353326_136 : Int32) : Bool { // block id: 137
    false
}

sealed public interface Interface_1713287353326_178 {
    func func_1713287353326_825(param_1713287353326_826 : UInt8, namedParam_1713287353326_827 ! : UInt64) : Bool { // block id: 828
        var_1713287353326_835.var_1713287353326_838;
        var_1713287353326_78
    }

}

sealed public interface Interface_1713287353326_177 <: Interface_1713287353326_178 {
    func func_1713287353326_825(param_1713287353326_826 : UInt8, namedParam_1713287353326_827 ! : UInt64) : Bool { // block id: 828
        var_1713287353326_835.var_1713287353326_838;
        var_1713287353326_78
    }

}

public open class Class_1713287353326_174 <: Interface_1713287353326_177 & Resource {
    public init() { // block id: 176

    }
;
    static let var_1713287353326_461 : (Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>) = (((Int8(Int8(-84))&127)..(Int8(Int8(-27))&127):(Int64(77)|1)), ((UInt64(UInt64(79))&127)..=(UInt64(UInt64(142))&127):(Int64(-46)|1)), Int16(-104), ((Int64(Int64(87))&127)..=(Int64(Int64(14))&127):(Int64(83)|1)), ((Int32(Int32(93))&127)..=(Int32(Int32(-100))&127):(Int64(-127)|1)));
    protected static func func_1713287353326_352(optionalParam_1713287353326_353 ! : Range<UInt64> = ((UInt64(UInt64(Int64(Int16(10))))&127)..=(UInt64(UInt64(231))&127):(Int64(-78)|1)), optionalParam_1713287353326_360 ! : Option<Unit> = (r'W' as Unit), optionalParam_1713287353326_363 ! : Int16 = Int16(UInt8(UInt8(226))), optionalParam_1713287353326_367 ! : String = ###"qH>8ILz17@"###) : Int16 { // block id: 369
        try { // block id: 372
            const var_1713287353326_375 : Int16 = -75;
            var_1713287353326_375 + var_1713287353326_375;
            let var_1713287353326_380 : Interface_1713287353326_177 = Class_1713287353326_203(Int8(-51), VArray<Bool, $8>(repeat: (() is (Option<Bool>, Enum_1713287353326_110, Unit, Array<UInt64>) -> Class_1713287353326_203)), ((Int16(Int16(-96))&127)..=(Int16(Int16(87))&127):(Int64(-39)|1)), UInt16(196));
            var var_1713287353326_499 : Range<Int16> = ((Int16(Int16(63))&127)..(Int16(Int16(-88))&127):(Int64(UInt32(187))|1));
            (var_1713287353326_380, UInt16(72), [r'B', r't', r'B', r'H', r'4', r'N', r'm', r'j', r'm', r'N'], var_1713287353326_499, var_1713287353326_88, ((UInt16(UInt16(94))&127)..(UInt16(UInt16(237))&127):(var_1713287353326_155|1)), var_1713287353326_511, Int8(-64))
        } catch (_) { // block id: 514
            ();
            if (var_1713287353326_78) { """
lRXs$
v}-gt
""" } else { var_1713287353326_520 } ;
            var var_1713287353326_536 : Bool = (Int8(UInt8(180)) is Range<UInt8>);
            (Class_1713287353326_203(), UInt16(177), [r'O', r'f', r'T', r'9', r'q', r'J', r'7', r's', r'V', r'D'], ((Int16(Int16(113))&127)..(Int16(Int16(-6))&127):(Int64(-101)|1)), VArray<Bool, $8>({ i => true}), ((UInt16(UInt16(163))&127)..=(UInt16(UInt16(159))&127):(Int64(-44)|1)), UInt32(36), var_1713287353326_543)
        } finally { // block id: 545
            [r'W', r'f', r'F', r's', r'o', r'l', r's', r'2', r'h', r'1'];
            let var_1713287353326_569 : UInt16 = UInt16(217);
            (Class_1713287353326_174(), UInt16(90), [r'G', r'3', r's', r'R', r'O', r'E', r'6', r'T', r'V', r'E'], ((Int16(Int16(-17))&127)..=(Int16(var_1713287353326_554)&127):(Int64(-64)|1)), VArray<Bool, $8>(repeat: var_1713287353326_78), ((UInt16(var_1713287353326_569)&127)..=(UInt16(UInt16(251))&127):(Int64(-67)|1)), var_1713287353326_511, var_1713287353326_543)
        }[2];
        let var_1713287353326_579 : (Option<Bool>, UInt8, Float64, (Float32, Unit), Int16, Float64, Range<UInt64>, (Float32, Unit), UInt8) = ((UInt32(138) as Bool), UInt8(74), Float64(-38.0), (Float32(Float32(Float32(5.0))), ()), Int16(Int8(UInt8(Int8(109)))), Float64(Float64(-56.0)), ((UInt64(UInt64(71))&127)..=(UInt64(UInt64(3))&127):(Int64(7)|1)), (Float32(Float32(Float32(123.0))), ()), UInt8(Int8(-106)));
        var_1713287353326_579[4]
    }
;
    public prop var_1713287353326_336 : (Interface_1713287353326_177, UInt16, Array<Rune>, Range<Int16>, VArray<Bool, $8>, Range<UInt16>, UInt32, Int8) { // block id: 337
        get() { // block id: 339
            ();
            (Class_1713287353326_203(Option<Unit>.None, r'p', namedParam_1713287353326_346 : (Float32(-17.0), ())), UInt16(UInt16(175)), [r'A', r'p', r'E', r'n', r'T', r'y', r'T', r'A', r'a', r'x'], ((Int16(Int16(UInt8(77)))&127)..(Int16(Int16(UInt8(1)))&127):(Int64(-44)|1)), VArray<Bool, $8>({ i => true}), ((UInt16(UInt16(UInt8(16)))&127)..(UInt16(UInt16(Int8(-34)))&127):(Int64(35)|1)), UInt32(Int8(Int8(119))), Int8(-87))
        }

    };
    public static prop var_1713287353326_785 : UInt8 { // block id: 786
        get() { // block id: 788
            UInt8(Int8(Int8(UInt8(43))))
        }

    };
    public open override func func_1713287353326_825(param_1713287353326_826 : UInt8, namedParam_1713287353326_827 ! : UInt64) : Bool { // block id: 828
        var_1713287353326_835.var_1713287353326_838;
        var_1713287353326_78
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public open class Class_1713287353326_203 <: Class_1713287353326_174 {
    public init() { // block id: 205

    }
;
    public init(param_1713287353326_383 : Int8, param_1713287353326_384 : VArray<Bool, $8>, param_1713287353326_385 : Range<Int16>, param_1713287353326_386 : UInt16) { // block id: 387
        var var_1713287353326_398 : Bool = true;
        var var_1713287353326_414 : (Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>) = (((Int8(Int8(-20))&127)..=(Int8(Int8(-69))&127):(Int64(34)|1)), ((UInt64(UInt64(Int16(UInt16(134))))&127)..=(UInt64(UInt64(0))&127):(Int64(47)|1)), Int16(Int16(99)), ((Int64(Int64(Int16(Int8(23))))&127)..=(Int64(Int64(UInt8(79)))&127):(Int64(Int16(80))|1)), ((Int32(Int32(Int32(Int8(-18))))&127)..(Int32(Int32(Int32(UInt8(2))))&127):(Int64(41)|1)));
        var var_1713287353326_450 : ?(Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>) = (Enum_1713287353326_110.enumValue_1713287353326_113(UInt16(UInt16(Int8(102))), Int64(-12)) as (Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>));
        (match (Option<Bool>.Some(var_1713287353326_398)) {
            case _ => 
                if (false) { r'P' } else { var_1713287353326_407 } ;
                var_1713287353326_107;
                if (var_1713287353326_398) { Option<(Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>)>.Some(var_1713287353326_414) } else { Option<(Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>)>.Some(var_1713287353326_414) } 
            
            case _ => 
                ();
                if (var_1713287353326_78) { var_1713287353326_450 } else { var_1713287353326_450 } 
            
        } ?? Class_1713287353326_174.var_1713287353326_461)[3]
    }
;
    public init(param_1713287353326_344 : Option<Unit>, param_1713287353326_345 : Rune, namedParam_1713287353326_346 ! : (Float32, Unit)) { // block id: 347
        let var_1713287353326_641 : Option<Unit> = Option<Unit>.Some(());
        match (Class_1713287353326_174.func_1713287353326_352(optionalParam_1713287353326_367 : ###"Y\"egqEZ3:\\"###)) {
            case _ => 
                var_1713287353326_511 & UInt32(45);
                var var_1713287353326_613 : (Float32, Unit) = (Float32(112.0), ());
                var_1713287353326_613;
                var_1713287353326_543
            
            case 86 | -96 | -77 | -47 => 
                Int8(-30)
            
            case caseVar_1713287353326_624 => 
                var_1713287353326_543
            
            case _ => 
                if (true) { var_1713287353326_633 } else { var_1713287353326_641 } ;
                var_1713287353326_155++;
                var_1713287353326_543 ^ Int8(-56)
            
            case _ => 
                Int8(99)
            
        }
    }
;
    static let var_1713287353326_1114 : Rune;
    public open override func func_1713287353326_825(param_1713287353326_826 : UInt8, namedParam_1713287353326_827 ! : UInt64) : Bool { // block id: 828
        var_1713287353326_835.var_1713287353326_838;
        var_1713287353326_78
    }

    static init() {
        var_1713287353326_1114 = r'z'
    }
}


func func_1713287353326_207(optionalParam_1713287353326_208 ! : Option<Bool> = Option<Bool>.None, namedParam_1713287353326_210 ! : Enum_1713287353326_110, namedParam_1713287353326_211 ! : Unit, optionalParam_1713287353326_212 ! : Array<UInt64> = [UInt64(Int16(Int16(-31))), UInt64(245), UInt64(211), UInt64(84), UInt64(UInt16(155)), UInt64(Int64(5)), UInt64(164), UInt64(UInt32(217)), UInt64(23), UInt64(134)]) : Class_1713287353326_203 { // block id: 229
    (try { // block id: 236
        var var_1713287353326_240 : Option<Unit> = (Int8(Int8(16)) as Unit);
        if (false) { var_1713287353326_240 } else { Option<Unit>.Some(var_1713287353326_107) } 
    } finally { // block id: 246
        ();
        var var_1713287353326_251 : Option<Unit> = Option<Unit>.Some(());
        if (true) { var_1713287353326_251 } else { Option<Unit>.None } 
    } ?? ());
    const var_1713287353326_265 : UInt16 = 78;
    var var_1713287353326_278 : UInt = UInt64(225);
    var var_1713287353326_308 : (Float32, Unit) = (Float32(6.0), ());
    try { // block id: 257
        const var_1713287353326_270 : Int16 = 42;
        match (Enum_1713287353326_110.enumValue_1713287353326_260(((UInt16(var_1713287353326_265)&127)..(UInt16(UInt16(72))&127):(var_1713287353326_155|1)), var_1713287353326_270)) {
            case caseVar_1713287353326_274 : Range<Int32> => 
                ((UInt64(var_1713287353326_278)&127)..(UInt64(var_1713287353326_278)&127):(Int64(-89)|1));
                ();
                var_1713287353326_107
            
            case _ => 
                ();
                ()
            
        }
    } catch (_) { // block id: 289
        var loopTimeVar_1713287353326_294 : Int64 = 0;
        do {
            loopTimeVar_1713287353326_294++;

        } while ((false) && loopTimeVar_1713287353326_294 < 100 ) ;
        var loopTimeVar_1713287353326_304 : Int = 0;
        while ((false) && loopTimeVar_1713287353326_304 < 100 ) {
            loopTimeVar_1713287353326_304++;
            Float32(-72.0);
            var_1713287353326_300
        };
        var_1713287353326_308[1]
    };
    let var_1713287353326_314 : Class_1713287353326_203 = Class_1713287353326_203();
    var_1713287353326_314
}




public enum Enum_1713287353326_709 {
    defaultValue |
    enumValue_1713287353326_714(Range<UInt32>, Range<Int16>)
}

public func func_1713287353326_186(param_1713287353326_187 : Int16) : Class_1713287353326_174 { // block id: 188
    Float64(101.0);
    const var_1713287353326_325 : UInt = 150;
    let var_1713287353326_705 : Option<Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>> = (() as Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>);
    let var_1713287353326_712 : Enum_1713287353326_709 = Enum_1713287353326_709.enumValue_1713287353326_714(((UInt32(UInt32(218))&127)..(UInt32(UInt32(UInt16(149)))&127):(Int64(Int32(-96))|1)), ((Int16(Int16(109))&127)..(Int16(Int16(60))&127):(Int64(117)|1)));
    let var_1713287353326_749 : Interface_1713287353326_177 = Class_1713287353326_203();
    let var_1713287353326_753 : Class_1713287353326_174 = Class_1713287353326_203();
    func func_1713287353326_193(namedParam_1713287353326_194 ! : (Int32) -> Bool, namedParam_1713287353326_197 ! : Range<UInt16>) : (Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16) { // block id: 198
        var_1713287353326_107;
        func_1713287353326_207(namedParam_1713287353326_210 : Enum_1713287353326_110.enumValue_1713287353326_260(var_1713287353326_318, Int16(-10)), namedParam_1713287353326_211 : (), optionalParam_1713287353326_212 : [UInt64(56), var_1713287353326_325, UInt64(191), UInt64(28), UInt64(153), var_1713287353326_325, UInt64(38), var_1713287353326_325, UInt64(242), var_1713287353326_325]).var_1713287353326_336[3];
        var var_1713287353326_737 : Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)> = Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>.None;
        const var_1713287353326_746 : Float32 = 5.0;
        let var_1713287353326_757 : UInt16 = UInt16(31);
        ((var_1713287353326_705 ?? match (var_1713287353326_712) {
            case _ => 
                Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>.None
            
        }) ?? (if (var_1713287353326_78) { // block id: 735
            var_1713287353326_737
        } else { // block id: 739
            Option<(Float64, Float32, Interface_1713287353326_177, Class_1713287353326_174, Class_1713287353326_174, Bool, UInt16)>.None
        } ?? (var_1713287353326_743, var_1713287353326_746, var_1713287353326_749, Class_1713287353326_174(), var_1713287353326_753, false, var_1713287353326_757)))
    }
;
    var var_1713287353326_760 : (Int32) -> Bool = func_1713287353326_135;
    var var_1713287353326_765 : (Range<UInt16>, Int64) = (((UInt16(UInt16(UInt16(Int16(27))))&127)..(UInt16(UInt16(171))&127):(Int64(Int8(UInt8(119)))|1)), Int64(-5));
    func_1713287353326_193(namedParam_1713287353326_194 : var_1713287353326_760, namedParam_1713287353326_197 : var_1713287353326_765[0])[4]
}

sealed public interface Interface_1713287353326_833 {

}

public open class Class_1713287353326_830 <: Class_1713287353326_203 & Interface_1713287353326_833 & Interface_1713287353326_178 {
    public init() { // block id: 832

    }
;
    public prop var_1713287353326_838 : Unit { // block id: 839
        get() { // block id: 841
            """
L=Oel
6is%,
""";
            "91/h.DM2:(";
            ()
        }

    };
    public open override func func_1713287353326_825(param_1713287353326_826 : UInt8, namedParam_1713287353326_827 ! : UInt64) : Bool { // block id: 828
        var_1713287353326_835.var_1713287353326_838;
        var_1713287353326_78
    }

    static init() {
    }
}

public func func_1713287353326_168(namedParam_1713287353326_169 ! : UInt32, namedParam_1713287353326_170 ! : Rune) : Array<Range<UInt16>> { // block id: 171
    let var_1713287353326_779 : (Int16) -> Class_1713287353326_174 = func_1713287353326_186;
    func func_1713287353326_180(namedParam_1713287353326_181 ! : Array<Range<UInt16>>, namedParam_1713287353326_182 ! : Int16, namedParam_1713287353326_183 ! : Interface_1713287353326_177) : Class_1713287353326_174 { // block id: 184
        Int16((Class_1713287353326_174.var_1713287353326_785))|>var_1713287353326_779
    }
;
    if ((func_1713287353326_180(namedParam_1713287353326_181 : [var_1713287353326_318, ((UInt16(var_1713287353326_797)&127)..=(UInt16(var_1713287353326_797)&127):(Int64(-28)|1)), ((UInt16(UInt16(234))&127)..(UInt16(UInt16(119))&127):(Int64(-114)|1)), ((UInt16(UInt16(90))&127)..=(UInt16(var_1713287353326_797)&127):(Int64(4)|1)), ((UInt16(UInt16(46))&127)..=(UInt16(var_1713287353326_797)&127):(Int64(-76)|1)), var_1713287353326_318, var_1713287353326_318, ((UInt16(UInt16(171))&127)..=(UInt16(UInt16(53))&127):(Int64(-3)|1)), ((UInt16(UInt16(104))&127)..=(UInt16(UInt16(219))&127):(Int64(7)|1)), ((UInt16(UInt16(203))&127)..=(UInt16(UInt16(41))&127):(Int64(7)|1))], namedParam_1713287353326_182 : var_1713287353326_554, namedParam_1713287353326_183 : Class_1713287353326_203(Int8(20), var_1713287353326_88, ((Int16(Int16(85))&127)..=(Int16(Int16(28))&127):(Int64(-72)|1)), var_1713287353326_797)).func_1713287353326_825(UInt8(91), namedParam_1713287353326_827 : UInt64(239)))) { var_1713287353326_851[3] } else { match (var_1713287353326_946) {
        case _ => 
            ((UInt32(UInt32(22))&127)..(UInt32(UInt32(242))&127):(var_1713287353326_155|1))
        
        case _ => 
            Class_1713287353326_174();
            ((UInt32(UInt32(45))&127)..(UInt32(var_1713287353326_511)&127):(Int64(82)|1))
        
        case _ => 
            var_1713287353326_977;
            ();
            ((UInt32(UInt32(139))&127)..=(UInt32(UInt32(37))&127):(Int64(-100)|1))
        
    } } ;
    try (resource = Class_1713287353326_174()) { // block id: 991
        ();
        var_1713287353326_797 <<= ((UInt16(62)) & 7)
    } finally { // block id: 996

    };
    var var_1713287353326_1013 : UInt16 = UInt16(Int16(UInt8(Int8(Int8(-47)))));
    try { // block id: 1000
        UInt32(78);
        let var_1713287353326_1005 : Array<UInt64> = [UInt64(223), UInt64(232), UInt64(69), UInt64(112), UInt64(87), UInt64(131), UInt64(64), UInt64(160), UInt64(27), UInt64(141)];
        const var_1713287353326_1042 : UInt = 3;
        (var_1713287353326_554, var_1713287353326_1005, [var_1713287353326_318, ((UInt16(UInt16(189))&127)..(UInt16(UInt16(65))&127):(Int64(-38)|1)), ((UInt16(var_1713287353326_797)&127)..=(UInt16(var_1713287353326_1013)&127):(var_1713287353326_155|1)), var_1713287353326_318, ((UInt16(UInt16(122))&127)..(UInt16(UInt16(133))&127):(Int64(-58)|1)), var_1713287353326_318, ((UInt16(UInt16(188))&127)..=(UInt16(UInt16(235))&127):(Int64(-106)|1)), var_1713287353326_318, ((UInt16(UInt16(231))&127)..=(UInt16(UInt16(52))&127):(Int64(-93)|1)), ((UInt16(UInt16(196))&127)..=(UInt16(UInt16(105))&127):(Int64(60)|1))], Float32(-42.0), var_1713287353326_1032, [UInt64(16), UInt64(51), var_1713287353326_1042, UInt64(56), var_1713287353326_1042, var_1713287353326_1042, UInt64(236), UInt64(21), UInt64(7), var_1713287353326_1042], var_1713287353326_78)
    } finally { // block id: 1052
        Int8(-58);
        ();
        (Int16(47), [UInt64(113), var_1713287353326_1060, UInt64(43), var_1713287353326_1060, var_1713287353326_1060, var_1713287353326_1060, UInt64(212), UInt64(216), UInt64(163), var_1713287353326_1060], [var_1713287353326_318, ((UInt16(UInt16(230))&127)..(UInt16(UInt16(70))&127):(Int64(1)|1)), ((UInt16(var_1713287353326_1013)&127)..(UInt16(var_1713287353326_797)&127):(var_1713287353326_155|1)), var_1713287353326_318, var_1713287353326_318, var_1713287353326_318, ((UInt16(UInt16(197))&127)..=(UInt16(UInt16(110))&127):(Int64(-55)|1)), ((UInt16(UInt16(62))&127)..=(UInt16(UInt16(226))&127):(Int64(102)|1)), var_1713287353326_318, var_1713287353326_318], var_1713287353326_1091, var_1713287353326_1032, var_1713287353326_1095, false)
    }[2]
}


func func_1713287353326_162(param_1713287353326_163 : Int32) : Array<UInt64> { // block id: 164
    func_1713287353326_168(namedParam_1713287353326_169 : if (var_1713287353326_78) { // block id: 1101
        var_1713287353326_107;
        ();
        var_1713287353326_511 ^ var_1713287353326_511
    } else { // block id: 1107
        UInt8(163);
        ();
        var_1713287353326_511
    }, namedParam_1713287353326_170 : Class_1713287353326_203.var_1713287353326_1114)[1];
    let var_1713287353326_1136 : Option<Bool> = Option<Bool>.None;
    if (((UInt32(58), ((UInt32(UInt32(212))&127)..=(UInt32(UInt32(104))&127):(var_1713287353326_155|1)), Option<Bool>.Some(true))[2] ?? (var_1713287353326_1136 ?? var_1713287353326_1139))) { ((Int8(Int8(UInt8(126)))&127)..=(Int8(var_1713287353326_543)&127):(Int64(var_1713287353326_511)|1)) } else { (if (var_1713287353326_1139) { ((Int8(var_1713287353326_543)&127)..(Int8(Int8(56))&127):(var_1713287353326_155|1)) } else { var_1713287353326_1156[6] } ) } ;
    (Option<Bool>.None, ((Int64(Int64(-15))&127)..=(Int64(Int64(55))&127):(Int64(-121)|1)), try { // block id: 1202
        Class_1713287353326_830();
        [UInt64(181), UInt64(1), UInt64(133), UInt64(44), UInt64(173), UInt64(195), UInt64(178), UInt64(115), UInt64(55), UInt64(70)]
    } finally { // block id: 1205
        [UInt64(31), UInt64(8), var_1713287353326_1060, UInt64(79), var_1713287353326_1060, UInt64(86), UInt64(229), var_1713287353326_1060, var_1713287353326_1060, var_1713287353326_1060]
    })[2]
}

public func func_1713287353326_54(param_1713287353326_55 : Unit) : Array<Rune> { // block id: 56
    var var_1713287353326_71 : UInt16 = UInt16(238);
    var loopTimeVar_1713287353326_131 : Int = 0;
    do {
        loopTimeVar_1713287353326_131++;
        var var_1713287353326_98 : Option<Unit> = (Option<Bool>.Some((((Int64(Int64(62))&127)..=(Int64(Int64(115))&127):(Int64(-81)|1)) is Range<UInt64>)) as Unit);
        (var_1713287353326_98 ?? var_1713287353326_107);
        var var_1713287353326_125 : Range<UInt16> = ((UInt16(UInt16(26))&127)..(UInt16(UInt16(116))&127):(Int64(70)|1));
        match (Enum_1713287353326_110.enumValue_1713287353326_113(var_1713287353326_71, Int64(-13))) {
            case _ => 
                if (var_1713287353326_78) { ((UInt16(UInt16(13))&127)..(UInt16(UInt16(106))&127):(Int64(116)|1)) } else { var_1713287353326_125 } 
            
        }
    } while (((try { // block id: 64
        let var_1713287353326_66 : Option<Bool> = Option<Bool>.None;
        var_1713287353326_66
    } catch (_) { // block id: 68
        var_1713287353326_71--;
        UInt8(60) & UInt8(41);
        let var_1713287353326_82 : Option<Bool> = (UInt16(123) as Bool);
        if (var_1713287353326_78) { Option<Bool>.None } else { var_1713287353326_82 } 
    } ?? var_1713287353326_88[1])) && loopTimeVar_1713287353326_131 < 100 ) ;
    let var_1713287353326_140 : (Int32) -> Bool = func_1713287353326_135;
    const var_1713287353326_143 : Int32 = 80;
    let var_1713287353326_1264 : VArray<Bool, $8> = [false, (Class_1713287353326_203() is Rune), true, (Float32(Float32(-24.0)) is Rune), (r'U' is Range<UInt16>), (UInt64(36) is (Int16) -> Int64), (((Class_1713287353326_203(Int8(-104), VArray<Bool, $8>({ i => true}), ((Int16(Int16(36))&127)..(Int16(Int16(58))&127):(Int64(100)|1)), UInt16(4)), (Float32(-57.0), ()), Class_1713287353326_830(), ((UInt32(UInt32(125))&127)..(UInt32(UInt32(151))&127):(Int64(-31)|1)), VArray<Bool, $8>({ i => false}), (Class_1713287353326_203(Int8(81), VArray<Bool, $8>({ i => false}), ((Int16(Int16(51))&127)..=(Int16(Int16(-34))&127):(Int64(-94)|1)), UInt16(102)), UInt16(103), [r'n', r'O', r'D', r'Q', r'3', r'N', r'B', r'h', r'D', r'q'], ((Int16(Int16(45))&127)..(Int16(Int16(-88))&127):(Int64(-115)|1)), VArray<Bool, $8>({ i => false}), ((UInt16(UInt16(103))&127)..=(UInt16(UInt16(85))&127):(Int64(-116)|1)), UInt32(33), Int8(106)), (((Int8(Int8(15))&127)..=(Int8(Int8(39))&127):(Int64(105)|1)), ((UInt64(UInt64(230))&127)..(UInt64(UInt64(61))&127):(Int64(115)|1)), Int16(12), ((Int64(Int64(6))&127)..=(Int64(Int64(67))&127):(Int64(116)|1)), ((Int32(Int32(43))&127)..=(Int32(Int32(55))&127):(Int64(-112)|1)))) as Bool) is (Option<Bool>, Enum_1713287353326_110, Unit, Array<UInt64>) -> Class_1713287353326_203), ((((Int8(Int8(73))&127)..(Int8(Int8(38))&127):(Int64(-26)|1)), ((UInt64(UInt64(231))&127)..=(UInt64(UInt64(139))&127):(Int64(118)|1)), Int16(UInt16(226)), ((Int64(Int64(-72))&127)..=(Int64(Int64(60))&127):(Int64(-94)|1)), ((Int32(Int32(-98))&127)..=(Int32(Int32(40))&127):(Int64(113)|1))) is Class_1713287353326_203)];
    var var_1713287353326_1516 : Int16 = Int16(Int8(100));
    if (if ((var_1713287353326_143|>var_1713287353326_140)) { // block id: 145
        var_1713287353326_78
    } else if (try { // block id: 148
        true
    } finally { // block id: 150
        var_1713287353326_78
    }) { // block id: 152
        var_1713287353326_155++;
        true
    } else { // block id: 158
        true
    }) { // block id: 160
        var_1713287353326_1032|>func_1713287353326_162;
        match (var_1713287353326_1222) {
            case caseVar_1713287353326_1226 : (Interface_1713287353326_177, (Float32, Unit), Class_1713287353326_203, Range<UInt32>, VArray<Bool, $8>, (Interface_1713287353326_177, UInt16, Array<Rune>, Range<Int16>, VArray<Bool, $8>, Range<UInt16>, UInt32, Int8), (Range<Int8>, Range<UInt64>, Int16, Range<Int64>, Range<Int32>)) => 
                ();
                var_1713287353326_107;
                [var_1713287353326_407, r'Z', var_1713287353326_407, r'f', var_1713287353326_407, r'7', r'E', var_1713287353326_407, r'x', r't']
            
            case caseVar_1713287353326_1243 : VArray<Bool, $8> => 
                if (false) { var_1713287353326_1248 } else { Class_1713287353326_203() } ;
                (Float32(-88.0), var_1713287353326_107);
                var_1713287353326_1255
            
            case _ => 
                if (true) { var_1713287353326_88 } else { var_1713287353326_1264 } ;
                var_1713287353326_1060 &= var_1713287353326_1060;
                [r'W', var_1713287353326_407, var_1713287353326_407, r'F', var_1713287353326_407, r'F', r'P', var_1713287353326_407, r'H', var_1713287353326_407]
            
        }
    } else if (false) { // block id: 1396
        [[r'S', r'Z', r'7', r'A', r'e', r'5', r'N', r'D', r'v', r'g'], [r'R', r'Q', r'P', r'v', r'C', r'k', r'r', r'I', r'd', r'j'], [r'o', r'z', r'K', r'H', r'j', r'J', r'Q', r'q', r'S', r'R'], [r'q', r'y', r'k', r'E', r'M', r'3', r'L', r'k', r'T', r'C'], [r'7', r'e', r'V', r'9', r'j', r'A', r'b', r'B', r'L', r'Z'], [r'H', r'4', r'j', r'w', r'q', r'V', r't', r's', r'E', r'H'], [r'3', r'7', r'V', r'e', r'n', r'f', r'S', r'd', r'x', r'b'], [r'z', r'w', r'H', r'K', r'G', r'U', r'Y', r'1', r'0', r'V'], [r'h', r'N', r'C', r'I', r'E', r'H', r'o', r'1', r'y', r'v'], [r'l', r'r', r'w', r'U', r'p', r'0', r'Y', r'6', r'3', r'b']][1]
    } else { // block id: 1401
        let var_1713287353326_1404 : Interface_1713287353326_178 = Class_1713287353326_203(Int8(UInt8(37)), VArray<Bool, $8>({ i => false}), ((Int16(Int16(Int16(121)))&127)..=(Int16(Int16(-109))&127):(Int64(22)|1)), UInt16(213));
        match (var_1713287353326_1404) {
            case _ => 
                var_1713287353326_1516 ^= var_1713287353326_554;
                [r'C', r'y', r'6', r'o', r'u', r'H', r'v', r'D', r'J', r'X'];
                var_1713287353326_1255
            
        }
    }
}

main(): Int64 {
    try {
        let var_1713287353326_1523 : (Unit) -> Array<Rune> = func_1713287353326_54;
        (()|>var_1713287353326_1523)[8]|>(func_1713287353326_37~>func_1713287353326_32)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1713287353326_24*var_1713287353326_24), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1713287353326_174 {

}

