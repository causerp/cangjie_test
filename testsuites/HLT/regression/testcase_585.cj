/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

const var_1710170113819_44 : Unit = ()
public let var_1710170113819_76 : Class_1710170113819_72 = Class_1710170113819_72()
public const var_1710170113819_107 : Bool = false
public let var_1710170113819_117 : Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)> = Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.None
public var var_1710170113819_206 : Class_1710170113819_72 = Class_1710170113819_72()
public var var_1710170113819_210 : Int8 = Int8(UInt8(193))
var var_1710170113819_291 : Float32 = Float32(Float32(Float32(73.0)))
let var_1710170113819_297 : Float64 = Float64(-44.0)
public let var_1710170113819_306 : Option<Unit> = (r'c' as Unit)
public const var_1710170113819_330 : Int16 = 121
public var var_1710170113819_334 : Int64 = Int64(-23)
let var_1710170113819_411 : (Bool, Option<Class_1710170113819_269>) = ((Class_1710170113819_72() is UInt64), Option<Class_1710170113819_269>.None)
var var_1710170113819_428 : ?Bool = Option<Bool>.None
public var var_1710170113819_431 : (Int8, UInt32) = (Int8(Int8(-18)), UInt32(UInt16(Int8(Int8(-37)))))
public const var_1710170113819_448 : String = "Rp?WLS`#`E"
public let var_1710170113819_536 : (VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8) = (VArray<Float64, $1>({ i => Float64(117.0)}), (Option<Unit>.None, (Class_1710170113819_223() as Bool), (Int8(-19), UInt32(181)), (Int8(UInt8(79)), (), (UInt16(166), Int16(53), Float32(-113.0), Int64(-78), """
BWVa$
FM${var_1710170113819_448}ue${var_1710170113819_448}h
""", r'G')), Float64(96.0)), ((Class_1710170113819_223() as Unit), (((UInt32(UInt32(43))&127)..=(UInt32(UInt32(92))&127):(Int64(66)|1)) as Bool), (Int8(57), UInt32(UInt8(177))), (Int8(Int8(9)), (), (UInt16(71), Int16(-79), Float32(62.0), Int64(111), "Xna{X${var_1710170113819_448} I8${var_1710170113819_448}e+5", r'3')), Float64(112.0)), ((UInt64(UInt64(190))&127)..(UInt64(UInt64(173))&127):(Int64(-111)|1)), Int8(Int8(UInt8(81))))
const var_1710170113819_693 : Rune = r'b'
let var_1710170113819_733 : (Option<Unit>, (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String), (UInt16, Int16, Float32, Int64, String, Rune), Array<VArray<Unit, $8>>) = (Option<Unit>.None, ((), "P${var_1710170113819_448}2${var_1710170113819_448}a{RE5${var_1710170113819_448}gqTb", UInt64(231), (UInt16(183), Int16(Int8(-19)), Float32(63.0), Int64(-2), ###"#)?`${var_1710170113819_448}.T3${var_1710170113819_448}X${var_1710170113819_448}W]"###, r'J'), Int64(58), "=:3${var_1710170113819_448}7*0d${var_1710170113819_448}a{:`${var_1710170113819_448}"), (UInt16(Int16(UInt16(226))), Int16(Int8(UInt8(164))), Float32(44.0), Int64(Int16(64)), ###"XaF${var_1710170113819_448}B'KY${var_1710170113819_448}c${var_1710170113819_448}&${var_1710170113819_448}2"###, r'1'), [VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()})])
let var_1710170113819_1037 : Array<VArray<Unit, $8>> = [[(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), ()]]
var var_1710170113819_1054 : Bool = ((Class_1710170113819_223() as Bool) is UInt64)
public var var_1710170113819_1085 : Array<Array<UInt64>> = [[UInt64(UInt32(UInt16(171))), UInt64(98), UInt64(199), UInt64(82), UInt64(143), UInt64(Int8(UInt8(59))), UInt64(214), UInt64(90), UInt64(38), UInt64(21)], [UInt64(Int8(-1)), UInt64(188), UInt64(UInt64(10)), UInt64(20), UInt64(Int16(-75)), UInt64(65), UInt64(UInt16(230)), UInt64(UInt32(Int8(-14))), UInt64(220), UInt64(UInt16(152))], [UInt64(87), UInt64(155), UInt64(50), UInt64(160), UInt64(90), UInt64(159), UInt64(84), UInt64(202), UInt64(181), UInt64(236)], [UInt64(83), UInt64(243), UInt64(UInt64(Int8(-113))), UInt64(UInt64(45)), UInt64(150), UInt64(194), UInt64(Int16(-127)), UInt64(193), UInt64(UInt16(52)), UInt64(Int8(-47))], [UInt64(125), UInt64(1), UInt64(200), UInt64(102), UInt64(51), UInt64(99), UInt64(179), UInt64(34), UInt64(141), UInt64(239)], [UInt64(Int32(Int8(46))), UInt64(Int32(-18)), UInt64(56), UInt64(UInt16(218)), UInt64(199), UInt64(253), UInt64(Int64(124)), UInt64(UInt32(UInt16(31))), UInt64(118), UInt64(236)], [UInt64(47), UInt64(105), UInt64(Int16(-73)), UInt64(Int8(50)), UInt64(141), UInt64(124), UInt64(UInt64(UInt64(145))), UInt64(UInt32(37)), UInt64(228), UInt64(188)], [UInt64(248), UInt64(121), UInt64(5), UInt64(156), UInt64(117), UInt64(52), UInt64(246), UInt64(121), UInt64(47), UInt64(55)], [UInt64(UInt32(Int32(73))), UInt64(Int8(UInt8(10))), UInt64(Int32(UInt32(146))), UInt64(229), UInt64(Int64(UInt32(178))), UInt64(UInt16(UInt16(99))), UInt64(189), UInt64(111), UInt64(Int8(Int8(29))), UInt64(Int64(121))], [UInt64(161), UInt64(21), UInt64(UInt16(8)), UInt64(UInt64(Int64(82))), UInt64(UInt64(101)), UInt64(149), UInt64(245), UInt64(195), UInt64(43), UInt64(Int16(Int8(-39)))]]
let var_1710170113819_1309 : VArray<Unit, $8> = [(), (), (), (), (), (), (), ()]
public let var_1710170113819_1374 : Unit = ()
public let var_1710170113819_1708 : Unit = ()
public var var_1710170113819_1750 : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String) = ((), """
z2F8s
ix4${var_1710170113819_448}3q
""", UInt64(215), (UInt16(UInt8(100)), Int16(Int16(Int16(-102))), Float32(Float32(11.0)), Int64(UInt64(159)), "R<wVVTuNd\\", r'P'), Int64(Int16(UInt16(UInt8(225)))), """
GP^>%
S${var_1710170113819_448}@#oY
""")
public let var_1710170113819_1773 : (UInt16, Int16, Float32, Int64, String, Rune) = (UInt16(76), Int16(-124), Float32(Float32(97.0)), Int64(UInt64(Int8(UInt8(152)))), ###"|^*,mwa}pj"###, r'U')
public var var_1710170113819_1829 : ?Array<VArray<Unit, $8>> = (Class_1710170113819_223() as Array<VArray<Unit, $8>>)
public let var_1710170113819_2020 : Range<UInt32> = ((UInt32(UInt32(79))&127)..(UInt32(UInt32(20))&127):(Int64(-78)|1))
let var_1710170113819_2035 : ?Class_1710170113819_269 = Option<Class_1710170113819_269>.None
public let var_1710170113819_2087 : ?Interface_1710170113819_226 = (Float32(36.0) as Interface_1710170113819_226)
const var_1710170113819_2129 : Unit = ()
let var_1710170113819_2136 : Array<UInt64> = [UInt64(161), UInt64(176), UInt64(103), UInt64(232), UInt64(14), UInt64(2), UInt64(55), UInt64(248), UInt64(18), UInt64(99)]
public var var_1710170113819_2142 : UInt64 = UInt64(145)
var var_1710170113819_2476 : Interface_1710170113819_230<Unit, Interface_1710170113819_229<Bool>> = Class_1710170113819_223()
var var_1710170113819_2601 : Option<UInt32> = (UInt32(146) as UInt32)
var var_1710170113819_2605 : UInt32 = UInt32(1)
public var var_1710170113819_2875 : UInt32 = UInt32(UInt8(213))
let var_1710170113819_2880 : ?(VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8) = (((false, (UInt8(186) as Class_1710170113819_269)) is Class_1710170113819_72) as (VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8))
var var_1710170113819_2913 : (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64) = (((Float64(-51.0) as (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)) as Unit), Option<Bool>.None, (Int8(UInt8(Int8(20))), UInt32(191)), (Int8(UInt8(Int8(-69))), (), (UInt16(Int16(-116)), Int16(80), Float32(Float32(93.0)), Int64(78), "SE6_qLHV$${var_1710170113819_448}$", r'v')), Float64(Float64(-24.0)))
let var_1710170113819_3020 : String = "%V:\\:b0${var_1710170113819_448}o%$"
var var_1710170113819_3027 : ?(UInt16, Int16, Float32, Int64, String, Rune) = Option<(UInt16, Int16, Float32, Int64, String, Rune)>.None
public let var_1710170113819_3071 : Range<UInt64> = ((UInt64(UInt64(87))&127)..(UInt64(UInt64(38))&127):(Int64(54)|1))

public func func_1710170113819_11(param_1710170113819_12 : Int8) : Option<Bool> { // block id: 13
    let var_1710170113819_20 : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String) = ((), """
gfue<
xR_Ar
""", UInt64(39), (UInt16(UInt16(Int16(-40))), Int16(114), Float32(49.0), Int64(UInt32(UInt16(3))), "(ZIODR5:e0", r'B'), Int64(-1), "r\\aR#/$$\"r");
    match (var_1710170113819_20[3][4]) {
        case "bwe))YxVyd" | " JRr]-Ro;w" | """
|X>du
;K1`&
""" | ###">$>&^w_N36"### => 
            var_1710170113819_44;
            Option<Bool>.None
        
        case _ => 
            ();
            var var_1710170113819_54 : Int8 = Int8(68);
            Int8(-103) - var_1710170113819_54;
            var var_1710170113819_60 : Bool = false;
            if (false) { Option<Bool>.Some(var_1710170113819_60) } else { Option<Bool>.Some(false) } 
        
    }
}

public open class Class_1710170113819_72 <: Resource {
    public init() { // block id: 74

    }
;
    prop var_1710170113819_79 : (Int8, UInt32) { // block id: 80
        get() { // block id: 82
            ();
            UInt8(28);
            (Int8(UInt8(52)), UInt32(81))
        }

    };
    protected var var_1710170113819_703 : UInt16 = UInt16(205);
    public static let var_1710170113819_1028 : (UInt16, Int16, Float32, Int64, String, Rune);
    prop var_1710170113819_1067 : Array<UInt64> { // block id: 1068
        get() { // block id: 1070
            [UInt64(194), UInt64(96), UInt64(131), UInt64(33), UInt64(180), UInt64(229), UInt64(171), UInt64(31), UInt64(241), UInt64(40)]
        }

    };
    public func func_1710170113819_216(param_1710170113819_890 : Array<UInt64>, param_1710170113819_891 : (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), param_1710170113819_892 : Interface_1710170113819_226) : Unit { // block id: 893
        var var_1710170113819_901 : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String) = ((), """
@JL\"Q
-4r}j
""", UInt64(123), (UInt16(UInt8(214)), Int16(Int16(Int16(-123))), Float32(Float32(Float32(-124.0))), Int64(-7), "bB:>(iXGr8", r'z'), Int64(Int8(-59)), "p,bnKa{Zvx)");
        const var_1710170113819_1048 : UInt32 = 123;
        var var_1710170113819_1074 : Int32 = Int32(34);
        match (try { // block id: 896
            ();
            let var_1710170113819_929 : Array<VArray<Unit, $8>> = [VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()})];
            (var_1710170113819_306, var_1710170113819_901, (var_1710170113819_703, var_1710170113819_330, Float32(-105.0), Int64(6), "8;_<MKQzBN", r'0'), var_1710170113819_929)
        } finally { // block id: 1021
            let var_1710170113819_1024 : Option<Unit> = Option<Unit>.None;
            (var_1710170113819_1024, var_1710170113819_901, var_1710170113819_1028, var_1710170113819_1037)
        }) {
            case (caseVar_1710170113819_1041,(_,_,caseVar_1710170113819_1042 : Option<Bool>,(_ : Array<VArray<Unit, $8>>,_,_ : UInt32,_,_ : Array<Unit>,caseVar_1710170113819_1043 : Int32),_,_ : Option<Unit>),caseVar_1710170113819_1044 : (UInt16, (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Rune, Float64, Unit),_ : (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64)) => 
                var_1710170113819_1048 ^ var_1710170113819_1048;
                ();
                var_1710170113819_1054 = var_1710170113819_107
            
            case (caseVar_1710170113819_1061,caseVar_1710170113819_1062 : Option<Unit>,caseVar_1710170113819_1063 : Array<UInt64>,caseVar_1710170113819_1064) => 
                var_1710170113819_1067;
                var_1710170113819_1074 /= ((var_1710170113819_1074) | 1)
            
            case _ => 
                ()
            
        };
        ()
    }
;
    private func func_1710170113819_239<T0, T1>(param_1710170113819_240 : UInt64) : Interface_1710170113819_228 { // block id: 241
        var loopTimeVar_1710170113819_267 : Int64 = 0;
        do {
            loopTimeVar_1710170113819_267++;
            var_1710170113819_44
        } while (((Option<Bool>.Some(false) ?? match (Option<Unit>.Some(())) {
            case _ => 
                var var_1710170113819_258 : UInt32 = UInt32(UInt32(UInt8(105)));
                var_1710170113819_258 /= ((UInt32(3)) | 1);
                false
            
        })) && loopTimeVar_1710170113819_267 < 100 ) ;
        let var_1710170113819_395 : Interface_1710170113819_233 = Class_1710170113819_223(((Class_1710170113819_223(namedParam_1710170113819_515 : Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.Some(((), "CcTY$=+scQ", UInt64(21), (UInt16(150), Int16(80), Float32(98.0), Int64(82), ###"RQtUe*|j<X"###, r'9'), Int64(-49), "nUrD_U0SBr")), optionalParam_1710170113819_516 : Option<(UInt16, Int16, Float32, Int64, String, Rune)>.Some((UInt16(142), Int16(-72), Float32(-80.0), Int64(115), ###"B~6p6`7.=Q"###, r'd')), optionalParam_1710170113819_527 : r'b') as Bool) as Unit), optionalParam_1710170113819_399 : (Int8(-111), UInt32(Int8(Int8(19)))), namedParam_1710170113819_403 : Float64(Float32(-24.0)), namedParam_1710170113819_404 : Option<Unit>.None);
        var var_1710170113819_684 : UInt32 = UInt32(92);
        let var_1710170113819_866 : (Int8) -> Option<Bool> = func_1710170113819_11;
        let var_1710170113819_869 : (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)) = (Int8(Int8(Int8(Int8(-73)))), (), (UInt16(125), Int16(UInt16(Int16(17))), Float32(Float32(Float32(-93.0))), Int64(-49), "((\" ?sgxR@", r'W'));
        var var_1710170113819_1219 : (VArray<Float64, $1>, Unit, Int64, UInt32, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Interface_1710170113819_233, Option<Bool>, (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String), Interface_1710170113819_226) = (VArray<Float64, $1>(repeat: Float64(Float32(16.0))), (), Int64(-14), UInt32(76), (((VArray<Float64, $1>({ i => Float64(20.0)}), (), Int64(23), UInt32(70), (Option<Unit>.Some(()), Option<Bool>.Some(false), (Int8(-38), UInt32(138)), (Int8(-37), (), (UInt16(194), Int16(-122), Float32(36.0), Int64(-62), ">#jk[1Su(0", r'y')), Float64(-59.0)), Class_1710170113819_223(false), Option<Bool>.Some(true), ((), "BjE~E(n[Y/", UInt64(215), (UInt16(131), Int16(23), Float32(109.0), Int64(-92), "Tf-68~,/hk", r'z'), Int64(54), """
\"? bQ
f}f3V
"""), Class_1710170113819_223(((Int8(Int8(98))&127)..(Int8(Int8(37))&127):(Int64(35)|1)), UInt8(51))) as Unit), Option<Bool>.None, (Int8(Int8(101)), UInt32(Int16(-32))), (Int8(-60), (), (UInt16(26), Int16(-30), Float32(-17.0), Int64(-87), """
h4B\\n
Hy^pA
""", r'G')), Float64(Float64(-87.0))), Class_1710170113819_223(((UInt16(UInt16(UInt16(29)))&127)..(UInt16(UInt16(UInt16(93)))&127):(Int64(100)|1)), namedParam_1710170113819_1440 : ((), """
moRxw
Onfip
""", UInt64(Int16(75)), (UInt16(216), Int16(79), Float32(-45.0), Int64(-24), """
7%)pm
='r$+
""", r'H'), Int64(Int64(71)), "Qr'hVdyTF/'")), ((UInt64(37) is Array<Array<UInt64>>) as Bool), ((), "j3 i4dh.US", UInt64(UInt32(UInt8(176))), (UInt16(36), Int16(4), Float32(89.0), Int64(Int32(-71)), "Qvs>NOoj!=", r'7'), Int64(-38), "jFWV}}s7vv"), Class_1710170113819_223(((Int64(Int64(40))&127)..(Int64(Int64(-30))&127):(Int64(-92)|1))));
        let var_1710170113819_2091 : Interface_1710170113819_226 = Class_1710170113819_223(Option<Bool>.None, Option<(Int8, UInt32)>.Some((Int8(UInt8(49)), UInt32(Int8(50)))), ((UInt16(UInt16(75))&127)..(UInt16(UInt16(221))&127):(Int64(-59)|1)));
        func_1710170113819_273(try { // block id: 385
            Float64(94.0) - var_1710170113819_297
        } finally { // block id: 389
            ();
            Option<Bool>.None;
            Float64(103.0)
        }, match (var_1710170113819_395) {
            case _ : Option<(UInt16, Int16, Float32, Int64, String, Rune)> => 
                var_1710170113819_684;
                r'7'
            
            case _ => 
                if (true) { var_1710170113819_693 } else { var_1710170113819_693 } 
            
        }, namedParam_1710170113819_276 : match (Int8(-86)) {
            case _ => 
                var_1710170113819_703 & var_1710170113819_703
            
        }, namedParam_1710170113819_277 : Class_1710170113819_223(var_1710170113819_866, namedParam_1710170113819_720 : var_1710170113819_869, optionalParam_1710170113819_721 : func_1710170113819_11)).func_1710170113819_216(var_1710170113819_1085[0], var_1710170113819_1219[4], (var_1710170113819_2087 ?? var_1710170113819_2091));
        var var_1710170113819_2108 : Interface_1710170113819_228 = Class_1710170113819_223(func_1710170113819_11, ((Int64(Int64(Int64(30)))&127)..=(Int64(Int64(86))&127):(Int64(6)|1)));
        var_1710170113819_2108
    }
;
    public let var_1710170113819_2484 : UInt32 = UInt32(182);
    private mut prop var_1710170113819_3032 : Int16 { // block id: 3033
        get() { // block id: 3035
            ();
            Int16(56);
            var_1710170113819_3106
        }

        set(Value) { // block id: 3040
            var_1710170113819_3106 = Value
        }

    };
    public func func_1710170113819_235(namedParam_1710170113819_236 ! : Rune) : Class_1710170113819_223 { // block id: 237
        var var_1710170113819_2481 : Int8 = Int8(21);
        func_1710170113819_239<Int32, Array<UInt64>>(try { // block id: 2469
            var_1710170113819_210 |= var_1710170113819_210;
            var_1710170113819_2142
        } catch (e: Exception) { // block id: 2474
            var_1710170113819_2476;
            Option<(Int8, UInt32)>.Some((var_1710170113819_2481, var_1710170113819_2484));
            UInt64(137)
        } finally { // block id: 2487
            UInt64(5) & UInt64(77)
        });
        let var_1710170113819_2501 : Interface_1710170113819_226 = Class_1710170113819_223(namedParam_1710170113819_2547 : [false, false, true, false, true, true, false, false, true, true]);
        var loopTimeVar_1710170113819_2654 : Range<UInt64> = ((UInt64(UInt64(48))&127)..=(UInt64(UInt64(Int64(UInt32(125))))&127):(Int64(-16)|1));
        for (i in loopTimeVar_1710170113819_2654 where match ((Option<Option<Interface_1710170113819_226>>.None ?? Option<Interface_1710170113819_226>.Some(var_1710170113819_2501))) {
            case caseVar_1710170113819_2646 => 
                var_1710170113819_107
            
            case _ => 
                var_1710170113819_107
            
        }) {

        };
        var var_1710170113819_2823 : ?Class_1710170113819_223 = (Option<Option<Interface_1710170113819_226>>.None as Class_1710170113819_223);
        (try { // block id: 2667
            let var_1710170113819_2669 : ?Class_1710170113819_223 = Option<Class_1710170113819_223>.Some(Class_1710170113819_223(optionalParam_1710170113819_2699 : [[UInt64(200), UInt64(100), UInt64(80), UInt64(129), UInt64(117), UInt64(116), UInt64(185), UInt64(190), UInt64(7), UInt64(52)], [UInt64(177), UInt64(135), UInt64(90), UInt64(68), UInt64(138), UInt64(7), UInt64(20), UInt64(181), UInt64(233), UInt64(166)], [UInt64(160), UInt64(74), UInt64(78), UInt64(107), UInt64(76), UInt64(162), UInt64(114), UInt64(5), UInt64(244), UInt64(181)], [UInt64(249), UInt64(161), UInt64(43), UInt64(10), UInt64(201), UInt64(146), UInt64(164), UInt64(142), UInt64(177), UInt64(151)], [UInt64(22), UInt64(31), UInt64(197), UInt64(154), UInt64(244), UInt64(127), UInt64(138), UInt64(173), UInt64(107), UInt64(0)], [UInt64(233), UInt64(131), UInt64(91), UInt64(225), UInt64(56), UInt64(174), UInt64(41), UInt64(175), UInt64(110), UInt64(169)], [UInt64(213), UInt64(183), UInt64(52), UInt64(73), UInt64(188), UInt64(90), UInt64(106), UInt64(199), UInt64(147), UInt64(52)], [UInt64(93), UInt64(22), UInt64(209), UInt64(215), UInt64(32), UInt64(183), UInt64(144), UInt64(166), UInt64(175), UInt64(205)], [UInt64(170), UInt64(44), UInt64(221), UInt64(157), UInt64(208), UInt64(246), UInt64(254), UInt64(100), UInt64(166), UInt64(50)], [UInt64(185), UInt64(27), UInt64(154), UInt64(165), UInt64(71), UInt64(134), UInt64(221), UInt64(4), UInt64(78), UInt64(218)]], namedParam_1710170113819_2794 : (), namedParam_1710170113819_2795 : Float64(Float32(-5.0))));
            var_1710170113819_2669
        } finally { // block id: 2817
            var_1710170113819_210 |= Int8(-26);
            ();
            var_1710170113819_2823
        } ?? Class_1710170113819_223(((), "~5pJ~+s+-}", var_1710170113819_2142, (var_1710170113819_703, Int16(62), Float32(1.0), var_1710170113819_334, var_1710170113819_3020, var_1710170113819_693), var_1710170113819_334, var_1710170113819_448), (var_1710170113819_3027 ?? (var_1710170113819_703, var_1710170113819_3032, Float32(34.0), Int64(48), var_1710170113819_3020, r'B'))))
    }
;
    protected static const var_1710170113819_3060 : Unit = ();
    public func func_1710170113819_216<T0>(param_1710170113819_217 : Option<Bool>, param_1710170113819_218 : UInt16, param_1710170113819_219 : Int64, param_1710170113819_220 : Int64) : Unit { // block id: 221
        Class_1710170113819_223.var_1710170113819_3060
    }
;
    var var_1710170113819_3106 : Int16 = Int16(117)
    static init() {
        var_1710170113819_1028 = (UInt16(172), Int16(116), Float32(101.0), Int64(-49), "MElRP]ugFQ", r'E')
    }
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}



public interface Interface_1710170113819_229<T0> {

}

public interface Interface_1710170113819_232 {

}

sealed public interface Interface_1710170113819_231 <: Interface_1710170113819_229<Bool> & Interface_1710170113819_232 {

}

sealed public interface Interface_1710170113819_230<T0, T1> <: Interface_1710170113819_229<Bool> & Interface_1710170113819_231 {

}

public interface Interface_1710170113819_228 <: Interface_1710170113819_229<Bool> & Interface_1710170113819_230<Unit, Interface_1710170113819_229<Bool>> {

}

public interface Interface_1710170113819_233 <: Interface_1710170113819_229<Bool> {

}

sealed public interface Interface_1710170113819_227 <: Interface_1710170113819_228 & Interface_1710170113819_233 {

}

public interface Interface_1710170113819_226 <: Interface_1710170113819_227 {

}

public open class Class_1710170113819_223 <: Class_1710170113819_72 & Interface_1710170113819_226 {
    public init() { // block id: 225

    }
;
    init(param_1710170113819_398 : Option<Unit>, optionalParam_1710170113819_399 ! : (Int8, UInt32) = (Int8(-86), UInt32(149)), namedParam_1710170113819_403 ! : Float64, namedParam_1710170113819_404 ! : Option<Unit>) { // block id: 405
        if ((var_1710170113819_411[0] && if (var_1710170113819_107) { // block id: 419
            var_1710170113819_107
        } else { // block id: 421
            var_1710170113819_107
        })) { (Option<Unit>.None, var_1710170113819_428, var_1710170113819_431, (var_1710170113819_210, var_1710170113819_44, (UInt16(174), var_1710170113819_330, Float32(74.0), var_1710170113819_334, var_1710170113819_448, r'u')), Float64(-102.0))[0] } else { try { // block id: 454
            Class_1710170113819_269();
            var_1710170113819_306;
            if (false) { Option<Unit>.Some(()) } else { var_1710170113819_306 } 
        } finally { // block id: 462
            false;
            var_1710170113819_44;
            var_1710170113819_306
        } } ;
        let var_1710170113819_504 : VArray<Float64, $1> = [Float64(Float32(Float32(-84.0)))];
        match (if (var_1710170113819_107) { // block id: 480
            ((Int32(Int32(87))&127)..=(Int32(Int32(-5))&127):(Int64(47)|1));
            let var_1710170113819_489 : Range<Int8> = ((Int8(Int8(Int8(-4)))&127)..(Int8(Int8(Int8(-14)))&127):(Int64(62)|1));
            if (false) { ((Int8(var_1710170113819_210)&127)..(Int8(var_1710170113819_210)&127):(Int64(103)|1)) } else { var_1710170113819_489 } ;
            var_1710170113819_297
        } else { // block id: 497
            Float64(-42.0)
        }) {
            case _ => 
                var_1710170113819_210;
                var_1710170113819_504
            
        }[0];
        ()
    }
;
    init(namedParam_1710170113819_515 ! : Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>, optionalParam_1710170113819_516 ! : Option<(UInt16, Int16, Float32, Int64, String, Rune)> = (Option<Unit>.Some(()) as (UInt16, Int16, Float32, Int64, String, Rune)), optionalParam_1710170113819_520 ! : Range<UInt32> = ((UInt32(UInt32(UInt32(UInt16(251))))&127)..(UInt32(UInt32(227))&127):(Int64(-127)|1)), optionalParam_1710170113819_527 ! : Rune = r'E') { // block id: 529
        match (var_1710170113819_536[2]) {
            case _ => 
                [(), (), (), (), var_1710170113819_44, var_1710170113819_44, var_1710170113819_44, (), var_1710170113819_44, ()]
            
            case (caseVar_1710170113819_601 : Range<Int16>,caseVar_1710170113819_602 : Range<Int8>,(_ : Float64,caseVar_1710170113819_603 : Int16),caseVar_1710170113819_604,caseVar_1710170113819_605) => 
                ();
                [(), (), (), (), (), (), (), (), (), ()]
            
            case caseVar_1710170113819_611 : Range<UInt8> => 
                [var_1710170113819_44, (), var_1710170113819_44, var_1710170113819_44, var_1710170113819_44, var_1710170113819_44, (), var_1710170113819_44, var_1710170113819_44, var_1710170113819_44]
            
            case _ => 
                if (true) { Option<Unit>.Some(()) } else { Option<Unit>.None } ;
                var var_1710170113819_644 : Unit = ();
                if (var_1710170113819_107) { [(), (), (), (), (), (), (), (), (), ()] } else { [(), var_1710170113819_44, (), (), var_1710170113819_44, var_1710170113819_44, (), var_1710170113819_644, var_1710170113819_44, var_1710170113819_644] } 
            
        }[8]
    }
;
    public init(param_1710170113819_715 : (Int8) -> Option<Bool>, optionalParam_1710170113819_718 ! : Range<UInt64> = ((UInt64(UInt64(94))&127)..=(UInt64(UInt64(215))&127):(Int64(-43)|1)), namedParam_1710170113819_720 ! : (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), optionalParam_1710170113819_721 ! : (Int8) -> Option<Bool> = func_1710170113819_11) { // block id: 725
        var_1710170113819_733[3][6][3];
        try (resource = Class_1710170113819_72()) { // block id: 857
            var loopTimeVar_1710170113819_862 : Int64 = 0;
            do {
                loopTimeVar_1710170113819_862++;

            } while ((false) && loopTimeVar_1710170113819_862 < 100 ) ;
            var_1710170113819_44
        } finally { // block id: 864

        }
    }
;
    init(param_1710170113819_1256 : Bool) { // block id: 1257
        let var_1710170113819_1299 : Option<Float32> = Option<Float32>.Some(Float32(Float32(77.0)));
        var loopTimeVar_1710170113819_1306 : Int64 = 0;
        do {
            loopTimeVar_1710170113819_1306++;

        } while ((match (var_1710170113819_291) {
            case -91.0 => 
                var_1710170113819_117;
                Float32(12.0)
            
            case _ : Array<UInt64> => 
                var_1710170113819_733;
                Float32(42.0)
            
            case 119.0 => 
                var_1710170113819_334--;
                var_1710170113819_291 - var_1710170113819_291
            
            case -24.0 => 
                if (var_1710170113819_107) { var_1710170113819_428 } else { Option<Bool>.Some(var_1710170113819_107) } ;
                var_1710170113819_291
            
            case _ => 
                Float32(3.0)
            
        } == (var_1710170113819_1299 ?? Float32(-9.0))) && loopTimeVar_1710170113819_1306 < 100 ) ;
        var_1710170113819_1309[2];
        ((Int16(Int16(56))&127)..(Int16(Int16(9))&127):(Int64(104)|1))
    }
;
    init(param_1710170113819_1339 : Range<Int8>, param_1710170113819_1340 : UInt8) { // block id: 1341
        var var_1710170113819_1353 : Bool = false;
        var var_1710170113819_1379 : Unit = ();
        var var_1710170113819_1397 : VArray<Unit, $9> = [(), (), (), (), (), (), (), (), ()];
        if ([false, var_1710170113819_1054, true, false, var_1710170113819_1353, true, var_1710170113819_107, true, var_1710170113819_1054, false][2]) { // block id: 1361
            var_1710170113819_44;
            ((UInt16(UInt16(64))&127)..(UInt16(UInt16(253))&127):(var_1710170113819_334|1));
            if (false) { VArray<Unit, $9>({ i => ()}) } else { VArray<Unit, $9>(repeat: ()) } 
        } else if (([UInt64(210), UInt64(241), UInt64(241), UInt64(236), UInt64(47), UInt64(141), UInt64(14), UInt64(4), UInt64(108), UInt64(180)] is Rune)) { // block id: 1395
            var_1710170113819_1397
        } else { // block id: 1399
            if (false) { VArray<Unit, $9>({ i => ()}) } else { var_1710170113819_1397 } 
        }[2]
    }
;
    init(param_1710170113819_1439 : Range<UInt16>, namedParam_1710170113819_1440 ! : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String), optionalParam_1710170113819_1441 ! : Rune = r't') { // block id: 1443
        var var_1710170113819_1447 : (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64) = (((Option<Unit>.None, ((), """
>EpPQ
48-FK
""", UInt64(90), (UInt16(129), Int16(40), Float32(72.0), Int64(-86), ###"5 E51^.F>$"###, r'v'), Int64(48), ")oKh%~[/Mp"), (UInt16(227), Int16(-104), Float32(-15.0), Int64(-121), "Jc.Q7+QyKa{", r'k'), [VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()})]) as Unit), (((UInt64(UInt64(237))&127)..=(UInt64(UInt64(152))&127):(Int64(22)|1)) as Bool), (Int8(-16), UInt32(UInt8(123))), (Int8(-87), (), (UInt16(Int8(25)), Int16(114), Float32(Float32(-46.0)), Int64(Int16(-50)), "a{gEz/>Er_J", r'M')), Float64(94.0));
        var var_1710170113819_1667 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        var var_1710170113819_1705 : Unit = ();
        try { // block id: 1445
            var_1710170113819_1447;
            var var_1710170113819_1606 : Int16 = Int16(77);
            const var_1710170113819_1623 : Unit = ();
            var var_1710170113819_1630 : UInt32 = UInt32(164);
            match (((Int64(var_1710170113819_334)&127)..=(Int64(Int64(-45))&127):(var_1710170113819_334|1))) {
                case caseVar_1710170113819_1590 : Range<UInt16> => 
                    ();
                    var_1710170113819_1374;
                    ()
                
                case caseVar_1710170113819_1597 : Range<Int64> => 
                    var_1710170113819_1374;
                    ()
                
                case _ : VArray<Unit, $9> => 
                    var_1710170113819_1606 |= var_1710170113819_1606;
                    ();
                    var var_1710170113819_1612 : Int32 = Int32(UInt32(Int32(23)));
                    var_1710170113819_1612 |= Int32(86)
                
                case _ => 
                    var_1710170113819_1374;
                    ((Int64(Int64(24))&127)..(Int64(Int64(-46))&127):(Int64(-39)|1));
                    var_1710170113819_1623
                
                case _ => 
                    var_1710170113819_1630 %= ((var_1710170113819_1630) | 1)
                
            };
            match (var_1710170113819_1630) {
                case caseVar_1710170113819_1637 => 
                    ();
                    var_1710170113819_1623;
                    let var_1710170113819_1642 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                    var_1710170113819_1642
                
                case _ : Float64 => 
                    ();
                    [(), (), (), (), (), (), (), (), (), ()]
                
                case _ => 
                    var_1710170113819_1085;
                    if (var_1710170113819_1054) { [(), (), (), (), (), (), (), (), (), ()] } else { var_1710170113819_1667 } 
                
                case _ => 
                    ();
                    ((Int64(var_1710170113819_334)&127)..(Int64(var_1710170113819_334)&127):(Int64(-10)|1));
                    [(), (), var_1710170113819_1623, var_1710170113819_44, var_1710170113819_44, var_1710170113819_1374, (), var_1710170113819_1623, var_1710170113819_1374, var_1710170113819_1623]
                
            }
        } finally { // block id: 1698
            ();
            Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.None;
            [var_1710170113819_44, (), var_1710170113819_1705, var_1710170113819_1708, var_1710170113819_44, var_1710170113819_44, (), var_1710170113819_44, (), var_1710170113819_1708]
        };
        var var_1710170113819_1818 : UInt32 = UInt32(121);
        let var_1710170113819_1859 : Unit = ();
        let var_1710170113819_1904 : Option<(Int8, UInt32)> = (Option<Bool>.Some(false) as (Int8, UInt32));
        try { // block id: 1717
            let var_1710170113819_1734 : ?Bool = Option<Bool>.None;
            match (((UInt16(UInt16(100))&127)..(UInt16(UInt16(17))&127):(Int64(64)|1))) {
                case _ : Int32 => 
                    var var_1710170113819_1726 : ?Bool = Option<Bool>.Some(false);
                    if (true) { var_1710170113819_1726 } else { Option<Bool>.None } 
                
                case _ => 
                    var_1710170113819_1734
                
                case caseVar_1710170113819_1738 : Range<UInt32> => 
                    Option<Bool>.Some(true)
                
                case _ => 
                    Option<Bool>.None
                
            };
            var var_1710170113819_1791 : Unit = ();
            (Option<Unit>.Some(var_1710170113819_1708), var_1710170113819_1750, var_1710170113819_1773, [var_1710170113819_1309, var_1710170113819_1309, VArray<Unit, $8>({ i => ()}), var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309]);
            Option<(Int8, UInt32)>.None.getOrThrow()
        } catch (e: Exception) { // block id: 1812
            try { // block id: 1814
                (Int8(40), var_1710170113819_1818)
            } finally { // block id: 1820
                var_1710170113819_431
            }
        } finally { // block id: 1822
            const var_1710170113819_1841 : Unit = ();
            var var_1710170113819_1849 : Unit = ();
            (var_1710170113819_1829 ?? [VArray<Unit, $8>(repeat: var_1710170113819_44), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), var_1710170113819_1309, VArray<Unit, $8>({ i => ()}), var_1710170113819_1309, VArray<Unit, $8>({ i => ()}), var_1710170113819_1309, var_1710170113819_1309]);
            var loopTimeVar_1710170113819_1901 : Int = 0;
            do {
                loopTimeVar_1710170113819_1901++;

            } while ((var_1710170113819_107) && loopTimeVar_1710170113819_1901 < 100 ) ;
            (var_1710170113819_1904 ?? var_1710170113819_431)
        }
    }
;
    public init(param_1710170113819_1955 : Range<Int64>) { // block id: 1956
        var var_1710170113819_2006 : UInt64 = UInt64(179);
        match (if (match (var_1710170113819_291) {
            case _ : (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)) => 
                var_1710170113819_431;
                var_1710170113819_44;
                UInt16(150) < UInt16(190)
            
            case -9.0 | -124.0 | -33.0 => 
                ();
                true
            
            case _ : Array<VArray<Unit, $8>> => 
                var var_1710170113819_1979 : Int16 = Int16(UInt16(Int8(Int8(-73))));
                var_1710170113819_1979 >>= ((Int16(32)) & 7);
                true
            
            case caseVar_1710170113819_1988 : Array<Bool> => 
                Option<Unit>.None;
                var_1710170113819_107 || var_1710170113819_1054
            
            case _ => 
                ();
                [false, false, false, false, false, true, false, false, true, true];
                var_1710170113819_107
            
        }) { // block id: 2000
            ((UInt32(UInt32(80))&127)..(UInt32(UInt32(35))&127):(Int64(-114)|1));
            var_1710170113819_2006
        } else { // block id: 2008
            ();
            UInt64(29)
        }) {
            case _ => 
                if (var_1710170113819_107) { Option<Unit>.None } else { Option<Unit>.None } ;
                """
[PM'g
5u\"5(
"""
            
        };
        var_1710170113819_2020;
        var loopTimeVar_1710170113819_2069 : Range<UInt64> = ((UInt64(UInt64(Int8(84)))&127)..(UInt64(UInt64(187))&127):(Int64(UInt16(91))|1));
        for (i in loopTimeVar_1710170113819_2069 where (Option<Bool>.None ?? false) || (var_1710170113819_107, var_1710170113819_2035)[0]) {
            var var_1710170113819_2043 : Int16 = Int16(Int16(Int16(-84)));
            var var_1710170113819_2064 : UInt16 = UInt16(Int16(Int16(-110)));
            try (resource = Class_1710170113819_72()) { // block id: 2040
                var_1710170113819_2043 ^= Int16(24)
            } finally { // block id: 2048
                let var_1710170113819_2050 : UInt16 = UInt16(UInt8(206));
                var_1710170113819_2050;
                var var_1710170113819_2055 : Int32 = Int32(UInt8(UInt8(UInt8(UInt8(164)))));
                var_1710170113819_2055 &= var_1710170113819_2055;
                var_1710170113819_2064 = UInt16(162)
            }
        }
    }
;
    public init(param_1710170113819_2094 : Option<Bool>, param_1710170113819_2095 : Option<(Int8, UInt32)>, param_1710170113819_2096 : Range<UInt16>) { // block id: 2097
        var_1710170113819_44
    }
;
    init(param_1710170113819_2111 : (Int8) -> Option<Bool>, param_1710170113819_2114 : Range<Int64>) { // block id: 2115
        let var_1710170113819_2187 : UInt = UInt64(164);
        var var_1710170113819_2218 : (Range<UInt64>, UInt16, Option<Float32>, Unit, Range<UInt32>, Option<Float32>, Range<Int32>) = (((UInt64(UInt64(UInt8(UInt8(210))))&127)..=(UInt64(UInt64(67))&127):(Int64(UInt64(82))|1)), UInt16(Int16(Int8(UInt8(135)))), Option<Float32>.Some(Float32(Float32(-36.0))), (), ((UInt32(UInt32(UInt16(UInt16(58))))&127)..=(UInt32(UInt32(160))&127):(Int64(-101)|1)), ([true, (VArray<Unit, $8>({ i => ()}) is Range<Int16>), (true is Interface_1710170113819_230<Unit, Interface_1710170113819_229<Bool>>), false, ((Option<Unit>.Some(()), ((), """
>g,uF
3wrU>
""", UInt64(7), (UInt16(191), Int16(-69), Float32(49.0), Int64(-26), ";f }$a{=d^1", r'k'), Int64(114), ###"L~OZ,tB(Pf"###), (UInt16(164), Int16(69), Float32(20.0), Int64(-54), """
:Ey(L
5-?p#
""", r'4'), [VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>(repeat: ()), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>({ i => ()})]) is VArray<Float64, $1>), false, (() is Option<Bool>), false, ("""
la&VA
AnM!]
""" is UInt16), true] as Float32), ((Int32(Int32(-109))&127)..(Int32(Int32(49))&127):(Int64(-105)|1)));
        if (false) { // block id: 2118
            match (var_1710170113819_330) {
                case 116 | 30 => 
                    var_1710170113819_1054 &&= true;
                    ();
                    var_1710170113819_2129
                
                case -27 | -11 => 
                    [var_1710170113819_2136, [UInt64(219), UInt64(215), UInt64(206), UInt64(36), UInt64(58), UInt64(248), UInt64(51), UInt64(139), UInt64(106), UInt64(156)], [UInt64(244), var_1710170113819_2142, UInt64(203), var_1710170113819_2142, var_1710170113819_2142, UInt64(246), UInt64(80), UInt64(172), UInt64(241), UInt64(81)], [UInt64(82), var_1710170113819_2142, UInt64(122), UInt64(178), UInt64(84), UInt64(214), UInt64(196), var_1710170113819_2142, UInt64(225), UInt64(70)], [UInt64(133), var_1710170113819_2142, var_1710170113819_2142, var_1710170113819_2142, UInt64(183), var_1710170113819_2142, var_1710170113819_2142, UInt64(44), var_1710170113819_2142, var_1710170113819_2142], var_1710170113819_2136, [UInt64(125), UInt64(140), UInt64(155), UInt64(238), UInt64(40), UInt64(122), UInt64(186), UInt64(51), UInt64(68), UInt64(179)], [var_1710170113819_2142, UInt64(150), var_1710170113819_2142, var_1710170113819_2142, UInt64(150), UInt64(212), UInt64(218), UInt64(210), UInt64(232), var_1710170113819_2187], [UInt64(55), UInt64(208), var_1710170113819_2142, UInt64(233), UInt64(233), var_1710170113819_2187, UInt64(15), UInt64(0), var_1710170113819_2187, var_1710170113819_2187], var_1710170113819_2136];
                    var_1710170113819_1374
                
                case _ => 
                    ()
                
                case _ => 
                    ()
                
            };
            var loopTimeVar_1710170113819_2214 : Int64 = 0;
            while ((var_1710170113819_107) && loopTimeVar_1710170113819_2214 < 100 ) {
                loopTimeVar_1710170113819_2214++;

            };
            var_1710170113819_2218[3]
        } else if (true) { // block id: 2382
            match ([var_1710170113819_2142, var_1710170113819_2142, UInt64(109), UInt64(190), UInt64(112), UInt64(107), UInt64(173), var_1710170113819_2142, var_1710170113819_2142, var_1710170113819_2187]) {
                case _ : Array<Array<UInt64>> => 
                    var_1710170113819_2129;
                    ()
                
                case _ => 
                    var_1710170113819_2129;
                    var_1710170113819_210 <<= ((var_1710170113819_210) & 7)
                
                case _ : (UInt16, (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Rune, Float64, Unit) => 
                    ()
                
                case caseVar_1710170113819_2413 : Option<Unit> => 
                    ()
                
                case _ => 
                    [var_1710170113819_1309, VArray<Unit, $8>({ i => ()}), VArray<Unit, $8>(repeat: var_1710170113819_1374), var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309, VArray<Unit, $8>({ i => ()}), var_1710170113819_1309, var_1710170113819_1309, var_1710170113819_1309];
                    var var_1710170113819_2457 : Class_1710170113819_269 = Class_1710170113819_269();
                    if (var_1710170113819_107) { var_1710170113819_2457 } else { Class_1710170113819_269() } ;
                    ()
                
            }
        };
        var_1710170113819_44
    }
;
    public init(namedParam_1710170113819_2547 ! : Array<Bool>, optionalParam_1710170113819_2548 ! : VArray<Float64, $1> = [Float64(40.0)]) { // block id: 2551
        let var_1710170113819_2579 : ?(UInt16, Int16, Float32, Int64, String, Rune) = ((Option<Class_1710170113819_269>.None as Array<VArray<Unit, $8>>) as (UInt16, Int16, Float32, Int64, String, Rune));
        match (try { // block id: 2554
            var var_1710170113819_2558 : ?(UInt16, Int16, Float32, Int64, String, Rune) = (((Int64(Int64(Int8(-118)))&127)..=(Int64(Int64(UInt64(197)))&127):(Int64(UInt16(Int8(57)))|1)) as (UInt16, Int16, Float32, Int64, String, Rune));
            if (true) { var_1710170113819_2558 } else { Option<(UInt16, Int16, Float32, Int64, String, Rune)>.None } 
        } finally { // block id: 2569
            if (false) { Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.None } else { var_1710170113819_117 } ;
            const var_1710170113819_2576 : Bool = true;
            if (var_1710170113819_2576) { var_1710170113819_2579 } else { var_1710170113819_2579 } 
        }) {
            case _ => 
                var_1710170113819_1708
            
            case _ => 
                var_1710170113819_1750;
                var_1710170113819_1708
            
        };
        if ((var_1710170113819_2601 ?? var_1710170113819_2605) < try { // block id: 2608
            if (true) { Option<Bool>.None } else { Option<Bool>.Some(true) } ;
            var_1710170113819_1708;
            var_1710170113819_2605
        } finally { // block id: 2616
            ();
            if (true) { ((Int16(Int16(-51))&127)..=(Int16(Int16(-126))&127):(Int64(46)|1)) } else { ((Int16(Int16(-47))&127)..=(Int16(var_1710170113819_330)&127):(var_1710170113819_334|1)) } ;
            var_1710170113819_2605 << ((UInt32(118)) & 7)
        }) { // block id: 2628
            var_1710170113819_44
        } else if (false) { // block id: 2631
            var loopTimeVar_1710170113819_2636 : Int64 = 0;
            do {
                loopTimeVar_1710170113819_2636++;

            } while ((false) && loopTimeVar_1710170113819_2636 < 100 ) ;
            var_1710170113819_1708
        };
        Int8((-Int8(-79))) - Int8(-46)
    }
;
    init(optionalParam_1710170113819_2699 ! : Array<Array<UInt64>> = [[UInt64(UInt32(UInt8(59))), UInt64(5), UInt64(UInt32(Int16(-16))), UInt64(17), UInt64(49), UInt64(136), UInt64(Int16(UInt16(154))), UInt64(146), UInt64(UInt32(79)), UInt64(87)], [UInt64(UInt16(UInt16(132))), UInt64(197), UInt64(0), UInt64(158), UInt64(136), UInt64(71), UInt64(UInt8(36)), UInt64(Int16(UInt16(212))), UInt64(Int8(Int8(111))), UInt64(57)], [UInt64(91), UInt64(9), UInt64(38), UInt64(93), UInt64(30), UInt64(226), UInt64(232), UInt64(94), UInt64(149), UInt64(172)], [UInt64(125), UInt64(130), UInt64(53), UInt64(90), UInt64(196), UInt64(102), UInt64(209), UInt64(178), UInt64(89), UInt64(129)], [UInt64(110), UInt64(6), UInt64(Int16(UInt8(226))), UInt64(Int32(57)), UInt64(108), UInt64(188), UInt64(132), UInt64(75), UInt64(UInt8(109)), UInt64(169)], [UInt64(127), UInt64(218), UInt64(88), UInt64(47), UInt64(202), UInt64(244), UInt64(45), UInt64(203), UInt64(65), UInt64(145)], [UInt64(156), UInt64(UInt32(UInt32(217))), UInt64(UInt8(147)), UInt64(UInt8(UInt8(142))), UInt64(Int32(UInt16(143))), UInt64(192), UInt64(149), UInt64(UInt32(Int8(74))), UInt64(UInt16(251)), UInt64(124)], [UInt64(173), UInt64(30), UInt64(171), UInt64(183), UInt64(61), UInt64(27), UInt64(197), UInt64(103), UInt64(44), UInt64(45)], [UInt64(Int32(104)), UInt64(185), UInt64(245), UInt64(110), UInt64(Int64(-64)), UInt64(202), UInt64(Int8(Int8(-122))), UInt64(77), UInt64(182), UInt64(UInt16(188))], [UInt64(104), UInt64(18), UInt64(39), UInt64(128), UInt64(162), UInt64(119), UInt64(172), UInt64(149), UInt64(170), UInt64(39)]], namedParam_1710170113819_2794 ! : Unit, namedParam_1710170113819_2795 ! : Float64) { // block id: 2796
        Class_1710170113819_269();
        (Option<Unit>.Some(if (var_1710170113819_107) { // block id: 2802
            ();
            var_1710170113819_1374
        } else if (var_1710170113819_1054) { // block id: 2806
            Option<Bool>.None;
            ();
            var_1710170113819_334 -= var_1710170113819_334
        }) ?? var_1710170113819_2129)
    }
;
    init(param_1710170113819_2832 : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String), param_1710170113819_2833 : (UInt16, Int16, Float32, Int64, String, Rune)) { // block id: 2834
        let var_1710170113819_2841 : ?Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)> = Option<Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>>.Some(Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.None);
        (var_1710170113819_2841 ?? match ((Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.Some(var_1710170113819_1750) ?? var_1710170113819_1750)) {
            case _ => 
                var_1710170113819_117
            
        });
        let var_1710170113819_2892 : Bool = true;
        let var_1710170113819_2948 : (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)) = (Int8(-112), (), (UInt16(Int8(65)), Int16(UInt8(4)), Float32(-122.0), Int64(-28), ###"zfdDn#v'cM"###, r'q'));
        let var_1710170113819_2973 : ?(UInt16, Int16, Float32, Int64, String, Rune) = Option<(UInt16, Int16, Float32, Int64, String, Rune)>.Some((UInt16(153), Int16(UInt16(UInt16(194))), Float32(Float32(-98.0)), Int64(UInt8(UInt8(224))), ###"=T[q-[-FI1"###, r'Q'));
        (if (if (var_1710170113819_1054) { // block id: 2865
            var_1710170113819_1054
        } else { // block id: 2867
            true
        }) { if (var_1710170113819_1054) { // block id: 2871
            ((UInt32(var_1710170113819_2605)&127)..=(UInt32(var_1710170113819_2875)&127):(var_1710170113819_334|1));
            var_1710170113819_2880
        } else { // block id: 2887
            ();
            ();
            if (var_1710170113819_2892) { Option<(VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8)>.Some(var_1710170113819_536) } else { var_1710170113819_2880 } 
        } } else { match (Option<(Int8, UInt32)>.None) {
            case caseVar_1710170113819_2901 => 
                var var_1710170113819_2906 : VArray<Float64, $1> = [Float64(Float32(Float32(Float32(-7.0))))];
                Option<(VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8)>.Some((var_1710170113819_2906, var_1710170113819_2913, (var_1710170113819_306, Option<Bool>.Some(false), (Int8(116), UInt32(235)), var_1710170113819_2948, var_1710170113819_297), ((UInt64(var_1710170113819_2142)&127)..=(UInt64(UInt64(254))&127):(var_1710170113819_334|1)), var_1710170113819_210))
            
            case _ => 
                if (var_1710170113819_107) { var_1710170113819_2973 } else { var_1710170113819_2973 } ;
                var_1710170113819_1374;
                if (false) { var_1710170113819_2880 } else { Option<(VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8)>.None } 
            
            case _ => 
                (Option<Unit>.Some(var_1710170113819_44), var_1710170113819_1750, (UInt16(175), var_1710170113819_330, Float32(-49.0), Int64(-96), ###"LZ$|y>'6.|"###, r'L'), var_1710170113819_1037);
                Option<(VArray<Float64, $1>, (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), (Option<Unit>, Option<Bool>, (Int8, UInt32), (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)), Float64), Range<UInt64>, Int8)>.None
            
        } }  ?? var_1710170113819_536)
    }

}


public open class Class_1710170113819_269 <: Class_1710170113819_72 {
    public init() { // block id: 271

    }

}




func func_1710170113819_273(param_1710170113819_274 : Float64, param_1710170113819_275 : Rune, namedParam_1710170113819_276 ! : UInt16, namedParam_1710170113819_277 ! : Interface_1710170113819_227) : Class_1710170113819_269 { // block id: 278
    var var_1710170113819_317 : (UInt16, Int16, Float32, Int64, String, Rune) = (UInt16(119), Int16(87), Float32(Float32(-36.0)), Int64(Int32(-118)), """
f_p>G
2V4:D
""", r'T');
    (if (false) { // block id: 284
        var_1710170113819_210 & Int8(118)
    } else { // block id: 288
        var_1710170113819_291 /= Float32((Int32(Float32(-92.0))) | 1);
        var_1710170113819_297;
        Int8(-21)
    }, (var_1710170113819_306 ?? ()), (Option<(UInt16, Int16, Float32, Int64, String, Rune)>.Some(var_1710170113819_317) ?? (UInt16(9), var_1710170113819_330, var_1710170113819_291, var_1710170113819_334, """
Wz0iu
+AgX0
""", r'g')))[1];
    var var_1710170113819_349 : (Int8, Unit, (UInt16, Int16, Float32, Int64, String, Rune)) = (Int8(UInt8(191)), (), (UInt16(Int16(UInt16(6))), Int16(Int16(101)), Float32(Float32(Float32(-81.0))), Int64(UInt32(UInt32(100))), "B /\"T:`N,T", r'O'));
    var var_1710170113819_380 : ?Class_1710170113819_269 = (UInt32(20) as Class_1710170113819_269);
    if (var_1710170113819_107) { // block id: 341
        Class_1710170113819_269()
    } else { // block id: 343
        let var_1710170113819_369 : Rune = r'L';
        (UInt16(163), var_1710170113819_349, var_1710170113819_369, var_1710170113819_297, ())[4];
        (var_1710170113819_380 ?? Class_1710170113819_269())
    }
}












main(): Int64 {
    try {
        let var_1710170113819_123 : UInt = UInt64(214);
        const var_1710170113819_130 : Int64 = 95;
        var loopTimeVar_1710170113819_144 : Int = 0;
        do {
            loopTimeVar_1710170113819_144++;
            var var_1710170113819_133 : String = ###"iXG=r^O[_~"###;
            (var_1710170113819_117 ?? (var_1710170113819_44, "!|oVP'V>$v", var_1710170113819_123, (UInt16(119), Int16(6), Float32(10.0), var_1710170113819_130, var_1710170113819_133, r'v'), var_1710170113819_130, ###"&@4~K&5${var_1710170113819_133}@*${var_1710170113819_133}M${var_1710170113819_133}"###));
            var loopTimeVar_1710170113819_142 : Int = 0;
            do {
                loopTimeVar_1710170113819_142++;

            } while ((var_1710170113819_107) && loopTimeVar_1710170113819_142 < 100 ) 
        } while ((((Int8(115)|>{ lambdaParameter_1710170113819_66 : Int8 => func_1710170113819_11(var_1710170113819_76.var_1710170113819_79[0]) }) ?? try { // block id: 92
            var var_1710170113819_96 : Byte = UInt8(Int8(68));
            UInt8(106) <= var_1710170113819_96
        } finally { // block id: 99
            const var_1710170113819_103 : Float64 = -8.0;
            Float64(124.0) + var_1710170113819_103;
            var_1710170113819_107 || var_1710170113819_107
        })) && loopTimeVar_1710170113819_144 < 100 ) ;
        let var_1710170113819_165 : UInt16 = UInt16(Int8(UInt8(202)));
        let var_1710170113819_170 : (Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String) = ((), "OgXw\\okx-(", UInt64(252), (UInt16(38), Int16(43), Float32(113.0), Int64(UInt64(Int16(97))), "Gq:`U4x>=%", r'G'), Int64(46), "'NOX1sOTdB");
        var var_1710170113819_189 : ?Unit = Option<Unit>.None;
        func func_1710170113819_197<T0>(param_1710170113819_198 : Option<Unit>, namedParam_1710170113819_199 ! : Int8, namedParam_1710170113819_200 ! : Rune, optionalParam_1710170113819_201 ! : Rune = r'w') : Class_1710170113819_72 { // block id: 203
            var_1710170113819_44;
            var_1710170113819_206
        }
;
        (if (try { // block id: 152
            var_1710170113819_107
        } catch (_) { // block id: 154
            Int8(25);
            var var_1710170113819_158 : UInt32 = UInt32(64);
            var_1710170113819_158 |= var_1710170113819_158;
            var_1710170113819_107
        }) { // block id: 162
            -var_1710170113819_165;
            var_1710170113819_170;
            if (false) { var_1710170113819_189 } else { Option<Unit>.Some(()) } 
        } else { // block id: 193
            var_1710170113819_189
        } ?? func_1710170113819_197<Unit>(var_1710170113819_189, namedParam_1710170113819_199 : var_1710170113819_210, namedParam_1710170113819_200 : r'L', optionalParam_1710170113819_201 : r'H').func_1710170113819_216<Float64>(var_1710170113819_428, var_1710170113819_165, Int64(-27), var_1710170113819_334));
        Int64(match (if (var_1710170113819_1054) { var_1710170113819_3071 } else { ((UInt64(UInt64(114))&127)..(UInt64(UInt64(129))&127):(Int64(-63)|1)) } ) {
            case _ : Range<UInt16> => 
                var_1710170113819_210 & var_1710170113819_210
            
            case caseVar_1710170113819_3082 => 
                var_1710170113819_2142 <<= ((UInt64(253)) & 7);
                var var_1710170113819_3088 : Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)> = Option<(Unit, String, UInt64, (UInt16, Int16, Float32, Int64, String, Rune), Int64, String)>.None;
                var_1710170113819_3088;
                Int8(-30)
            
            case _ : Option<Class_1710170113819_269> => 
                var_1710170113819_1708;
                var_1710170113819_2605 ^= UInt32(47);
                Int8(-28)
            
            case _ => 
                var_1710170113819_1374;
                Int8(106)
            
        })
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1710170113819_123*var_1710170113819_123), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_130*var_1710170113819_130), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_165*var_1710170113819_165), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_210*var_1710170113819_210), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_330*var_1710170113819_330), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_334*var_1710170113819_334), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_2142*var_1710170113819_2142), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_2605*var_1710170113819_2605), 64)
        crcCheck.updateBuffer(UInt64(var_1710170113819_2875*var_1710170113819_2875), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1710170113819_223 {

}

extend Class_1710170113819_269 {

}

// ASSERT: scan-10 sema_varray_cjvm_in_ref_type

