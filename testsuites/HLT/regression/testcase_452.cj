/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

let var_1692561265558_17 : ((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit) = ((true, r'b', UInt32(Int16(Int8(-84))), UInt16(224)), ((Int16(-29) is UInt8), r'C', UInt32(92), UInt16(123)), ())
public var var_1692561265558_63 : Bool = (((UInt32(UInt32(189))&127)..=(UInt32(UInt32(91))&127):(Int64(Int8(-41))|1)) is Range<Int8>)
var var_1692561265558_120 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1692561265558_165 : Struct_1692561265558_161<Range<Int64>, Range<Int64>, UInt16> = Struct_1692561265558_161<Range<Int64>, Range<Int64>, UInt16>()
const var_1692561265558_182 : Int32 = 45
public var var_1692561265558_186 : UInt8 = UInt8(114)
let var_1692561265558_194 : UInt32 = UInt32(94)
public const var_1692561265558_238 : Rune = r'7'
let var_1692561265558_246 : Array<Range<Int8>> = [((Int8(Int8(-101))&127)..(Int8(Int8(-8))&127):(Int64(-126)|1)), ((Int8(Int8(-117))&127)..(Int8(Int8(-56))&127):(Int64(35)|1)), ((Int8(Int8(73))&127)..(Int8(Int8(-29))&127):(Int64(50)|1)), ((Int8(Int8(-34))&127)..(Int8(Int8(-99))&127):(Int64(-111)|1)), ((Int8(Int8(-39))&127)..(Int8(Int8(73))&127):(Int64(34)|1)), ((Int8(Int8(5))&127)..(Int8(Int8(-119))&127):(Int64(-56)|1)), ((Int8(Int8(21))&127)..=(Int8(Int8(-69))&127):(Int64(61)|1)), ((Int8(Int8(86))&127)..=(Int8(Int8(51))&127):(Int64(-11)|1)), ((Int8(Int8(63))&127)..(Int8(Int8(-59))&127):(Int64(2)|1)), ((Int8(Int8(-46))&127)..(Int8(Int8(-77))&127):(Int64(23)|1))]
public var var_1692561265558_268 : UInt64 = UInt64(123)
let var_1692561265558_297 : Class_1692561265558_293<Int16, Range<UInt16>> = Class_1692561265558_293<Int16, Range<UInt16>>()
let var_1692561265558_396 : Enum_1692561265558_75 = Enum_1692561265558_75.defaultValue
let var_1692561265558_502 : (Range<UInt16>, Float64, Range<UInt64>, Option<Array<Range<Int8>>>, Array<Range<Int8>>, Int32, Float32) = (((UInt16(UInt16(16))&127)..=(UInt16(UInt16(22))&127):(Int64(11)|1)), Float64(-83.0), ((UInt64(UInt64(92))&127)..=(UInt64(UInt64(94))&127):(Int64(108)|1)), Option<Array<Range<Int8>>>.None, [((Int8(Int8(108))&127)..(Int8(Int8(34))&127):(Int64(97)|1)), ((Int8(Int8(-59))&127)..(Int8(Int8(-22))&127):(Int64(-115)|1)), ((Int8(Int8(19))&127)..(Int8(Int8(126))&127):(Int64(24)|1)), ((Int8(Int8(-64))&127)..(Int8(Int8(-111))&127):(Int64(69)|1)), ((Int8(Int8(110))&127)..=(Int8(Int8(87))&127):(Int64(50)|1)), ((Int8(Int8(-87))&127)..(Int8(Int8(-12))&127):(Int64(-19)|1)), ((Int8(Int8(69))&127)..=(Int8(Int8(59))&127):(Int64(-66)|1)), ((Int8(Int8(17))&127)..(Int8(Int8(12))&127):(Int64(9)|1)), ((Int8(Int8(-89))&127)..=(Int8(Int8(70))&127):(Int64(2)|1)), ((Int8(Int8(-76))&127)..=(Int8(Int8(85))&127):(Int64(-37)|1))], Int32(-89), Float32(Float32(-94.0)))
public var var_1692561265558_518 : Range<Int8> = ((Int8(Int8(93))&127)..(Int8(Int8(51))&127):(Int64(-93)|1))
public const var_1692561265558_529 : Int8 = 101
const var_1692561265558_533 : Int64 = -53
let var_1692561265558_566 : (UInt8, String, (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>), Range<UInt32>, (Bool, Rune, UInt32, UInt16), Range<Int32>) = (UInt8(UInt8(UInt8(Int8(12)))), "G6QmwE'Tcg", ([UInt64(UInt32(25)), UInt64(182), UInt64(UInt64(117)), UInt64(67), UInt64(Int64(-106)), UInt64(Int64(72)), UInt64(Int32(88)), UInt64(Int64(-7)), UInt64(222), UInt64(84)], [((Int8(Int8(-116))&127)..=(Int8(Int8(6))&127):(Int64(47)|1)), ((Int8(Int8(33))&127)..=(Int8(Int8(115))&127):(Int64(62)|1)), ((Int8(Int8(50))&127)..(Int8(Int8(-86))&127):(Int64(-44)|1)), ((Int8(Int8(18))&127)..(Int8(Int8(98))&127):(Int64(118)|1)), ((Int8(Int8(37))&127)..=(Int8(Int8(27))&127):(Int64(50)|1)), ((Int8(Int8(-112))&127)..=(Int8(Int8(-67))&127):(Int64(76)|1)), ((Int8(Int8(2))&127)..=(Int8(Int8(78))&127):(Int64(43)|1)), ((Int8(Int8(51))&127)..(Int8(Int8(-98))&127):(Int64(10)|1)), ((Int8(Int8(36))&127)..=(Int8(Int8(115))&127):(Int64(13)|1)), ((Int8(Int8(84))&127)..(Int8(Int8(56))&127):(Int64(109)|1))], Int32(-35), (((true, r'Q', UInt32(118), UInt16(236)), (true, r'C', UInt32(250), UInt16(79)), ()), Float32(52.0)), Int32(UInt8(9)), [((Int8(Int8(125))&127)..(Int8(Int8(83))&127):(Int64(-13)|1)), ((Int8(Int8(124))&127)..=(Int8(Int8(-6))&127):(Int64(-4)|1)), ((Int8(Int8(-43))&127)..(Int8(Int8(82))&127):(Int64(92)|1)), ((Int8(Int8(-23))&127)..=(Int8(Int8(-57))&127):(Int64(51)|1)), ((Int8(Int8(99))&127)..=(Int8(Int8(-4))&127):(Int64(-89)|1)), ((Int8(Int8(-16))&127)..=(Int8(Int8(-50))&127):(Int64(-28)|1)), ((Int8(Int8(-57))&127)..=(Int8(Int8(-97))&127):(Int64(-5)|1)), ((Int8(Int8(-65))&127)..=(Int8(Int8(-77))&127):(Int64(72)|1)), ((Int8(Int8(10))&127)..(Int8(Int8(-126))&127):(Int64(121)|1)), ((Int8(Int8(-103))&127)..(Int8(Int8(-98))&127):(Int64(58)|1))]), ((UInt32(UInt32(163))&127)..=(UInt32(UInt32(135))&127):(Int64(-67)|1)), ((Int64(-106) is ((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit)), r'M', UInt32(UInt8(Int8(-73))), UInt16(101)), ((Int32(Int32(-113))&127)..(Int32(Int32(-1))&127):(Int64(-85)|1)))
var var_1692561265558_876 : Int32 = Int32(Int16(UInt8(193)))
public var var_1692561265558_885 : Int16 = Int16(Int16(Int16(-10)))
public let var_1692561265558_967 : Float64 = Float64(-97.0)
public enum Enum_1692561265558_75 {
    defaultValue
}
public open class Class_1692561265558_144<T0> {
    init() { // block id: 146

    }
;
    init(namedParam_1692561265558_151 ! : Array<Range<Int8>>, optionalParam_1692561265558_152 ! : Float32 = Float32(90.0), namedParam_1692561265558_154 ! : Unit) { // block id: 155
        const var_1692561265558_211 : UInt = 61;
        var var_1692561265558_220 : Int16 = Int16(Int16(UInt8(19)));
        let var_1692561265558_274 : String = "/ggOsC!l'T";
        if (match (var_1692561265558_165.var_1692561265558_168) {
            case caseVar_1692561265558_177 => 
                Int32(-96) << ((var_1692561265558_182) & 7);
                var_1692561265558_186 == var_1692561265558_186
            
            case defaultValue => 
                var_1692561265558_194 | UInt32(128);
                false
            
            case caseVar_1692561265558_200 : UInt64 => 
                ();
                const var_1692561265558_204 : Unit = ();
                var_1692561265558_204;
                var_1692561265558_63
            
            case _ => 
                var_1692561265558_211 > UInt64(214)
            
        }) { // block id: 214
            let var_1692561265558_227 : Int32 = Int32(Int8(-48));
            if (false) { // block id: 217
                var_1692561265558_220 &= var_1692561265558_220;
                ((Int32(var_1692561265558_227)&127)..=(Int32(var_1692561265558_227)&127):(Int64(-86)|1));
                var_1692561265558_186 - var_1692561265558_186
            } else if (var_1692561265558_63) { // block id: 236
                var_1692561265558_238;
                UInt8(204) << ((UInt8(54)) & 7)
            } else { // block id: 243
                var_1692561265558_186;
                var_1692561265558_246;
                var_1692561265558_186
            };
            let var_1692561265558_256 : Unit = ();
            (Option<Unit>.Some(var_1692561265558_256) ?? ());
            try { // block id: 260
                var_1692561265558_186++;
                var_1692561265558_182 & var_1692561265558_182;
                var_1692561265558_268++
            } finally { // block id: 270
                if (var_1692561265558_63) { var_1692561265558_274 } else { "iS(x^8qA\\\"" } ;
                var_1692561265558_186 /= ((UInt8(242)) | 1);
                ()
            }
        }
    }
;
    public var var_1692561265558_300 : (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>) = ([UInt64(189), UInt64(219), UInt64(131), UInt64(221), UInt64(135), UInt64(225), UInt64(168), UInt64(222), UInt64(229), UInt64(104)], [((Int8(Int8(62))&127)..=(Int8(Int8(11))&127):(Int64(-93)|1)), ((Int8(Int8(-103))&127)..=(Int8(Int8(-104))&127):(Int64(114)|1)), ((Int8(Int8(101))&127)..=(Int8(Int8(80))&127):(Int64(-74)|1)), ((Int8(Int8(-126))&127)..=(Int8(Int8(87))&127):(Int64(102)|1)), ((Int8(Int8(78))&127)..=(Int8(Int8(-37))&127):(Int64(-78)|1)), ((Int8(Int8(102))&127)..(Int8(Int8(-59))&127):(Int64(8)|1)), ((Int8(Int8(-6))&127)..(Int8(Int8(115))&127):(Int64(19)|1)), ((Int8(Int8(48))&127)..(Int8(Int8(-5))&127):(Int64(-101)|1)), ((Int8(Int8(120))&127)..=(Int8(Int8(-57))&127):(Int64(20)|1)), ((Int8(Int8(-78))&127)..(Int8(Int8(70))&127):(Int64(-9)|1))], Int32(-18), (((true, r'A', UInt32(140), UInt16(58)), (false, r'P', UInt32(152), UInt16(140)), ()), Float32(60.0)), Int32(112), [((Int8(Int8(-29))&127)..=(Int8(Int8(61))&127):(Int64(104)|1)), ((Int8(Int8(44))&127)..(Int8(Int8(112))&127):(Int64(-111)|1)), ((Int8(Int8(106))&127)..(Int8(Int8(-30))&127):(Int64(63)|1)), ((Int8(Int8(125))&127)..(Int8(Int8(-69))&127):(Int64(20)|1)), ((Int8(Int8(-103))&127)..=(Int8(Int8(75))&127):(Int64(10)|1)), ((Int8(Int8(-91))&127)..=(Int8(Int8(58))&127):(Int64(-17)|1)), ((Int8(Int8(-66))&127)..(Int8(Int8(-52))&127):(Int64(104)|1)), ((Int8(Int8(53))&127)..=(Int8(Int8(-34))&127):(Int64(-19)|1)), ((Int8(Int8(-113))&127)..(Int8(Int8(-38))&127):(Int64(-66)|1)), ((Int8(Int8(-43))&127)..=(Int8(Int8(-76))&127):(Int64(-2)|1))]);
    public open func func_1692561265558_284(namedParam_1692561265558_285 ! : Float64, namedParam_1692561265558_286 ! : Unit) : ((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit) { // block id: 287
        var_1692561265558_297.var_1692561265558_300[3][0]
    }
;
    static prop var_1692561265558_1019 : Float32 { // block id: 1020
        get() { // block id: 1022
            ();
            UInt16(18);
            Float32(Float32(118.0))
        }

    }
}

public enum Enum_1692561265558_158 {
    defaultValue
}
public struct Struct_1692561265558_161<T0, T1, T2> {
    init() { // block id: 163

    }
;
    public prop var_1692561265558_168 : Enum_1692561265558_158 { // block id: 169
        get() { // block id: 171
            ();
            ();
            Enum_1692561265558_158.defaultValue
        }

    };
    public let var_1692561265558_760 : ?Int16 = Option<Int16>.None
}


public open class Class_1692561265558_293<T0, T1> <: Class_1692561265558_144<Range<UInt32>> {
    init() { // block id: 295

    }

    static init() {
    }
}

const func func_1692561265558_383(param_1692561265558_384 : Float32) : Unit { // block id: 385

}


public func func_1692561265558_379(param_1692561265558_380 : String) : Array<Range<Int8>> { // block id: 381
    let var_1692561265558_387 : (Float32) -> Unit = { lambdaParameter_1692561265558_390 : Float32 =>  };
    let var_1692561265558_405 : (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>) = ([UInt64(17), UInt64(101), UInt64(174), UInt64(244), UInt64(32), UInt64(243), UInt64(153), UInt64(197), UInt64(181), UInt64(235)], [((Int8(Int8(-72))&127)..=(Int8(Int8(82))&127):(Int64(-120)|1)), ((Int8(Int8(111))&127)..(Int8(Int8(115))&127):(Int64(-127)|1)), ((Int8(Int8(53))&127)..=(Int8(Int8(UInt8(10)))&127):(Int64(46)|1)), ((Int8(Int8(-26))&127)..(Int8(Int8(UInt8(105)))&127):(Int64(Int8(120))|1)), ((Int8(Int8(-66))&127)..=(Int8(Int8(-113))&127):(Int64(80)|1)), ((Int8(Int8(-13))&127)..=(Int8(Int8(47))&127):(Int64(119)|1)), ((Int8(Int8(Int8(122)))&127)..=(Int8(Int8(Int8(104)))&127):(Int64(Int16(-88))|1)), ((Int8(Int8(41))&127)..(Int8(Int8(93))&127):(Int64(-50)|1)), ((Int8(Int8(Int8(105)))&127)..=(Int8(Int8(Int8(16)))&127):(Int64(UInt32(184))|1)), ((Int8(Int8(-110))&127)..(Int8(Int8(-99))&127):(Int64(29)|1))], Int32(UInt16(Int16(Int8(-22)))), (((true, r'8', UInt32(147), UInt16(16)), (true, r'm', UInt32(239), UInt16(112)), ()), Float32(36.0)), Int32(UInt8(235)), [((Int8(Int8(41))&127)..=(Int8(Int8(-95))&127):(Int64(77)|1)), ((Int8(Int8(83))&127)..(Int8(Int8(-26))&127):(Int64(110)|1)), ((Int8(Int8(112))&127)..=(Int8(Int8(41))&127):(Int64(-8)|1)), ((Int8(Int8(-86))&127)..=(Int8(Int8(77))&127):(Int64(88)|1)), ((Int8(Int8(-20))&127)..=(Int8(Int8(118))&127):(Int64(-111)|1)), ((Int8(Int8(92))&127)..=(Int8(Int8(20))&127):(Int64(73)|1)), ((Int8(Int8(-75))&127)..(Int8(Int8(-20))&127):(Int64(9)|1)), ((Int8(Int8(-124))&127)..=(Int8(Int8(-26))&127):(Int64(-8)|1)), ((Int8(Int8(-124))&127)..=(Int8(Int8(101))&127):(Int64(-51)|1)), ((Int8(Int8(-108))&127)..=(Int8(Int8(34))&127):(Int64(57)|1))]);
    let var_1692561265558_489 : Float32 = Float32(21.0);
    match (if (var_1692561265558_63) { var_1692561265558_396 } else { var_1692561265558_396 } ) {
        case caseVar_1692561265558_401 : Int16 => 
            ();
            var_1692561265558_405;
            let var_1692561265558_465 : Float32 = Float32(Float32(82.0));
            var_1692561265558_465
        
        case caseVar_1692561265558_470 => 
            if (var_1692561265558_63) { var_1692561265558_238 } else { r'W' } ;
            var var_1692561265558_477 : Float32 = Float32(78.0);
            var_1692561265558_477
        
        case defaultValue => 
            const var_1692561265558_483 : Unit = ();
            var_1692561265558_483;
            let var_1692561265558_486 : String = """
eM\"a5
x9BuZ
""";
            var_1692561265558_486;
            var_1692561265558_489
        
        case _ => 
            Float32(-122.0)
        
    }|>var_1692561265558_387;
    let var_1692561265558_546 : Range<Int32> = ((Int32(Int32(UInt8(UInt8(91))))&127)..(Int32(Int32(Int32(-74)))&127):(Int64(89)|1));
    (var_1692561265558_502[3] ?? ([var_1692561265558_518, ((Int8(Int8(-114))&127)..=(Int8(Int8(-5))&127):(Int64(-13)|1)), ((Int8(Int8(-116))&127)..(Int8(Int8(-32))&127):(Int64(97)|1)), ((Int8(Int8(102))&127)..(Int8(Int8(-60))&127):(Int64(96)|1)), ((Int8(Int8(7))&127)..=(Int8(Int8(-5))&127):(Int64(-11)|1)), ((Int8(var_1692561265558_529)&127)..=(Int8(var_1692561265558_529)&127):(var_1692561265558_533|1)), var_1692561265558_518, var_1692561265558_518, ((Int8(Int8(123))&127)..=(Int8(Int8(92))&127):(var_1692561265558_533|1)), ((Int8(var_1692561265558_529)&127)..(Int8(var_1692561265558_529)&127):(var_1692561265558_533|1))], var_1692561265558_546, [(), (), (), (), (), (), (), (), (), ()])[0])
}

func func_1692561265558_109<T0>(param_1692561265558_110 : Int16) : Range<Int8> { // block id: 111
    if (true && true) { // block id: 118
        var_1692561265558_120
    } else { // block id: 132
        ();
        var var_1692561265558_136 : Int32 = Int32(UInt8(Int8(85)));
        var_1692561265558_136--;
        [(), (), (), (), (), (), (), (), (), ()]
    }[5];
    let var_1692561265558_148 : Class_1692561265558_144<Range<UInt32>> = Class_1692561265558_144<Range<UInt32>>(namedParam_1692561265558_151 : [((Int8(Int8(-53))&127)..=(Int8(Int8(-106))&127):(Int64(86)|1)), ((Int8(Int8(-51))&127)..=(Int8(Int8(47))&127):(Int64(52)|1)), ((Int8(Int8(94))&127)..=(Int8(Int8(-24))&127):(Int64(-22)|1)), ((Int8(Int8(-40))&127)..(Int8(Int8(-51))&127):(Int64(-65)|1)), ((Int8(Int8(103))&127)..(Int8(Int8(33))&127):(Int64(94)|1)), ((Int8(Int8(-40))&127)..=(Int8(Int8(-57))&127):(Int64(35)|1)), ((Int8(Int8(-116))&127)..=(Int8(Int8(-49))&127):(Int64(62)|1)), ((Int8(Int8(-97))&127)..=(Int8(Int8(-96))&127):(Int64(-43)|1)), ((Int8(Int8(-116))&127)..(Int8(Int8(-75))&127):(Int64(-93)|1)), ((Int8(Int8(-19))&127)..(Int8(Int8(-84))&127):(Int64(125)|1))], namedParam_1692561265558_154 : ());
    var_1692561265558_148.func_1692561265558_284(namedParam_1692561265558_285 : Float64(-13.0), namedParam_1692561265558_286 : ())[2];
    var var_1692561265558_557 : (String) -> Array<Range<Int8>> = { lambdaParameter_1692561265558_560 : String => [((Int8(Int8(120))&127)..(Int8(Int8(-48))&127):(Int64(-38)|1)), ((Int8(Int8(-98))&127)..(Int8(Int8(103))&127):(Int64(1)|1)), ((Int8(Int8(32))&127)..(Int8(Int8(70))&127):(Int64(50)|1)), ((Int8(Int8(30))&127)..(Int8(Int8(71))&127):(Int64(-44)|1)), ((Int8(Int8(44))&127)..(Int8(Int8(-18))&127):(Int64(-71)|1)), ((Int8(Int8(107))&127)..(Int8(Int8(-90))&127):(Int64(47)|1)), ((Int8(Int8(2))&127)..(Int8(Int8(75))&127):(Int64(-21)|1)), ((Int8(Int8(-92))&127)..=(Int8(Int8(-21))&127):(Int64(-87)|1)), ((Int8(Int8(20))&127)..=(Int8(Int8(-101))&127):(Int64(107)|1)), ((Int8(Int8(38))&127)..=(Int8(Int8(-1))&127):(Int64(4)|1))] };
    (var_1692561265558_566[1]|>var_1692561265558_557)[8]
}




public open class Class_1692561265558_1000<T0, T1> <: Class_1692561265558_144<Range<UInt32>> {
    init() { // block id: 1002

    }

}

func func_1692561265558_9() : Int64 { // block id: 10
    var loopTimeVar_1692561265558_36 : Range<UInt64> = ((UInt64(UInt64(226))&127)..=(UInt64(UInt64(Int16(-45)))&127):(Int64(Int16(UInt8(UInt8(71))))|1));
    for (i in loopTimeVar_1692561265558_36 where var_1692561265558_17[1][0]) {

    };
    const var_1692561265558_772 : Int16 = -111;
    let var_1692561265558_777 : (Bool, Int16, Rune, Int16, Float64, (Array<Range<Int8>>, Range<Int32>, Array<Unit>)) = ((Option<Array<Range<Int8>>>.None is Range<UInt8>), Int16(-83), r'B', Int16(UInt8(144)), Float64(-96.0), ([((Int8(Int8(-104))&127)..=(Int8(Int8(55))&127):(Int64(-28)|1)), ((Int8(Int8(-119))&127)..(Int8(Int8(20))&127):(Int64(-18)|1)), ((Int8(Int8(-60))&127)..=(Int8(Int8(116))&127):(Int64(56)|1)), ((Int8(Int8(-26))&127)..=(Int8(Int8(-81))&127):(Int64(69)|1)), ((Int8(Int8(31))&127)..(Int8(Int8(83))&127):(Int64(78)|1)), ((Int8(Int8(-85))&127)..(Int8(Int8(47))&127):(Int64(-88)|1)), ((Int8(Int8(-109))&127)..(Int8(Int8(56))&127):(Int64(4)|1)), ((Int8(Int8(11))&127)..=(Int8(Int8(-18))&127):(Int64(95)|1)), ((Int8(Int8(48))&127)..(Int8(Int8(-62))&127):(Int64(21)|1)), ((Int8(Int8(-115))&127)..(Int8(Int8(65))&127):(Int64(-22)|1))], ((Int32(Int32(0))&127)..(Int32(Int32(98))&127):(Int64(-100)|1)), [(), (), (), (), (), (), (), (), (), ()]));
    let var_1692561265558_895 : (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>) = ([UInt64(Int32(UInt16(190))), UInt64(7), UInt64(144), UInt64(118), UInt64(Int32(UInt32(40))), UInt64(139), UInt64(139), UInt64(UInt8(Int8(21))), UInt64(UInt64(100)), UInt64(Int8(UInt8(250)))], [((Int8(Int8(11))&127)..(Int8(Int8(-51))&127):(Int64(91)|1)), ((Int8(Int8(-68))&127)..(Int8(Int8(116))&127):(Int64(-61)|1)), ((Int8(Int8(26))&127)..=(Int8(Int8(112))&127):(Int64(-8)|1)), ((Int8(Int8(-88))&127)..=(Int8(Int8(-26))&127):(Int64(4)|1)), ((Int8(Int8(-82))&127)..(Int8(Int8(-22))&127):(Int64(-55)|1)), ((Int8(Int8(-83))&127)..(Int8(Int8(38))&127):(Int64(122)|1)), ((Int8(Int8(-52))&127)..=(Int8(Int8(119))&127):(Int64(-125)|1)), ((Int8(Int8(-73))&127)..=(Int8(Int8(7))&127):(Int64(-31)|1)), ((Int8(Int8(-119))&127)..=(Int8(Int8(97))&127):(Int64(-61)|1)), ((Int8(Int8(-104))&127)..=(Int8(Int8(-86))&127):(Int64(-103)|1))], Int32(Int16(67)), (((true, r'1', UInt32(90), UInt16(244)), (true, r'B', UInt32(65), UInt16(147)), ()), Float32(Float32(Float32(120.0)))), Int32(UInt32(131)), [((Int8(Int8(42))&127)..=(Int8(Int8(71))&127):(Int64(-94)|1)), ((Int8(Int8(55))&127)..(Int8(Int8(62))&127):(Int64(86)|1)), ((Int8(Int8(35))&127)..=(Int8(Int8(8))&127):(Int64(-39)|1)), ((Int8(Int8(-126))&127)..=(Int8(Int8(-70))&127):(Int64(-91)|1)), ((Int8(Int8(-57))&127)..=(Int8(Int8(-65))&127):(Int64(77)|1)), ((Int8(Int8(78))&127)..(Int8(Int8(125))&127):(Int64(93)|1)), ((Int8(Int8(-44))&127)..(Int8(Int8(4))&127):(Int64(-23)|1)), ((Int8(Int8(-38))&127)..=(Int8(Int8(-62))&127):(Int64(-123)|1)), ((Int8(Int8(124))&127)..=(Int8(Int8(73))&127):(Int64(-68)|1)), ((Int8(Int8(66))&127)..=(Int8(Int8(65))&127):(Int64(35)|1))]);
    func func_1692561265558_55<T0, T1>(namedParam_1692561265558_56 ! : Bool, namedParam_1692561265558_57 ! : Int8, namedParam_1692561265558_58 ! : Range<UInt8>, namedParam_1692561265558_59 ! : Float32) : Unit { // block id: 60
        const var_1692561265558_99 : UInt16 = 129;
        var var_1692561265558_103 : Int64 = Int64(UInt8(239));
        let var_1692561265558_656 : (UInt8, String, (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>), Range<UInt32>, (Bool, Rune, UInt32, UInt16), Range<Int32>) = (UInt8(UInt8(65)), """
r0f;t
N]&  
""", ([UInt64(120), UInt64(190), UInt64(192), UInt64(86), UInt64(245), UInt64(13), UInt64(169), UInt64(224), UInt64(167), UInt64(193)], [((Int8(Int8(-120))&127)..(Int8(Int8(-125))&127):(Int64(126)|1)), ((Int8(Int8(-32))&127)..(Int8(Int8(-13))&127):(Int64(11)|1)), ((Int8(Int8(-22))&127)..=(Int8(Int8(-44))&127):(Int64(0)|1)), ((Int8(Int8(61))&127)..(Int8(Int8(69))&127):(Int64(-1)|1)), ((Int8(Int8(-9))&127)..=(Int8(Int8(88))&127):(Int64(-13)|1)), ((Int8(Int8(0))&127)..(Int8(Int8(-61))&127):(Int64(-19)|1)), ((Int8(Int8(54))&127)..(Int8(Int8(-27))&127):(Int64(-34)|1)), ((Int8(Int8(12))&127)..=(Int8(Int8(74))&127):(Int64(5)|1)), ((Int8(Int8(-94))&127)..=(Int8(Int8(66))&127):(Int64(-50)|1)), ((Int8(Int8(-87))&127)..(Int8(Int8(-49))&127):(Int64(-81)|1))], Int32(Int16(-76)), (((false, r'A', UInt32(213), UInt16(126)), (true, r'O', UInt32(62), UInt16(213)), ()), Float32(Float32(-64.0))), Int32(-104), [((Int8(Int8(-128))&127)..=(Int8(Int8(64))&127):(Int64(-108)|1)), ((Int8(Int8(-117))&127)..(Int8(Int8(25))&127):(Int64(107)|1)), ((Int8(Int8(105))&127)..=(Int8(Int8(9))&127):(Int64(-44)|1)), ((Int8(Int8(59))&127)..=(Int8(Int8(-103))&127):(Int64(-65)|1)), ((Int8(Int8(-6))&127)..(Int8(Int8(66))&127):(Int64(77)|1)), ((Int8(Int8(-20))&127)..(Int8(Int8(-74))&127):(Int64(61)|1)), ((Int8(Int8(-78))&127)..(Int8(Int8(-56))&127):(Int64(41)|1)), ((Int8(Int8(26))&127)..(Int8(Int8(105))&127):(Int64(-108)|1)), ((Int8(Int8(-82))&127)..(Int8(Int8(73))&127):(Int64(-122)|1)), ((Int8(Int8(-61))&127)..(Int8(Int8(-128))&127):(Int64(21)|1))]), ((UInt32(UInt32(160))&127)..(UInt32(UInt32(34))&127):(Int64(-35)|1)), (true, r'2', UInt32(UInt16(Int16(10))), UInt16(Int8(-7))), ((Int32(Int32(-19))&127)..(Int32(Int32(82))&127):(Int64(Int32(Int32(-43)))|1)));
        if (var_1692561265558_63) { // block id: 70
            var_1692561265558_17[2];
            match (Enum_1692561265558_75.defaultValue) {
                case _ => 
                    ((Int64(Int64(-1))&127)..(Int64(Int64(-30))&127):(Int64(49)|1))
                
            };
            [((Int8(Int8(56))&127)..(Int8(Int8(-112))&127):(Int64(-99)|1)), ((Int8(Int8(70))&127)..(Int8(Int8(62))&127):(Int64(-42)|1)), ((Int8(Int8(13))&127)..=(Int8(Int8(55))&127):(Int64(-107)|1)), ((Int8(Int8(112))&127)..(Int8(Int8(-80))&127):(Int64(-11)|1)), ((Int8(Int8(50))&127)..(Int8(Int8(8))&127):(Int64(-122)|1)), ((Int8(Int8(-83))&127)..(Int8(Int8(104))&127):(Int64(45)|1)), ((Int8(Int8(-15))&127)..=(Int8(Int8(111))&127):(Int64(-58)|1)), ((Int8(Int8(-114))&127)..(Int8(Int8(54))&127):(Int64(9)|1)), ((Int8(Int8(-15))&127)..(Int8(Int8(93))&127):(Int64(-57)|1)), ((Int8(Int8(-118))&127)..=(Int8(Int8(-16))&127):(Int64(82)|1))][8]
        } else if (if (if (true) { // block id: 88
            var_1692561265558_63
        } else { // block id: 90
            var_1692561265558_63
        }) { // block id: 92
            var_1692561265558_63 && var_1692561265558_63
        } else { // block id: 96
            ((UInt16(var_1692561265558_99)&127)..(UInt16(var_1692561265558_99)&127):(var_1692561265558_103|1));
            var_1692561265558_63
        }) { // block id: 107
            var var_1692561265558_645 : (Int16) -> Range<Int8> = func_1692561265558_109<Int64>;
            Int16(-17)|>var_1692561265558_645
        } else { // block id: 648
            (Option<(UInt8, String, (Array<UInt64>, Array<Range<Int8>>, Int32, (((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Float32), Int32, Array<Range<Int8>>), Range<UInt32>, (Bool, Rune, UInt32, UInt16), Range<Int32>)>.None ?? var_1692561265558_656);
            if (true) { ((Int8(Int8(11))&127)..=(Int8(Int8(59))&127):(Int64(24)|1)) } else { ((Int8(Int8(64))&127)..(Int8(Int8(17))&127):(Int64(121)|1)) } 
        };
        (var_1692561265558_165.var_1692561265558_760 ?? (if (true) { Option<Int16>.None } else { Option<Int16>.Some(var_1692561265558_772) }  ?? var_1692561265558_777[1]));
        var var_1692561265558_831 : (Unit, ((Bool, Rune, UInt32, UInt16), (Bool, Rune, UInt32, UInt16), Unit), Range<Int64>) = ((), (((((), ((false, r'D', UInt32(109), UInt16(44)), (false, r'M', UInt32(193), UInt16(242)), ()), ((Int64(Int64(27))&127)..=(Int64(Int64(-117))&127):(Int64(116)|1))) is Float64), r'y', UInt32(Int32(52)), UInt16(249)), (true, r'B', UInt32(Int16(78)), UInt16(238)), ()), ((Int64(Int64(UInt16(163)))&127)..=(Int64(Int64(Int32(83)))&127):(Int64(-91)|1)));
        try { // block id: 827
            var_1692561265558_831[0];
            Option<Unit>.None.getOrThrow();
            try { // block id: 873
                var_1692561265558_876 *= var_1692561265558_876;
                var_1692561265558_186++;
                var_1692561265558_885 -= Int16(-77)
            } finally { // block id: 890
                ()
            }
        } finally { // block id: 892
            var_1692561265558_895[3];
            var var_1692561265558_943 : Unit = ();
            [var_1692561265558_943, var_1692561265558_943, var_1692561265558_943, (), var_1692561265558_943, (), var_1692561265558_943, (), var_1692561265558_943, var_1692561265558_943][7]
        }
    }
;
    var var_1692561265558_1004 : Class_1692561265558_1000<Array<UInt64>, Enum_1692561265558_75> = Class_1692561265558_1000<Array<UInt64>, Enum_1692561265558_75>();
    var var_1692561265558_1032 : UInt16 = UInt16(107);
    func_1692561265558_55<UInt16, UInt8>(namedParam_1692561265558_56 : [true, true, true, true, true, false, true, true, true, false][5], namedParam_1692561265558_57 : (([((Int8(Int8(71))&127)..=(Int8(Int8(63))&127):(Int64(110)|1)), ((Int8(Int8(-6))&127)..(Int8(Int8(124))&127):(Int64(-49)|1)), ((Int8(Int8(66))&127)..(Int8(Int8(-116))&127):(Int64(85)|1)), ((Int8(Int8(22))&127)..(Int8(Int8(-87))&127):(Int64(-4)|1)), ((Int8(Int8(-4))&127)..=(Int8(Int8(92))&127):(Int64(96)|1)), ((Int8(Int8(-70))&127)..(Int8(Int8(17))&127):(Int64(56)|1)), ((Int8(Int8(37))&127)..=(Int8(Int8(-127))&127):(Int64(94)|1)), ((Int8(Int8(-58))&127)..=(Int8(Int8(-11))&127):(Int64(114)|1)), ((Int8(Int8(-101))&127)..(Int8(Int8(-98))&127):(Int64(74)|1)), ((Int8(Int8(-84))&127)..(Int8(Int8(-53))&127):(Int64(-101)|1))], ((Int32(Int32(-21))&127)..=(Int32(Int32(79))&127):(Int64(-73)|1)), [(), (), (), (), (), (), (), (), (), ()]), var_1692561265558_967, Int8(59))[2], namedParam_1692561265558_58 : try { // block id: 972
        let var_1692561265558_974 : Unit = ();
        var_1692561265558_974;
        ((UInt8(UInt8(100))&127)..(UInt8(var_1692561265558_186)&127):(Int64(-88)|1))
    } catch (_) { // block id: 980
        var var_1692561265558_983 : Int8 = Int8(Int8(29));
        var_1692561265558_983 %= ((var_1692561265558_529) | 1);
        ((UInt8(UInt8(34))&127)..=(UInt8(var_1692561265558_186)&127):(var_1692561265558_533|1))
    } finally { // block id: 991
        var var_1692561265558_993 : Unit = ();
        var_1692561265558_993;
        ((UInt8(var_1692561265558_186)&127)..(UInt8(UInt8(84))&127):(var_1692561265558_533|1))
    }, namedParam_1692561265558_59 : var_1692561265558_1004.func_1692561265558_1007<Class_1692561265558_293<Int16, Range<UInt16>>, Float64>(optionalParam_1692561265558_1008 : (var_1692561265558_63, r'C', UInt32(186), var_1692561265558_1032)));
    var_1692561265558_533
}

main(): Int64 {
    try {
        func_1692561265558_9() << (((Int64(38) | var_1692561265558_533)) & 7)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0, T1> Class_1692561265558_293<T0, T1> {

}

extend<T0, T1> Class_1692561265558_1000<T0, T1> {
    func func_1692561265558_1007<T0, T1>(optionalParam_1692561265558_1008 ! : (Bool, Rune, UInt32, UInt16) = (false, r'e', UInt32(21), UInt16(UInt16(132)))) : Float32 { // block id: 1015
        Class_1692561265558_144<Range<UInt32>>.var_1692561265558_1019
    }

}

extend<T0, T1, T2> Struct_1692561265558_161<T0, T1, T2> {

}

