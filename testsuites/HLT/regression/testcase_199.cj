/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

var var_1667527279307_9 : Unit = ()
public var var_1667527279307_19 : Bool = (match (UInt16(Int8(Int8(Int8(32))))) {
    case _: Int32 => true
    case _ => false
})
var var_1667527279307_58 : Int16 = Int16(UInt16(UInt8(Int8(Int8(42)))))
var var_1667527279307_101 : Float64 = (-47.0)
public var var_1667527279307_109 : UInt16 = UInt16(UInt8(253))
var var_1667527279307_134 : UInt8 = UInt8(193)
public var var_1667527279307_221 : (String, Float32, Bool, Int16, Float64) = (###"x,7,vk#w:m"###, Float32(Float32(Float32(119.0))), (match (Int32(102)) {
    case _: Int64 => true
    case _ => false
}), Int16(UInt8(209)), 30.0)
let var_1667527279307_281 : Rune = r'T'
let var_1667527279307_379 : UInt32 = UInt32(156)
public let var_1667527279307_481 : ?Int64 = Option<Int64>.None
var var_1667527279307_496 : UInt32 = UInt32(178)
var var_1667527279307_512 : UInt64 = UInt64(152)
public var var_1667527279307_567 : ?UInt16 = Option<UInt16>.None
var var_1667527279307_662 : Range<Int16> = (((Int16(-14)&127))..=((Int16(-61)&127)):(((-112)|1)))
public var var_1667527279307_669 : Float32 = Float32(116.0)
let var_1667527279307_694 : Int32 = Int32(UInt16(218))
var var_1667527279307_807 : (Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8) = ((-28), ("pDzMa{/&(8f", Float32(Float32(-15.0)), false, Int16(-19), Float64(Float64((-100.0)))), UInt8(209), (), UInt16(Int8(UInt8(UInt8(45)))), UInt8(101))
public var var_1667527279307_868 : ?((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>) = Option<((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>)>.None
public let var_1667527279307_889 : Int8 = Int8(Int8(-120))
let var_1667527279307_933 : String = "fxr q5:$tN"
public var var_1667527279307_1104 : Range<Int64> = ((((-43)&127))..=(((-32)&127)):((52|1)))
public let var_1667527279307_1132 : Int64 = Int64(Int32(32))
public let var_1667527279307_1258 : ?Rune = (match (Float32(-47.0)) {
    case newVar: Rune => Option<Rune>.Some(newVar)
    case _ => Option<Rune>.None
})
var var_1667527279307_1263 : ?Bool = Option<Bool>.None
var var_1667527279307_1324 : Int32 = Int32(-19)
public let var_1667527279307_1349 : ?((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64) = Option<((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64)>.None
public let var_1667527279307_1370 : (Int16, Array<Bool>, Float64, Int8, Int64, (UInt16, UInt8, UInt16, Float32, UInt8, Float64)) = (Int16(65), [false, (match (r'S') {
    case _: Option<Int8> => true
    case _ => false
}), (match (Class_1667527279307_147<Float64>()) {
    case _: Int32 => true
    case _ => false
}), true, true, false, true, false, true, true], Float64(113.0), Int8(Int8(UInt8(16))), 17, (UInt16(UInt16(42)), UInt8(148), UInt16(49), Float32(Float32(Float32(73.0))), UInt8(149), Float64(Float64(50.0))))
var var_1667527279307_1436 : Enum_1667527279307_178 = Enum_1667527279307_178.defaultValue
let var_1667527279307_1453 : Float32 = Float32(-56.0)
let var_1667527279307_1598 : ?((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64) = Option<((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64)>.None
public var var_1667527279307_1605 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (UInt16(Int8(Int8(Int8(110)))), UInt8(184), UInt16(Int8(Int8(Int8(104)))), Float32(-100.0), UInt8(Int8(-71)), 34.0)
let var_1667527279307_1639 : Array<Bool> = [false, false, false, true, false, true, false, false, true, true]
let var_1667527279307_1645 : (Float32, Rune, String, UInt16, Int16, UInt64, UInt32) = (Float32(117.0), r'r', "i1${var_1667527279307_933}&${var_1667527279307_933}l`8VCKj", UInt16(Int8(UInt8(190))), Int16(Int8(-31)), UInt64(UInt32(229)), UInt32(UInt16(50)))
var var_1667527279307_1701 : Range<Int8> = (((Int8(Int8(15))&127))..=((Int8(UInt8(UInt8(76)))&127)):(((16|1))))
let var_1667527279307_1854 : ?Unit = Option<Unit>.None
var var_1667527279307_1880 : Range<UInt64> = (((UInt64(Int64(UInt8(Int8(-62))))&127))..=((UInt64(UInt16(Int16(Int16(-124))))&127)):(((Int64(UInt32(Int32(Int16(90))))|1))))
public func func_1667527279307_12<T0, T1, T2>(param_1667527279307_13 : UInt64) : Unit { // block id: 14
    var loopTimeVar_1667527279307_41 : Int64 = 0;
    do {
        loopTimeVar_1667527279307_41++;
        var var_1667527279307_36 : UInt8 = UInt8(76);
        var_1667527279307_36 = var_1667527279307_36 >> ((var_1667527279307_36) & 7);
        ()
    } while ((try { // block id: 17
        var_1667527279307_19;
        ();
        false
    } catch (_) { // block id: 27
        ();
        UInt16(106) | UInt16(102);
        true
    }) && loopTimeVar_1667527279307_41 < 100 ) 
    return
}

public open class Class_1667527279307_147<T0> {
    public Class_1667527279307_147() { // block id: 149

    }
;
    public static mut prop var_1667527279307_152 : Bool { // block id: 153
        get() { // block id: 155
            ();
            (Float32(-53.0), r'D', ".s]]HB Wyv", UInt16(137), Int16(Int16(-35)), UInt64(UInt64(Int32(67))), UInt32(61));
            (match (r'v') {
                case _: Unit => true
                case _ => false
            });
            var_1667527279307_1947
        }

        set(Value) { // block id: 172
            ();
            ();
            ();
            var_1667527279307_1947 = Value
        }

    };
    public init(optionalParam_1667527279307_326 ! : String = "cq$@f%W'%3", namedParam_1667527279307_328 ! : Enum_1667527279307_178, optionalParam_1667527279307_329 ! : Float64 = Float64(107.0)) { // block id: 332
        var var_1667527279307_334 : Int32 = Int32(92);
        var_1667527279307_334
    }
;
    prop var_1667527279307_901 : Bool { // block id: 902
        get() { // block id: 904
            (match ([UInt64(104), UInt64(114), UInt64(227), UInt64(241), UInt64(109), UInt64(24), UInt64(194), UInt64(220), UInt64(170), UInt64(172)]) {
                case _: Array<UInt64> => true
                case _ => false
            })
        }

    };
    public static var var_1667527279307_1590 : Unit = ();
    static var var_1667527279307_1947 : Bool = false
}

public enum Enum_1667527279307_178 {
    defaultValue
}



public func func_1667527279307_575(param_1667527279307_576 : Class_1667527279307_147<Float64>) : Int8 { // block id: 577
    func func_1667527279307_581<T0>() : Range<Int64> { // block id: 582
        let var_1667527279307_586 : Array<Range<Int64>> = [(((53&127))..=(((-88)&127)):((60|1))), (((Int64(Int32(Int8(-91)))&127))..((28&127)):((((-111)|1)))), (((Int64(UInt8(1))&127))..(((-95)&127)):(((Int64(Int32(UInt16(86)))|1)))), (((102&127))..(((-45)&127)):((94|1))), (((123&127))..=(((-12)&127)):(((Int64(UInt8(229))|1)))), (((45&127))..((Int64(UInt16(UInt8(156)))&127)):(((Int64(UInt64(169))|1)))), (((4&127))..=(((-20)&127)):((109|1))), (((28&127))..((59&127)):(((-96)|1))), (((Int64(UInt32(225))&127))..=(((-91)&127)):(((Int64(Int32(Int32(42)))|1)))), (((91&127))..(((-54)&127)):((90|1)))];
        var_1667527279307_586[6]
    }
;
    let var_1667527279307_630 : Int64 = Int64(34);
    var var_1667527279307_641 : Int8 = Int8(23);
    match (func_1667527279307_581<Float32>()) {
        case _ => 
            var_1667527279307_630;
            Int8(-97) * Int8(-73)
        
        case _ => 
            """
B?K k
:K1>(
""";
            var_1667527279307_641
        
        case _ => 
            ();
            var_1667527279307_641
        
        case _ => 
            var_1667527279307_641
        
    } >> (((match (Option<Int8>.Some(var_1667527279307_641)) {
        case Some(num) => num
        case None => (UInt16(40), var_1667527279307_662, var_1667527279307_641, (-27.0), Option<Int64>.None, var_1667527279307_281, var_1667527279307_669, UInt16(23), (((Int32(27)&127))..((Int32(83)&127)):((9|1))))[2]
    })) & 7)
}




func func_1667527279307_484(param_1667527279307_485 : UInt32, param_1667527279307_486 : Range<UInt8>) : (Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8) { // block id: 487
    let var_1667527279307_500 : Enum_1667527279307_178 = Enum_1667527279307_178.defaultValue;
    let var_1667527279307_525 : Unit = ();
    var var_1667527279307_533 : Int64 = 7;
    var var_1667527279307_537 : String = ###"<C+D.MWTO!"###;
    var var_1667527279307_540 : Float32 = Float32(-37.0);
    let var_1667527279307_546 : UInt8 = UInt8(UInt8(Int8(UInt8(116))));
    match (try { // block id: 490
        Float32(84.0) / Float32((Int32(Float32(-121.0))) | 1);
        var_1667527279307_496 = var_1667527279307_496 << ((var_1667527279307_496) & 7);
        var_1667527279307_500
    } finally { // block id: 502
        ();
        var_1667527279307_500
    }) {
        case defaultValue => 
            ();
            UInt64(65) & var_1667527279307_512
        
        case caseVar_1667527279307_516 : Enum_1667527279307_178 => 
            ();
            ();
            UInt64(94)
        
        case defaultValue => 
            var_1667527279307_525;
            (((93&127))..=((2&127)):((30|1)));
            UInt64(245)
        
        case _ => 
            let var_1667527279307_554 : UInt8 = UInt8(UInt8(190));
            (var_1667527279307_533, (var_1667527279307_537, var_1667527279307_540, var_1667527279307_19, var_1667527279307_58, (-110.0)), var_1667527279307_546, (), var_1667527279307_109, var_1667527279307_554);
            UInt64(236)
        
    };
    let var_1667527279307_676 : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>();
    var var_1667527279307_681 : Float64 = Float64(Float64(Float64(Float32(Float32(-65.0)))));
    var var_1667527279307_700 : Range<Int32> = (((Int32(-48)&127))..=((Int32(9)&127)):((((-71)|1))));
    var var_1667527279307_736 : Int32 = Int32(-126);
    ((match (var_1667527279307_567) {
        case Some(num) => num
        case None => UInt16(190)
    }), (((var_1667527279307_58&127))..=((Int16(119)&127)):((((-96)|1)))), (func_1667527279307_575(var_1667527279307_676)), var_1667527279307_101 + var_1667527279307_681, try { // block id: 688
        var_1667527279307_9;
        if (var_1667527279307_19) { (((var_1667527279307_694&127))..((var_1667527279307_694&127)):(((var_1667527279307_533|1)))) } else { var_1667527279307_700 } ;
        Option<Int64>.Some(var_1667527279307_533)
    } catch (e: Exception) { // block id: 707
        Option<Int64>.None
    } finally { // block id: 709
        ();
        UInt16(147);
        if (true) { var_1667527279307_481 } else { Option<Int64>.Some((-2)) } 
    }, (match (Option<Rune>.None) {
        case Some(num) => num
        case None => r'6'
    }), (match (Option<Float32>.None) {
        case Some(num) => num
        case None => var_1667527279307_669
    }), UInt16(233) * var_1667527279307_109, (((var_1667527279307_736&127))..=((Int32(-65)&127)):((((-53)|1)))))[4];
    var var_1667527279307_751 : Int64 = (-10);
    var var_1667527279307_778 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (UInt16(38), UInt8(Int8(-28)), UInt16(23), Float32(Float32(-113.0)), UInt8(195), (-26.0));
    let var_1667527279307_789 : Option<(Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)> = Option<(Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)>.None;
    try { // block id: 742
        Option<(Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)>.Some((var_1667527279307_751, ("""
S=Hh=
3Dy05
""", var_1667527279307_669, true, Int16(-113), (-16.0)), var_1667527279307_134, var_1667527279307_9, var_1667527279307_109, UInt8(141))).getOrThrow()
    } finally { // block id: 763
        try { // block id: 765
            ();
            ();
            UInt16(159) << ((UInt16(227)) & 7)
        } catch (_) { // block id: 771
            Class_1667527279307_147<Float64>();
            var_1667527279307_109 | UInt16(212)
        } finally { // block id: 776
            var_1667527279307_778;
            var_1667527279307_789;
            var_1667527279307_109
        };
        if (true) { (((Int32(-68)&127))..=((Int32(68)&127)):(((106|1)))) } else { (((var_1667527279307_736&127))..((Int32(85)&127)):((((-29)|1)))) } ;
        (var_1667527279307_546, var_1667527279307_807, var_1667527279307_700, (((Int8(79)&127))..((Int8(2)&127)):(((-13)|1))), Int32(23))[1]
    }
}


public func func_1667527279307_473<T0, T1>(param_1667527279307_474 : Int8) : Bool { // block id: 475
    func func_1667527279307_477(param_1667527279307_478 : (Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)) : Option<Int64> { // block id: 479
        var_1667527279307_481
    }
;
    var var_1667527279307_848 : Int16 = Int16(UInt16(UInt8(Int8(-67))));
    func_1667527279307_477(func_1667527279307_484(if (var_1667527279307_19) { // block id: 832
        ((((-60)&127))..=((19&127)):((26|1)));
        let var_1667527279307_837 : Int64 = (-73);
        Option<(Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)>.Some((var_1667527279307_837, var_1667527279307_221, var_1667527279307_134, (), UInt16(102), UInt8(235)));
        var_1667527279307_496
    } else { // block id: 845
        var_1667527279307_848 = var_1667527279307_848 / ((var_1667527279307_848) | 1);
        var_1667527279307_379
    }, [(((UInt8(69)&127))..=((UInt8(188)&127)):(((-120)|1))), (((UInt8(238)&127))..((UInt8(9)&127)):((26|1))), (((UInt8(95)&127))..=((UInt8(50)&127)):((115|1))), (((UInt8(197)&127))..=((UInt8(183)&127)):(((-35)|1))), (((UInt8(168)&127))..((UInt8(0)&127)):((109|1))), (((UInt8(215)&127))..=((UInt8(150)&127)):(((-69)|1))), (((UInt8(24)&127))..((UInt8(253)&127)):(((-28)|1))), (((UInt8(22)&127))..=((UInt8(250)&127)):(((-75)|1))), (((UInt8(135)&127))..=((UInt8(145)&127)):(((-3)|1))), (((UInt8(127)&127))..=((UInt8(122)&127)):(((-101)|1)))][9]));
    var var_1667527279307_879 : Float64 = Float64(Float32(Float32(69.0)));
    (match (var_1667527279307_868) {
        case Some(num) => num
        case None => (((-46), ("';+C?;:a{CW", var_1667527279307_669, var_1667527279307_19, var_1667527279307_848, var_1667527279307_879), var_1667527279307_134, (), UInt16(144), var_1667527279307_134), (((67&127))..(((-116)&127)):(((-93)|1))), var_1667527279307_889, (((UInt32(179)&127))..=((UInt32(208)&127)):((69|1))), [(((UInt8(226)&127))..((UInt8(14)&127)):((50|1))), (((UInt8(3)&127))..=((UInt8(233)&127)):(((-121)|1))), (((UInt8(1)&127))..=((UInt8(54)&127)):((123|1))), (((UInt8(77)&127))..=((UInt8(201)&127)):(((-80)|1))), (((UInt8(208)&127))..((UInt8(241)&127)):(((-9)|1))), (((UInt8(16)&127))..=((UInt8(182)&127)):(((-111)|1))), (((UInt8(32)&127))..((UInt8(161)&127)):(((-15)|1))), (((UInt8(26)&127))..((UInt8(3)&127)):((100|1))), (((UInt8(232)&127))..((UInt8(218)&127)):((79|1))), (((UInt8(149)&127))..=((UInt8(113)&127)):((101|1)))])
    })[4][5];
    let var_1667527279307_898 : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>();
    var_1667527279307_898.var_1667527279307_901
}




public func func_1667527279307_449(param_1667527279307_450 : ((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64)) : Option<Int64> { // block id: 451
    let var_1667527279307_917 : ?Bool = (match ((((UInt64(UInt32(UInt16(74)))&127))..=((UInt64(UInt32(Int8(-75)))&127)):(((Int64(UInt8(UInt8(26)))|1))))) {
        case newVar: Bool => Option<Bool>.Some(newVar)
        case _ => Option<Bool>.None
    });
    let var_1667527279307_943 : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>();
    let var_1667527279307_993 : Range<Int64> = ((((-56)&127))..=((123&127)):(((17|1))));
    func func_1667527279307_454(namedParam_1667527279307_455 ! : String, namedParam_1667527279307_456 ! : UInt16, optionalParam_1667527279307_457 ! : Bool = false) : Bool { // block id: 459
        var var_1667527279307_908 : (Int8) -> Bool = func_1667527279307_473<Option<Int8>, Float64>;
        var var_1667527279307_955 : ?Bool = (match ((UInt16(20), (((Int16(117)&127))..((Int16(-90)&127)):(((-30)|1))), Int8(-57), Float64(Float32(Float32(119.0))), Option<Int64>.None, r'w', Float32(Float32(Float32(-83.0))), UInt16(Int8(UInt8(147))), (((Int32(-100)&127))..((Int32(Int32(-16))&127)):(((Int64(UInt64(212))|1)))))) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        });
        [(var_1667527279307_908(Int8(104))), (match (var_1667527279307_917) {
            case Some(num) => num
            case None => var_1667527279307_19
        }), (var_1667527279307_933, Float32(-51.0), var_1667527279307_19, Int16(71), var_1667527279307_101)[2], true, var_1667527279307_943.var_1667527279307_901, (-85.0) <= 76.0, (match (var_1667527279307_955) {
            case Some(num) => num
            case None => false
        }), Class_1667527279307_147<Float64>.var_1667527279307_152, [true, false, false, false, true, true, true, false, false, false][1], try { // block id: 986
            var_1667527279307_9;
            false
        } catch (_) { // block id: 989
            if (var_1667527279307_19) { var_1667527279307_993 } else { ((((-68)&127))..(((-48)&127)):(((-67)|1))) } ;
            var_1667527279307_19
        } finally { // block id: 1000
            var_1667527279307_19 = var_1667527279307_19 || (true);
            ();
            false
        }][9]
    }
;
    let var_1667527279307_1016 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (UInt16(Int8(66)), UInt8(UInt8(197)), UInt16(Int16(-1)), Float32(Float32(Float32(-114.0))), UInt8(153), Float64((-63.0)));
    var var_1667527279307_1035 : (UInt16, Int64, ((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>), Range<UInt8>, Range<UInt64>, Range<Int16>) = (UInt16(Int16(113)), (-109), ((106, ("gZ;@9zcS!O", Float32(109.0), false, Int16(18), (-102.0)), UInt8(UInt8(108)), (), UInt16(198), UInt8(168)), ((((-100)&127))..(((-93)&127)):(((-63)|1))), Int8(-103), (((UInt32(62)&127))..=((UInt32(57)&127)):(((-42)|1))), [(((UInt8(182)&127))..((UInt8(193)&127)):((((-100)|1)))), (((UInt8(51)&127))..((UInt8(237)&127)):((((-37)|1)))), (((UInt8(248)&127))..((UInt8(0)&127)):(((-46)|1))), (((UInt8(27)&127))..((UInt8(10)&127)):(((-15)|1))), (((UInt8(124)&127))..=((UInt8(153)&127)):((((-37)|1)))), (((UInt8(26)&127))..=((UInt8(67)&127)):((((-120)|1)))), (((UInt8(107)&127))..=((UInt8(85)&127)):(((-126)|1))), (((UInt8(243)&127))..=((UInt8(29)&127)):(((110|1)))), (((UInt8(223)&127))..=((UInt8(143)&127)):((75|1))), (((UInt8(44)&127))..=((UInt8(213)&127)):((111|1)))]), (((UInt8(158)&127))..=((UInt8(25)&127)):(((-123)|1))), (((UInt64(UInt8(122))&127))..((UInt64(Int8(-22))&127)):(((Int64(UInt64(152))|1)))), (((Int16(36)&127))..=((Int16(58)&127)):((29|1))));
    let var_1667527279307_1123 : UInt8 = UInt8(Int8(122));
    var var_1667527279307_1166 : ((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>) = ((Int64(Int8(UInt8(173))), (###"&:Zj\"E?U(O"###, Float32(-91.0), true, Int16(UInt8(4)), 65.0), UInt8(41), (), UInt16(191), UInt8(97)), (((81&127))..(((-65)&127)):((94|1))), Int8(Int8(Int8(Int8(29)))), (((UInt32(76)&127))..((UInt32(Int8(83))&127)):((((-118)|1)))), [(((UInt8(100)&127))..((UInt8(30)&127)):((110|1))), (((UInt8(Int8(-107))&127))..((UInt8(43)&127)):(((Int64((-63))|1)))), (((UInt8(246)&127))..=((UInt8(120)&127)):((((-34)|1)))), (((UInt8(Int8(9))&127))..((UInt8(235)&127)):((((-55)|1)))), (((UInt8(58)&127))..=((UInt8(201)&127)):(((-105)|1))), (((UInt8(149)&127))..=((UInt8(Int8(-52))&127)):(((78|1)))), (((UInt8(152)&127))..((UInt8(111)&127)):(((-41)|1))), (((UInt8(133)&127))..=((UInt8(131)&127)):((((-46)|1)))), (((UInt8(Int8(-33))&127))..((UInt8(Int8(-22))&127)):((((-66)|1)))), (((UInt8(97)&127))..=((UInt8(19)&127)):((84|1)))]);
    var var_1667527279307_1248 : Int8 = Int8(-56);
    if (func_1667527279307_454(namedParam_1667527279307_455 : (match (Option<String>.None) {
        case Some(num) => num
        case None => ">dVL@m4y.."
    }), namedParam_1667527279307_456 : var_1667527279307_1016[0])) { // block id: 1031
        var_1667527279307_1035[4];
        var var_1667527279307_1113 : Range<UInt8> = (((UInt8(UInt8(84))&127))..((UInt8(2)&127)):(((Int64(UInt64(139))|1))));
        if (var_1667527279307_19) { // block id: 1095
            UInt64(254)
        } else { // block id: 1097
            var var_1667527279307_1146 : Range<UInt8> = (((UInt8(Int8(Int8(UInt8(157))))&127))..((UInt8(108)&127)):(((Int64(UInt64(142))|1))));
            if (var_1667527279307_19) { Option<((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>)>.Some((var_1667527279307_807, var_1667527279307_1104, var_1667527279307_889, (((var_1667527279307_379&127))..=((UInt32(252)&127)):((((-51)|1)))), [var_1667527279307_1113, (((UInt8(68)&127))..=((var_1667527279307_1123&127)):(((35|1)))), (((UInt8(221)&127))..((UInt8(83)&127)):(((-107)|1))), (((var_1667527279307_1123&127))..=((var_1667527279307_134&127)):(((var_1667527279307_1132|1)))), (((UInt8(237)&127))..=((UInt8(115)&127)):((5|1))), (((UInt8(233)&127))..((UInt8(6)&127)):((((-78)|1)))), var_1667527279307_1113, (((UInt8(147)&127))..((UInt8(111)&127)):(((var_1667527279307_1132|1)))), var_1667527279307_1146, var_1667527279307_1113])) } else { var_1667527279307_868 } ;
            UInt64(188)
        };
        match (var_1667527279307_917) {
            case caseVar_1667527279307_1162 : Array<UInt64> => 
                var_1667527279307_379;
                var_1667527279307_1166;
                var_1667527279307_109 = var_1667527279307_109 + 1
            
            case _ => 
                (-26);
                var_1667527279307_9
            
            case _ => 
                ();
                var_1667527279307_58 = var_1667527279307_58 + 1
            
            case caseVar_1667527279307_1243 => 
                ();
                var_1667527279307_1248 = var_1667527279307_1248 * (var_1667527279307_1248)
            
            case _ => 
                var_1667527279307_9
            
        }
    };
    var loopTimeVar_1667527279307_1269 : Int64 = 0;
    do {
        loopTimeVar_1667527279307_1269++;
        var_1667527279307_9
    } while (((match ((match (var_1667527279307_1258) {
        case newVar: Bool => Option<Bool>.Some(newVar)
        case _ => Option<Bool>.None
    })) {
        case Some(num) => num
        case None => (match (var_1667527279307_1263) {
        case Some(num) => num
        case None => true
    })
    })) && loopTimeVar_1667527279307_1269 < 100 ) ;
    var var_1667527279307_1302 : Int64 = (-98);
    if ((match ((match ([(((UInt8(207)&127))..((UInt8(68)&127)):((71|1))), (((UInt8(60)&127))..((UInt8(214)&127)):((17|1))), (((UInt8(187)&127))..=((UInt8(212)&127)):(((-119)|1))), (((UInt8(239)&127))..=((UInt8(137)&127)):(((-90)|1))), (((UInt8(133)&127))..=((UInt8(173)&127)):(((-110)|1))), (((UInt8(218)&127))..=((UInt8(82)&127)):(((-102)|1))), (((UInt8(50)&127))..((UInt8(97)&127)):(((-103)|1))), (((UInt8(48)&127))..((UInt8(67)&127)):(((-89)|1))), (((UInt8(37)&127))..=((UInt8(68)&127)):(((-114)|1))), (((UInt8(181)&127))..((UInt8(184)&127)):((119|1)))]) {
        case newVar: Bool => Option<Bool>.Some(newVar)
        case _ => Option<Bool>.None
    })) {
        case Some(num) => num
        case None => match (var_1667527279307_1263) {
        case caseVar_1667527279307_1278 : Range<UInt64> => 
            UInt32(118) > UInt32(88)
        
        case _ : Array<Bool> => 
            Int8(53);
            Int32(80);
            Int8(-72) < var_1667527279307_889
        
        case _ : Range<Int32> => 
            var_1667527279307_19
        
        case caseVar_1667527279307_1297 => 
            ();
            var_1667527279307_1302 = var_1667527279307_1302 % (((-22)) | 1);
            true
        
        case _ => 
            var_1667527279307_512 = var_1667527279307_512 / ((UInt64(185)) | 1);
            ();
            var_1667527279307_109 >= UInt16(0)
        
    }
    })) { (match (try { // block id: 1317
        ();
        var_1667527279307_9;
        var_1667527279307_567
    } finally { // block id: 1321
        var_1667527279307_1324 = var_1667527279307_1324 + 1;
        Option<UInt16>.Some(var_1667527279307_109)
    }) {
        case newVar: Int64 => Option<Int64>.Some(newVar)
        case _ => Option<Int64>.None
    }) } else { try { // block id: 1329
        ();
        (((UInt16(215)&127))..=((var_1667527279307_109&127)):(((102|1))));
        if (true) { var_1667527279307_481 } else { Option<Int64>.None } 
    } finally { // block id: 1339
        Option<Int64>.Some(var_1667527279307_1132)
    } } 
}


func func_1667527279307_440(param_1667527279307_441 : Class_1667527279307_147<Float64>) : Int64 { // block id: 442
    var var_1667527279307_1352 : ((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64) = ((UInt16(206), UInt8(80), UInt16(Int16(Int8(-85))), Float32(-21.0), UInt8(UInt8(39)), 23.0), 98.0);
    var var_1667527279307_1410 : Int64 = 112;
    let var_1667527279307_1413 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (UInt16(Int8(UInt8(UInt8(224)))), UInt8(UInt8(248)), UInt16(UInt16(UInt16(92))), Float32(Float32(-68.0)), UInt8(83), Float64(Float32(17.0)));
    (match ((func_1667527279307_449((match (var_1667527279307_1349) {
        case Some(num) => num
        case None => var_1667527279307_1352
    })))) {
        case Some(num) => num
        case None => if (true) { var_1667527279307_1370 } else { (Int16(-43), [true, false, false, false, true, false, true, false, false, true], 115.0, var_1667527279307_889, var_1667527279307_1410, var_1667527279307_1413) } [4]
    })
}

func func_1667527279307_435(param_1667527279307_436 : UInt64) : (Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8) { // block id: 437
    var var_1667527279307_1431 : (Class_1667527279307_147<Float64>) -> Int64 = func_1667527279307_440;
    ((var_1667527279307_1431(Class_1667527279307_147<Float64>())), match (var_1667527279307_1436) {
        case caseVar_1667527279307_1440 => 
            if (false) { (var_1667527279307_933, Float32(-34.0), true, Int16(-87), var_1667527279307_101) } else { (###".47PFr0$<A"###, var_1667527279307_1453, var_1667527279307_19, Int16(68), var_1667527279307_101) } 
        
        case _ : ((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64) => 
            UInt32(248);
            ("sFv^.$^g'L", var_1667527279307_1453, var_1667527279307_19, Int16(74), var_1667527279307_101)
        
        case _ => 
            (var_1667527279307_933, var_1667527279307_669, true, var_1667527279307_58, 112.0)
        
        case defaultValue => 
            var var_1667527279307_1482 : Int8 = Int8(Int8(-23));
            var_1667527279307_1482 = var_1667527279307_1482;
            var_1667527279307_9;
            (";/P<8}vEmf", Float32(73.0), true, var_1667527279307_58, var_1667527279307_101)
        
        case _ => 
            Option<String>.None;
            var_1667527279307_221
        
    }, var_1667527279307_134 >> ((try { // block id: 1500
        var_1667527279307_496 = var_1667527279307_496 * (var_1667527279307_379);
        UInt8(34) * var_1667527279307_134
    } finally { // block id: 1507
        [var_1667527279307_1104, var_1667527279307_1104, var_1667527279307_1104, ((((-102)&127))..((2&127)):((75|1))), ((((-34)&127))..=(((-51)&127)):((95|1))), ((((-53)&127))..=((74&127)):(((var_1667527279307_1132|1)))), ((((-70)&127))..=((118&127)):(((-32)|1))), (((35&127))..=((88&127)):(((-78)|1))), (((102&127))..=((var_1667527279307_1132&127)):(((var_1667527279307_1132|1)))), ((((-68)&127))..(((-96)&127)):(((-46)|1)))];
        Enum_1667527279307_178.defaultValue;
        UInt8(165)
    }) & 7), if (Int32(-115) > var_1667527279307_1324) { // block id: 1531
        UInt64(17);
        var_1667527279307_9;
        var_1667527279307_109 = var_1667527279307_109 - (UInt16(252))
    }, UInt16(242), if (true) { // block id: 1541
        UInt8(190) / ((UInt8(127)) | 1)
    } else if (false) { // block id: 1546
        var_1667527279307_134 + UInt8(210)
    } else { // block id: 1550
        ();
        UInt8(203)
    } & var_1667527279307_134)
}


public func func_1667527279307_484(param_1667527279307_302 : Int64, param_1667527279307_303 : Enum_1667527279307_178, param_1667527279307_304 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64)) : ((UInt16, UInt8, UInt16, Float32, UInt8, Float64), Float64) { // block id: 305
    let var_1667527279307_351 : UInt64 = UInt64(104);
    let var_1667527279307_430 : UInt32 = UInt32(88);
    func func_1667527279307_307(namedParam_1667527279307_308 ! : UInt16, namedParam_1667527279307_309 ! : Int32, optionalParam_1667527279307_310 ! : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>()) : UInt32 { // block id: 312
        var var_1667527279307_323 : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>(optionalParam_1667527279307_326 : ")YBW1z2XtN", namedParam_1667527279307_328 : Enum_1667527279307_178.defaultValue, optionalParam_1667527279307_329 : (-55.0));
        var var_1667527279307_390 : UInt32 = UInt32(Int32(Int8(UInt8(UInt8(185)))));
        var var_1667527279307_407 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (UInt16(61), UInt8(214), UInt16(156), Float32(23.0), UInt8(UInt8(143)), 44.0);
        -match (if (var_1667527279307_19) { // block id: 317
            var_1667527279307_9;
            var_1667527279307_281
        } else if (false) { // block id: 321
            var_1667527279307_323;
            if (var_1667527279307_19) { r'M' } else { r'q' } 
        } else { // block id: 343
            (Float32(-48.0), r'0', """
Tg7U\"
a{_QxC
""", UInt16(60), Int16(87), var_1667527279307_351, UInt32(57));
            let var_1667527279307_356 : Float32 = Float32(Float32(Float32(-86.0)));
            (var_1667527279307_356, r'L', ###">n~chjVt:c"###, UInt16(198), var_1667527279307_58, UInt64(112), UInt32(97));
            var_1667527279307_281
        }) {
            case r'N' | r't' | r'w' | r'i' => 
                var var_1667527279307_372 : Int64 = Int64(Int8(Int8(35)));
                var_1667527279307_372 = var_1667527279307_372 << ((var_1667527279307_372) & 7);
                var_1667527279307_379 & UInt32(181)
            
            case r'4' | r'n' | r'q' => 
                var_1667527279307_351 ^ UInt64(140);
                var_1667527279307_390 = var_1667527279307_390 & (UInt32(59));
                var_1667527279307_390
            
            case caseVar_1667527279307_400 : Bool => 
                ();
                if (false) { (var_1667527279307_407, var_1667527279307_101) } else { (var_1667527279307_407, 13.0) } ;
                UInt32(33)
            
            case _ : Int8 => 
                var_1667527279307_390 ^ var_1667527279307_390
            
            case _ => 
                var_1667527279307_430
            
        }
    }
;
    var var_1667527279307_1555 : (UInt64) -> (Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8) = func_1667527279307_435;
    var var_1667527279307_1563 : Class_1667527279307_147<Float64> = Class_1667527279307_147<Float64>(namedParam_1667527279307_328 : Enum_1667527279307_178.defaultValue);
    func_1667527279307_307(namedParam_1667527279307_308 : (var_1667527279307_1555(UInt64(103)))[4], namedParam_1667527279307_309 : Int32(try { // block id: 1561
        var_1667527279307_1563;
        let var_1667527279307_1567 : Range<UInt64> = (((UInt64(239)&127))..=((UInt64(60)&127)):(((-3)|1)));
        var_1667527279307_1567;
        Int16(81)
    } catch (_) { // block id: 1570
        var_1667527279307_101 = var_1667527279307_101 - (4.0);
        let var_1667527279307_1575 : Int16 = Int16(UInt8(UInt8(66)));
        var_1667527279307_1575
    } finally { // block id: 1579
        if (var_1667527279307_19) { Option<((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>)>.None } else { var_1667527279307_868 } ;
        Int16(-74)
    }));
    try { // block id: 1586
        Class_1667527279307_147<Float64>.var_1667527279307_1590;
        var_1667527279307_1598.getOrThrow()
    } finally { // block id: 1600
        (match (var_1667527279307_1349) {
            case Some(num) => num
            case None => (var_1667527279307_1605, var_1667527279307_101)
        })
    }
}


public func func_1667527279307_297(param_1667527279307_298 : (UInt16, UInt8, UInt16, Float32, UInt8, Float64)) : Int64 { // block id: 299
    let var_1667527279307_1680 : ?(UInt16, UInt8, UInt16, Float32, UInt8, Float64) = (match (Float32(-64.0)) {
        case newVar: (UInt16, UInt8, UInt16, Float32, UInt8, Float64) => Option<(UInt16, UInt8, UInt16, Float32, UInt8, Float64)>.Some(newVar)
        case _ => Option<(UInt16, UInt8, UInt16, Float32, UInt8, Float64)>.None
    });
    func_1667527279307_484(try { // block id: 1622
        [(((UInt8(96)&127))..((UInt8(15)&127)):((33|1))), (((UInt8(155)&127))..=((UInt8(250)&127)):(((-81)|1))), (((UInt8(189)&127))..=((UInt8(63)&127)):((36|1))), (((UInt8(39)&127))..((UInt8(143)&127)):((2|1))), (((UInt8(78)&127))..((UInt8(251)&127)):(((-95)|1))), (((UInt8(122)&127))..((UInt8(123)&127)):((21|1))), (((UInt8(205)&127))..((UInt8(248)&127)):(((-33)|1))), (((UInt8(94)&127))..((UInt8(146)&127)):((126|1))), (((UInt8(95)&127))..((UInt8(237)&127)):(((-94)|1))), (((UInt8(151)&127))..((UInt8(97)&127)):(((-112)|1)))];
        ();
        (-117)
    } catch (_) { // block id: 1626
        52 * (-111)
    } finally { // block id: 1630
        16
    }, (var_1667527279307_694, var_1667527279307_1132, (((Int16(86)&127))..=((Int16(-7)&127)):(((-105)|1))), var_1667527279307_1639, Enum_1667527279307_178.defaultValue, var_1667527279307_1605, var_1667527279307_933, var_1667527279307_1645)[4], if ([var_1667527279307_19, var_1667527279307_19, false, var_1667527279307_19, false, var_1667527279307_19, true, false, var_1667527279307_19, true][7]) { (match (var_1667527279307_1680) {
        case Some(num) => num
        case None => (UInt16(32), UInt8(55), var_1667527279307_109, var_1667527279307_1453, UInt8(121), var_1667527279307_101)
    }) } else { (var_1667527279307_109, UInt8(59), UInt16(4), Float32(-102.0), UInt8(208), var_1667527279307_101) } );
    var_1667527279307_1132
}

func func_1667527279307_285(param_1667527279307_286 : UInt16) : Rune { // block id: 287
    var var_1667527279307_290 : Int64 = Int64(UInt8(Int8(Int8(Int8(92)))));
    var_1667527279307_290 = var_1667527279307_290 / (((func_1667527279307_297(var_1667527279307_1605))) | 1);
    var_1667527279307_1701;
    let var_1667527279307_1713 : Array<UInt8> = [UInt8(78), UInt8(192), UInt8(189), UInt8(231), UInt8(137), UInt8(240), UInt8(178), UInt8(204), UInt8(243), UInt8(213)];
    var var_1667527279307_1749 : Range<Int32> = (((Int32(-92)&127))..((Int32(-66)&127)):(((90|1))));
    match (var_1667527279307_1713[4]) {
        case 72 | 8 | 198 => 
            if (var_1667527279307_19) { r'h' } else { var_1667527279307_281 } 
        
        case 108 => 
            if (true) { (UInt16(79), (((Int16(12)&127))..=((Int16(49)&127)):(((-65)|1))), Int8(0), (-63.0), Option<Int64>.Some((-42)), var_1667527279307_281, var_1667527279307_1453, UInt16(228), (((Int32(-111)&127))..((Int32(110)&127)):((79|1)))) } else { (var_1667527279307_109, (((Int16(11)&127))..=((Int16(-41)&127)):((31|1))), var_1667527279307_889, var_1667527279307_101, var_1667527279307_481, r'P', var_1667527279307_1453, UInt16(109), var_1667527279307_1749) } ;
            r'U'
        
        case caseVar_1667527279307_1757 => 
            var_1667527279307_496 = var_1667527279307_496 << ((UInt32(208)) & 7);
            ();
            r'q'
        
        case _ => 
            UInt8(11) | var_1667527279307_134;
            r'G'
        
    }
}

func func_1667527279307_142(param_1667527279307_143 : Int64) : Rune { // block id: 144
    if (Class_1667527279307_147<Float64>.var_1667527279307_152) { // block id: 176
        match (Enum_1667527279307_178.defaultValue) {
            case defaultValue => 
                ()
            
            case caseVar_1667527279307_187 => 
                var_1667527279307_9;
                ()
            
            case _ : Bool => 
                var_1667527279307_9
            
            case _ => 
                ()
            
        };
        match (###"YM^jUmSF\\A"###) {
            case _ => 
                var var_1667527279307_204 : Int64 = Int64(UInt16(100));
                var_1667527279307_204 = var_1667527279307_204 >> ((118) & 7);
                var var_1667527279307_209 : (String, Float32, Bool, Int16, Float64) = ("7wk}@N$aY<", Float32(20.0), false, Int16(Int16(-115)), 83.0);
                var_1667527279307_209
            
        }
    } else { // block id: 217
        let var_1667527279307_242 : Float32 = Float32(Float32(-80.0));
        try { // block id: 219
            var_1667527279307_221
        } finally { // block id: 232
            var_1667527279307_9;
            UInt8(166);
            var var_1667527279307_239 : String = "Sfz0A1]5aJ";
            if (true) { (var_1667527279307_239, var_1667527279307_242, true, var_1667527279307_58, var_1667527279307_101) } else { var_1667527279307_221 } 
        }
    };
    var_1667527279307_9;
    let var_1667527279307_252 : Bool = false;
    var var_1667527279307_263 : (Float32, Rune, String, UInt16, Int16, UInt64, UInt32) = (Float32(-38.0), r'7', """
Fzsf,
tHO\\q
""", UInt16(Int16(Int16(UInt8(129)))), Int16(-1), UInt64(Int64(Int8(-77))), UInt32(Int8(10)));
    var var_1667527279307_1771 : (UInt16) -> Rune = func_1667527279307_285;
    if (var_1667527279307_252) { try { // block id: 255
        var_1667527279307_9;
        var var_1667527279307_258 : Rune = r'K';
        var_1667527279307_258
    } catch (e: Exception) { // block id: 260
        ();
        var_1667527279307_263;
        if (var_1667527279307_252) { var_1667527279307_281 } else { r'N' } 
    } } else { (var_1667527279307_1771(var_1667527279307_109)) } 
}


public func func_1667527279307_43<T0>(param_1667527279307_44 : Float32) : Unit { // block id: 45
    var var_1667527279307_83 : (String, Float32, Bool, Int16, Float64) = ("a{R0*,`$a5=", Float32(Float32(Float32(Float32(-6.0)))), false, Int16(-44), (-75.0));
    if (try { // block id: 49
        var_1667527279307_9;
        let var_1667527279307_52 : UInt64 = UInt64(Int16(-75));
        var_1667527279307_52;
        Int16(-43)
    } catch (_) { // block id: 56
        var_1667527279307_58
    } finally { // block id: 64
        Int8(122);
        -var_1667527279307_58
    } >= (Float32(-71.0), r'm', "=262ptCqQ~", UInt16(25), Int16(10), UInt64(75), UInt32(50))[4]) { // block id: 79
        var_1667527279307_83[2];
        if (true) { // block id: 96
            (-9.0)
        } else { // block id: 98
            var_1667527279307_101 + var_1667527279307_101
        }
    } else { // block id: 104
        let var_1667527279307_116 : UInt8 = UInt8(UInt8(UInt8(Int8(-35))));
        (var_1667527279307_109, UInt8(11), UInt16(32), Float32(-26.0), var_1667527279307_116, var_1667527279307_101)[3];
        Int16(UInt16(117));
        ((UInt16(246), UInt8(246), var_1667527279307_109, Float32(-89.0), var_1667527279307_134, 98.0), var_1667527279307_101)[1]
    };
    var var_1667527279307_1775 : (Int64) -> Rune = func_1667527279307_142;
    var var_1667527279307_1833 : UInt16 = UInt16(182);
    var loopTimeVar_1667527279307_1857 : Range<UInt64> = (((UInt64(Int16(-109))&127))..=((UInt64(Int16(-117))&127)):(((13|1))));
    let iter139 = loopTimeVar_1667527279307_1857.iterator()
    while (true) {
        match (iter139.next()) {
            case None => break
            case Some(v) => match (v) {
                case i where (match ((var_1667527279307_1775(var_1667527279307_1132))) {
                    case _ : Option<(Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8)> => 
                        -UInt64(208);
                        var_1667527279307_109 = var_1667527279307_109 | (var_1667527279307_109);
                        var_1667527279307_19
                    
                    case r'8' | r'H' | r'C' | r'b' => 
                        var_1667527279307_109 > UInt16(110)
                    
                    case _ : Range<Int8> => 
                        var_1667527279307_9;
                        (Int32(25), var_1667527279307_1132, var_1667527279307_662, [true, false, true, false, true, false, true, true, true, true], Enum_1667527279307_178.defaultValue, (UInt16(76), var_1667527279307_134, var_1667527279307_109, Float32(111.0), UInt8(243), (-43.0)), ###"dq7\\a{fFS2Q"###, (Float32(123.0), var_1667527279307_281, ###"LNoyL$7Sjk"###, var_1667527279307_109, Int16(-5), var_1667527279307_512, UInt32(14)));
                        var_1667527279307_19
                    
                    case r'K' | r'D' => 
                        ();
                        Int32(-70) <= var_1667527279307_1324
                    
                    case _ => 
                        ();
                        var var_1667527279307_1836 : Int64 = 24;
                        (((UInt16(238)&127))..((var_1667527279307_1833&127)):(((var_1667527279307_1836|1))));
                        true
                    
                }) => if (true) { // block id: 1842

} else if (false) { // block id: 1844
    var_1667527279307_9;
    Int8(-68);
    var_1667527279307_9
};(match (var_1667527279307_1854) {
    case Some(num) => num
    case None => ()
})
                case _ => continue
            }
        }
    }

    return
}

public func func_1667527279307_1865(param_1667527279307_1866 : UInt64) : Float32 { // block id: 1867
    var var_1667527279307_1869 : Unit = ();
    var_1667527279307_1869;
    Float32(Float32(-107.0))
}

main(): Int64 {
    try {
        let var_1667527279307_1897 : UInt64 = UInt64(Int64(UInt8(Int8(Int8(-46)))));
        let var_1667527279307_1931 : Float32 = Float32(-46.0);
        func func_1667527279307_6() : Unit { // block id: 7
            var_1667527279307_9;
            var var_1667527279307_1874 : (UInt64) -> Float32 = func_1667527279307_1865;
            (var_1667527279307_1874~>func_1667527279307_43<String>)(match (if (var_1667527279307_19) { var_1667527279307_1880 } else { (((UInt64(129)&127))..=((var_1667527279307_1897&127)):((((-45)|1)))) } ) {
                case caseVar_1667527279307_1906 => 
                    var_1667527279307_9;
                    UInt64(94)
                
                case caseVar_1667527279307_1912 : (String, Float32, Bool, Int16, Float64) => 
                    UInt64(127) - var_1667527279307_1897
                
                case caseVar_1667527279307_1919 : Option<((Int64, (String, Float32, Bool, Int16, Float64), UInt8, Unit, UInt16, UInt8), Range<Int64>, Int8, Range<UInt32>, Array<Range<UInt8>>)> => 
                    UInt64(100)
                
                case _ => 
                    Option<(UInt16, UInt8, UInt16, Float32, UInt8, Float64)>.Some((UInt16(24), var_1667527279307_134, UInt16(226), var_1667527279307_1931, var_1667527279307_134, var_1667527279307_101));
                    ();
                    UInt64(85)
                
                case _ => 
                    var_1667527279307_9;
                    UInt64(133) - UInt64(233)
                
            })
            return
        }
;
        func_1667527279307_6();
        Int64(UInt8(200))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1667527279307_58*var_1667527279307_58), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_109*var_1667527279307_109), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_134*var_1667527279307_134), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_379*var_1667527279307_379), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_496*var_1667527279307_496), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_512*var_1667527279307_512), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_694*var_1667527279307_694), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_889*var_1667527279307_889), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_1132*var_1667527279307_1132), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_1324*var_1667527279307_1324), 64)
        crccheck.updateBuffer(UInt64(var_1667527279307_1897*var_1667527279307_1897), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum_1667527279307_178 {

}

extend<T0> Class_1667527279307_147<T0> {

}

