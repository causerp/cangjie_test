/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

const var_1747234021600_33: Unit = ()
public var var_1747234021600_60: Float64 = Float64(Float32(49.0))
const var_1747234021600_107: UInt16 = 68
var var_1747234021600_111: Enum_1747234021600_51 = Enum_1747234021600_51.enumValue_1747234021600_113(###"xa&Xpvy sW"###,
    r'M', func_1747234021600_11)
internal var var_1747234021600_125: Class_1747234021600_7 = Class_1747234021600_7()
@Deprecated
public var var_1747234021600_138: Int = Int64(99)
public let var_1747234021600_191: Bool = true
public var var_1747234021600_269: Enum_1747234021600_51 = Enum_1747234021600_51.enumValue_1747234021600_271(
    Int8(UInt8(UInt8(192))),
    ((Int32(Int32(UInt16(UInt16(233)))) & 127)..=(Int32(Int32(36)) & 127) : (Int64(UInt16(148)) | 1)),
    Float64(Float64(Float64(-67.0))))
public var var_1747234021600_292: Unit = ()
public var var_1747234021600_296: Int16 = Int16(Int16(UInt8(109)))
public const var_1747234021600_308: UInt8 = 63
@Deprecated
public var var_1747234021600_330: String = ###"E8mJ;3N*#0"###
@Deprecated
public var var_1747234021600_385: UInt = UInt64(57)
public var var_1747234021600_403: Enum_1747234021600_16 = Enum_1747234021600_16.enumValue_1747234021600_405(
    UInt8(UInt8(Int8(UInt8(174)))), ((UInt8(UInt8(248)) & 127)..=(UInt8(UInt8(137)) & 127) : (Int64(96) | 1)), ())
public let var_1747234021600_421: Range<UInt8> = ((UInt8(UInt8(230)) & 127)..(UInt8(UInt8(200)) & 127) : (Int64(82) | 1))
public var var_1747234021600_431: Int32 = Int32(UInt16(3))
public var var_1747234021600_461: Option<Bool> = (UInt64(130) as Bool)
@Deprecated
public var var_1747234021600_521: Array<UInt64> = [UInt64(148), UInt64(185), UInt64(33), UInt64(136), UInt64(217),
    UInt64(153), UInt64(207), UInt64(182), UInt64(155), UInt64(86)]
public const var_1747234021600_643: UInt64 = 74
public var var_1747234021600_649: Interface_1747234021600_473 = Class_1747234021600_467()
public var var_1747234021600_675: Interface_1747234021600_484 = Class_1747234021600_467()
public var var_1747234021600_679: UInt32 = UInt32(Int32(UInt32(UInt8(Int8(59)))))

@Deprecated
public open class Class_1747234021600_7 {
    public init() { // block id: 9

    }

    static let var_1747234021600_336: Unit = ();
    init(param_1747234021600_547: Rune, param_1747234021600_548: Interface_1747234021600_484,
        param_1747234021600_549: Interface_1747234021600_489) { // block id: 550
        let var_1747234021600_559: (Interface_1747234021600_474, Enum_1747234021600_16, Int32, Option<Unit>, 
            Enum_1747234021600_51, Range<Int32>, Interface_1747234021600_480, Range<UInt64>) = (Class_1747234021600_467(),
            Enum_1747234021600_16.enumValue_1747234021600_405(UInt8(11),
                ((UInt8(UInt8(141)) & 127)..=(UInt8(UInt8(68)) & 127) : (Int64(-110) | 1)), ()), Int32(UInt8(Int8(Int8(-110)))),
            Option<Unit>.Some(()), Enum_1747234021600_51.enumValue_1747234021600_271(Int8(-91),
                ((Int32(Int32(Int32(-36))) & 127)..=(Int32(Int32(Int16(114))) & 127) : (Int64(UInt16(127)) | 1)),
                Float64(Float64(Float64(52.0)))), ((Int32(Int32(Int8(UInt8(82)))) & 127)..=(Int32(Int32(Int32(-48))) &
                127) : (Int64(-116) | 1)), Class_1747234021600_467(), ((UInt64(UInt64(112)) & 127)..=(UInt64(UInt64(196)) &
                127) : (Int64(UInt64(240)) | 1)));
        var loopTimeVar_1747234021600_608: Array<UInt64> = [UInt64(25), UInt64(51), UInt64(200), UInt64(UInt64(68)),
            UInt64(Int64(61)), UInt64(1), UInt64(46), UInt64(Int16(25)), UInt64(UInt8(65)), UInt64(UInt32(15))];
        (var_1747234021600_559[3] ?? for (i in loopTimeVar_1747234021600_608 where (var_1747234021600_461 ?? false)) {
            if (var_1747234021600_191) {
                ((UInt32(UInt32(120)) & 127)..(UInt32(UInt32(190)) & 127) : (Int64(95) | 1))
            } else {
                ((UInt32(UInt32(120)) & 127)..=(UInt32(UInt32(41)) & 127) : (Int64(-105) | 1))
            };
            UInt16(0)
        });
        match (true) {
            case true | false | true =>
                var_1747234021600_292;
                Option<String>.None;
                var var_1747234021600_634: UInt16 = UInt16(187);
                var_1747234021600_634 >>= ((UInt16(5)) & 7)

            case _: Interface_1747234021600_483 => var_1747234021600_385 >>= ((var_1747234021600_643) & 7)

            case true | false | true =>
                var_1747234021600_649;
                ()

            case true =>
                var_1747234021600_292;
                [var_1747234021600_191, false, false, var_1747234021600_191, var_1747234021600_191, false, false, true,
                    true, false];
                var_1747234021600_292

            case _ =>
                var_1747234021600_292;
                ()
        }
    };

    @Frozen
    public prop var_1747234021600_686: UInt32 { // block id: 687
        get() { // block id: 689
            Class_1747234021600_467();
            UInt32(11)
        }
    }
}

public enum Enum_1747234021600_16 {
    defaultValue
    | enumValue_1747234021600_75((UInt32) -> Float32, UInt16)
    | enumValue_1747234021600_405(UInt8, Range<UInt8>, Unit)
}

@Frozen
public const func func_1747234021600_11(param_1747234021600_28: Unit, param_1747234021600_29: Float32): UInt16 { // block id: 30
    111
}

@Frozen
public const func func_1747234021600_37(param_1747234021600_38: UInt32): Float32 { // block id: 39
    71.0
}

public enum Enum_1747234021600_51 {
    defaultValue
    | enumValue_1747234021600_71(Enum_1747234021600_16, UInt32)
    | enumValue_1747234021600_113(String, Rune, (Unit, Float32) -> UInt16)
    | enumValue_1747234021600_271(Int8, Range<Int32>, Float64)
}

@Frozen
public func func_1747234021600_23(): Enum_1747234021600_16 { // block id: 24
    UInt8(97);
    func_1747234021600_11(var_1747234021600_33, (UInt32(154) |> func_1747234021600_37) * try { // block id: 44
        ();
        ();
        Float32(2.0)
    } finally { // block id: 48
        Float32(67.0)
    });
    let var_1747234021600_141: UInt32 = UInt32(118);
    match (try { // block id: 56
        ();
        var_1747234021600_60 /= Float64((Int32(Float64(-12.0))) | 1)
        let var_1747234021600_65: (UInt16, String, Enum_1747234021600_51, Int8, Class_1747234021600_7, Int32, 
            Enum_1747234021600_51) = (UInt16(Int16(74)), ":*;a{&>L ]0",
            Enum_1747234021600_51.enumValue_1747234021600_71(
                Enum_1747234021600_16.enumValue_1747234021600_75(
                    {lambdaParameter_1747234021600_82: UInt32 => Float32(Float32(Float32(-45.0)))}, UInt16(UInt16(191))),
                UInt32(Int16(Int16(-120)))), Int8(-49), Class_1747234021600_7(), Int32(Int16(5)),
            Enum_1747234021600_51.enumValue_1747234021600_71(
                Enum_1747234021600_16.enumValue_1747234021600_75(func_1747234021600_37, UInt16(79)),
                UInt32(Int32(UInt16(79)))));
        var_1747234021600_65
    } finally { // block id: 103
        ();
        (var_1747234021600_107, """
[!x\\[
fN`mv
""", var_1747234021600_111, Int8(-13), var_1747234021600_125, Int32(69),
            Enum_1747234021600_51.enumValue_1747234021600_71(
                Enum_1747234021600_16.enumValue_1747234021600_75({
                    lambdaParameter_1747234021600_132: UInt32 => func_1747234021600_37(try { // block id: 136
                        var_1747234021600_138;
                        var_1747234021600_141
                    } finally { // block id: 143
                        var_1747234021600_141
                    })
                }, var_1747234021600_107), var_1747234021600_141))
    }[2]) {
        case _ =>
            var_1747234021600_33;
            Enum_1747234021600_16.enumValue_1747234021600_75(
                {lambdaParameter_1747234021600_155: UInt32 => Float32(Float32(-16.0))}, var_1747234021600_107)
    }
}

@Deprecated
public func func_1747234021600_19(param_1747234021600_20: String): Enum_1747234021600_16 { // block id: 21
    func_1747234021600_23()
}

public sealed interface Interface_1747234021600_476 {}

public interface Interface_1747234021600_481 {}

public sealed interface Interface_1747234021600_480 <: Interface_1747234021600_481 {}

public interface Interface_1747234021600_479 <: Interface_1747234021600_480 {}

public interface Interface_1747234021600_485 {}

public interface Interface_1747234021600_487 {}

public sealed interface Interface_1747234021600_488 {}

public sealed interface Interface_1747234021600_486 <: Interface_1747234021600_487 & Interface_1747234021600_488 {}

public interface Interface_1747234021600_484 <: Interface_1747234021600_485 & Interface_1747234021600_486 {}

public sealed interface Interface_1747234021600_483 <: Interface_1747234021600_484 {}

public interface Interface_1747234021600_482 <: Interface_1747234021600_483 {}

public interface Interface_1747234021600_478 <: Interface_1747234021600_479 & Interface_1747234021600_482 {}

public interface Interface_1747234021600_489 {}

public interface Interface_1747234021600_477 <: Interface_1747234021600_478 & Interface_1747234021600_489 {}

public interface Interface_1747234021600_475 <: Interface_1747234021600_476 & Interface_1747234021600_477 {}

public interface Interface_1747234021600_490 {}

public interface Interface_1747234021600_474 <: Interface_1747234021600_475 & Interface_1747234021600_490 {}

public interface Interface_1747234021600_473 <: Interface_1747234021600_474 {}

public interface Interface_1747234021600_472 <: Interface_1747234021600_473 {}

public interface Interface_1747234021600_471 <: Interface_1747234021600_472 {}

public interface Interface_1747234021600_470 <: Interface_1747234021600_471 {}

public open class Class_1747234021600_467 <: Interface_1747234021600_470 {
    @Frozen
    public init() { // block id: 469

    }

    @Frozen
    public static mut prop var_1747234021600_493: Class_1747234021600_7 { // block id: 494
        get() { // block id: 496
            ((Int16(Int16(Int16(-3))) & 127)..=(Int16(Int16(-25)) & 127) : (Int64(65) | 1));
            Class_1747234021600_7();
            var_1747234021600_693
        }
        set(Value) { // block id: 505
            ();
            var_1747234021600_693 = Value
        }
    }
    static var var_1747234021600_693: Class_1747234021600_7 = Class_1747234021600_7()
    static init() {
    }
}

@Deprecated
public func func_1747234021600_11(namedParam_1747234021600_12!: UInt32): Class_1747234021600_7 { // block id: 13
    var loopTimeVar_1747234021600_447: Int64 = 0;
    while ((match (("|g]jK J@Sr" |> {
            lambdaParameter_1747234021600_162: String =>
                func func_1747234021600_167(param_1747234021600_168: Int64,
                    namedParam_1747234021600_169!: () -> Enum_1747234021600_16, namedParam_1747234021600_171!: Bool,
                    namedParam_1747234021600_172!: (Unit, Float32) -> UInt16): String { // block id: 176
                    var var_1747234021600_208: Class_1747234021600_7 = Class_1747234021600_7();
                    var var_1747234021600_227: Array<Bool> = [true, ("d&a7$OWBP'" is Range<Int32>),
                        ((UInt16(172), """
B#%2R
&w^S<
""", Enum_1747234021600_51.enumValue_1747234021600_113(
                            """
1?1<U
h'hn\\
""", r'u', func_1747234021600_11), Int8(-45), Class_1747234021600_7(),
                        Int32(UInt8(124)), Enum_1747234021600_51.enumValue_1747234021600_113("rcN&tlw\"v^", r'6',
                            func_1747234021600_11)) is Class_1747234021600_7),
                        (((UInt8(UInt8(8)) & 127)..(UInt8(UInt8(98)) & 127) : (Int64(-77) | 1)) is Range<UInt8>), true,
                        (((Int16(Int16(-47)) & 127)..(Int16(Int16(-13)) & 127) : (Int64(45) | 1)) is Enum_1747234021600_51),
                        (UInt8(150) is Float32),
                        (((Int64(Int64(-12)) & 127)..(Int64(Int64(38)) & 127) : (Int64(88) | 1)) is Range<UInt32>),
                        ("""
zpuzh
:47h|
""" is Float64), true];
                    if ([var_1747234021600_191, true, false, true, var_1747234021600_191, var_1747234021600_191,
                        var_1747234021600_191, var_1747234021600_191, var_1747234021600_191, true][3]) { // block id: 203
                        var loopTimeVar_1747234021600_211: Int64 = 0;
                        do {
                            loopTimeVar_1747234021600_211++;
                            var_1747234021600_208
                        } while ((false) && loopTimeVar_1747234021600_211 < 100);
                        const var_1747234021600_220: String = """
2>;5`
!3#t&
""";
                        (Option<String>.Some("""
#-tva
`_\"bm
""") ?? var_1747234021600_220)
                    } else if (var_1747234021600_191) { // block id: 223
                        try { // block id: 225
                            var_1747234021600_227
                        } catch (_) { // block id: 260
                            var_1747234021600_60;
                            var_1747234021600_227
                        } finally { // block id: 263
                            UInt32(238);
                            ();
                            var_1747234021600_227
                        };
                        match (var_1747234021600_269) {
                            case enumValue_1747234021600_71(defaultValue, _) =>
                                var_1747234021600_292;
                                var_1747234021600_296 -= Int16(17)
                                UInt8(52)

                            case enumValue_1747234021600_271(caseVar_1747234021600_304: Unit, caseVar_1747234021600_305: Range<Int16>, _: Range<Int64>) => var_1747234021600_308

                            case _ =>
                                var_1747234021600_292;
                                const var_1747234021600_316: UInt8 = 214;
                                var_1747234021600_316 % ((UInt8(216)) | 1)
                        };
                        try { // block id: 320
                            ###"&r%wK1`fha"###
                        } catch (e: Exception) { // block id: 322
                            var_1747234021600_292;
                            """
Nd]2Z
3Z,mI
"""
                        } finally { // block id: 325
                            if (false) {
                                "wY2fa{fM5=\\"
                            } else {
                                var_1747234021600_330
                            }
                        }
                    } else { // block id: 332
                        Class_1747234021600_7.var_1747234021600_336;
                        var_1747234021600_330
                    }
                };
                var var_1747234021600_347: UInt16 = UInt16(76);
                let var_1747234021600_351: Option<String> = ([UInt64(15), UInt64(77), UInt64(95),
                    UInt64(Int16(UInt16(105))), UInt64(Int16(Int16(63))), UInt64(163), UInt64(76),
                    UInt64(Int32(UInt8(222))), UInt64(35), UInt64(UInt8(UInt8(115)))] as String);
                var var_1747234021600_398: UInt32 = UInt32(58);
                try { // block id: 165
                    func_1747234021600_167(var_1747234021600_138, namedParam_1747234021600_169: func_1747234021600_23,
                        namedParam_1747234021600_171: var_1747234021600_191,
                        namedParam_1747234021600_172: func_1747234021600_11);
                    var var_1747234021600_375: Enum_1747234021600_16 = Enum_1747234021600_16
                        .enumValue_1747234021600_75(func_1747234021600_37, UInt16(4));
                    try { // block id: 344
                        var_1747234021600_347 -= var_1747234021600_347
                        var_1747234021600_351;
                        if (true) {
                            var_1747234021600_375
                        } else {
                            Enum_1747234021600_16.enumValue_1747234021600_75(func_1747234021600_37,
                                var_1747234021600_347)
                        }
                    } finally { // block id: 382
                        var_1747234021600_385 >>= ((var_1747234021600_385) & 7)
                        Int64(125);
                        if (true) {
                            var_1747234021600_375
                        } else {
                            var_1747234021600_375
                        }
                    }
                } catch (_) { // block id: 393
                    try { // block id: 395
                        var_1747234021600_398 <<= ((var_1747234021600_398) & 7)
                        var_1747234021600_292;
                        var_1747234021600_403
                    } finally { // block id: 415
                        if (var_1747234021600_191) {
                            Enum_1747234021600_16.enumValue_1747234021600_405(UInt8(96), var_1747234021600_421,
                                var_1747234021600_292)
                        } else {
                            var_1747234021600_403
                        }
                    }
                }
        })) {
            case _ =>
                var_1747234021600_431++;
                var_1747234021600_191

            case _ => Int8(-53) > Int8(34)

            case _ => true
        }) && loopTimeVar_1747234021600_447 < 100) {
        loopTimeVar_1747234021600_447++;
    };
    if ((Option<Bool>.None ?? (var_1747234021600_461 ?? false))) { // block id: 465
        Class_1747234021600_467.var_1747234021600_493
    } else { // block id: 507
        if (var_1747234021600_191) { // block id: 510
            if (var_1747234021600_191) {
                """
NWZK#
[/Cf]
"""
            } else {
                "3TR_mql5id"
            }
        } else if (true) { // block id: 516
            Class_1747234021600_467();
            let var_1747234021600_527: UInt = UInt64(Int32(-13));
            if (false) {
                var_1747234021600_521
            } else {
                [var_1747234021600_385, var_1747234021600_385, var_1747234021600_527, var_1747234021600_385, UInt64(58),
                    UInt64(72), var_1747234021600_385, var_1747234021600_385, UInt64(129), var_1747234021600_527]
            };
            """
Wl]@[
CQZAl
"""
        } else { // block id: 538
            var_1747234021600_330
        };
        var var_1747234021600_543: Class_1747234021600_7 = Class_1747234021600_7();
        if (var_1747234021600_191) {
            var_1747234021600_543
        } else {
            Class_1747234021600_7(r'p', var_1747234021600_675, Class_1747234021600_467())
        }
    }
}

main(): Int64 {
    try {
        func_1747234021600_11(namedParam_1747234021600_12: var_1747234021600_679).var_1747234021600_686;
        Int64(-22)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1747234021600_107 * var_1747234021600_107), 64)
        crcCheck.updateBuffer(UInt64(var_1747234021600_308 * var_1747234021600_308), 64)
        crcCheck.updateBuffer(UInt64(var_1747234021600_431 * var_1747234021600_431), 64)
        crcCheck.updateBuffer(UInt64(var_1747234021600_643 * var_1747234021600_643), 64)
        crcCheck.updateBuffer(UInt64(var_1747234021600_679 * var_1747234021600_679), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
