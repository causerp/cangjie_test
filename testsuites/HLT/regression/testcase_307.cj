/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0 EXCLUDE DTS2025070902735
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1685301001450_31 : Interface_1685301001450_10 = Class_1685301001450_7()
public var var_1685301001450_39 : UInt16 = UInt16(Int16(107))
var var_1685301001450_48 : UInt16 = UInt16(UInt8(106))
public let var_1685301001450_65 : Int64 = Int64(Int8(80))
public var var_1685301001450_113 : Unit = ()
public var var_1685301001450_185 : Bool = ((-89) is Class_1685301001450_7)
let var_1685301001450_193 : Float32 = Float32(15.0)
public var var_1685301001450_218 : Rune = r'O'
let var_1685301001450_224 : (Float32, Rune, Int64) = (Float32(Float32(34.0)), r'n', (-54))
public var var_1685301001450_236 : Unit = ()
public var var_1685301001450_239 : Int16 = Int16(-99)
public var var_1685301001450_249 : Struct_1685301001450_131 = Struct_1685301001450_131()
let var_1685301001450_316 : UInt32 = UInt32(31)
public let var_1685301001450_366 : UInt64 = UInt64(24)
var var_1685301001450_392 : UInt8 = UInt8(Int8(Int8(Int8(UInt8(238)))))
public let var_1685301001450_442 : Interface_1685301001450_11 = Class_1685301001450_7()
var var_1685301001450_472 : ?Bool = Option<Bool>.None
var var_1685301001450_497 : ?Int16 = Option<Int16>.None
var var_1685301001450_506 : Interface_1685301001450_10 = Class_1685301001450_7()
public let var_1685301001450_513 : Class_1685301001450_457 = Class_1685301001450_457()
let var_1685301001450_550 : Enum_1685301001450_534 = Enum_1685301001450_534.defaultValue
public let var_1685301001450_716 : UInt32 = UInt32(Int16(UInt16(147)))
public let var_1685301001450_784 : Int8 = Int8(UInt8(142))
let var_1685301001450_791 : Enum_1685301001450_537 = Enum_1685301001450_537.defaultValue
public let var_1685301001450_822 : Bool = ((Float32(Float32(Float32(88.0))), r'g', 31) is Array<Unit>)
let var_1685301001450_833 : Int16 = Int16(Int16(UInt16(212)))
public var var_1685301001450_891 : Bool = (((Int64((-8))&127)..=(Int64(Int64(Int16(Int16(-11))))&127):((Int64(UInt64(29))|1))) is Interface_1685301001450_10)
public var var_1685301001450_947 : Interface_1685301001450_11 = Class_1685301001450_457()
public var var_1685301001450_964 : UInt16 = UInt16(177)
public var var_1685301001450_1069 : String = """
Ra{C=v
_46ea{
"""
var var_1685301001450_1170 : UInt64 = UInt64(123)
var var_1685301001450_1218 : Option<Int8> = Option<Int8>.None
public let var_1685301001450_1347 : Range<UInt64> = ((UInt64(UInt64(103))&127)..(UInt64(UInt64(Int16(15)))&127):(((-33)|1)))
public let var_1685301001450_1390 : Int64 = Int64(UInt32(UInt16(48)))
sealed public interface Interface_1685301001450_11 {
    func func_1685301001450_200() : Rune { // block id: 201
        try { // block id: 205
            var_1685301001450_113;
            var var_1685301001450_209 : Int64 = Int64(Int32(UInt8(Int8(-86))));
            var_1685301001450_209 -= var_1685301001450_65;
            (Float32(21.0), var_1685301001450_218, (-61))
        } finally { // block id: 221
            var_1685301001450_113;
            var_1685301001450_224
        }[1]
    }
;
    func func_1685301001450_950(param_1685301001450_951 : Bool, param_1685301001450_952 : Array<Unit>) : Unit { // block id: 953
        var var_1685301001450_984 : Int8 = Int8(-126);
        var loopTimeVar_1685301001450_1012 : Int64 = 0;
        do {
            loopTimeVar_1685301001450_1012++;

        } while ((if (match (var_1685301001450_65) {
            case 92 | 2 | 30 | 122 => 
                var_1685301001450_716;
                var_1685301001450_964 >> ((UInt16(91)) & 7);
                var_1685301001450_185
            
            case caseVar_1685301001450_970 : Enum_1685301001450_728 => 
                var_1685301001450_822;
                true
            
            case _ : Range<Int16> => 
                false
            
            case _ => 
                ((Int8(Int8(-22))&127)..=(Int8(var_1685301001450_984)&127):((var_1685301001450_65|1)));
                var_1685301001450_185
            
            case _ => 
                (UInt32(184), var_1685301001450_113, var_1685301001450_833, UInt64(97));
                let var_1685301001450_998 : Int8 = Int8(Int8(54));
                var_1685301001450_984 -= var_1685301001450_998;
                var_1685301001450_185
            
        }) { // block id: 1002
            true
        } else if (var_1685301001450_822) { // block id: 1005
            [(), (), (), (), (), (), (), (), (), ()];
            false
        } else { // block id: 1008
            false
        }) && loopTimeVar_1685301001450_1012 < 100 ) 
    }
;
    func func_1685301001450_1157() : UInt16 { // block id: 1158
        var var_1685301001450_1161 : UInt64 = UInt64(7);
        var_1685301001450_1161 <<= (([UInt64(42), UInt64(17), var_1685301001450_366, var_1685301001450_1170, UInt64(17), UInt64(50), UInt64(141), var_1685301001450_366, UInt64(0), UInt64(137)][6]) & 7);
        try { // block id: 1180
            var var_1685301001450_1183 : ?Unit = Option<Unit>.Some(());
            var_1685301001450_1183.getOrThrow();
            var var_1685301001450_1193 : (Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune) = (((Int64(66)&127)..(Int64(78)&127):((-14)|1)), true, Option<Int8>.Some(Int8(UInt8(232))), UInt16(Int16(-12)), ((Int8(Int8(9))&127)..=(Int8(Int8(Int8(111)))&127):((Int64(UInt16(85))|1))), Int8(Int8(UInt8(78))), r'D');
            (Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some(var_1685301001450_1193) ?? var_1685301001450_1193)
        } finally { // block id: 1213
            var var_1685301001450_1222 : Range<Int8> = ((Int8(Int8(-36))&127)..=(Int8(Int8(-86))&127):((Int64(UInt32(245))|1)));
            (((Int64((-2))&127)..=(Int64((-28))&127):((-114)|1)), false, var_1685301001450_1218, UInt16(116), var_1685301001450_1222, Int8(-117), var_1685301001450_218)
        };
        var var_1685301001450_1253 : Int64 = Int64(UInt8(Int8(56)));
        match (if ((((Int8(Int8(-23))&127)..(Int8(Int8(4))&127):(56|1)) is Class_1685301001450_457)) { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.None ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some((((Int64(56)&127)..(Int64(var_1685301001450_65)&127):((var_1685301001450_65|1))), true, Option<Int8>.None, var_1685301001450_964, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(43))&127):((var_1685301001450_1253|1))), var_1685301001450_784, var_1685301001450_218))) } else { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.Some(Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) } ) {
            case caseVar_1685301001450_1269 => 
                UInt16(251)
            
            case caseVar_1685301001450_1274 => 
                var_1685301001450_113;
                var_1685301001450_964
            
            case _ => 
                var_1685301001450_113;
                var_1685301001450_236;
                var_1685301001450_964
            
        }
    }

}

public interface Interface_1685301001450_10 <: Interface_1685301001450_11 {
    func func_1685301001450_435(param_1685301001450_436 : Int8, param_1685301001450_437 : UInt16, namedParam_1685301001450_438 ! : Float32, namedParam_1685301001450_439 ! : Option<String>) : Interface_1685301001450_11 { // block id: 440
        var_1685301001450_442
    }
;
    func func_1685301001450_200() : Rune { // block id: 201
        try { // block id: 205
            var_1685301001450_113;
            var var_1685301001450_209 : Int64 = Int64(Int32(UInt8(Int8(-86))));
            var_1685301001450_209 -= var_1685301001450_65;
            (Float32(21.0), var_1685301001450_218, (-61))
        } finally { // block id: 221
            var_1685301001450_113;
            var_1685301001450_224
        }[1]
    }
;
    func func_1685301001450_950(param_1685301001450_951 : Bool, param_1685301001450_952 : Array<Unit>) : Unit { // block id: 953
        var var_1685301001450_984 : Int8 = Int8(-126);
        var loopTimeVar_1685301001450_1012 : Int64 = 0;
        do {
            loopTimeVar_1685301001450_1012++;

        } while ((if (match (var_1685301001450_65) {
            case 92 | 2 | 30 | 122 => 
                var_1685301001450_716;
                var_1685301001450_964 >> ((UInt16(91)) & 7);
                var_1685301001450_185
            
            case caseVar_1685301001450_970 : Enum_1685301001450_728 => 
                var_1685301001450_822;
                true
            
            case _ : Range<Int16> => 
                false
            
            case _ => 
                ((Int8(Int8(-22))&127)..=(Int8(var_1685301001450_984)&127):((var_1685301001450_65|1)));
                var_1685301001450_185
            
            case _ => 
                (UInt32(184), var_1685301001450_113, var_1685301001450_833, UInt64(97));
                let var_1685301001450_998 : Int8 = Int8(Int8(54));
                var_1685301001450_984 -= var_1685301001450_998;
                var_1685301001450_185
            
        }) { // block id: 1002
            true
        } else if (var_1685301001450_822) { // block id: 1005
            [(), (), (), (), (), (), (), (), (), ()];
            false
        } else { // block id: 1008
            false
        }) && loopTimeVar_1685301001450_1012 < 100 ) 
    }
;
    func func_1685301001450_1157() : UInt16 { // block id: 1158
        var var_1685301001450_1161 : UInt64 = UInt64(7);
        var_1685301001450_1161 <<= (([UInt64(42), UInt64(17), var_1685301001450_366, var_1685301001450_1170, UInt64(17), UInt64(50), UInt64(141), var_1685301001450_366, UInt64(0), UInt64(137)][6]) & 7);
        try { // block id: 1180
            var var_1685301001450_1183 : ?Unit = Option<Unit>.Some(());
            var_1685301001450_1183.getOrThrow();
            var var_1685301001450_1193 : (Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune) = (((Int64(66)&127)..(Int64(78)&127):((-14)|1)), true, Option<Int8>.Some(Int8(UInt8(232))), UInt16(Int16(-12)), ((Int8(Int8(9))&127)..=(Int8(Int8(Int8(111)))&127):((Int64(UInt16(85))|1))), Int8(Int8(UInt8(78))), r'D');
            (Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some(var_1685301001450_1193) ?? var_1685301001450_1193)
        } finally { // block id: 1213
            var var_1685301001450_1222 : Range<Int8> = ((Int8(Int8(-36))&127)..=(Int8(Int8(-86))&127):((Int64(UInt32(245))|1)));
            (((Int64((-2))&127)..=(Int64((-28))&127):((-114)|1)), false, var_1685301001450_1218, UInt16(116), var_1685301001450_1222, Int8(-117), var_1685301001450_218)
        };
        var var_1685301001450_1253 : Int64 = Int64(UInt8(Int8(56)));
        match (if ((((Int8(Int8(-23))&127)..(Int8(Int8(4))&127):(56|1)) is Class_1685301001450_457)) { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.None ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some((((Int64(56)&127)..(Int64(var_1685301001450_65)&127):((var_1685301001450_65|1))), true, Option<Int8>.None, var_1685301001450_964, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(43))&127):((var_1685301001450_1253|1))), var_1685301001450_784, var_1685301001450_218))) } else { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.Some(Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) } ) {
            case caseVar_1685301001450_1269 => 
                UInt16(251)
            
            case caseVar_1685301001450_1274 => 
                var_1685301001450_113;
                var_1685301001450_964
            
            case _ => 
                var_1685301001450_113;
                var_1685301001450_236;
                var_1685301001450_964
            
        }
    }

}

public open class Class_1685301001450_7 <: Interface_1685301001450_10 & Interface_1685301001450_11 {
    init() { // block id: 9

    }
;
    public static mut prop var_1685301001450_14 : Unit { // block id: 15
        get() { // block id: 17
            ();
            ();
            var_1685301001450_1397
        }

        set(Value) { // block id: 22
            var_1685301001450_1397 = Value
        }

    };
    static func func_1685301001450_272() : Int32 { // block id: 273
        ((var_1685301001450_193 as Int16) ?? var_1685301001450_239);
        let var_1685301001450_288 : UInt8 = UInt8(UInt8(208));
        var var_1685301001450_300 : Option<String> = (UInt8(UInt8(184)) as String);
        var var_1685301001450_307 : UInt64 = UInt64(Int16(126));
        Int32(match (if (true) { // block id: 286
            var_1685301001450_288;
            let var_1685301001450_292 : Option<String> = (true as String);
            var_1685301001450_292
        } else if (true) { // block id: 296
            ();
            var_1685301001450_14;
            var_1685301001450_300
        } else { // block id: 304
            var_1685301001450_307--;
            var_1685301001450_14;
            var_1685301001450_300
        }) {
            case _ : Interface_1685301001450_11 => 
                var_1685301001450_316
            
            case caseVar_1685301001450_320 => 
                118.0 >= 103.0;
                UInt32(181)
            
            case _ : Int64 => 
                UInt64(238) - UInt64(240);
                UInt32(74)
            
            case _ : Int32 => 
                ();
                var_1685301001450_236;
                var_1685301001450_316
            
            case _ => 
                var_1685301001450_307 += var_1685301001450_307;
                var_1685301001450_316
            
        })
    }
;
    let var_1685301001450_592 : Option<Class_1685301001450_7> = Option<Class_1685301001450_7>.None;
    var var_1685301001450_606 : Bool = true;
    public var var_1685301001450_665 : UInt8 = UInt8(238);
    public static let var_1685301001450_671 : Int8;
    static mut prop var_1685301001450_1397 : Unit { // block id: 1398
        get() { // block id: 1400

        }

        set(Value) { // block id: 1403
            ()
        }

    };
    public open override func func_1685301001450_200() : Rune { // block id: 201
        try { // block id: 205
            var_1685301001450_113;
            var var_1685301001450_209 : Int64 = Int64(Int32(UInt8(Int8(-86))));
            var_1685301001450_209 -= var_1685301001450_65;
            (Float32(21.0), var_1685301001450_218, (-61))
        } finally { // block id: 221
            var_1685301001450_113;
            var_1685301001450_224
        }[1]
    }
;
    public open override func func_1685301001450_950(param_1685301001450_951 : Bool, param_1685301001450_952 : Array<Unit>) : Unit { // block id: 953
        var var_1685301001450_984 : Int8 = Int8(-126);
        var loopTimeVar_1685301001450_1012 : Int64 = 0;
        do {
            loopTimeVar_1685301001450_1012++;

        } while ((if (match (var_1685301001450_65) {
            case 92 | 2 | 30 | 122 => 
                var_1685301001450_716;
                var_1685301001450_964 >> ((UInt16(91)) & 7);
                var_1685301001450_185
            
            case caseVar_1685301001450_970 : Enum_1685301001450_728 => 
                var_1685301001450_822;
                true
            
            case _ : Range<Int16> => 
                false
            
            case _ => 
                ((Int8(Int8(-22))&127)..=(Int8(var_1685301001450_984)&127):((var_1685301001450_65|1)));
                var_1685301001450_185
            
            case _ => 
                (UInt32(184), var_1685301001450_113, var_1685301001450_833, UInt64(97));
                let var_1685301001450_998 : Int8 = Int8(Int8(54));
                var_1685301001450_984 -= var_1685301001450_998;
                var_1685301001450_185
            
        }) { // block id: 1002
            true
        } else if (var_1685301001450_822) { // block id: 1005
            [(), (), (), (), (), (), (), (), (), ()];
            false
        } else { // block id: 1008
            false
        }) && loopTimeVar_1685301001450_1012 < 100 ) 
    }
;
    public open override func func_1685301001450_1157() : UInt16 { // block id: 1158
        var var_1685301001450_1161 : UInt64 = UInt64(7);
        var_1685301001450_1161 <<= (([UInt64(42), UInt64(17), var_1685301001450_366, var_1685301001450_1170, UInt64(17), UInt64(50), UInt64(141), var_1685301001450_366, UInt64(0), UInt64(137)][6]) & 7);
        try { // block id: 1180
            var var_1685301001450_1183 : ?Unit = Option<Unit>.Some(());
            var_1685301001450_1183.getOrThrow();
            var var_1685301001450_1193 : (Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune) = (((Int64(66)&127)..(Int64(78)&127):((-14)|1)), true, Option<Int8>.Some(Int8(UInt8(232))), UInt16(Int16(-12)), ((Int8(Int8(9))&127)..=(Int8(Int8(Int8(111)))&127):((Int64(UInt16(85))|1))), Int8(Int8(UInt8(78))), r'D');
            (Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some(var_1685301001450_1193) ?? var_1685301001450_1193)
        } finally { // block id: 1213
            var var_1685301001450_1222 : Range<Int8> = ((Int8(Int8(-36))&127)..=(Int8(Int8(-86))&127):((Int64(UInt32(245))|1)));
            (((Int64((-2))&127)..=(Int64((-28))&127):((-114)|1)), false, var_1685301001450_1218, UInt16(116), var_1685301001450_1222, Int8(-117), var_1685301001450_218)
        };
        var var_1685301001450_1253 : Int64 = Int64(UInt8(Int8(56)));
        match (if ((((Int8(Int8(-23))&127)..(Int8(Int8(4))&127):(56|1)) is Class_1685301001450_457)) { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.None ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some((((Int64(56)&127)..(Int64(var_1685301001450_65)&127):((var_1685301001450_65|1))), true, Option<Int8>.None, var_1685301001450_964, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(43))&127):((var_1685301001450_1253|1))), var_1685301001450_784, var_1685301001450_218))) } else { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.Some(Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) } ) {
            case caseVar_1685301001450_1269 => 
                UInt16(251)
            
            case caseVar_1685301001450_1274 => 
                var_1685301001450_113;
                var_1685301001450_964
            
            case _ => 
                var_1685301001450_113;
                var_1685301001450_236;
                var_1685301001450_964
            
        }
    }
;
    public open override func func_1685301001450_435(param_1685301001450_436 : Int8, param_1685301001450_437 : UInt16, namedParam_1685301001450_438 ! : Float32, namedParam_1685301001450_439 ! : Option<String>) : Interface_1685301001450_11 { // block id: 440
        var_1685301001450_442
    }

    static init() {
        var_1685301001450_671 = Int8(-105)
    }
}


public struct Struct_1685301001450_131 {
    public init() { // block id: 133

    }
;
    public prop var_1685301001450_138 : Class_1685301001450_7 { // block id: 139
        get() { // block id: 141
            Class_1685301001450_7()
        }

    };
    static var var_1685301001450_352 : (UInt32, Unit, Int16, UInt64) = (UInt32(167), (), Int16(65), UInt64(117));
    static mut prop var_1685301001450_617 : UInt8 { // block id: 618
        get() { // block id: 620
            (Float32(-15.0), r'M', Int64(UInt32(141)));
            ();
            UInt8(141)
        }

        set(Value) { // block id: 630
            Int8(-116);
            ()
        }

    };
    public static var var_1685301001450_658 : ?Unit = Option<Unit>.None;
    public mut func func_1685301001450_868() : Array<Unit> { // block id: 869
        var_1685301001450_113;
        var var_1685301001450_912 : Int32 = Int32(Int16(Int8(Int8(UInt8(87)))));
        let var_1685301001450_933 : Range<Int32> = ((Int32(Int32(-32))&127)..=(Int32(Int32(UInt8(UInt8(109))))&127):((Int64(UInt8(Int8(Int8(-23))))|1)));
        var loopTimeVar_1685301001450_1045 : Int64 = 0;
        var loopTimeVar_1685301001450_1057 : Int64 = 0;
        var loopTimeVar_1685301001450_1072 : Range<UInt64> = ((UInt64(UInt64(247))&127)..(UInt64(UInt64(76))&127):((Int64(UInt8(UInt8(UInt8(233))))|1)));
        [match ([Option<Bool>.Some(true), var_1685301001450_472, var_1685301001450_472, Option<Bool>.Some(var_1685301001450_822), var_1685301001450_472, Option<Bool>.Some(var_1685301001450_185), Option<Bool>.Some(false), Option<Bool>.None, var_1685301001450_472, Option<Bool>.Some(var_1685301001450_891)][1]) {
            case _ => 
                Class_1685301001450_457();
                var var_1685301001450_907 : UInt32 = UInt32(215);
                var_1685301001450_907 = var_1685301001450_716;
                var_1685301001450_912 -= Int32(-123)
            
            case _ : (Float32, Rune, Int64) => 
                var var_1685301001450_924 : Int8 = Int8(-72);
                var_1685301001450_924 /= ((Int8(59)) | 1);
                var_1685301001450_392 |= UInt8(199)
            
            case _ => 
                var_1685301001450_933;
                ((UInt16(UInt16(117))&127)..(UInt16(UInt16(75))&127):(5|1));
                ()
            
        }, var_1685301001450_947.func_1685301001450_950(false, [(), var_1685301001450_236, (), var_1685301001450_113, var_1685301001450_236, var_1685301001450_113, (), (), (), ()]), var_1685301001450_113, (), (), do {
            loopTimeVar_1685301001450_1045++;
            var_1685301001450_239;
            ()
        } while ((match (var_1685301001450_933) {
            case _ => 
                Option<Class_1685301001450_7>.None;
                Int32(71);
                var_1685301001450_822
            
            case _ => 
                ((Int64((-117))&127)..=(Int64((-96))&127):(70|1));
                var_1685301001450_822
            
        }) && loopTimeVar_1685301001450_1045 < 100 ) , while ((var_1685301001450_513.var_1685301001450_606) && loopTimeVar_1685301001450_1057 < 100 ) {
            loopTimeVar_1685301001450_1057++;
            ((Int32(Int32(85))&127)..(Int32(var_1685301001450_912)&127):((115|1)));
            ()
        }, for (i in loopTimeVar_1685301001450_1072 where Int16(-18) >= Int16(-19)) {
            if (false) { Option<String>.Some("eQN_F}a+Wj") } else { Option<String>.Some(var_1685301001450_1069) } ;
            var_1685301001450_352
        }, match (if (var_1685301001450_185) { // block id: 1083
            Enum_1685301001450_728.enumValue_1685301001450_763((-44), func_1685301001450_262, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(-86))&127):((var_1685301001450_65|1))));
            ();
            var_1685301001450_472
        } else { // block id: 1093
            Option<Unit>.None;
            var_1685301001450_472
        }) {
            case _ => 
                ()
            
        }, ((Option<Option<Unit>>.None ?? var_1685301001450_658) ?? ())]
    }

}

func func_1685301001450_109(param_1685301001450_110 : Unit) : Unit { // block id: 111
    var_1685301001450_113;
    var var_1685301001450_123 : Option<String> = (Int8(-123) as String);
    let var_1685301001450_127 : Class_1685301001450_7 = Class_1685301001450_7();
    try { // block id: 116
        var_1685301001450_123.getOrThrow();
        var_1685301001450_127
    } finally { // block id: 129
        let var_1685301001450_135 : Struct_1685301001450_131 = Struct_1685301001450_131();
        var_1685301001450_135.var_1685301001450_138
    };
    var_1685301001450_113
}


public func func_1685301001450_266(param_1685301001450_267 : Int8) : (UInt32, Unit, Int16, UInt64) { // block id: 268
    Class_1685301001450_7.func_1685301001450_272();
    var var_1685301001450_370 : Interface_1685301001450_11 = Class_1685301001450_7();
    Struct_1685301001450_131.func_1685301001450_348(try { // block id: 359
        ();
        ();
        var_1685301001450_224
    } catch (e: Exception) { // block id: 363
        var_1685301001450_366 / ((var_1685301001450_366) | 1);
        var_1685301001450_370;
        var_1685301001450_224
    } finally { // block id: 373
        var_1685301001450_224
    })
}


sealed public interface Interface_1685301001450_460<T0, T1> <: Interface_1685301001450_10 {
    func func_1685301001450_200() : Rune { // block id: 201
        try { // block id: 205
            var_1685301001450_113;
            var var_1685301001450_209 : Int64 = Int64(Int32(UInt8(Int8(-86))));
            var_1685301001450_209 -= var_1685301001450_65;
            (Float32(21.0), var_1685301001450_218, (-61))
        } finally { // block id: 221
            var_1685301001450_113;
            var_1685301001450_224
        }[1]
    }
;
    func func_1685301001450_950(param_1685301001450_951 : Bool, param_1685301001450_952 : Array<Unit>) : Unit { // block id: 953
        var var_1685301001450_984 : Int8 = Int8(-126);
        var loopTimeVar_1685301001450_1012 : Int64 = 0;
        do {
            loopTimeVar_1685301001450_1012++;

        } while ((if (match (var_1685301001450_65) {
            case 92 | 2 | 30 | 122 => 
                var_1685301001450_716;
                var_1685301001450_964 >> ((UInt16(91)) & 7);
                var_1685301001450_185
            
            case caseVar_1685301001450_970 : Enum_1685301001450_728 => 
                var_1685301001450_822;
                true
            
            case _ : Range<Int16> => 
                false
            
            case _ => 
                ((Int8(Int8(-22))&127)..=(Int8(var_1685301001450_984)&127):((var_1685301001450_65|1)));
                var_1685301001450_185
            
            case _ => 
                (UInt32(184), var_1685301001450_113, var_1685301001450_833, UInt64(97));
                let var_1685301001450_998 : Int8 = Int8(Int8(54));
                var_1685301001450_984 -= var_1685301001450_998;
                var_1685301001450_185
            
        }) { // block id: 1002
            true
        } else if (var_1685301001450_822) { // block id: 1005
            [(), (), (), (), (), (), (), (), (), ()];
            false
        } else { // block id: 1008
            false
        }) && loopTimeVar_1685301001450_1012 < 100 ) 
    }
;
    func func_1685301001450_1157() : UInt16 { // block id: 1158
        var var_1685301001450_1161 : UInt64 = UInt64(7);
        var_1685301001450_1161 <<= (([UInt64(42), UInt64(17), var_1685301001450_366, var_1685301001450_1170, UInt64(17), UInt64(50), UInt64(141), var_1685301001450_366, UInt64(0), UInt64(137)][6]) & 7);
        try { // block id: 1180
            var var_1685301001450_1183 : ?Unit = Option<Unit>.Some(());
            var_1685301001450_1183.getOrThrow();
            var var_1685301001450_1193 : (Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune) = (((Int64(66)&127)..(Int64(78)&127):((-14)|1)), true, Option<Int8>.Some(Int8(UInt8(232))), UInt16(Int16(-12)), ((Int8(Int8(9))&127)..=(Int8(Int8(Int8(111)))&127):((Int64(UInt16(85))|1))), Int8(Int8(UInt8(78))), r'D');
            (Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some(var_1685301001450_1193) ?? var_1685301001450_1193)
        } finally { // block id: 1213
            var var_1685301001450_1222 : Range<Int8> = ((Int8(Int8(-36))&127)..=(Int8(Int8(-86))&127):((Int64(UInt32(245))|1)));
            (((Int64((-2))&127)..=(Int64((-28))&127):((-114)|1)), false, var_1685301001450_1218, UInt16(116), var_1685301001450_1222, Int8(-117), var_1685301001450_218)
        };
        var var_1685301001450_1253 : Int64 = Int64(UInt8(Int8(56)));
        match (if ((((Int8(Int8(-23))&127)..(Int8(Int8(4))&127):(56|1)) is Class_1685301001450_457)) { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.None ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some((((Int64(56)&127)..(Int64(var_1685301001450_65)&127):((var_1685301001450_65|1))), true, Option<Int8>.None, var_1685301001450_964, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(43))&127):((var_1685301001450_1253|1))), var_1685301001450_784, var_1685301001450_218))) } else { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.Some(Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) } ) {
            case caseVar_1685301001450_1269 => 
                UInt16(251)
            
            case caseVar_1685301001450_1274 => 
                var_1685301001450_113;
                var_1685301001450_964
            
            case _ => 
                var_1685301001450_113;
                var_1685301001450_236;
                var_1685301001450_964
            
        }
    }
;
    func func_1685301001450_435(param_1685301001450_436 : Int8, param_1685301001450_437 : UInt16, namedParam_1685301001450_438 ! : Float32, namedParam_1685301001450_439 ! : Option<String>) : Interface_1685301001450_11 { // block id: 440
        var_1685301001450_442
    }

}

public open class Class_1685301001450_457 <: Class_1685301001450_7 & Interface_1685301001450_11 & Interface_1685301001450_460<Int16, Unit> {
    init() { // block id: 459

    }
;
    public static prop var_1685301001450_801 : Option<String> { // block id: 802
        get() { // block id: 804
            (Enum_1685301001450_537.defaultValue as String)
        }

    };
    public init(optionalParam_1685301001450_849 ! : Range<Int64> = ((Int64((-101))&127)..(Int64(10)&127):(92|1)), optionalParam_1685301001450_851 ! : Option<Int16> = (((UInt16(UInt16(243))&127)..(UInt16(UInt16(Int8(83)))&127):((Int64(UInt64(136))|1))) as Int16), namedParam_1685301001450_859 ! : Option<String>, optionalParam_1685301001450_860 ! : Unit = ()) { // block id: 862
        Float32(-100.0);
        var_1685301001450_249.func_1685301001450_868()[9];
        var var_1685301001450_1118 : Range<Int64> = ((Int64(Int64(Int16(40)))&127)..(Int64(22)&127):((Int64(UInt32(214))|1)));
        var var_1685301001450_1127 : Option<Int8> = ((Float32(54.0), r't', 91) as Int8);
        let var_1685301001450_1135 : Range<Int8> = ((Int8(Int8(61))&127)..=(Int8(Int8(56))&127):(92|1));
        ((var_1685301001450_1118, var_1685301001450_185, var_1685301001450_1127, var_1685301001450_964, var_1685301001450_1135, var_1685301001450_784, r'R')[2] ?? Int8(try { // block id: 1142
            var_1685301001450_392 ^= UInt8(40);
            var_1685301001450_784 - Int8(70)
        } finally { // block id: 1149
            var_1685301001450_947;
            ();
            Int8(92) / ((var_1685301001450_784) | 1)
        }))
    }
;
    public open override func func_1685301001450_200() : Rune { // block id: 201
        try { // block id: 205
            var_1685301001450_113;
            var var_1685301001450_209 : Int64 = Int64(Int32(UInt8(Int8(-86))));
            var_1685301001450_209 -= var_1685301001450_65;
            (Float32(21.0), var_1685301001450_218, (-61))
        } finally { // block id: 221
            var_1685301001450_113;
            var_1685301001450_224
        }[1]
    }
;
    public open override func func_1685301001450_950(param_1685301001450_951 : Bool, param_1685301001450_952 : Array<Unit>) : Unit { // block id: 953
        var var_1685301001450_984 : Int8 = Int8(-126);
        var loopTimeVar_1685301001450_1012 : Int64 = 0;
        do {
            loopTimeVar_1685301001450_1012++;

        } while ((if (match (var_1685301001450_65) {
            case 92 | 2 | 30 | 122 => 
                var_1685301001450_716;
                var_1685301001450_964 >> ((UInt16(91)) & 7);
                var_1685301001450_185
            
            case caseVar_1685301001450_970 : Enum_1685301001450_728 => 
                var_1685301001450_822;
                true
            
            case _ : Range<Int16> => 
                false
            
            case _ => 
                ((Int8(Int8(-22))&127)..=(Int8(var_1685301001450_984)&127):((var_1685301001450_65|1)));
                var_1685301001450_185
            
            case _ => 
                (UInt32(184), var_1685301001450_113, var_1685301001450_833, UInt64(97));
                let var_1685301001450_998 : Int8 = Int8(Int8(54));
                var_1685301001450_984 -= var_1685301001450_998;
                var_1685301001450_185
            
        }) { // block id: 1002
            true
        } else if (var_1685301001450_822) { // block id: 1005
            [(), (), (), (), (), (), (), (), (), ()];
            false
        } else { // block id: 1008
            false
        }) && loopTimeVar_1685301001450_1012 < 100 ) 
    }
;
    public open override func func_1685301001450_1157() : UInt16 { // block id: 1158
        var var_1685301001450_1161 : UInt64 = UInt64(7);
        var_1685301001450_1161 <<= (([UInt64(42), UInt64(17), var_1685301001450_366, var_1685301001450_1170, UInt64(17), UInt64(50), UInt64(141), var_1685301001450_366, UInt64(0), UInt64(137)][6]) & 7);
        try { // block id: 1180
            var var_1685301001450_1183 : ?Unit = Option<Unit>.Some(());
            var_1685301001450_1183.getOrThrow();
            var var_1685301001450_1193 : (Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune) = (((Int64(66)&127)..(Int64(78)&127):((-14)|1)), true, Option<Int8>.Some(Int8(UInt8(232))), UInt16(Int16(-12)), ((Int8(Int8(9))&127)..=(Int8(Int8(Int8(111)))&127):((Int64(UInt16(85))|1))), Int8(Int8(UInt8(78))), r'D');
            (Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some(var_1685301001450_1193) ?? var_1685301001450_1193)
        } finally { // block id: 1213
            var var_1685301001450_1222 : Range<Int8> = ((Int8(Int8(-36))&127)..=(Int8(Int8(-86))&127):((Int64(UInt32(245))|1)));
            (((Int64((-2))&127)..=(Int64((-28))&127):((-114)|1)), false, var_1685301001450_1218, UInt16(116), var_1685301001450_1222, Int8(-117), var_1685301001450_218)
        };
        var var_1685301001450_1253 : Int64 = Int64(UInt8(Int8(56)));
        match (if ((((Int8(Int8(-23))&127)..(Int8(Int8(4))&127):(56|1)) is Class_1685301001450_457)) { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.None ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.Some((((Int64(56)&127)..(Int64(var_1685301001450_65)&127):((var_1685301001450_65|1))), true, Option<Int8>.None, var_1685301001450_964, ((Int8(var_1685301001450_784)&127)..=(Int8(Int8(43))&127):((var_1685301001450_1253|1))), var_1685301001450_784, var_1685301001450_218))) } else { (Option<Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>>.Some(Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) ?? Option<(Range<Int64>, Bool, Option<Int8>, UInt16, Range<Int8>, Int8, Rune)>.None) } ) {
            case caseVar_1685301001450_1269 => 
                UInt16(251)
            
            case caseVar_1685301001450_1274 => 
                var_1685301001450_113;
                var_1685301001450_964
            
            case _ => 
                var_1685301001450_113;
                var_1685301001450_236;
                var_1685301001450_964
            
        }
    }
;
    public open override func func_1685301001450_435(param_1685301001450_436 : Int8, param_1685301001450_437 : UInt16, namedParam_1685301001450_438 ! : Float32, namedParam_1685301001450_439 ! : Option<String>) : Interface_1685301001450_11 { // block id: 440
        var_1685301001450_442
    }

    static init() {
    }
}


public enum Enum_1685301001450_534 {
    defaultValue
}
public enum Enum_1685301001450_537 {
    defaultValue
}

func func_1685301001450_453(param_1685301001450_454 : UInt16) : Option<Class_1685301001450_7> { // block id: 455
    func func_1685301001450_462() : Class_1685301001450_457 { // block id: 463
        let var_1685301001450_489 : Float64 = (-40.0);
        var var_1685301001450_500 : Unit = ();
        var var_1685301001450_522 : Int8 = Int8(UInt8(Int8(83)));
        match (if ((var_1685301001450_472 ?? false)) { // block id: 475
            68.0
        } else if (var_1685301001450_185 && var_1685301001450_185) { // block id: 480
            67.0
        } else { // block id: 482
            if (true) { Struct_1685301001450_131() } else { Struct_1685301001450_131() } ;
            var_1685301001450_113;
            var_1685301001450_489
        }) {
            case -104.0 | -75.0 => 
                Option<Bool>.Some(var_1685301001450_185);
                var_1685301001450_497;
                var_1685301001450_500
            
            case 37.0 => 
                var_1685301001450_506;
                var_1685301001450_113
            
            case -76.0 | -65.0 | 14.0 => 
                var_1685301001450_513;
                ()
            
            case 40.0 => 
                ();
                var_1685301001450_522 = Int8(69);
                var_1685301001450_500
            
            case _ => 
                var_1685301001450_236;
                ()
            
        };
        var var_1685301001450_540 : Enum_1685301001450_537 = Enum_1685301001450_537.defaultValue;
        var loopTimeVar_1685301001450_589 : Int64 = 0;
        while ((match (match (var_1685301001450_540) {
            case defaultValue => 
                Enum_1685301001450_534.defaultValue
            
            case _ => 
                Float32(-12.0);
                var_1685301001450_550
            
        }) {
            case defaultValue => 
                ();
                -Int16(75);
                true || true
            
            case _ => 
                var_1685301001450_185
            
            case _ : Class_1685301001450_7 => 
                var_1685301001450_442;
                var_1685301001450_236;
                true
            
            case _ => 
                let var_1685301001450_576 : UInt32 = UInt32(181);
                UInt32(157) >= var_1685301001450_576
            
        }) && loopTimeVar_1685301001450_589 < 100 ) {
            loopTimeVar_1685301001450_589++;
            let var_1685301001450_585 : ?Unit = Option<Unit>.None;
            (var_1685301001450_585 ?? var_1685301001450_236)
        };
        var_1685301001450_513
    }
;
    func_1685301001450_462().var_1685301001450_592
}

public func func_1685301001450_262(param_1685301001450_263 : UInt8) : Interface_1685301001450_11 { // block id: 264
    let var_1685301001450_376 : (Int8) -> (UInt32, Unit, Int16, UInt64) = func_1685301001450_266;
    var var_1685301001450_410 : Int8 = Int8(UInt8(Int8(41)));
    match ((Option<Class_1685301001450_7>.None ?? Class_1685301001450_7())) {
        case caseVar_1685301001450_388 => 
            var_1685301001450_392 /= ((var_1685301001450_392) | 1);
            var_1685301001450_113;
            Int8(9)
        
        case caseVar_1685301001450_403 : Bool => 
            var_1685301001450_239;
            var_1685301001450_392 = UInt8(43);
            var_1685301001450_410
        
        case _ => 
            Class_1685301001450_7();
            var var_1685301001450_420 : Int8 = Int8(76);
            var_1685301001450_420 % ((Int8(-24)) | 1)
        
        case _ => 
            ();
            var_1685301001450_410
        
    }|>var_1685301001450_376;
    var var_1685301001450_432 : Interface_1685301001450_10 = Class_1685301001450_7();
    var var_1685301001450_595 : (UInt16) -> Option<Class_1685301001450_7> = func_1685301001450_453;
    try { // block id: 428
        var_1685301001450_113;
        var var_1685301001450_448 : Option<String> = (41 as String);
        var_1685301001450_432.func_1685301001450_435(var_1685301001450_410, UInt16(118), namedParam_1685301001450_438 : var_1685301001450_193, namedParam_1685301001450_439 : var_1685301001450_448)
    } catch (e: Exception) { // block id: 451
        UInt16(141)|>var_1685301001450_595;
        var_1685301001450_442
    }
}

public func func_1685301001450_145(param_1685301001450_146 : UInt16) : Unit { // block id: 147
    let var_1685301001450_197 : Interface_1685301001450_11 = Class_1685301001450_7();
    var var_1685301001450_242 : UInt64 = UInt64(UInt32(221));
    try { // block id: 149

    } catch (_) { // block id: 150
        var var_1685301001450_161 : Float32 = Float32(-106.0);
        var var_1685301001450_165 : UInt16 = UInt16(26);
        try { // block id: 152
            UInt64(82);
            Class_1685301001450_7();
            Float32(-110.0)
        } catch (_) { // block id: 156
            let var_1685301001450_158 : Float64 = 96.0;
            var_1685301001450_158;
            var_1685301001450_161
        } finally { // block id: 163
            var_1685301001450_165;
            Float32(35.0)
        };
        var var_1685301001450_172 : UInt16 = UInt16(183);
        let var_1685301001450_180 : Struct_1685301001450_131 = Struct_1685301001450_131();
        try { // block id: 169
            var_1685301001450_172++;
            var_1685301001450_113
        } catch (_) { // block id: 175
            Int32(-44);
            if (true) { var_1685301001450_180 } else { var_1685301001450_180 } ;
            var_1685301001450_185 ||= false
        } finally { // block id: 189

        }
    } finally { // block id: 190
        -var_1685301001450_193;
        var_1685301001450_197.func_1685301001450_200();
        (UInt32(203), var_1685301001450_236, var_1685301001450_239, var_1685301001450_242)[1]
    };
    func_1685301001450_109(var_1685301001450_249.func_1685301001450_252<Unit, Range<UInt32>>(var_1685301001450_716))
}

public enum Enum_1685301001450_728 {
    defaultValue |
    enumValue_1685301001450_763(Int64, (UInt8) -> Interface_1685301001450_11, Range<Int8>)
}





func func_1685301001450_723(param_1685301001450_724 : Unit) : UInt16 { // block id: 725
    let var_1685301001450_761 : Enum_1685301001450_728 = Enum_1685301001450_728.enumValue_1685301001450_763(Int64(Int32(77)), func_1685301001450_262, ((Int8(Int8(118))&127)..(Int8(Int8(Int8(UInt8(152))))&127):(((-102)|1))));
    let var_1685301001450_814 : (UInt8) -> Interface_1685301001450_11 = func_1685301001450_262;
    if (match (match (Enum_1685301001450_537.defaultValue) {
        case defaultValue => 
            let var_1685301001450_738 : Enum_1685301001450_728 = Enum_1685301001450_728.defaultValue;
            if (var_1685301001450_185) { var_1685301001450_738 } else { Enum_1685301001450_728.defaultValue } 
        
        case caseVar_1685301001450_743 => 
            ();
            let var_1685301001450_747 : Enum_1685301001450_728 = Enum_1685301001450_728.defaultValue;
            var_1685301001450_747
        
        case defaultValue => 
            let var_1685301001450_753 : Enum_1685301001450_728 = Enum_1685301001450_728.defaultValue;
            var_1685301001450_753
        
        case _ => 
            if (true) { Enum_1685301001450_728.defaultValue } else { var_1685301001450_761 } 
        
    }) {
        case defaultValue => 
            var_1685301001450_236;
            var_1685301001450_784 <= Int8(36)
        
        case _ => 
            var_1685301001450_791;
            var var_1685301001450_795 : Bool = false;
            var_1685301001450_795 || var_1685301001450_185
        
    }) { (Class_1685301001450_457.var_1685301001450_801) } else { if (if (var_1685301001450_185) { // block id: 810
        Enum_1685301001450_728.enumValue_1685301001450_763(var_1685301001450_65, var_1685301001450_814, ((Int8(Int8(55))&127)..(Int8(var_1685301001450_784)&127):((var_1685301001450_65|1))));
        !var_1685301001450_822
    } else { // block id: 830
        var_1685301001450_833 | var_1685301001450_833;
        var_1685301001450_822
    }) { // block id: 839
        Option<String>.Some("V\"9KIDpD_g")
    } else { // block id: 842
        Option<String>.None
    } } ;
    var var_1685301001450_846 : Class_1685301001450_457 = Class_1685301001450_457(namedParam_1685301001450_859 : Option<String>.None);
    var_1685301001450_846.func_1685301001450_1157()
}

public func func_1685301001450_104(param_1685301001450_105 : UInt64) : Unit { // block id: 106
    Float32(12.0);
    var var_1685301001450_721 : (UInt16) -> Unit = func_1685301001450_145;
    let var_1685301001450_1284 : (Unit) -> UInt16 = func_1685301001450_723;
    var_1685301001450_113|>(var_1685301001450_1284~>var_1685301001450_721)
}

func func_1685301001450_24(param_1685301001450_25 : Interface_1685301001450_10) : Interface_1685301001450_10 { // block id: 26
    let var_1685301001450_1288 : (UInt64) -> Unit = func_1685301001450_104;
    try { // block id: 28
        let var_1685301001450_58 : Unit = ();
        match (var_1685301001450_31) {
            case caseVar_1685301001450_35 => 
                var_1685301001450_39--
            
            case caseVar_1685301001450_44 => 
                var_1685301001450_48 >>= ((UInt16(33)) & 7)
            
            case _ => 
                true;
                ();
                var_1685301001450_58
            
            case caseVar_1685301001450_62 : UInt32 => 
                var_1685301001450_65;
                var_1685301001450_48;
                ()
            
            case _ => 
                var_1685301001450_31;
                UInt8(146) ^ UInt8(153);
                var_1685301001450_58
            
        };
        var loopTimeVar_1685301001450_81 : Int64 = 0;
        while ((false) && loopTimeVar_1685301001450_81 < 100 ) {
            loopTimeVar_1685301001450_81++;

        };
        var var_1685301001450_92 : UInt8 = UInt8(195);
        try { // block id: 83
            ();
            ()
        } catch (_) { // block id: 86
            var_1685301001450_58;
            ();
            ()
        } finally { // block id: 90
            var_1685301001450_92;
            var var_1685301001450_96 : UInt64 = UInt64(UInt16(UInt16(Int8(Int8(51)))));
            var_1685301001450_96++
        }
    } finally { // block id: 102
        UInt64(223)|>var_1685301001450_1288;
        (Option<Unit>.Some(()) ?? var_1685301001450_113)
    };
    var var_1685301001450_1307 : Int8 = Int8(UInt8(167));
    var var_1685301001450_1340 : Option<String> = Option<String>.Some("h7f;UiKa{3g");
    try { // block id: 1296
        match (var_1685301001450_366) {
            case 29 => 
                var_1685301001450_891 &&= var_1685301001450_822;
                var_1685301001450_1307 %= ((Int8(-63)) | 1);
                ()
            
            case _ : Enum_1685301001450_534 => 
                ()
            
            case _ => 
                ()
            
        };
        if (true) { // block id: 1321
            UInt16(31) ^ UInt16(218)
        } else { // block id: 1325
            ((Int64(var_1685301001450_65)&127)..(Int64(59)&127):((var_1685301001450_65|1)));
            UInt32(117);
            var_1685301001450_39 << ((var_1685301001450_48) & 7)
        };
        try { // block id: 1335
            ();
            Class_1685301001450_457(optionalParam_1685301001450_849 : ((Int64(101)&127)..(Int64(10)&127):(12|1)), namedParam_1685301001450_859 : var_1685301001450_1340, optionalParam_1685301001450_860 : ())
        } finally { // block id: 1344
            Option<Int8>.None;
            var_1685301001450_1347;
            Class_1685301001450_7()
        }
    } finally { // block id: 1354
        UInt64(199);
        let var_1685301001450_1359 : (Range<Int8>, Range<Int64>, Array<Unit>, Interface_1685301001450_10, Int32) = (((Int8(Int8(-77))&127)..(Int8(Int8(68))&127):(((-86)|1))), ((Int64((-112))&127)..(Int64((-19))&127):(48|1)), [(), (), (), (), (), (), (), (), (), ()], Class_1685301001450_457(optionalParam_1685301001450_849 : ((Int64(21)&127)..=(Int64(Int64(UInt64(50)))&127):((46|1))), namedParam_1685301001450_859 : (Enum_1685301001450_728.defaultValue as String)), Int32(37));
        var_1685301001450_1359[3]
    }
}

main(): Int64 {
    try {
        Class_1685301001450_7.var_1685301001450_14;
        Class_1685301001450_457()|>func_1685301001450_24;
        var_1685301001450_1390
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1685301001450_39*var_1685301001450_39), 64)
        crccheck.updateBuffer(UInt64(var_1685301001450_48*var_1685301001450_48), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Struct_1685301001450_131 {
    static func func_1685301001450_348(param_1685301001450_349 : (Float32, Rune, Int64)) : (UInt32, Unit, Int16, UInt64) { // block id: 350
        var_1685301001450_352
    }
;
    public func func_1685301001450_252<T0, T1>(param_1685301001450_253 : UInt32) : Unit { // block id: 254
        func_1685301001450_348(Int32(-50)).var_1685301001450_665 >>= ((UInt8((Class_1685301001450_7.var_1685301001450_671))) & 7);
        try { // block id: 674
            Class_1685301001450_457();
            var var_1685301001450_681 : UInt16 = UInt16(186);
            try { // block id: 677
                ();
                var_1685301001450_681 %= ((UInt16(19)) | 1);
                UInt64(247)
            } finally { // block id: 685
                UInt64(229)
            };
            Class_1685301001450_7.var_1685301001450_14
        } finally { // block id: 690
            var_1685301001450_442;
            [(), (), var_1685301001450_236, var_1685301001450_236, var_1685301001450_113, (), (), var_1685301001450_236, var_1685301001450_236, ()][8]
        }
    }
;
    public static func func_1685301001450_348(param_1685301001450_259 : Int32) : Class_1685301001450_7 { // block id: 260
        var var_1685301001450_603 : Class_1685301001450_7 = Class_1685301001450_7();
        if (var_1685301001450_603.var_1685301001450_606) { // block id: 608
            var_1685301001450_392 ^ var_1685301001450_392
        } else if (var_1685301001450_603.var_1685301001450_606) { // block id: 615
            var_1685301001450_617
        } else { // block id: 633
            var_1685301001450_218;
            var_1685301001450_185;
            var_1685301001450_392
        }|>func_1685301001450_262;
        var var_1685301001450_641 : Option<Class_1685301001450_7> = Option<Class_1685301001450_7>.Some(Class_1685301001450_7());
        (try { // block id: 639
            var_1685301001450_641
        } catch (_) { // block id: 644
            var_1685301001450_113;
            var_1685301001450_641
        } ?? try { // block id: 648
            var_1685301001450_617 == UInt8(217);
            Class_1685301001450_457()
        } catch (e: Exception) { // block id: 653
            var_1685301001450_513;
            if (false) { var_1685301001450_658 } else { Option<Unit>.Some(()) } ;
            Class_1685301001450_7()
        })
    }

}

extend Enum_1685301001450_537 {

}

extend Enum_1685301001450_534 {

}

