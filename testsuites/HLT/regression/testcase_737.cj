/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

@Deprecated
public let var_1739719735864_29: VArray<Int64, $3> = [Int64(124), Int64(40), Int64(-75)]
public const var_1739719735864_44: Unit = ()
internal let var_1739719735864_106: Bool = false
public let var_1739719735864_113: VArray<Bool, $2> = [false, false]
public let var_1739719735864_122: VArray<Bool, $2> = [false, (Int64(Int32(100)) is VArray<Bool, $5>)]
@Deprecated
public let var_1739719735864_161: Int64 = Int64(Int64(117))
public var var_1739719735864_194: Int8 = Int8(Int8(-8))
public var var_1739719735864_219: Option<String> = (Int8(UInt8(5)) as String)
public let var_1739719735864_248: (VArray<Int64, $3>, Bool, Range<UInt32>, Range<UInt32>, Int64, VArray<Bool, $2>) = (VArray<Int64, $3>(repeat: Int64(Int8(UInt8(194)))),
    (((Int64(Int64(-52)) & 127)..(Int64(Int64(94)) & 127) : (Int64(93) | 1)) is Rune), ((UInt32(UInt32(131)) & 127)..(UInt32(UInt32(95)) &
        127) : (Int64(Int32(Int16(105))) | 1)), ((UInt32(UInt32(211)) & 127)..=(UInt32(UInt32(Int32(24))) & 127) : (Int64(Int16(-37)) |
        1)), Int64(UInt64(UInt32(85))), VArray<Bool, $2>(repeat: true))
public let var_1739719735864_285: Array<VArray<Bool, $2>> = [VArray<Bool, $2>(repeat: true),
    VArray<Bool, $2>({i => true}),
    VArray<Bool, $2>(repeat: ([VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => false}),
        VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => false}),
        VArray<Bool, $2>({i => false}), VArray<Bool, $2>(repeat: false), VArray<Bool, $2>({i => true}),
        VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => false})] is Option<Unit>)),
    VArray<Bool, $2>(repeat: false), VArray<Bool, $2>({i => false}),
    VArray<Bool, $2>(repeat: ("?&%T8!(@56" is Class_1739719735864_135)),
    VArray<Bool, $2>(repeat: (((UInt16(UInt16(220)) & 127)..(UInt16(UInt16(9)) & 127) : (Int64(60) | 1)) is Rune)),
    VArray<Bool, $2>(repeat: true), VArray<Bool, $2>({i => true}),
    VArray<Bool, $2>(repeat: (((UInt32(UInt32(155)) & 127)..(UInt32(UInt32(251)) & 127) : (Int64(-80) | 1)) is VArray<Bool, $5>))]
public const var_1739719735864_409: Float64 = -97.0
@Deprecated
public var var_1739719735864_416: Bool = false
public let var_1739719735864_434: Range<Int8> = ((Int8(Int8(Int8(Int8(Int8(-93))))) & 127)..(Int8(Int8(65)) & 127) : (Int64(36) |
    1))
public let var_1739719735864_445: Option<Bool> = Option<Bool>.None
public let var_1739719735864_448: Range<Int32> = ((Int32(Int32(-15)) & 127)..(Int32(Int32(-97)) & 127) : (Int64(-46) | 1))
public const var_1739719735864_451: UInt16 = 196
public const var_1739719735864_461: Unit = ()
@Deprecated
public var var_1739719735864_474: Int16 = Int16(21)
@Deprecated
public var var_1739719735864_489: VArray<Bool, $2> = [true, true]
public var var_1739719735864_497: Float64 = Float64(55.0)
@Deprecated
public let var_1739719735864_537: UInt32 = UInt32(134)
internal var var_1739719735864_553: Option<Int32> = (VArray<Bool, $5>({i => true}) as Int32)
internal const var_1739719735864_575: Int32 = -2
@Deprecated
public const var_1739719735864_580: Int32 = 118
public let var_1739719735864_602: VArray<Unit, $1> = [()]
public let var_1739719735864_631: VArray<Bool, $5> = [false, true, true, false, false]
public const var_1739719735864_636: UInt = 11
public let var_1739719735864_656: VArray<Bool, $2> = [(Float32(-84.0) is Option<Bool>),
    (VArray<Bool, $2>({i => true}) is Int16)]
public let var_1739719735864_666: VArray<Bool, $2> = [(Class_1739719735864_135() is UInt8),
    (VArray<Int64, $3>({i => Int64(-47)}) is VArray<Bool, $5>)]
public var var_1739719735864_692: Array<UInt64> = [UInt64(8), UInt64(90), UInt64(0), UInt64(94), UInt64(81), UInt64(75),
    UInt64(107), UInt64(64), UInt64(210), UInt64(51)]
public var var_1739719735864_738: Int32 = Int32(UInt8(Int8(-9)))
public const var_1739719735864_748: Unit = ()
public var var_1739719735864_770: Struct_1739719735864_766 = Struct_1739719735864_766()
public let var_1739719735864_818: Array<Range<UInt16>> = [((UInt16(UInt16(141)) & 127)..(UInt16(UInt16(Int16(UInt16(11)))) &
    127) : (Int64(99) | 1)),
    ((UInt16(UInt16(UInt8(168))) & 127)..=(UInt16(UInt16(UInt8(104))) & 127) : (Int64(UInt32(UInt16(71))) | 1)),
    ((UInt16(UInt16(191)) & 127)..(UInt16(UInt16(116)) & 127) : (Int64(19) | 1)),
    ((UInt16(UInt16(Int16(-28))) & 127)..(UInt16(UInt16(UInt16(194))) & 127) : (Int64(Int32(UInt8(174))) | 1)),
    ((UInt16(UInt16(Int16(UInt8(111)))) & 127)..(UInt16(UInt16(UInt8(176))) & 127) : (Int64(87) | 1)),
    ((UInt16(UInt16(55)) & 127)..=(UInt16(UInt16(63)) & 127) : (Int64(32) | 1)),
    ((UInt16(UInt16(108)) & 127)..=(UInt16(UInt16(159)) & 127) : (Int64(-85) | 1)),
    ((UInt16(UInt16(217)) & 127)..(UInt16(UInt16(3)) & 127) : (Int64(-90) | 1)),
    ((UInt16(UInt16(4)) & 127)..(UInt16(UInt16(117)) & 127) : (Int64(76) | 1)),
    ((UInt16(UInt16(236)) & 127)..=(UInt16(UInt16(152)) & 127) : (Int64(-65) | 1))]
@Deprecated
public let var_1739719735864_894: Class_1739719735864_890 = Class_1739719735864_890()
@Deprecated
internal var var_1739719735864_903: (Range<Int32>, Rune, UInt16, Int16, Array<VArray<Bool, $2>>, Range<UInt16>, String) = (((Int32(Int32(-47)) &
        127)..=(Int32(Int32(-84)) & 127) : (Int64(109) | 1)), r'R', UInt16(UInt8(Int8(-109))), Int16(Int8(-106)), [VArray<Bool, $2>(repeat: (VArray<Int64, $3>({
                i => Int64(41)
            }) is VArray<Unit, $1>)),
        VArray<Bool, $2>(repeat: (Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.None is (Array<VArray<Bool, $2>>) -> Bool)),
        VArray<Bool, $2>(repeat: (((Int32(Int32(111)) & 127)..=(Int32(Int32(33)) & 127) : (Int64(69) | 1)) is Option<Bool>)),
        VArray<Bool, $2>({i => false}),
        VArray<Bool, $2>(repeat: (Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.None is Enum_1739719735864_519<Range<UInt64>,
            VArray<Bool, $5>>)), VArray<Bool, $2>(repeat: (UInt32(94) is UInt64)),
        VArray<Bool, $2>(repeat: (Class_1739719735864_135() is Range<Int16>)),
        VArray<Bool, $2>(repeat: ((Enum_1739719735864_540.enumValue_1739719735864_1000, VArray<Unit, $1>({i => ()}),
            UInt32(110), VArray<Bool, $5>({i => true}), [UInt64(75), UInt64(169), UInt64(77), UInt64(250), UInt64(139),
                UInt64(207), UInt64(104), UInt64(30), UInt64(36), UInt64(204)], [VArray<Bool, $2>(repeat: true),
                VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => true}),
                VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => false}),
                VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => true})]) is UInt64)),
        VArray<Bool, $2>({i => false}), VArray<Bool, $2>(repeat: true)], ((UInt16(UInt16(71)) & 127)..=(UInt16(UInt16(177)) &
        127) : (Int64(48) | 1)), ###"?C1Iw:F)Y~"###)
public var var_1739719735864_1112: UInt16 = UInt16(Int8(Int8(UInt8(Int8(51)))))
internal var var_1739719735864_1119: Range<UInt32> = ((UInt32(UInt32(231)) & 127)..(UInt32(UInt32(206)) & 127) : (Int64(115) |
    1))
public var var_1739719735864_1147: UInt32 = UInt32(108)
public var var_1739719735864_1164: Range<UInt64> = ((UInt64(UInt64(125)) & 127)..=(UInt64(UInt64(Int32(UInt32(Int32(27))))) &
    127) : (Int64(6) | 1))
public const var_1739719735864_1236: Int64 = -94
public let var_1739719735864_1261: Class_1739719735864_1257 = Class_1739719735864_1257()
@Deprecated
var var_1739719735864_1273: Option<Float64> = (VArray<Unit, $1>({i => ()}) as Float64)
var var_1739719735864_1281: (Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16) = (((Int8(Int8(47)) & 127)..=(Int8(Int8(-97)) &
        127) : (Int64(-18) | 1)), (VArray<Bool, $5>(repeat: (Class_1739719735864_1257() is Int8)) as Unit), Option<Bool>
        .None, ((Int32(Int32(-66)) & 127)..=(Int32(Int32(-113)) & 127) : (Int64(UInt64(Int16(-70))) | 1)), UInt16(128))
@Deprecated
public var var_1739719735864_1322: Bool = (r'k' is Interface_1739719735864_138)
let var_1739719735864_1327: Unit = ()
@Deprecated
public var var_1739719735864_1419: ?(Struct_1739719735864_766, Class_1739719735864_135, VArray<Bool, $5>, Array<VArray<Bool, $2>>) = Option<(Struct_1739719735864_766, 
        Class_1739719735864_135, VArray<Bool, $5>, Array<VArray<Bool, $2>>)>.None
public var var_1739719735864_1480: Range<Int16> = ((Int16(Int16(-91)) & 127)..=(Int16(Int16(63)) & 127) : (Int64(-91) | 1))
public let var_1739719735864_1489: Option<VArray<Bool, $5>> = (Int32(Int16(56)) as VArray<Bool, $5>)
public var var_1739719735864_1495: Range<UInt8> = ((UInt8(UInt8(246)) & 127)..(UInt8(UInt8(213)) & 127) : (Int64(-64) | 1))
public let var_1739719735864_1658: Int64 = Int64(Int32(-23))
public let var_1739719735864_1674: Range<UInt16> = ((UInt16(UInt16(Int16(-94))) & 127)..(UInt16(UInt16(Int16(-100))) &
    127) : (Int64(Int64(72)) | 1))
internal var var_1739719735864_1688: UInt64 = UInt64(UInt32(244))
public var var_1739719735864_1727: Unit = ()
public var var_1739719735864_1766: Float64 = Float64(Float64(Float32(Float32(Float32(49.0)))))
let var_1739719735864_1802: (Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16) = (((Int8(Int8(105)) & 127)..(Int8(Int8(-32)) &
        127) : (Int64(-113) | 1)), Option<Unit>.None, Option<Bool>.None, ((Int32(Int32(-115)) & 127)..=(Int32(Int32(73)) &
        127) : (Int64(-44) | 1)), UInt16(Int8(Int8(-73))))
public var var_1739719735864_1830: ?(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16) = (VArray<Unit, $1>({
        i => ()
    }) as (Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16))
var var_1739719735864_1858: Range<Int8> = ((Int8(Int8(-53)) & 127)..=(Int8(Int8(-123)) & 127) : (Int64(-46) | 1))
public var var_1739719735864_1876: Struct_1739719735864_766 = Struct_1739719735864_766()
public var var_1739719735864_1905: Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>> = Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>
    .enumValue_1739719735864_1907(Int8(UInt8(118)),
        ((Int32(Int32(-95)) & 127)..=(Int32(Int32(31)) & 127) : (Int64(-101) | 1)))
public let var_1739719735864_2002: Array<Range<Int8>> = [((Int8(Int8(34)) & 127)..(Int8(Int8(-60)) & 127) : (Int64(-77) |
    1)), ((Int8(Int8(UInt8(UInt8(144)))) & 127)..(Int8(Int8(UInt8(UInt8(94)))) & 127) : (Int64(20) | 1)),
    ((Int8(Int8(Int8(-46))) & 127)..(Int8(Int8(-59)) & 127) : (Int64(-42) | 1)),
    ((Int8(Int8(-123)) & 127)..(Int8(Int8(-56)) & 127) : (Int64(9) | 1)),
    ((Int8(Int8(-72)) & 127)..=(Int8(Int8(-42)) & 127) : (Int64(-93) | 1)),
    ((Int8(Int8(28)) & 127)..=(Int8(Int8(-66)) & 127) : (Int64(78) | 1)),
    ((Int8(Int8(-80)) & 127)..(Int8(Int8(117)) & 127) : (Int64(98) | 1)),
    ((Int8(Int8(26)) & 127)..=(Int8(Int8(UInt8(UInt8(248)))) & 127) : (Int64(Int64(UInt64(9))) | 1)),
    ((Int8(Int8(UInt8(251))) & 127)..=(Int8(Int8(-54)) & 127) : (Int64(Int16(UInt8(185))) | 1)),
    ((Int8(Int8(-18)) & 127)..(Int8(Int8(UInt8(Int8(13)))) & 127) : (Int64(UInt16(67)) | 1))]
public const var_1739719735864_2115: Unit = ()
let var_1739719735864_2141: (Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, Array<Range<UInt16>>, 
    Option<Int64>) = ((Class_1739719735864_1257() as Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>), [((UInt16(UInt16(221)) &
        127)..=(UInt16(UInt16(100)) & 127) : (Int64(-14) | 1)),
        ((UInt16(UInt16(99)) & 127)..(UInt16(UInt16(159)) & 127) : (Int64(66) | 1)),
        ((UInt16(UInt16(94)) & 127)..(UInt16(UInt16(250)) & 127) : (Int64(95) | 1)),
        ((UInt16(UInt16(111)) & 127)..=(UInt16(UInt16(61)) & 127) : (Int64(59) | 1)),
        ((UInt16(UInt16(212)) & 127)..(UInt16(UInt16(182)) & 127) : (Int64(50) | 1)),
        ((UInt16(UInt16(113)) & 127)..=(UInt16(UInt16(165)) & 127) : (Int64(43) | 1)),
        ((UInt16(UInt16(161)) & 127)..(UInt16(UInt16(28)) & 127) : (Int64(-4) | 1)),
        ((UInt16(UInt16(79)) & 127)..=(UInt16(UInt16(241)) & 127) : (Int64(53) | 1)),
        ((UInt16(UInt16(105)) & 127)..=(UInt16(UInt16(43)) & 127) : (Int64(-16) | 1)),
        ((UInt16(UInt16(79)) & 127)..(UInt16(UInt16(249)) & 127) : (Int64(104) | 1))], (Int8(Int8(Int8(35))) as Int64))
var var_1739719735864_2373: UInt8 = UInt8(Int8(-29))
const var_1739719735864_2398: Float32 = -51.0
public const var_1739719735864_2473: Int32 = -32
public var var_1739719735864_2486: UInt8 = UInt8(120)
public let var_1739719735864_2514: Int64 = Int64(UInt16(245))
public var var_1739719735864_2539: UInt64 = UInt64(37)
public const var_1739719735864_2552: Float32 = 40.0
public let var_1739719735864_2611: ?Int8 = (Option<(Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, 
        Array<Range<UInt16>>, Option<Int64>)>.None as Int8)

@Frozen
public const func func_1739719735864_39(param_1739719735864_40: Int16): Unit { // block id: 41
    -100.0;
    var_1739719735864_44
}

public interface Interface_1739719735864_139 {
    func func_1739719735864_243(): Bool { // block id: 244
        var_1739719735864_248[1]
    };

    static func func_1739719735864_1251(namedParam_1739719735864_1252!: Range<UInt64>,
        namedParam_1739719735864_1253!: Array<Range<UInt16>>): Option<Int32> { // block id: 1254
        if (var_1739719735864_1261.func_1739719735864_243()) { // block id: 1264
            var_1739719735864_409
        } else { // block id: 1266
            (var_1739719735864_1273 ?? Float64(-91.0))
        };
        var loopTimeVar_1739719735864_1333: Array<UInt64> = [UInt64(UInt16(77)), UInt64(4), UInt64(UInt64(234)),
            UInt64(UInt16(86)), UInt64(UInt16(UInt8(UInt8(187)))), UInt64(Int16(Int8(UInt8(50)))), UInt64(UInt8(126)),
            UInt64(226), UInt64(3), UInt64(254)];
        for (i in loopTimeVar_1739719735864_1333 where match (var_1739719735864_1281) {
            case (_, caseVar_1739719735864_1305: Float64, caseVar_1739719735864_1306: Enum_1739719735864_540, _: Int16, _: Option<Range<UInt64>>) => !var_1739719735864_416

            case (_: Unit, caseVar_1739719735864_1312: Rune, _, caseVar_1739719735864_1313, _: Int32) =>
                var_1739719735864_44;
                true

            case _ =>
                var_1739719735864_1236;
                var_1739719735864_1322
        }) {
            var_1739719735864_1327;
            try (resource = Class_1739719735864_135()) { // block id: 1330

            } finally { // block id: 1331
                ()
            }
        };
        var var_1739719735864_1388: Rune = r'L';
        (Option<Option<Int32>>.None ?? (match ([var_1739719735864_636, UInt64(119), UInt64(251), UInt64(239),
            var_1739719735864_636, var_1739719735864_636, var_1739719735864_636, var_1739719735864_636,
            var_1739719735864_636, UInt64(118)]) {
            case caseVar_1739719735864_1376 =>
                Option<Bool>.Some(var_1739719735864_416);
                ();
                r'J'

            case _ =>
                var_1739719735864_1322;
                var_1739719735864_448;
                var_1739719735864_1388
        } as Int32))
    }
}

public interface Interface_1739719735864_138 <: Interface_1739719735864_139 {
    func func_1739719735864_243(): Bool { // block id: 1715
        var var_1739719735864_1792: Option<Unit> = (r'R' as Unit);
        var var_1739719735864_1813: Int64 = Int64(55);
        var loopTimeVar_1739719735864_1822: Int64 = 0;
        (UInt16(Int16(-117)), match (UInt32(211)) {
                case 205 =>
                    var_1739719735864_1727;
                    var_1739719735864_1727;
                    var_1739719735864_692

                case _ => var_1739719735864_692

                case 213 => [UInt64(64), UInt64(178), UInt64(183), UInt64(12), UInt64(181), UInt64(82), UInt64(206),
                    UInt64(41), UInt64(123), UInt64(148)]

                case caseVar_1739719735864_1741: Array<Range<UInt16>> =>
                    var_1739719735864_770;
                    ();
                    if (var_1739719735864_416) {
                        [var_1739719735864_636, UInt64(238), var_1739719735864_636, UInt64(14), UInt64(62), UInt64(237),
                            var_1739719735864_636, UInt64(4), var_1739719735864_636, var_1739719735864_636]
                    } else {
                        [UInt64(113), UInt64(60), UInt64(154), UInt64(226), UInt64(3), UInt64(74), UInt64(100),
                            UInt64(117), UInt64(54), UInt64(33)]
                    }

                case _ =>
                    Option<Float64>.Some(Float64(-79.0));
                    var_1739719735864_1766 /= Float64((Int32(Float64(118.0))) | 1)
                    var_1739719735864_692
            }, try { // block id: 1775
                var_1739719735864_738 -= Int32(101)
                var_1739719735864_1489
            } finally { // block id: 1780
                if (true) {
                    Enum_1739719735864_540.enumValue_1739719735864_543(Int32(-11), var_1739719735864_580,
                        (((Int8(Int8(13)) & 127)..=(Int8(var_1739719735864_194) & 127) : (Int64(-88) | 1)),
                            var_1739719735864_1792, var_1739719735864_445, var_1739719735864_448, var_1739719735864_451))
                } else {
                    Enum_1739719735864_540.enumValue_1739719735864_543(Int32(-41), var_1739719735864_738,
                        var_1739719735864_1802)
                };
                var_1739719735864_1813 += Int64(-84)
                Option<VArray<Bool, $5>>.Some(var_1739719735864_631)
            }, while ((var_1739719735864_416) && loopTimeVar_1739719735864_1822 < 100) {
                loopTimeVar_1739719735864_1822++;
            }, try { // block id: 1824
                if (false) {
                    Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.Some(var_1739719735864_1802)
                } else {
                    var_1739719735864_1830
                };
                var_1739719735864_474 = var_1739719735864_474
                if (true) {
                    var_1739719735864_1830
                } else {
                    var_1739719735864_1830
                }
            } catch (_) { // block id: 1841
                if (true) {
                    Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.Some(
                        (var_1739719735864_434, var_1739719735864_1792, Option<Bool>.Some(var_1739719735864_416), ((Int32(var_1739719735864_580) &
                                127)..=(Int32(Int32(-50)) & 127) : (var_1739719735864_1813 | 1)), UInt16(25)))
                } else {
                    Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.Some(
                        (var_1739719735864_1858, var_1739719735864_1792, var_1739719735864_445, var_1739719735864_448,
                            var_1739719735864_451))
                }
            } finally { // block id: 1864
                UInt16(197);
                var_1739719735864_1830
            }, if (var_1739719735864_416) {
                var_1739719735864_489
            } else {
                VArray<Bool, $2>({i => false})
            }, if (false) {
                var_1739719735864_1876
            } else {
                var_1739719735864_770
            })[3];
        let var_1739719735864_1887: ?Int64 = (((Int16(Int16(UInt16(Int8(-127)))) & 127)..(Int16(Int16(UInt8(147))) & 127) : (Int64(Int8(35)) |
            1)) as Int64);
        match ((var_1739719735864_1887 ?? (Option<Int64>.Some(var_1739719735864_1236) ?? var_1739719735864_1236))) {
            case -69 =>
                var_1739719735864_1905;
                var_1739719735864_44;
                var_1739719735864_1322

            case 38 =>
                ();
                var_1739719735864_416

            case -48 | -32 =>
                if (true) {
                    VArray<Bool, $2>(repeat: var_1739719735864_416)
                } else {
                    VArray<Bool, $2>({i => true})
                };
                var_1739719735864_416

            case 85 | -116 | 80 | 62 => true

            case _ =>
                var_1739719735864_461;
                var_1739719735864_1322 && var_1739719735864_416
        }
    };

    static func func_1739719735864_1251(namedParam_1739719735864_1252!: Range<UInt64>,
        namedParam_1739719735864_1253!: Array<Range<UInt16>>): Option<Int32> { // block id: 1944
        const var_1739719735864_1967: Int64 = 12;
        let var_1739719735864_1987: Option<Int32> = Option<Int32>.Some(Int32(-92));
        try { // block id: 1946
            Option<Float64>.None;
            let var_1739719735864_1949: Option<Int32> = Option<Int32>.None;
            var_1739719735864_1949
        } finally { // block id: 1951
            let var_1739719735864_1972: Option<Range<UInt64>> = (((Int8(Int8(12)) & 127)..(Int8(Int8(-84)) & 127) : (Int64(-127) |
                1)) as Range<UInt64>);
            ((VArray<Int64, $3>(repeat: var_1739719735864_1658), var_1739719735864_416, ((UInt32(UInt32(103)) & 127)..(UInt32(UInt32(244)) &
                        127) : (Int64(-114) | 1)), ((UInt32(UInt32(167)) & 127)..=(UInt32(UInt32(252)) & 127) : (Int64(-53) |
                        1)), var_1739719735864_1967, var_1739719735864_122), "[|d~++J\\gP", var_1739719735864_1972,
                var_1739719735864_1905, VArray<Bool, $2>({i => false}), var_1739719735864_1495)[4];
            var_1739719735864_1147 += var_1739719735864_537
            if (false) {
                var_1739719735864_1987
            } else {
                Option<Int32>.Some(Int32(57))
            }
        }
    }
}

public open class Class_1739719735864_135 <: Interface_1739719735864_138 & Interface_1739719735864_139 & Resource {
    public init() { // block id: 137

    }

    static const var_1739719735864_209: String = """
Nt Ud
.rHfH
""";
    static var var_1739719735864_215: Int
    static const var_1739719735864_227: Bool = true;
    public static const var_1739719735864_881: Int64 = -15;
    public static const var_1739719735864_1087: UInt32 = 236;
    public static var var_1739719735864_1100: Int
    public open override func func_1739719735864_243(): Bool { // block id: 1993
        var var_1739719735864_2048: Rune = r'Z';
        (try { // block id: 1998
                false
            } finally { // block id: 2000
                var_1739719735864_2002;
                false
            }, try { // block id: 2046
                var_1739719735864_2048;
                var_1739719735864_2002;
                if (var_1739719735864_227) {
                    var_1739719735864_448
                } else {
                    var_1739719735864_448
                }
            } finally { // block id: 2055
                false;
                ();
                ((Int32(Int32(123)) & 127)..=(Int32(Int32(91)) & 127) : (Int64(-9) | 1))
            })[0]
    };

    static var var_1739719735864_2066: (Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, Array<Range<UInt16>>, 
        Option<Int64>) = (Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>.None, [((UInt16(UInt16(77)) &
            127)..(UInt16(UInt16(212)) & 127) : (Int64(99) | 1)),
            ((UInt16(UInt16(244)) & 127)..(UInt16(UInt16(35)) & 127) : (Int64(-88) | 1)),
            ((UInt16(UInt16(216)) & 127)..(UInt16(UInt16(174)) & 127) : (Int64(-53) | 1)),
            ((UInt16(UInt16(49)) & 127)..(UInt16(UInt16(228)) & 127) : (Int64(-37) | 1)),
            ((UInt16(UInt16(232)) & 127)..=(UInt16(UInt16(3)) & 127) : (Int64(63) | 1)),
            ((UInt16(UInt16(205)) & 127)..(UInt16(UInt16(177)) & 127) : (Int64(43) | 1)),
            ((UInt16(UInt16(140)) & 127)..=(UInt16(UInt16(39)) & 127) : (Int64(55) | 1)),
            ((UInt16(UInt16(14)) & 127)..=(UInt16(UInt16(6)) & 127) : (Int64(-125) | 1)),
            ((UInt16(UInt16(122)) & 127)..=(UInt16(UInt16(118)) & 127) : (Int64(-80) | 1)),
            ((UInt16(UInt16(17)) & 127)..=(UInt16(UInt16(83)) & 127) : (Int64(-62) | 1))], Option<Int64>.None);
    public static func func_1739719735864_1251(namedParam_1739719735864_1252!: Range<UInt64>,
        namedParam_1739719735864_1253!: Array<Range<UInt16>>): Option<Int32> { // block id: 2061
        let var_1739719735864_2106: Option<Int32> = Option<Int32>.Some(Int32(Int32(UInt8(34))));
        match (var_1739719735864_2066[0]) {
            case caseVar_1739719735864_2099: VArray<Bool, $2> => Option<Int32>.None

            case None => var_1739719735864_2106

            case Some(defaultValue) =>
                var_1739719735864_2115;
                var_1739719735864_2106

            case _ => Option<Int32>.None
        }
    };

    public static prop var_1739719735864_2314: Option<Enum_1739719735864_540> { // block id: 2315
        get() { // block id: 2317
            (Enum_1739719735864_540.enumValue_1739719735864_1000 as Enum_1739719735864_540)
        }
    }
    public static prop var_1739719735864_2330: Enum_1739719735864_540 { // block id: 2331
        get() { // block id: 2333
            Int64(Int64(Int64(-99)));
            Float64(Float64(Float32(53.0)));
            Enum_1739719735864_540.enumValue_1739719735864_1000
        }
    }
    protected let var_1739719735864_2439: Range<UInt16> = ((UInt16(UInt16(222)) & 127)..=(UInt16(UInt16(109)) & 127) : (Int64(-77) |
        1));
    public let var_1739719735864_2494: ?Int64 = Option<Int64>.None;
    public static prop var_1739719735864_2580: ?Int8 { // block id: 2581
        get() { // block id: 2583
            ();
            Option<Int8>.None
        }
    }
    public static const var_1739719735864_2589: Bool = true;
    public static let var_1739719735864_2595: Option<Int32> = Option<Int32>.None
    static init() {
        var_1739719735864_215 = Int64(-62)
        var_1739719735864_1100 = Int64(-63)
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Deprecated
public func func_1739719735864_235(param_1739719735864_236: Array<VArray<Bool, $2>>): Bool { // block id: 237
    var var_1739719735864_240: Interface_1739719735864_139 = Class_1739719735864_135();
    var_1739719735864_240.func_1739719735864_243()
}

@Deprecated
public enum Enum_1739719735864_519<T0, T1> {
    defaultValue
    | enumValue_1739719735864_788(Array<UInt64>, Float64, Enum_1739719735864_540)
    | enumValue_1739719735864_1907(Int8, Range<Int32>)
}

public enum Enum_1739719735864_540 {
    defaultValue
    | enumValue_1739719735864_543(Int32, Int32, (Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16))
    | enumValue_1739719735864_805(Range<Int32>, Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>,
        UInt64)
    | enumValue_1739719735864_1000
}

public func func_1739719735864_533(param_1739719735864_534: VArray<Unit, $1>): VArray<Unit, $1> { // block id: 535
    var_1739719735864_537;
    match (Enum_1739719735864_540.enumValue_1739719735864_543((var_1739719735864_553 ?? var_1739719735864_575),
        var_1739719735864_575 & var_1739719735864_580,
        (Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.None ?? (((Int8(Int8(-63)) & 127)..(Int8(Int8(47)) &
                127) : (Int64(-3) | 1)), Option<Unit>.None, var_1739719735864_445, var_1739719735864_448,
            var_1739719735864_451)))) {
        case defaultValue =>
            r's';
            var_1739719735864_474 = Int16(113)
            var_1739719735864_602

        case _ =>
            if (var_1739719735864_416) {
                var_1739719735864_602
            } else {
                VArray<Unit, $1>({i => ()})
            }
    }
}

public struct Struct_1739719735864_766 {
    public init() { // block id: 768

    }

    public let var_1739719735864_786: Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>> = Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>
        .enumValue_1739719735864_788(
            [UInt64(117), UInt64(203), UInt64(40), UInt64(64), UInt64(247), UInt64(121), UInt64(99), UInt64(64),
                UInt64(84), UInt64(8)], Float64(84.0),
            Enum_1739719735864_540.enumValue_1739719735864_805(
                ((Int32(Int32(21)) & 127)..=(Int32(Int32(30)) & 127) : (Int64(-125) | 1)),
                Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.None, UInt64(96)))
}

@Frozen
func func_1739719735864_528(param_1739719735864_529: Unit): Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>> { // block id: 530
    var var_1739719735864_622: Option<Unit> = Option<Unit>.Some(());
    match (((Enum_1739719735864_540.enumValue_1739719735864_543(var_1739719735864_580, Int32(89),
            (((Int8(Int8(120)) & 127)..=(Int8(Int8(-70)) & 127) : (Int64(117) | 1)), var_1739719735864_622,
                var_1739719735864_445, var_1739719735864_448, UInt16(85))), var_1739719735864_602, UInt32(115),
        var_1739719735864_631, [UInt64(32), var_1739719735864_636, UInt64(88), var_1739719735864_636,
            var_1739719735864_636, UInt64(222), var_1739719735864_636, UInt64(153), UInt64(108), UInt64(153)], [VArray<Bool, $2>({
                i => false
            }), var_1739719735864_489, var_1739719735864_122, VArray<Bool, $2>(repeat: true), var_1739719735864_656,
            var_1739719735864_666, VArray<Bool, $2>({i => true}), var_1739719735864_113, VArray<Bool, $2>({i => false}),
            VArray<Bool, $2>(repeat: var_1739719735864_416)])[1] |> func_1739719735864_533)) {
        case _ => var_1739719735864_692

        case _ =>
            if (false) {
                [var_1739719735864_636, UInt64(120), UInt64(203), UInt64(30), var_1739719735864_636, UInt64(71),
                    var_1739719735864_636, var_1739719735864_636, UInt64(39), UInt64(254)]
            } else {
                [UInt64(122), UInt64(223), UInt64(26), UInt64(42), UInt64(217), UInt64(7), UInt64(61), UInt64(203),
                    UInt64(228), UInt64(101)]
            }
    };
    const var_1739719735864_763: Unit = ();
    match ((var_1739719735864_636 as Bool)) {
        case caseVar_1739719735864_716 =>
            ();
            var_1739719735864_44;
            var_1739719735864_602

        case _ =>
            var_1739719735864_445;
            if (false) {
                var_1739719735864_602
            } else {
                VArray<Unit, $1>(repeat: var_1739719735864_44)
            }

        case _: Int16 =>
            var_1739719735864_416 &&= false
            var_1739719735864_738 -= Int32(-107)
            if (false) {
                var_1739719735864_602
            } else {
                VArray<Unit, $1>(repeat: var_1739719735864_748)
            }

        case _: Range<UInt8> =>
            if (false) {
                var_1739719735864_602
            } else {
                var_1739719735864_602
            }

        case _ =>
            var_1739719735864_461;
            VArray<Unit, $1>(repeat: var_1739719735864_763)
    };
    var_1739719735864_770.func_1739719735864_773(var_1739719735864_818[9], try { // block id: 860
        var_1739719735864_445
    } finally { // block id: 862
        if (true) {
            Option<Bool>.Some(var_1739719735864_416)
        } else {
            var_1739719735864_445
        }
    })
}

public open class Class_1739719735864_890 <: Class_1739719735864_135 {
    public init() { // block id: 892

    }

    public let var_1739719735864_897: Bool = true;
    public static let var_1739719735864_2296: Option<Bool> = Option<Bool>.None;
    public static const var_1739719735864_2419: Bool = true;
    public open override func func_1739719735864_243(): Bool { // block id: 2430
        Int16(if (false) { // block id: 2435
            [var_1739719735864_1674, var_1739719735864_2439, var_1739719735864_2439,
                ((UInt16(UInt16(229)) & 127)..=(UInt16(UInt16(14)) & 127) : (var_1739719735864_1100 | 1)),
                ((UInt16(UInt16(137)) & 127)..(UInt16(UInt16(163)) & 127) : (Int64(-79) | 1)), var_1739719735864_2439,
                var_1739719735864_1674, var_1739719735864_2439, var_1739719735864_2439,
                ((UInt16(var_1739719735864_451) & 127)..=(UInt16(UInt16(207)) & 127) : (var_1739719735864_161 | 1))];
            UInt8(69)
        } else if (false) { // block id: 2460
            var var_1739719735864_2463: UInt8 = UInt8(Int8(-49));
            var_1739719735864_2463 <<= ((UInt8(252)) & 7)
            -var_1739719735864_2463
        } else { // block id: 2469
            var_1739719735864_738 <<= ((var_1739719735864_2473) & 7)
            -UInt8(103)
        }) + if (var_1739719735864_1322) { // block id: 2479
            ();
            var_1739719735864_474
        } else { // block id: 2482
            var_1739719735864_461;
            var_1739719735864_2486 >>= ((UInt8(67)) & 7)
            Int16(68)
        };;
        try { // block id: 2491
            match (var_1739719735864_2494) {
                case _ =>
                    ();
                    var_1739719735864_416
            }
        } finally { // block id: 2501
            var loopTimeVar_1739719735864_2506: Int64 = 0;
            do {
                loopTimeVar_1739719735864_2506++;
            } while ((var_1739719735864_897) && loopTimeVar_1739719735864_2506 < 100);
            let var_1739719735864_2525: VArray<Int64, $3> = [Int64(116), Int64(123), Int64(44)];
            if (true) { // block id: 2509
                VArray<Int64, $3>({i => Int64(-81)})
            } else if (true) { // block id: 2518
                var_1739719735864_44;
                if (var_1739719735864_1322) {
                    var_1739719735864_602
                } else {
                    var_1739719735864_602
                };
                var_1739719735864_2525
            } else { // block id: 2527
                var_1739719735864_748;
                VArray<Int64, $3>(repeat: var_1739719735864_1100)
            };
            match ([UInt64(221), UInt64(142), UInt64(176), var_1739719735864_2539, UInt64(76), var_1739719735864_2539,
                UInt64(33), var_1739719735864_2539, UInt64(101), UInt64(110)]) {
                case _ => var_1739719735864_2552 == var_1739719735864_2552

                case _: (Enum_1739719735864_540, VArray<Unit, $1>, UInt32, VArray<Bool, $5>, Array<UInt64>, Array<VArray<Bool, $2>>) => true

                case _: Option<Float64> =>
                    ();
                    ();
                    var_1739719735864_897

                case _ =>
                    var_1739719735864_194 /= ((var_1739719735864_194) | 1)
                    Int16(-60) <= var_1739719735864_474
            }
        }
    };

    private static var var_1739719735864_2616: (UInt8, Array<Range<Int8>>, Option<VArray<Bool, $5>>, Int32) = (UInt8(84),
        [((Int8(Int8(-127)) & 127)..=(Int8(Int8(95)) & 127) : (Int64(-103) | 1)),
            ((Int8(Int8(-127)) & 127)..(Int8(Int8(105)) & 127) : (Int64(-100) | 1)),
            ((Int8(Int8(-68)) & 127)..=(Int8(Int8(-44)) & 127) : (Int64(-34) | 1)),
            ((Int8(Int8(11)) & 127)..=(Int8(Int8(106)) & 127) : (Int64(98) | 1)),
            ((Int8(Int8(-19)) & 127)..=(Int8(Int8(13)) & 127) : (Int64(-23) | 1)),
            ((Int8(Int8(-73)) & 127)..(Int8(Int8(-102)) & 127) : (Int64(-35) | 1)),
            ((Int8(Int8(-77)) & 127)..(Int8(Int8(-59)) & 127) : (Int64(23) | 1)),
            ((Int8(Int8(80)) & 127)..(Int8(Int8(95)) & 127) : (Int64(-102) | 1)),
            ((Int8(Int8(91)) & 127)..=(Int8(Int8(11)) & 127) : (Int64(110) | 1)),
            ((Int8(Int8(64)) & 127)..=(Int8(Int8(70)) & 127) : (Int64(101) | 1))], Option<VArray<Bool, $5>>.None, Int32(-24));
    public static func func_1739719735864_1251(namedParam_1739719735864_1252!: Range<UInt64>,
        namedParam_1739719735864_1253!: Array<Range<UInt16>>): Option<Int32> { // block id: 2575
        ((var_1739719735864_2580 ?? Int8(56)) - if (var_1739719735864_2589) { // block id: 2591
            var_1739719735864_1876;
            Option<Option<Int32>>.Some(var_1739719735864_2595);
            Int8(-125)
        } else if (var_1739719735864_416) { // block id: 2599
            -Int8(7)
        } else { // block id: 2602
            Int8(-110)
        }) | ((var_1739719735864_2611 as Int8) ?? Int8(15));
        var_1739719735864_2616;
        (((UInt32(UInt32(228)) & 127)..=(UInt32(UInt32(22)) & 127) : (Int64(-72) | 1)) as Int32)
    }
}

public open class Class_1739719735864_1257 <: Class_1739719735864_890 & Interface_1739719735864_139 {
    @Frozen
    public init() { // block id: 1259

    }

    public prop var_1739719735864_2133: Option<(Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, Array<Range<UInt16>>, 
        Option<Int64>)> { // block id: 2134
        get() { // block id: 2136
            ();
            Option<(Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, Array<Range<UInt16>>, Option<Int64>)>
                .None
        }
    }
    public open override func func_1739719735864_243(): Bool { // block id: 2123
        match ((if (false) {
            var_1739719735864_2133
        } else {
            Option<(Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>, Array<Range<UInt16>>, Option<Int64>)>
                .Some(var_1739719735864_2141)
        } ?? (Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>.None, [((UInt16(UInt16(136)) & 127)..(UInt16(UInt16(228)) &
                127) : (Int64(-85) | 1)), ((UInt16(UInt16(205)) & 127)..(UInt16(UInt16(187)) & 127) : (Int64(-104) | 1)),
                var_1739719735864_1674,
                ((UInt16(UInt16(238)) & 127)..=(UInt16(UInt16(27)) & 127) : (var_1739719735864_881 | 1)),
                var_1739719735864_1674,
                ((UInt16(var_1739719735864_1112) & 127)..=(UInt16(UInt16(222)) & 127) : (Int64(21) | 1)),
                var_1739719735864_1674, ((UInt16(UInt16(166)) & 127)..=(UInt16(UInt16(194)) & 127) : (Int64(-44) | 1)),
                ((UInt16(UInt16(161)) & 127)..(UInt16(UInt16(233)) & 127) : (Int64(85) | 1)),
                ((UInt16(UInt16(119)) & 127)..(UInt16(UInt16(86)) & 127) : (Int64(75) | 1))], Option<Int64>.Some(
                var_1739719735864_881)))) {
            case _ => var_1739719735864_1236

            case caseVar_1739719735864_2177: Option<Int8> =>
                var_1739719735864_580 << ((Int32(95)) & 7);
                ();
                var_1739719735864_161 - var_1739719735864_1658

            case caseVar_1739719735864_2188: Option<Bool> =>
                var_1739719735864_1112 += var_1739719735864_451
                Int64(-29) % ((Int64(-66)) | 1)

            case _ =>
                var_1739719735864_2115;
                var_1739719735864_1727;
                Int64(106) ** UInt64(114)

            case _ =>
                ();
                ();
                Int64(6) ^ Int64(-49)
        };
        let var_1739719735864_2241: (UInt8, Array<Range<Int8>>, Option<VArray<Bool, $5>>, Int32) = (UInt8(55), [((Int8(Int8(125)) &
                127)..=(Int8(Int8(78)) & 127) : (Int64(-126) | 1)),
                ((Int8(Int8(-106)) & 127)..(Int8(Int8(-67)) & 127) : (Int64(-58) | 1)),
                ((Int8(Int8(-120)) & 127)..=(Int8(Int8(35)) & 127) : (Int64(95) | 1)),
                ((Int8(Int8(109)) & 127)..(Int8(Int8(-83)) & 127) : (Int64(73) | 1)),
                ((Int8(Int8(67)) & 127)..=(Int8(Int8(113)) & 127) : (Int64(-18) | 1)),
                ((Int8(Int8(17)) & 127)..=(Int8(Int8(-79)) & 127) : (Int64(-90) | 1)),
                ((Int8(Int8(38)) & 127)..(Int8(Int8(39)) & 127) : (Int64(23) | 1)),
                ((Int8(Int8(-128)) & 127)..=(Int8(Int8(-12)) & 127) : (Int64(-38) | 1)),
                ((Int8(Int8(50)) & 127)..(Int8(Int8(64)) & 127) : (Int64(-74) | 1)),
                ((Int8(Int8(-85)) & 127)..(Int8(Int8(9)) & 127) : (Int64(28) | 1))], Option<VArray<Bool, $5>>.Some(
                VArray<Bool, $5>(repeat: (Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>
                        .enumValue_1739719735864_788(
                            [UInt64(46), UInt64(94), UInt64(223), UInt64(139), UInt64(97), UInt64(53), UInt64(43),
                                UInt64(125), UInt64(165), UInt64(26)], Float64(58.0),
                            Enum_1739719735864_540.enumValue_1739719735864_805(
                                ((Int32(Int32(-116)) & 127)..(Int32(Int32(49)) & 127) : (Int64(21) | 1)),
                                Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.Some(
                                    (((Int8(Int8(70)) & 127)..(Int8(Int8(-29)) & 127) : (Int64(-28) | 1)), Option<Unit>
                                            .None, Option<Bool>.Some(true), ((Int32(Int32(3)) & 127)..=(Int32(Int32(44)) &
                                            127) : (Int64(62) | 1)), UInt16(240))), UInt64(236))) is Option<Int64>))),
            Int32(89));
        try { // block id: 2213
            Int64(123) <= Int64(-80)
        } catch (e: Exception) { // block id: 2217
            var loopTimeVar_1739719735864_2221: Range<UInt64> = ((UInt64(UInt64(22)) & 127)..=(UInt64(UInt64(Int16(Int8(-5)))) &
                127) : (Int64(-98) | 1));
            for (i in loopTimeVar_1739719735864_2221 where var_1739719735864_1322) {
            }
            if (false) { // block id: 2230

            } else if (var_1739719735864_897) { // block id: 2232

            }
            false
        } finally { // block id: 2234
            var_1739719735864_1147 &= UInt32(243)
            var_1739719735864_2241[1];
            (Struct_1739719735864_766() is VArray<Int64, $3>)
        }
    };

    public static func func_1739719735864_1251(namedParam_1739719735864_1252!: Range<UInt64>,
        namedParam_1739719735864_1253!: Array<Range<UInt16>>): Option<Int32> { // block id: 2279
        Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>.enumValue_1739719735864_788(
            [UInt64(79), UInt64(57), UInt64(250), UInt64(83), UInt64(122), UInt64(130), UInt64(237), UInt64(66),
                UInt64(22), UInt64(28)],
            if (var_1739719735864_416 || var_1739719735864_416) { // block id: 2286
                var_1739719735864_409 - var_1739719735864_1766
            } else if ((var_1739719735864_2296 ?? var_1739719735864_1322)) { // block id: 2299
                var_1739719735864_1766
            } else { // block id: 2301
                var_1739719735864_1147 |= var_1739719735864_1147
                Float64(-72.0)
            }, (try { // block id: 2312
                var_1739719735864_2314
            } finally { // block id: 2320
                var_1739719735864_474 *= Int16(-98)
                var_1739719735864_2314
            } ?? try { // block id: 2326
                ();
                var_1739719735864_2141;
                var_1739719735864_2330
            } catch (_) { // block id: 2341
                var_1739719735864_474 /= ((Int16(74)) | 1)
                var_1739719735864_113;
                var_1739719735864_2330
            }));
        let var_1739719735864_2360: Option<Array<VArray<Bool, $2>>> = (Struct_1739719735864_766() as Array<VArray<Bool, $2>>);
        ((try { // block id: 2354
            Option<Array<VArray<Bool, $2>>>.Some(var_1739719735864_285)
        } finally { // block id: 2357
            ();
            var_1739719735864_2360
        } ?? try { // block id: 2364
            VArray<Bool, $2>({i => true});
            var_1739719735864_44;
            var_1739719735864_285
        } catch (_) { // block id: 2370
            var_1739719735864_2373--;
            var_1739719735864_748;
            [VArray<Bool, $2>({i => true}), var_1739719735864_122, var_1739719735864_122,
                VArray<Bool, $2>(repeat: var_1739719735864_1322), var_1739719735864_666, VArray<Bool, $2>({i => false}),
                var_1739719735864_489, var_1739719735864_489, VArray<Bool, $2>(repeat: true), var_1739719735864_666]
        } finally { // block id: 2396
            var_1739719735864_2398;
            [VArray<Bool, $2>({i => true}), VArray<Bool, $2>(repeat: var_1739719735864_1322),
                VArray<Bool, $2>({i => true}), VArray<Bool, $2>(repeat: var_1739719735864_1322),
                VArray<Bool, $2>({i => false}), VArray<Bool, $2>(repeat: var_1739719735864_416), var_1739719735864_656,
                VArray<Bool, $2>(repeat: var_1739719735864_416), VArray<Bool, $2>({i => false}), var_1739719735864_122]
        }) as Int32)
    }
}

@Frozen
public func func_1739719735864_465(param_1739719735864_466: Range<UInt32>): VArray<Bool, $2> { // block id: 467
    const var_1739719735864_1161: Int64 = -123;
    try { // block id: 469
        try { // block id: 471
            var_1739719735864_474 += var_1739719735864_474
            if (false) {
                VArray<Bool, $2>({i => true})
            } else {
                VArray<Bool, $2>(repeat: false)
            }
        } catch (e: Exception) { // block id: 485
            if (var_1739719735864_416) {
                var_1739719735864_489
            } else {
                var_1739719735864_489
            }
        } finally { // block id: 492
            var_1739719735864_489
        }
    } catch (e: Exception) { // block id: 494
        var_1739719735864_497 += Float64(58.0)
        var_1739719735864_451 % ((UInt16(189)) | 1);
        let var_1739719735864_1176: ?Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>> = (Option<(Range<Int8>, 
                Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.Some(
            (((Int8(Int8(-26)) & 127)..=(Int8(Int8(-45)) & 127) : (Int64(-31) | 1)), (((Int8(Int8(7)) & 127)..(Int8(Int8(-50)) &
                    127) : (Int64(-71) | 1)) as Unit), (Option<Bool>.None as Bool), ((Int32(Int32(-16)) & 127)..(Int32(Int32(-8)) &
                    127) : (Int64(81) | 1)), UInt16(UInt16(50)))) as Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>);
        let var_1739719735864_1199: Int64 = Int64(52);
        func func_1739719735864_504(
            param_1739719735864_505: (VArray<Int64, $3>, Bool, Range<UInt32>, Range<UInt32>, Int64, VArray<Bool, $2>),
            optionalParam_1739719735864_506!: Unit = (), namedParam_1739719735864_508!: Int16,
            namedParam_1739719735864_509!: Range<Int64>): VArray<Bool, $2> { // block id: 510
            Class_1739719735864_135.func_1739719735864_514(
                namedParam_1739719735864_515: (Option<Range<UInt64>>.Some(
                    ((UInt64(var_1739719735864_636) & 127)..(UInt64(var_1739719735864_636) & 127) : (var_1739719735864_1161 |
                        1))) ?? var_1739719735864_1164), namedParam_1739719735864_516: try { // block id: 1173
                    UInt8(25);
                    var_1739719735864_1176;
                    (VArray<Int64, $3>(repeat: var_1739719735864_1161), true, var_1739719735864_1119, ((UInt32(UInt32(181)) &
                            127)..(UInt32(UInt32(85)) & 127) : (var_1739719735864_1161 | 1)), Int64(-76), VArray<Bool, $2>({
                                i => true
                            }))
                } finally { // block id: 1211
                    const var_1739719735864_1216: Int64 = -124;
                    (VArray<Int64, $3>({i => Int64(-91)}), var_1739719735864_416, var_1739719735864_1119,
                        var_1739719735864_1119, Int64(95), VArray<Bool, $2>(repeat: var_1739719735864_416))
                });
            var_1739719735864_666
        };

        func_1739719735864_504(
            (var_1739719735864_29, true, ((UInt32(UInt32(31)) & 127)..=(UInt32(UInt32(26)) & 127) : (var_1739719735864_1199 |
                    1)), ((UInt32(UInt32(107)) & 127)..(UInt32(UInt32(202)) & 127) : (Int64(-79) | 1)),
                var_1739719735864_1236, VArray<Bool, $2>({i => true})),
            optionalParam_1739719735864_506: var_1739719735864_44, namedParam_1739719735864_508: Int16(65),
            namedParam_1739719735864_509: ((Int64(var_1739719735864_1236) & 127)..(Int64(Int64(-121)) & 127) : (var_1739719735864_161 |
                1)))
    } finally { // block id: 1247
        Interface_1739719735864_139.func_1739719735864_1251(
            namedParam_1739719735864_1252: ((UInt64(UInt64(76)) & 127)..(UInt64(UInt64(102)) & 127) : (Int64(51) | 1)),
            namedParam_1739719735864_1253: [((UInt16(UInt16(36)) & 127)..=(UInt16(UInt16(187)) & 127) : (Int64(-34) | 1)),
                ((UInt16(UInt16(23)) & 127)..(UInt16(UInt16(240)) & 127) : (Int64(37) | 1)),
                ((UInt16(UInt16(172)) & 127)..(UInt16(UInt16(173)) & 127) : (Int64(-88) | 1)),
                ((UInt16(UInt16(52)) & 127)..=(UInt16(UInt16(171)) & 127) : (Int64(63) | 1)),
                ((UInt16(UInt16(128)) & 127)..=(UInt16(UInt16(140)) & 127) : (Int64(-7) | 1)),
                ((UInt16(UInt16(201)) & 127)..(UInt16(UInt16(87)) & 127) : (Int64(99) | 1)),
                ((UInt16(UInt16(6)) & 127)..(UInt16(UInt16(113)) & 127) : (Int64(67) | 1)),
                ((UInt16(UInt16(64)) & 127)..(UInt16(UInt16(254)) & 127) : (Int64(61) | 1)),
                ((UInt16(UInt16(108)) & 127)..=(UInt16(UInt16(57)) & 127) : (Int64(51) | 1)),
                ((UInt16(UInt16(71)) & 127)..=(UInt16(UInt16(89)) & 127) : (Int64(-125) | 1))]);
        VArray<Bool, $2>(repeat: var_1739719735864_416)
    }
}

@Frozen
@Deprecated
public func func_1739719735864_421<T0>(param_1739719735864_422: Bool): VArray<Bool, $5> where T0 <: Class_1739719735864_890 & Class_1739719735864_135 { // block id: 423
    var loopTimeVar_1739719735864_1402: Range<UInt64> = ((UInt64(UInt64(Int32(-67))) & 127)..=(UInt64(UInt64(UInt16(Int8(94)))) &
        127) : (Int64(Int16(76)) | 1));
    for (i in loopTimeVar_1739719735864_1402 where ((var_1739719735864_434, Option<Unit>.Some(()), var_1739719735864_445,
        var_1739719735864_448, var_1739719735864_451)[2] ?? (UInt32(234) is Int64))) {
        VArray<Unit, $1>(repeat: var_1739719735864_461)[0];
        func_1739719735864_465(((UInt32(UInt32(124)) & 127)..(UInt32(UInt32(149)) & 127) : (Int64(122) | 1)))
    };
    var var_1739719735864_1422: (Struct_1739719735864_766, Class_1739719735864_135, VArray<Bool, $5>, Array<VArray<Bool, $2>>) = (Struct_1739719735864_766(),
        Class_1739719735864_890(), VArray<Bool, $5>(repeat: (((UInt16(UInt16(19)) & 127)..=(UInt16(UInt16(196)) & 127) : (Int64(98) |
                1)) is Option<Float64>)), [VArray<Bool, $2>({i => false}), VArray<Bool, $2>(repeat: false),
            VArray<Bool, $2>(repeat: false), VArray<Bool, $2>({i => true}), VArray<Bool, $2>(repeat: false),
            VArray<Bool, $2>(repeat: true), VArray<Bool, $2>(repeat: (UInt8(189) is VArray<Bool, $5>)),
            VArray<Bool, $2>(repeat: (Class_1739719735864_1257() is Rune)),
            VArray<Bool, $2>(repeat: ([((UInt16(UInt16(139)) & 127)..=(UInt16(UInt16(80)) & 127) : (Int64(-14) | 1)),
                ((UInt16(UInt16(217)) & 127)..=(UInt16(UInt16(154)) & 127) : (Int64(-109) | 1)),
                ((UInt16(UInt16(193)) & 127)..=(UInt16(UInt16(200)) & 127) : (Int64(-99) | 1)),
                ((UInt16(UInt16(187)) & 127)..(UInt16(UInt16(231)) & 127) : (Int64(116) | 1)),
                ((UInt16(UInt16(228)) & 127)..=(UInt16(UInt16(28)) & 127) : (Int64(54) | 1)),
                ((UInt16(UInt16(240)) & 127)..=(UInt16(UInt16(213)) & 127) : (Int64(13) | 1)),
                ((UInt16(UInt16(0)) & 127)..=(UInt16(UInt16(224)) & 127) : (Int64(-18) | 1)),
                ((UInt16(UInt16(177)) & 127)..(UInt16(UInt16(27)) & 127) : (Int64(49) | 1)),
                ((UInt16(UInt16(111)) & 127)..=(UInt16(UInt16(211)) & 127) : (Int64(-40) | 1)),
                ((UInt16(UInt16(90)) & 127)..(UInt16(UInt16(70)) & 127) : (Int64(-90) | 1))] is Option<Int32>)),
            VArray<Bool, $2>(repeat: (VArray<Unit, $1>({i => ()}) is Range<UInt64>))]);
    (var_1739719735864_1419 ?? var_1739719735864_1422)[2]
}

public func func_1739719735864_94(
    optionalParam_1739719735864_95!: Range<UInt8> = ((UInt8(UInt8(70)) & 127)..=(UInt8(UInt8(86)) & 127) : (Int64(-92) |
        1))): VArray<Bool, $5> { // block id: 97
    if ([VArray<Bool, $2>(repeat: var_1739719735864_106), VArray<Bool, $2>({i => true}), var_1739719735864_113,
        var_1739719735864_113, var_1739719735864_113, var_1739719735864_113, VArray<Bool, $2>({i => false}),
        var_1739719735864_122, var_1739719735864_122, VArray<Bool, $2>(repeat: var_1739719735864_106)][6][0]) {
        (Class_1739719735864_135.func_1739719735864_142(namedParam_1739719735864_145: var_1739719735864_1480,
            optionalParam_1739719735864_146: var_1739719735864_285))
    } else {
        (var_1739719735864_1489 ?? var_1739719735864_631)
    }
}

main(): Int64 {
    try {
        let var_1739719735864_88: (Int16) -> Unit = func_1739719735864_39;
        let var_1739719735864_1535: Option<Option<Int32>> = Option<Option<Int32>>.None;
        let var_1739719735864_1552: ((Struct_1739719735864_766, Class_1739719735864_135, VArray<Bool, $5>, Array<VArray<Bool, $2>>), 
            Range<UInt16>, VArray<Unit, $1>, Class_1739719735864_890, Int8) = ((Struct_1739719735864_766(),
                Class_1739719735864_890(), VArray<Bool, $5>({i => true}), [VArray<Bool, $2>({i => true}),
                    VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => false}),
                    VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => false}),
                    VArray<Bool, $2>({i => true}), VArray<Bool, $2>({i => false}), VArray<Bool, $2>({i => false})]), ((UInt16(UInt16(UInt16(60))) &
                127)..(UInt16(UInt16(108)) & 127) : (Int64(-51) | 1)), VArray<Unit, $1>({i => ()}),
            Class_1739719735864_890(), Int8(UInt8(109)));
        func func_1739719735864_19(param_1739719735864_20: UInt16, param_1739719735864_21: UInt8,
            namedParam_1739719735864_22!: UInt16): Bool { // block id: 23
            const var_1739719735864_33: Int64 = 123;
            let var_1739719735864_51: Array<Range<Int8>> = [((Int8(Int8(-51)) & 127)..=(Int8(Int8(-86)) & 127) : (Int64(-88) |
                1)), ((Int8(Int8(-88)) & 127)..(Int8(Int8(-24)) & 127) : (Int64(-83) | 1)),
                ((Int8(Int8(89)) & 127)..(Int8(Int8(122)) & 127) : (Int64(65) | 1)),
                ((Int8(Int8(Int8(Int8(73)))) & 127)..(Int8(Int8(UInt8(UInt8(35)))) & 127) : (Int64(Int64(-93)) | 1)),
                ((Int8(Int8(88)) & 127)..(Int8(Int8(123)) & 127) : (Int64(-123) | 1)),
                ((Int8(Int8(-72)) & 127)..=(Int8(Int8(-10)) & 127) : (Int64(-114) | 1)),
                ((Int8(Int8(UInt8(205))) & 127)..=(Int8(Int8(18)) & 127) : (Int64(Int16(89)) | 1)),
                ((Int8(Int8(29)) & 127)..=(Int8(Int8(-48)) & 127) : (Int64(26) | 1)),
                ((Int8(Int8(45)) & 127)..=(Int8(Int8(15)) & 127) : (Int64(-67) | 1)),
                ((Int8(Int8(Int8(-54))) & 127)..(Int8(Int8(Int8(Int8(-57)))) & 127) : (Int64(-65) | 1))];
            if (((if (true) {
                var_1739719735864_29
            } else {
                VArray<Int64, $3>(repeat: var_1739719735864_33)
            }) is Range<UInt16>)) { // block id: 37
                Int16(92) |> func_1739719735864_39;
                var_1739719735864_51[7];
                Int16(112) |> var_1739719735864_88
            } else if (func_1739719735864_94(optionalParam_1739719735864_95: var_1739719735864_1495)[4]) { // block id: 1498
                UInt32(UInt32(185));
                try (resource = Class_1739719735864_135()) { // block id: 1502
                    ();
                    var_1739719735864_44;
                    var_1739719735864_461
                } finally { // block id: 1506
                    var_1739719735864_474 >>= ((Int16(107)) & 7)
                    ()
                }
            };
            if (var_1739719735864_416) { // block id: 1513
                Int8(-19);
                if (false) { // block id: 1517
                    var_1739719735864_219
                } else if (true) { // block id: 1520
                    ();
                    Option<String>.None
                } else { // block id: 1523
                    var_1739719735864_44;
                    Option<String>.Some(###"B<wWb\"Z*e3"###)
                };
                if (true) {
                    Option<Int32>.Some(var_1739719735864_580)
                } else {
                    Option<Int32>.None
                }
            } else { // block id: 1532
                (var_1739719735864_1535 ?? Option<Int32>.Some(var_1739719735864_738))
            };
            match ((Option<Int8>.Some(var_1739719735864_194) ?? Int8(62)) / ((var_1739719735864_1552[4]) | 1)) {
                case -100 | -127 =>
                    ();
                    (var_1739719735864_29, true, ((UInt32(UInt32(137)) & 127)..=(UInt32(UInt32(188)) & 127) : (var_1739719735864_161 |
                            1)), ((UInt32(UInt32(201)) & 127)..=(UInt32(UInt32(26)) & 127) : (Int64(9) | 1)),
                        var_1739719735864_1236, var_1739719735864_122);
                    var_1739719735864_1322

                case _ =>
                    var_1739719735864_903;
                    var_1739719735864_1147 %= ((UInt32(153)) | 1)
                    false
            }
        };

        let var_1739719735864_1666: Class_1739719735864_135 = Class_1739719735864_1257();
        if (func_1739719735864_19(var_1739719735864_1112, UInt8(179),
            namedParam_1739719735864_22: var_1739719735864_1112)) { // block id: 1652
            var_1739719735864_451;
            UInt8(180);
            VArray<Int64, $3>(repeat: var_1739719735864_161)
        } else if (((var_1739719735864_770, var_1739719735864_1666, var_1739719735864_631, var_1739719735864_285) is (Enum_1739719735864_540, 
            VArray<Unit, $1>, UInt32, VArray<Bool, $5>, Array<UInt64>, Array<VArray<Bool, $2>>))) { // block id: 1670
            var_1739719735864_29
        } else { // block id: 1672
            var_1739719735864_1674;
            if (true) {
                [var_1739719735864_636, var_1739719735864_636, var_1739719735864_1688, UInt64(221), UInt64(239),
                    UInt64(236), UInt64(185), UInt64(49), var_1739719735864_1688, UInt64(83)]
            } else {
                [var_1739719735864_636, var_1739719735864_636, UInt64(27), UInt64(112), UInt64(93),
                    var_1739719735864_1688, UInt64(241), UInt64(162), var_1739719735864_636, var_1739719735864_636]
            };
            var_1739719735864_29
        }[0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1739719735864_451 * var_1739719735864_451), 64)
        crcCheck.updateBuffer(UInt64(var_1739719735864_537 * var_1739719735864_537), 64)
        crcCheck.updateBuffer(UInt64(var_1739719735864_738 * var_1739719735864_738), 64)
        crcCheck.updateBuffer(UInt64(var_1739719735864_1688 * var_1739719735864_1688), 64)
        crcCheck.updateBuffer(UInt64(var_1739719735864_2514 * var_1739719735864_2514), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1739719735864_890 {}

extend Struct_1739719735864_766 {
    @Frozen
    public func func_1739719735864_773(param_1739719735864_774: Range<UInt16>, param_1739719735864_775: Option<Bool>): Enum_1739719735864_519<Range<UInt64>,
        VArray<Bool, $5>> { // block id: 776
        match (VArray<Unit, $1>(repeat: (var_1739719735864_416 &&= false))) {
            case _ => var_1739719735864_786
        }
    }
}

extend Class_1739719735864_135 {
    @Frozen
    static func func_1739719735864_514(namedParam_1739719735864_515!: Range<UInt64>,
        namedParam_1739719735864_516!: (VArray<Int64, $3>, Bool, Range<UInt32>, Range<UInt32>, Int64, VArray<Bool, $2>)): Range<UInt32> { // block id: 517
        let var_1739719735864_869: (Unit) -> Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>> = func_1739719735864_528;
        match ((Option<Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>>.None ?? (var_1739719735864_748 |>
            var_1739719735864_869))) {
            case _ =>
                ();
                if (false) {
                    VArray<Int64, $3>({i => Int64(-48)})
                } else {
                    VArray<Int64, $3>({i => Int64(44)})
                }
        };
        if (var_1739719735864_894.var_1739719735864_897) { // block id: 899
            var_1739719735864_903[4];
            var loopTimeVar_1739719735864_1072: Int64 = 0;
            do {
                loopTimeVar_1739719735864_1072++;
            } while ((false) && loopTimeVar_1739719735864_1072 < 100);
            match (Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>.enumValue_1739719735864_788(
                var_1739719735864_692, Float64(-96.0),
                Enum_1739719735864_540.enumValue_1739719735864_805(var_1739719735864_448,
                    Option<(Range<Int8>, Option<Unit>, Option<Bool>, Range<Int32>, UInt16)>.None, UInt64(76)))) {
                case caseVar_1739719735864_1083: VArray<Bool, $5> => ((UInt32(var_1739719735864_1087) & 127)..(UInt32(UInt32(89)) &
                    127) : (var_1739719735864_161 | 1))

                case enumValue_1739719735864_788(_, caseVar_1739719735864_1093, caseVar_1739719735864_1094) => ((UInt32(UInt32(113)) &
                    127)..(UInt32(UInt32(234)) & 127) : (var_1739719735864_1100 | 1))

                case enumValue_1739719735864_788(caseVar_1739719735864_1104: Range<UInt8>, caseVar_1739719735864_1105: Int16, enumValue_1739719735864_1000) =>
                    var_1739719735864_416 ||= var_1739719735864_416
                    var_1739719735864_1112++;
                    var_1739719735864_1119

                case _ =>
                    UInt32(208);
                    var_1739719735864_461;
                    if (false) {
                        ((UInt32(UInt32(101)) & 127)..(UInt32(UInt32(28)) & 127) : (var_1739719735864_161 | 1))
                    } else {
                        var_1739719735864_1119
                    }

                case _ => ((UInt32(UInt32(152)) & 127)..(UInt32(UInt32(254)) & 127) : (Int64(-54) | 1))
            }
        } else if (((if (true) {
            r'u'
        } else {
            r'C'
        }) is (Unit) -> Enum_1739719735864_519<Range<UInt64>, VArray<Bool, $5>>)) { // block id: 1142
            ((UInt32(UInt32(106)) & 127)..=(UInt32(UInt32(40)) & 127) : (Int64(117) | 1))
        } else { // block id: 1144
            ((UInt32(var_1739719735864_1147) & 127)..=(UInt32(var_1739719735864_1147) & 127) : (Int64(102) | 1))
        }
    };

    @Frozen
    public static func func_1739719735864_142(
        optionalParam_1739719735864_143!: Range<UInt64> = ((UInt64(UInt64(104)) & 127)..(UInt64(UInt64(187)) & 127) : (Int64(-31) |
            1)), namedParam_1739719735864_145!: Range<Int16>,
        optionalParam_1739719735864_146!: Array<VArray<Bool, $2>> = [[false, true], [false, true], [true, true],
            [false, true], [false, true], [true, true], [false, true], [true, true], [false, false], [true, false]]): VArray<Bool, $5> { // block id: 148
        (Option<Unit>.None ?? match ((VArray<Int64, $3>(repeat: Int64(126)) as Unit)) {
            case caseVar_1739719735864_166 =>
                var var_1739719735864_170: Int = Int64(UInt32(UInt16(Int8(Int8(-15)))));
                var_1739719735864_170--;
                ()

            case caseVar_1739719735864_179: UInt8 =>
                var var_1739719735864_183: Float32 = Float32(Float32(124.0));
                var_1739719735864_183 = var_1739719735864_183

            case _ =>
                var_1739719735864_44;
                Option<Unit>.None;
                var_1739719735864_194 >>= ((var_1739719735864_194) & 7)
        });
        var var_1739719735864_282: (Array<VArray<Bool, $2>>) -> Bool = func_1739719735864_235;
        (try { // block id: 204
            if (true) {
                Option<String>.Some(var_1739719735864_209)
            } else {
                Option<String>.None
            }
        } catch (_) { // block id: 212
            var_1739719735864_215 >>= ((var_1739719735864_215) & 7)
            var_1739719735864_219
        } finally { // block id: 223
            ((Int8(Int8(0)) & 127)..(Int8(Int8(-116)) & 127) : (Int64(96) | 1));
            if (var_1739719735864_227) {
                Option<String>.None
            } else {
                var_1739719735864_219
            };
            Option<String>.Some(###"6/~V1j/!xt"###)
        } ?? if ((var_1739719735864_285 |> var_1739719735864_282)) { // block id: 403
            var_1739719735864_209
        } else if (true) { // block id: 406
            var_1739719735864_44;
            var_1739719735864_409;
            var_1739719735864_209
        } else { // block id: 412
            var_1739719735864_44;
            var_1739719735864_416 &&= true
            var_1739719735864_209
        });
        false |> func_1739719735864_421<Class_1739719735864_890>
    }
}
