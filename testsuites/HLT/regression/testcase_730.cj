/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1734953686851_66: Int16 = Int16(UInt16(Int8(122)))
public let var_1734953686851_80: Class_1734953686851_74 = Class_1734953686851_74()
public const var_1734953686851_112: Bool = false
public let var_1734953686851_169: Bool = true
public var var_1734953686851_236: (Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, Int64, Int16, Bool, Unit), (Array<Rune>, 
    Int8, Range<UInt64>, Unit), UInt8, Range<Int32>) = (((Int32(Int32(-30)) & 127)..(Int32(Int32(-86)) & 127) : (Int64(-42) |
        1)), ((Int32(Int32(Int32(-119))) & 127)..=(Int32(Int32(-15)) & 127) : (Int64(Int64(83)) | 1)), ((UInt32(UInt32(Int16(-10))) &
        127)..=(UInt32(UInt32(44)) & 127) : (Int64(Int64(UInt16(170))) | 1)), (UInt8(UInt8(UInt8(140))), Int64(UInt64(253)),
        Int16(Int8(5)), (match (VArray<Unit, $3>(repeat: ())) {
            case _: Range<Int16> => true
            case _ => false
        }), ()), ([r'c', r'u', r'a', r'y', r'7', r'x', r'g', r'o', r'q', r'7'], Int8(UInt8(Int8(81))), ((UInt64(UInt64(UInt16(222))) &
            127)..(UInt64(UInt64(119)) & 127) : (Int64(Int64(-90)) | 1)), ()), UInt8(158), ((Int32(Int32(29)) & 127)..(Int32(Int32(79)) &
        127) : (Int64(-32) | 1)))
const var_1734953686851_313: Unit = ()
internal const var_1734953686851_325: Float32 = 61.0
@Deprecated
internal const var_1734953686851_329: Int32 = 26
var var_1734953686851_372: Enum_1734953686851_369 = Enum_1734953686851_369.enumValue_1734953686851_374(
    ((UInt64(UInt64(238)) & 127)..(UInt64(UInt64(96)) & 127) : (Int64(64) | 1)),
    ((UInt16(UInt16(UInt16(Int8(-86)))) & 127)..=(UInt16(UInt16(68)) & 127) : (Int64(-60) | 1)),
    (r'k', Class_1734953686851_194(), (), Int32(UInt8(163)), Float64(41.0), VArray<Unit, $3>({i => ()}), ((UInt8(UInt8(153)) &
            127)..=(UInt8(UInt8(15)) & 127) : (Int64(-70) | 1))))
public let var_1734953686851_427: Option<Bool> = Option<Bool>.None
var var_1734953686851_439: Class_1734953686851_432 = Class_1734953686851_432()
public let var_1734953686851_509: ??Bool = (match (((UInt32(UInt32(146)) & 127)..(UInt32(UInt32(15)) & 127) : (Int64(86) |
    1))) {
    case newVar: Option<Bool> => Option<Option<Bool>>.Some(newVar)
    case _ => Option<Option<Bool>>.None
})
public var var_1734953686851_538: Range<Int16> = ((Int16(Int16(61)) & 127)..=(Int16(Int16(-69)) & 127) : (Int64(-59) | 1))
internal const var_1734953686851_547: Float64 = -98.0
@Deprecated
let var_1734953686851_557: ?VArray<Unit, $3> = (match (((Int16(Int16(86)) & 127)..(Int16(Int16(-37)) & 127) : (Int64(91) |
    1))) {
    case newVar: VArray<Unit, $3> => Option<VArray<Unit, $3>>.Some(newVar)
    case _ => Option<VArray<Unit, $3>>.None
})
@Deprecated
internal let var_1734953686851_569: Unit = ()
public var var_1734953686851_661: Range<UInt64> = ((UInt64(UInt64(110)) & 127)..(UInt64(UInt64(32)) & 127) : (Int64(-83) |
    1))
let var_1734953686851_675: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
@Deprecated
var var_1734953686851_708: Range<Int64> = ((Int64(Int64(UInt32(UInt32(Int32(99))))) & 127)..(Int64(Int64(Int64(5))) & 127) : (Int64(Int32(-85)) |
    1))
internal var var_1734953686851_788: Unit = ()
@Deprecated
public const var_1734953686851_851: Int16 = -14
@Deprecated
public var var_1734953686851_965: Option<VArray<Unit, $3>> = Option<VArray<Unit, $3>>.None
@Deprecated
public var var_1734953686851_969: Array<UInt64> = [UInt64(254), UInt64(182), UInt64(79), UInt64(236), UInt64(22),
    UInt64(249), UInt64(137), UInt64(127), UInt64(24), UInt64(156)]
let var_1734953686851_972: Option<VArray<Unit, $3>> = Option<VArray<Unit, $3>>.None
public var var_1734953686851_978: UInt8 = UInt8(180)
public var var_1734953686851_981: VArray<Unit, $3> = [(), (), ()]
public const var_1734953686851_997: Int64 = -127
public let var_1734953686851_1000: Option<Int64> = (match ([(match ([true, true, false, true, true, true, false, true,
    true, false]) {
    case _: Int32 => true
    case _ => false
}), true, (match (((UInt32(UInt32(44)) & 127)..(UInt32(UInt32(173)) & 127) : (Int64(5) | 1))) {
    case _: (UInt8, UInt8) -> Rune => true
    case _ => false
}), false, (match (((Int64(Int64(24)) & 127)..(Int64(Int64(-52)) & 127) : (Int64(77) | 1))) {
    case _: (Array<Rune>, Int8, Range<UInt64>, Unit) => true
    case _ => false
}),
    (match ((((Int32(Int32(-37)) & 127)..(Int32(Int32(21)) & 127) : (Int64(29) | 1)), ((Int32(Int32(107)) & 127)..=(Int32(Int32(90)) &
        127) : (Int64(121) | 1)), ((UInt32(UInt32(180)) & 127)..=(UInt32(UInt32(11)) & 127) : (Int64(12) | 1)), (UInt8(97),
        Int64(9), Int16(-113), true, ()), ([r'b', r'K', r'Y', r'U', r'w', r'J', r'O', r'5', r'G', r'f'], Int8(16), ((UInt64(UInt64(146)) &
            127)..(UInt64(UInt64(143)) & 127) : (Int64(3) | 1)), ()), UInt8(250), ((Int32(Int32(-101)) & 127)..=(Int32(Int32(62)) &
        127) : (Int64(-121) | 1)))) {
    case _: (Array<Rune>, Int8, Range<UInt64>, Unit) => true
    case _ => false
}), (match (Float32(-9.0)) {
    case _: (Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, Int64, Int16, Bool, Unit), (Array<Rune>, Int8, Range<UInt64>, 
            Unit), UInt8, Range<Int32>) => true
    case _ => false
}), false, (match (()) {
    case _: Array<Unit> => true
    case _ => false
}), (match (Option<Option<VArray<Unit, $3>>>.None) {
    case _: Float64 => true
    case _ => false
})]) {
    case newVar: Int64 => Option<Int64>.Some(newVar)
    case _ => Option<Int64>.None
})
public let var_1734953686851_1057: Int = Int64(-11)
var var_1734953686851_1142: Rune = r'4'
var var_1734953686851_1268: Range<Int32> = ((Int32(Int32(Int16(UInt8(Int8(-30))))) & 127)..(Int32(Int32(64)) & 127) : (Int64(50) |
    1))
var var_1734953686851_1292: Rune = r'U'
var var_1734953686851_1326: Option<Option<Option<Bool>>> = Option<Option<Option<Bool>>>.None
public var var_1734953686851_1390: Int64 = Int64(Int16(6))
public let var_1734953686851_1394: Range<Int8> = ((Int8(Int8(47)) & 127)..(Int8(Int8(56)) & 127) : (Int64(-4) | 1))
public let var_1734953686851_1538: (Rune, Class_1734953686851_194, Unit, Int32, Float64, VArray<Unit, $3>, Range<UInt8>) = (r'A',
    Class_1734953686851_194(), (), Int32(-69), Float64(53.0), VArray<Unit, $3>(repeat: ()), ((UInt8(UInt8(UInt8(230))) &
        127)..=(UInt8(UInt8(117)) & 127) : (Int64(Int16(-85)) | 1)))
public var var_1734953686851_1580: (Array<Rune>, Int8, Range<UInt64>, Unit) = ([r'7', r'k', r'J', r'n', r'h', r'l', r'l',
        r'R', r'J', r'L'], Int8(UInt8(Int8(115))), ((UInt64(UInt64(63)) & 127)..(UInt64(UInt64(178)) & 127) : (Int64(65) |
        1)), ())
public var var_1734953686851_1716: UInt8 = UInt8(Int8(-22))
let var_1734953686851_1723: Class_1734953686851_194 = Class_1734953686851_194()
public let var_1734953686851_1728: Float64 = Float64(-2.0)
public var var_1734953686851_1738: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(UInt8(112)), Int64(Int8(72)), Int16(-57),
    false, ())
var var_1734953686851_1779: Bool = true
public let var_1734953686851_1891: Range<UInt16> = ((UInt16(UInt16(21)) & 127)..=(UInt16(UInt16(142)) & 127) : (Int64(-77) |
    1))
public const var_1734953686851_2135: Float64 = 52.0
let var_1734953686851_2192: ?Bool = (match (([r'S', r'6', r's', r'L', r'F', r'i', r'1', r'r', r'j', r'O'], Int8(Int8(86)),
    ((UInt64(UInt64(198)) & 127)..=(UInt64(UInt64(12)) & 127) : (Int64(47) | 1)), ())) {
    case newVar: Bool => Option<Bool>.Some(newVar)
    case _ => Option<Bool>.None
})

@Frozen
public func func_1734953686851_8(optionalParam_1734953686851_9!: UInt8 = UInt8(136),
    optionalParam_1734953686851_11!: UInt8 = UInt8(UInt8(UInt8(Int8(-3))))): Rune { // block id: 16
    [r'7', r'C', r'j', r'Y', r'v', r'D', r'K', r'f', r'l', r'e'][0]
}

public interface Interface_1734953686851_78 {}

public sealed interface Interface_1734953686851_77 <: Interface_1734953686851_78 {}

public open class Class_1734953686851_74 <: Interface_1734953686851_77 {
    public Class_1734953686851_74() { // block id: 76

    }

    @Frozen
    prop var_1734953686851_83: Option<VArray<Unit, $3>> { // block id: 84
        get() { // block id: 86
            (match (((UInt32(UInt32(138)) & 127)..(UInt32(UInt32(11)) & 127) : (Int64(Int64(-74)) | 1))) {
                case newVar: VArray<Unit, $3> => Option<VArray<Unit, $3>>.Some(newVar)
                case _ => Option<VArray<Unit, $3>>.None
            })
        }
    }
}

public interface Interface_1734953686851_197<T0, T1> {
    @Frozen
    static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 502
        let var_1734953686851_516: ?Bool = (match (((UInt32(UInt32(10)) & 127)..=(UInt32(UInt32(175)) & 127) : (Int64(Int16(Int16(-100))) |
            1))) {
            case newVar: Bool => Option<Bool>.Some(newVar)
            case _ => Option<Bool>.None
        });
        (match (var_1734953686851_509) {
            case Some(num) => num
            case None => try { // block id: 513
                var_1734953686851_313;
                var_1734953686851_516
            } finally { // block id: 524
                ();
                var_1734953686851_516
            }
        });
        (match (var_1734953686851_516) {
            case Some(num) => num
            case None => ([false, false, false, false, true, true, false, true, false, true], [(), (), (), (), (), (),
                    (), (), (), ()], ((UInt64(UInt64(112)) & 127)..=(UInt64(UInt64(184)) & 127) : (Int64(26) | 1)),
                var_1734953686851_538, (var_1734953686851_169, var_1734953686851_509, var_1734953686851_547, ((UInt64(UInt64(51)) &
                        127)..(UInt64(UInt64(219)) & 127) : (Int64(-54) | 1)), Int64(44)), VArray<Unit, $3>({i => ()}), [(),
                    (), (), (), (), (), (), (), (), ()], var_1734953686851_557, UInt8(250))[4][0]
        })
    };

    static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>, namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 774
        var var_1734953686851_783: Bool = (match (((Int64(Int64(-99)) & 127)..=(Int64(Int64(82)) & 127) : (Int64(37) | 1))) {
            case _: String => true
            case _ => false
        });
        var var_1734953686851_834: Bool = (match (Int16(27)) {
            case _: (Rune, Class_1734953686851_194, Unit, Int32, Float64, VArray<Unit, $3>, Range<UInt8>) => true
            case _ => false
        });
        try { // block id: 776

        } catch (e: Exception) { // block id: 777
            if (var_1734953686851_169) { // block id: 780
                var_1734953686851_783 = var_1734953686851_783 && (var_1734953686851_783)
                var_1734953686851_788
            };
            var_1734953686851_788;
            var loopTimeVar_1734953686851_799: Array<UInt64> = [UInt64(UInt16(Int16(UInt16(32)))), UInt64(Int8(-7)),
                UInt64(Int16(-126)), UInt64(92), UInt64(Int32(81)), UInt64(UInt16(105)), UInt64(Int16(Int8(UInt8(185)))),
                UInt64(UInt16(Int8(68))), UInt64(111), UInt64(UInt32(96))];
            let iter791 = loopTimeVar_1734953686851_799.iterator()
            while (true) {
                match (iter791.next()) {
                    case None => break
                    case Some(v) => match (v) {
                        case i where (true) =>
                            break;
                            if (false) {
                                var_1734953686851_427
                            } else {
                                var_1734953686851_427
                            }
                        case _ => continue
                    }
                }
            }
        } finally { // block id: 824
            let var_1734953686851_826: UInt32 = UInt32(UInt8(UInt8(30)));
            var_1734953686851_826;
            let var_1734953686851_841: Int64 = Int64(-68);
            try (resource = Class_1734953686851_194()) { // block id: 831
                (var_1734953686851_834, var_1734953686851_509, Float64(39.0), var_1734953686851_661,
                    var_1734953686851_841);
                var_1734953686851_783 = var_1734953686851_783 || (true)
            } catch (e: Exception) { // block id: 846
                var_1734953686851_788
            }
        };
        Option<Option<Bool>>.None
    }
}

@Deprecated
public open class Class_1734953686851_194 <: Interface_1734953686851_197<Array<UInt64>, Bool> & Resource {
    @Frozen
    public init() { // block id: 196

    }

    public static let var_1734953686851_200: Range<UInt64> = ((UInt64(UInt64(3)) & 127)..(UInt64(UInt64(132)) & 127) : (Int64(101) |
        1));

    @Frozen
    public mut prop var_1734953686851_442: (UInt8, Int64, Int16, Bool, Unit) { // block id: 443
        get() { // block id: 445
            (UInt8(140), Int64(70), Int16(UInt16(219)), (match (([r'R', r't', r'Z', r'f', r'a', r'Y', r'2', r'e', r'5',
                        r't'], Int8(91), ((UInt64(UInt64(1)) & 127)..(UInt64(UInt64(241)) & 127) : (Int64(59) | 1)), ())) {
                    case _: Range<Int16> => true
                    case _ => false
                }), ());
            var_1734953686851_1065
        }
        set(Value) { // block id: 463
            [true, false, true, (match (Float32(Float32(100.0))) {
                case _: Interface_1734953686851_436 => true
                case _ => false
            }), false, (match (((Int64(Int64(-125)) & 127)..(Int64(Int64(126)) & 127) : (Int64(-28) | 1))) {
                case _: Unit => true
                case _ => false
            }), (match (((Int64(Int64(-93)) & 127)..=(Int64(Int64(-98)) & 127) : (Int64(97) | 1))) {
                case _: Range<Int8> => true
                case _ => false
            }), (match (",$2wtn$=n.") {
                case _: Array<Rune> => true
                case _ => false
            }), false, false];
            ();
            var_1734953686851_1065 = Value
        }
    }

    @Frozen
    Class_1734953686851_194(namedParam_1734953686851_224!: (UInt8, UInt8) -> Rune,
        optionalParam_1734953686851_228!: Float32 = Float32(99.0)) { // block id: 230
        var_1734953686851_236[4][3];
        let var_1734953686851_598: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(UInt8(UInt8(Int8(29)))), Int64(Int32(-112)),
            Int16(Int16(Int16(UInt8(222)))), (match (((match (((Int64(Int64(23)) & 127)..(Int64(Int64(-46)) & 127) : (Int64(-124) |
                    1))) {
                    case _: Option<Bool> => true
                    case _ => false
                }), Option<Option<Bool>>.Some(Option<Bool>.None), Float64(-24.0), ((UInt64(UInt64(91)) & 127)..(UInt64(UInt64(16)) &
                    127) : (Int64(-128) | 1)), Int64(-22))) {
                case _: Unit => true
                case _ => false
            }), ());
        const var_1734953686851_649: Rune = r'z';
        func func_1734953686851_283<T0>(optionalParam_1734953686851_284!: UInt32 = UInt32(228)): Unit { // block id: 286
            var var_1734953686851_344: Bool = (match (UInt8(UInt8(UInt8(Int8(50))))) {
                case _: (Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, Int64, Int16, Bool, Unit), (Array<Rune>, 
                        Int8, Range<UInt64>, Unit), UInt8, Range<Int32>) => true
                case _ => false
            });
            var var_1734953686851_408: Int = Int64(-26);
            (match (match (func_1734953686851_294(Int64(113))) {
                case _ =>
                    var_1734953686851_344 = var_1734953686851_344 || (true)
                    Option<Bool>.Some(var_1734953686851_344)
            }) {
                case Some(num) => num
                case None => [var_1734953686851_344, true, true, true, false, false, false, true, true,
                    var_1734953686851_169][6] || match (var_1734953686851_372) {
                    case _ =>
                        let var_1734953686851_404: String = """
'Ua{xA
9w:I8
""";
                        var_1734953686851_404;
                        var_1734953686851_408 = var_1734953686851_408 & (var_1734953686851_408)
                        !false
                }
            });
            let var_1734953686851_633: UInt64 = UInt64(45);
            if ((match (if (true) {
                Option<Bool>.Some(var_1734953686851_169)
            } else {
                Option<Bool>.Some(false)
            }) {
                case Some(num) => num
                case None => (match (var_1734953686851_427) {
                    case Some(num) => num
                    case None => true
                })
            })) { // block id: 430
                var_1734953686851_439.var_1734953686851_442;
                [var_1734953686851_313, (), (), (), (), (), var_1734953686851_313, (), (), ()][6]
            } else if (Interface_1734953686851_197<Array<UInt64>, Bool>.func_1734953686851_498(
                namedParam_1734953686851_499: [r'7', r'4', r'1', r'd', r'P', r'6', r'L', r'3', r'i', r'b'],
                namedParam_1734953686851_500: [(), var_1734953686851_313, (), var_1734953686851_569, (),
                    var_1734953686851_569, (), var_1734953686851_313, var_1734953686851_313, ()],
                namedParam_1734953686851_501: ())) { // block id: 578
                [((Int8(Int8(14)) & 127)..=(Int8(Int8(-84)) & 127) : (Int64(98) | 1)),
                    ((Int8(Int8(-113)) & 127)..=(Int8(Int8(-89)) & 127) : (Int64(-44) | 1)),
                    ((Int8(Int8(-107)) & 127)..=(Int8(Int8(-111)) & 127) : (Int64(-36) | 1)),
                    ((Int8(Int8(-42)) & 127)..(Int8(Int8(71)) & 127) : (Int64(-113) | 1)),
                    ((Int8(Int8(51)) & 127)..=(Int8(Int8(-90)) & 127) : (Int64(84) | 1)),
                    ((Int8(Int8(8)) & 127)..(Int8(Int8(-19)) & 127) : (Int64(-36) | 1)),
                    ((Int8(Int8(6)) & 127)..(Int8(Int8(-97)) & 127) : (Int64(-87) | 1)),
                    ((Int8(Int8(-13)) & 127)..(Int8(Int8(-126)) & 127) : (Int64(-96) | 1)),
                    ((Int8(Int8(-128)) & 127)..(Int8(Int8(-19)) & 127) : (Int64(-111) | 1)),
                    ((Int8(Int8(-87)) & 127)..(Int8(Int8(25)) & 127) : (Int64(119) | 1))][9];
                var var_1734953686851_626: Int8 = Int8(UInt8(Int8(UInt8(110))));
                (((Int32(var_1734953686851_329) & 127)..(Int32(var_1734953686851_329) & 127) : (Int64(-1) | 1)), ((Int32(var_1734953686851_329) &
                        127)..(Int32(Int32(63)) & 127) : (Int64(5) | 1)), ((UInt32(UInt32(44)) & 127)..=(UInt32(UInt32(22)) &
                        127) : (Int64(-118) | 1)), var_1734953686851_598, ([r'a', r'0', r'h', r'7', r'Y', r'O', r'3',
                            r'g', r'5', r'h'], var_1734953686851_626, ((UInt64(var_1734953686851_633) & 127)..(UInt64(var_1734953686851_633) &
                            127) : (var_1734953686851_408 | 1)), var_1734953686851_569), UInt8(244), ((Int32(var_1734953686851_329) &
                        127)..(Int32(Int32(0)) & 127) : (Int64(113) | 1)))[3];
                ([r'c', var_1734953686851_649, r'v', r'T', var_1734953686851_649, r'J', r'C', var_1734953686851_649,
                        var_1734953686851_649, r'l'], var_1734953686851_626, var_1734953686851_661, var_1734953686851_569)[3]
            };
            let var_1734953686851_697: Bool = false;
            if (if (true) { // block id: 670
                var_1734953686851_569;
                if (var_1734953686851_344) {
                    var_1734953686851_675
                } else {
                    [(), (), (), (), (), (), (), (), (), ()]
                };
                const var_1734953686851_690: Bool = true;
                VArray<Bool, $7>(repeat: var_1734953686851_690)
            } else if (true) { // block id: 701
                let var_1734953686851_703: Unit = ();
                var_1734953686851_703;
                if (true) {
                    var_1734953686851_708
                } else {
                    var_1734953686851_708
                };
                if (true) {
                    VArray<Bool, $7>({i => false})
                } else {
                    VArray<Bool, $7>(repeat: var_1734953686851_169)
                }
            } else { // block id: 737
                let var_1734953686851_739: VArray<Bool, $7> = VArray<Bool, $7>(repeat: (match (Int64(Int32(-21))) {
                        case _: (Rune, String) -> Float64 => true
                        case _ => false
                    }));
                var_1734953686851_739
            }[3]) { // block id: 756
                var var_1734953686851_762: UInt = UInt64(UInt64(Int8(-20)));
                try (resource = Class_1734953686851_194()) { // block id: 758
                    ();
                    var_1734953686851_762 = var_1734953686851_762 * (var_1734953686851_633)
                } catch (_) { // block id: 767

                }
                Interface_1734953686851_197<Array<UInt64>, Bool>.func_1734953686851_498(
                    namedParam_1734953686851_772: Option<Bool>.None, namedParam_1734953686851_773: var_1734953686851_851);
                var var_1734953686851_859: Option<Unit> = (match (([r'd', r'5', r'x', r'v', r'f', r'g', r'J', r'L', r'P',
                        r'8'], Int8(70), ((UInt64(UInt64(27)) & 127)..=(UInt64(UInt64(UInt8(186))) & 127) : (Int64(98) |
                        1)), ())) {
                    case newVar: Unit => Option<Unit>.Some(newVar)
                    case _ => Option<Unit>.None
                });
                (match (var_1734953686851_859) {
                    case Some(num) => num
                    case None => ()
                })
            }
            return
        };

        func_1734953686851_283<Rune>();
        var_1734953686851_788
    };

    var var_1734953686851_1065: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(212), Int64(-5), Int16(76), false, ());
    public static mut prop var_1734953686851_1080: Bool { // block id: 1081
        get() { // block id: 1083
            (match (r'e') {
                case _: (Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, Int64, Int16, Bool, Unit), (Array<Rune>, 
                        Int8, Range<UInt64>, Unit), UInt8, Range<Int32>) => true
                case _ => false
            })
        }
        set(Value) { // block id: 1088
            (match (UInt64(115)) {
                case newVar: Range<UInt64> => Option<Range<UInt64>>.Some(newVar)
                case _ => Option<Range<UInt64>>.None
            });
            ()
        }
    }
    static const var_1734953686851_1109: Bool = false;
    static var var_1734953686851_1185: Int64 = Int64(52);
    public static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 1077
        var var_1734953686851_1097: UInt32 = UInt32(66);
        var_1734953686851_1080 ||= (match (try { // block id: 1094
            var_1734953686851_1097 = var_1734953686851_1097 - (var_1734953686851_1097)
            var_1734953686851_427
        } finally { // block id: 1101
            var_1734953686851_427
        }) {
            case Some(num) => num
            case None => (UInt8(102), Int64(-104), var_1734953686851_851, var_1734953686851_1109, ())[3]
        })
        let var_1734953686851_1173: Int8 = Int8(60);
        (if (false) {
                try { // block id: 1117
                    const var_1734953686851_1120: Rune = r'O';
                    [var_1734953686851_1120, var_1734953686851_1120, r'X', r'Z', var_1734953686851_1120,
                        var_1734953686851_1120, r'5', r'D', r'n', r's']
                } catch (e: Exception) { // block id: 1131
                    var_1734953686851_1080 &&= var_1734953686851_1080
                    var var_1734953686851_1136: Array<Rune> = [r'W', r'L', r'M', r'n', r'q', r'G', r'v', r'a', r'w',
                        r'L'];
                    var_1734953686851_1136
                } finally { // block id: 1138
                    var_1734953686851_313;
                    [var_1734953686851_1142, var_1734953686851_1142, r'v', r'S', r'C', r'D', var_1734953686851_1142,
                        r'8', r'm', r'o']
                }
            } else {
                (if (var_1734953686851_1080) {
                    [r'X', r'w', r'C', r'f', r'3', r'h', r'A', r'b', r'0', r'0']
                } else {
                    [r'i', r'X', r'5', var_1734953686851_1142, r'q', r'Y', r'3', var_1734953686851_1142, r'w',
                        var_1734953686851_1142]
                })
            }, try { // block id: 1168
                ();
                Int8(114) % ((var_1734953686851_1173) | 1)
            } catch (e: Exception) { // block id: 1175
                var_1734953686851_851;
                var_1734953686851_313;
                var_1734953686851_1173
            } finally { // block id: 1179
                var_1734953686851_851 % ((var_1734953686851_851) | 1);
                var_1734953686851_1185 = var_1734953686851_1185 << ((Int64(37)) & 7)
                var_1734953686851_1173
            }, ((UInt64(UInt64(207)) & 127)..=(UInt64(UInt64(156)) & 127) : (Int64(-107) | 1)), try { // block id: 1192
                var var_1734953686851_1194: (Array<Rune>, Int8, Range<UInt64>, Unit) = ([r'L', r'T', r'6', r'0', r'I',
                        r'c', r'X', r's', r'c', r'F'], Int8(UInt8(UInt8(11))), ((UInt64(UInt64(57)) & 127)..=(UInt64(UInt64(UInt8(249))) &
                        127) : (Int64(UInt8(74)) | 1)), ());
                var_1734953686851_1194
            } finally { // block id: 1207
                [((Int8(Int8(-12)) & 127)..=(Int8(Int8(84)) & 127) : (Int64(-25) | 1)),
                    ((Int8(Int8(55)) & 127)..(Int8(Int8(114)) & 127) : (Int64(55) | 1)),
                    ((Int8(Int8(-46)) & 127)..=(Int8(Int8(97)) & 127) : (Int64(-100) | 1)),
                    ((Int8(Int8(-49)) & 127)..=(Int8(Int8(3)) & 127) : (Int64(41) | 1)),
                    ((Int8(Int8(22)) & 127)..(Int8(Int8(98)) & 127) : (Int64(-100) | 1)),
                    ((Int8(Int8(-17)) & 127)..(Int8(Int8(23)) & 127) : (Int64(29) | 1)),
                    ((Int8(Int8(19)) & 127)..(Int8(Int8(34)) & 127) : (Int64(-48) | 1)),
                    ((Int8(Int8(-103)) & 127)..=(Int8(Int8(-44)) & 127) : (Int64(68) | 1)),
                    ((Int8(Int8(79)) & 127)..=(Int8(Int8(49)) & 127) : (Int64(-58) | 1)),
                    ((Int8(Int8(-52)) & 127)..=(Int8(Int8(-88)) & 127) : (Int64(-107) | 1))];
                ([r'b', r'l', var_1734953686851_1142, r'Q', var_1734953686851_1142, r'T', var_1734953686851_1142, r'u',
                        var_1734953686851_1142, var_1734953686851_1142], Int8(17), ((UInt64(UInt64(189)) & 127)..(UInt64(UInt64(35)) &
                        127) : (Int64(98) | 1)), ())
            }[3]);
        var_1734953686851_1080
    };

    static var var_1734953686851_1238: Int8 = Int8(117);
    public static var var_1734953686851_1250: Option<(Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, Int64, Int16, 
        Bool, Unit), (Array<Rune>, Int8, Range<UInt64>, Unit), UInt8, Range<Int32>)> = Option<(Range<Int32>, Range<Int32>, 
            Range<UInt32>, (UInt8, Int64, Int16, Bool, Unit), (Array<Rune>, Int8, Range<UInt64>, Unit), UInt8, Range<Int32>)>
        .None;
    public static const var_1734953686851_1283: UInt8 = 197;
    public static const var_1734953686851_1306: UInt64 = 42;
    public static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>,
        namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 1227
        (match (try { // block id: 1235
            var_1734953686851_1238 = var_1734953686851_1238 % ((var_1734953686851_1238) | 1)
            let var_1734953686851_1244: UInt32 = UInt32(UInt16(Int16(50)));
            ((UInt32(UInt32(42)) & 127)..=(UInt32(var_1734953686851_1244) & 127) : (var_1734953686851_1185 | 1));
            var_1734953686851_1250
        } catch (e: Exception) { // block id: 1252
            let var_1734953686851_1254: Option<Range<UInt64>> = Option<Range<UInt64>>.Some(
                ((UInt64(UInt64(16)) & 127)..(UInt64(UInt64(Int32(Int8(4)))) & 127) : (Int64(-58) | 1)));
            var_1734953686851_1254;
            if (false) {
                var_1734953686851_1250
            } else {
                var_1734953686851_1250
            }
        }) {
            case Some(num) => num
            case None => (var_1734953686851_1268, var_1734953686851_1268, ((UInt32(UInt32(177)) & 127)..(UInt32(UInt32(108)) &
                    127) : (Int64(93) | 1)), (var_1734953686851_1283, var_1734953686851_1185, Int16(-61),
                    var_1734953686851_1109, ()), ([var_1734953686851_1292, r'N', r'X', r'x', var_1734953686851_1142,
                        var_1734953686851_1142, r'V', r'C', r'C', var_1734953686851_1292], var_1734953686851_1238, ((UInt64(var_1734953686851_1306) &
                        127)..=(UInt64(UInt64(217)) & 127) : (Int64(64) | 1)), var_1734953686851_313),
                var_1734953686851_1283, ((Int32(Int32(-5)) & 127)..(Int32(Int32(27)) & 127) : (Int64(-98) | 1)))
        })[4];
        (match ((match (Option<Option<Option<Option<Bool>>>>.Some(var_1734953686851_1326)) {
            case Some(num) => num
            case None => (match (var_1734953686851_538) {
                case newVar: Option<Option<Bool>> => Option<Option<Option<Bool>>>.Some(newVar)
                case _ => Option<Option<Option<Bool>>>.None
            })
        })) {
            case Some(num) => num
            case None => Option<Option<Bool>>.Some(if (false) { // block id: 1333
                Option<Bool>.Some(false)
            } else { // block id: 1336
                if (false) {
                    r'a'
                } else {
                    r'Q'
                };
                ();
                Option<Bool>.None
            })
        })
    };

    public static var var_1734953686851_1988: UInt32 = UInt32(138);
    public static mut prop var_1734953686851_2003: Bool { // block id: 2004
        get() { // block id: 2006
            """
1oX=y
&(I_K
""";
            (match (((Int16(Int16(103)) & 127)..(Int16(Int16(52)) & 127) : (Int64(-120) | 1))) {
                case _: Enum_1734953686851_369 => true
                case _ => false
            })
        }
        set(Value) { // block id: 2012

        }
    }
    public static mut prop var_1734953686851_2044: Int32 { // block id: 2045
        get() { // block id: 2047
            (Int64(Int8(UInt8(31))), Int16(Int8(UInt8(248))));
            ();
            Int32(UInt8(UInt8(UInt8(225))))
        }
        set(Value) { // block id: 2062

        }
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Frozen
internal const func func_1734953686851_307(optionalParam_1734953686851_308!: Rune = r'8',
    namedParam_1734953686851_310!: String): Float64 { // block id: 311
    var_1734953686851_313;
    const var_1734953686851_316: Float64 = -23.0;
    var_1734953686851_316
}

@Frozen
@Deprecated
public const func func_1734953686851_298(param_1734953686851_299: Int64): Bool { // block id: 300
    const var_1734953686851_322: String = ###"eyQa{c\"}i)e"###;
    const func func_1734953686851_302(param_1734953686851_303: Float32, param_1734953686851_304: Int32): Float32 { // block id: 305
        const var_1734953686851_319: Rune = r'L';
        func_1734953686851_307(optionalParam_1734953686851_308: var_1734953686851_319,
            namedParam_1734953686851_310: var_1734953686851_322);
        var_1734953686851_325
    };

    func_1734953686851_302(var_1734953686851_325, var_1734953686851_329);
    const var_1734953686851_332: Int16 = 115;
    var_1734953686851_332;
    const var_1734953686851_335: Bool = true;
    var_1734953686851_335
}

@Frozen
@Deprecated
public const func func_1734953686851_294(param_1734953686851_295: Int64): Bool { // block id: 296
    func_1734953686851_298(-105)
}

public enum Enum_1734953686851_369 {
    defaultValue
    | enumValue_1734953686851_374(Range<UInt64>, Range<UInt16>,
        (Rune, Class_1734953686851_194, Unit, Int32, Float64, VArray<Unit, $3>, Range<UInt8>))
}

public interface Interface_1734953686851_437 <: Interface_1734953686851_197<Array<UInt64>, Bool> {
    static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 1344
        let var_1734953686851_1349: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(230), Int64(73), Int16(64), true, ());
        var var_1734953686851_1361: VArray<Bool, $7> = [false, false, true,
            (match (Option<Range<UInt64>>.Some(
            ((UInt64(UInt64(90)) & 127)..(UInt64(UInt64(184)) & 127) : (Int64(-49) | 1)))) {
            case _: Option<VArray<Unit, $3>> => true
            case _ => false
        }), (match (Int32(UInt32(84))) {
            case _: Option<VArray<Unit, $3>> => true
            case _ => false
        }), true, (match (UInt64(2)) {
            case _: Range<Int32> => true
            case _ => false
        })];
        var loopTimeVar_1734953686851_1414: Int64 = 0;
        while ((if (var_1734953686851_1349[3]) { // block id: 1357
                if (true) {
                    var_1734953686851_1361
                } else {
                    var_1734953686851_1361
                };
                true
            } else if ((match (var_1734953686851_427) {
                case Some(num) => num
                case None => var_1734953686851_169
            })) { // block id: 1383
                [(), (), (), (), (), (), (), (), (), ()];
                const var_1734953686851_1404: Int8 = 36;
                [((Int8(Int8(-2)) & 127)..=(Int8(Int8(-50)) & 127) : (var_1734953686851_1390 | 1)),
                    var_1734953686851_1394, var_1734953686851_1394,
                    ((Int8(Int8(124)) & 127)..(Int8(Int8(38)) & 127) : (Int64(-111) | 1)),
                    ((Int8(Int8(58)) & 127)..(Int8(Int8(81)) & 127) : (Int64(85) | 1)),
                    ((Int8(Int8(91)) & 127)..=(Int8(Int8(59)) & 127) : (Int64(49) | 1)), var_1734953686851_1394,
                    var_1734953686851_1394,
                    ((Int8(var_1734953686851_1404) & 127)..(Int8(Int8(13)) & 127) : (Int64(105) | 1)),
                    var_1734953686851_1394];
                true
            } else { // block id: 1410
                var_1734953686851_169
            }) && loopTimeVar_1734953686851_1414 < 100) {
            loopTimeVar_1734953686851_1414++;
        };
        Option<Option<Option<Option<Bool>>>>.None;
        var var_1734953686851_1418: (Bool, Option<Option<Bool>>, Float64, Range<UInt64>, Int64) = (false, (match (UInt8(UInt8(Int8(-110)))) {
                case newVar: Option<Bool> => Option<Option<Bool>>.Some(newVar)
                case _ => Option<Option<Bool>>.None
            }), Float64(68.0), ((UInt64(UInt64(113)) & 127)..(UInt64(UInt64(60)) & 127) : (Int64(41) | 1)), Int64(Int16(52)));
        var_1734953686851_1418[0]
    };

    static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>, namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 1431
        var var_1734953686851_1437: ((Rune, Class_1734953686851_194, Unit, Int32, Float64, VArray<Unit, $3>, Range<UInt8>), 
            VArray<Bool, $7>, Range<Int32>, UInt32, Option<Option<Bool>>, (Range<Int32>, Range<Int32>, Range<UInt32>, (UInt8, 
            Int64, Int16, Bool, Unit), (Array<Rune>, Int8, Range<UInt64>, Unit), UInt8, Range<Int32>)) = ((r'1',
                Class_1734953686851_194(), (), Int32(-60), Float64(-74.0), VArray<Unit, $3>({i => ()}), ((UInt8(UInt8(190)) &
                    127)..(UInt8(UInt8(224)) & 127) : (Int64(-3) | 1))), VArray<Bool, $7>({i => false}), ((Int32(Int32(122)) &
                127)..=(Int32(Int32(-93)) & 127) : (Int64(119) | 1)), UInt32(UInt32(202)), Option<Option<Bool>>.None, (((Int32(Int32(30)) &
                    127)..=(Int32(Int32(27)) & 127) : (Int64(41) | 1)), ((Int32(Int32(-124)) & 127)..=(Int32(Int32(Int32(-79))) &
                    127) : (Int64(UInt32(70)) | 1)), ((UInt32(UInt32(222)) & 127)..(UInt32(UInt32(85)) & 127) : (Int64(-38) |
                    1)), (UInt8(116), Int64(Int32(-125)), Int16(Int8(88)), (match (Option<Bool>.Some(false)) {
                        case _: (UInt32, Int8, UInt8) -> Option<VArray<Unit, $3>> => true
                        case _ => false
                    }), ()), ([r'Z', r'v', r'0', r'r', r'G', r'2', r'z', r'5', r'k', r'w'], Int8(-101), ((UInt64(UInt64(148)) &
                        127)..=(UInt64(UInt64(30)) & 127) : (Int64(104) | 1)), ()), UInt8(55), ((Int32(Int32(Int8(39))) &
                    127)..=(Int32(Int32(Int16(-123))) & 127) : (Int64(Int32(-28)) | 1))));
        try { // block id: 1435
            var_1734953686851_1437
        } catch (_) { // block id: 1519
            var var_1734953686851_1522: UInt32 = UInt32(Int32(Int32(UInt32(64))));
            var_1734953686851_1522 = var_1734953686851_1522 ^ (UInt32(83))
            let var_1734953686851_1530: ?Bool = (match (VArray<Unit, $3>({i => ()})) {
                case newVar: Bool => Option<Bool>.Some(newVar)
                case _ => Option<Bool>.None
            });
            Option<Option<Bool>>.Some(var_1734953686851_1530);
            var var_1734953686851_1571: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(101), Int64(Int32(75)), Int16(-25),
                false, ());
            let var_1734953686851_1602: UInt8 = UInt8(Int8(-23));
            (var_1734953686851_1538, VArray<Bool, $7>({i => true}), var_1734953686851_1268, UInt32(33), Option<Option<Bool>>
                    .None, (var_1734953686851_1268, var_1734953686851_1268, ((UInt32(UInt32(168)) & 127)..=(UInt32(UInt32(211)) &
                        127) : (Int64(112) | 1)), var_1734953686851_1571, var_1734953686851_1580, var_1734953686851_1602,
                    ((Int32(Int32(107)) & 127)..=(Int32(Int32(2)) & 127) : (Int64(-68) | 1))))
        }[2];
        const var_1734953686851_1616: UInt64 = 212;
        let var_1734953686851_1632: Int8 = Int8(Int8(18));
        var var_1734953686851_1643: Float64 = Float64(Float32(Float32(29.0)));
        (var_1734953686851_1616, Class_1734953686851_194(namedParam_1734953686851_224: {
                lambdaParameter_1734953686851_1621: UInt8, lambdaParameter_1734953686851_1622: UInt8 => var_1734953686851_1292
            }), (var_1734953686851_1390, Int16(114)), var_1734953686851_1538, Float64(126.0), ((Int8(var_1734953686851_1632) &
                127)..(Int8(var_1734953686851_1632) & 127) : (var_1734953686851_1390 | 1)), (var_1734953686851_169,
                Option<Option<Bool>>.Some(Option<Bool>.Some(false)), var_1734953686851_1643, var_1734953686851_661,
                var_1734953686851_1390))[2][0];
        let var_1734953686851_1655: (String, Array<UInt64>, Class_1734953686851_194, Range<UInt8>, String, Option<Unit>, 
            Array<Bool>) = ("""
f3u#Q
/P27|
""", [UInt64(218), UInt64(Int32(89)), UInt64(Int8(-81)), UInt64(Int8(-5)),
                UInt64(243), UInt64(UInt32(Int8(102))), UInt64(Int16(Int8(22))), UInt64(144), UInt64(132), UInt64(146)],
            Class_1734953686851_194(), ((UInt8(UInt8(46)) & 127)..(UInt8(UInt8(1)) & 127) : (Int64(-127) | 1)),
            """
p%Te+
8o=^:
""", Option<Unit>.None, [(match (Float64(-4.0)) {
                case _: (Int64) -> Bool => true
                case _ => false
            }), (match (UInt64(192)) {
                case _: (Array<Rune>, Int8, Range<UInt64>, Unit) => true
                case _ => false
            }), true, (match (UInt16(UInt16(78))) {
                case _: Rune => true
                case _ => false
            }), true, false, false, false,
                (match (((UInt8(UInt8(253)) & 127)..=(UInt8(UInt8(246)) & 127) : (Int64(-89) | 1))) {
                case _: Range<UInt16> => true
                case _ => false
            }), false]);
        (match (var_1734953686851_1655[2]) {
            case newVar: Option<Bool> => Option<Option<Bool>>.Some(newVar)
            case _ => Option<Option<Bool>>.None
        })
    }
}

public sealed interface Interface_1734953686851_436 <: Interface_1734953686851_437 & Interface_1734953686851_197<Array<UInt64>,
        Bool> {
    static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 1701
        var var_1734953686851_1819: Option<Range<UInt64>> = (match (UInt32(UInt16(UInt8(Int8(-118))))) {
            case newVar: Range<UInt64> => Option<Range<UInt64>>.Some(newVar)
            case _ => Option<Range<UInt64>>.None
        });
        try { // block id: 1703
            match ((UInt8(164), Int64(-23), Int16(94), false, ())) {
                case _ => var_1734953686851_1716 = var_1734953686851_1716 + 1
            };
            (var_1734953686851_1292, var_1734953686851_1723, (), Int32(86), var_1734953686851_1728, VArray<Unit, $3>(repeat: ()),
                ((UInt8(UInt8(33)) & 127)..=(UInt8(UInt8(42)) & 127) : (Int64(-50) | 1)))[2];
            var_1734953686851_1738[3]
        } catch (e: Exception) { // block id: 1748
            var var_1734953686851_1755: Rune = r's';
            var var_1734953686851_1767: Unit = ();
            let var_1734953686851_1785: UInt32 = UInt32(Int8(Int8(Int8(UInt8(29)))));
            let var_1734953686851_1801: Float32 = Float32(Float32(Float32(Float32(Float32(82.0)))));
            match (([r'y', var_1734953686851_1142, var_1734953686851_1755, var_1734953686851_1142, r'K', r'v', r'z',
                    r'n', r'5', r'a'], Int8(45), var_1734953686851_661, var_1734953686851_1767)) {
                case _ => false

                case caseVar_1734953686851_1775 =>
                    var_1734953686851_1779 = var_1734953686851_1779 && (true)
                    UInt32(3) & var_1734953686851_1785;
                    Float32(84.0) != Float32(80.0)

                case _ =>
                    var_1734953686851_1767;
                    ();
                    var_1734953686851_1801 != Float32(-59.0)
            }
        } finally { // block id: 1808
            var var_1734953686851_1815: Option<Option<Range<UInt64>>> = (match (Option<Option<Range<UInt64>>>.None) {
                case newVar: Option<Range<UInt64>> => Option<Option<Range<UInt64>>>.Some(newVar)
                case _ => Option<Option<Range<UInt64>>>.None
            });
            (match (var_1734953686851_1815) {
                case Some(num) => num
                case None => var_1734953686851_1819
            });
            var_1734953686851_1779
        };
        var_1734953686851_169
    };

    static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>, namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 1828
        const var_1734953686851_1845: UInt8 = 97;
        let var_1734953686851_1857: UInt64 = UInt64(23);
        try { // block id: 1830
            (var_1734953686851_1292, var_1734953686851_1723, var_1734953686851_313, Int32(79), Float64(-92.0), VArray<Unit, $3>({
                        i => ()
                    }), ((UInt8(var_1734953686851_1716) & 127)..(UInt8(var_1734953686851_1845) & 127) : (var_1734953686851_1390 |
                    1)))[2];
            (match (Option<Range<UInt64>>.Some(
                ((UInt64(var_1734953686851_1857) & 127)..=(UInt64(UInt64(162)) & 127) : (Int64(-1) | 1)))) {
                case Some(num) => num
                case None => ((UInt64(UInt64(21)) & 127)..=(UInt64(UInt64(140)) & 127) : (Int64(-42) | 1))
            });
            Option<Option<Bool>>.None
        } finally { // block id: 1863
            var var_1734953686851_1866: UInt32 = UInt32(229);
            var_1734953686851_1866 * var_1734953686851_1866;
            (var_1734953686851_169, Option<Option<Bool>>.None, Float64(-55.0), ((UInt64(UInt64(56)) & 127)..(UInt64(UInt64(123)) &
                    127) : (var_1734953686851_1390 | 1)), var_1734953686851_1390)[1]
        }
    }
}

public interface Interface_1734953686851_435 <: Interface_1734953686851_436 {
    static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 2067
        var loopTimeVar_1734953686851_2105: Int64 = 0;
        while (((UInt32(121) - UInt32(231)) != UInt32(Int32(11))) && loopTimeVar_1734953686851_2105 < 100) {
            loopTimeVar_1734953686851_2105++;
            ();
            var var_1734953686851_2081: Unit = ();
            var loopTimeVar_1734953686851_2083: Array<UInt64> = [UInt64(63), UInt64(46), UInt64(167),
                UInt64(UInt16(146)), UInt64(Int64(90)), UInt64(UInt8(UInt8(Int8(-103)))), UInt64(216), UInt64(Int8(-68)),
                UInt64(UInt8(54)), UInt64(Int16(UInt8(36)))];
            let iter2077 = loopTimeVar_1734953686851_2083.iterator()
            while (true) {
                match (iter2077.next()) {
                    case None => break
                    case Some(v) => match (v) {
                        case i where (false) => var_1734953686851_2081
                        case _ => continue
                    }
                }
            }
        };
        var var_1734953686851_2118: ??Float64 = (match (UInt64(198)) {
            case newVar: Option<Float64> => Option<Option<Float64>>.Some(newVar)
            case _ => Option<Option<Float64>>.None
        });
        let var_1734953686851_2123: Float64 = Float64(-30.0);
        var var_1734953686851_2129: UInt8 = UInt8(246);
        var var_1734953686851_2148: Int64 = Int64(-1);
        match ((match ((match (var_1734953686851_2118) {
            case Some(num) => num
            case None => Option<Float64>.Some(var_1734953686851_2123)
        })) {
            case Some(num) => num
            case None => try { // block id: 2126
                var_1734953686851_2129 + var_1734953686851_2129;
                var_1734953686851_2123
            } catch (_) { // block id: 2133
                var_1734953686851_2135
            }
        })) {
            case _: Unit =>
                false;
                var_1734953686851_169

            case _ => var_1734953686851_1390 > var_1734953686851_2148
        }
    };

    static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>, namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 2151
        try { // block id: 2153
            var_1734953686851_427
        } finally { // block id: 2155
            if (var_1734953686851_1779) { // block id: 2158
                ();
                Option<Bool>.Some(var_1734953686851_1779)
            } else { // block id: 2162
                var_1734953686851_313;
                if (var_1734953686851_169) {
                    Option<Bool>.Some(false)
                } else {
                    Option<Bool>.None
                }
            }
        };
        const var_1734953686851_2173: Int8 = 86;
        try (resource = Class_1734953686851_194()) { // block id: 2170

        } finally { // block id: 2171
            var_1734953686851_2173;
            ()
        };
        (match (try { // block id: 2178
            VArray<Bool, $7>({i => false});
            var_1734953686851_1326
        } finally { // block id: 2188
            var_1734953686851_1326
        }) {
            case Some(num) => num
            case None => Option<Option<Bool>>.Some(var_1734953686851_2192)
        })
    }
}

@Deprecated
public open class Class_1734953686851_432 <: Class_1734953686851_194 & Interface_1734953686851_435 {
    public init() { // block id: 434

    }

    static var var_1734953686851_1942: UInt32 = UInt32(144);
    public static func func_1734953686851_498(namedParam_1734953686851_499!: Array<Rune>,
        namedParam_1734953686851_500!: Array<Unit>, namedParam_1734953686851_501!: Unit): Bool { // block id: 1881
        let var_1734953686851_1924: Option<Unit> = Option<Unit>.None;
        try { // block id: 1883
            let var_1734953686851_1895: Array<Rune> = [r'V', r'3', r'N', r'I', r'i', r'F', r'x', r'N', r'X', r'p'];
            (Int32(77), Option<Bool>.Some(var_1734953686851_169), var_1734953686851_1891, (var_1734953686851_1895, Int8(102),
                    ((UInt64(UInt64(26)) & 127)..=(UInt64(UInt64(167)) & 127) : (var_1734953686851_1390 | 1)), ()),
                Float32(16.0))[4];
            (match (((Int32(Int32(34)) & 127)..=(Int32(Int32(52)) & 127) : (Int64(-58) | 1))) {
                case newVar: Option<Option<Option<Bool>>> => Option<Option<Option<Option<Bool>>>>.Some(newVar)
                case _ => Option<Option<Option<Option<Bool>>>>.None
            })
        } finally { // block id: 1920
            var_1734953686851_313;
            (match (var_1734953686851_1924) {
                case newVar: Option<Option<Option<Bool>>> => Option<Option<Option<Option<Bool>>>>.Some(newVar)
                case _ => Option<Option<Option<Option<Bool>>>>.None
            })
        };
        const var_1734953686851_1975: UInt16 = 55;
        try { // block id: 1927
            try (resource = Class_1734953686851_194()) { // block id: 1929
                let var_1734953686851_1933: Array<UInt64> = [UInt64(244), UInt64(143), UInt64(218), UInt64(68),
                    UInt64(70), UInt64(8), UInt64(27), UInt64(195), UInt64(195), UInt64(148)];
                if (var_1734953686851_1779) {
                    var_1734953686851_1933
                } else {
                    var_1734953686851_1933
                };
                ()
            } catch (_) { // block id: 1937
                Int8(8);
                [true, false, false, false, false, false, true, true, false, true];
                var_1734953686851_1942 = var_1734953686851_1942 / ((var_1734953686851_1942) | 1)
            };
            Option<Range<UInt64>>.Some(((UInt64(UInt64(160)) & 127)..(UInt64(UInt64(6)) & 127) : (Int64(-72) | 1)))
        } finally { // block id: 1947
            match ([true, false, true, var_1734953686851_1779, var_1734953686851_1779, false, var_1734953686851_1109,
                false, false, false]) {
                case _ =>
                    var_1734953686851_1080 &&= false
                    ()

                case _ =>
                    var_1734953686851_313;
                    var_1734953686851_313
            };
            (match (((UInt16(var_1734953686851_1975) & 127)..(UInt16(UInt16(179)) & 127) : (var_1734953686851_1390 | 1))) {
                case newVar: Range<UInt64> => Option<Range<UInt64>>.Some(newVar)
                case _ => Option<Range<UInt64>>.None
            })
        };
        var_1734953686851_1109
    };

    public static func func_1734953686851_498(namedParam_1734953686851_772!: Option<Bool>,
        namedParam_1734953686851_773!: Int16): Option<Option<Bool>> { // block id: 1981
        match (Option<Option<Option<Option<Bool>>>>.Some(try { // block id: 1985
            var_1734953686851_1988 = var_1734953686851_1988 ^ (UInt32(134))
            var_1734953686851_1326
        } catch (_) { // block id: 1992
            var_1734953686851_1326
        })) {
            case caseVar_1734953686851_1996: Int16 =>
                Int32(125) * Int32(-47);
                var_1734953686851_2003 &&= false
                var_1734953686851_1268

            case _ =>
                Float32(3.0);
                if (var_1734953686851_1779) {
                    ((Int32(Int32(-75)) & 127)..=(Int32(Int32(-89)) & 127) : (Int64(-117) | 1))
                } else {
                    var_1734953686851_1268
                }

            case _: Array<UInt64> =>
                var_1734953686851_1580;
                var_1734953686851_313;
                const var_1734953686851_2033: Int32 = -2;
                if (var_1734953686851_1779) {
                    ((Int32(Int32(10)) & 127)..=(Int32(var_1734953686851_2033) & 127) : (Int64(-42) | 1))
                } else {
                    ((Int32(Int32(125)) & 127)..=(Int32(Int32(72)) & 127) : (Int64(43) | 1))
                }

            case _ =>
                Option<VArray<Unit, $3>>.None;
                var_1734953686851_313;
                ((Int32(var_1734953686851_2044) & 127)..=(Int32(var_1734953686851_2044) & 127) : (Int64(-34) | 1))
        };
        Option<Option<Bool>>.None
    }

    static init() {
    }
}

@Frozen
public func func_1734953686851_158(param_1734953686851_159: Range<UInt32>): Unit { // block id: 160
    let var_1734953686851_178: VArray<Unit, $3> = VArray<Unit, $3>({i => ()});
    var var_1734953686851_211: Unit = ();
    try { // block id: 162
        if (true) { // block id: 165
            ();
            var var_1734953686851_175: Unit = ();
            if (var_1734953686851_169) {
                VArray<Unit, $3>(repeat: ())
            } else {
                var_1734953686851_178
            }
        } else { // block id: 183
            ();
            ();
            var var_1734953686851_189: Unit = ();
            VArray<Unit, $3>({i => ()})
        }
    } finally { // block id: 192
        Class_1734953686851_194.var_1734953686851_200;
        (match (Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({i => ()}))) {
            case Some(num) => num
            case None => var_1734953686851_178
        })
    };
    [r't', r'9', r'f', r't', r'v', r'1', r'3', r'I', r'k', r'2'];
    var var_1734953686851_219: (Rune, Class_1734953686851_194, Unit, Int32, Float64, VArray<Unit, $3>, Range<UInt8>) = (r'w',
        Class_1734953686851_194(namedParam_1734953686851_224: {
            lambdaParameter_1734953686851_884: UInt8, lambdaParameter_1734953686851_885: UInt8 => r'm'
        }), (), Int32(UInt16(199)), Float64(Float64(51.0)), VArray<Unit, $3>({i => ()}), ((UInt8(UInt8(194)) & 127)..(UInt8(UInt8(103)) &
            127) : (Int64(-120) | 1)));
    var_1734953686851_219[2]
    return
}

@Frozen
public func func_1734953686851_38(param_1734953686851_39: UInt32,
    optionalParam_1734953686851_40!: Int8 = Int8(Int8(-57)), namedParam_1734953686851_43!: UInt8): Option<VArray<Unit, $3>> { // block id: 44
    let var_1734953686851_104: UInt64 = UInt64(UInt64(Int32(UInt32(UInt16(186)))));
    let var_1734953686851_116: Int64 = Int64(-23);
    try { // block id: 46
        let var_1734953686851_50: (UInt8, Int64, Int16, Bool, Unit) = (UInt8(UInt8(82)), Int64(UInt8(UInt8(Int8(-98)))),
            Int16(UInt16(Int8(-71))), true, ());
        var_1734953686851_50[4];
        const var_1734953686851_71: Int16 = -95;
        var_1734953686851_66 = var_1734953686851_66 & (var_1734953686851_71)
        var_1734953686851_80.var_1734953686851_83
    } finally { // block id: 93
        match (Option<VArray<Unit, $3>>.None) {
            case caseVar_1734953686851_98: Unit =>
                ();
                UInt64(84) / ((var_1734953686851_104) | 1);
                if (var_1734953686851_112) {
                    ((Int64(var_1734953686851_116) & 127)..=(Int64(var_1734953686851_116) & 127) : (Int64(125) | 1))
                } else {
                    ((Int64(Int64(-48)) & 127)..=(Int64(Int64(22)) & 127) : (var_1734953686851_116 | 1))
                }

            case _ =>
                ();
                ((Int64(Int64(-29)) & 127)..(Int64(Int64(-122)) & 127) : (var_1734953686851_116 | 1))

            case caseVar_1734953686851_134 => ((Int64(Int64(114)) & 127)..=(Int64(Int64(52)) & 127) : (Int64(114) | 1))

            case caseVar_1734953686851_139 =>
                true;
                var var_1734953686851_143: Range<Int64> = ((Int64(Int64(UInt64(118))) & 127)..=(Int64(Int64(47)) & 127) : (Int64(Int64(-60)) |
                    1));
                var_1734953686851_143

            case _ => ((Int64(Int64(-126)) & 127)..(Int64(Int64(-109)) & 127) : (Int64(67) | 1))
        };
        const var_1734953686851_919: UInt32 = 171;
        let var_1734953686851_936: Option<Range<UInt64>> = (match (Class_1734953686851_432()) {
            case newVar: Range<UInt64> => Option<Range<UInt64>>.Some(newVar)
            case _ => Option<Range<UInt64>>.None
        });
        const var_1734953686851_958: Unit = ();
        func func_1734953686851_155(): Option<VArray<Unit, $3>> { // block id: 156
            let var_1734953686851_910: String = """
]$wmY
SNy.<
""";
            func_1734953686851_158(try { // block id: 900
                let var_1734953686851_902: Unit = ();
                var_1734953686851_902;
                false;
                ((UInt32(UInt32(112)) & 127)..(UInt32(UInt32(21)) & 127) : (Int64(-106) | 1))
            } catch (_) { // block id: 906
                if (false) {
                    var_1734953686851_910
                } else {
                    var_1734953686851_910
                };
                if (var_1734953686851_169) {
                    ((UInt32(UInt32(171)) & 127)..=(UInt32(UInt32(59)) & 127) : (Int64(14) | 1))
                } else {
                    ((UInt32(UInt32(231)) & 127)..(UInt32(var_1734953686851_919) & 127) : (var_1734953686851_116 | 1))
                }
            } finally { // block id: 922
                ((UInt32(UInt32(123)) & 127)..=(UInt32(var_1734953686851_919) & 127) : (Int64(-16) | 1))
            });
            let var_1734953686851_946: ?Option<VArray<Unit, $3>> = Option<Option<VArray<Unit, $3>>>.Some(
                (match (Int64(Int8(-121))) {
                    case newVar: VArray<Unit, $3> => Option<VArray<Unit, $3>>.Some(newVar)
                    case _ => Option<VArray<Unit, $3>>.None
                }));
            try { // block id: 928
                Class_1734953686851_432();
                (match (var_1734953686851_936) {
                    case Some(num) => num
                    case None => ((UInt64(UInt64(3)) & 127)..=(UInt64(UInt64(179)) & 127) : (Int64(-46) | 1))
                });
                var_1734953686851_946.getOrThrow()
            } catch (_) { // block id: 951
                try { // block id: 953
                    Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({i => ()}))
                } finally { // block id: 961
                    ();
                    ();
                    var_1734953686851_965
                }
            } finally { // block id: 967
                var_1734953686851_969;
                var_1734953686851_972
            }
        };

        func_1734953686851_155()
    }
}

main(): Int64 {
    try {
        func_1734953686851_8();
        let var_1734953686851_975: UInt32 = UInt32(217);
        (match (func_1734953686851_38(var_1734953686851_975, namedParam_1734953686851_43: var_1734953686851_978)) {
            case Some(num) => num
            case None => var_1734953686851_981
        })[0];
        (match ([Option<Int64>.Some(var_1734953686851_997), var_1734953686851_1000, var_1734953686851_1000,
            Option<Int64>.Some(Int64(50)), Option<Int64>.None, Option<Int64>.Some(var_1734953686851_997),
            Option<Int64>.None, Option<Int64>.Some(var_1734953686851_1057), Option<Int64>.None,
            Option<Int64>.Some(Int64(75))][0]) {
            case Some(num) => num
            case None => Int64(12)
        })
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1734953686851_975 * var_1734953686851_975), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend UInt8 {
    operator func ()(x: UInt8): UInt8 {
        return this - x
    }
}

extend Class_1734953686851_194 {}
