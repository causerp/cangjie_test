/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1690767693033_76 : Unit = ()
public let var_1690767693033_83 : (Option<Int64>, Int64, UInt64) = (Option<Int64>.None, Int64(UInt16(105)), UInt64(Int16(Int8(UInt8(24)))))
public var var_1690767693033_133 : Int16 = Int16(-95)
public let var_1690767693033_173 : Bool = ((Class_1690767693033_34() is Interface_1690767693033_39) is Range<UInt16>)
public let var_1690767693033_214 : Array<Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>> = [Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, (Int16(115) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), ((((UInt64(UInt64(43))&127)..=(UInt64(UInt64(230))&127):(61|1)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), (((UInt32(UInt32(148))&127)..=(UInt32(UInt32(Int32(-100)))&127):(123|1)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, (###"xbDu^\"/I\"e"### as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, (Class_1690767693033_34() as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), (UInt32(UInt32(165)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None]
public var var_1690767693033_297 : Range<UInt32> = ((UInt32(UInt32(152))&127)..=(UInt32(UInt32(142))&127):(102|1))
public let var_1690767693033_302 : Array<Enum_1690767693033_288> = [Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue]
public let var_1690767693033_370 : Option<(Unit, Bool, Float32)> = Option<(Unit, Bool, Float32)>.None
public let var_1690767693033_373 : (Unit, Bool, Float32) = ((), true, Float32(100.0))
public var var_1690767693033_394 : UInt64 = UInt64(85)
public let var_1690767693033_403 : Rune = r'8'
public let var_1690767693033_409 : UInt32 = UInt32(Int16(10))
public var var_1690767693033_429 : Int64 = Int64(UInt16(23))
public let var_1690767693033_459 : String = """
A,a{m5
w.W\\b
"""
public let var_1690767693033_465 : UInt16 = UInt16(Int16(UInt8(UInt8(4))))
public let var_1690767693033_471 : Unit = ()
var var_1690767693033_484 : Bool = false
public var var_1690767693033_600 : Interface_1690767693033_37 = Class_1690767693033_34()
public let var_1690767693033_611 : UInt8 = UInt8(20)
public let var_1690767693033_637 : ?(Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (((Int32(Int32(-48))&127)..=(Int32(Int32(Int8(UInt8(244))))&127):(Int64(UInt32(32))|1)) as (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)))
public let var_1690767693033_678 : UInt32 = UInt32(Int16(115))
public let var_1690767693033_692 : (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) = (UInt16(236), ((Int8(Int8(13))&127)..(Int8(Int8(-118))&127):((-42)|1)), Class_1690767693033_34(), ((Int8(Int8(108))&127)..=(Int8(Int8(60))&127):(66|1)))
public let var_1690767693033_710 : Range<UInt64> = ((UInt64(UInt64(43))&127)..(UInt64(UInt64(79))&127):(70|1))
let var_1690767693033_728 : Array<Option<(Unit, Bool, Float32)>> = [Option<(Unit, Bool, Float32)>.None, ([UInt64(138), UInt64(38), UInt64(254), UInt64(235), UInt64(75), UInt64(166), UInt64(195), UInt64(154), UInt64(163), UInt64(32)] as (Unit, Bool, Float32)), ((Struct_1690767693033_240() as UInt8) as (Unit, Bool, Float32)), Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.None, (((UInt8(UInt8(242))&127)..=(UInt8(UInt8(121))&127):((-71)|1)) as (Unit, Bool, Float32))]
public var var_1690767693033_749 : Float32 = Float32(Float32(Float32(Float32(Float32(-122.0)))))
public let var_1690767693033_767 : Option<Unit> = Option<Unit>.None
var var_1690767693033_861 : Int32 = Int32(Int32(UInt16(91)))
public let var_1690767693033_1066 : Array<UInt64> = [UInt64(136), UInt64(241), UInt64(220), UInt64(57), UInt64(98), UInt64(133), UInt64(238), UInt64(111), UInt64(135), UInt64(224)]
let var_1690767693033_1075 : ?(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) = ((Class_1690767693033_34() as (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64))) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>))
public var var_1690767693033_1094 : Float64 = Float64(17.0)
public var var_1690767693033_1104 : UInt8 = UInt8(13)
var var_1690767693033_1116 : Option<Class_1690767693033_34> = (Struct_1690767693033_240() as Class_1690767693033_34)
public var var_1690767693033_1170 : Int8 = Int8(-87)
public var var_1690767693033_1200 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1690767693033_1347 : Bool = true
public let var_1690767693033_1356 : ?Bool = (94.0 as Bool)
public var var_1690767693033_1447 : UInt16 = UInt16(Int8(UInt8(11)))
public var var_1690767693033_1588 : Range<UInt32> = ((UInt32(UInt32(Int16(-2)))&127)..=(UInt32(UInt32(103))&127):(Int64(UInt16(UInt8(Int8(-123))))|1))
public open class Class_1690767693033_7 {
    init() { // block id: 9

    }
;
    public init(param_1690767693033_56 : Interface_1690767693033_40, optionalParam_1690767693033_57 ! : Interface_1690767693033_40 = Class_1690767693033_34(), optionalParam_1690767693033_59 ! : Int8 = Int8(100)) { // block id: 61
        (var_1690767693033_728[9] ?? ((), false, var_1690767693033_749))|>func_1690767693033_63;
        (if ([false, true, false, false, true, true, true, true, false, false][2]) { (var_1690767693033_767 as Unit) } else { (var_1690767693033_373 as Unit) }  ?? try { // block id: 772
            ()
        } catch (e: Exception) { // block id: 774
            var var_1690767693033_777 : UInt8 = UInt8(193);
            var_1690767693033_777 |= UInt8(214)
        })
    }
;
    protected mut prop var_1690767693033_813 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) { // block id: 814
        get() { // block id: 816
            ((Int64((-58))&127)..(Int64((-38))&127):(47|1));
            ([Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue] as Interface_1690767693033_38);
            (true, Int32(UInt8(UInt8(6))), ((UInt64(UInt64(Int32(99)))&127)..(UInt64(UInt64(UInt32(227)))&127):(Int64(62)|1)), (), (Option<Int64>.None, (-116), UInt64(Int8(-100))));
            var_1690767693033_1615
        }

        set(Value) { // block id: 853
            ();
            ();
            var_1690767693033_1615 = Value
        }

    };
    public open func func_1690767693033_25(namedParam_1690767693033_786 ! : Array<Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>>) : Unit { // block id: 787
        [(), (), (), (), (), (), (), (), (), ()][7];
        try { // block id: 794
            ();
            var var_1690767693033_803 : Option<Int64> = Option<Int64>.Some(Int64(Int32(UInt32(UInt8(59)))));
            (var_1690767693033_173, Int32(-20), ((UInt64(UInt64(56))&127)..(UInt64(UInt64(218))&127):(120|1)), (), (var_1690767693033_803, 121, UInt64(224)))
        } catch (_) { // block id: 811
            var_1690767693033_813
        } finally { // block id: 856
            ((UInt8(UInt8(129))&127)..=(UInt8(UInt8(194))&127):(0|1));
            (false, var_1690767693033_861, ((UInt64(UInt64(121))&127)..(UInt64(UInt64(66))&127):(12|1)), var_1690767693033_471, (Option<Int64>.Some(27), 42, UInt64(101)))
        }[3]
    }
;
    public static var var_1690767693033_1365 : Option<Option<Bool>> = Option<Option<Bool>>.None;
    protected open func func_1690767693033_29() : Bool { // block id: 30
        func_1690767693033_43<Int64>(namedParam_1690767693033_44 : var_1690767693033_861, namedParam_1690767693033_49 : var_1690767693033_1170).func_1690767693033_1173(var_1690767693033_728, Int16(95))[0];
        (if (if (true) { // block id: 1342
            var_1690767693033_1170 |= var_1690767693033_1170;
            var_1690767693033_1347
        } else { // block id: 1349
            true
        }) { (if (var_1690767693033_1347) { Option<Bool>.Some(false) } else { var_1690767693033_1356 } ) } else { (var_1690767693033_1365 ?? Option<Bool>.None) }  ?? true)
    }
;
    private static let var_1690767693033_1384 : (Range<UInt8>, Range<UInt16>, (Unit, Bool, Float32), (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34), Unit, Int64, Array<UInt8>, UInt32) = (((UInt8(UInt8(119))&127)..(UInt8(UInt8(140))&127):((-14)|1)), ((UInt16(UInt16(54))&127)..=(UInt16(UInt16(163))&127):(75|1)), ((), true, Float32(122.0)), ([(), (), (), (), (), (), (), (), (), ()], UInt64(67), ((UInt8(UInt8(241))&127)..(UInt8(UInt8(236))&127):((-20)|1)), r'w', Class_1690767693033_34()), (), 77, [UInt8(35), UInt8(150), UInt8(45), UInt8(217), UInt8(152), UInt8(104), UInt8(39), UInt8(44), UInt8(120), UInt8(197)], UInt32(197));
    prop var_1690767693033_1420 : Array<UInt16> { // block id: 1421
        get() { // block id: 1423
            ();
            [UInt16(UInt8(81)), UInt16(180), UInt16(209), UInt16(21), UInt16(9), UInt16(31), UInt16(UInt16(UInt16(42))), UInt16(UInt8(8)), UInt16(UInt8(5)), UInt16(251)]
        }

    };
    private var var_1690767693033_1525 : Unit = ();
    protected var var_1690767693033_1535 : Bool = true;
    public open func func_1690767693033_25() : Float64 { // block id: 26
        match (func_1690767693033_29()) {
            case true | false | true | true => 
                var_1690767693033_1104;
                ();
                ()
            
            case false | false | true => 
                ()
            
            case false | true | false | true => 
                ();
                var_1690767693033_1384;
                var_1690767693033_76
            
            case _ => 
                if (var_1690767693033_173) { [UInt16(189), var_1690767693033_465, var_1690767693033_465, UInt16(72), var_1690767693033_465, var_1690767693033_465, UInt16(25), var_1690767693033_465, UInt16(213), UInt16(29)] } else { var_1690767693033_1420 } ;
                UInt16(209);
                var_1690767693033_471
            
            case _ => 
                var_1690767693033_1447 += UInt16(20);
                var_1690767693033_471;
                var_1690767693033_471
            
        };
        let var_1690767693033_1460 : ?Array<Option<(Unit, Bool, Float32)>> = Option<Array<Option<(Unit, Bool, Float32)>>>.Some([(((Int8(Int8(-79))&127)..=(Int8(Int8(-79))&127):(2|1)) as (Unit, Bool, Float32)), Option<(Unit, Bool, Float32)>.Some(((), true, Float32(-93.0))), (Class_1690767693033_34() as (Unit, Bool, Float32)), Option<(Unit, Bool, Float32)>.Some(((), true, Float32(33.0))), (([true, false, false, true, true, true, false, true, false, false] as UInt8) as (Unit, Bool, Float32)), Option<(Unit, Bool, Float32)>.None, ((Class_1690767693033_34() as Option<Bool>) as (Unit, Bool, Float32)), Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.Some(((), false, Float32(52.0))), Option<(Unit, Bool, Float32)>.Some(((), false, Float32(-16.0)))]);
        (var_1690767693033_1460 ?? try { // block id: 1506
            var_1690767693033_76;
            var_1690767693033_1170 = Int8(68);
            [Option<(Unit, Bool, Float32)>.None, Option<(Unit, Bool, Float32)>.Some(((), var_1690767693033_173, var_1690767693033_749)), Option<(Unit, Bool, Float32)>.None, var_1690767693033_370, Option<(Unit, Bool, Float32)>.Some(var_1690767693033_373), Option<(Unit, Bool, Float32)>.Some((var_1690767693033_1525, var_1690767693033_484, Float32(-58.0))), var_1690767693033_370, var_1690767693033_370, Option<(Unit, Bool, Float32)>.Some((var_1690767693033_1525, var_1690767693033_1535, Float32(121.0))), var_1690767693033_370]
        } catch (_) { // block id: 1539
            [var_1690767693033_370, var_1690767693033_370, Option<(Unit, Bool, Float32)>.Some((var_1690767693033_471, true, Float32(84.0))), var_1690767693033_370, var_1690767693033_370, Option<(Unit, Bool, Float32)>.Some(((), var_1690767693033_1535, var_1690767693033_749)), Option<(Unit, Bool, Float32)>.None, var_1690767693033_370, var_1690767693033_370, var_1690767693033_370]
        });
        (-111.0)
    }
;
    var var_1690767693033_1615 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (true, Int32(-29), ((UInt64(UInt64(100))&127)..=(UInt64(UInt64(64))&127):((-114)|1)), (), (Option<Int64>.None, (-26), UInt64(167)))
}

public func func_1690767693033_11(optionalParam_1690767693033_12 ! : Rune = r'x', namedParam_1690767693033_14 ! : UInt32, optionalParam_1690767693033_15 ! : UInt32 = UInt32(168), optionalParam_1690767693033_17 ! : Float64 = Float64((-17.0))) : Class_1690767693033_7 { // block id: 20
    Class_1690767693033_7()
}

public interface Interface_1690767693033_40 {

}

public interface Interface_1690767693033_39 <: Interface_1690767693033_40 {

}

public interface Interface_1690767693033_41<T0> <: Interface_1690767693033_39 & Interface_1690767693033_40 {
    func func_1690767693033_1173(param_1690767693033_1174 : Array<Option<(Unit, Bool, Float32)>>, param_1690767693033_1175 : Int16) : (Unit, Bool, Float32) { // block id: 1176
        try { // block id: 1178
            if (false) { // block id: 1181
                var_1690767693033_133 >>= ((var_1690767693033_133) & 7);
                var_1690767693033_1104 |= UInt8(216)
            } else if (var_1690767693033_173) { // block id: 1189
                var_1690767693033_394 += var_1690767693033_394
            };
            Option<Array<Unit>>.Some(var_1690767693033_1200).getOrThrow()
        } finally { // block id: 1212
            (Option<Unit>.None ?? var_1690767693033_76);
            if (true) { [var_1690767693033_471, (), (), var_1690767693033_76, (), var_1690767693033_76, (), (), (), var_1690767693033_76] } else { [(), (), (), (), (), (), (), (), (), ()] } 
        };
        var var_1690767693033_1236 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (((-2) is (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34)), Int32(46), ((UInt64(UInt64(UInt16(201)))&127)..(UInt64(UInt64(165))&127):((-24)|1)), (), (Option<Int64>.None, Int64(UInt64((-51))), UInt64(15)));
        var var_1690767693033_1271 : UInt64 = UInt64(UInt16(UInt16(100)));
        var var_1690767693033_1315 : Interface_1690767693033_40 = Class_1690767693033_34();
        try { // block id: 1231
            if (false) { // block id: 1234
                var_1690767693033_1236;
                let var_1690767693033_1277 : UInt64 = UInt64(Int8(UInt8(UInt8(48))));
                if (false) { [var_1690767693033_394, var_1690767693033_394, UInt64(244), UInt64(246), var_1690767693033_394, UInt64(104), var_1690767693033_394, UInt64(198), var_1690767693033_394, UInt64(15)] } else { [var_1690767693033_394, UInt64(124), var_1690767693033_1271, var_1690767693033_394, var_1690767693033_1277, UInt64(218), var_1690767693033_394, var_1690767693033_1271, var_1690767693033_1277, var_1690767693033_1271] } 
            } else { // block id: 1287
                UInt64(232);
                var_1690767693033_861 += var_1690767693033_861;
                [UInt64(222), UInt64(28), UInt64(28), UInt64(135), UInt64(181), var_1690767693033_1271, var_1690767693033_394, UInt64(176), var_1690767693033_394, var_1690767693033_394]
            };
            [UInt16(31), UInt16(55), UInt16(247), UInt16(146), UInt16(186), UInt16(247), UInt16(60), UInt16(90), UInt16(209), UInt16(129)][2]
        } catch (_) { // block id: 1307
            (Option<Interface_1690767693033_40>.None ?? var_1690767693033_1315);
            let var_1690767693033_1321 : UInt16 = UInt16(25);
            var_1690767693033_1321
        };
        ((Option<Option<(Unit, Bool, Float32)>>.None ?? var_1690767693033_370) ?? ((), true, Float32(-58.0)))
    }

}

public interface Interface_1690767693033_38 <: Interface_1690767693033_39 & Interface_1690767693033_41<Float64> {
    func func_1690767693033_1173(param_1690767693033_1174 : Array<Option<(Unit, Bool, Float32)>>, param_1690767693033_1175 : Int16) : (Unit, Bool, Float32) { // block id: 1176
        try { // block id: 1178
            if (false) { // block id: 1181
                var_1690767693033_133 >>= ((var_1690767693033_133) & 7);
                var_1690767693033_1104 |= UInt8(216)
            } else if (var_1690767693033_173) { // block id: 1189
                var_1690767693033_394 += var_1690767693033_394
            };
            Option<Array<Unit>>.Some(var_1690767693033_1200).getOrThrow()
        } finally { // block id: 1212
            (Option<Unit>.None ?? var_1690767693033_76);
            if (true) { [var_1690767693033_471, (), (), var_1690767693033_76, (), var_1690767693033_76, (), (), (), var_1690767693033_76] } else { [(), (), (), (), (), (), (), (), (), ()] } 
        };
        var var_1690767693033_1236 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (((-2) is (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34)), Int32(46), ((UInt64(UInt64(UInt16(201)))&127)..(UInt64(UInt64(165))&127):((-24)|1)), (), (Option<Int64>.None, Int64(UInt64((-51))), UInt64(15)));
        var var_1690767693033_1271 : UInt64 = UInt64(UInt16(UInt16(100)));
        var var_1690767693033_1315 : Interface_1690767693033_40 = Class_1690767693033_34();
        try { // block id: 1231
            if (false) { // block id: 1234
                var_1690767693033_1236;
                let var_1690767693033_1277 : UInt64 = UInt64(Int8(UInt8(UInt8(48))));
                if (false) { [var_1690767693033_394, var_1690767693033_394, UInt64(244), UInt64(246), var_1690767693033_394, UInt64(104), var_1690767693033_394, UInt64(198), var_1690767693033_394, UInt64(15)] } else { [var_1690767693033_394, UInt64(124), var_1690767693033_1271, var_1690767693033_394, var_1690767693033_1277, UInt64(218), var_1690767693033_394, var_1690767693033_1271, var_1690767693033_1277, var_1690767693033_1271] } 
            } else { // block id: 1287
                UInt64(232);
                var_1690767693033_861 += var_1690767693033_861;
                [UInt64(222), UInt64(28), UInt64(28), UInt64(135), UInt64(181), var_1690767693033_1271, var_1690767693033_394, UInt64(176), var_1690767693033_394, var_1690767693033_394]
            };
            [UInt16(31), UInt16(55), UInt16(247), UInt16(146), UInt16(186), UInt16(247), UInt16(60), UInt16(90), UInt16(209), UInt16(129)][2]
        } catch (_) { // block id: 1307
            (Option<Interface_1690767693033_40>.None ?? var_1690767693033_1315);
            let var_1690767693033_1321 : UInt16 = UInt16(25);
            var_1690767693033_1321
        };
        ((Option<Option<(Unit, Bool, Float32)>>.None ?? var_1690767693033_370) ?? ((), true, Float32(-58.0)))
    }

}

public interface Interface_1690767693033_37 <: Interface_1690767693033_38 {
    func func_1690767693033_1173(param_1690767693033_1174 : Array<Option<(Unit, Bool, Float32)>>, param_1690767693033_1175 : Int16) : (Unit, Bool, Float32) { // block id: 1176
        try { // block id: 1178
            if (false) { // block id: 1181
                var_1690767693033_133 >>= ((var_1690767693033_133) & 7);
                var_1690767693033_1104 |= UInt8(216)
            } else if (var_1690767693033_173) { // block id: 1189
                var_1690767693033_394 += var_1690767693033_394
            };
            Option<Array<Unit>>.Some(var_1690767693033_1200).getOrThrow()
        } finally { // block id: 1212
            (Option<Unit>.None ?? var_1690767693033_76);
            if (true) { [var_1690767693033_471, (), (), var_1690767693033_76, (), var_1690767693033_76, (), (), (), var_1690767693033_76] } else { [(), (), (), (), (), (), (), (), (), ()] } 
        };
        var var_1690767693033_1236 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (((-2) is (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34)), Int32(46), ((UInt64(UInt64(UInt16(201)))&127)..(UInt64(UInt64(165))&127):((-24)|1)), (), (Option<Int64>.None, Int64(UInt64((-51))), UInt64(15)));
        var var_1690767693033_1271 : UInt64 = UInt64(UInt16(UInt16(100)));
        var var_1690767693033_1315 : Interface_1690767693033_40 = Class_1690767693033_34();
        try { // block id: 1231
            if (false) { // block id: 1234
                var_1690767693033_1236;
                let var_1690767693033_1277 : UInt64 = UInt64(Int8(UInt8(UInt8(48))));
                if (false) { [var_1690767693033_394, var_1690767693033_394, UInt64(244), UInt64(246), var_1690767693033_394, UInt64(104), var_1690767693033_394, UInt64(198), var_1690767693033_394, UInt64(15)] } else { [var_1690767693033_394, UInt64(124), var_1690767693033_1271, var_1690767693033_394, var_1690767693033_1277, UInt64(218), var_1690767693033_394, var_1690767693033_1271, var_1690767693033_1277, var_1690767693033_1271] } 
            } else { // block id: 1287
                UInt64(232);
                var_1690767693033_861 += var_1690767693033_861;
                [UInt64(222), UInt64(28), UInt64(28), UInt64(135), UInt64(181), var_1690767693033_1271, var_1690767693033_394, UInt64(176), var_1690767693033_394, var_1690767693033_394]
            };
            [UInt16(31), UInt16(55), UInt16(247), UInt16(146), UInt16(186), UInt16(247), UInt16(60), UInt16(90), UInt16(209), UInt16(129)][2]
        } catch (_) { // block id: 1307
            (Option<Interface_1690767693033_40>.None ?? var_1690767693033_1315);
            let var_1690767693033_1321 : UInt16 = UInt16(25);
            var_1690767693033_1321
        };
        ((Option<Option<(Unit, Bool, Float32)>>.None ?? var_1690767693033_370) ?? ((), true, Float32(-58.0)))
    }

}

public open class Class_1690767693033_34 <: Class_1690767693033_7 & Interface_1690767693033_37 & Interface_1690767693033_38 {
    public init() { // block id: 36

    }
;
    static mut prop var_1690767693033_117 : ?Bool { // block id: 118
        get() { // block id: 120
            ();
            "ZBb%M)OYs`";
            (() as Bool)
        }

        set(Value) { // block id: 127
            ();
            ();
            ()
        }

    };
    public init(param_1690767693033_520 : Array<Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>>, param_1690767693033_521 : Interface_1690767693033_39) { // block id: 522
        ();
        var_1690767693033_484 &&= (var_1690767693033_214 is Range<UInt16>);
        var_1690767693033_76
    }
;
    protected init(param_1690767693033_912 : Option<Enum_1690767693033_288>, param_1690767693033_913 : Rune) { // block id: 914
        UInt16(208);
        var var_1690767693033_917 : Interface_1690767693033_41<Float64> = Class_1690767693033_34();
        var_1690767693033_917
    }
;
    public init(optionalParam_1690767693033_889 ! : Range<UInt32> = ((UInt32(UInt32(14))&127)..=(UInt32(UInt32(241))&127):((-120)|1)), namedParam_1690767693033_891 ! : Int32, optionalParam_1690767693033_892 ! : Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)> = ((Float32(Float32(-103.0)) as Bool) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), optionalParam_1690767693033_897 ! : Array<UInt64> = [UInt64(107), UInt64(132), UInt64(44), UInt64(13), UInt64(239), UInt64(55), UInt64(178), UInt64(92), UInt64(58), UInt64(196)]) { // block id: 899
        try { // block id: 901
            if (true) { // block id: 904
                var_1690767693033_484;
                ()
            };
            var loopTimeVar_1690767693033_925 : Int64 = 0;
            while ((var_1690767693033_484) && loopTimeVar_1690767693033_925 < 100 ) {
                loopTimeVar_1690767693033_925++;
                let var_1690767693033_920 : ?Enum_1690767693033_288 = Option<Enum_1690767693033_288>.Some(Enum_1690767693033_288.defaultValue);
                Class_1690767693033_34(var_1690767693033_920, var_1690767693033_403)
            };
            (Option<String>.None ?? """
_Q]Hz
$IxvM
""")
        } finally { // block id: 933
            let var_1690767693033_945 : Unit = ();
            [var_1690767693033_471, var_1690767693033_76, (), (), var_1690767693033_471, (), (), (), var_1690767693033_945, var_1690767693033_471][6];
            ((), var_1690767693033_484, var_1690767693033_749);
            "f$u}.x ^];"
        }
    }
;
    public open override func func_1690767693033_1173(param_1690767693033_1174 : Array<Option<(Unit, Bool, Float32)>>, param_1690767693033_1175 : Int16) : (Unit, Bool, Float32) { // block id: 1176
        try { // block id: 1178
            if (false) { // block id: 1181
                var_1690767693033_133 >>= ((var_1690767693033_133) & 7);
                var_1690767693033_1104 |= UInt8(216)
            } else if (var_1690767693033_173) { // block id: 1189
                var_1690767693033_394 += var_1690767693033_394
            };
            Option<Array<Unit>>.Some(var_1690767693033_1200).getOrThrow()
        } finally { // block id: 1212
            (Option<Unit>.None ?? var_1690767693033_76);
            if (true) { [var_1690767693033_471, (), (), var_1690767693033_76, (), var_1690767693033_76, (), (), (), var_1690767693033_76] } else { [(), (), (), (), (), (), (), (), (), ()] } 
        };
        var var_1690767693033_1236 : (Bool, Int32, Range<UInt64>, Unit, (Option<Int64>, Int64, UInt64)) = (((-2) is (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34)), Int32(46), ((UInt64(UInt64(UInt16(201)))&127)..(UInt64(UInt64(165))&127):((-24)|1)), (), (Option<Int64>.None, Int64(UInt64((-51))), UInt64(15)));
        var var_1690767693033_1271 : UInt64 = UInt64(UInt16(UInt16(100)));
        var var_1690767693033_1315 : Interface_1690767693033_40 = Class_1690767693033_34();
        try { // block id: 1231
            if (false) { // block id: 1234
                var_1690767693033_1236;
                let var_1690767693033_1277 : UInt64 = UInt64(Int8(UInt8(UInt8(48))));
                if (false) { [var_1690767693033_394, var_1690767693033_394, UInt64(244), UInt64(246), var_1690767693033_394, UInt64(104), var_1690767693033_394, UInt64(198), var_1690767693033_394, UInt64(15)] } else { [var_1690767693033_394, UInt64(124), var_1690767693033_1271, var_1690767693033_394, var_1690767693033_1277, UInt64(218), var_1690767693033_394, var_1690767693033_1271, var_1690767693033_1277, var_1690767693033_1271] } 
            } else { // block id: 1287
                UInt64(232);
                var_1690767693033_861 += var_1690767693033_861;
                [UInt64(222), UInt64(28), UInt64(28), UInt64(135), UInt64(181), var_1690767693033_1271, var_1690767693033_394, UInt64(176), var_1690767693033_394, var_1690767693033_394]
            };
            [UInt16(31), UInt16(55), UInt16(247), UInt16(146), UInt16(186), UInt16(247), UInt16(60), UInt16(90), UInt16(209), UInt16(129)][2]
        } catch (_) { // block id: 1307
            (Option<Interface_1690767693033_40>.None ?? var_1690767693033_1315);
            let var_1690767693033_1321 : UInt16 = UInt16(25);
            var_1690767693033_1321
        };
        ((Option<Option<(Unit, Bool, Float32)>>.None ?? var_1690767693033_370) ?? ((), true, Float32(-58.0)))
    }

}


public func func_1690767693033_72(param_1690767693033_73 : Interface_1690767693033_38) : Option<Int64> { // block id: 74
    var_1690767693033_76;
    var var_1690767693033_100 : Int8 = Int8(70);
    (match (var_1690767693033_83[0]) {
        case _ => 
            39 << ((70) & 7);
            var_1690767693033_100++;
            Float32(13.0)
        
    } as Int64)
}



public func func_1690767693033_105(param_1690767693033_106 : Bool) : Interface_1690767693033_38 { // block id: 107
    var loopTimeVar_1690767693033_137 : Array<UInt64> = [UInt64(Int8(120)), UInt64(UInt16(UInt16(UInt8(175)))), UInt64(137), UInt64(151), UInt64(48), UInt64(Int16(-9)), UInt64(UInt32(130)), UInt64(134), UInt64(238), UInt64(UInt32(145))];
    for (i in loopTimeVar_1690767693033_137 where (Class_1690767693033_34.var_1690767693033_117 ?? var_1690767693033_133 == var_1690767693033_133)) {

    };
    var var_1690767693033_186 : Interface_1690767693033_38 = Class_1690767693033_34();
    var var_1690767693033_191 : Int64 = 99;
    (((if (var_1690767693033_173) { Class_1690767693033_34() } else { Class_1690767693033_7() } ) as Interface_1690767693033_38) ?? try { // block id: 180
        Class_1690767693033_34()
    } catch (_) { // block id: 182
        var_1690767693033_76;
        ();
        var_1690767693033_186
    } finally { // block id: 188
        var_1690767693033_191 /= (((-17)) | 1);
        Class_1690767693033_34()
    })
}


public struct Struct_1690767693033_240 {
    init() { // block id: 242

    }
;
    static prop var_1690767693033_245 : (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) { // block id: 246
        get() { // block id: 248
            ((Int64((-55))&127)..(Int64(39)&127):(79|1));
            UInt64(UInt16(10));
            (UInt16(163), ((Int8(Int8(30))&127)..(Int8(Int8(101))&127):((-38)|1)), Class_1690767693033_34(), ((Int8(Int8(64))&127)..(Int8(Int8(-115))&127):(35|1)))
        }

    };
    public let var_1690767693033_349 : Range<UInt32> = ((UInt32(UInt32(133))&127)..=(UInt32(UInt32(149))&127):((-77)|1));
    public mut prop var_1690767693033_354 : Rune { // block id: 355
        get() { // block id: 357
            ((Int8(Int8(25))&127)..=(Int8(Int8(-54))&127):((-17)|1));
            r'7'
        }

        set(Value) { // block id: 362
            ()
        }

    }
}


public enum Enum_1690767693033_288 {
    defaultValue
}

public func func_1690767693033_272(param_1690767693033_273 : Interface_1690767693033_37) : Unit { // block id: 274
    (Option<UInt8>.Some([UInt8(177), UInt8(231), UInt8(168), UInt8(27), UInt8(151), UInt8(88), UInt8(121), UInt8(99), UInt8(215), UInt8(7)][6]) ?? UInt8(151));
    Class_1690767693033_34();
    var var_1690767693033_328 : Int64 = (-36);
    match (((var_1690767693033_297 as Enum_1690767693033_288) ?? var_1690767693033_302[3])) {
        case caseVar_1690767693033_317 => 
            var_1690767693033_76;
            ()
        
        case defaultValue => 
            ((Int16(var_1690767693033_133)&127)..=(Int16(var_1690767693033_133)&127):(var_1690767693033_328|1));
            var_1690767693033_76;
            ()
        
        case defaultValue => 
            ();
            -Float32(-20.0);
            ()
        
        case _ => 
            ()
        
    }
}


public func func_1690767693033_265(param_1690767693033_266 : UInt64) : Bool { // block id: 267
    var var_1690767693033_346 : Struct_1690767693033_240 = Struct_1690767693033_240();
    let var_1690767693033_386 : Unit = ();
    let var_1690767693033_413 : Int64 = Int64(Int32(UInt16(37)));
    let var_1690767693033_445 : (UInt32, Float64, Int8) = (UInt32(Int32(Int32(Int32(37)))), (-26.0), Int8(Int8(UInt8(Int8(-66)))));
    var var_1690767693033_480 : ?Bool = Option<Bool>.None;
    ((Class_1690767693033_34()|>func_1690767693033_272), var_1690767693033_346.var_1690767693033_349, var_1690767693033_346.var_1690767693033_354, (var_1690767693033_370 ?? var_1690767693033_373), match (var_1690767693033_214) {
        case caseVar_1690767693033_382 : Option<Enum_1690767693033_288> => 
            var_1690767693033_76;
            var_1690767693033_386
        
        case _ : Float32 => 
            var_1690767693033_386;
            var_1690767693033_394 &= UInt64(21)
        
        case _ : Float64 => 
            if (true) { var_1690767693033_403 } else { var_1690767693033_403 } ;
            ((UInt32(UInt32(158))&127)..(UInt32(var_1690767693033_409)&127):(var_1690767693033_413|1));
            var var_1690767693033_419 : UInt32 = UInt32(100);
            var_1690767693033_419 >>= ((UInt32(86)) & 7)
        
        case caseVar_1690767693033_424 : UInt8 => 
            var_1690767693033_302;
            var_1690767693033_429 |= var_1690767693033_413;
            var_1690767693033_76
        
        case _ => 
            var_1690767693033_386;
            var var_1690767693033_439 : UInt8 = UInt8(86);
            var_1690767693033_439 ^= var_1690767693033_439
        
    }, var_1690767693033_445[2], var_1690767693033_403, var_1690767693033_459, if (var_1690767693033_173) { // block id: 463
        var_1690767693033_465;
        var_1690767693033_471
    } else if (false) { // block id: 474
        var var_1690767693033_477 : UInt32 = UInt32(203);
        var_1690767693033_477--;
        var_1690767693033_480;
        var_1690767693033_484 ||= true
    })[4];
    var var_1690767693033_566 : Int8 = Int8(UInt8(37));
    match (try { // block id: 490
        var var_1690767693033_492 : ?(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) = (Class_1690767693033_34() as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>));
        var_1690767693033_492
    } finally { // block id: 495
        var var_1690767693033_499 : ?(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) = ([Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue, Enum_1690767693033_288.defaultValue] as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>));
        let var_1690767693033_517 : Interface_1690767693033_40 = Class_1690767693033_34([Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(199), ((Int8(Int8(2))&127)..(Int8(Int8(-126))&127):((-23)|1)), Class_1690767693033_34(), ((Int8(Int8(-12))&127)..=(Int8(Int8(-16))&127):((-99)|1)))), ((UInt32(243), 63.0, Int8(115)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, ([UInt8(237), UInt8(131), UInt8(166), UInt8(208), UInt8(46), UInt8(226), UInt8(196), UInt8(45), UInt8(89), UInt8(92)] as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), (((Int8(Int8(-112))&127)..(Int8(Int8(34))&127):(80|1)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(84), ((Int8(Int8(-88))&127)..=(Int8(Int8(-88))&127):((-10)|1)), Class_1690767693033_34(), ((Int8(Int8(26))&127)..(Int8(Int8(-68))&127):(33|1)))), (Class_1690767693033_34() as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), ([UInt64(86), UInt64(4), UInt64(172), UInt64(21), UInt64(107), UInt64(139), UInt64(215), UInt64(32), UInt64(78), UInt64(31)] as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), (Int8(Int8(-21)) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None], Class_1690767693033_34());
        if (var_1690767693033_173) { var_1690767693033_499 } else { Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((var_1690767693033_465, ((Int8(Int8(40))&127)..=(Int8(Int8(14))&127):(59|1)), var_1690767693033_517, ((Int8(var_1690767693033_566)&127)..=(Int8(var_1690767693033_566)&127):(11|1)))) } 
    }) {
        case _ => 
            false && var_1690767693033_173
        
        case _ => 
            var_1690767693033_76;
            var_1690767693033_173
        
    }
}


public func func_1690767693033_261(param_1690767693033_262 : Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>) : (Option<Int64>, Int64, UInt64) { // block id: 263
    let var_1690767693033_582 : (UInt64) -> Bool = func_1690767693033_265;
    match (((Int16(Int16(-57))&127)..=(Int16(Int16(32))&127):(89|1))) {
        case _ => 
            (Option<Int64>.Some(39), 18, var_1690767693033_394);
            UInt64(9)
        
        case _ => 
            var_1690767693033_600;
            var_1690767693033_394 * UInt64(56)
        
        case _ => 
            ((UInt8(UInt8(58))&127)..(UInt8(var_1690767693033_611)&127):(85|1));
            var_1690767693033_394
        
        case caseVar_1690767693033_617 => 
            Struct_1690767693033_240();
            UInt64(212)
        
        case _ => 
            ();
            UInt64(112)
        
    } * var_1690767693033_394|>var_1690767693033_582;
    var var_1690767693033_670 : Float32 = Float32(Float32(Float32(Float32(Float32(9.0)))));
    var var_1690767693033_683 : Int8 = Int8(89);
    ((var_1690767693033_637, ((Int64((-126))&127)..(Int64(51)&127):(var_1690767693033_429|1)), UInt16(88), var_1690767693033_403)[0] ?? ((-107), (false, Int32(-2), ((UInt64(var_1690767693033_394)&127)..=(UInt64(UInt64(1))&127):((-51)|1)), (), var_1690767693033_83), (var_1690767693033_76, false, var_1690767693033_670), (var_1690767693033_678, 109.0, var_1690767693033_683), ((Int64((-58))&127)..=(Int64((-103))&127):((-34)|1)), """
j#y!<
_wQrS
""")[1])[4]
}

func func_1690767693033_201(param_1690767693033_202 : UInt64) : (Option<Int64>, Int64, UInt64) { // block id: 203
    (var_1690767693033_214[3] ?? Struct_1690767693033_240.var_1690767693033_245)[2];
    try { // block id: 259
        Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some(var_1690767693033_692)|>func_1690767693033_261
    } catch (_) { // block id: 698
        ((Int64(var_1690767693033_429)&127)..(Int64((-33))&127):(var_1690767693033_429|1));
        try { // block id: 704
            (var_1690767693033_409, (-126.0), Int8(64));
            var_1690767693033_710;
            var_1690767693033_83
        } catch (e: Exception) { // block id: 716
            var_1690767693033_83
        }
    }
}

public func func_1690767693033_63(param_1690767693033_64 : (Unit, Bool, Float32)) : Int64 { // block id: 65
    let var_1690767693033_196 : (Bool) -> Interface_1690767693033_38 = func_1690767693033_105;
    let var_1690767693033_719 : (UInt64) -> (Option<Int64>, Int64, UInt64) = func_1690767693033_201;
    (((false|>var_1690767693033_196)|>func_1690767693033_72) ?? (var_1690767693033_394|>var_1690767693033_719)[1])
}




public func func_1690767693033_43<T0>(namedParam_1690767693033_44 ! : Int32, optionalParam_1690767693033_45 ! : Float32 = Float32(122.0), optionalParam_1690767693033_47 ! : Interface_1690767693033_37 = Class_1690767693033_34(), namedParam_1690767693033_49 ! : Int8) : Class_1690767693033_34 { // block id: 50
    let var_1690767693033_53 : Class_1690767693033_7 = Class_1690767693033_7(Class_1690767693033_34(), optionalParam_1690767693033_59 : Int8(Int8(UInt8(59))));
    let var_1690767693033_877 : ?(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>) = ([Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(47), ((Int8(Int8(61))&127)..=(Int8(Int8(83))&127):(120|1)), Class_1690767693033_34(optionalParam_1690767693033_889 : ((UInt32(UInt32(217))&127)..(UInt32(UInt32(81))&127):((-120)|1)), namedParam_1690767693033_891 : Int32(-105)), ((Int8(Int8(-103))&127)..(Int8(Int8(-51))&127):(17|1)))), ((-113.0) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), ((Option<Int64>.Some((-30)) as Bool) as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(64), ((Int8(Int8(-56))&127)..(Int8(Int8(31))&127):(33|1)), Class_1690767693033_34(namedParam_1690767693033_891 : Int32(-62), optionalParam_1690767693033_892 : Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, optionalParam_1690767693033_897 : [UInt64(21), UInt64(68), UInt64(62), UInt64(142), UInt64(55), UInt64(121), UInt64(149), UInt64(86), UInt64(221), UInt64(207)]), ((Int8(Int8(53))&127)..(Int8(Int8(-70))&127):(28|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(147), ((Int8(Int8(-93))&127)..(Int8(Int8(-19))&127):(111|1)), Class_1690767693033_34(namedParam_1690767693033_891 : Int32(2), optionalParam_1690767693033_897 : [UInt64(55), UInt64(20), UInt64(191), UInt64(0), UInt64(157), UInt64(138), UInt64(17), UInt64(249), UInt64(104), UInt64(65)]), ((Int8(Int8(-51))&127)..(Int8(Int8(-92))&127):((-69)|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(81), ((Int8(Int8(48))&127)..=(Int8(Int8(-64))&127):(21|1)), Class_1690767693033_34(), ((Int8(Int8(-88))&127)..(Int8(Int8(101))&127):(100|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(69), ((Int8(Int8(-126))&127)..=(Int8(Int8(100))&127):((-101)|1)), Class_1690767693033_34(), ((Int8(Int8(-71))&127)..=(Int8(Int8(8))&127):(82|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(29), ((Int8(Int8(121))&127)..(Int8(Int8(97))&127):((-73)|1)), Class_1690767693033_34(), ((Int8(Int8(-33))&127)..(Int8(Int8(-10))&127):(31|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(111), ((Int8(Int8(-59))&127)..(Int8(Int8(-21))&127):(33|1)), Class_1690767693033_34(), ((Int8(Int8(-5))&127)..(Int8(Int8(66))&127):((-5)|1))))] as (UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>));
    var_1690767693033_53.func_1690767693033_25(namedParam_1690767693033_786 : [Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None, var_1690767693033_877, var_1690767693033_877, var_1690767693033_877, Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some(var_1690767693033_692), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some((UInt16(249), ((Int8(Int8(116))&127)..=(Int8(Int8(-21))&127):((-7)|1)), Class_1690767693033_34(namedParam_1690767693033_891 : Int32(11), optionalParam_1690767693033_897 : var_1690767693033_1066), ((Int8(Int8(-112))&127)..(Int8(Int8(15))&127):((-46)|1)))), Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.Some(var_1690767693033_692), var_1690767693033_1075, Option<(UInt16, Range<Int8>, Interface_1690767693033_40, Range<Int8>)>.None]);
    var loopTimeVar_1690767693033_1084 : Int64 = 0;
    while ((false) && loopTimeVar_1690767693033_1084 < 100 ) {
        loopTimeVar_1690767693033_1084++;

    };
    var var_1690767693033_1128 : (Range<UInt8>, Range<UInt16>, (Unit, Bool, Float32), (Array<Unit>, UInt64, Range<UInt8>, Rune, Class_1690767693033_34), Unit, Int64, Array<UInt8>, UInt32) = (((UInt8(UInt8(33))&127)..=(UInt8(UInt8(Int8(116)))&127):((-53)|1)), ((UInt16(UInt16(26))&127)..(UInt16(UInt16(123))&127):((-118)|1)), ((), (Float32(-97.0) is (Unit, Bool, Float32)), Float32(Float32(-1.0))), ([(), (), (), (), (), (), (), (), (), ()], UInt64(77), ((UInt8(UInt8(77))&127)..=(UInt8(UInt8(Int8(-7)))&127):(111|1)), r'j', Class_1690767693033_34()), (), (-6), [UInt8(185), UInt8(95), UInt8(58), UInt8(197), UInt8(114), UInt8(124), UInt8(111), UInt8(56), UInt8(86), UInt8(193)], UInt32(206));
    ((var_1690767693033_1094, (var_1690767693033_678, var_1690767693033_1094, Int8(-98)), var_1690767693033_133, [var_1690767693033_1104, UInt8(209), var_1690767693033_1104, var_1690767693033_611, UInt8(117), UInt8(20), UInt8(187), var_1690767693033_1104, UInt8(157), var_1690767693033_611], var_1690767693033_1116, var_1690767693033_297, var_1690767693033_710, var_1690767693033_429)[4] ?? var_1690767693033_1128[3][4])
}






main(): Int64 {
    try {
        func_1690767693033_11(namedParam_1690767693033_14 : UInt32(27), optionalParam_1690767693033_15 : UInt32(78)).func_1690767693033_25();
        let var_1690767693033_1563 : (Unit, Range<UInt32>, Rune, (Unit, Bool, Float32), Unit, Int8, Rune, String, Unit) = ((), ((UInt32(UInt32(227))&127)..=(UInt32(UInt32(96))&127):((-70)|1)), r'z', ((), ([UInt64(209), UInt64(211), UInt64(126), UInt64(59), UInt64(116), UInt64(33), UInt64(3), UInt64(89), UInt64(43), UInt64(228)] is Array<UInt64>), Float32(Float32(-80.0))), (), Int8(UInt8(Int8(Int8(-33)))), r'E', "31kP/w.`un", ());
        try { // block id: 1561
            var_1690767693033_1563
        } finally { // block id: 1582
            ();
            var_1690767693033_76;
            (var_1690767693033_76, var_1690767693033_1588, r'T', ((), false, Float32(-2.0)), (), var_1690767693033_1170, var_1690767693033_403, var_1690767693033_459, ())
        };
        if (true) { // block id: 1609
            -32
        } else { // block id: 1612
            ();
            56
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1690767693033_394*var_1690767693033_394), 64)
        crccheck.updateBuffer(UInt64(var_1690767693033_409*var_1690767693033_409), 64)
        crccheck.updateBuffer(UInt64(var_1690767693033_465*var_1690767693033_465), 64)
        crccheck.updateBuffer(UInt64(var_1690767693033_1447*var_1690767693033_1447), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            res = res + hex_value.toString()
            i = i + 3
        }
        print("\n")
        if ( res == "1607162207470405474030" ){
            return 0
        }
        return 1
    }
}
