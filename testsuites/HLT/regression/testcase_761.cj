/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

internal var var_1749137360484_73: Byte = UInt8(202)
@Deprecated
public const var_1749137360484_79: Unit = ()
public var var_1749137360484_112: Float64 = Float64(-79.0)
internal var var_1749137360484_123: Bool = false
@Deprecated
let var_1749137360484_151: Int64 = Int64(Int16(UInt16(117)))
@Deprecated
public const var_1749137360484_163: Float32 = 5.0
public var var_1749137360484_176: UInt16 = UInt16(135)
internal const var_1749137360484_180: Int16 = -73
public var var_1749137360484_207: Option<Rune> = Option<Rune>.None
public var var_1749137360484_213: Range<Int16> = ((Int16(Int16(-124)) & 127)..(Int16(Int16(79)) & 127) : (Int64(Int64(-101)) |
    1))
public const var_1749137360484_300: Int16 = 126
internal let var_1749137360484_473: ?Bool = ([Option<Rune>.None, Option<Rune>.None, (Float32(Float32(70.0)) as Rune),
    ((Int8(-73), ((((UInt8(UInt8(20)) & 127)..=(UInt8(UInt8(13)) & 127) : (Int64(-97) | 1)), ((UInt8(UInt8(128)) & 127)..=(UInt8(UInt8(39)) &
                127) : (Int64(46) | 1)), UInt32(228), UInt16(2), ()), Int64(16))) as Rune),
    (((Int32(Int32(-90)) & 127)..(Int32(Int32(97)) & 127) : (Int64(95) | 1)) as Rune), (true as Rune),
    (((((UInt8(UInt8(68)) & 127)..(UInt8(UInt8(173)) & 127) : (Int64(15) | 1)), ((UInt8(UInt8(77)) & 127)..(UInt8(UInt8(246)) &
            127) : (Int64(78) | 1)), UInt32(204), UInt16(158), ()), Int64(0)) as Rune), (UInt8(145) as Rune),
    Option<Rune>.None, Option<Rune>.None] as Bool)
@Deprecated
public const var_1749137360484_586: Bool = true
@Deprecated
let var_1749137360484_691: Unit = ()
internal const var_1749137360484_786: Bool = true
public const var_1749137360484_792: String = ",7`HQ\"p+Fm"
public const var_1749137360484_813: UInt32 = 169
internal const var_1749137360484_837: Int8 = 33
internal const var_1749137360484_844: Rune = r'm'
public let var_1749137360484_863: Array<Bool> = [true, false, false, false, true, false, true, true, false, false]
public var var_1749137360484_916: Array<Option<Float64>> = [(Float64(96.0) as Float64), Option<Float64>.None,
    Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
    (###"GnJFMmx${var_1749137360484_792}W${var_1749137360484_792}eM"### as Float64),
    ("""
H${var_1749137360484_792}]F${var_1749137360484_792}Yg
0&XV}
""" as Float64), Option<Float64>.None,
    Option<Float64>.None, (((UInt16(UInt16(160)) & 127)..=(UInt16(UInt16(198)) & 127) : (Int64(-121) | 1)) as Float64)]
@Deprecated
public var var_1749137360484_934: Option<Float64> = ((Int8(-95), ((((UInt8(UInt8(146)) & 127)..=(UInt8(UInt8(75)) & 127) : (Int64(-46) |
                1)), ((UInt8(UInt8(181)) & 127)..(UInt8(UInt8(196)) & 127) : (Int64(-62) | 1)), UInt32(131), UInt16(171),
            ()), Int64(Int16(62)))) as Float64)
@Deprecated
var var_1749137360484_964: Range<UInt64> = ((UInt64(UInt64(Int8(Int8(-74)))) & 127)..=(UInt64(UInt64(UInt8(169))) & 127) : (Int64(20) |
    1))
@Deprecated
public var var_1749137360484_1053: Float64 = Float64(Float64(27.0))
let var_1749137360484_1064: ?Array<Float64> = Option<Array<Float64>>.None
let var_1749137360484_1097: ?Option<Range<UInt8>> = (Int8(Int8(Int8(-68))) as Option<Range<UInt8>>)
@Deprecated
internal let var_1749137360484_1140: UInt64 = UInt64(Int32(Int16(67)))
public let var_1749137360484_1171: Int32 = Int32(UInt32(116))
public const var_1749137360484_1229: UInt64 = 148
internal let var_1749137360484_1248: Option<Option<Float64>> = ((((UInt8(UInt8(168)) & 127)..(UInt8(UInt8(108)) & 127) : (Int64(73) |
        1)), ((UInt8(UInt8(52)) & 127)..=(UInt8(UInt8(64)) & 127) : (Int64(69) | 1)), UInt32(228), UInt16(UInt16(UInt16(244))),
    ()) as Option<Float64>)
@Deprecated
public var var_1749137360484_1344: ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64) = ((((UInt8(UInt8(103)) &
            127)..(UInt8(UInt8(70)) & 127) : (Int64(7) | 1)), ((UInt8(UInt8(178)) & 127)..(UInt8(UInt8(64)) & 127) : (Int64(-100) |
            1)), UInt32(UInt16(188)), UInt16(48), ()), Int64(-90))
public var var_1749137360484_1387: Float32 = Float32(Float32(87.0))
public var var_1749137360484_1574: ?(Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)) = ([Option<Rune>
    .None, (((Int32(Int32(41)) & 127)..(Int32(Int32(-99)) & 127) : (Int64(49) | 1)) as Rune),
    (((UInt16(UInt16(234)) & 127)..(UInt16(UInt16(215)) & 127) : (Int64(-100) | 1)) as Rune), (Float64(11.0) as Rune),
    Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, ((Float32(-126.0) as Unit) as Rune),
    Option<Rune>.None] as (Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)))
var var_1749137360484_1607: UInt64 = UInt64(191)
public const var_1749137360484_1613: Float32 = 61.0
public var var_1749137360484_1902: Bool = true
public const var_1749137360484_1934: Byte = 159
let var_1749137360484_1953: (Float32, Range<Int16>, Unit, (Bool, UInt64, Array<Option<Float64>>), Range<UInt32>, Unit) = (Float32(Float32(104.0)),
    ((Int16(Int16(UInt8(51))) & 127)..(Int16(Int16(-14)) & 127) : (Int64(65) | 1)), (), (true, UInt64(61), [Option<Float64>
            .None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
            (Option<Option<Range<UInt8>>>.None as Float64), (UInt8(81) as Float64),
            ([Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
            Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
            Option<Float64>.None] as Float64), (Option<Array<Float64>>.None as Float64), (Option<Rune>.None as Float64)]),
    ((UInt32(UInt32(141)) & 127)..(UInt32(UInt32(Int8(UInt8(166)))) & 127) : (Int64(3) | 1)), ())
@Deprecated
public var var_1749137360484_2052: Range<UInt8> = ((UInt8(UInt8(64)) & 127)..=(UInt8(UInt8(Int8(UInt8(Int8(124))))) & 127) : (Int64(20) |
    1))
@Deprecated
internal let var_1749137360484_2160: ?(Option<Array<Option<Rune>>>, Option<Float64>, Class_1749137360484_1071, Range<Int8>, 
    Option<Float64>) = (UInt16(Int16(UInt8(34))) as (Option<Array<Option<Rune>>>, Option<Float64>, 
    Class_1749137360484_1071, Range<Int8>, Option<Float64>))
public var var_1749137360484_2167: Option<Array<Option<Rune>>> = (true as Array<Option<Rune>>)
public var var_1749137360484_2192: (Option<(Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, 
    UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit))>, Array<UInt64>, Float64, Array<Option<Rune>>, 
    Array<Option<Rune>>, Bool) = ((((UInt32(UInt32(42)) & 127)..(UInt32(UInt32(131)) & 127) : (Int64(UInt16(119)) | 1)) as (Int8, 
        Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), (Range<UInt8>, 
        Range<UInt8>, UInt32, UInt16, Unit))), [UInt64(123), UInt64(UInt16(Int8(123))), UInt64(UInt32(148)), UInt64(129),
        UInt64(Int8(18)), UInt64(223), UInt64(2), UInt64(UInt16(162)), UInt64(199), UInt64(UInt16(221))], Float64(-20.0),
    [((Float32(114.0), ((Int16(Int16(120)) & 127)..(Int16(Int16(-104)) & 127) : (Int64(-37) | 1)), (), (true, UInt64(51),
            [Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
                Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
                Option<Float64>.None, Option<Float64>.None]), ((UInt32(UInt32(32)) & 127)..(UInt32(UInt32(74)) & 127) : (Int64(119) |
            1)), ()) as Rune), Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None,
        Option<Rune>.None,
        ((Option<Array<Option<Rune>>>.None, Option<Float64>.None, Class_1749137360484_1071(), ((Int8(Int8(-53)) & 127)..(Int8(Int8(10)) &
            127) : (Int64(-72) | 1)), Option<Float64>.None) as Rune),
        (((UInt32(UInt32(144)) & 127)..=(UInt32(UInt32(25)) & 127) : (Int64(-87) | 1)) as Rune),
        (((Int8(Int8(26)) & 127)..(Int8(Int8(-95)) & 127) : (Int64(77) | 1)) as Rune),
        (((UInt8(UInt8(131)) & 127)..=(UInt8(UInt8(212)) & 127) : (Int64(20) | 1)) as Rune)], [(((((UInt8(UInt8(186)) &
                127)..=(UInt8(UInt8(171)) & 127) : (Int64(85) | 1)), ((UInt8(UInt8(155)) & 127)..(UInt8(UInt8(163)) & 127) : (Int64(-80) |
                1)), UInt32(150), UInt16(33), ()), Int64(2)) as Rune),
        (((UInt8(UInt8(172)) & 127)..=(UInt8(UInt8(174)) & 127) : (Int64(88) | 1)) as Rune), Option<Rune>.None,
        Option<Rune>.None, (Option<Bool>.None as Rune), Option<Rune>.None,
        ([Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None,
        Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None] as Rune),
        ((Option<Class_1749137360484_350>.None, Option<Option<Range<UInt8>>>.None, [true, true, true, false, false,
            false, true, false, false, false], Option<Float64>.None, r'H', UInt8(108), Option<Bool>.None, [Option<Float64>
            .None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None,
            Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None, Option<Float64>.None]) as Rune),
        Option<Rune>.None, Option<Rune>.None], false)
public let var_1749137360484_2408: Option<((Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)), Option<Array<Float64>>, 
    Array<UInt64>, Rune, Option<Float64>, Float32)> = ((Option<UInt64>.None as Range<UInt8>) as ((Int8, ((Range<UInt8>, 
    Range<UInt8>, UInt32, UInt16, Unit), Int64)), Option<Array<Float64>>, Array<UInt64>, Rune, Option<Float64>, Float32))
public let var_1749137360484_2413: ((Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)), Option<Array<Float64>>, 
    Array<UInt64>, Rune, Option<Float64>, Float32) = ((Int8(94), ((((UInt8(UInt8(111)) & 127)..(UInt8(UInt8(227)) & 127) : (Int64(9) |
                    1)), ((UInt8(UInt8(16)) & 127)..(UInt8(UInt8(148)) & 127) : (Int64(-9) | 1)), UInt32(209), UInt16(79),
                ()), Int64(31))), Option<Array<Float64>>.None, [UInt64(48), UInt64(113), UInt64(119), UInt64(192),
        UInt64(224), UInt64(216), UInt64(144), UInt64(64), UInt64(188), UInt64(196)], r'U', Option<Float64>.None,
    Float32(Float32(Float32(Float32(-96.0)))))
@Deprecated
public const var_1749137360484_2453: Int = 47
@Deprecated
public var var_1749137360484_2468: Int32 = Int32(UInt32(Int32(UInt8(107))))

public interface Interface_1749137360484_17 {}

public sealed interface Interface_1749137360484_18<T0, T1> {}

public interface Interface_1749137360484_16 <: Interface_1749137360484_17 & Interface_1749137360484_18<Unit, UInt8> {}

public interface Interface_1749137360484_15 <: Interface_1749137360484_16 {}

public interface Interface_1749137360484_14<T0, T1> <: Interface_1749137360484_15 & Interface_1749137360484_17 {}

public sealed interface Interface_1749137360484_13 <: Interface_1749137360484_14<Float32, UInt64> {}

@Deprecated
public open class Class_1749137360484_10 <: Interface_1749137360484_13 {
    @Frozen
    public init() { // block id: 12

    }

    let var_1749137360484_2486: Int64 = Int64(-94)
    static init() {
    }
}

@Deprecated
public open class Class_1749137360484_350 <: Resource {
    @Frozen
    public init() { // block id: 352

    }

    @Frozen
    static mut prop var_1749137360484_407: UInt32 { // block id: 408
        get() { // block id: 410
            UInt32(UInt8(236));
            var_1749137360484_2489
        }
        set(Value) { // block id: 415
            ();
            ();
            ();
            var_1749137360484_2489 = Value
        }
    }
    public func func_1749137360484_375<T0>(optionalParam_1749137360484_376!: UInt16 = UInt16(Int16(-11)),
        optionalParam_1749137360484_379!: (Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)) = (Int8(UInt8(106)),
            ((((UInt8(UInt8(10)) & 127)..(UInt8(UInt8(14)) & 127) : (Int64(-84) | 1)), ((UInt8(UInt8(94)) & 127)..=(UInt8(UInt8(201)) &
                        127) : (Int64(-93) | 1)), UInt32(Int32(-97)), UInt16(Int16(-106)), ()), Int64(UInt8(UInt8(124))))),
        namedParam_1749137360484_401!: UInt32, optionalParam_1749137360484_402!: Int32 = Int32(-30)): Bool { // block id: 404
        let var_1749137360484_429: Rune = r'W';
        var_1749137360484_407 <<= ((try { // block id: 420
            ((UInt16(UInt16(252)) & 127)..(UInt16(UInt16(222)) & 127) : (Int64(65) | 1));
            UInt32(32)
        } finally { // block id: 423
            [var_1749137360484_207, var_1749137360484_207, Option<Rune>.Some(var_1749137360484_429),
                var_1749137360484_207, var_1749137360484_207, var_1749137360484_207, Option<Rune>.Some(r'b'),
                var_1749137360484_207, Option<Rune>.Some(r'g'), var_1749137360484_207];
            ((Int8(Int8(-94)) & 127)..=(Int8(Int8(-57)) & 127) : (Int64(-19) | 1));
            var_1749137360484_407 + var_1749137360484_407
        }) & 7)
        let var_1749137360484_458: Option<Rune> = Option<Rune>.Some(r'X');
        const var_1749137360484_1435: Bool = false;
        let var_1749137360484_1450: Bool = (UInt64(Int8(UInt8(240))) is (Option<Class_1749137360484_350>, Option<Option<Range<UInt8>>>, 
            Array<Bool>, Option<Float64>, Rune, UInt8, Option<Bool>, Array<Option<Float64>>));
        var var_1749137360484_1458: UInt64 = UInt64(Int16(UInt16(117)));
        if ((match (Option<Rune>.None) {
            case _: Array<Option<Rune>> =>
                [Option<Rune>.None, var_1749137360484_458, Option<Rune>.None, var_1749137360484_207,
                    var_1749137360484_458, Option<Rune>.None, Option<Rune>.None, var_1749137360484_458,
                    Option<Rune>.Some(var_1749137360484_429), var_1749137360484_207];
                if (false) {
                    var_1749137360484_473
                } else {
                    var_1749137360484_473
                }

            case _ => Option<Bool>.None
        } ?? (((UInt16(var_1749137360484_176) & 127)..(UInt16(UInt16(0)) & 127) : (var_1749137360484_151 | 1)) |> {
            lambdaParameter_1749137360484_614: Range<UInt16> => var_1749137360484_123
        }))) { // block id: 621
            if (true) { // block id: 624
                var_1749137360484_79;
                Int32(-64);
                Int16(21)
            } else if (false) { // block id: 629
                if (true) {
                    ((Int16(Int16(50)) & 127)..=(Int16(Int16(-112)) & 127) : (Int64(-9) | 1))
                } else {
                    ((Int16(Int16(57)) & 127)..(Int16(Int16(84)) & 127) : (Int64(-42) | 1))
                };
                var var_1749137360484_636: Int8 = Int8(58);
                var_1749137360484_636--;
                const var_1749137360484_640: Int16 = -103;
                var_1749137360484_640 | Int16(7)
            } else { // block id: 643
                Int16(-86) - var_1749137360484_300;
                Int16(-55) >> ((var_1749137360484_300) & 7)
            };
            var_1749137360484_1053 |> func_1749137360484_651;
            VArray<Bool, $6>(repeat: var_1749137360484_786)[1]
        } else if (if (match (Option<Rune>.None) {
            case caseVar_1749137360484_1431 => var_1749137360484_1435 || false

            case _ => true
        }) { // block id: 1442
            var_1749137360484_151 * Int64(-81);
            true
        } else if (false && var_1749137360484_1450) { // block id: 1455
            var_1749137360484_1458 %= ((UInt64(56)) | 1)
            UInt64(139) > var_1749137360484_1229
        } else { // block id: 1466
            VArray<Bool, $6>(repeat: var_1749137360484_123);
            false
        }) { // block id: 1475
            (var_1749137360484_429 is Range<Int64>)
        } else { // block id: 1478
            var loopTimeVar_1749137360484_1483: Array<UInt64> = [UInt64(Int8(86)), UInt64(144), UInt64(154),
                UInt64(Int16(66)), UInt64(Int32(62)), UInt64(27), UInt64(61), UInt64(7), UInt64(UInt16(78)), UInt64(192)];
            for (i in loopTimeVar_1749137360484_1483 where false) {
                var_1749137360484_691
            };
            false
        }
    };

    static var var_1749137360484_2489: UInt32 = UInt32(12)
    static init() {
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Frozen
public const func func_1749137360484_530(param_1749137360484_531: Unit): Bool { // block id: 532
    false
}

internal func func_1749137360484_524(param_1749137360484_525: Range<UInt16>): Bool { // block id: 526
    (if ((() |> {
        lambdaParameter_1749137360484_536: Unit =>
            var var_1749137360484_551: Int8 = Int8(Int8(-2));
            match (Option<Rune>.None) {
                case _ =>
                    ((UInt16(UInt16(199)) & 127)..=(UInt16(UInt16(49)) & 127) : (Int64(76) | 1));
                    false

                case _ =>
                    var_1749137360484_79;
                    ((Int8(var_1749137360484_551) & 127)..=(Int8(Int8(-70)) & 127) : (Int64(-122) | 1));
                    var_1749137360484_73 == UInt8(47)

                case caseVar_1749137360484_561: Float32 =>
                    Int64(-73);
                    false

                case _ =>
                    var_1749137360484_123 &&= var_1749137360484_123
                    var_1749137360484_123

                case _ =>
                    var_1749137360484_176++;
                    var_1749137360484_123
            }
    })) { // block id: 579
        ();
        var_1749137360484_123 ||= var_1749137360484_123
        Float32(-66.0)
    } else if (var_1749137360484_586) { // block id: 588
        var_1749137360484_79;
        ();
        Float32(27.0) / Float32((Int32(var_1749137360484_163)) | 1)
    } else { // block id: 594
        var_1749137360484_79;
        var_1749137360484_163
    } is Rune);
    try (resource = Class_1749137360484_350()) { // block id: 598

    } catch (_) { // block id: 599
        VArray<Float64, $6>({i => Float64(-82.0)})[3];
        var_1749137360484_79
    };
    true
}

@Frozen
public const func func_1749137360484_771(param_1749137360484_772: String, namedParam_1749137360484_773!: UInt32): UInt16 { // block id: 774
    ();
    const var_1749137360484_777: UInt16 = 92;
    var_1749137360484_777
}

@Frozen
internal const func func_1749137360484_780(param_1749137360484_781: UInt64, namedParam_1749137360484_782!: Rune,
    namedParam_1749137360484_783!: Float32): String { // block id: 784
    var_1749137360484_786;
    const var_1749137360484_789: Rune = r'z';
    var_1749137360484_789;
    var_1749137360484_792
}

public const func func_1749137360484_747(namedParam_1749137360484_748!: UInt8, namedParam_1749137360484_749!: Unit,
    namedParam_1749137360484_750!: UInt8, namedParam_1749137360484_751!: Unit): UInt16 { // block id: 752
    const var_1749137360484_754: UInt16 = 19;
    var_1749137360484_754;
    const var_1749137360484_796: Rune = r'z';
    const func func_1749137360484_759(param_1749137360484_760: String, param_1749137360484_761: String,
        param_1749137360484_762: Bool): UInt16 { // block id: 763
        (var_1749137360484_754 - (201 ^ var_1749137360484_754)) <= func_1749137360484_771(
            func_1749137360484_780(221, namedParam_1749137360484_782: var_1749137360484_796,
                namedParam_1749137360484_783: var_1749137360484_163), namedParam_1749137360484_773: 6);
        ();
        const func func_1749137360484_804(optionalParam_1749137360484_805!: Bool = false,
            namedParam_1749137360484_807!: UInt8, namedParam_1749137360484_808!: Rune,
            optionalParam_1749137360484_809!: Rune = r'2'): UInt32 { // block id: 811
            var_1749137360484_813
        };

        func_1749137360484_771("Tc![%t'+%+",
            namedParam_1749137360484_773: func_1749137360484_804(namedParam_1749137360484_807: 211,
                namedParam_1749137360484_808: var_1749137360484_796,
                optionalParam_1749137360484_809: var_1749137360484_796))
    };

    var_1749137360484_754 | func_1749137360484_759(var_1749137360484_792, """
nf<()
,Dz+9
""", var_1749137360484_586)
}

@Frozen
@Deprecated
internal const func func_1749137360484_742(): UInt16 { // block id: 743
    const var_1749137360484_824: Byte = 158;
    const var_1749137360484_829: UInt16 = 76;
    (func_1749137360484_747(namedParam_1749137360484_748: 25, namedParam_1749137360484_749: (),
        namedParam_1749137360484_750: var_1749137360484_824, namedParam_1749137360484_751: var_1749137360484_79) + 117) <<
        ((var_1749137360484_829) & 7)
}

public const func func_1749137360484_716(optionalParam_1749137360484_717!: UInt64 = 102,
    optionalParam_1749137360484_719!: UInt16 = 88, namedParam_1749137360484_721!: String): String { // block id: 722
    const var_1749137360484_726: String = "*q~[<_J`!8";
    if (var_1749137360484_586) {
        var_1749137360484_726
    } else {
        "kHI !vCug~"
    };
    const func func_1749137360484_738(): Int8 { // block id: 739
        const var_1749137360484_832: UInt16 = 197;
        func_1749137360484_742() % ((var_1749137360484_832) | 1);
        -123 << ((var_1749137360484_837) & 7)
    };

    const func func_1749137360484_730(namedParam_1749137360484_731!: UInt32, namedParam_1749137360484_732!: Int16,
        optionalParam_1749137360484_733!: Float64 = 12.0, namedParam_1749137360484_735!: Rune): String { // block id: 736
        func_1749137360484_738();
        false;
        """
2l>a*
Q]z6_
"""
    };

    func_1749137360484_730(namedParam_1749137360484_731: 136, namedParam_1749137360484_732: 21,
        namedParam_1749137360484_735: var_1749137360484_844)
}

@Deprecated
const func func_1749137360484_712(param_1749137360484_713: Int32): String { // block id: 714
    func_1749137360484_716(optionalParam_1749137360484_719: 56, namedParam_1749137360484_721: "_>h38\\?-Rt")
}

@Frozen
@Deprecated
public const func func_1749137360484_699(): UInt16 { // block id: 700
    const func func_1749137360484_702(optionalParam_1749137360484_703!: Int8 = -14): Int16 { // block id: 705
        47 >= (-28 - 38);
        const var_1749137360484_849: Int32 = -44;
        func_1749137360484_712(var_1749137360484_849);
        -36 + var_1749137360484_180
    };

    func_1749137360484_702(optionalParam_1749137360484_703: -38);
    113
}

@Frozen
internal const func func_1749137360484_694(optionalParam_1749137360484_695!: Int16 = 76): Float64 { // block id: 697
    func_1749137360484_699();
    const var_1749137360484_857: Float64 = -72.0;
    var_1749137360484_857
}

internal func func_1749137360484_660(
    namedParam_1749137360484_661!: (Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, 
        UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit)),
    namedParam_1749137360484_662!: Class_1749137360484_350,
    optionalParam_1749137360484_663!: (Range<UInt16>) -> Bool = {
        lambdaParameter_1749137360484_666: Range<UInt16> => false
    }, namedParam_1749137360484_671!: Float64): Option<Float64> { // block id: 672
    var var_1749137360484_684: Int32 = Int32(-62);
    match (Option<Bool>.None) {
        case _ => ()

        case _ => var_1749137360484_684 &= Int32(112)

        case _ => var_1749137360484_691
    };
    func_1749137360484_694();
    var var_1749137360484_873: (Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, 
        UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit)) = (Int8(UInt8(Int8(Int8(-48)))), ((UInt8(UInt8(19)) &
            127)..=(UInt8(UInt8(131)) & 127) : (Int64(115) | 1)), UInt16(UInt16(146)), ((UInt64(UInt64(149)) & 127)..=(UInt64(UInt64(60)) &
            127) : (Int64(-23) | 1)), Int16(103), r'Z', (((UInt8(UInt8(115)) & 127)..=(UInt8(UInt8(206)) & 127) : (Int64(Int8(36)) |
                1)), ((UInt8(UInt8(83)) & 127)..=(UInt8(UInt8(UInt8(35))) & 127) : (Int64(-67) | 1)), UInt32(41), UInt16(200),
            ()), (((UInt8(UInt8(252)) & 127)..=(UInt8(UInt8(202)) & 127) : (Int64(-29) | 1)), ((UInt8(UInt8(UInt8(186))) &
                127)..(UInt8(UInt8(91)) & 127) : (Int64(UInt8(212)) | 1)), UInt32(UInt16(134)), UInt16(UInt8(UInt8(39))),
            ()));
    if (var_1749137360484_863[6]) {
        ((var_1749137360484_873 as Option<Float64>) ?? var_1749137360484_916[8])
    } else {
        var_1749137360484_934
    }
}

@Deprecated
public open class Class_1749137360484_1071 {
    public init() { // block id: 1073

    }

    @Frozen
    static prop var_1749137360484_1264: (Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)) { // block id: 1265
        get() { // block id: 1267
            (Int8(-52), ((((UInt8(UInt8(197)) & 127)..(UInt8(UInt8(241)) & 127) : (Int64(-76) | 1)), ((UInt8(UInt8(189)) &
                            127)..(UInt8(UInt8(154)) & 127) : (Int64(-53) | 1)), UInt32(14), UInt16(200), ()), Int64(-58)))
        }
    }
    public static let var_1749137360484_1299: Option<Float64> = Option<Float64>.None
}

@Frozen
@Deprecated
public func func_1749137360484_651(param_1749137360484_652: Float64): Unit { // block id: 653
    var var_1749137360484_975: (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit) = (((UInt8(UInt8(242)) & 127)..=(UInt8(UInt8(43)) &
            127) : (Int64(13) | 1)), ((UInt8(UInt8(4)) & 127)..(UInt8(UInt8(143)) & 127) : (Int64(UInt32(UInt32(202))) |
            1)), UInt32(UInt16(185)), UInt16(UInt8(Int8(UInt8(161)))), ());
    var var_1749137360484_998: Option<Class_1749137360484_350> = (([([UInt64(177), UInt64(35), UInt64(22), UInt64(70),
        UInt64(206), UInt64(92), UInt64(73), UInt64(7), UInt64(12), UInt64(171)] as Float64), Option<Float64>.None,
        (Int32(22) as Float64), Option<Float64>.Some(Float64(22.0)), (UInt64(5) as Float64),
        Option<Float64>.Some(Float64(-12.0)), (Option<Rune>.None as Float64),
        ([Option<Rune>.Some(r'I'), Option<Rune>.None, Option<Rune>.Some(r'H'), Option<Rune>.None,
        Option<Rune>.Some(r'K'), Option<Rune>.None, Option<Rune>.None, Option<Rune>.None, Option<Rune>.None,
        Option<Rune>.None] as Float64), Option<Float64>.Some(Float64(77.0)),
        ([Option<Rune>.None, Option<Rune>.None, Option<Rune>.Some(r'C'), Option<Rune>.Some(r'2'), Option<Rune>.None,
        Option<Rune>.None, Option<Rune>.Some(r'V'), Option<Rune>.Some(r'r'), Option<Rune>.Some(r'3'), Option<Rune>.None] as Float64)] as Option<Float64>) as Class_1749137360484_350);
    (func_1749137360484_660(
        namedParam_1749137360484_661: (Option<(Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, 
                Range<UInt8>, UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit))>.None ?? (var_1749137360484_837,
            ((UInt8(var_1749137360484_73) & 127)..(UInt8(var_1749137360484_73) & 127) : (var_1749137360484_151 | 1)),
            UInt16(235), var_1749137360484_964, Int16(104), var_1749137360484_844, var_1749137360484_975,
            var_1749137360484_975)), namedParam_1749137360484_662: (var_1749137360484_998 ?? Class_1749137360484_350()),
        namedParam_1749137360484_671: var_1749137360484_112 + var_1749137360484_1053) ?? (var_1749137360484_1064 ?? [Float64(12.0),
        Float64(108.0), Float64(-88.0), Float64(109.0), Float64(-6.0), Float64(-97.0), Float64(-88.0), Float64(-60.0),
        Float64(-15.0), Float64(-19.0)])[4]);
    Class_1749137360484_1071.func_1749137360484_1076(namedParam_1749137360484_1077: var_1749137360484_1387)[0];
    var loopTimeVar_1749137360484_1400: Range<UInt64> = ((UInt64(UInt64(UInt32(246))) & 127)..(UInt64(UInt64(UInt64(196))) &
        127) : (Int64(-101) | 1));
    var loopTimeVar_1749137360484_1413: Int = 0;
    (Option<Unit>.Some(for (i in loopTimeVar_1749137360484_1400 where true) {
    }) ?? while (((false is Array<UInt64>)) && loopTimeVar_1749137360484_1413 < 100) {
        loopTimeVar_1749137360484_1413++;
        ()
    })
}

@Frozen
internal func func_1749137360484_65(param_1749137360484_66: Range<Int8>): (Int8, ((Range<UInt8>, Range<UInt8>, UInt32, 
    UInt16, Unit), Int64)) { // block id: 67
    var var_1749137360484_115: Float64 = Float64(-107.0);
    var var_1749137360484_148: UInt64 = UInt64(119);
    var var_1749137360484_254: (Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, 
        UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit)) = (Int8(Int8(UInt8(201))), ((UInt8(UInt8(158)) &
            127)..(UInt8(UInt8(176)) & 127) : (Int64(34) | 1)), UInt16(UInt16(UInt16(Int8(95)))), ((UInt64(UInt64(72)) &
            127)..(UInt64(UInt64(61)) & 127) : (Int64(-126) | 1)), Int16(UInt8(224)), r'M', (((UInt8(UInt8(169)) & 127)..(UInt8(UInt8(175)) &
                127) : (Int64(-107) | 1)), ((UInt8(UInt8(UInt8(182))) & 127)..=(UInt8(UInt8(35)) & 127) : (Int64(-67) | 1)),
            UInt32(Int16(Int8(45))), UInt16(Int16(-16)), ()), (((UInt8(UInt8(117)) & 127)..=(UInt8(UInt8(185)) & 127) : (Int64(-95) |
                1)), ((UInt8(UInt8(172)) & 127)..(UInt8(UInt8(Int8(-61))) & 127) : (Int64(26) | 1)), UInt32(126), UInt16(Int8(-31)),
            ()));
    let var_1749137360484_309: (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit) = (((UInt8(UInt8(26)) & 127)..=(UInt8(UInt8(43)) &
            127) : (Int64(UInt16(Int16(85))) | 1)), ((UInt8(UInt8(35)) & 127)..(UInt8(UInt8(Int8(20))) & 127) : (Int64(Int64(46)) |
            1)), UInt32(209), UInt16(191), ());
    let var_1749137360484_331: Range<UInt8> = ((UInt8(UInt8(Int8(Int8(Int8(-121))))) & 127)..=(UInt8(UInt8(159)) & 127) : (Int64(0) |
        1));
    (Int8(var_1749137360484_73), ((UInt8(UInt8(198)) & 127)..(UInt8(UInt8(11)) & 127) : (Int64(-98) | 1)), try { // block id: 77
            var_1749137360484_79;
            UInt16(9)
        } catch (_) { // block id: 82
            var var_1749137360484_85: UInt32 = UInt32(Int32(-50));
            var_1749137360484_85 ^= var_1749137360484_85
            UInt16(159)
        } finally { // block id: 90
            UInt16(132)
        }, match (Option<Rune>.None) {
            case caseVar_1749137360484_96 =>
                var_1749137360484_79;
                let var_1749137360484_100: Range<UInt64> = ((UInt64(UInt64(82)) & 127)..=(UInt64(UInt64(55)) & 127) : (Int64(Int16(-31)) |
                    1));
                var_1749137360484_100

            case caseVar_1749137360484_108: Option<Rune> =>
                var_1749137360484_112 = var_1749137360484_115
                ((UInt8(UInt8(215)) & 127)..(UInt8(var_1749137360484_73) & 127) : (Int64(-81) | 1));
                var var_1749137360484_127: UInt = UInt64(UInt32(15));
                const var_1749137360484_136: Int64 = 93;
                if (var_1749137360484_123) {
                    ((UInt64(var_1749137360484_127) & 127)..(UInt64(UInt64(231)) & 127) : (Int64(3) | 1))
                } else {
                    ((UInt64(var_1749137360484_127) & 127)..=(UInt64(UInt64(252)) & 127) : (var_1749137360484_136 | 1))
                }

            case caseVar_1749137360484_140: Range<Int32> =>
                var_1749137360484_123 ||= var_1749137360484_123
                ((UInt64(UInt64(161)) & 127)..(UInt64(var_1749137360484_148) & 127) : (var_1749137360484_151 | 1))

            case _ =>
                ((Int32(Int32(96)) & 127)..(Int32(Int32(29)) & 127) : (Int64(19) | 1));
                [UInt64(50), UInt64(120), UInt64(107), UInt64(170), UInt64(11), UInt64(180), UInt64(223), UInt64(133),
                    UInt64(127), UInt64(133)];
                ((UInt64(UInt64(69)) & 127)..(UInt64(UInt64(72)) & 127) : (Int64(119) | 1))
        }, match (var_1749137360484_163) {
            case -25.0 | 49.0 | -46.0 | 65.0 => Int16(41) ^ Int16(-24)

            case -44.0 =>
                var_1749137360484_176 %= ((var_1749137360484_176) | 1)
                var_1749137360484_180

            case -32.0 | -16.0 | 111.0 | 28.0 =>
                var_1749137360484_79;
                var var_1749137360484_187: Int16 = Int16(Int16(-38));
                var_1749137360484_187

            case caseVar_1749137360484_192: Range<UInt64> => Int16(-25) / ((Int16(47)) | 1)

            case _ =>
                var_1749137360484_112;
                var_1749137360484_123 ||= var_1749137360484_123
                Int16(-15)
        }, match (var_1749137360484_207) {
            case _ =>
                var_1749137360484_213;
                var_1749137360484_79;
                const var_1749137360484_221: Rune = r'A';
                var_1749137360484_221

            case caseVar_1749137360484_225: Array<Option<Rune>> =>
                let var_1749137360484_228: Array<UInt64> = [UInt64(Int64(UInt64(72))), UInt64(Int64(-113)),
                    UInt64(UInt8(238)), UInt64(138), UInt64(Int8(UInt8(Int8(44)))), UInt64(162),
                    UInt64(Int64(UInt32(Int8(-102)))), UInt64(126), UInt64(80), UInt64(Int16(UInt8(Int8(-27))))];
                var_1749137360484_228;
                var_1749137360484_254;
                r'8'

            case _ =>
                var_1749137360484_300;
                var_1749137360484_115;
                var var_1749137360484_304: Rune = r'y';
                var_1749137360484_304
        }, (var_1749137360484_309, Int64(-74))[0], (((UInt8(UInt8(91)) & 127)..(UInt8(UInt8(227)) & 127) : (Int64(15) | 1)),
            var_1749137360484_331, UInt32(23), UInt16(73), ()))[3];
    func func_1749137360484_354(param_1749137360484_355: UInt64): Class_1749137360484_350 { // block id: 356
        var var_1749137360484_360: Array<Class_1749137360484_350> = [Class_1749137360484_350(),
            Class_1749137360484_350(), Class_1749137360484_350(), Class_1749137360484_350(), Class_1749137360484_350(),
            Class_1749137360484_350(), Class_1749137360484_350(), Class_1749137360484_350(), Class_1749137360484_350(),
            Class_1749137360484_350()];
        var_1749137360484_360[6]
    };

    let var_1749137360484_1501: (Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64)) = (Int8(58), ((((UInt8(UInt8(224)) &
                    127)..=(UInt8(UInt8(123)) & 127) : (Int64(-46) | 1)), ((UInt8(UInt8(149)) & 127)..(UInt8(UInt8(179)) &
                    127) : (Int64(-110) | 1)), UInt32(Int32(-101)), UInt16(UInt16(239)), ()), Int64(UInt16(UInt8(227)))));
    func func_1749137360484_344(param_1749137360484_345: Option<Rune>, param_1749137360484_346: UInt16): (Int8, ((Range<UInt8>, 
        Range<UInt8>, UInt32, UInt16, Unit), Int64)) { // block id: 347
        var loopTimeVar_1749137360484_1526: Int64 = 0;
        while ((func_1749137360484_354(UInt64(0)).func_1749137360484_375<Unit>(
                optionalParam_1749137360484_379: var_1749137360484_1501,
                namedParam_1749137360484_401: var_1749137360484_813)) && loopTimeVar_1749137360484_1526 < 100) {
            loopTimeVar_1749137360484_1526++;
            Int16(-31);
            var_1749137360484_309[4]
        };
        var var_1749137360484_1601: Int32 = Int32(Int16(Int16(-22)));
        let var_1749137360484_1628: (Option<Array<Float64>>, Float32, Option<Rune>, Range<Int8>, (Int8, ((Range<UInt8>, 
            Range<UInt8>, UInt32, UInt16, Unit), Int64)), Class_1749137360484_1071) = (Option<Array<Float64>>.None,
            Float32(Float32(-24.0)), Option<Rune>.Some(r'R'), ((Int8(Int8(Int8(UInt8(35)))) & 127)..=(Int8(Int8(Int8(-32))) &
                127) : (Int64(Int8(-10)) | 1)), (Int8(-34), ((((UInt8(UInt8(247)) & 127)..=(UInt8(UInt8(59)) & 127) : (Int64(64) |
                            1)), ((UInt8(UInt8(110)) & 127)..=(UInt8(UInt8(26)) & 127) : (Int64(-110) | 1)), UInt32(17),
                        UInt16(194), ()), Int64(UInt64(98)))), Class_1749137360484_1071());
        (match (try { // block id: 1534
            [false, false, true, var_1749137360484_786, false, false, true, var_1749137360484_786, var_1749137360484_123,
                var_1749137360484_123]
        } catch (e: Exception) { // block id: 1546
            [true, false, false, true, false, true, true, false, false, false]
        } finally { // block id: 1548
            var_1749137360484_863
        }) {
            case _ =>
                var var_1749137360484_1555: Int8 = Int8(Int8(53));
                var_1749137360484_1555 ^= var_1749137360484_837
                Option<(Int8, ((Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit), Int64))>.Some(var_1749137360484_1501)

            case _ =>
                if (var_1749137360484_786) {
                    var_1749137360484_792
                } else {
                    var_1749137360484_792
                };
                var_1749137360484_1053 *= Float64(-22.0)
                if (var_1749137360484_123) {
                    var_1749137360484_1574
                } else {
                    var_1749137360484_1574
                }
        } ?? try { // block id: 1599
            var_1749137360484_1601;
            var_1749137360484_1607 %= ((UInt64(18)) | 1)
            (Option<Array<Float64>>.None, var_1749137360484_1613, var_1749137360484_207, ((Int8(Int8(6)) & 127)..(Int8(Int8(29)) &
                    127) : (Int64(-46) | 1)), var_1749137360484_1501, Class_1749137360484_1071())
        } finally { // block id: 1622
            ();
            var_1749137360484_1171 & var_1749137360484_1171;
            var_1749137360484_1628
        }[4])
    };

    var var_1749137360484_1666: (Option<Class_1749137360484_350>, Option<Option<Range<UInt8>>>, Array<Bool>, Option<Float64>, 
        Rune, UInt8, Option<Bool>, Array<Option<Float64>>) = (Option<Class_1749137360484_350>.Some(
            Class_1749137360484_350()), (Class_1749137360484_1071() as Option<Range<UInt8>>), [true, false,
            (Option<Option<Range<UInt8>>>.None is Float32), true, true, true, false,
            (((((UInt8(UInt8(104)) & 127)..(UInt8(UInt8(223)) & 127) : (Int64(120) | 1)), ((UInt8(UInt8(182)) & 127)..(UInt8(UInt8(105)) &
                    127) : (Int64(107) | 1)), UInt32(13), UInt16(180), ()), Int64(-109)) is (Range<UInt16>) -> Bool),
            (UInt8(81) is Float32),
            ((Class_1749137360484_1071() is ((Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, 
                Range<UInt8>, UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit)),
            Class_1749137360484_350, (Range<UInt16>) -> Bool, Float64) -> Option<Float64>) is Option<Range<UInt8>>)], (((Int64(Int64(40)) &
            127)..(Int64(Int64(-74)) & 127) : (Int64(Int16(-82)) | 1)) as Float64), r'o', UInt8(UInt8(73)),
        Option<Bool>.Some((Int16(-62) is Option<Option<Float64>>)), [(((Int8(54), ((((UInt8(UInt8(202)) & 127)..(UInt8(UInt8(53)) &
                            127) : (Int64(-123) | 1)), ((UInt8(UInt8(38)) & 127)..=(UInt8(UInt8(174)) & 127) : (Int64(-127) |
                            1)), UInt32(226), UInt16(197), ()), Int64(119))), Option<Array<Float64>>.None, [UInt64(203),
                UInt64(172), UInt64(53), UInt64(173), UInt64(143), UInt64(138), UInt64(10), UInt64(143), UInt64(52),
                UInt64(113)], r'b', Option<Float64>.None, Float32(-31.0)) as Float64),
            (VArray<Bool, $6>({i => true}) as Float64), Option<Float64>.Some(Float64(-66.0)), Option<Float64>.None,
            Option<Float64>.Some(Float64(Float32(28.0))), Option<Float64>.None, Option<Float64>.Some(Float64(108.0)),
            (VArray<Float64, $6>({i => Float64(65.0)}) as Float64), Option<Float64>.Some(Float64(Float64(105.0))),
            ([Float64(-40.0), Float64(-74.0), Float64(77.0), Float64(100.0), Float64(-30.0), Float64(15.0),
            Float64(102.0), Float64(31.0), Float64(108.0), Float64(-9.0)] as Float64)]);
    var var_1749137360484_1819: UInt32 = UInt32(Int16(UInt16(132)));
    func_1749137360484_344(match (try { // block id: 1664
        var_1749137360484_1666
    } catch (e: Exception) { // block id: 1784
        ();
        var_1749137360484_1666
    }) {
        case _: (Bool, UInt64, Array<Option<Float64>>) =>
            if (var_1749137360484_586) {
                var_1749137360484_207
            } else {
                var_1749137360484_207
            }

        case caseVar_1749137360484_1796 =>
            var_1749137360484_691;
            Option<Rune>.None

        case _ => Option<Rune>.None
    }, match ((Option<Option<Range<UInt8>>>.Some(Option<Range<UInt8>>.None) as Array<Float64>)) {
        case caseVar_1749137360484_1810: Array<UInt64> => UInt16(140)

        case caseVar_1749137360484_1815 =>
            var_1749137360484_1819 -= var_1749137360484_813
            ((Int64(Int64(49)) & 127)..=(Int64(Int64(-115)) & 127) : (Int64(-18) | 1));
            UInt16(83) & UInt16(120)

        case _ =>
            ((Int16(var_1749137360484_300) & 127)..(Int16(Int16(61)) & 127) : (var_1749137360484_151 | 1));
            var_1749137360484_691;
            UInt16(118)

        case _ => UInt16(73)
    })
}

@Frozen
public func func_1749137360484_59<T0>(param_1749137360484_60: Array<Option<Rune>>): ((Range<UInt8>, Range<UInt8>, 
    UInt32, UInt16, Unit), Int64) { // block id: 61
    var var_1749137360484_1847: Range<Int8> = ((Int8(Int8(3)) & 127)..=(Int8(Int8(82)) & 127) : (Int64(24) | 1));
    (try { // block id: 1843
        if (true) {
            var_1749137360484_1847
        } else {
            ((Int8(Int8(43)) & 127)..(Int8(Int8(98)) & 127) : (Int64(-103) | 1))
        }
    } catch (e: Exception) { // block id: 1850
        ((Int8(Int8(32)) & 127)..=(Int8(Int8(7)) & 127) : (var_1749137360484_151 | 1))
    } |> func_1749137360484_65)[0];
    let var_1749137360484_1859: Option<Class_1749137360484_350> = ((((UInt8(UInt8(164)) & 127)..(UInt8(UInt8(Int8(-89))) &
            127) : (Int64(-94) | 1)), ((UInt8(UInt8(244)) & 127)..=(UInt8(UInt8(249)) & 127) : (Int64(-42) | 1)), UInt32(246),
        UInt16(Int8(Int8(108))), ()) as Class_1749137360484_350);
    const var_1749137360484_1917: Float64 = -46.0;
    var var_1749137360484_1947: Class_1749137360484_1071 = Class_1749137360484_1071();
    try { // block id: 1857
        var_1749137360484_1859;
        let var_1749137360484_1876: (Option<Array<Float64>>, Float32, Option<Rune>, Range<Int8>, (Int8, ((Range<UInt8>, 
            Range<UInt8>, UInt32, UInt16, Unit), Int64)), Class_1749137360484_1071) = (Option<Array<Float64>>.Some(
                [Float64(-114.0), Float64(106.0), Float64(-103.0), Float64(4.0), Float64(-93.0), Float64(-56.0),
                    Float64(0.0), Float64(-68.0), Float64(109.0), Float64(95.0)]), Float32(73.0), (Option<Class_1749137360484_350>
                .None as Rune), ((Int8(Int8(28)) & 127)..=(Int8(Int8(75)) & 127) : (Int64(118) | 1)), (Int8(117), ((((UInt8(UInt8(12)) &
                            127)..=(UInt8(UInt8(145)) & 127) : (Int64(-76) | 1)), ((UInt8(UInt8(221)) & 127)..=(UInt8(UInt8(7)) &
                            127) : (Int64(52) | 1)), UInt32(16), UInt16(4), ()), Int64(Int8(35)))),
            Class_1749137360484_1071());
        const var_1749137360484_1920: Float64 = -67.0;
        try { // block id: 1874
            var_1749137360484_1876
        } finally { // block id: 1899
            var_1749137360484_1902 &&= false
            (Option<Array<Float64>>.Some(
                    [Float64(-9.0), Float64(-30.0), var_1749137360484_112, var_1749137360484_1053,
                        var_1749137360484_1053, var_1749137360484_1053, Float64(-11.0), var_1749137360484_1053,
                        var_1749137360484_1917, var_1749137360484_1920]), Float32(111.0), Option<Rune>.None, ((Int8(Int8(-5)) &
                    127)..(Int8(var_1749137360484_837) & 127) : (var_1749137360484_151 | 1)), (var_1749137360484_837, ((((UInt8(var_1749137360484_1934) &
                                127)..(UInt8(var_1749137360484_73) & 127) : (Int64(-44) | 1)), ((UInt8(UInt8(211)) & 127)..=(UInt8(var_1749137360484_1934) &
                                127) : (Int64(-88) | 1)), UInt32(219), UInt16(68), ()), var_1749137360484_151)),
                var_1749137360484_1947)
        }
    } catch (e: Exception) { // block id: 1949
        var_1749137360484_1953[3];
        [Option<Float64>.None, Option<Float64>.Some(Float64(-52.0)), Option<Float64>.Some(var_1749137360484_112),
            var_1749137360484_934, Option<Float64>.None, Option<Float64>.Some(var_1749137360484_1053),
            var_1749137360484_934, Option<Float64>.None, Option<Float64>.Some(var_1749137360484_112),
            Option<Float64>.None];
        const var_1749137360484_2022: Int8 = 72;
        (var_1749137360484_1064, Float32(-100.0), Option<Rune>.Some(var_1749137360484_844), ((Int8(var_1749137360484_2022) &
                127)..(Int8(Int8(-86)) & 127) : (Int64(-124) | 1)), (var_1749137360484_2022, var_1749137360484_1344),
            var_1749137360484_1947)
    } finally { // block id: 2030
        try { // block id: 2032
            Option<Option<Float64>>.Some(Option<Float64>.None)
        } finally { // block id: 2035
            ();
            var_1749137360484_1902 ||= var_1749137360484_1902
            var_1749137360484_1248
        };
        ();
        (var_1749137360484_1064, Float32(-119.0), Option<Rune>.None, var_1749137360484_1847, (Int8(-115), ((var_1749137360484_2052,
                        ((UInt8(UInt8(228)) & 127)..=(UInt8(UInt8(152)) & 127) : (Int64(17) | 1)), var_1749137360484_813,
                        UInt16(210), ()), Int64(-49))), var_1749137360484_1947)
    };
    var var_1749137360484_2075: Byte = UInt8(189);
    var var_1749137360484_2092: (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit) = (((UInt8(UInt8(238)) & 127)..(UInt8(UInt8(25)) &
            127) : (Int64(69) | 1)), ((UInt8(UInt8(13)) & 127)..=(UInt8(UInt8(238)) & 127) : (Int64(-64) | 1)), UInt32(131),
        UInt16(UInt8(48)), ());
    let var_1749137360484_2101: Int64 = Int64(Int32(-11));
    try { // block id: 2067
        var_1749137360484_1344
    } finally { // block id: 2069
        try { // block id: 2071
            ();
            var_1749137360484_2075 ^ var_1749137360484_1934;
            ((Int16(Int16(-58)) & 127)..(Int16(Int16(124)) & 127) : (Int64(113) | 1))
        } finally { // block id: 2079
            ();
            var_1749137360484_79;
            ((Int16(Int16(75)) & 127)..(Int16(Int16(-41)) & 127) : (Int64(96) | 1))
        };
        try { // block id: 2087
            var_1749137360484_1344
        } catch (_) { // block id: 2089
            (var_1749137360484_2092, var_1749137360484_2101)
        }
    }
}

@Frozen
public func func_1749137360484_51(param_1749137360484_52: Float32): Array<Option<Rune>> { // block id: 53
    let var_1749137360484_2106: Array<Option<Rune>> = [Option<Rune>.None,
        ((((UInt8(UInt8(6)) & 127)..(UInt8(UInt8(21)) & 127) : (Int64(34) | 1)), ((UInt8(UInt8(225)) & 127)..=(UInt8(UInt8(139)) &
            127) : (Int64(-108) | 1)), UInt32(UInt8(6)), UInt16(Int16(-101)), ()) as Rune), Option<Rune>.None,
        ((Option<Range<UInt8>>.Some(((UInt8(UInt8(196)) & 127)..=(UInt8(UInt8(254)) & 127) : (Int64(123) | 1))) as Option<Float64>) as Rune),
        (() as Rune), Option<Rune>.Some(r'F'), (Class_1749137360484_350() as Rune), Option<Rune>.Some(r't'),
        Option<Rune>.None,
        (((Int16(Int16(UInt16(149))) & 127)..(Int16(Int16(Int16(84))) & 127) : (Int64(120) | 1)) as Rune)];
    (var_1749137360484_2106 |> func_1749137360484_59<Option<Array<Float64>>>)[0][4];
    let var_1749137360484_2173: Range<Int8> = ((Int8(Int8(77)) & 127)..(Int8(Int8(-92)) & 127) : (Int64(-29) | 1));
    let var_1749137360484_2185: Option<(Option<(Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, 
        Range<UInt8>, UInt32, UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit))>, Array<UInt64>, 
        Float64, Array<Option<Rune>>, Array<Option<Rune>>, Bool)> = (((Int8(Int8(-114)) & 127)..=(Int8(Int8(113)) & 127) : (Int64(15) |
        1)) as (Option<(Int8, Range<UInt8>, UInt16, Range<UInt64>, Int16, Rune, (Range<UInt8>, Range<UInt8>, UInt32, 
        UInt16, Unit), (Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit))>, Array<UInt64>, Float64, Array<Option<Rune>>, 
        Array<Option<Rune>>, Bool));
    ((var_1749137360484_2160 ?? (var_1749137360484_2167, Option<Float64>.None, Class_1749137360484_1071(),
        var_1749137360484_2173, Option<Float64>.None))[0] ?? (var_1749137360484_2185 ?? var_1749137360484_2192)[4])
}

public func func_1749137360484_31(param_1749137360484_32: UInt64): Bool { // block id: 33
    let var_1749137360484_2330: (Float32) -> Array<Option<Rune>> = func_1749137360484_51;
    ((var_1749137360484_1613 |> var_1749137360484_2330)[0] ?? r'O');
    (Option<Range<UInt8>>.Some(
        (Option<Range<UInt8>>.Some(
            ((UInt8(UInt8(23)) & 127)..=(UInt8(var_1749137360484_73) & 127) : (var_1749137360484_151 | 1))) ??
            var_1749137360484_2052)) is Bool)
}

@Deprecated
public func func_1749137360484_26(param_1749137360484_27: Int16): Int64 { // block id: 28
    let var_1749137360484_2349: (UInt64) -> Bool = func_1749137360484_31;
    if (((Option<UInt64>.Some(var_1749137360484_1607) ?? var_1749137360484_1229) |> var_1749137360484_2349)) { // block id: 2359
        try { // block id: 2361
            var_1749137360484_79;
            var_1749137360484_691;
            Float64(-19.0)
        } finally { // block id: 2365
            ();
            ();
            var_1749137360484_1053
        }
    } else if (var_1749137360484_1902) { // block id: 2370
        r'o';
        try { // block id: 2373
            if (true) {
                r'P'
            } else {
                r'z'
            }
        } catch (_) { // block id: 2378
            if (var_1749137360484_123) {
                r'q'
            } else {
                r'f'
            }
        } finally { // block id: 2383
            ();
            ();
            if (var_1749137360484_586) {
                var_1749137360484_844
            } else {
                var_1749137360484_844
            }
        };
        Float64(var_1749137360484_112)
    } else { // block id: 2392
        Float64(var_1749137360484_1053)
    };
    Int64(-128)
}

main(): Int64 {
    try {
        let var_1749137360484_2445: ?(Range<UInt8>, Range<UInt8>, UInt32, UInt16, Unit) = (Option<Unit>.None as (Range<UInt8>, 
            Range<UInt8>, UInt32, UInt16, Unit));
        func func_1749137360484_20(namedParam_1749137360484_21!: Class_1749137360484_10): Class_1749137360484_10 { // block id: 22
            var var_1749137360484_2482: Class_1749137360484_10 = Class_1749137360484_10();
            try { // block id: 24
                let var_1749137360484_2397: (Int16) -> Int64 = func_1749137360484_26;
                Int16(-53) |> var_1749137360484_2397;
                Class_1749137360484_10()
            } finally { // block id: 2401
                (var_1749137360484_2408 ?? var_1749137360484_2413);
                let var_1749137360484_2459: Int64 = Int64(-65);
                (var_1749137360484_2445 ?? (((UInt8(UInt8(170)) & 127)..=(UInt8(UInt8(143)) & 127) : (var_1749137360484_2453 |
                        1)), ((UInt8(UInt8(121)) & 127)..(UInt8(UInt8(31)) & 127) : (var_1749137360484_2459 | 1)),
                    UInt32(12), var_1749137360484_176, ()));
                try { // block id: 2465
                    var_1749137360484_2468 |= var_1749137360484_1171
                    ((Int16(Int16(-40)) & 127)..(Int16(Int16(-12)) & 127) : (Int64(30) | 1));
                    Class_1749137360484_10()
                } finally { // block id: 2476
                    var_1749137360484_79;
                    var var_1749137360484_2479: Int = Int64(91);
                    var_1749137360484_2479;
                    var_1749137360484_2482
                }
            }
        };

        func_1749137360484_20(namedParam_1749137360484_21: Class_1749137360484_10()).var_1749137360484_2486
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1749137360484_1071 {
    static func func_1749137360484_1076(namedParam_1749137360484_1077!: Float32,
        optionalParam_1749137360484_1078!: (UInt8, Unit, UInt8, Unit) -> UInt16 = func_1749137360484_747): (Bool, 
        UInt64, Array<Option<Float64>>) { // block id: 1085
        let var_1749137360484_1120: Range<UInt8> = ((UInt8(UInt8(Int8(17))) & 127)..=(UInt8(UInt8(83)) & 127) : (Int64(-9) |
            1));
        let var_1749137360484_1127: Range<UInt8> = ((UInt8(UInt8(87)) & 127)..(UInt8(UInt8(UInt8(UInt8(UInt8(29))))) &
            127) : (Int64(112) | 1));
        ((var_1749137360484_1097 ?? (var_1749137360484_151 as Range<UInt8>)) ?? if (try { // block id: 1106
            var_1749137360484_786
        } finally { // block id: 1108
            r'w';
            var_1749137360484_176 != var_1749137360484_176
        }) {
            if (var_1749137360484_123) { // block id: 1115
                ();
                if (true) {
                    var_1749137360484_1120
                } else {
                    var_1749137360484_1127
                }
            } else if (false) { // block id: 1136
                UInt64(71) * var_1749137360484_1140;
                ((UInt8(UInt8(181)) & 127)..=(UInt8(UInt8(244)) & 127) : (Int64(97) | 1))
            } else { // block id: 1145
                let var_1749137360484_1147: Option<Class_1749137360484_350> = Option<Class_1749137360484_350>.None;
                var_1749137360484_1147;
                ((UInt8(UInt8(143)) & 127)..(UInt8(var_1749137360484_73) & 127) : (Int64(38) | 1))
            }
        } else {
            (((UInt8(UInt8(95)) & 127)..(UInt8(UInt8(210)) & 127) : (Int64(80) | 1)), ((UInt8(UInt8(216)) & 127)..=(UInt8(UInt8(232)) &
                    127) : (Int64(-33) | 1)), UInt32(53), UInt16(175), var_1749137360484_79)[1]
        });
        let var_1749137360484_1192: Option<Class_1749137360484_350> = Option<Class_1749137360484_350>.Some(
            Class_1749137360484_350());
        let var_1749137360484_1204: Option<Float64> = Option<Float64>.None;
        const var_1749137360484_1295: Bool = true;
        let var_1749137360484_1356: Array<UInt64> = [UInt64(UInt32(90)), UInt64(28), UInt64(UInt8(52)),
            UInt64(UInt64(105)), UInt64(123), UInt64(Int64(Int16(73))), UInt64(231), UInt64(62),
            UInt64(Int16(Int16(-22))), UInt64(Int16(49))];
        (match (match (Option<Range<UInt8>>.None) {
                case _ =>
                    var_1749137360484_691;
                    ((Int32(var_1749137360484_1171) & 127)..(Int32(var_1749137360484_1171) & 127) : (var_1749137360484_151 |
                        1))
            }) {
                case caseVar_1749137360484_1178: Array<Class_1749137360484_350> => false

                case _ =>
                    var_1749137360484_79;
                    ();
                    var_1749137360484_786
            }, match ((var_1749137360484_1192, var_1749137360484_1097, [false, false, true, true, true, false, true,
                    true, false, true], Option<Float64>.None, var_1749137360484_844, var_1749137360484_73,
                var_1749137360484_473, [var_1749137360484_934, var_1749137360484_1204, Option<Float64>.None,
                    var_1749137360484_1204, var_1749137360484_934, Option<Float64>.Some(var_1749137360484_1053),
                    Option<Float64>.Some(var_1749137360484_1053), var_1749137360484_1204, var_1749137360484_934,
                    var_1749137360484_934])[4]) {
                case caseVar_1749137360484_1219: (Option<Class_1749137360484_350>, Option<Option<Range<UInt8>>>, Array<Bool>, 
                        Option<Float64>, Rune, UInt8, Option<Bool>, Array<Option<Float64>>) =>
                    ((Int64(Int64(-80)) & 127)..(Int64(Int64(-86)) & 127) : (Int64(-104) | 1));
                    var_1749137360484_79;
                    var_1749137360484_1140 >> ((var_1749137360484_1229) & 7)

                case r'h' | r'y' => var_1749137360484_1140

                case r'9' | r'q' | r'T' | r'Y' =>
                    ();
                    var_1749137360484_1140

                case _ =>
                    var_1749137360484_1171;
                    UInt64(85)
            }, [(var_1749137360484_1248 ?? Option<Float64>.Some(var_1749137360484_1053)),
                (var_1749137360484_1264, var_1749137360484_1064, [UInt64(244), UInt64(158), UInt64(235), UInt64(155),
                    UInt64(90), UInt64(186), UInt64(40), UInt64(241), UInt64(13), UInt64(60)], r'T',
                Option<Float64>.Some(var_1749137360484_112), Float32(-104.0))[4], if (false) {
                Option<Float64>.Some(var_1749137360484_1053)
            } else {
                Option<Float64>.None
            }, if (var_1749137360484_1295) {
                var_1749137360484_934
            } else {
                var_1749137360484_1299
            }, if (false) { // block id: 1303
                var_1749137360484_123 &&= false
                Option<Float64>.None
            } else if (true) { // block id: 1309
                var_1749137360484_176 ^= UInt16(210)
                Option<Float64>.Some(var_1749137360484_1053)
            } else { // block id: 1315
                if (false) {
                    var_1749137360484_934
                } else {
                    Option<Float64>.None
                }
            }, (var_1749137360484_1248 ?? var_1749137360484_1299), if (true) { // block id: 1325
                Option<Option<Float64>>.Some(var_1749137360484_1204);
                if (var_1749137360484_586) {
                    var_1749137360484_934
                } else {
                    var_1749137360484_1204
                }
            } else { // block id: 1332
                var_1749137360484_112;
                if (false) {
                    var_1749137360484_1204
                } else {
                    Option<Float64>.Some(var_1749137360484_1053)
                }
            },
                ((Int8(-37), var_1749137360484_1344), Option<Array<Float64>>.None, var_1749137360484_1356,
                var_1749137360484_844, var_1749137360484_934, Float32(-122.0))[4], if (var_1749137360484_786) {
                Option<Float64>.Some(var_1749137360484_112)
            } else {
                Option<Float64>.None
            }, var_1749137360484_1299])
    }
}
