/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1734529630419_38: UInt16 = UInt16(23)
public const var_1734529630419_61: Int16 = 67
public const var_1734529630419_82: Unit = ()
public const var_1734529630419_85: Float64 = 118.0
internal var var_1734529630419_95: Class_1734529630419_90 = Class_1734529630419_90()
@Deprecated
public var var_1734529630419_120: Class_1734529630419_105 = Class_1734529630419_105()
public let var_1734529630419_145: UInt16 = UInt16(118)
public var var_1734529630419_149: Int64 = Int64(Int32(UInt32(29)))
@Deprecated
internal let var_1734529630419_156: Range<UInt16> = ((UInt16(UInt16(88)) & 127)..=(UInt16(UInt16(UInt8(Int8(99)))) & 127) : (Int64(-11) |
    1))
let var_1734529630419_174: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1734529630419_189: Int32 = Int32(55)
@Deprecated
public var var_1734529630419_201: Option<UInt8> = Option<UInt8>.None
@Deprecated
let var_1734529630419_227: (Bool, Range<UInt32>, Bool, Range<Int64>, Range<UInt8>) = (false, ((UInt32(UInt32(70)) & 127)..=(UInt32(UInt32(157)) &
        127) : (Int64(19) | 1)), true, ((Int64(Int64(Int64(-28))) & 127)..(Int64(Int64(7)) & 127) : (Int64(UInt64(UInt16(217))) |
        1)), ((UInt8(UInt8(211)) & 127)..(UInt8(UInt8(150)) & 127) : (Int64(-71) | 1)))
public var var_1734529630419_242: Rune = r'v'
@Deprecated
public var var_1734529630419_258: Int = Int64(Int8(-116))
public let var_1734529630419_291: (Range<Int8>, Enum_1734529630419_16, Option<Range<Int64>>, Int8, UInt64, Array<Unit>) = (((Int8(Int8(-48)) &
        127)..(Int8(Int8(UInt8(Int8(52)))) & 127) : (Int64(-11) | 1)),
    Enum_1734529630419_16.enumValue_1734529630419_300(
        [UInt64(UInt32(85)), UInt64(UInt64(70)), UInt64(UInt8(217)), UInt64(78), UInt64(UInt32(236)), UInt64(Int16(84)),
            UInt64(148), UInt64(236), UInt64(45), UInt64(230)], Float32(6.0),
        ((((UInt32(UInt32(11)) & 127)..=(UInt32(UInt32(50)) & 127) : (Int64(88) | 1)) is Range<Int8>), ((UInt32(UInt32(17)) &
                127)..(UInt32(UInt32(3)) & 127) : (Int64(-77) | 1)), false, ((Int64(Int64(33)) & 127)..(Int64(Int64(49)) &
                127) : (Int64(-42) | 1)), ((UInt8(UInt8(113)) & 127)..=(UInt8(UInt8(134)) & 127) : (Int64(74) | 1)))), Option<Range<Int64>>
        .None, Int8(12), UInt64(Int32(80)), [(), (), (), (), (), (), (), (), (), ()])
@Deprecated
public var var_1734529630419_362: Enum_1734529630419_16 = Enum_1734529630419_16.enumValue_1734529630419_364(
    ((Int32(Int32(68)) & 127)..=(Int32(Int32(33)) & 127) : (Int64(116) | 1)), Int64(-99),
    ((Int8(Int8(UInt8(205))) & 127)..=(Int8(Int8(-23)) & 127) : (Int64(UInt8(172)) | 1)), (() as UInt8))
@Deprecated
public const var_1734529630419_385: Unit = ()
public const var_1734529630419_401: UInt = 31
public let var_1734529630419_407: Option<Range<Int64>> = ((((Int8(Int8(108)) & 127)..=(Int8(Int8(89)) & 127) : (Int64(-17) |
    1)) as Range<Int64>) as Range<Int64>)
public var var_1734529630419_457: Bool = (Float64(Float32(24.0)) is Interface_1734529630419_111)
public const var_1734529630419_510: Unit = ()
@Deprecated
public let var_1734529630419_523: Range<UInt32> = ((UInt32(UInt32(34)) & 127)..=(UInt32(UInt32(239)) & 127) : (Int64(-98) |
    1))
public var var_1734529630419_533: (Range<Int8>, Enum_1734529630419_16, Option<Range<Int64>>, Int8, UInt64, Array<Unit>) = (((Int8(Int8(UInt8(UInt8(61)))) &
        127)..=(Int8(Int8(31)) & 127) : (Int64(-9) | 1)), Enum_1734529630419_16.enumValue_1734529630419_542(
        func_1734529630419_79), Option<Range<Int64>>.None, Int8(-77), UInt64(91), [(), (), (), (), (), (), (), (), (),
        ()])
@Deprecated
var var_1734529630419_556: UInt32 = UInt32(UInt32(Int16(78)))
var var_1734529630419_565: UInt8 = UInt8(171)
@Deprecated
public var var_1734529630419_591: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1734529630419_605: Option<Range<UInt16>> = Option<Range<UInt16>>.None
public let var_1734529630419_626: Array<Range<Int64>> = [((Int64(Int64(79)) & 127)..(Int64(Int64(122)) & 127) : (Int64(-8) |
    1)), ((Int64(Int64(-108)) & 127)..(Int64(Int64(30)) & 127) : (Int64(-42) | 1)),
    ((Int64(Int64(-98)) & 127)..(Int64(Int64(-44)) & 127) : (Int64(106) | 1)),
    ((Int64(Int64(-95)) & 127)..(Int64(Int64(86)) & 127) : (Int64(-22) | 1)),
    ((Int64(Int64(-13)) & 127)..=(Int64(Int64(58)) & 127) : (Int64(-76) | 1)),
    ((Int64(Int64(96)) & 127)..(Int64(Int64(51)) & 127) : (Int64(90) | 1)),
    ((Int64(Int64(-98)) & 127)..=(Int64(Int64(-116)) & 127) : (Int64(100) | 1)),
    ((Int64(Int64(73)) & 127)..(Int64(Int64(-71)) & 127) : (Int64(-106) | 1)),
    ((Int64(Int64(8)) & 127)..(Int64(Int64(-32)) & 127) : (Int64(-118) | 1)),
    ((Int64(Int64(28)) & 127)..=(Int64(Int64(-26)) & 127) : (Int64(80) | 1))]
@Deprecated
public const var_1734529630419_636: Bool = true
internal var var_1734529630419_660: (Array<Unit>, Unit, Class_1734529630419_105, (UInt16, (Option<Enum_1734529630419_16>, 
    Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8), Range<UInt32>, Unit, Int16) = ([(), (), (), (), (),
        (), (), (), (), ()], (), Class_1734529630419_105(), (UInt16(UInt8(49)), (Option<Enum_1734529630419_16>.None,
            Float64(-59.0), Float32(41.0)), Enum_1734529630419_16.enumValue_1734529630419_673(Option<UInt8>.None), Int32(UInt16(28)),
        Int16(UInt16(8)), UInt8(UInt8(252))), ((UInt32(UInt32(130)) & 127)..(UInt32(UInt32(170)) & 127) : (Int64(76) | 1)),
    (), Int16(Int16(Int8(Int8(-100)))))
public let var_1734529630419_738: ?Enum_1734529630419_16 = Option<Enum_1734529630419_16>.None
public let var_1734529630419_746: Unit = ()
public const var_1734529630419_759: Int32 = -120
public var var_1734529630419_766: Range<UInt32> = ((UInt32(UInt32(UInt32(UInt32(64)))) & 127)..(UInt32(UInt32(135)) & 127) : (Int64(21) |
    1))
public let var_1734529630419_775: Range<Int64> = ((Int64(Int64(36)) & 127)..=(Int64(Int64(45)) & 127) : (Int64(87) | 1))
public var var_1734529630419_784: ((UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
    Int32, Int16, UInt8), Class_1734529630419_90, Range<Int64>, Class_1734529630419_90, Unit, Option<Range<Int64>>, (UInt16, 
    (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8)) = ((UInt16(84), (Option<Enum_1734529630419_16>
                .None, Float64(-62.0), Float32(-81.0)), Enum_1734529630419_16.enumValue_1734529630419_719, Int32(-111),
        Int16(38), UInt8(UInt8(UInt8(46)))), Class_1734529630419_90(), ((Int64(Int64(30)) & 127)..=(Int64(Int64(70)) &
        127) : (Int64(9) | 1)), Class_1734529630419_90(), (), (((Int32(Int32(UInt16(133))) & 127)..=(Int32(Int32(-31)) &
        127) : (Int64(33) | 1)) as Range<Int64>), (UInt16(Int16(113)), (Option<Enum_1734529630419_16>.None, Float64(Float64(-32.0)),
            Float32(Float32(-119.0))), Enum_1734529630419_16.enumValue_1734529630419_719, Int32(97), Int16(UInt16(Int16(-41))),
        UInt8(Int8(-55))))
public var var_1734529630419_835: Float32 = Float32(Float32(14.0))
public var var_1734529630419_903: Range<UInt8> = ((UInt8(UInt8(113)) & 127)..(UInt8(UInt8(243)) & 127) : (Int64(95) | 1))
public var var_1734529630419_925: Int64 = Int64(104)
public var var_1734529630419_929: (Range<UInt32>, Float64, (Range<Int8>, Enum_1734529630419_16, Option<Range<Int64>>, 
    Int8, UInt64, Array<Unit>), Range<UInt16>, Option<Range<UInt16>>, Range<Int64>, Float64, Class_1734529630419_90) = (((UInt32(UInt32(0)) &
        127)..=(UInt32(UInt32(163)) & 127) : (Int64(-66) | 1)), Float64(111.0), (((Int8(Int8(16)) & 127)..(Int8(Int8(-95)) &
            127) : (Int64(-126) | 1)), Enum_1734529630419_16.enumValue_1734529630419_719, (((), Int64(41), ((UInt16(UInt16(221)) &
                127)..=(UInt16(UInt16(6)) & 127) : (Int64(16) | 1))) as Range<Int64>), Int8(18), UInt64(UInt32(40)), [(),
            (), (), (), (), (), (), (), (), ()]), ((UInt16(UInt16(107)) & 127)..=(UInt16(UInt16(193)) & 127) : (Int64(89) |
        1)), Option<Range<UInt16>>.None, ((Int64(Int64(12)) & 127)..(Int64(Int64(UInt32(UInt32(104)))) & 127) : (Int64(Int64(UInt16(177))) |
        1)), Float64(Float32(Float32(94.0))), Class_1734529630419_90())
public let var_1734529630419_1037: Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
    Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)> = Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, 
        Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)>.None
public let var_1734529630419_1043: Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
    Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)> = Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, 
        Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)>.None
public let var_1734529630419_1052: Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
    Enum_1734529630419_16, Int32, Int16, UInt8)> = Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
        Enum_1734529630419_16, Int32, Int16, UInt8)>.None
public const var_1734529630419_1081: UInt8 = 193
public let var_1734529630419_1098: Int8 = Int8(UInt8(185))
public var var_1734529630419_1105: Bool = (((UInt32(UInt32(29)) & 127)..(UInt32(UInt32(Int8(Int8(-45)))) & 127) : (Int64(UInt16(93)) |
    1)) is Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, 
    UInt8)>)
public let var_1734529630419_1131: Float64 = Float64(-38.0)
public let var_1734529630419_1166: ??Enum_1734529630419_16 = (Class_1734529630419_90() as Option<Enum_1734529630419_16>)
let var_1734529630419_1250: (Bool, Range<UInt32>, Bool, Range<Int64>, Range<UInt8>) = (true, ((UInt32(UInt32(30)) & 127)..=(UInt32(UInt32(15)) &
        127) : (Int64(4) | 1)), (UInt8(211) is Array<Unit>), ((Int64(Int64(Int8(UInt8(73)))) & 127)..=(Int64(Int64(UInt8(220))) &
        127) : (Int64(-71) | 1)), ((UInt8(UInt8(101)) & 127)..(UInt8(UInt8(62)) & 127) : (Int64(-12) | 1)))
let var_1734529630419_1272: Option<Unit> = Option<Unit>.None
public var var_1734529630419_1312: UInt64 = UInt64(UInt16(0))
let var_1734529630419_1338: VArray<Unit, $1> = [()]
public var var_1734529630419_1399: UInt64 = UInt64(191)
public var var_1734529630419_1448: UInt16 = UInt16(238)
public let var_1734529630419_1661: (UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
    Int32, Int16, UInt8) = (UInt16(103), (Option<Enum_1734529630419_16>.None, Float64(Float64(Float64(105.0))), Float32(-105.0)),
    Enum_1734529630419_16.enumValue_1734529630419_719, Int32(Int32(106)), Int16(121), UInt8(Int8(112)))
var var_1734529630419_1692: Int32 = Int32(-111)
public var var_1734529630419_1710: VArray<Unit, $1> = [()]

@Frozen
public const func func_1734529630419_8(param_1734529630419_9: Int16, param_1734529630419_10: Float32,
    optionalParam_1734529630419_11!: Int32 = 2): Int64 { // block id: 13
    3
}

@Deprecated
public enum Enum_1734529630419_16 {
    defaultValue
    | enumValue_1734529630419_25(UInt64, UInt64, Unit, UInt16)
    | enumValue_1734529630419_300(Array<UInt64>, Float32, (Bool, Range<UInt32>, Bool, Range<Int64>, Range<UInt8>))
    | enumValue_1734529630419_364(Range<Int32>, Int64, Range<Int8>, Option<UInt8>)
    | enumValue_1734529630419_542(() -> Float64)
    | enumValue_1734529630419_673(Option<UInt8>)
    | enumValue_1734529630419_719
}

internal const func func_1734529630419_79(): Float64 { // block id: 80
    var_1734529630419_82;
    var_1734529630419_85
}

public interface Interface_1734529630419_93 {
    @Frozen
    func func_1734529630419_98(namedParam_1734529630419_99!: UInt64,
        namedParam_1734529630419_100!: Option<Enum_1734529630419_16>, namedParam_1734529630419_101!: Float64): (UInt16, 
        (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8) { // block id: 102
        var loopTimeVar_1734529630419_271: Int = 0;
        do {
            loopTimeVar_1734529630419_271++;
            try (resource = Class_1734529630419_105()) { // block id: 246
                ();
                const var_1734529630419_250: Bool = false;
                if (var_1734529630419_250) {
                    ((Int64(Int64(-9)) & 127)..(Int64(Int64(5)) & 127) : (Int64(57) | 1))
                } else {
                    ((Int64(Int64(98)) & 127)..=(Int64(Int64(77)) & 127) : (Int64(35) | 1))
                };
                ()
            } catch (e: Exception) { // block id: 255
                var_1734529630419_258 >>= ((var_1734529630419_258) & 7)
            };
            (Option<Unit>.Some(var_1734529630419_82) ?? ())
        } while ((var_1734529630419_120.func_1734529630419_123(namedParam_1734529630419_124: var_1734529630419_242)) &&
            loopTimeVar_1734529630419_271 < 100);
        var var_1734529630419_645: (Int8) -> Option<Range<UInt16>> = func_1734529630419_278;
        (([Int8(49), Int8(67), Int8(73), Int8(0), Int8(-11), Int8(110), Int8(-86), Int8(-63), Int8(33), Int8(-38)][8] |>
            var_1734529630419_645) ?? ((UInt16(UInt16(203)) & 127)..=(UInt16(UInt16(4)) & 127) : (Int64(-59) | 1)));
        let var_1734529630419_712: (UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
            Int32, Int16, UInt8) = (UInt16(197), (((Enum_1734529630419_16.enumValue_1734529630419_719 as Unit) as Enum_1734529630419_16),
                Float64(Float32(Float32(87.0))), Float32(-91.0)), Enum_1734529630419_16.enumValue_1734529630419_25(
                UInt64(Int8(Int8(-52))), UInt64(UInt16(212)), (), UInt16(121)), Int32(-127), Int16(-13), UInt8(Int8(34)));
        try { // block id: 653
            var_1734529630419_591[9];
            var_1734529630419_660[3]
        } catch (e: Exception) { // block id: 689
            var loopTimeVar_1734529630419_700: Int64 = 0;
            while ((true) && loopTimeVar_1734529630419_700 < 100) {
                loopTimeVar_1734529630419_700++;
                if (false) {
                    Enum_1734529630419_16.enumValue_1734529630419_673(Option<UInt8>.Some(UInt8(15)))
                } else {
                    var_1734529630419_362
                }
            };
            let var_1734529630419_707: Option<Array<UInt64>> = Option<Array<UInt64>>.Some(
                [UInt64(56), UInt64(112), UInt64(241), UInt64(131), UInt64(43), UInt64(48), UInt64(143), UInt64(147),
                    UInt64(170), UInt64(109)]);
            (var_1734529630419_707 ?? [UInt64(246), UInt64(24), UInt64(96), UInt64(236), UInt64(117), UInt64(133),
                UInt64(36), UInt64(103), UInt64(129), UInt64(225)]);
            var_1734529630419_712
        }
    }
}

public open class Class_1734529630419_90 <: Interface_1734529630419_93 {
    public init() { // block id: 92

    }

    private prop var_1734529630419_989: (UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
        Enum_1734529630419_16, Int32, Int16, UInt8) { // block id: 990
        get() { // block id: 992
            (UInt16(UInt8(210)), (Option<Enum_1734529630419_16>.None, Float64(17.0), Float32(Float32(92.0))), Enum_1734529630419_16
                    .enumValue_1734529630419_719, Int32(Int16(-49)), Int16(2), UInt8(Int8(Int8(-118))))
        }
    }
    init(namedParam_1734529630419_1028!: Range<UInt8>, namedParam_1734529630419_1029!: Bool) { // block id: 1030
        var var_1734529630419_1115: Option<Unit> = (((Int32(Int32(UInt8(UInt8(125)))) & 127)..(Int32(Int32(-50)) & 127) : (Int64(-67) |
            1)) as Unit);
        if (match ([var_1734529630419_1037, var_1734529630419_1037, var_1734529630419_1037, var_1734529630419_1037,
            var_1734529630419_1043,
            Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, 
                Int16, UInt8)>, Class_1734529630419_105)>.None, var_1734529630419_1043, var_1734529630419_1037,
            var_1734529630419_1043,
            Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, 
                Int16, UInt8)>, Class_1734529630419_105)>.Some((var_1734529630419_1052, var_1734529630419_120))][9]) {
            case None =>
                ();
                true

            case None => true

            case _ =>
                ();
                var_1734529630419_746;
                var_1734529630419_457
        }) { // block id: 1071
            match (var_1734529630419_1043) {
                case Some(caseVar_1734529630419_1076) =>
                    var_1734529630419_565 >>= ((var_1734529630419_1081) & 7)
                    Int64(40)

                case _: Range<UInt32> => Int64(57) >> ((Int64(-124)) & 7)

                case _ => Int64(-52) ** var_1734529630419_401
            };
            ((Int8(var_1734529630419_1098) & 127)..=(Int8(Int8(-114)) & 127) : (Int64(55) | 1));
            if (var_1734529630419_1105) {
                var_1734529630419_1115
            } else {
                var_1734529630419_1115
            }
        } else { // block id: 1124
            match ((UInt16(79), (Option<Enum_1734529630419_16>.None, var_1734529630419_1131, Float32(30.0)),
                var_1734529630419_362, Int32(-77), Int16(52), var_1734529630419_1081)) {
                case _ => var_1734529630419_258
            };
            if (false) {
                Option<Unit>.Some(())
            } else {
                Option<Unit>.Some(var_1734529630419_82)
            }
        };
        ();
        ((try { // block id: 1156
                var_1734529630419_738;
                Option<Option<Enum_1734529630419_16>>.Some(Option<Enum_1734529630419_16>.None)
            } catch (_) { // block id: 1160
                Int8(-101);
                var_1734529630419_457 ||= true
                var_1734529630419_1166
            } ?? (var_1734529630419_1043, Option<Enum_1734529630419_16>.None, var_1734529630419_1043, (Option<Enum_1734529630419_16>
                        .None, Float64(-38.0), var_1734529630419_835), Option<Unit>.None)[1]), Float64(-19.0), if (var_1734529630419_457) { // block id: 1186
                [Float32(117.0), Float32(-75.0), Float32(-48.0), Float32(45.0), Float32(94.0), Float32(-102.0),
                    Float32(-58.0), Float32(-111.0), Float32(-42.0), Float32(-46.0)]
            } else { // block id: 1188
                var_1734529630419_407;
                [Float32(113.0), Float32(125.0), Float32(-93.0), Float32(-58.0), Float32(-108.0), Float32(100.0),
                    Float32(51.0), Float32(-10.0), Float32(32.0), Float32(55.0)]
            }[3])
    };

    init(
        optionalParam_1734529630419_1203!: Enum_1734529630419_16 = Enum_1734529630419_16.enumValue_1734529630419_300(
            [UInt64(UInt64(Int8(-12))), UInt64(Int32(UInt8(88))), UInt64(98), UInt64(172), UInt64(Int32(UInt16(110))),
                UInt64(UInt32(Int32(-71))), UInt64(Int64(48)), UInt64(158), UInt64(79), UInt64(29)],
            Float32(Float32(Float32(24.0))),
            (false, ((UInt32(UInt32(238)) & 127)..=(UInt32(UInt32(233)) & 127) : (Int64(115) | 1)), true, ((Int64(Int64(Int64(-13))) &
                    127)..(Int64(Int64(33)) & 127) : (Int64(Int16(-122)) | 1)), ((UInt8(UInt8(111)) & 127)..=(UInt8(UInt8(UInt8(225))) &
                    127) : (Int64(18) | 1)))), optionalParam_1734529630419_1243!: Unit = (),
        namedParam_1734529630419_1245!: UInt8,
        optionalParam_1734529630419_1246!: Option<Array<UInt64>> = Option<Array<UInt64>>.None) { // block id: 1248
        var_1734529630419_1250;
        var var_1734529630419_1289: Range<UInt16> = ((UInt16(UInt16(26)) & 127)..(UInt16(UInt16(251)) & 127) : (Int64(86) |
            1));
        var loopTimeVar_1734529630419_1304: Range<UInt64> = ((UInt64(UInt64(217)) & 127)..=(UInt64(UInt64(UInt16(235))) &
            127) : (Int64(-10) | 1));
        var loopTimeVar_1734529630419_1320: Int64 = 0;
        var var_1734529630419_1486: UInt16 = UInt16(Int8(36));
        let var_1734529630419_1512: VArray<Int64, $2> = [Int64(-96), Int64(67)];
        var var_1734529630419_1584: Int64 = Int64(Int64(104));
        var var_1734529630419_1591: (Option<Enum_1734529630419_16>, Float64, Float32) = ((([Int8(-70), Int8(-55),
                    Int8(-60), Int8(-83), Int8(-106), Int8(-126), Int8(-84), Int8(61), Int8(-96), Int8(113)], (Option<Enum_1734529630419_16>
                    .None as Range<Int64>), "^*5uBu5 o>") as Enum_1734529630419_16), Float64(Float32(0.0)), Float32(Float32(Float32(-107.0))));
        var loopTimeVar_1734529630419_1730: Range<UInt64> = ((UInt64(UInt64(Int32(25))) & 127)..(UInt64(UInt64(UInt64(60))) &
            127) : (Int64(-99) | 1));
        ([(), (var_1734529630419_1272 ?? var_1734529630419_82), (var_1734529630419_258 *= var_1734529630419_925),
                try (resource = Class_1734529630419_105()) { // block id: 1279
                [(), (), (), (), (), (), (), (), (), ()];
                var_1734529630419_385
            } finally { // block id: 1282

            }, try (resource = Class_1734529630419_105()) { // block id: 1284

            } catch (_) { // block id: 1285
                Option<Option<Range<UInt16>>>.Some(Option<Range<UInt16>>.Some(var_1734529630419_1289));
                var var_1734529630419_1293: UInt64 = UInt64(248);
                var_1734529630419_1293 -= var_1734529630419_1293
                var_1734529630419_385
            }, (), for (i in loopTimeVar_1734529630419_1304 where false) {
                ();
                var_1734529630419_925--
            }, (var_1734529630419_1312 |= UInt64(224)), while ((true) && loopTimeVar_1734529630419_1320 < 100) {
                loopTimeVar_1734529630419_1320++;
            },
                match ((var_1734529630419_591, (), Class_1734529630419_105(
                    optionalParam_1734529630419_1327: var_1734529630419_1312,
                    namedParam_1734529630419_1330: var_1734529630419_903, namedParam_1734529630419_1331: Int64(114),
                    optionalParam_1734529630419_1332: Int16(-14)), (UInt16(115), (var_1734529630419_738,
                        var_1734529630419_85, Float32(10.0)), Enum_1734529630419_16.enumValue_1734529630419_673(
                        var_1734529630419_201), var_1734529630419_759, var_1734529630419_61, var_1734529630419_1081), ((UInt32(UInt32(32)) &
                    127)..=(UInt32(UInt32(98)) & 127) : (Int64(-70) | 1)), var_1734529630419_746, var_1734529630419_61)) {
                case _ => ()

                case (_: UInt8, caseVar_1734529630419_1480: Range<Int16>, _, caseVar_1734529630419_1481, caseVar_1734529630419_1482, _: Interface_1734529630419_108, _) =>
                    ((UInt16(var_1734529630419_1486) & 127)..(UInt16(var_1734529630419_38) & 127) : (Int64(-37) | 1));
                    ()

                case _: (Option<Enum_1734529630419_16>, Float64, Float32) => ()

                case (caseVar_1734529630419_1498, caseVar_1734529630419_1499: UInt64, caseVar_1734529630419_1500: Range<UInt32>, (caseVar_1734529630419_1501, (Some(enumValue_1734529630419_25(caseVar_1734529630419_1502, caseVar_1734529630419_1503: Option<Unit>, caseVar_1734529630419_1504: (Array<Unit>, 
                                            Unit, Class_1734529630419_105, (UInt16, (Option<Enum_1734529630419_16>, 
                                            Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8), Range<UInt32>, 
                                            Unit, Int16), caseVar_1734529630419_1505: Option<Range<UInt16>>)), _, _), caseVar_1734529630419_1506: Class_1734529630419_105, caseVar_1734529630419_1507, caseVar_1734529630419_1508, _), _: Array<Float32>, _: Unit, caseVar_1734529630419_1509) =>
                    var_1734529630419_1512;
                    var_1734529630419_605;
                    var_1734529630419_1105 &&= var_1734529630419_1105

                case _ => ()
            }], var_1734529630419_746, Class_1734529630419_105(optionalParam_1734529630419_1327: var_1734529630419_1312,
                namedParam_1734529630419_1330: try { // block id: 1526
                    ();
                    Class_1734529630419_105();
                    ((UInt8(UInt8(140)) & 127)..(UInt8(UInt8(29)) & 127) : (var_1734529630419_925 | 1))
                } finally { // block id: 1533
                    var_1734529630419_766;
                    var var_1734529630419_1536: (Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, 
                        Float32), Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)>, Option<Enum_1734529630419_16>, 
                        Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
                        Int32, Int16, UInt8)>, Class_1734529630419_105)>, (Option<Enum_1734529630419_16>, Float64, 
                        Float32), Option<Unit>) = ((((UInt16(UInt16(226)) & 127)..=(UInt16(UInt16(66)) & 127) : (Int64(-22) |
                            1)) as (Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), 
                            Enum_1734529630419_16, Int32, Int16, UInt8)>, Class_1734529630419_105)), (Option<Array<UInt64>>
                            .None as Enum_1734529630419_16),
                        Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
                                Int32, Int16, UInt8)>, Class_1734529630419_105)>.Some(
                            (Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, 
                                        Int32, Int16, UInt8)>.Some(
                                    (UInt16(206), (Option<Enum_1734529630419_16>.None, Float64(-24.0), Float32(35.0)),
                                        Enum_1734529630419_16.enumValue_1734529630419_364(
                                            ((Int32(Int32(-85)) & 127)..(Int32(Int32(-63)) & 127) : (Int64(10) | 1)),
                                            Int64(-63),
                                            ((Int8(Int8(71)) & 127)..(Int8(Int8(-122)) & 127) : (Int64(114) | 1)),
                                            Option<UInt8>.None), Int32(-64), Int16(94), UInt8(110))),
                                Class_1734529630419_105())), ((((Int8(Int8(68)) & 127)..(Int8(Int8(24)) & 127) : (Int64(82) |
                                1)) as Enum_1734529630419_16), Float64(123.0), Float32(26.0)), Option<Unit>.Some(()));
                    var_1734529630419_1536;
                    if (var_1734529630419_636) {
                        ((UInt8(UInt8(185)) & 127)..=(UInt8(UInt8(55)) & 127) : (Int64(126) | 1))
                    } else {
                        ((UInt8(UInt8(122)) & 127)..=(UInt8(UInt8(118)) & 127) : (Int64(49) | 1))
                    }
                }, namedParam_1734529630419_1331: (Option<Int64>.None ?? var_1734529630419_1584),
                optionalParam_1734529630419_1332: if (false) { // block id: 1589
                    var_1734529630419_1591;
                    Int16(-112) % ((Int16(-45)) | 1)
                } else { // block id: 1617
                    let var_1734529630419_1620: Array<Int8> = [Int8(83), Int8(40), Int8(Int8(91)), Int8(Int8(122)),
                        Int8(Int8(Int8(67))), Int8(-52), Int8(-6), Int8(UInt8(Int8(Int8(-67)))), Int8(Int8(83)),
                        Int8(-34)];
                    (var_1734529630419_1620, Option<Range<Int64>>.None, "maEp7c^u}r");
                    ();
                    var_1734529630419_61
                }), try { // block id: 1645
                (var_1734529630419_38, var_1734529630419_1591, Enum_1734529630419_16.enumValue_1734529630419_364(
                        ((Int32(Int32(-72)) & 127)..(Int32(Int32(87)) & 127) : (Int64(-26) | 1)), var_1734529630419_1584,
                        ((Int8(Int8(-42)) & 127)..(Int8(Int8(-65)) & 127) : (Int64(-75) | 1)), var_1734529630419_201),
                    var_1734529630419_759, var_1734529630419_61, var_1734529630419_565)
            } finally { // block id: 1657
                Option<Int64>.Some(var_1734529630419_258);
                var_1734529630419_1661
            }, ((UInt32(try { // block id: 1678
                var_1734529630419_385;
                UInt32(179)
            } finally { // block id: 1681
                UInt64(68);
                var_1734529630419_556 - UInt32(169)
            }) & 127)..=(UInt32(UInt32(24)) & 127) : (if (var_1734529630419_1105) { // block id: 1689
                var_1734529630419_1692 &= var_1734529630419_759
                var_1734529630419_556 /= ((var_1734529630419_556) | 1)
                var_1734529630419_925
            } else if (var_1734529630419_1105) { // block id: 1700
                var_1734529630419_1584 * var_1734529630419_925
            } else { // block id: 1704
                if (false) {
                    VArray<Unit, $1>(repeat: var_1734529630419_510)
                } else {
                    var_1734529630419_1710
                };
                ();
                Int64(108)
            } | 1)), for (i in loopTimeVar_1734529630419_1730 where try { // block id: 1716
                Option<Range<UInt16>>.Some(var_1734529630419_1289);
                ();
                Float32(40.0) > Float32(-119.0)
            } catch (e: Exception) { // block id: 1723
                false
            } finally { // block id: 1725
                var_1734529630419_385;
                var_1734529630419_457
            }) {
                var_1734529630419_82
            }, var_1734529630419_61)
    };

    public open override func func_1734529630419_98(namedParam_1734529630419_99!: UInt64,
        namedParam_1734529630419_100!: Option<Enum_1734529630419_16>, namedParam_1734529630419_101!: Float64): (UInt16, 
        (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8) { // block id: 885
        var var_1734529630419_895: UInt32 = UInt32(116);
        (if (true) { // block id: 891
                UInt32(148);
                var_1734529630419_895 /= ((UInt32(200)) | 1)
            } else if (false) { // block id: 899
                ()
            }, match (var_1734529630419_903) {
                case caseVar_1734529630419_907: Option<Option<Range<UInt16>>> =>
                    "M/Brxaj?.Y";
                    ();
                    var_1734529630419_258

                case _ => Int64(37) << ((var_1734529630419_258) & 7)

                case _ =>
                    var_1734529630419_556++;
                    var_1734529630419_510;
                    var_1734529630419_925
            }, var_1734529630419_929[3])[0];
        var loopTimeVar_1734529630419_972: Int64 = 0;
        do {
            loopTimeVar_1734529630419_972++;
        } while (((var_1734529630419_61 - Int16(86)) < Int16(68)) && loopTimeVar_1734529630419_972 < 100);
        let var_1734529630419_1740: Option<Array<UInt64>> = Option<Array<UInt64>>.Some(
            [UInt64(UInt64(196)), UInt64(UInt32(117)), UInt64(235), UInt64(Int8(UInt8(43))), UInt64(Int32(Int8(30))),
                UInt64(UInt8(110)), UInt64(127), UInt64(63), UInt64(UInt16(Int8(25))), UInt64(75)]);
        let var_1734529630419_1767: (Option<Enum_1734529630419_16>, Float64, Float32) = ((Int64(Int32(72)) as Enum_1734529630419_16),
            Float64(120.0), Float32(Float32(-101.0)));
        ((Option<(Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, 
                UInt8)>, Class_1734529630419_105)>.Some(
            (Option<(UInt16, (Option<Enum_1734529630419_16>, Float64, Float32), Enum_1734529630419_16, Int32, Int16, 
                        UInt8)>.Some(var_1734529630419_989), Class_1734529630419_105())) ?? (Option<(UInt16, (Option<Enum_1734529630419_16>, 
                    Float64, Float32), Enum_1734529630419_16, Int32, Int16, UInt8)>.None, Class_1734529630419_105()))[0] ??
            ((var_1734529630419_38, (var_1734529630419_738, Float64(-60.0), Float32(102.0)),
                Enum_1734529630419_16.enumValue_1734529630419_673(Option<UInt8>.None), var_1734529630419_759, Int16(108),
                var_1734529630419_565), Class_1734529630419_90(
                namedParam_1734529630419_1028: ((UInt8(var_1734529630419_1081) & 127)..(UInt8(var_1734529630419_565) &
                    127) : (Int64(34) | 1)), namedParam_1734529630419_1029: false), ((Int64(var_1734529630419_258) & 127)..(Int64(var_1734529630419_925) &
                127) : (var_1734529630419_258 | 1)), Class_1734529630419_90(namedParam_1734529630419_1245: UInt8(104),
                optionalParam_1734529630419_1246: var_1734529630419_1740), (), var_1734529630419_407, (var_1734529630419_1448,
                var_1734529630419_1767, Enum_1734529630419_16.enumValue_1734529630419_25(var_1734529630419_1312,
                    UInt64(169), (), UInt16(29)), Int32(-55), Int16(51), UInt8(206)))[0])
    }

    static init() {
    }
}

public interface Interface_1734529630419_116 {}

public sealed interface Interface_1734529630419_115 <: Interface_1734529630419_116 {}

public sealed interface Interface_1734529630419_114 <: Interface_1734529630419_115 {}

public sealed interface Interface_1734529630419_113 <: Interface_1734529630419_114 & Interface_1734529630419_116 {}

public interface Interface_1734529630419_112 <: Interface_1734529630419_113 {}

public interface Interface_1734529630419_111 <: Interface_1734529630419_112 & Interface_1734529630419_115 {}

public interface Interface_1734529630419_118 {}

public interface Interface_1734529630419_117 <: Interface_1734529630419_113 & Interface_1734529630419_118 {}

public sealed interface Interface_1734529630419_110 <: Interface_1734529630419_111 & Interface_1734529630419_117 {}

public interface Interface_1734529630419_109 <: Interface_1734529630419_110 & Interface_1734529630419_113 {}

public interface Interface_1734529630419_108 <: Interface_1734529630419_109 & Interface_1734529630419_118 {
    @Frozen
    func func_1734529630419_123(namedParam_1734529630419_124!: Rune): Bool { // block id: 125
        var var_1734529630419_140: Bool = true;
        match (if (var_1734529630419_140) { // block id: 142
            ((UInt16(var_1734529630419_145) & 127)..(UInt16(var_1734529630419_38) & 127) : (var_1734529630419_149 | 1))
        } else if (false) { // block id: 154
            var_1734529630419_156
        } else { // block id: 163
            ((UInt16(UInt16(229)) & 127)..(UInt16(UInt16(187)) & 127) : (Int64(-58) | 1))
        }) {
            case caseVar_1734529630419_167: Array<Unit> =>
                var_1734529630419_149 ^ var_1734529630419_149;
                var_1734529630419_38;
                var_1734529630419_174

            case caseVar_1734529630419_178 =>
                if (var_1734529630419_140) {
                    var_1734529630419_174
                } else {
                    var_1734529630419_174
                }

            case _ =>
                var_1734529630419_189 += var_1734529630419_189
                [(), (), (), (), (), (), (), (), (), ()]
        }[1];
        var var_1734529630419_216: Int8 = Int8(UInt8(215));
        match ((var_1734529630419_201 ?? UInt8(UInt8(10)))) {
            case caseVar_1734529630419_207 =>
                var_1734529630419_82;
                const var_1734529630419_212: Float32 = 31.0;
                -var_1734529630419_212
                var_1734529630419_216 >>= ((Int8(76)) & 7)

            case _ => ()
        };
        var_1734529630419_227[2]
    }
}

public open class Class_1734529630419_105 <: Interface_1734529630419_108 & Resource {
    @Frozen
    public init() { // block id: 107

    }

    public init(optionalParam_1734529630419_1327!: UInt64 = UInt64(UInt32(156)),
        namedParam_1734529630419_1330!: Range<UInt8>, namedParam_1734529630419_1331!: Int64,
        optionalParam_1734529630419_1332!: Int16 = Int16(-69)) { // block id: 1334
        var_1734529630419_1338[0];
        var var_1734529630419_1352: Int8 = Int8(-21);
        var loopTimeVar_1734529630419_1373: Int64 = 0;
        while ((true) && loopTimeVar_1734529630419_1373 < 100) {
            loopTimeVar_1734529630419_1373++;
            if (var_1734529630419_636) { // block id: 1346
                var_1734529630419_201
            } else if (true) { // block id: 1349
                var_1734529630419_1352 & Int8(-18);
                ();
                Option<UInt8>.Some(UInt8(53))
            } else { // block id: 1358
                Int8(1) | var_1734529630419_1352;
                Option<UInt8>.None
            };
            var var_1734529630419_1369: UInt16 = UInt16(198);
            if (var_1734529630419_457) { // block id: 1365
                Float64(-30.0);
                var_1734529630419_1369 >>= ((UInt16(176)) & 7)
            }
        };
        var var_1734529630419_1409: Array<UInt64> = [UInt64(Int16(Int16(-33))), UInt64(163), UInt64(181),
            UInt64(Int32(64)), UInt64(5), UInt64(UInt32(UInt16(53))), UInt64(145), UInt64(22),
            UInt64(Int8(Int8(Int8(79)))), UInt64(254)];
        let var_1734529630419_1436: Range<UInt16> = ((UInt16(UInt16(128)) & 127)..=(UInt16(UInt16(Int16(-62))) & 127) : (Int64(17) |
            1));
        (((if (true) {
            ((Int32(Int32(-42)) & 127)..(Int32(var_1734529630419_189) & 127) : (var_1734529630419_925 | 1))
        } else {
            ((Int32(Int32(25)) & 127)..=(Int32(Int32(-10)) & 127) : (Int64(122) | 1))
        }) as Range<UInt16>) ?? match (if (var_1734529630419_457) { // block id: 1390
            [UInt64(229), UInt64(244), UInt64(144), UInt64(157), UInt64(112), UInt64(150), UInt64(156), UInt64(236),
                UInt64(243), UInt64(218)]
        } else { // block id: 1392
            if (var_1734529630419_457) {
                [UInt64(123), UInt64(219), var_1734529630419_1399, var_1734529630419_1399, var_1734529630419_1399,
                    var_1734529630419_1399, UInt64(46), UInt64(189), UInt64(163), var_1734529630419_1399]
            } else {
                var_1734529630419_1409
            }
        }) {
            case caseVar_1734529630419_1431 =>
                ((UInt32(UInt32(248)) & 127)..=(UInt32(UInt32(133)) & 127) : (Int64(-120) | 1));
                ();
                var_1734529630419_1436

            case caseVar_1734529630419_1444: Int64 =>
                var_1734529630419_1448 *= var_1734529630419_145
                ((UInt16(UInt16(11)) & 127)..(UInt16(UInt16(131)) & 127) : (Int64(108) | 1))

            case _ => ((UInt16(UInt16(227)) & 127)..=(UInt16(UInt16(168)) & 127) : (Int64(5) | 1))
        })
    };

    public open override func func_1734529630419_123(namedParam_1734529630419_124!: Rune): Bool { // block id: 1785
        (try { // block id: 1788
            [(), (), (), (), (), (), (), (), (), ()]
        } finally { // block id: 1790
            if (var_1734529630419_457) {
                var_1734529630419_174
            } else {
                [(), (), (), (), (), (), (), (), (), ()]
            }
        } is Range<UInt64>)
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

@Deprecated
public func func_1734529630419_278(param_1734529630419_279: Int8): Option<Range<UInt16>> { // block id: 280
    let var_1734529630419_357: Int8 = Int8(-24);
    let var_1734529630419_421: Unit = ();
    var var_1734529630419_439: Range<Int64> = ((Int64(Int64(16)) & 127)..(Int64(Int64(55)) & 127) : (Int64(-10) | 1));
    (try { // block id: 289
        var_1734529630419_291
    } catch (e: Exception) { // block id: 349
        var_1734529630419_258 /= ((Int64(88)) | 1)
        Class_1734529630419_105();
        (((Int8(var_1734529630419_357) & 127)..=(Int8(Int8(49)) & 127) : (var_1734529630419_258 | 1)),
            var_1734529630419_362, Option<Range<Int64>>.None, var_1734529630419_357, UInt64(222), [(), (), (), (), (),
                (), (), (), (), ()])
    } finally { // block id: 383
        var_1734529630419_385;
        var var_1734529630419_389: Range<Int8> = ((Int8(Int8(UInt8(159))) & 127)..=(Int8(Int8(UInt8(UInt8(4)))) & 127) : (Int64(UInt32(Int8(37))) |
            1));
        (var_1734529630419_389, Enum_1734529630419_16.enumValue_1734529630419_25(var_1734529630419_401,
                var_1734529630419_401, (), UInt16(149)), var_1734529630419_407, Int8(31), var_1734529630419_401, [(),
                var_1734529630419_385, var_1734529630419_385, var_1734529630419_421, (), var_1734529630419_82, (), (),
                var_1734529630419_82, ()])
    }[2] ?? match (var_1734529630419_357 & Int8(95)) {
        case caseVar_1734529630419_436: Interface_1734529630419_108 => var_1734529630419_439

        case _ =>
            ();
            var_1734529630419_258;
            var_1734529630419_439

        case -25 | -62 | 97 | 113 => var_1734529630419_439

        case _ =>
            var_1734529630419_82;
            if (var_1734529630419_457) {
                var_1734529630419_439
            } else {
                ((Int64(var_1734529630419_258) & 127)..=(Int64(var_1734529630419_258) & 127) : (var_1734529630419_258 | 1))
            }

        case _ =>
            var_1734529630419_61;
            var_1734529630419_457;
            ((Int64(var_1734529630419_258) & 127)..(Int64(var_1734529630419_258) & 127) : (Int64(47) | 1))
    });
    const var_1734529630419_514: Bool = true;
    var var_1734529630419_570: (Option<Enum_1734529630419_16>, Float64, Float32) = (Option<Enum_1734529630419_16>.Some(
            Enum_1734529630419_16.enumValue_1734529630419_25(UInt64(212), UInt64(53), (), UInt16(143))), Float64(2.0),
        Float32(3.0));
    let var_1734529630419_620: Int64 = Int64(UInt64(187));
    (match (var_1734529630419_85) {
            case caseVar_1734529630419_482: Array<UInt64> =>
                var var_1734529630419_486: Int8 = Int8(UInt8(Int8(UInt8(36))));
                var_1734529630419_486 -= Int8(102)
                ();
                let var_1734529630419_497: UInt32 = UInt32(237);
                let var_1734529630419_502: Range<UInt32> = ((UInt32(UInt32(92)) & 127)..(UInt32(UInt32(27)) & 127) : (Int64(-115) |
                    1));
                if (var_1734529630419_457) {
                    ((UInt32(var_1734529630419_497) & 127)..(UInt32(UInt32(58)) & 127) : (Int64(-103) | 1))
                } else {
                    var_1734529630419_502
                }

            case _ =>
                ();
                Option<Unit>.Some(var_1734529630419_510);
                var var_1734529630419_518: UInt32 = UInt32(57);
                if (var_1734529630419_514) {
                    ((UInt32(var_1734529630419_518) & 127)..=(UInt32(var_1734529630419_518) & 127) : (Int64(38) | 1))
                } else {
                    var_1734529630419_523
                }
        }, Float64(var_1734529630419_85), try { // block id: 531
            var_1734529630419_533
        } finally { // block id: 550
            (true, ((UInt32(UInt32(168)) & 127)..=(UInt32(var_1734529630419_556) & 127) : (var_1734529630419_258 | 1)),
                true, ((Int64(Int64(119)) & 127)..=(Int64(Int64(-115)) & 127) : (Int64(-64) | 1)), ((UInt8(var_1734529630419_565) &
                    127)..(UInt8(var_1734529630419_565) & 127) : (Int64(-118) | 1)));
            var_1734529630419_570;
            (((Int8(Int8(7)) & 127)..(Int8(Int8(-126)) & 127) : (Int64(76) | 1)),
                Enum_1734529630419_16.enumValue_1734529630419_25(UInt64(169), UInt64(3), var_1734529630419_385,
                    var_1734529630419_38), var_1734529630419_407, var_1734529630419_357, UInt64(222),
                var_1734529630419_591)
        }, (var_1734529630419_605 ?? ((UInt16(UInt16(8)) & 127)..=(UInt16(UInt16(161)) & 127) : (Int64(22) | 1))), (Option<Option<Range<UInt16>>>
            .Some(var_1734529630419_605) ?? Option<Range<UInt16>>.Some(
            ((UInt16(UInt16(192)) & 127)..(UInt16(var_1734529630419_38) & 127) : (var_1734529630419_620 | 1)))),
        var_1734529630419_626[4], if (var_1734529630419_514) { // block id: 631
            Float64(101.0) / Float64((Int32(Float64(-125.0))) | 1)
        } else if (var_1734529630419_636) { // block id: 638
            Float64(82.0)
        } else { // block id: 640
            Float64(-52.0)
        }, var_1734529630419_95)[4]
}

public func func_1734529630419_75(param_1734529630419_76: Unit): (Option<Enum_1734529630419_16>, Float64, Float32) { // block id: 77
    func_1734529630419_79();
    var_1734529630419_95.func_1734529630419_98(namedParam_1734529630419_99: UInt64(182),
        namedParam_1734529630419_100: var_1734529630419_738, namedParam_1734529630419_101: Float64(-104.0))[1]
}

main(): Int64 {
    try {
        const var_1734529630419_31: UInt64 = 42;
        var var_1734529630419_35: Unit = ();
        let var_1734529630419_743: (Unit) -> (Option<Enum_1734529630419_16>, Float64, Float32) = func_1734529630419_75;
        func_1734529630419_8(
            match ((Option<Enum_1734529630419_16>.Some(
                Enum_1734529630419_16.enumValue_1734529630419_25(var_1734529630419_31, var_1734529630419_31,
                    var_1734529630419_35, var_1734529630419_38)) ?? Enum_1734529630419_16.enumValue_1734529630419_25(
                UInt64(37), UInt64(86), var_1734529630419_35, var_1734529630419_38))) {
                case defaultValue =>
                    """
*$4J'
\\VtN0
""";
                    Int16(-64)

                case defaultValue => Int16(-111)

                case caseVar_1734529630419_56: String => Int16(-75) / ((var_1734529630419_61) | 1)

                case caseVar_1734529630419_65 => Int16(12)

                case _ => Int16(23)
            }, (var_1734529630419_746 |> var_1734529630419_743)[2], optionalParam_1734529630419_11: try { // block id: 750
                var_1734529630419_95;
                var_1734529630419_35;
                Int32(120)
            } finally { // block id: 754
                var_1734529630419_605;
                Int32(-97) >> ((var_1734529630419_759) & 7)
            });
        var var_1734529630419_827: Range<UInt64> = ((UInt64(UInt64(Int8(-120))) & 127)..=(UInt64(UInt64(201)) & 127) : (Int64(81) |
            1));
        let var_1734529630419_839: Float32 = Float32(Float32(-55.0));
        try (resource = Class_1734529630419_105()) { // block id: 762
            (false, var_1734529630419_766, var_1734529630419_457, var_1734529630419_775, ((UInt8(UInt8(114)) & 127)..(UInt8(UInt8(167)) &
                    127) : (Int64(51) | 1)));
            Option<Unit>.Some(var_1734529630419_385).getOrThrow();
            var_1734529630419_784[4]
        } catch (e: Exception) { // block id: 825
            var_1734529630419_827;
            var_1734529630419_835 /= Float32((Int32(var_1734529630419_839)) | 1)
        };
        try { // block id: 843
            var loopTimeVar_1734529630419_852: Int = 0;
            while ((false) && loopTimeVar_1734529630419_852 < 100) {
                loopTimeVar_1734529630419_852++;
                if (var_1734529630419_636) {
                    r'8'
                } else {
                    r'4'
                }
            };
            var loopTimeVar_1734529630419_858: Range<UInt64> = ((UInt64(UInt64(UInt32(Int16(Int8(-111))))) & 127)..=(UInt64(UInt64(76)) &
                127) : (Int64(UInt64(242)) | 1));
            for (i in loopTimeVar_1734529630419_858 where false) {
                var_1734529630419_746;
                var_1734529630419_35
            };
            VArray<Int64, $2>({i => Int64(-106)})[0]
        } finally { // block id: 873
            ([Int8(63), Int8(-13), Int8(102), Int8(-19), Int8(125), Int8(116), Int8(126), Int8(62), Int8(-23), Int8(-71)],
                Option<Range<Int64>>.Some(((Int64(Int64(-122)) & 127)..=(Int64(Int64(-99)) & 127) : (Int64(53) | 1))),
                ###"J gJA5rL#("###)[2];
            Int64(var_1734529630419_401)
        }
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1734529630419_31 * var_1734529630419_31), 64)
        crcCheck.updateBuffer(UInt64(var_1734529630419_556 * var_1734529630419_556), 64)
        crcCheck.updateBuffer(UInt64(var_1734529630419_565 * var_1734529630419_565), 64)
        crcCheck.updateBuffer(UInt64(var_1734529630419_1098 * var_1734529630419_1098), 64)
        crcCheck.updateBuffer(UInt64(var_1734529630419_1312 * var_1734529630419_1312), 64)
        crcCheck.updateBuffer(UInt64(var_1734529630419_1692 * var_1734529630419_1692), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
