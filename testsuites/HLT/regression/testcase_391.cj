/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1689981724016_45 : Interface_1689981724016_11 = Class_1689981724016_7()
public var var_1689981724016_66 : Unit = ()
var var_1689981724016_112 : ?UInt32 = (Class_1689981724016_32() as UInt32)
public var var_1689981724016_140 : UInt8 = UInt8(UInt8(102))
public var var_1689981724016_147 : Int64 = (-112)
var var_1689981724016_154 : Range<UInt16> = ((UInt16(UInt16(110))&127)..(UInt16(UInt16(UInt8(165)))&127):(18|1))
public var var_1689981724016_164 : UInt32 = UInt32(70)
var var_1689981724016_196 : Class_1689981724016_32 = Class_1689981724016_32()
public var var_1689981724016_199 : (Array<UInt64>, Bool, Range<Int64>, Bool, Float32) = ([UInt64(252), UInt64(245), UInt64(Int32(-36)), UInt64(UInt32(246)), UInt64(Int8(Int8(-93))), UInt64(41), UInt64(UInt16(11)), UInt64(3), UInt64(UInt8(170)), UInt64(Int16(-97))], (Struct_1689981724016_97() is UInt16), ((Int64(Int64(UInt32(Int8(-56))))&127)..=(Int64(Int64(Int8(UInt8(119))))&127):((-51)|1)), (Float32(Float32(Float32(83.0))) is UInt16), Float32(-54.0))
public var var_1689981724016_237 : Array<UInt64> = [UInt64(81), UInt64(191), UInt64(10), UInt64(83), UInt64(153), UInt64(48), UInt64(166), UInt64(107), UInt64(185), UInt64(210)]
public let var_1689981724016_240 : Bool = (Class_1689981724016_32() is Interface_1689981724016_14)
public let var_1689981724016_276 : Float32 = Float32(Float32(Float32(18.0)))
public let var_1689981724016_295 : Int8 = Int8(UInt8(251))
public var var_1689981724016_301 : (Range<UInt16>, Unit, Unit, (Bool, Float32, Range<UInt64>, Range<Int32>), Int16, Range<UInt8>, Int8) = (((UInt16(UInt16(187))&127)..(UInt16(UInt16(24))&127):((-48)|1)), (), (), (("7$v|HFAt\" " is Interface_1689981724016_16<UInt16, UInt8, String>), Float32(33.0), ((UInt64(UInt64((-118)))&127)..=(UInt64(UInt64(UInt64(192)))&127):(Int64(Int16(-5))|1)), ((Int32(Int32(UInt16(203)))&127)..(Int32(Int32(73))&127):(Int64(UInt8(5))|1))), Int16(-85), ((UInt8(UInt8(227))&127)..=(UInt8(UInt8(Int8(43)))&127):(Int64(UInt32(UInt8(40)))|1)), Int8(UInt8(Int8(28))))
public let var_1689981724016_363 : Option<(Bool, Float32, Range<UInt64>, Range<Int32>)> = (((UInt16(UInt16(0))&127)..=(UInt16(UInt16(170))&127):((-73)|1)) as (Bool, Float32, Range<UInt64>, Range<Int32>))
public let var_1689981724016_401 : Interface_1689981724016_20 = Class_1689981724016_7()
public let var_1689981724016_414 : ?Range<UInt16> = Option<Range<UInt16>>.None
public let var_1689981724016_435 : Range<Int32> = ((Int32(Int32(-121))&127)..=(Int32(Int32(-15))&127):((-86)|1))
public var var_1689981724016_475 : Int8 = Int8(UInt8(UInt8(Int8(Int8(-53)))))
public var var_1689981724016_483 : ?(UInt8, Class_1689981724016_32, UInt32, Float64, String) = Option<(UInt8, Class_1689981724016_32, UInt32, Float64, String)>.None
public var var_1689981724016_496 : Array<Option<UInt32>> = [Option<UInt32>.None, (((UInt8(UInt8(198))&127)..(UInt8(UInt8(138))&127):(53|1)) as UInt32), Option<UInt32>.None, ([Option<UInt32>.None, Option<UInt32>.None, (UInt16(180) as UInt32), Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, (((Int64(0)&127)..=(Int64((-43))&127):((-36)|1)) as UInt32), ([Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None] as UInt32), Option<UInt32>.None, Option<UInt32>.None] as UInt32), Option<UInt32>.None, ((Class_1689981724016_32() as UInt32) as UInt32), (((UInt64(UInt64(132))&127)..(UInt64(UInt64(165))&127):((-45)|1)) as UInt32), (Class_1689981724016_7() as UInt32), Option<UInt32>.None, (Class_1689981724016_7() as UInt32)]
public let var_1689981724016_557 : Option<Bool> = Option<Bool>.None
public var var_1689981724016_563 : Bool = false
public let var_1689981724016_603 : UInt64 = UInt64(UInt8(Int8(UInt8(Int8(-40)))))
let var_1689981724016_628 : Range<UInt8> = ((UInt8(UInt8(Int8(Int8(117))))&127)..=(UInt8(UInt8(15))&127):(Int64(UInt32(50))|1))
public let var_1689981724016_640 : Int16 = Int16(-65)
public let var_1689981724016_657 : Array<Struct_1689981724016_97> = [Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97(), Struct_1689981724016_97()]
public let var_1689981724016_717 : ?Option<Array<UInt64>> = (Class_1689981724016_32() as Option<Array<UInt64>>)
public var var_1689981724016_751 : Int32 = Int32(Int32(UInt16(195)))
public var var_1689981724016_791 : Float64 = (-95.0)
public var var_1689981724016_803 : String = "h/ LhQ&v)T"
public let var_1689981724016_843 : Range<UInt8> = ((UInt8(UInt8(184))&127)..(UInt8(UInt8(Int8(-88)))&127):(93|1))
public let var_1689981724016_863 : (Int8, Int16, (UInt8, Class_1689981724016_32, UInt32, Float64, String), Range<Int8>) = (Int8(-5), Int16(-5), (UInt8(121), Class_1689981724016_32(), UInt32(UInt16(31)), Float64(Float32(116.0)), ":)pt\\D4snx"), ((Int8(Int8(-30))&127)..=(Int8(Int8(-44))&127):(Int64(Int32(UInt8(219)))|1)))
public var var_1689981724016_883 : Interface_1689981724016_12 = Class_1689981724016_7()
public let var_1689981724016_913 : Unit = ()
public var var_1689981724016_970 : Option<Array<Option<UInt32>>> = Option<Array<Option<UInt32>>>.None
public var var_1689981724016_1026 : (String, Range<UInt64>, Range<UInt32>, Unit, UInt64) = ("""
t${var_1689981724016_803}!nl]
G/03\\${var_1689981724016_803}
""", ((UInt64(UInt64(165))&127)..(UInt64(UInt64(UInt32(UInt16(5))))&127):(Int64(UInt8(UInt8(134)))|1)), ((UInt32(UInt32(114))&127)..=(UInt32(UInt32(39))&127):((-123)|1)), (), UInt64(100))
public var var_1689981724016_1054 : (Int8, Interface_1689981724016_14, Range<Int64>) = (Int8(UInt8(161)), Class_1689981724016_32(), ((Int64(99)&127)..(Int64((-9))&127):((-61)|1)))
public var var_1689981724016_1083 : (Array<UInt64>, Int8, UInt16, (Int8, Interface_1689981724016_14, Range<Int64>), Int8, Rune, Bool) = ([UInt64((-92)), UInt64(41), UInt64(173), UInt64(UInt32(209)), UInt64(Int16(-17)), UInt64(179), UInt64(UInt16(7)), UInt64(UInt16(UInt16(122))), UInt64(UInt16(UInt16(110))), UInt64(Int32(Int16(38)))], Int8(UInt8(233)), UInt16(251), (Int8(0), Class_1689981724016_7(), ((Int64((-4))&127)..=(Int64((-82))&127):((-89)|1))), Int8(58), r'g', true)
public var var_1689981724016_1137 : Option<(UInt32, Range<Int64>, Float64, Interface_1689981724016_14)> = (Class_1689981724016_7() as (UInt32, Range<Int64>, Float64, Interface_1689981724016_14))
public let var_1689981724016_1154 : Interface_1689981724016_12 = Class_1689981724016_7()
var var_1689981724016_1191 : Range<Int64> = ((Int64((-58))&127)..=(Int64(Int64(UInt32(Int16(UInt16(129)))))&127):(Int64(Int16(UInt16(Int16(91))))|1))
public let var_1689981724016_1231 : Unit = ()
let var_1689981724016_1264 : Option<Class_1689981724016_7> = Option<Class_1689981724016_7>.None
public var var_1689981724016_1289 : Unit = ()
public var var_1689981724016_1293 : Class_1689981724016_7 = Class_1689981724016_32()
public var var_1689981724016_1349 : Option<Array<UInt64>> = (((Class_1689981724016_32() as (UInt32, Range<Int64>, Float64, Interface_1689981724016_14)) as (Bool, Float32, Range<UInt64>, Range<Int32>)) as Array<UInt64>)
public let var_1689981724016_1399 : Option<Option<Array<UInt64>>> = Option<Option<Array<UInt64>>>.None
public let var_1689981724016_1420 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var_1689981724016_1440 : Interface_1689981724016_15 = Class_1689981724016_32()
public let var_1689981724016_1448 : Interface_1689981724016_13 = Class_1689981724016_32()
public let var_1689981724016_1537 : Range<UInt32> = ((UInt32(UInt32(181))&127)..=(UInt32(UInt32(UInt8(12)))&127):(Int64((-79))|1))
public var var_1689981724016_1577 : UInt16 = UInt16(76)
public var var_1689981724016_1715 : Rune = r'm'
public let var_1689981724016_1761 : Interface_1689981724016_16<UInt16, UInt8, String> = Class_1689981724016_7()
public interface Interface_1689981724016_20 {

}

public interface Interface_1689981724016_21 {

}

public interface Interface_1689981724016_19 <: Interface_1689981724016_20 & Interface_1689981724016_21 {

}

public interface Interface_1689981724016_18<T0, T1> <: Interface_1689981724016_19 & Interface_1689981724016_20 {

}

public interface Interface_1689981724016_17 <: Interface_1689981724016_18<UInt32, Int8> {

}

public interface Interface_1689981724016_16<T0, T1, T2> <: Interface_1689981724016_17 {

}

public interface Interface_1689981724016_15 <: Interface_1689981724016_16<UInt16, UInt8, String> & Interface_1689981724016_21 {

}

public interface Interface_1689981724016_14 <: Interface_1689981724016_15 {

}

public interface Interface_1689981724016_13 <: Interface_1689981724016_14 {

}

public interface Interface_1689981724016_12 <: Interface_1689981724016_13 {

}

public interface Interface_1689981724016_11 <: Interface_1689981724016_12 {

}

public interface Interface_1689981724016_10 <: Interface_1689981724016_11 & Interface_1689981724016_13 {
    func func_1689981724016_1718(param_1689981724016_1719 : Int64) : Int64 

}

public open class Class_1689981724016_7 <: Interface_1689981724016_10 {
    init() { // block id: 9

    }
;
    init(namedParam_1689981724016_1327 ! : Interface_1689981724016_12, optionalParam_1689981724016_1328 ! : Rune = r'o', namedParam_1689981724016_1330 ! : Interface_1689981724016_13, namedParam_1689981724016_1331 ! : Interface_1689981724016_12) { // block id: 1332
        var loopTimeVar_1689981724016_1359 : Range<UInt64> = ((UInt64(UInt64(62))&127)..(UInt64(UInt64(Int8(Int8(76))))&127):(Int64(UInt16(Int8(42)))|1));
        for (i in loopTimeVar_1689981724016_1359 where [[false, false, true, false, false, false, false, true, true, true], [true, false, true, true, true, true, false, false, false, false], [true, false, true, true, false, false, true, true, true, false], [false, true, true, true, true, false, true, false, true, false], [true, false, false, true, false, true, false, false, true, true], [true, true, true, true, true, true, false, false, false, false], [false, true, true, false, false, false, false, false, false, true], [true, true, true, true, true, true, false, true, false, false], [true, true, false, false, false, false, true, false, false, false], [true, false, true, false, true, true, false, false, true, false]][0][4]) {
            (Option<Option<Array<UInt64>>>.Some(var_1689981724016_1349) ?? Option<Array<UInt64>>.Some(var_1689981724016_237));
            (Option<Unit>.None ?? var_1689981724016_66)
        }
    }
;
    public init(param_1689981724016_1386 : Option<Array<UInt64>>) { // block id: 1387
        if (match (try { // block id: 1391
            var_1689981724016_496;
            var var_1689981724016_1394 : Range<UInt64> = ((UInt64(UInt64(180))&127)..=(UInt64(UInt64(242))&127):((-97)|1));
            var_1689981724016_1394;
            Option<Option<Array<UInt64>>>.None
        } finally { // block id: 1397
            var_1689981724016_1399
        }) {
            case _ : Int64 => 
                var_1689981724016_240
            
            case _ : (Bool, Float32, Range<UInt64>, Range<Int32>) => 
                var_1689981724016_563;
                var_1689981724016_563
            
            case _ => 
                var_1689981724016_1289;
                false
            
        }) { // block id: 1414
            Option<Bool>.None;
            ();
            var_1689981724016_1420[3]
        } else if (if (true) { // block id: 1435
            var_1689981724016_140;
            var_1689981724016_563
        } else { // block id: 1438
            var_1689981724016_1440;
            var_1689981724016_240
        }) { // block id: 1443
            Class_1689981724016_7(namedParam_1689981724016_1327 : Class_1689981724016_7(), optionalParam_1689981724016_1328 : r's', namedParam_1689981724016_1330 : var_1689981724016_1448, namedParam_1689981724016_1331 : Class_1689981724016_7());
            var loopTimeVar_1689981724016_1456 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            for (i in loopTimeVar_1689981724016_1456 where var_1689981724016_240) {
                ();
                var_1689981724016_66
            }
        };
        var_1689981724016_475++;
        let var_1689981724016_1478 : Option<Interface_1689981724016_21> = Option<Interface_1689981724016_21>.None;
        var var_1689981724016_1491 : Interface_1689981724016_21 = Class_1689981724016_32(Float32(79.0));
        try { // block id: 1471
            var_1689981724016_1478.getOrThrow()
        } finally { // block id: 1480
            (Option<Option<(Bool, Float32, Range<UInt64>, Range<Int32>)>>.None ?? var_1689981724016_363);
            try { // block id: 1489
                var_1689981724016_1491
            } catch (_) { // block id: 1494
                (var_1689981724016_240, var_1689981724016_276, ((UInt64(UInt64(152))&127)..=(UInt64(var_1689981724016_603)&127):(63|1)), var_1689981724016_435);
                true;
                Class_1689981724016_32()
            }
        }
    }
;
    public func func_1689981724016_1718(param_1689981724016_1719 : Int64) : Int64 { // block id: 1720
        var var_1689981724016_1744 : Array<UInt64> = [UInt64(76), UInt64(169), UInt64(245), UInt64(67), UInt64(211), UInt64(210), UInt64(184), UInt64(49), UInt64(248), UInt64(230)];
        (((var_1689981724016_640, var_1689981724016_496, "Ie/D\\Ns&F=") as Int64) ?? 16 / ((var_1689981724016_147) | 1)) - ((Class_1689981724016_7(Option<Array<UInt64>>.Some(var_1689981724016_1744)) as Int64) ?? (-92))
    }
;
    public static func func_1689981724016_24(param_1689981724016_25 : Interface_1689981724016_12, param_1689981724016_26 : Interface_1689981724016_15, optionalParam_1689981724016_27 ! : Interface_1689981724016_21 = Class_1689981724016_7(), namedParam_1689981724016_29 ! : Interface_1689981724016_16<UInt16, UInt8, String>) : Int64 { // block id: 30
        let var_1689981724016_1697 : ?Unit = Option<Unit>.Some(());
        func_1689981724016_36(namedParam_1689981724016_37 : (var_1689981724016_1697 ?? ()), optionalParam_1689981724016_38 : try { // block id: 1702
            var_1689981724016_1231;
            Int8(-22) * Int8(-27)
        } finally { // block id: 1707
            var_1689981724016_295 ^ var_1689981724016_295
        }, optionalParam_1689981724016_41 : (Option<Rune>.Some(r'W') ?? var_1689981724016_1715)).func_1689981724016_1718(try { // block id: 1748
            99
        } finally { // block id: 1750
            ();
            var_1689981724016_147
        })
    }

}

public open class Class_1689981724016_32 <: Class_1689981724016_7 & Interface_1689981724016_17 & Interface_1689981724016_14 {
    public init() { // block id: 34

    }
;
    public init(param_1689981724016_1009 : Float32, optionalParam_1689981724016_1010 ! : (Bool, Float32, Range<UInt64>, Range<Int32>) = ((UInt32(59) is Class_1689981724016_7), Float32(-74.0), ((UInt64(UInt64(167))&127)..=(UInt64(UInt64(8))&127):((-37)|1)), ((Int32(Int32(49))&127)..(Int32(Int32(-71))&127):(Int64(Int64(Int8(67)))|1)))) { // block id: 1022
        var_1689981724016_1026[3];
        let var_1689981724016_1074 : Interface_1689981724016_14 = Class_1689981724016_32();
        (try { // block id: 1049
            if (true) { Option<(Int8, Interface_1689981724016_14, Range<Int64>)>.Some(var_1689981724016_1054) } else { Option<(Int8, Interface_1689981724016_14, Range<Int64>)>.Some((Int8(1), Class_1689981724016_32(), ((Int64((-108))&127)..(Int64(var_1689981724016_147)&127):(var_1689981724016_147|1)))) } 
        } catch (e: Exception) { // block id: 1068
            ();
            Option<(Int8, Interface_1689981724016_14, Range<Int64>)>.Some((Int8(-30), var_1689981724016_1074, ((Int64(124)&127)..(Int64(97)&127):(var_1689981724016_147|1))))
        } ?? var_1689981724016_1083[3])[1]
    }

}


public struct Struct_1689981724016_97 {
    public init() { // block id: 99

    }
;
    public var var_1689981724016_1616 : Interface_1689981724016_12 = Class_1689981724016_7()
}



public func func_1689981724016_128() : Unit { // block id: 129
    ###"bg7cY~d9HK"###;
    (try { // block id: 137
        ((UInt8(var_1689981724016_140)&127)..=(UInt8(var_1689981724016_140)&127):((-31)|1));
        var_1689981724016_147 /= ((13) | 1);
        Option<Range<UInt16>>.Some(((UInt16(UInt16(81))&127)..(UInt16(UInt16(31))&127):(119|1)))
    } finally { // block id: 152
        var_1689981724016_154;
        Option<Range<UInt16>>.None
    } ?? match (((UInt32(var_1689981724016_164)&127)..(UInt32(UInt32(92))&127):(var_1689981724016_147|1))) {
        case _ => 
            ((UInt16(UInt16(212))&127)..=(UInt16(UInt16(50))&127):(var_1689981724016_147|1))
        
        case caseVar_1689981724016_177 : UInt16 => 
            var_1689981724016_66;
            ((UInt16(UInt16(73))&127)..(UInt16(UInt16(223))&127):(87|1))
        
        case caseVar_1689981724016_183 : Range<UInt64> => 
            ((UInt16(UInt16(113))&127)..=(UInt16(UInt16(70))&127):(40|1))
        
        case _ => 
            ();
            var_1689981724016_154
        
    });
    let var_1689981724016_244 : Range<Int64> = ((Int64((-113))&127)..(Int64((-7))&127):(39|1));
    var loopTimeVar_1689981724016_251 : Int64 = 0;
    do {
        loopTimeVar_1689981724016_251++;

    } while ((try { // block id: 194
        var_1689981724016_196;
        var_1689981724016_199
    } catch (e: Exception) { // block id: 234
        (var_1689981724016_237, var_1689981724016_240, var_1689981724016_244, true, Float32(94.0))
    }[1]) && loopTimeVar_1689981724016_251 < 100 ) 
}


public func func_1689981724016_256<T0, T1, T2>(param_1689981724016_257 : Interface_1689981724016_20) : (Bool, Float32, Range<UInt64>, Range<Int32>) { // block id: 258
    var_1689981724016_66;
    var var_1689981724016_266 : Bool = false;
    var var_1689981724016_282 : Range<Int32> = ((Int32(Int32(UInt16(121)))&127)..=(Int32(Int32(Int16(UInt8(Int8(21)))))&127):(Int64(UInt16(134))|1));
    let var_1689981724016_340 : (Bool, Float32, Range<UInt64>, Range<Int32>) = ((Class_1689981724016_7() is Interface_1689981724016_15), Float32(Float32(Float32(Float32(-61.0)))), ((UInt64(UInt64(137))&127)..=(UInt64(UInt64(83))&127):((-118)|1)), ((Int32(Int32(-37))&127)..(Int32(Int32(117))&127):(17|1)));
    try { // block id: 263
        var_1689981724016_266 ||= true;
        (((UInt16(UInt16(200))&127)..=(UInt16(UInt16(86))&127):(98|1)), (), (), (var_1689981724016_266, var_1689981724016_276, ((UInt64(UInt64(18))&127)..=(UInt64(UInt64(108))&127):(25|1)), var_1689981724016_282), Int16(-110), ((UInt8(UInt8(125))&127)..(UInt8(UInt8(233))&127):(5|1)), var_1689981724016_295)
    } catch (e: Exception) { // block id: 298
        ();
        var_1689981724016_301
    } finally { // block id: 334
        (((UInt16(UInt16(18))&127)..(UInt16(UInt16(191))&127):(102|1)), var_1689981724016_66, (), var_1689981724016_340, Int16(68), ((UInt8(UInt8(224))&127)..=(UInt8(UInt8(192))&127):((-65)|1)), Int8(29))
    }[2];
    let var_1689981724016_374 : UInt64 = UInt64(UInt32(205));
    (var_1689981724016_363 ?? try { // block id: 367
        (var_1689981724016_266, var_1689981724016_276, ((UInt64(UInt64(149))&127)..=(UInt64(var_1689981724016_374)&127):((-65)|1)), var_1689981724016_282)
    } finally { // block id: 379
        var_1689981724016_340;
        Class_1689981724016_7();
        var_1689981724016_340
    })
}

public func func_1689981724016_428(param_1689981724016_429 : (Range<UInt16>, Unit, Unit, (Bool, Float32, Range<UInt64>, Range<Int32>), Int16, Range<UInt8>, Int8)) : Option<(UInt8, Class_1689981724016_32, UInt32, Float64, String)> { // block id: 430
    var var_1689981724016_444 : Array<Option<UInt32>> = [Option<UInt32>.Some(UInt32(Int8(Int8(99)))), (Option<UInt32>.None as UInt32), Option<UInt32>.None, (80.0 as UInt32), Option<UInt32>.None, Option<UInt32>.None, (Option<UInt32>.None as UInt32), ((UInt8(UInt8(129)), Class_1689981724016_32(), UInt32(UInt32(243)), 29.0, ###"'#aavW393K"###) as UInt32), Option<UInt32>.None, Option<UInt32>.None];
    if (var_1689981724016_240) { (var_1689981724016_435 as UInt32) } else { (Int16(-25), var_1689981724016_444, ###"$s5/&b2dn<"###)[1][3] } ;
    var_1689981724016_475 &= Int8(105);
    var_1689981724016_483
}


public func func_1689981724016_486(param_1689981724016_487 : (Array<UInt64>, Bool, Range<Int64>, Bool, Float32)) : Option<(UInt8, Class_1689981724016_32, UInt32, Float64, String)> { // block id: 488
    (Option<Array<Option<UInt32>>>.None ?? var_1689981724016_496);
    var_1689981724016_483
}




public func func_1689981724016_546(param_1689981724016_547 : (Range<UInt16>, Unit, Unit, (Bool, Float32, Range<UInt64>, Range<Int32>), Int16, Range<UInt8>, Int8)) : (Array<UInt64>, Bool, Range<Int64>, Bool, Float32) { // block id: 548
    var var_1689981724016_680 : Float32 = Float32(49.0);
    let var_1689981724016_697 : Range<Int16> = ((Int16(Int16(82))&127)..=(Int16(Int16(-99))&127):((-52)|1));
    if (if ((var_1689981724016_557 ?? var_1689981724016_240)) { // block id: 560
        var_1689981724016_66;
        var_1689981724016_563
    } else if ((Class_1689981724016_7() is (UInt8, Class_1689981724016_32, UInt32, Float64, String))) { // block id: 567
        false
    } else { // block id: 569
        var_1689981724016_66;
        [Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.Some(UInt32(116)), Option<UInt32>.Some(UInt32(102)), Option<UInt32>.Some(var_1689981724016_164), var_1689981724016_112, var_1689981724016_112, Option<UInt32>.Some(var_1689981724016_164), var_1689981724016_112, Option<UInt32>.None];
        true || false
    }) { // block id: 589
        match (Int32(35)) {
            case caseVar_1689981724016_594 : (Range<UInt16>, Unit, Unit, (Bool, Float32, Range<UInt64>, Range<Int32>), Int16, Range<UInt8>, Int8) => 
                ((UInt8(UInt8(49))&127)..(UInt8(UInt8(41))&127):((-63)|1));
                var var_1689981724016_599 : UInt64 = UInt64(UInt16(51));
                var_1689981724016_599 &= var_1689981724016_603
            
            case _ : Rune => 
                var_1689981724016_66;
                ();
                ()
            
            case 60 | -35 | 102 => 
                ();
                var_1689981724016_66
            
            case -92 => 
                ()
            
            case _ => 
                var_1689981724016_276;
                var_1689981724016_628;
                var_1689981724016_66
            
        };
        ((Int16(Int16(15))&127)..(Int16(var_1689981724016_640)&127):((-6)|1))
    } else if (if (false) { // block id: 645
        var_1689981724016_140 != var_1689981724016_140
    } else { // block id: 649
        Int16(-117) != var_1689981724016_640
    }) { // block id: 653
        var_1689981724016_657[2];
        var var_1689981724016_687 : Range<Int16> = ((Int16(Int16(-127))&127)..(Int16(Int16(100))&127):((-65)|1));
        match (Class_1689981724016_7()) {
            case _ : UInt8 => 
                var_1689981724016_140 <<= ((var_1689981724016_140) & 7);
                var_1689981724016_680 -= Float32(126.0);
                if (var_1689981724016_563) { ((Int16(Int16(114))&127)..(Int16(Int16(82))&127):((-101)|1)) } else { var_1689981724016_687 } 
            
            case _ => 
                Int16(54) - Int16(-10);
                if (false) { var_1689981724016_697 } else { var_1689981724016_697 } 
            
        }
    } else { // block id: 700
        if (var_1689981724016_240) { ((Int16(Int16(84))&127)..=(Int16(Int16(96))&127):(53|1)) } else { ((Int16(Int16(95))&127)..=(Int16(Int16(-35))&127):(88|1)) } 
    };
    let var_1689981724016_735 : Array<UInt64> = [UInt64(40), UInt64(150), UInt64(251), UInt64(74), UInt64(124), UInt64(169), UInt64(139), UInt64(228), UInt64(12), UInt64(183)];
    var var_1689981724016_739 : Option<Bool> = Option<Bool>.Some(true);
    var var_1689981724016_795 : String = "y_T(BX!|7p";
    var var_1689981724016_809 : Int16 = Int16(118);
    (((var_1689981724016_717 ?? Option<Array<UInt64>>.None) ?? match (((UInt8(UInt8(234))&127)..(UInt8(UInt8(235))&127):(27|1))) {
        case caseVar_1689981724016_725 => 
            var var_1689981724016_728 : Rune = r'K';
            var_1689981724016_728;
            [UInt64(225), UInt64(133), UInt64(90), UInt64(181), UInt64(1), UInt64(150), UInt64(175), UInt64(16), UInt64(5), UInt64(40)]
        
        case _ => 
            ();
            var_1689981724016_735
        
    }), (var_1689981724016_739 ?? try { // block id: 743
        ();
        false || var_1689981724016_563
    } finally { // block id: 748
        var_1689981724016_751 %= ((Int32(68)) | 1);
        var_1689981724016_237;
        var_1689981724016_240 || true
    }), var_1689981724016_199[2], match (match (var_1689981724016_603) {
        case 225 | 174 => 
            let var_1689981724016_772 : String = "\\h\\cTf(g}M";
            if (var_1689981724016_563) { var_1689981724016_772 } else { "v${var_1689981724016_772}dpmJOKS2u" } 
        
        case caseVar_1689981724016_777 => 
            var var_1689981724016_782 : String = "HSs%z@m?\\9";
            if (var_1689981724016_240) { var_1689981724016_782 } else { """
i5${var_1689981724016_782}\"jT${var_1689981724016_782}
|.q.${var_1689981724016_782}O
""" } 
        
        case 109 => 
            (-82.0) / Float64((Int32(var_1689981724016_791)) | 1);
            var_1689981724016_196;
            var_1689981724016_795
        
        case caseVar_1689981724016_799 => 
            ();
            var_1689981724016_803
        
        case _ => 
            var_1689981724016_809 -= Int16(-122);
            """
nRZKf
ca{}#r
"""
        
    }) {
        case ###"8-mVPNGhv3"### | "$KNgVgl3B&" | "Z9XLU1w^Hd" => 
            true
        
        case _ => 
            var_1689981724016_739;
            ();
            var_1689981724016_164 >= var_1689981724016_164
        
    }, Float32(Float32(-76.0)))
}




func func_1689981724016_423(param_1689981724016_424 : Interface_1689981724016_12) : (UInt32, Range<Int64>, Float64, Interface_1689981724016_14) { // block id: 425
    let var_1689981724016_827 : ((Range<UInt16>, Unit, Unit, (Bool, Float32, Range<UInt64>, Range<Int32>), Int16, Range<UInt8>, Int8)) -> (Array<UInt64>, Bool, Range<Int64>, Bool, Float32) = func_1689981724016_546;
    (((((UInt16(UInt16(12))&127)..(UInt16(UInt16(173))&127):(var_1689981724016_147|1)), var_1689981724016_66, (), (false, Float32(-116.0), ((UInt64(UInt64(183))&127)..(UInt64(UInt64(251))&127):((-125)|1)), var_1689981724016_435), var_1689981724016_640, var_1689981724016_843, var_1689981724016_475)|>(var_1689981724016_827~>func_1689981724016_486)) ?? try { // block id: 853
        if (true) { ((Int8(var_1689981724016_475)&127)..(Int8(Int8(10))&127):((-43)|1)) } else { ((Int8(Int8(22))&127)..(Int8(Int8(-74))&127):((-97)|1)) } ;
        Class_1689981724016_32();
        var_1689981724016_863
    } finally { // block id: 881
        var_1689981724016_883;
        (var_1689981724016_475, Int16(-51), (var_1689981724016_140, Class_1689981724016_32(), UInt32(103), 104.0, "klBFC%0mT`"), ((Int8(Int8(88))&127)..=(Int8(Int8(-36))&127):((-77)|1)))
    }[2]);
    try { // block id: 901
        UInt64(209) / ((var_1689981724016_603) | 1);
        (Option<Unit>.Some(()) ?? var_1689981724016_913);
        try { // block id: 916
            let var_1689981724016_918 : Option<Array<Option<UInt32>>> = Option<Array<Option<UInt32>>>.None;
            var_1689981724016_918
        } catch (e: Exception) { // block id: 920
            Option<Array<Option<UInt32>>>.None
        }
    } finally { // block id: 922
        try { // block id: 924
            ((UInt16(UInt16(188))&127)..(UInt16(UInt16(40))&127):(1|1));
            var_1689981724016_45
        } finally { // block id: 927
            var_1689981724016_66;
            Class_1689981724016_7();
            Class_1689981724016_32()
        };
        let var_1689981724016_936 : Range<Int64> = ((Int64(23)&127)..=(Int64(Int64(Int32(Int8(78))))&127):((-22)|1));
        [((Int64((-88))&127)..(Int64((-123))&127):((-89)|1)), var_1689981724016_936, var_1689981724016_936, var_1689981724016_936, ((Int64(var_1689981724016_147)&127)..=(Int64((-49))&127):(74|1)), ((Int64(106)&127)..(Int64((-75))&127):((-59)|1)), ((Int64((-17))&127)..(Int64((-104))&127):(57|1)), var_1689981724016_936, ((Int64((-37))&127)..(Int64((-74))&127):((-55)|1)), ((Int64(119)&127)..(Int64((-16))&127):((-122)|1))][1];
        try { // block id: 956
            Int32(76);
            Struct_1689981724016_97();
            var var_1689981724016_960 : Option<Array<Option<UInt32>>> = (((((UInt8(UInt8(106))&127)..=(UInt8(UInt8(29))&127):((-88)|1)) as Unit) as Array<Option<UInt32>>) as Array<Option<UInt32>>);
            var_1689981724016_960
        } finally { // block id: 968
            var_1689981724016_970
        }
    };
    var var_1689981724016_1141 : (UInt32, Range<Int64>, Float64, Interface_1689981724016_14) = (UInt32(86), ((Int64((-115))&127)..(Int64((-13))&127):(12|1)), Float64(Float64(Float64((-81.0)))), Class_1689981724016_32());
    try { // block id: 973
        match (((Int64((-63))&127)..(Int64(20)&127):(89|1))) {
            case _ => 
                ()
            
        };
        ();
        let var_1689981724016_985 : (UInt32, Range<Int64>, Float64, Interface_1689981724016_14) = (UInt32(9), ((Int64(Int64(UInt32(125)))&127)..=(Int64(Int64(UInt16(175)))&127):(114|1)), (-95.0), Class_1689981724016_7());
        try { // block id: 981
            var_1689981724016_657;
            ();
            var_1689981724016_985
        } catch (e: Exception) { // block id: 996
            var_1689981724016_791 /= Float64((Int32(6.0)) | 1);
            UInt8(234);
            let var_1689981724016_1004 : Range<Int64> = ((Int64(108)&127)..(Int64(43)&127):((-43)|1));
            (var_1689981724016_164, var_1689981724016_1004, (-95.0), Class_1689981724016_32(Float32(-82.0), optionalParam_1689981724016_1010 : (true, Float32(113.0), ((UInt64(UInt64(10))&127)..=(UInt64(UInt64(224))&127):((-127)|1)), ((Int32(var_1689981724016_751)&127)..(Int32(Int32(17))&127):(var_1689981724016_147|1)))))
        }
    } finally { // block id: 1130
        (var_1689981724016_1137 ?? var_1689981724016_1141)
    }
}

public func func_1689981724016_124(param_1689981724016_125 : Interface_1689981724016_21) : Interface_1689981724016_14 { // block id: 126
    func_1689981724016_128();
    let var_1689981724016_384 : (Interface_1689981724016_20) -> (Bool, Float32, Range<UInt64>, Range<Int32>) = { lambdaParameter_1689981724016_387 : Interface_1689981724016_20 => (false, Float32(Float32(-19.0)), ((UInt64(UInt64(Int8(74)))&127)..=(UInt64(UInt64(106))&127):(Int64(63)|1)), ((Int32(Int32(105))&127)..(Int32(Int32(-85))&127):(97|1))) };
    var loopTimeVar_1689981724016_419 : Int64 = 0;
    do {
        loopTimeVar_1689981724016_419++;
        var loopTimeVar_1689981724016_409 : Int64 = 0;
        do {
            loopTimeVar_1689981724016_409++;

        } while ((var_1689981724016_240) && loopTimeVar_1689981724016_409 < 100 ) ;
        var loopTimeVar_1689981724016_417 : Int64 = 0;
        do {
            loopTimeVar_1689981724016_417++;
            var_1689981724016_414
        } while ((var_1689981724016_240) && loopTimeVar_1689981724016_417 < 100 ) 
    } while (((var_1689981724016_401|>var_1689981724016_384)[0]) && loopTimeVar_1689981724016_419 < 100 ) ;
    var var_1689981724016_1151 : (Interface_1689981724016_12) -> (UInt32, Range<Int64>, Float64, Interface_1689981724016_14) = func_1689981724016_423;
    (var_1689981724016_1154|>var_1689981724016_1151)[3]
}


public func func_1689981724016_120<T0, T1>(param_1689981724016_121 : UInt8) : Interface_1689981724016_14 { // block id: 122
    var var_1689981724016_1158 : (Interface_1689981724016_21) -> Interface_1689981724016_14 = func_1689981724016_124;
    var var_1689981724016_1210 : Int64 = 102;
    (Option<(Float64, Interface_1689981724016_21, Array<Range<Int64>>, Float64)>.None ?? (var_1689981724016_791, Class_1689981724016_32(Float32(-67.0)), [((Int64(var_1689981724016_147)&127)..(Int64(var_1689981724016_147)&127):(var_1689981724016_147|1)), ((Int64(var_1689981724016_147)&127)..(Int64(var_1689981724016_147)&127):(var_1689981724016_147|1)), ((Int64(var_1689981724016_147)&127)..(Int64(75)&127):(var_1689981724016_147|1)), ((Int64(98)&127)..=(Int64(41)&127):((-1)|1)), ((Int64(var_1689981724016_147)&127)..=(Int64(var_1689981724016_147)&127):((-109)|1)), var_1689981724016_1191, ((Int64((-27))&127)..(Int64(var_1689981724016_147)&127):(29|1)), var_1689981724016_1191, ((Int64(var_1689981724016_147)&127)..=(Int64(var_1689981724016_1210)&127):(var_1689981724016_1210|1)), ((Int64((-112))&127)..(Int64(36)&127):(97|1))], var_1689981724016_791))[1]|>var_1689981724016_1158
}


func func_1689981724016_116(param_1689981724016_117 : Int32) : Class_1689981724016_7 { // block id: 118
    let var_1689981724016_1220 : (UInt8) -> Interface_1689981724016_14 = func_1689981724016_120<Interface_1689981724016_20, UInt16>;
    try { // block id: 1223
        var_1689981724016_140--;
        var_1689981724016_140 & var_1689981724016_140
    } catch (_) { // block id: 1229
        var_1689981724016_1231;
        UInt8(251)
    }|>var_1689981724016_1220;
    var var_1689981724016_1238 : (UInt8, Class_1689981724016_32, UInt32, Float64, String) = (UInt8(Int8(Int8(UInt8(189)))), Class_1689981724016_32(), UInt32(Int16(43)), Float64(Float64(Float32(-33.0))), "7-|j&:LOzk");
    var loopTimeVar_1689981724016_1255 : Int64 = 0;
    do {
        loopTimeVar_1689981724016_1255++;
        UInt16(var_1689981724016_140)
    } while ((((var_1689981724016_1238 as (Int8, Interface_1689981724016_14, Range<Int64>)) is Int8)) && loopTimeVar_1689981724016_1255 < 100 ) ;
    (try { // block id: 1262
        var_1689981724016_1264
    } catch (_) { // block id: 1266
        var var_1689981724016_1269 : Int16 = Int16(Int8(Int8(Int8(UInt8(112)))));
        var_1689981724016_1269 &= Int16(-33);
        var_1689981724016_1264
    } ?? (try { // block id: 1279
        var_1689981724016_66;
        var_1689981724016_1264
    } finally { // block id: 1282
        var var_1689981724016_1285 : UInt64 = UInt64(113);
        var_1689981724016_1285 /= ((UInt64(163)) | 1);
        var_1689981724016_1289;
        var_1689981724016_1264
    } ?? var_1689981724016_1293))
}








public func func_1689981724016_55(param_1689981724016_56 : Int16) : Option<(UInt8, Class_1689981724016_32, UInt32, Float64, String)> { // block id: 57
    var var_1689981724016_62 : Bool = true;
    let var_1689981724016_1308 : Option<(Int8, Interface_1689981724016_14, Range<Int64>)> = (Int64(Int8(-78)) as (Int8, Interface_1689981724016_14, Range<Int64>));
    let var_1689981724016_1315 : Interface_1689981724016_14 = Class_1689981724016_32();
    let var_1689981724016_1609 : Interface_1689981724016_18<UInt32, Int8> = Class_1689981724016_32(Float32(-81.0));
    try { // block id: 59
        var loopTimeVar_1689981724016_68 : Range<UInt64> = ((UInt64(UInt64(Int8(UInt8(35))))&127)..=(UInt64(UInt64(Int8(Int8(Int8(38)))))&127):(Int64(UInt16(155))|1));
        for (i in loopTimeVar_1689981724016_68 where var_1689981724016_62) {
            var_1689981724016_66
        };
        var_1689981724016_45;
        let var_1689981724016_1383 : Interface_1689981724016_10 = Class_1689981724016_7(Option<Array<UInt64>>.Some([UInt64(121), UInt64(133), UInt64(223), UInt64(33), UInt64(68), UInt64(83), UInt64(40), UInt64(69), UInt64(152), UInt64(172)]));
        let var_1689981724016_1515 : Float32 = Float32(-4.0);
        func func_1689981724016_101(param_1689981724016_102 : Interface_1689981724016_18<UInt32, Int8>) : Struct_1689981724016_97 { // block id: 103
            try { // block id: 105
                var_1689981724016_112.getOrThrow();
                var var_1689981724016_1296 : (Int32) -> Class_1689981724016_7 = func_1689981724016_116;
                Int32(53)|>var_1689981724016_1296
            } catch (e: Exception) { // block id: 1299
                Option<Range<UInt64>>.None.getOrThrow();
                (var_1689981724016_1308 ?? (var_1689981724016_475, var_1689981724016_1315, ((Int64((-12))&127)..=(Int64(59)&127):(46|1))));
                Class_1689981724016_32()
            } finally { // block id: 1319
                try { // block id: 1321
                    Option<Range<UInt16>>.None;
                    var_1689981724016_1293
                } catch (_) { // block id: 1324
                    Class_1689981724016_7(namedParam_1689981724016_1327 : Class_1689981724016_7(), optionalParam_1689981724016_1328 : r'O', namedParam_1689981724016_1330 : Class_1689981724016_7(), namedParam_1689981724016_1331 : var_1689981724016_883)
                } finally { // block id: 1372
                    Class_1689981724016_7()
                }
            };
            let var_1689981724016_1529 : Int8 = Int8(-48);
            let var_1689981724016_1553 : Rune = r'x';
            let var_1689981724016_1604 : Struct_1689981724016_97 = Struct_1689981724016_97();
            if (if (var_1689981724016_751 == Int32(-99)) { // block id: 1379
                true
            } else if ((var_1689981724016_1383 is Int16)) { // block id: 1507
                Option<Unit>.Some(());
                (-6.0) ** var_1689981724016_147;
                var_1689981724016_1515 <= var_1689981724016_1515
            } else { // block id: 1518
                true && var_1689981724016_240
            }) { // block id: 1522
                Option<Option<Array<UInt64>>>.None;
                match (var_1689981724016_295) {
                    case _ => 
                        var_1689981724016_1529;
                        var_1689981724016_563 &&= var_1689981724016_240;
                        if (true) { var_1689981724016_1537 } else { ((UInt32(var_1689981724016_164)&127)..=(UInt32(var_1689981724016_164)&127):(67|1)) } 
                    
                };
                var var_1689981724016_1557 : Option<Option<(Bool, Float32, Range<UInt64>, Range<Int32>)>> = (((Int16(Int16(UInt8(Int8(-121))))&127)..=(Int16(Int16(119))&127):(Int64(Int32(Int16(-10)))|1)) as Option<(Bool, Float32, Range<UInt64>, Range<Int32>)>);
                try { // block id: 1549
                    if (var_1689981724016_240) { var_1689981724016_1553 } else { r'w' } ;
                    var_1689981724016_1557;
                    Struct_1689981724016_97()
                } catch (_) { // block id: 1568
                    var_1689981724016_1026;
                    Struct_1689981724016_97()
                }
            } else if (UInt8(130) >= try { // block id: 1574
                var_1689981724016_1577 /= ((var_1689981724016_1577) | 1);
                UInt8(92)
            } finally { // block id: 1581
                UInt8(185)
            }) { // block id: 1583
                try { // block id: 1585
                    ();
                    Option<Class_1689981724016_7>.Some(var_1689981724016_1293)
                } finally { // block id: 1589
                    Option<Class_1689981724016_7>.None
                };
                Class_1689981724016_32();
                (Option<Struct_1689981724016_97>.None ?? Struct_1689981724016_97())
            } else { // block id: 1599
                var_1689981724016_717;
                (Option<Struct_1689981724016_97>.None ?? var_1689981724016_1604)
            }
        }
;
        let var_1689981724016_1632 : Rune = r'4';
        let var_1689981724016_1640 : Rune = r'y';
        let var_1689981724016_1658 : ?Interface_1689981724016_13 = Option<Interface_1689981724016_13>.None;
        func func_1689981724016_90(param_1689981724016_91 : UInt32, param_1689981724016_92 : Range<Int16>, param_1689981724016_93 : Interface_1689981724016_20, param_1689981724016_94 : Int16) : Interface_1689981724016_11 { // block id: 95
            func_1689981724016_101(try { // block id: 1607
                var_1689981724016_1609
            } catch (e: Exception) { // block id: 1612
                Class_1689981724016_32(var_1689981724016_276)
            }).var_1689981724016_1616;
            var_1689981724016_66;
            let var_1689981724016_1646 : Rune = r'N';
            Class_1689981724016_7(namedParam_1689981724016_1327 : Class_1689981724016_7(), optionalParam_1689981724016_1328 : if ((UInt16(109) < var_1689981724016_1577)) { (Option<Rune>.None ?? var_1689981724016_1632) } else { [r'f', r'x', var_1689981724016_1640, r'H', var_1689981724016_1640, r'G', var_1689981724016_1646, r'W', r'P', r'O'][6] } , namedParam_1689981724016_1330 : var_1689981724016_1658.getOrThrow(), namedParam_1689981724016_1331 : try { // block id: 1661
                var_1689981724016_563 &&= var_1689981724016_240;
                ();
                var_1689981724016_1154
            } finally { // block id: 1667
                var_1689981724016_883
            })
        }
;
        func_1689981724016_90(UInt32(245), ((Int16(Int16(46))&127)..=(Int16(var_1689981724016_640)&127):(var_1689981724016_147|1)), Class_1689981724016_32(Float32(-39.0)), Int16(56))
    } catch (e: Exception) { // block id: 1677
        Class_1689981724016_7(var_1689981724016_1349)
    };
    (Option<Array<UInt64>>.None as (UInt8, Class_1689981724016_32, UInt32, Float64, String))
}

func func_1689981724016_36(namedParam_1689981724016_37 ! : Unit, optionalParam_1689981724016_38 ! : Int8 = Int8(Int8(61)), optionalParam_1689981724016_41 ! : Rune = r'f') : Class_1689981724016_32 { // block id: 43
    var_1689981724016_45;
    ((var_1689981724016_640|>func_1689981724016_55) ?? (var_1689981724016_140, Class_1689981724016_32(), var_1689981724016_164, var_1689981724016_791, ###"T>Af_R3L-."###))[1]
}




main(): Int64 {
    try {
        Class_1689981724016_7.func_1689981724016_24(Class_1689981724016_7(var_1689981724016_1349), Class_1689981724016_7(namedParam_1689981724016_1327 : var_1689981724016_1154, optionalParam_1689981724016_1328 : var_1689981724016_1715, namedParam_1689981724016_1330 : var_1689981724016_1448, namedParam_1689981724016_1331 : Class_1689981724016_32()), namedParam_1689981724016_29 : var_1689981724016_1761)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1689981724016_164*var_1689981724016_164), 64)
        crccheck.updateBuffer(UInt64(var_1689981724016_295*var_1689981724016_295), 64)
        crccheck.updateBuffer(UInt64(var_1689981724016_475*var_1689981724016_475), 64)
        crccheck.updateBuffer(UInt64(var_1689981724016_603*var_1689981724016_603), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1689981724016_32 {

}

