/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

@Deprecated
public var var_1749490693391_46: UInt16 = UInt16(Int16(120))
const var_1749490693391_72: Bool = true
@Deprecated
var var_1749490693391_77: Unit = ()
@Deprecated
public var var_1749490693391_118: Int8 = Int8(13)
@Deprecated
public let var_1749490693391_121: Int8 = Int8(UInt8(UInt8(UInt8(116))))
internal var var_1749490693391_201: Byte = UInt8(242)
@Deprecated
public let var_1749490693391_210: Range<Int8> = ((Int8(Int8(-50)) & 127)..=(Int8(Int8(-47)) & 127) : (Int64(-9) | 1))
public let var_1749490693391_276: Range<Int16> = ((Int16(Int16(-53)) & 127)..=(Int16(Int16(-87)) & 127) : (Int64(95) | 1))
let var_1749490693391_283: UInt32 = UInt32(UInt32(52))
public var var_1749490693391_297: Unit = ()
var var_1749490693391_305: Bool = true
public const var_1749490693391_347: UInt16 = 191
public const var_1749490693391_355: String = "9%$%p!8EA+"
const var_1749490693391_396: UInt64 = 4
internal const var_1749490693391_409: Int8 = -110
const var_1749490693391_440: Unit = ()
public const var_1749490693391_478: Unit = ()
public const var_1749490693391_486: UInt32 = 158
public const var_1749490693391_491: Float32 = 37.0
let var_1749490693391_534: Float32 = Float32(-98.0)
var var_1749490693391_567: Int16 = Int16(-59)
@Deprecated
internal let var_1749490693391_602: VArray<UInt64, $8> = [UInt64(109), UInt64(51), UInt64(19), UInt64(190), UInt64(105),
    UInt64(93), UInt64(162), UInt64(140)]
public let var_1749490693391_667: Option<VArray<Unit, $7>> = Option<VArray<Unit, $7>>.None
@Deprecated
public const var_1749490693391_729: UInt16 = 48
public const var_1749490693391_737: Int16 = 81
public let var_1749490693391_782: (Class_1749490693391_543, Option<Interface_1749490693391_546>, Class_1749490693391_543, 
    Range<Int64>, Option<VArray<Unit, $7>>) = (Class_1749490693391_543(), Option<Interface_1749490693391_546>.None,
    Class_1749490693391_543(), ((Int64(Int64(UInt8(Int8(-30)))) & 127)..=(Int64(Int64(UInt16(124))) & 127) : (Int64(Int8(-10)) |
        1)), Option<VArray<Unit, $7>>.None)
@Deprecated
const var_1749490693391_806: Bool = false
public let var_1749490693391_843: Rune = r'U'
public const var_1749490693391_849: UInt = 130
let var_1749490693391_898: (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8) = (UInt8(Int8(30)), ((UInt8(UInt8(243)) &
        127)..=(UInt8(UInt8(223)) & 127) : (Int64(25) | 1)), ((UInt16(UInt16(89)) & 127)..(UInt16(UInt16(177)) & 127) : (Int64(116) |
        1)), ((Int8(Int8(-26)) & 127)..=(Int8(Int8(74)) & 127) : (Int64(-91) | 1)), Int8(UInt8(185)))
let var_1749490693391_962: Class_1749490693391_958<UInt64, Rune, Range<Int8>> = Class_1749490693391_958<UInt64, Rune, Range<Int8>>()
internal var var_1749490693391_981: ?UInt64 = (Class_1749490693391_958<UInt64, Rune, Range<Int8>>() as UInt64)
internal let var_1749490693391_1024: VArray<UInt64, $1> = [UInt64(127)]
var var_1749490693391_1147: UInt32 = UInt32(Int8(UInt8(67)))
public let var_1749490693391_1310: Range<Int32> = ((Int32(Int32(-103)) & 127)..(Int32(Int32(-55)) & 127) : (Int64(-26) |
    1))
@Deprecated
public var var_1749490693391_1364: Int16 = Int16(-56)
@Deprecated
internal var var_1749490693391_1380: Int64 = Int64(123)
public var var_1749490693391_1451: Int32 = Int32(43)
public const var_1749490693391_1457: Int16 = 23
public let var_1749490693391_1492: Interface_1749490693391_547 = Class_1749490693391_958<UInt64, Rune, Range<Int8>>()
@Deprecated
public let var_1749490693391_1554: ((VArray<Unit, $7>, VArray<Unit, $7>, (Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, 
    Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), (UInt8, Range<UInt8>, 
    Range<UInt16>, Range<Int8>, Int8), UInt64, Option<VArray<Unit, $7>>, Option<Enum_1749490693391_19>), String, UInt8, 
    Range<UInt32>, ((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, 
    Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
    Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune)) = ((VArray<Unit, $7>({i => ()}), VArray<Unit, $7>({
                i => ()
            }), (Int64(-71), (Class_1749490693391_543() as (Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
                Range<Int8>, Int8))), Int32(Int8(-114)), (Int64(-7) is UInt64), [Int16(77), Int16(0), Int16(-25),
                Int16(126), Int16(102), Int16(93), Int16(-108), Int16(11), Int16(65), Int16(-71)], ((Int64(Int64(17)) &
                127)..=(Int64(Int64(-43)) & 127) : (Int64(65) | 1))), (UInt8(212), ((UInt8(UInt8(241)) & 127)..=(UInt8(UInt8(186)) &
                127) : (Int64(-107) | 1)), ((UInt16(UInt16(152)) & 127)..(UInt16(UInt16(27)) & 127) : (Int64(-109) | 1)),
            ((Int8(Int8(124)) & 127)..=(Int8(Int8(-124)) & 127) : (Int64(115) | 1)), Int8(Int8(33))), UInt64(168), Option<VArray<Unit, $7>>
            .None, Option<Enum_1749490693391_19>.None), ###"((a{cR(-yRp"###, UInt8(202), ((UInt32(UInt32(75)) & 127)..(UInt32(UInt32(221)) &
        127) : (Int64(-49) | 1)), ((Int64(-34), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
                    Range<Int8>, Int8))>.None, Int32(78), (r'o' is VArray<Unit, $7>), [Int16(115), Int16(-31),
                Int16(-27), Int16(78), Int16(-26), Int16(-60), Int16(63), Int16(103), Int16(5), Int16(-8)], ((Int64(Int64(-89)) &
                127)..(Int64(Int64(-6)) & 127) : (Int64(68) | 1))), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
                Range<UInt16>, Range<Int8>, Int8))>.None, (UInt32(Int16(70)) as UInt64), [UInt32(85), UInt32(32),
            UInt32(99), UInt32(96), UInt32(UInt8(244)), UInt32(158), UInt32(94), UInt32(UInt8(95)), UInt32(Int8(-93)),
            UInt32(UInt32(253))], r'e'))
let var_1749490693391_1670: Option<Bool> = (UInt8(189) as Bool)
var var_1749490693391_1725: Option<VArray<UInt64, $8>> = (Option<VArray<Unit, $7>>.None as VArray<UInt64, $8>)
var var_1749490693391_1750: (((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
    Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
    Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune), Int16, VArray<Unit, $7>, Range<UInt64>, (Unit, Bool, 
    Rune, Bool), UInt64) = (((Int64(-59), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
                    Int8))>.None, Int32(UInt32(93)), false, [Int16(-98), Int16(-46), Int16(104), Int16(118), Int16(-10),
                Int16(68), Int16(57), Int16(-18), Int16(33), Int16(-22)], ((Int64(Int64(94)) & 127)..=(Int64(Int64(-85)) &
                127) : (Int64(-25) | 1))), (Class_1749490693391_958<UInt64, Rune, Range<Int8>>() as (Option<VArray<Unit, $7>>, 
            (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))), (Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
                Range<UInt16>, Range<Int8>, Int8))>.None as UInt64), [UInt32(166), UInt32(33), UInt32(159), UInt32(93),
            UInt32(143), UInt32(130), UInt32(72), UInt32(137), UInt32(100), UInt32(86)], r'o'), Int16(UInt16(Int16(58))),
    VArray<Unit, $7>(repeat: ()), ((UInt64(UInt64(UInt8(UInt8(143)))) & 127)..=(UInt64(UInt64(Int8(Int8(-107)))) & 127) : (Int64(Int16(33)) |
        1)), ((), (() is Int16), r'u', true), UInt64(UInt32(70)))
public let var_1749490693391_1947: ?(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8)) = Option<(Option<VArray<Unit, $7>>, 
        (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.None
var var_1749490693391_1962: Rune = r'T'
var var_1749490693391_1983: UInt8 = UInt8(92)
var var_1749490693391_1999: VArray<Unit, $7> = [(), (), (), (), (), (), ()]
let var_1749490693391_2022: (Unit, Bool, Rune, Bool) = ((), (((Int16(Int16(UInt16(220))) & 127)..(Int16(Int16(Int16(5))) &
        127) : (Int64(Int8(18)) | 1)) is (Class_1749490693391_543, Option<Interface_1749490693391_546>, 
        Class_1749490693391_543, Range<Int64>, Option<VArray<Unit, $7>>)), r'Q', false)
public let var_1749490693391_2069: Array<Int16> = [Int16(123), Int16(-110), Int16(-50), Int16(46), Int16(-63), Int16(22),
    Int16(-59), Int16(-69), Int16(95), Int16(118)]
public let var_1749490693391_2072: Range<Int64> = ((Int64(Int64(90)) & 127)..=(Int64(Int64(69)) & 127) : (Int64(-90) | 1))
public let var_1749490693391_2102: UInt64 = UInt64(Int64(Int8(Int8(40))))
var var_1749490693391_2124: (Unit, Bool, Rune, Bool) = ((), (VArray<UInt64, $8>(repeat: UInt64(UInt16(83))) is Array<Option<UInt64>>),
    r'Y', true)
var var_1749490693391_2200: Unit = ()
public var var_1749490693391_2306: Option<(Unit, Bool, Rune, Bool)> = (((Int8(Int8(10)) & 127)..(Int8(Int8(62)) & 127) : (Int64(2) |
    1)) as (Unit, Bool, Rune, Bool))
public let var_1749490693391_2353: Float64 = Float64(Float64(Float64(Float64(-88.0))))
public let var_1749490693391_2369: ?Int16 = Option<Int16>.None
let var_1749490693391_2582: Rune = r'L'
public const var_1749490693391_2677: Int64 = -69
var var_1749490693391_2734: ?Unit = Option<Unit>.None
public let var_1749490693391_2809: ((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
    Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
    Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune) = ((Int64(UInt32(212)), Option<(Option<VArray<Unit, $7>>, 
                (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.None, Int32(UInt16(2)), true, [Int16(21),
            Int16(-87), Int16(-26), Int16(-114), Int16(74), Int16(116), Int16(-38), Int16(86), Int16(-60), Int16(-12)], ((Int64(Int64(53)) &
            127)..(Int64(Int64(UInt32(192))) & 127) : (Int64(118) | 1))), Option<(Option<VArray<Unit, $7>>, (UInt8, 
            Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.None, (((Int32(Int32(16)) & 127)..=(Int32(Int32(-12)) & 127) : (Int64(-51) |
        1)) as UInt64), [UInt32(UInt16(UInt16(211))), UInt32(Int16(25)), UInt32(UInt32(UInt32(48))), UInt32(Int8(-81)),
        UInt32(Int8(-16)), UInt32(Int16(UInt8(215))), UInt32(Int32(-79)), UInt32(UInt32(172)), UInt32(Int8(Int8(12))),
        UInt32(103)], r'K')

@Deprecated
public enum Enum_1749490693391_19 {
    defaultValue
    | enumValue_1749490693391_35(Int64, Unit, Float32)
    | enumValue_1749490693391_149(Int16, Int64, String, UInt64)
}

@Frozen
public const func func_1749490693391_266(param_1749490693391_390: Bool, param_1749490693391_391: Unit,
    param_1749490693391_392: Int32, param_1749490693391_393: Float64): UInt64 { // block id: 394
    var_1749490693391_396
}

@Deprecated
internal const func func_1749490693391_399(): Bool { // block id: 400
    ();
    const var_1749490693391_403: Bool = true;
    var_1749490693391_403
}

@Frozen
internal const func func_1749490693391_457(namedParam_1749490693391_458!: Unit,
    optionalParam_1749490693391_459!: Int16 = -25, optionalParam_1749490693391_461!: Float32 = -34.0,
    optionalParam_1749490693391_463!: Unit = ()): Float32 { // block id: 465
    const var_1749490693391_482: Float64 = -50.0;
    const func func_1749490693391_469(optionalParam_1749490693391_470!: UInt8 = 222,
        optionalParam_1749490693391_472!: UInt8 = 126, namedParam_1749490693391_474!: UInt32,
        namedParam_1749490693391_475!: Float32): Float64 { // block id: 476
        var_1749490693391_478;
        var_1749490693391_440;
        var_1749490693391_482
    };

    104.0 * func_1749490693391_469(optionalParam_1749490693391_472: 166,
        namedParam_1749490693391_474: var_1749490693391_486, namedParam_1749490693391_475: -113.0);
    var_1749490693391_491 - -47.0
}

@Deprecated
const func func_1749490693391_406(): Unit { // block id: 407
    var_1749490693391_409;
    const var_1749490693391_413: Float64 = -111.0;
    const func func_1749490693391_423(namedParam_1749490693391_424!: UInt32): Unit { // block id: 425
        r'D';
        ();
        const var_1749490693391_443: Unit = ();
        const func func_1749490693391_435(namedParam_1749490693391_436!: UInt64): Unit { // block id: 437
            ();
            var_1749490693391_440;
            var_1749490693391_443
        };

        const func func_1749490693391_429<T0, T1>(optionalParam_1749490693391_430!: Bool = false): Unit { // block id: 432
            var_1749490693391_409;
            func_1749490693391_435(namedParam_1749490693391_436: var_1749490693391_396);
            var_1749490693391_443
        };

        func_1749490693391_429<Float32, Float32>()
    };

    const func func_1749490693391_416(namedParam_1749490693391_417!: UInt64,
        optionalParam_1749490693391_418!: Float64 = -54.0, namedParam_1749490693391_420!: String): Float64 { // block id: 421
        const func func_1749490693391_448(param_1749490693391_449: Float32, param_1749490693391_450: Float64,
            param_1749490693391_451: Float32, optionalParam_1749490693391_452!: Bool = true): UInt32 { // block id: 454
            194
        };

        func_1749490693391_423(
            namedParam_1749490693391_424: func_1749490693391_448(
                func_1749490693391_457(namedParam_1749490693391_458: var_1749490693391_440,
                    optionalParam_1749490693391_459: 77, optionalParam_1749490693391_461: 126.0), var_1749490693391_413,
                var_1749490693391_491, optionalParam_1749490693391_452: true));
        var_1749490693391_413
    };

    var_1749490693391_413 * func_1749490693391_416(namedParam_1749490693391_417: var_1749490693391_396,
        namedParam_1749490693391_420: var_1749490693391_355);
    var_1749490693391_440
}

@Frozen
public const func func_1749490693391_382(param_1749490693391_383: Int64): UInt64 { // block id: 384
    ();
    var_1749490693391_347;
    func_1749490693391_266(func_1749490693391_399(), func_1749490693391_406(), -118, 0.0) % ((186) | 1)
}

@Deprecated
const func func_1749490693391_358(param_1749490693391_359: Float64, optionalParam_1749490693391_360!: Float32 = 96.0): Float32 { // block id: 362
    const var_1749490693391_364: Rune = r'q';
    var_1749490693391_364;
    ();
    const func func_1749490693391_368(): Float32 { // block id: 369
        const func func_1749490693391_371(param_1749490693391_372: UInt64,
            optionalParam_1749490693391_373!: Rune = r'q', namedParam_1749490693391_375!: String,
            optionalParam_1749490693391_376!: Int16 = -10): Float32 { // block id: 378
            ();
            88.0
        };

        const var_1749490693391_508: Int = 123;
        const var_1749490693391_512: Int16 = -61;
        func_1749490693391_371(func_1749490693391_382(var_1749490693391_508),
            namedParam_1749490693391_375: "aa{>%w!<KyM", optionalParam_1749490693391_376: var_1749490693391_512)
    };

    func_1749490693391_368()
}

@Frozen
@Deprecated
public const func func_1749490693391_350(namedParam_1749490693391_351!: Bool, namedParam_1749490693391_352!: UInt32): Float32 { // block id: 353
    var_1749490693391_355;
    const var_1749490693391_515: Float64 = 47.0;
    func_1749490693391_358(var_1749490693391_515)
}

public sealed interface Interface_1749490693391_549 {}

public interface Interface_1749490693391_550 {
    static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 857
        let var_1749490693391_868: (Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
            Int8))>, Int32, Bool, Array<Int16>, Range<Int64>) = (Int64(-100),
            Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.Some(
                (Option<VArray<Unit, $7>>.None, (UInt8(34), ((UInt8(UInt8(164)) & 127)..(UInt8(UInt8(67)) & 127) : (Int64(-103) |
                            1)), ((UInt16(UInt16(0)) & 127)..=(UInt16(UInt16(114)) & 127) : (Int64(-108) | 1)), ((Int8(Int8(-19)) &
                            127)..(Int8(Int8(106)) & 127) : (Int64(-67) | 1)), Int8(62)))), Int32(Int8(-101)), (UInt8(Int8(UInt8(218))) is Range<Int32>),
            [Int16(43), Int16(113), Int16(41), Int16(-15), Int16(-109), Int16(-31), Int16(93), Int16(-48), Int16(-19),
                Int16(66)], ((Int64(Int64(-102)) & 127)..=(Int64(Int64(100)) & 127) : (Int64(40) | 1)));
        (var_1749490693391_868[1] ?? (Option<VArray<Unit, $7>>.None, var_1749490693391_898))[1];
        var var_1749490693391_928: Array<UInt16> = [UInt16(211), UInt16(21), UInt16(UInt16(245)),
            UInt16(UInt16(Int8(0))), UInt16(Int16(UInt8(Int8(25)))), UInt16(UInt16(Int8(UInt8(88)))), UInt16(Int8(-125)),
            UInt16(UInt16(Int8(-31))), UInt16(UInt16(UInt16(UInt8(178)))), UInt16(Int16(47))];
        try { // block id: 911
            [UInt16(12), UInt16(174), UInt16(42), UInt16(83), UInt16(9), UInt16(195), UInt16(147), UInt16(202),
                UInt16(52), UInt16(54)]
        } catch (e: Exception) { // block id: 913
            if (false) {
                [var_1749490693391_46, UInt16(207), UInt16(57), var_1749490693391_347, var_1749490693391_347,
                    var_1749490693391_46, UInt16(7), var_1749490693391_46, var_1749490693391_46, var_1749490693391_46]
            } else {
                var_1749490693391_928
            }
        }[5];
        const var_1749490693391_1297: Int64 = 83;
        let var_1749490693391_1317: ?UInt8 = Option<UInt8>.Some(UInt8(UInt8(Int8(-54))));
        var var_1749490693391_1337: UInt64 = UInt64(Int16(Int8(Int8(UInt8(53)))));
        let var_1749490693391_1348: Range<Int32> = ((Int32(Int32(13)) & 127)..=(Int32(Int32(UInt8(210))) & 127) : (Int64(30) |
            1));
        var_1749490693391_962.func_1749490693391_965(if (var_1749490693391_305) {
            VArray<UInt64, $8>({i => UInt64(139)})
        } else {
            var_1749490693391_602
        }, if (false) {
            ((UInt64(UInt64(130)) & 127)..(UInt64(UInt64(126)) & 127) : (var_1749490693391_1297 | 1))
        } else {
            ((UInt64(var_1749490693391_396) & 127)..(UInt64(var_1749490693391_396) & 127) : (var_1749490693391_1297 | 1))
        }, namedParam_1749490693391_968: if (true) { // block id: 1305
            const var_1749490693391_1307: Unit = ();
            var_1749490693391_1307;
            var_1749490693391_1310
        } else if (false) { // block id: 1313
            if (true) {
                var_1749490693391_1317
            } else {
                var_1749490693391_1317
            };
            ();
            var var_1749490693391_1326: Int32 = Int32(-111);
            ((Int32(var_1749490693391_1326) & 127)..(Int32(Int32(-1)) & 127) : (var_1749490693391_1297 | 1))
        } else { // block id: 1330
            if (true) {
                """
dD.;S
mmKD>
"""
            } else {
                "R9>%j`Yk+f"
            };
            var_1749490693391_1337 /= ((var_1749490693391_1337) | 1)
            if (false) {
                ((Int32(Int32(-51)) & 127)..=(Int32(Int32(38)) & 127) : (Int64(15) | 1))
            } else {
                var_1749490693391_1348
            }
        })
    }
}

public interface Interface_1749490693391_548 <: Interface_1749490693391_549 & Interface_1749490693391_550 {
    static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 1662
        let var_1749490693391_1675: Option<Bool> = (Int16(-31) as Bool);
        let var_1749490693391_1702: ?Unit = Option<Unit>.None;
        if ((var_1749490693391_1670 ?? (var_1749490693391_1675 ?? false))) { // block id: 1679
            if (false) { // block id: 1682
                var_1749490693391_478;
                var_1749490693391_478
            } else if (true) { // block id: 1686

            }
            (Option<Unit>.Some(()) ?? var_1749490693391_440);
            if (var_1749490693391_305) {
                var_1749490693391_843
            } else {
                r'i'
            }
        } else { // block id: 1695
            (var_1749490693391_1702 ?? ());
            ((Int32(Int32(-115)) & 127)..=(Int32(Int32(41)) & 127) : (Int64(-54) | 1));
            if (true) {
                r'0'
            } else {
                var_1749490693391_843
            }
        };
        let var_1749490693391_1818: ?UInt8 = (VArray<UInt64, $8>(repeat: UInt64(112)) as UInt8);
        if (var_1749490693391_305) { // block id: 1712
            var loopTimeVar_1749490693391_1718: Int64 = 0;
            while ((true) && loopTimeVar_1749490693391_1718 < 100) {
                loopTimeVar_1749490693391_1718++;
                var_1749490693391_478
            };
            let var_1749490693391_1729: VArray<UInt64, $8> = VArray<UInt64, $8>({i => UInt64(198)});
            (var_1749490693391_1725 ?? var_1749490693391_1729)
        } else if (match ((Option<(((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
                Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
                Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune), Int16, VArray<Unit, $7>, 
                Range<UInt64>, (Unit, Bool, Rune, Bool), UInt64)>.Some(var_1749490693391_1750) ?? var_1749490693391_1750)) {
            case _ =>
                var_1749490693391_297;
                UInt64(145) > UInt64(31)
        }) { // block id: 1803
            const var_1749490693391_1808: Int64 = -74;
            const var_1749490693391_1813: UInt8 = 120;
            if (var_1749490693391_305) { // block id: 1806
                var_1749490693391_1808
            } else { // block id: 1810
                Option<UInt8>.Some(var_1749490693391_1813);
                Int64(70)
            };
            let var_1749490693391_1844: VArray<UInt64, $8> = [UInt64(104), UInt64(83), UInt64(41), UInt64(130),
                UInt64(167), UInt64(62), UInt64(224), UInt64(143)];
            match (var_1749490693391_1818) {
                case caseVar_1749490693391_1835 =>
                    (var_1749490693391_667, var_1749490693391_898);
                    var_1749490693391_305;
                    if (true) {
                        var_1749490693391_1844
                    } else {
                        var_1749490693391_1844
                    }

                case _ => var_1749490693391_1844
            }
        } else { // block id: 1851
            let var_1749490693391_1859: VArray<UInt64, $8> = VArray<UInt64, $8>(repeat: UInt64(UInt8(Int8(-94))));
            (Option<VArray<UInt64, $8>>.None ?? var_1749490693391_1859)
        };
        let var_1749490693391_1877: (Unit, Bool, Rune, Bool) = ((), (UInt64(231) is Class_1749490693391_543), r'I', ([UInt16(216),
                UInt16(UInt8(40)), UInt16(169), UInt16(UInt8(234)), UInt16(Int8(-72)), UInt16(Int16(-98)), UInt16(14),
                UInt16(244), UInt16(4), UInt16(80)] is Float32));
        var_1749490693391_1877
    }
}

public interface Interface_1749490693391_547 <: Interface_1749490693391_548 & Interface_1749490693391_550 {
    static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 1900
        var var_1749490693391_1910: (Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, 
            Int8))>, Int32, Bool, Array<Int16>, Range<Int64>) = (Int64(-81), ((UInt16(43) as (Option<UInt64>, (Unit, 
                Bool, Rune, Bool), Int8, Unit, UInt64)) as (Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
                Range<Int8>, Int8))), Int32(Int32(82)), (Int16(Int8(Int8(125))) is Option<Interface_1749490693391_546>),
            [Int16(Int8(Int8(-24))), Int16(UInt16(UInt8(49))), Int16(Int8(89)), Int16(100), Int16(-47), Int16(6),
                Int16(Int16(UInt8(229))), Int16(UInt16(UInt16(126))), Int16(UInt16(UInt8(38))), Int16(Int16(-92))], ((Int64(Int64(89)) &
                127)..=(Int64(Int64(-16)) & 127) : (Int64(124) | 1)));
        var loopTimeVar_1749490693391_1971: Int64 = 0;
        do {
            loopTimeVar_1749490693391_1971++;
            ()
        } while ((try { // block id: 1903
            ((UInt16(UInt16(160)) & 127)..(UInt16(UInt16(141)) & 127) : (Int64(-33) | 1));
            var_1749490693391_1364;
            true
        } finally { // block id: 1907
            (var_1749490693391_1910, var_1749490693391_1947, Option<UInt64>.None, [var_1749490693391_1147, UInt32(206),
                    UInt32(241), UInt32(231), var_1749490693391_486, var_1749490693391_486, UInt32(210),
                    var_1749490693391_486, var_1749490693391_486, UInt32(169)], var_1749490693391_1962);
            Int32(-109);
            Int16(85) >= Int16(36)
        }) && loopTimeVar_1749490693391_1971 < 100);
        let var_1749490693391_1987: Int32 = Int32(UInt32(Int8(-105)));
        var loopTimeVar_1749490693391_2016: Int64 = 0;
        do {
            loopTimeVar_1749490693391_2016++;
        } while ((Int32(UInt8(54)) > match (true) {
            case _: (Option<UInt64>, (Unit, Bool, Rune, Bool), Int8, Unit, UInt64) =>
                var_1749490693391_1983 = var_1749490693391_1983
                var_1749490693391_1987

            case _ =>
                const var_1749490693391_1996: Bool = true;
                const var_1749490693391_2004: Unit = ();
                if (var_1749490693391_1996) {
                    var_1749490693391_1999
                } else {
                    VArray<Unit, $7>(repeat: var_1749490693391_478)
                };
                Int32(115) >> ((var_1749490693391_1451) & 7)
        }) && loopTimeVar_1749490693391_2016 < 100);
        let var_1749490693391_2062: Int64 = Int64(UInt8(70));
        try { // block id: 2018
            Int8(Int8(-95));
            var_1749490693391_2022
        } finally { // block id: 2035
            (Option<Int16>.Some(var_1749490693391_1364) ?? Int16(-47));
            var var_1749490693391_2087: Array<UInt32> = [UInt32(127), UInt32(128), UInt32(76), UInt32(19), UInt32(139),
                UInt32(199), UInt32(104), UInt32(197), UInt32(100), UInt32(133)];
            try { // block id: 2045
                if (true) {
                    var_1749490693391_355
                } else {
                    var_1749490693391_355
                };
                ((), true, var_1749490693391_843, true)
            } catch (_) { // block id: 2055
                var_1749490693391_1147++;
                var var_1749490693391_2076: ?UInt64 = (VArray<Unit, $7>({i => ()}) as UInt64);
                (((var_1749490693391_2062, var_1749490693391_1947, var_1749490693391_1451, var_1749490693391_305,
                            var_1749490693391_2069, var_1749490693391_2072), var_1749490693391_1947,
                        var_1749490693391_2076, var_1749490693391_2087, r'2'), Int16(-9), VArray<Unit, $7>(repeat: var_1749490693391_297),
                    ((UInt64(var_1749490693391_396) & 127)..=(UInt64(var_1749490693391_2102) & 127) : (Int64(-107) | 1)),
                    (var_1749490693391_440, var_1749490693391_305, r'O', false), UInt64(65));
                var_1749490693391_2022
            }
        }
    }
}

public sealed interface Interface_1749490693391_546 <: Interface_1749490693391_547 {
    func func_1749490693391_965(param_1749490693391_966: VArray<UInt64, $8>, param_1749490693391_967: Range<UInt64>,
        namedParam_1749490693391_968!: Range<Int32>): (Unit, Bool, Rune, Bool) { // block id: 969
        var var_1749490693391_988: (Unit, Bool, Rune, Bool) = ((), (((UInt16(UInt16(63)) & 127)..(UInt16(UInt16(148)) &
                127) : (Int64(-76) | 1)) is Interface_1749490693391_547), r'E', false);
        let var_1749490693391_1080: Int = Int64(-93);
        var var_1749490693391_1085: ((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
            Range<Int8>, Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, 
            Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune) = ((Int64(10), ([UInt32(71),
                    UInt32(196), UInt32(144), UInt32(113), UInt32(204), UInt32(47), UInt32(194), UInt32(96), UInt32(212),
                    UInt32(251)] as (Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))),
                Int32(UInt32(Int32(-67))), ([UInt32(46), UInt32(254), UInt32(113), UInt32(139), UInt32(9), UInt32(61),
                    UInt32(41), UInt32(226), UInt32(30), UInt32(123)] is Int8), [Int16(-50), Int16(-43), Int16(-31),
                    Int16(-111), Int16(100), Int16(-97), Int16(39), Int16(115), Int16(-63), Int16(53)], ((Int64(Int64(Int8(73))) &
                    127)..=(Int64(Int64(62)) & 127) : (Int64(Int8(3)) | 1))),
            Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.Some(
                ((((UInt16(UInt16(131)) & 127)..=(UInt16(UInt16(221)) & 127) : (Int64(61) | 1)) as VArray<Unit, $7>), (UInt8(206),
                        ((UInt8(UInt8(121)) & 127)..(UInt8(UInt8(38)) & 127) : (Int64(-62) | 1)), ((UInt16(UInt16(37)) &
                            127)..=(UInt16(UInt16(176)) & 127) : (Int64(-45) | 1)), ((Int8(Int8(-115)) & 127)..(Int8(Int8(-123)) &
                            127) : (Int64(52) | 1)), Int8(-5)))), Option<UInt64>.Some(UInt64(197)), [UInt32(245),
                UInt32(253), UInt32(UInt8(174)), UInt32(Int16(-111)), UInt32(Int32(36)), UInt32(28), UInt32(236),
                UInt32(Int8(-77)), UInt32(79), UInt32(19)], r'O');
        [Option<UInt64>.None, (Option<Option<UInt64>>.Some(var_1749490693391_981) ?? Option<UInt64>.None),
            try { // block id: 986
            var_1749490693391_988;
            if (var_1749490693391_305) {
                Option<UInt64>.None
            } else {
                var_1749490693391_981
            }
        } finally { // block id: 999
            var_1749490693391_118;
            var var_1749490693391_1003: Bool = (VArray<UInt64, $8>(repeat: UInt64(UInt8(223))) is Float32);
            if (var_1749490693391_1003) {
                var_1749490693391_981
            } else {
                Option<UInt64>.Some(var_1749490693391_396)
            }
        }, (var_1749490693391_981 as UInt64), match (var_1749490693391_1024) {
            case _: (Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, 
                    Int32, Bool, Array<Int16>, Range<Int64>) => var_1749490693391_981

            case caseVar_1749490693391_1032 =>
                if (false) {
                    Option<UInt64>.Some(var_1749490693391_396)
                } else {
                    var_1749490693391_981
                }

            case caseVar_1749490693391_1041 =>
                r'X';
                if (true) {
                    Option<UInt64>.Some(UInt64(180))
                } else {
                    var_1749490693391_981
                }

            case caseVar_1749490693391_1051 =>
                ();
                Option<UInt64>.None

            case _ =>
                var_1749490693391_567 *= var_1749490693391_567
                if (true) {
                    Option<UInt64>.None
                } else {
                    var_1749490693391_981
                }
        }, if (var_1749490693391_305) { // block id: 1067
            ();
            var_1749490693391_981
        } else { // block id: 1070
            var_1749490693391_981
        }, Option<UInt64>.None, Option<UInt64>.Some(UInt64(143)),
            (((Int8(var_1749490693391_409) & 127)..(Int8(Int8(88)) & 127) : (var_1749490693391_1080 | 1)) as UInt64),
            var_1749490693391_1085[2]][0];
        try (resource = Class_1749490693391_543()) { // block id: 1144
            var_1749490693391_1147 %= ((UInt32(252)) | 1)
            var loopTimeVar_1749490693391_1157: Int = 0;
            do {
                loopTimeVar_1749490693391_1157++;
                ()
            } while ((false) && loopTimeVar_1749490693391_1157 < 100)
        } finally { // block id: 1158
            var var_1749490693391_1172: UInt64 = UInt64(194);
            match (var_1749490693391_988) {
                case caseVar_1749490693391_1163: Range<Int64> =>
                    var_1749490693391_297;
                    var_1749490693391_440

                case _ =>
                    var_1749490693391_1172 &= UInt64(63)
                    ()
            }
        };
        let var_1749490693391_1191: (((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
            Range<Int8>, Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, 
            Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune), Int16, VArray<Unit, $7>, 
            Range<UInt64>, (Unit, Bool, Rune, Bool), UInt64) = (((Int64(UInt32(111)), (Int32(-111) as (Option<VArray<Unit, $7>>, 
                        (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))), Int32(93), (VArray<UInt64, $1>(repeat: UInt64(186)) is ((Int64, 
                        Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, 
                        Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
                        Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune)), [Int16(28),
                        Int16(-97), Int16(82), Int16(-14), Int16(24), Int16(49), Int16(-40), Int16(84), Int16(-116),
                        Int16(-39)], ((Int64(Int64(-85)) & 127)..(Int64(Int64(-96)) & 127) : (Int64(64) | 1))), (VArray<Unit, $7>({
                        i => ()
                    }) as (Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))),
                Option<UInt64>.Some(UInt64(178)), [UInt32(113), UInt32(33), UInt32(7), UInt32(Int32(38)),
                    UInt32(UInt32(79)), UInt32(UInt32(201)), UInt32(176), UInt32(UInt8(216)), UInt32(UInt8(168)),
                    UInt32(Int16(-120))], r'5'), Int16(-6), VArray<Unit, $7>({i => ()}), ((UInt64(UInt64(Int8(UInt8(60)))) &
                127)..=(UInt64(UInt64(Int64(3))) & 127) : (Int64(UInt32(Int8(-70))) | 1)), ((), (Float32(-29.0) is (Option<VArray<Unit, $7>>, 
                    (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))), r'q', true), UInt64(30));
        try { // block id: 1177
            Option<UInt8>.None.getOrThrow();
            (Option<Unit>.Some(var_1749490693391_478) ?? ());
            var_1749490693391_1191[4]
        } finally { // block id: 1263
            try { // block id: 1265
                if (true) {
                    ((Int16(Int16(-122)) & 127)..=(Int16(Int16(-53)) & 127) : (Int64(53) | 1))
                } else {
                    var_1749490693391_276
                };
                let var_1749490693391_1271: (Unit, Bool, Rune, Bool) = ((), false, r'D', false);
                var_1749490693391_1271
            } catch (e: Exception) { // block id: 1277
                var_1749490693391_988
            }
        }
    };

    func func_1749490693391_555(namedParam_1749490693391_556!: Range<UInt16>,
        namedParam_1749490693391_557!: Array<UInt64>): Int16

    static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 2347
        (try { // block id: 2350
            var_1749490693391_2353 ** Float64(13.0);
            if (true) {
                Option<Int16>.Some(var_1749490693391_737)
            } else {
                Option<Int16>.Some(var_1749490693391_1364)
            }
        } catch (_) { // block id: 2365
            VArray<UInt64, $1>(repeat: var_1749490693391_396);
            var_1749490693391_2369
        } as VArray<UInt64, $8>);
        let var_1749490693391_2379: (Unit, Bool, Rune, Bool) = ((), (Int16(-46) is VArray<UInt64, $8>), r'9', (((Int64(Int64(-70)) &
                127)..(Int64(Int64(-66)) & 127) : (Int64(-25) | 1)) is Option<Unit>));
        (Option<(Unit, Bool, Rune, Bool)>.Some((var_1749490693391_2306 ?? var_1749490693391_2124)) ?? (var_1749490693391_2306 ??
            var_1749490693391_2379))
    }
}

public open class Class_1749490693391_543 <: Interface_1749490693391_546 & Resource {
    public init() { // block id: 545

    }

    let var_1749490693391_571: Int16 = Int16(-84);
    public static var var_1749490693391_593: ?UInt64
    public open func func_1749490693391_555(namedParam_1749490693391_556!: Range<UInt16>,
        namedParam_1749490693391_557!: Array<UInt64>): Int16 { // block id: 558
        if (var_1749490693391_305) {
            [Int16(-75), var_1749490693391_567, var_1749490693391_567, var_1749490693391_571, var_1749490693391_571,
                Int16(54), Int16(36), Int16(-37), var_1749490693391_567, Int16(-128)]
        } else {
            [Int16(8), Int16(-115), Int16(-91), Int16(99), Int16(-44), Int16(-125), Int16(-113), Int16(-46), Int16(102),
                Int16(-104)]
        }[1] << ((Int16(43)) & 7);
        (if (var_1749490693391_305) {
            Option<UInt64>.Some(UInt64(180))
        } else {
            var_1749490693391_593
        } ?? UInt64(153) | var_1749490693391_396) & (var_1749490693391_602[5] | VArray<UInt64, $1>(repeat: var_1749490693391_396)[0]);
        [Int16(-53), Int16(-31), Int16(5), Int16(-20), Int16(82), Int16(22), Int16(-43), Int16(-76), Int16(-64),
            Int16(65)][1]
    };

    public static mut prop var_1749490693391_2150: UInt64 { // block id: 2151
        get() { // block id: 2153
            (Option<Array<Option<UInt64>>>.None as Int16);
            ();
            UInt64(Int8(Int8(42)))
        }
        set(Value) { // block id: 2162
            ();
            ();
            ()
        }
    }
    static let var_1749490693391_2235: Range<UInt64> = ((UInt64(UInt64(62)) & 127)..(UInt64(UInt64(179)) & 127) : (Int64(-38) |
        1));
    private static let var_1749490693391_2396: Array<UInt32> = [UInt32(149), UInt32(226), UInt32(237), UInt32(137),
        UInt32(5), UInt32(149), UInt32(129), UInt32(225), UInt32(199), UInt32(122)];
    public static let var_1749490693391_2451: Unit = ();
    public static mut prop var_1749490693391_2519: Option<Array<Option<UInt64>>> { // block id: 2520
        get() { // block id: 2522
            ();
            ();
            Option<Array<Option<UInt64>>>.None
        }
        set(Value) { // block id: 2528

        }
    }
    public static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 2388
        var loopTimeVar_1749490693391_2463: Int64 = 0;
        while ((match (try { // block id: 2392
                if (false) {
                    var_1749490693391_2396
                } else {
                    [UInt32(17), UInt32(158), var_1749490693391_1147, UInt32(156), UInt32(55), var_1749490693391_486,
                        UInt32(41), UInt32(201), UInt32(66), var_1749490693391_283]
                };
                Int16(-35)
            } catch (_) { // block id: 2420
                var_1749490693391_1364
            } finally { // block id: 2422
                if (var_1749490693391_305) {
                    ((UInt8(UInt8(62)) & 127)..(UInt8(UInt8(173)) & 127) : (Int64(104) | 1))
                } else {
                    ((UInt8(UInt8(215)) & 127)..=(UInt8(UInt8(44)) & 127) : (Int64(121) | 1))
                };
                var_1749490693391_1364
            }) {
                case -119 | 107 | -113 =>
                    var_1749490693391_297;
                    Option<Int16>.None;
                    var_1749490693391_305 || true

                case -69 => var_1749490693391_305

                case 12 | 104 =>
                    var_1749490693391_1983 >>= ((UInt8(152)) & 7)
                    var_1749490693391_305

                case _ =>
                    var_1749490693391_2451;
                    var_1749490693391_567++;
                    let var_1749490693391_2458: Float64 = Float64(Float64(-19.0));
                    Float64(62.0) <= var_1749490693391_2458
            }) && loopTimeVar_1749490693391_2463 < 100) {
            loopTimeVar_1749490693391_2463++;
        };
        var var_1749490693391_2474: Option<(Unit, Bool, Rune, Bool)> = Option<(Unit, Bool, Rune, Bool)>.Some(
            ((), ((((Int64(57), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>
                                .None, Int32(115), false, [Int16(39), Int16(-51), Int16(52), Int16(80), Int16(42),
                                Int16(33), Int16(-83), Int16(124), Int16(-16), Int16(86)], ((Int64(Int64(-103)) & 127)..=(Int64(Int64(67)) &
                                127) : (Int64(39) | 1))), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
                                Range<Int8>, Int8))>.None, Option<UInt64>.None, [UInt32(197), UInt32(226), UInt32(237),
                            UInt32(152), UInt32(146), UInt32(90), UInt32(190), UInt32(141), UInt32(202), UInt32(238)],
                        r'3'), Int16(-3), VArray<Unit, $7>({i => ()}), ((UInt64(UInt64(18)) & 127)..(UInt64(UInt64(141)) &
                        127) : (Int64(115) | 1)), ((), true, r'x', false), UInt64(1)) is Option<(((Int64, Option<(Option<VArray<Unit, $7>>, 
                    (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), 
                    Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, 
                    Array<UInt32>, Rune), Int16, VArray<Unit, $7>, Range<UInt64>, (Unit, Bool, Rune, Bool), UInt64)>),
                r'B', (Option<Array<Option<UInt64>>>.None is Option<(Option<UInt64>, (Unit, Bool, Rune, Bool), Int8, 
                    Unit, UInt64)>)));
        var var_1749490693391_2533: Option<(Unit, Bool, Rune, Bool)> = (((Option<VArray<Unit, $7>>.Some(
                VArray<Unit, $7>({i => ()})), (UInt8(117), ((UInt8(UInt8(27)) & 127)..(UInt8(UInt8(8)) & 127) : (Int64(-33) |
                    1)), ((UInt16(UInt16(146)) & 127)..(UInt16(UInt16(85)) & 127) : (Int64(-83) | 1)), ((Int8(Int8(96)) &
                    127)..=(Int8(Int8(79)) & 127) : (Int64(94) | 1)), Int8(44))) as UInt64) as (Unit, Bool, Rune, Bool));
        (Option<(Unit, Bool, Rune, Bool)>.None ?? (match (Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, 
                Range<Int8>, Int8))>.None) {
            case _ =>
                var_1749490693391_898;
                var_1749490693391_2474

            case caseVar_1749490693391_2516: Unit =>
                var_1749490693391_2519;
                if (var_1749490693391_305) {
                    var_1749490693391_2306
                } else {
                    var_1749490693391_2533
                }

            case _ => var_1749490693391_2533

            case _ =>
                if (false) {
                    var_1749490693391_2072
                } else {
                    ((Int64(Int64(-53)) & 127)..=(Int64(Int64(-51)) & 127) : (Int64(-101) | 1))
                };
                var_1749490693391_440;
                var_1749490693391_2306
        } ?? try { // block id: 2572
            var_1749490693391_2200;
            var_1749490693391_2124
        } finally { // block id: 2575
            Option<Array<Option<UInt64>>>.None;
            var_1749490693391_297;
            (var_1749490693391_440, var_1749490693391_305, var_1749490693391_2582, var_1749490693391_305)
        }))
    };

    public open override func func_1749490693391_965(param_1749490693391_966: VArray<UInt64, $8>,
        param_1749490693391_967: Range<UInt64>, namedParam_1749490693391_968!: Range<Int32>): (Unit, Bool, Rune, Bool) { // block id: 2586
        var_1749490693391_2022
    };

    protected prop var_1749490693391_2680: Bool { // block id: 2681
        get() { // block id: 2683
            ((UInt8(UInt8(193)) & 127)..(UInt8(UInt8(188)) & 127) : (Int64(51) | 1));
            ();
            (((UInt64(UInt64(UInt64(76))) & 127)..(UInt64(UInt64(245)) & 127) : (Int64(5) | 1)) is Interface_1749490693391_546)
        }
    }
    public var var_1749490693391_2740: Bool = false;
    public static const var_1749490693391_2767: UInt64 = 208;
    public static const var_1749490693391_2859: Bool = false
    static init() {
        var_1749490693391_593 = Option<UInt64>.None
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

@Frozen
@Deprecated
internal func func_1749490693391_271(param_1749490693391_272: Unit): Bool { // block id: 273
    var var_1749490693391_289: UInt32 = UInt32(209);
    const var_1749490693391_308: Bool = true;
    match (var_1749490693391_276) {
        case caseVar_1749490693391_280: UInt32 =>
            var_1749490693391_283;
            Float32(-112.0);
            var_1749490693391_289 *= UInt32(124)

        case caseVar_1749490693391_294 => var_1749490693391_297

        case caseVar_1749490693391_301: Int8 =>
            var_1749490693391_305 &&= var_1749490693391_308
            Int16(52);
            ()

        case _ =>
            const var_1749490693391_318: Bool = true;
            var_1749490693391_305 ||= var_1749490693391_318
    };
    const func func_1749490693391_321(param_1749490693391_322: Float32, namedParam_1749490693391_323!: Int16): Bool { // block id: 324
        const func func_1749490693391_338(param_1749490693391_339: Float32, param_1749490693391_340: UInt64,
            param_1749490693391_341: UInt16, param_1749490693391_342: UInt16): UInt16 { // block id: 343
            131 / ((var_1749490693391_347) | 1)
        };

        const func func_1749490693391_329(namedParam_1749490693391_330!: Int8,
            optionalParam_1749490693391_331!: String = "vhh8[}g(4z", optionalParam_1749490693391_333!: Int8 = 50,
            namedParam_1749490693391_335!: UInt32): UInt16 { // block id: 336
            func_1749490693391_338(
                func_1749490693391_350(namedParam_1749490693391_351: false, namedParam_1749490693391_352: 38), 78, 115,
                30)
        };

        (213 << ((func_1749490693391_329(namedParam_1749490693391_330: var_1749490693391_409,
            optionalParam_1749490693391_333: -17, namedParam_1749490693391_335: var_1749490693391_486)) & 7)) < 50
    };

    var var_1749490693391_552: Class_1749490693391_543 = Class_1749490693391_543();
    func_1749490693391_321(Float32(try { // block id: 528
        var_1749490693391_305 &&= var_1749490693391_308
        Int16(-40);
        var_1749490693391_534
    } catch (_) { // block id: 536
        var_1749490693391_289 <<= ((UInt32(156)) & 7)
        "ywp%kAW\",i";
        var_1749490693391_491
    }),
        namedParam_1749490693391_323: var_1749490693391_552.func_1749490693391_555(
            namedParam_1749490693391_556: ((UInt16(UInt16(219)) & 127)..=(UInt16(UInt16(70)) & 127) : (Int64(-121) | 1)),
            namedParam_1749490693391_557: [UInt64(249), var_1749490693391_396, var_1749490693391_396,
                var_1749490693391_396, var_1749490693391_396, var_1749490693391_396, var_1749490693391_396,
                var_1749490693391_396, UInt64(77), var_1749490693391_396]))
}

public func func_1749490693391_266(namedParam_1749490693391_267!: Range<UInt16>): Unit { // block id: 268
    let var_1749490693391_626: (Unit) -> Bool = func_1749490693391_271;
    var loopTimeVar_1749490693391_633: Range<UInt64> = ((UInt64(UInt64(UInt16(Int8(Int8(59))))) & 127)..=(UInt64(UInt64(UInt8(UInt8(UInt8(155))))) &
        127) : (Int64(UInt32(Int8(92))) | 1));
    var loopTimeVar_1749490693391_658: Int64 = 0;
    do {
        loopTimeVar_1749490693391_658++;
        if (var_1749490693391_305) { // block id: 649
            let var_1749490693391_651: VArray<UInt64, $1> = [UInt64(71)];
            var_1749490693391_651;
            ()
        } else if (var_1749490693391_305) { // block id: 655
            ()
        }
    } while (((for (i in loopTimeVar_1749490693391_633 where false) {
        var_1749490693391_602;
        ()
    } |> var_1749490693391_626)) && loopTimeVar_1749490693391_658 < 100);
    var var_1749490693391_707: VArray<Unit, $7> = [(), (), (), (), (), (), ()];
    (var_1749490693391_667 ?? if (var_1749490693391_305) { // block id: 671
        var var_1749490693391_673: Array<UInt32> = [UInt32(3), UInt32(89), UInt32(180), UInt32(60), UInt32(99),
            UInt32(248), UInt32(178), UInt32(152), UInt32(3), UInt32(152)];
        var_1749490693391_673;
        ();
        VArray<Unit, $7>(repeat: var_1749490693391_478)
    } else if (var_1749490693391_305) { // block id: 685
        VArray<UInt64, $8>({i => UInt64(135)});
        VArray<UInt64, $8>({i => UInt64(152)});
        if (false) {
            var_1749490693391_707
        } else {
            VArray<Unit, $7>(repeat: ())
        }
    } else { // block id: 724
        var_1749490693391_707
    })[5]
}

func func_1749490693391_173(param_1749490693391_174: Unit): Unit { // block id: 175
    let var_1749490693391_207: Range<UInt16> = ((UInt16(UInt16(7)) & 127)..(UInt16(UInt16(169)) & 127) : (Int64(-55) | 1));
    var var_1749490693391_218: (Int16, Option<Enum_1749490693391_19>, String, UInt32) = (Int16(UInt16(Int16(UInt8(210)))),
        Option<Enum_1749490693391_19>.None, """
F$=:K
VRm^;
""", UInt32(76));
    var var_1749490693391_744: Int32 = Int32(-87);
    if (try { // block id: 179
        UInt32(92)
    } finally { // block id: 181
        UInt32(3)
    } > [UInt32(230), UInt32(156), UInt32(36), UInt32(69), UInt32(138), UInt32(62), UInt32(92), UInt32(1), UInt32(181),
        UInt32(61)][4]) { // block id: 196
        var var_1749490693391_204: Range<UInt8> = ((UInt8(UInt8(102)) & 127)..(UInt8(UInt8(45)) & 127) : (Int64(17) | 1));
        (var_1749490693391_201, var_1749490693391_204, var_1749490693391_207, var_1749490693391_210,
            var_1749490693391_121)[4]
    } else if (match (var_1749490693391_218[1]) {
        case None =>
            ((UInt16(UInt16(154)) & 127)..(UInt16(UInt16(211)) & 127) : (Int64(-36) | 1));
            ();
            UInt32(86) > UInt32(235)

        case caseVar_1749490693391_238 => true

        case caseVar_1749490693391_243: Range<UInt64> =>
            var var_1749490693391_247: Int16 = Int16(UInt8(Int8(91)));
            var_1749490693391_247 &= Int16(-41)
            Int64(50);
            false || var_1749490693391_72

        case _ =>
            const var_1749490693391_261: Int32 = 50;
            var_1749490693391_261 <= Int32(-112)
    }) { // block id: 264
        func_1749490693391_266(
            namedParam_1749490693391_267: ((UInt16(var_1749490693391_729) & 127)..=(UInt16(UInt16(227)) & 127) : (Int64(0) |
                1)));
        try { // block id: 734
            var_1749490693391_737 & var_1749490693391_737;
            Int8(-47)
        } finally { // block id: 741
            var_1749490693391_744 &= var_1749490693391_744
            var_1749490693391_121 % ((Int8(-38)) | 1)
        }
    } else { // block id: 750
        (Option<Unit>.Some(()) ?? ());
        if (var_1749490693391_72) { // block id: 761
            -var_1749490693391_118
        } else { // block id: 764
            ();
            -Int8(-51)
        }
    };
    ((Option<(Class_1749490693391_543, Option<Interface_1749490693391_546>, Class_1749490693391_543, Range<Int64>, 
            Option<VArray<Unit, $7>>)>.None ?? var_1749490693391_782)[1] ?? Class_1749490693391_543());
    var var_1749490693391_819: UInt64 = UInt64(Int64(-126));
    var loopTimeVar_1749490693391_828: Int = 0;
    while ((if ((var_1749490693391_297, var_1749490693391_72, r'1', var_1749490693391_806)[3]) { // block id: 809
            Class_1749490693391_543();
            ();
            var_1749490693391_72
        } else if ((VArray<UInt64, $1>({i => UInt64(199)}) is Interface_1749490693391_546)) { // block id: 816
            var_1749490693391_819 *= var_1749490693391_819
            true
        } else { // block id: 824
            true
        }) && loopTimeVar_1749490693391_828 < 100) {
        loopTimeVar_1749490693391_828++;
    }
}

public open class Class_1749490693391_958<T0, T1, T2> <: Class_1749490693391_543 & Interface_1749490693391_548 {
    @Frozen
    public init() { // block id: 960

    }

    public static mut prop var_1749490693391_2215: Int64 { // block id: 2216
        get() { // block id: 2218
            Int64(39)
        }
        set(Value) { // block id: 2222
            ()
        }
    }
    public static func func_1749490693391_855(param_1749490693391_856: VArray<UInt64, $1>): (Unit, Bool, Rune, Bool) { // block id: 2116
        var var_1749490693391_2181: ??UInt64 = ((Int16(5) as (((Int64, Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
            Range<UInt16>, Range<Int8>, Int8))>, Int32, Bool, Array<Int16>, Range<Int64>), Option<(Option<VArray<Unit, $7>>, 
            (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>, Option<UInt64>, Array<UInt32>, Rune), Int16, 
            VArray<Unit, $7>, Range<UInt64>, (Unit, Bool, Rune, Bool), UInt64)) as Option<UInt64>);
        ((var_1749490693391_2124 as Array<Option<UInt64>>) ?? [if (var_1749490693391_305) { // block id: 2147
            Option<UInt64>.Some(var_1749490693391_2150)
        } else if (false) { // block id: 2167
            var_1749490693391_1451 ^= Int32(106)
            var_1749490693391_297;
            Option<UInt64>.None
        } else { // block id: 2173
            var_1749490693391_1670;
            var_1749490693391_593
        }, Option<UInt64>.None, Option<UInt64>.None, Option<UInt64>.None,
            (var_1749490693391_2181 ?? var_1749490693391_593), try { // block id: 2187
            var_1749490693391_297;
            Option<UInt64>.None
        } finally { // block id: 2190
            Option<UInt64>.None
        }, Option<UInt64>.Some(var_1749490693391_2150), match (VArray<Unit, $7>(repeat: var_1749490693391_440)) {
            case _ =>
                var_1749490693391_440;
                var_1749490693391_593
        }, if (var_1749490693391_305) { // block id: 2212
            var_1749490693391_2215 |= var_1749490693391_2215
            var_1749490693391_593
        } else if (var_1749490693391_305) { // block id: 2227
            var_1749490693391_593
        } else { // block id: 2229
            Option<UInt64>.Some(UInt64(15))
        }, try { // block id: 2233
            var_1749490693391_2235;
            if (var_1749490693391_305) {
                var_1749490693391_593
            } else {
                Option<UInt64>.Some(UInt64(174))
            }
        } catch (_) { // block id: 2245
            let var_1749490693391_2247: ?UInt64 = Option<UInt64>.Some(UInt64(UInt64(245)));
            var_1749490693391_2247
        } finally { // block id: 2251
            var_1749490693391_118 /= ((var_1749490693391_121) | 1)
            Option<UInt64>.Some(var_1749490693391_2150)
        }]);
        let var_1749490693391_2317: (Unit, Bool, Rune, Bool) = ((), false, r'S', true);
        (match (try { // block id: 2264
            var_1749490693391_567 |= var_1749490693391_567
            [var_1749490693391_2150, UInt64(203), UInt64(208), UInt64(67), UInt64(45), UInt64(55), UInt64(0),
                var_1749490693391_2150, var_1749490693391_2150, UInt64(238)];
            Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.Some(
                (Option<VArray<Unit, $7>>.None, var_1749490693391_898))
        } catch (e: Exception) { // block id: 2283
            var_1749490693391_1947
        } finally { // block id: 2285
            var_1749490693391_567 ^= var_1749490693391_1364
            var_1749490693391_1947
        }) {
            case _ =>
                ();
                if (false) {
                    Option<(Unit, Bool, Rune, Bool)>.None
                } else {
                    Option<(Unit, Bool, Rune, Bool)>.None
                }

            case caseVar_1749490693391_2300: Int64 =>
                ();
                if (var_1749490693391_305) {
                    var_1749490693391_2306
                } else {
                    var_1749490693391_2306
                }

            case _: Option<UInt8> =>
                ();
                ();
                Option<(Unit, Bool, Rune, Bool)>.Some(var_1749490693391_2317)

            case caseVar_1749490693391_2325: Option<UInt8> => Option<(Unit, Bool, Rune, Bool)>.None

            case _ =>
                ((), true, var_1749490693391_843, true);
                var_1749490693391_478;
                if (true) {
                    Option<(Unit, Bool, Rune, Bool)>.None
                } else {
                    var_1749490693391_2306
                }
        } ?? ((Option<Option<UInt64>>.Some(Option<UInt64>.None) as (Unit, Bool, Rune, Bool)) ?? var_1749490693391_2317))
    };

    static mut prop var_1749490693391_2627: Unit { // block id: 2628
        get() { // block id: 2630

        }
        set(Value) { // block id: 2633

        }
    }
    public open override func func_1749490693391_965(param_1749490693391_966: VArray<UInt64, $8>,
        param_1749490693391_967: Range<UInt64>, namedParam_1749490693391_968!: Range<Int32>): (Unit, Bool, Rune, Bool) { // block id: 2589
        match (Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, Range<UInt16>, Range<Int8>, Int8))>.Some(
            (Option<VArray<Unit, $7>>.None, var_1749490693391_898))) {
            case _: Option<Int16> => [UInt16(64), UInt16(248), UInt16(33), var_1749490693391_46, var_1749490693391_46,
                var_1749490693391_347, UInt16(122), var_1749490693391_347, var_1749490693391_347, var_1749490693391_347]

            case _ => [UInt16(123), UInt16(235), UInt16(82), UInt16(100), UInt16(68), UInt16(89), UInt16(130),
                UInt16(45), UInt16(130), UInt16(246)]

            case caseVar_1749490693391_2615: Option<VArray<UInt64, $8>> => [UInt16(43), UInt16(214), UInt16(208),
                UInt16(94), UInt16(235), UInt16(35), UInt16(106), UInt16(194), UInt16(236), UInt16(246)]

            case _ => [UInt16(19), UInt16(154), UInt16(45), UInt16(240), UInt16(208), UInt16(163), UInt16(11),
                UInt16(163), UInt16(238), UInt16(61)]

            case _ =>
                var_1749490693391_297;
                var_1749490693391_2627;
                [UInt16(14), UInt16(216), UInt16(34), UInt16(116), UInt16(105), UInt16(114), UInt16(9), UInt16(242),
                    UInt16(10), UInt16(76)]
        };
        try { // block id: 2636
            try (resource = Class_1749490693391_543()) { // block id: 2638
                ()
            } finally { // block id: 2640
                Option<UInt64>.None;
                var_1749490693391_305 ||= var_1749490693391_305
                var_1749490693391_118 *= var_1749490693391_118
            };
            var loopTimeVar_1749490693391_2653: Range<UInt64> = ((UInt64(UInt64(249)) & 127)..(UInt64(UInt64(UInt16(Int8(-105)))) &
                127) : (Int64(-106) | 1));
            for (i in loopTimeVar_1749490693391_2653 where false) {
                ();
                var_1749490693391_478
            };
            var loopTimeVar_1749490693391_2665: Int64 = 0;
            do {
                loopTimeVar_1749490693391_2665++;
                var_1749490693391_1364
            } while ((true) && loopTimeVar_1749490693391_2665 < 100)
        } finally { // block id: 2666
            if (true) { // block id: 2669
                var_1749490693391_2072;
                var_1749490693391_305 ||= var_1749490693391_305
                var_1749490693391_2215 = var_1749490693391_2677
            } else if (var_1749490693391_2680) { // block id: 2692
                var_1749490693391_305 &&= var_1749490693391_2680
            };
            var loopTimeVar_1749490693391_2701: Array<UInt64> = [UInt64(5), UInt64(228), UInt64(93),
                UInt64(UInt64(UInt32(UInt32(42)))), UInt64(UInt8(UInt8(21))), UInt64(194), UInt64(176), UInt64(123),
                UInt64(Int16(43)), UInt64(146)];
            for (i in loopTimeVar_1749490693391_2701 where false) {
                var_1749490693391_2627;
                Float32(-86.0)
            }
        };
        let var_1749490693391_2880: Option<Option<Unit>> = Option<Option<Unit>>.None;
        (((Option<Option<Unit>>.None ?? Option<Unit>.None) ?? (var_1749490693391_2734 ?? ())), if (if (var_1749490693391_2740) { // block id: 2742
                var_1749490693391_440;
                false
            } else { // block id: 2745
                false
            }) { // block id: 2747
                var_1749490693391_1983 /= ((UInt8(14)) | 1)
                true
            } else { // block id: 2752
                ();
                var_1749490693391_2740
            }, match (((Int64(107), var_1749490693391_1947, Int32(-77), false, var_1749490693391_2069, ((Int64(Int64(-108)) &
                        127)..(Int64(Int64(-53)) & 127) : (Int64(17) | 1))), var_1749490693391_1947,
                Option<UInt64>.Some(var_1749490693391_2767), [var_1749490693391_486, UInt32(195), var_1749490693391_486,
                    UInt32(40), UInt32(45), UInt32(123), var_1749490693391_486, var_1749490693391_1147, UInt32(39),
                    UInt32(171)], r'y')) {
                case _ =>
                    ((Int16(var_1749490693391_567) & 127)..(Int16(Int16(-14)) & 127) : (var_1749490693391_2677 | 1));
                    var_1749490693391_46 -= var_1749490693391_46
                    r'L'

                case _ =>
                    var_1749490693391_2072;
                    ();
                    r'k'

                case (caseVar_1749490693391_2800: Option<(Option<UInt64>, (Unit, Bool, Rune, Bool), Int8, Unit, UInt64)>, _: Array<Option<UInt64>>, caseVar_1749490693391_2801, _: Option<VArray<UInt64, $8>>, caseVar_1749490693391_2802: (Unit, 
                            Bool, Rune, Bool)) => var_1749490693391_843

                case _ =>
                    var_1749490693391_2809;
                    if (var_1749490693391_2740) {
                        var_1749490693391_2582
                    } else {
                        var_1749490693391_2582
                    }
            }, if (var_1749490693391_2859) { // block id: 2861
                if (false) {
                    var_1749490693391_2582
                } else {
                    r'2'
                };
                var_1749490693391_46 += UInt16(146)
                var_1749490693391_737
            } else { // block id: 2870
                var_1749490693391_1364
            } <= if (var_1749490693391_2680) { // block id: 2874
                ();
                var_1749490693391_297;
                Int16(35)
            } else { // block id: 2878
                var_1749490693391_2880;
                -Int16(76)
            })
    }

    static init() {
    }
}

@Frozen
@Deprecated
internal func func_1749490693391_170(): (Unit, Bool, Rune, Bool) { // block id: 171
    var var_1749490693391_830: (Unit) -> Unit = func_1749490693391_173;
    (Option<Unit>.None ?? (Option<UInt64>.Some(UInt64(167)), ((), var_1749490693391_72, var_1749490693391_843,
            var_1749490693391_806), Int8(6), (), var_1749490693391_849)[3]) |> var_1749490693391_830;
    Interface_1749490693391_550.func_1749490693391_855(VArray<UInt64, $1>(repeat: var_1749490693391_849))
}

main(): Int64 {
    try {
        var var_1749490693391_10: UInt32 = UInt32(Int8(-102));
        func func_1749490693391_22(param_1749490693391_23: UInt16, optionalParam_1749490693391_24!: Int32 = Int32(103),
            namedParam_1749490693391_26!: Enum_1749490693391_19,
            optionalParam_1749490693391_27!: Float32 = Float32(Float32(Float32(-20.0)))): Enum_1749490693391_19 { // block id: 31
            let var_1749490693391_33: Enum_1749490693391_19 = Enum_1749490693391_19.enumValue_1749490693391_35(
                Int64(-66), (), Float32(Float32(Float32(-101.0))));
            var_1749490693391_33
        };

        const var_1749490693391_58: Int64 = 11;
        let var_1749490693391_1433: ?UInt64 = Option<UInt64>.None;
        let var_1749490693391_1497: VArray<UInt64, $1> = VArray<UInt64, $1>({i => UInt64(6)});
        let var_1749490693391_1511: Option<(Class_1749490693391_543, Option<Interface_1749490693391_546>, 
            Class_1749490693391_543, Range<Int64>, Option<VArray<Unit, $7>>)> = ((Option<Enum_1749490693391_19>.Some(
            Enum_1749490693391_19.enumValue_1749490693391_35(Int64(119), (), Float32(-110.0))) is Interface_1749490693391_546) as (Class_1749490693391_543, 
            Option<Interface_1749490693391_546>, Class_1749490693391_543, Range<Int64>, Option<VArray<Unit, $7>>));
        var var_1749490693391_1544: UInt32 = UInt32(Int32(-32));
        try { // block id: 6
            UInt32(217) >> ((var_1749490693391_10) & 7)
        } finally { // block id: 13
            let var_1749490693391_63: Enum_1749490693391_19 = Enum_1749490693391_19.enumValue_1749490693391_35(
                Int64(Int8(-49)), (), Float32(Float32(72.0)));
            const var_1749490693391_80: Float32 = -90.0;
            const var_1749490693391_99: UInt32 = 246;
            func func_1749490693391_15(namedParam_1749490693391_16!: UInt32): Unit { // block id: 17
                match (func_1749490693391_22(var_1749490693391_46 % ((UInt16(140)) | 1),
                    namedParam_1749490693391_26: (Option<Enum_1749490693391_19>.Some(
                        Enum_1749490693391_19.enumValue_1749490693391_35(var_1749490693391_58, (), Float32(-38.0))) ??
                        var_1749490693391_63),
                    optionalParam_1749490693391_27: if (var_1749490693391_72) { // block id: 74
                        UInt16(198);
                        var_1749490693391_77;
                        var_1749490693391_80
                    } else if (var_1749490693391_72) { // block id: 83
                        var_1749490693391_72;
                        var_1749490693391_80 + Float32(39.0)
                    } else { // block id: 88
                        UInt16(131) / ((UInt16(103)) | 1);
                        r'D';
                        Float32(61.0)
                    })) {
                    case enumValue_1749490693391_35(_, _: Int64, _) => var_1749490693391_99 >> ((UInt32(79)) & 7)

                    case caseVar_1749490693391_104: Bool =>
                        ();
                        "6H[l>s=CTs";
                        var_1749490693391_99 % ((UInt32(137)) | 1)

                    case caseVar_1749490693391_113: String =>
                        UInt8(171);
                        var_1749490693391_118 -= var_1749490693391_121
                        UInt32(38)

                    case enumValue_1749490693391_35(caseVar_1749490693391_129, caseVar_1749490693391_130, caseVar_1749490693391_131) =>
                        ();
                        var_1749490693391_99 - UInt32(215)

                    case _ => var_1749490693391_99
                };
                func func_1749490693391_163(optionalParam_1749490693391_164!: String = "eSF&wuM4%j"): UInt8 { // block id: 166
                    func_1749490693391_170()[0];
                    UInt8(128)
                };

                let var_1749490693391_1404: (Option<UInt64>, (Unit, Bool, Rune, Bool), Int8, Unit, UInt64) = (Option<UInt64>
                        .None, ((), ((Int16(96), Option<Enum_1749490693391_19>.None, "bh'$qvCy/@", UInt32(218)) is Int64),
                        r'1', true), Int8(-91), (), UInt64(216));
                func func_1749490693391_142(namedParam_1749490693391_143!: UInt16,
                    optionalParam_1749490693391_144!: Rune = r'e', namedParam_1749490693391_146!: Float32,
                    optionalParam_1749490693391_147!: Enum_1749490693391_19 = Enum_1749490693391_19
                        .enumValue_1749490693391_149(Int16(-79), Int64(-120), "j2X3JvCo~U", UInt64(UInt32(Int16(88))))): Unit { // block id: 160
                    func_1749490693391_163(optionalParam_1749490693391_164: "GYhl7L^BGS") - if (try { // block id: 1361
                        var_1749490693391_1364 >>= ((Int16(94)) & 7)
                        var var_1749490693391_1369: Int32 = Int32(Int8(Int8(-99)));
                        var_1749490693391_1369 >>= ((Int32(-90)) & 7)
                        false && var_1749490693391_72
                    } catch (e: Exception) { // block id: 1377
                        var_1749490693391_1380 %= ((var_1749490693391_1380) | 1)
                        false
                    } finally { // block id: 1384
                        var_1749490693391_72
                    }) { // block id: 1386
                        Option<Unit>.None;
                        var_1749490693391_1380 = Int64(-7)
                        var_1749490693391_201
                    } else { // block id: 1392
                        UInt8(7) << ((var_1749490693391_201) & 7)
                    };;
                    (Option<(Option<UInt64>, (Unit, Bool, Rune, Bool), Int8, Unit, UInt64)>.Some(var_1749490693391_1404) ??
                        try { // block id: 1421
                        var_1749490693391_1404
                    } finally { // block id: 1423
                        var_1749490693391_77;
                        var var_1749490693391_1429: Range<UInt32> = ((UInt32(UInt32(144)) & 127)..(UInt32(UInt32(135)) &
                            127) : (Int64(9) | 1));
                        if (var_1749490693391_806) {
                            ((UInt32(UInt32(28)) & 127)..=(UInt32(UInt32(117)) & 127) : (Int64(-84) | 1))
                        } else {
                            var_1749490693391_1429
                        };
                        (var_1749490693391_1433, (var_1749490693391_478, true, r'm', true), var_1749490693391_118,
                            var_1749490693391_478, UInt64(100))
                    })[3]
                };

                let var_1749490693391_1471: Int64 = Int64(13);
                var var_1749490693391_1530: Bool = (Class_1749490693391_543() is Option<Unit>);
                func_1749490693391_142(namedParam_1749490693391_143: UInt16(86),
                    namedParam_1749490693391_146: if ((Int64(-19), Option<(Option<VArray<Unit, $7>>, (UInt8, Range<UInt8>, 
                                Range<UInt16>, Range<Int8>, Int8))>.None, var_1749490693391_1451, false, [Int16(84),
                            var_1749490693391_1457, var_1749490693391_737, var_1749490693391_1457,
                            var_1749490693391_1364, var_1749490693391_737, Int16(64), Int16(-114),
                            var_1749490693391_1364, Int16(107)], ((Int64(var_1749490693391_58) & 127)..=(Int64(Int64(2)) &
                            127) : (var_1749490693391_1471 | 1)))[3]) { // block id: 1474
                        Float32(78.0)
                    } else { // block id: 1476
                        var_1749490693391_118 <<= ((var_1749490693391_118) & 7)
                        Float32(-39.0) * Float32(102.0)
                    },
                    optionalParam_1749490693391_147: if (if (true) { // block id: 1486
                        var_1749490693391_806
                    } else if (var_1749490693391_806) { // block id: 1489
                        ();
                        var_1749490693391_1492;
                        var_1749490693391_72
                    } else { // block id: 1495
                        var_1749490693391_1497;
                        false
                    }) {
                        try { // block id: 1502
                            Enum_1749490693391_19.enumValue_1749490693391_35(var_1749490693391_1380,
                                var_1749490693391_297, Float32(-4.0))
                        } catch (e: Exception) { // block id: 1507
                            if (var_1749490693391_806) {
                                var_1749490693391_1511
                            } else {
                                Option<(Class_1749490693391_543, Option<Interface_1749490693391_546>, 
                                        Class_1749490693391_543, Range<Int64>, Option<VArray<Unit, $7>>)>.None
                            };
                            if (var_1749490693391_72) {
                                Enum_1749490693391_19.enumValue_1749490693391_149(var_1749490693391_1457, Int64(-16),
                                    var_1749490693391_355, UInt64(126))
                            } else {
                                var_1749490693391_63
                            }
                        }
                    } else {
                        (if (var_1749490693391_1530) {
                            Enum_1749490693391_19.enumValue_1749490693391_35(Int64(-12), (), Float32(31.0))
                        } else {
                            Enum_1749490693391_19.enumValue_1749490693391_35(var_1749490693391_1380,
                                var_1749490693391_77, var_1749490693391_80)
                        })
                    })
            };

            func_1749490693391_15(namedParam_1749490693391_16: UInt32(95));
            var_1749490693391_1544 - var_1749490693391_99
        };
        var_1749490693391_1554[0][2][0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1749490693391_10 * var_1749490693391_10), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_58 * var_1749490693391_58), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_201 * var_1749490693391_201), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_729 * var_1749490693391_729), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_849 * var_1749490693391_849), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_1380 * var_1749490693391_1380), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_1457 * var_1749490693391_1457), 64)
        crcCheck.updateBuffer(UInt64(var_1749490693391_1544 * var_1749490693391_1544), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1749490693391_543 {}

extend<T0, T1, T2> Class_1749490693391_958<T0, T1, T2> {}

extend Enum_1749490693391_19 {}
