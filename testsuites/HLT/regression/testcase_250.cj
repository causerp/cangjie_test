/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC-PIPE: %run %run_opt %output %run_args

public var var_1675612825334_16 : Unit = ()
public var var_1675612825334_35 : Bool = (UInt8(102) is Int32)
public var var_1675612825334_48 : Rune = r'8'
public let var_1675612825334_51 : Bool = (UInt32(216) is UInt16)
public let var_1675612825334_98 : UInt8 = UInt8(151)
public var var_1675612825334_115 : Int64 = Int64(Int16(30))
public var var_1675612825334_213 : UInt32 = UInt32(UInt32(115))
let var_1675612825334_245 : Class_1675612825334_153<Unit> = Class_1675612825334_153<Unit>()
public let var_1675612825334_302 : Int32 = Int32(80)
public let var_1675612825334_314 : Bool = true
public let var_1675612825334_327 : Int32 = Int32(UInt32(159))
public let var_1675612825334_382 : (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64)) = (((UInt64(38)&127)..(UInt64(226)&127):(0|1)), ###"~pTe}akBZ3"###, (UInt16(110), Float32(Float32(Float32(76.0))), UInt32(150), Int32(UInt16(25)), Float64(Float32(Float32(94.0)))))
public let var_1675612825334_421 : UInt16 = UInt16(Int8(Int8(UInt8(8))))
public var var_1675612825334_471 : Range<Int32> = ((Int32(87)&127)..=(Int32(-78)&127):((31|1)))
public var var_1675612825334_512 : String = """
zV1G@
4[+t^
"""
public let var_1675612825334_536 : Array<Range<UInt16>> = [((UInt16(205)&127)..(UInt16(60)&127):((-113)|1)), ((UInt16(46)&127)..(UInt16(147)&127):((-46)|1)), ((UInt16(33)&127)..=(UInt16(125)&127):((Int64(Int64(UInt16(229)))|1))), ((UInt16(96)&127)..=(UInt16(214)&127):((-48)|1)), ((UInt16(82)&127)..(UInt16(17)&127):(91|1)), ((UInt16(123)&127)..=(UInt16(159)&127):(76|1)), ((UInt16(101)&127)..(UInt16(249)&127):(19|1)), ((UInt16(109)&127)..=(UInt16(155)&127):(124|1)), ((UInt16(UInt16(UInt16(154)))&127)..(UInt16(Int8(30))&127):((Int64(UInt16(Int16(77)))|1))), ((UInt16(56)&127)..(UInt16(60)&127):((-23)|1))]
public var var_1675612825334_636 : Bool = (((Int16(61)&127)..=(Int16(-4)&127):((Int64(Int16(Int8(-66)))|1))) is Array<Int8>)
public let var_1675612825334_653 : Int16 = Int16(UInt16(81))
public var var_1675612825334_742 : Array<Array<Bool>> = [[(((Int32(78)&127)..=(Int32(-128)&127):((-59)|1)) is Range<UInt16>), true, true, (UInt32(252) is Range<Int64>), ([(), (), (), (), (), (), (), (), (), ()] is Range<UInt8>), (Float32(-81.0) is (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64))), ([((UInt16(103)&127)..=(UInt16(177)&127):((-67)|1)), ((UInt16(67)&127)..(UInt16(163)&127):((-34)|1)), ((UInt16(146)&127)..=(UInt16(91)&127):((-30)|1)), ((UInt16(51)&127)..(UInt16(64)&127):((-76)|1)), ((UInt16(78)&127)..=(UInt16(42)&127):((-128)|1)), ((UInt16(95)&127)..=(UInt16(207)&127):(50|1)), ((UInt16(208)&127)..=(UInt16(161)&127):((-43)|1)), ((UInt16(68)&127)..(UInt16(192)&127):((-117)|1)), ((UInt16(51)&127)..(UInt16(220)&127):(104|1)), ((UInt16(226)&127)..(UInt16(215)&127):((-62)|1))] is Array<Range<UInt16>>), false, true, ([Int8(-70), Int8(86), Int8(5), Int8(-122), Int8(-92), Int8(-49), Int8(-126), Int8(56), Int8(27), Int8(-3)] is Bool)], [false, true, false, (((Int8(49)&127)..=(Int8(-86)&127):((-74)|1)) is (Rune) -> Int16), true, true, false, ((UInt16(168), Float32(-48.0), UInt32(86), Int32(59), (-88.0)) is Range<Int32>), (((UInt16(82)&127)..(UInt16(221)&127):(10|1)) is (UInt16, Float32, UInt32, Int32, Float64)), false], [true, false, (false is UInt64), false, ([((UInt16(174)&127)..(UInt16(89)&127):((-102)|1)), ((UInt16(122)&127)..(UInt16(145)&127):((-39)|1)), ((UInt16(17)&127)..(UInt16(138)&127):(71|1)), ((UInt16(159)&127)..=(UInt16(216)&127):(17|1)), ((UInt16(143)&127)..(UInt16(80)&127):(58|1)), ((UInt16(169)&127)..=(UInt16(129)&127):(29|1)), ((UInt16(229)&127)..=(UInt16(97)&127):((-98)|1)), ((UInt16(227)&127)..(UInt16(21)&127):((-78)|1)), ((UInt16(149)&127)..(UInt16(46)&127):(119|1)), ((UInt16(14)&127)..(UInt16(68)&127):(25|1))] is Interface_1675612825334_157<Range<UInt64>>), ([(), (), (), (), (), (), (), (), (), ()] is (UInt16, Float32, UInt32, Int32, Float64)), (((Int32(-91)&127)..=(Int32(-97)&127):((22|1))) is UInt16), (UInt16(171) is Int16), false, true], [false, true, false, false, true, true, false, true, true, true], [true, (false is (Rune) -> Int16), ([Int8(-121), Int8(92), Int8(51), Int8(-109), Int8(-29), Int8(-28), Int8(111), Int8(61), Int8(14), Int8(-106)] is UInt8), ((((-6)&127)..=((-3)&127):((-100)|1)) is Range<UInt8>), false, false, true, false, (UInt8(216) is Class_1675612825334_153<Unit>), (false is Array<Bool>)], [false, false, true, true, true, false, true, false, true, false], [((((77&127)..((-24)&127):(107|1)) as Int32) is Option<Bool>), false, true, (Int32(61) is Option<Int32>), true, (((UInt64(91)&127)..(UInt64(228)&127):((-123)|1)) is Range<Int64>), true, false, (r'B' is Range<UInt8>), true], [false, ([[true, false, true, false, false, true, false, true, true, true], [true, true, false, true, true, true, true, true, true, true], [true, true, false, false, true, false, true, true, false, false], [true, true, false, true, false, true, true, true, false, true], [true, false, false, false, true, false, false, false, false, true], [false, true, true, true, true, true, true, false, true, true], [true, false, false, true, true, true, true, true, false, false], [false, false, true, false, false, false, true, false, true, false], [false, true, true, true, true, false, false, false, true, true], [true, true, true, false, false, false, false, true, true, false]] is UInt16), ([(), (), (), (), (), (), (), (), (), ()] is Range<Int64>), true, (Float64(Float32(-62.0)) is Array<UInt64>), (Int8(Int8(-62)) is Float32), true, ([UInt64(21), UInt64(69), UInt64(196), UInt64(55), UInt64(122), UInt64(236), UInt64(52), UInt64(34), UInt64(44), UInt64(144)] is UInt16), (("""
e${var_1675612825334_512}Ay${var_1675612825334_512}a!
[N${var_1675612825334_512}nb 
""" is UInt64) is (Int64) -> Bool), ([((UInt16(219)&127)..(UInt16(77)&127):(43|1)), ((UInt16(178)&127)..=(UInt16(112)&127):(((-87)|1))), ((UInt16(217)&127)..=(UInt16(216)&127):((-91)|1)), ((UInt16(51)&127)..(UInt16(177)&127):((-26)|1)), ((UInt16(253)&127)..(UInt16(13)&127):((-30)|1)), ((UInt16(112)&127)..=(UInt16(176)&127):((-73)|1)), ((UInt16(58)&127)..=(UInt16(124)&127):((-56)|1)), ((UInt16(63)&127)..(UInt16(42)&127):(98|1)), ((UInt16(95)&127)..(UInt16(57)&127):((-114)|1)), ((UInt16(130)&127)..=(UInt16(152)&127):(75|1))] is (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64)))], [false, ("/\\%K@o${var_1675612825334_512}MDvh" is (() -> Unit) -> (UInt16, Float32, UInt32, Int32, Float64)), ((((UInt64(39)&127)..(UInt64(75)&127):(((-24)|1))), """
KCrm!
>At#!
""", (UInt16(214), Float32(79.0), UInt32(5), Int32(8), 17.0)) is Class_1675612825334_153<Unit>), ((UInt16(155), Float32(56.0), UInt32(7), Int32(-93), (-122.0)) is Int16), (((Int8(-92)&127)..=(Int8(-81)&127):(19|1)) is Interface_1675612825334_158), (UInt64(124) is Int8), true, true, (UInt8(Int8(27)) is UInt64), (Int16(UInt16(157)) is Array<Int8>)], [false, true, false, true, true, true, false, true, false, false]]
var var_1675612825334_1008 : ??Int32 = Option<Option<Int32>>.None
public var var_1675612825334_1192 : (UInt16, Float32, UInt32, Int32, Float64) = (UInt16(UInt8(UInt8(UInt8(23)))), Float32(Float32(Float32(-85.0))), UInt32(Int8(-104)), Int32(43), Float64(Float32(Float32(8.0))))
let var_1675612825334_1274 : Range<UInt32> = ((UInt32(Int32(UInt16(113)))&127)..=(UInt32(27)&127):((76|1)))
var var_1675612825334_1298 : Int8 = Int8(UInt8(UInt8(240)))
public var var_1675612825334_1367 : Option<Option<Unit>> = Option<Option<Unit>>.None
public var var_1675612825334_1393 : Interface_1675612825334_158 = Class_1675612825334_153<Unit>()
public var var_1675612825334_1419 : ?Unit = Option<Unit>.None
public let var_1675612825334_1427 : ??Int32 = Option<Option<Int32>>.None
public var var_1675612825334_1439 : Int32 = Int32(UInt32(Int32(-26)))
var var_1675612825334_1585 : Option<Bool> = (((UInt16(198), Float32(-41.0), UInt32(143), Int32(113), (-79.0)), Int8(Int8(-32)), ((UInt64(116)&127)..=(UInt64(126)&127):(9|1)), UInt64(51)) as Bool)
public var var_1675612825334_1617 : Float32 = Float32(-57.0)
public let var_1675612825334_1634 : UInt64 = UInt64(10)

public func func_1675612825334_56<T0, T1>() : Unit { // block id: 57

}

public func func_1675612825334_8(param_1675612825334_9 : Int64) : Bool { // block id: 10
    let var_1675612825334_69 : Float32 = Float32(-48.0);
    var var_1675612825334_126 : Float32 = Float32(15.0);
    if (if (try { // block id: 14
        var_1675612825334_16;
        false
    } finally { // block id: 19
        false
    }) { // block id: 21
        var var_1675612825334_24 : Int8 = Int8(UInt8(110));
        var_1675612825334_24 == var_1675612825334_24
    } else if ((Option<Bool>.Some(var_1675612825334_35) ?? true)) { // block id: 39
        let var_1675612825334_42 : Int8 = Int8(-17);
        var_1675612825334_42 < var_1675612825334_42
    } else { // block id: 45
        var_1675612825334_16;
        var_1675612825334_48;
        var_1675612825334_51
    }) { // block id: 54
        func_1675612825334_56<Option<Unit>, Option<Option<Option<Int32>>>>();
        var var_1675612825334_60 : UInt64 = UInt64(UInt64(148));
        var_1675612825334_60--;
        false || true
    } else { // block id: 66
        var var_1675612825334_102 : UInt64 = UInt64(53);
        match (var_1675612825334_69) {
            case _ : Bool => 
                false;
                var_1675612825334_16;
                false
            
            case -74.0 | -22.0 | 20.0 | -50.0 => 
                !true
            
            case -28.0 | 20.0 | -78.0 => 
                let var_1675612825334_88 : Option<Bool> = Option<Bool>.None;
                if (var_1675612825334_51) { var_1675612825334_88 } else { Option<Bool>.Some(var_1675612825334_51) } ;
                false
            
            case caseVar_1675612825334_95 : Int64 => 
                var_1675612825334_98;
                var_1675612825334_102++;
                false || true
            
            case _ => 
                true
            
        };
        var var_1675612825334_129 : Bool = true;
        if (var_1675612825334_35) { // block id: 112
            var_1675612825334_115 += var_1675612825334_115;
            ();
            var_1675612825334_35
        } else if (false) { // block id: 122
            Float32(119.0) * var_1675612825334_126;
            var_1675612825334_129
        } else { // block id: 131
            var_1675612825334_51
        }
    }
}

public interface Interface_1675612825334_156<T0> {
    func func_1675612825334_1574(param_1675612825334_1575 : (Int64) -> Bool, param_1675612825334_1578 : Array<UInt64>) : UInt64 { // block id: 1579
        let var_1675612825334_1626 : Range<Int16> = ((Int16(-65)&127)..(Int16(-36)&127):(110|1));
        (match (var_1675612825334_1585) {
            case _ : Array<Range<UInt16>> => 
                if (false) { var_1675612825334_1419 } else { Option<Unit>.Some(()) } ;
                var_1675612825334_16;
                var_1675612825334_1192
            
            case _ : (UInt16, Float32, UInt32, Int32, Float64) => 
                var_1675612825334_16;
                if (false) { (UInt16(168), var_1675612825334_1617, var_1675612825334_213, Int32(39), 22.0) } else { var_1675612825334_1192 } 
            
            case _ => 
                var_1675612825334_1626;
                var_1675612825334_1192
            
        }, Int8(-9), if (true) { ((var_1675612825334_1634&127)..=(var_1675612825334_1634&127):((var_1675612825334_115|1))) } else { ((UInt64(33)&127)..(UInt64(5)&127):((80|1))) } , var_1675612825334_1634 % ((UInt64(246)) | 1))[3]
    }

}

public interface Interface_1675612825334_158 {

}

public interface Interface_1675612825334_157<T0> <: Interface_1675612825334_156<Array<Range<UInt16>>> & Interface_1675612825334_158 {

}

public open class Class_1675612825334_153<T0> <: Interface_1675612825334_156<Array<Range<UInt16>>> & Interface_1675612825334_157<Range<UInt64>> {
    public init() { // block id: 155

    }
;
    public prop var_1675612825334_163 : UInt64 { // block id: 164
        get() { // block id: 166
            ();
            UInt64(UInt32(UInt16(Int8(77))))
        }

    };
    mut prop var_1675612825334_248 : Int32 { // block id: 249
        get() { // block id: 251
            Int32(-88);
            var_1675612825334_1659
        }

        set(Value) { // block id: 255
            ();
            var_1675612825334_1659 = Value
        }

    };
    mut prop var_1675612825334_496 : Unit { // block id: 497
        get() { // block id: 499
            (Int8(-94) as Bool);
            ()
        }

        set(Value) { // block id: 505
            ();
            ()
        }

    };
    public init(param_1675612825334_228 : (Int64) -> Bool, optionalParam_1675612825334_231 ! : Bool = ((Float64(Float64(37.0)) as Bool) is UInt64), namedParam_1675612825334_237 ! : Int8, optionalParam_1675612825334_238 ! : UInt8 = UInt8(UInt8(11))) { // block id: 241
        var_1675612825334_245.var_1675612825334_248 ^= (func_1675612825334_464|>func_1675612825334_260)[3];
        var_1675612825334_16;
        if ((var_1675612825334_471 is (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64)))) { // block id: 476
            try { // block id: 478
                var_1675612825334_16;
                var_1675612825334_213;
                if (false) { r'5' } else { var_1675612825334_48 } 
            } catch (e: Exception) { // block id: 485
                var_1675612825334_16;
                var_1675612825334_16;
                var_1675612825334_48
            }
        } else if (func_1675612825334_8(13)) { // block id: 491
            ();
            var_1675612825334_245.var_1675612825334_496;
            try { // block id: 509
                var_1675612825334_16;
                var_1675612825334_512;
                if (true) { var_1675612825334_48 } else { r'E' } 
            } finally { // block id: 518
                Class_1675612825334_153<Unit>();
                var_1675612825334_16;
                var var_1675612825334_523 : Bool = (((UInt8(160)&127)..=(UInt8(105)&127):((-7)|1)) is Int64);
                if (var_1675612825334_523) { var_1675612825334_48 } else { var_1675612825334_48 } 
            }
        } else { // block id: 528
            if (var_1675612825334_35) { // block id: 531
                ()
            };
            var_1675612825334_536[5];
            r'A'
        }
    }
;
    public let var_1675612825334_1654 : UInt8 = UInt8(7);
    var var_1675612825334_1659 : Int32 = Int32(67);
    public func func_1675612825334_1574(param_1675612825334_1575 : (Int64) -> Bool, param_1675612825334_1578 : Array<UInt64>) : UInt64 { // block id: 1579
        let var_1675612825334_1626 : Range<Int16> = ((Int16(-65)&127)..(Int16(-36)&127):(110|1));
        (match (var_1675612825334_1585) {
            case _ : Array<Range<UInt16>> => 
                if (false) { var_1675612825334_1419 } else { Option<Unit>.Some(()) } ;
                var_1675612825334_16;
                var_1675612825334_1192
            
            case _ : (UInt16, Float32, UInt32, Int32, Float64) => 
                var_1675612825334_16;
                if (false) { (UInt16(168), var_1675612825334_1617, var_1675612825334_213, Int32(39), 22.0) } else { var_1675612825334_1192 } 
            
            case _ => 
                var_1675612825334_1626;
                var_1675612825334_1192
            
        }, Int8(-9), if (true) { ((var_1675612825334_1634&127)..=(var_1675612825334_1634&127):((var_1675612825334_115|1))) } else { ((UInt64(33)&127)..(UInt64(5)&127):((80|1))) } , var_1675612825334_1634 % ((UInt64(246)) | 1))[3]
    }

}


public func func_1675612825334_260(param_1675612825334_261 : () -> Unit) : (UInt16, Float32, UInt32, Int32, Float64) { // block id: 263
    var var_1675612825334_272 : ?Int32 = (Class_1675612825334_153<Unit>() as Int32);
    try { // block id: 265
        var_1675612825334_272.getOrThrow();
        [(), (), (), (), (), var_1675612825334_16, (), var_1675612825334_16, (), var_1675612825334_16][5];
        var var_1675612825334_305 : Int32 = Int32(Int16(UInt8(85)));
        try { // block id: 299
            var_1675612825334_302 * var_1675612825334_305
        } finally { // block id: 309
            var_1675612825334_305
        }
    } finally { // block id: 311
        var var_1675612825334_322 : Int32 = Int32(46);
        if (var_1675612825334_314) { // block id: 316
            UInt8(202);
            ();
            Int32(89) ^ var_1675612825334_322
        } else if (true) { // block id: 325
            var_1675612825334_327
        } else { // block id: 330
            var_1675612825334_302
        }
    };
    let var_1675612825334_341 : Option<Bool> = (Option<Bool>.Some(false) as Bool);
    var var_1675612825334_348 : UInt64 = UInt64(Int32(Int32(-128)));
    var var_1675612825334_414 : Range<UInt64> = ((UInt64(38)&127)..(UInt64(102)&127):((-10)|1));
    var var_1675612825334_445 : Float64 = (-33.0);
    match ((UInt32(142) as Int32)) {
        case _ => 
            var_1675612825334_341;
            let var_1675612825334_356 : (UInt16, Float32, UInt32, Int32, Float64) = (UInt16(163), Float32(Float32(0.0)), UInt32(94), Int32(UInt32(Int8(-95))), Float64(Float32(Float32(76.0))));
            (((var_1675612825334_348&127)..(UInt64(143)&127):((54|1))), ###"\"q@L/)H00G"###, var_1675612825334_356)
        
        case caseVar_1675612825334_370 => 
            var_1675612825334_16;
            var var_1675612825334_375 : Float32 = Float32(Float32(-63.0));
            var_1675612825334_375 *= Float32(-13.0);
            var var_1675612825334_400 : String = "H#j1QdARyj";
            if (var_1675612825334_35) { var_1675612825334_382 } else { (((UInt64(165)&127)..=(UInt64(182)&127):(95|1)), var_1675612825334_400, (UInt16(100), var_1675612825334_375, var_1675612825334_213, Int32(41), 62.0)) } 
        
        case caseVar_1675612825334_410 : Option<Bool> => 
            ();
            var_1675612825334_414;
            (var_1675612825334_414, ###"\"N(Sr}$#t["###, (var_1675612825334_421, Float32(76.0), var_1675612825334_213, Int32(121), (-8.0)))
        
        case caseVar_1675612825334_432 : Range<UInt32> => 
            if (var_1675612825334_314) { (var_1675612825334_414, "c[;J!-I8Jt", (UInt16(68), Float32(-32.0), var_1675612825334_213, Int32(-109), var_1675612825334_445)) } else { var_1675612825334_382 } 
        
        case _ => 
            ((56&127)..=(var_1675612825334_115&127):(((-12)|1)));
            if (false) { ((var_1675612825334_213&127)..=(var_1675612825334_213&127):((var_1675612825334_115|1))) } else { ((UInt32(86)&127)..(UInt32(251)&127):(1|1)) } ;
            var_1675612825334_382
        
    }[2]
}

public func func_1675612825334_464() : Unit { // block id: 57

}

public func func_1675612825334_576(param_1675612825334_577 : Rune) : Int16 { // block id: 578
    let var_1675612825334_582 : Array<Int8> = [Int8(UInt8(204)), Int8(45), Int8(124), Int8(Int8(112)), Int8(UInt8(10)), Int8(-82), Int8(UInt8(Int8(UInt8(179)))), Int8(-39), Int8(UInt8(73)), Int8(Int8(Int8(-55)))];
    var_1675612825334_582[8];
    Int16(65)
}






public func func_1675612825334_702(param_1675612825334_703 : (Int64) -> Bool) : Array<Rune> { // block id: 706
    let var_1675612825334_1025 : (Int64, Array<Range<UInt16>>, Int64, Bool) = ((-3), [((UInt16(Int16(-90))&127)..(UInt16(51)&127):((Int64(Int16(-40))|1))), ((UInt16(91)&127)..(UInt16(86)&127):(81|1)), ((UInt16(77)&127)..(UInt16(234)&127):(37|1)), ((UInt16(37)&127)..(UInt16(81)&127):((Int64(UInt32(118))|1))), ((UInt16(201)&127)..=(UInt16(UInt8(43))&127):((114|1))), ((UInt16(165)&127)..(UInt16(UInt8(91))&127):((Int64(Int32(41))|1))), ((UInt16(143)&127)..=(UInt16(32)&127):(107|1)), ((UInt16(203)&127)..=(UInt16(49)&127):((-54)|1)), ((UInt16(Int16(119))&127)..=(UInt16(UInt8(113))&127):(((-66)|1))), ((UInt16(UInt8(77))&127)..=(UInt16(60)&127):(((-98)|1)))], Int64(Int64(UInt32(161))), (r'z' is Rune));
    let var_1675612825334_1097 : Int64 = (-103);
    let var_1675612825334_1120 : (Array<UInt64>, (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64)), Range<UInt32>, (Int64, Array<Range<UInt16>>, Int64, Bool), Interface_1675612825334_158) = ([UInt64(214), UInt64(24), UInt64(195), UInt64(169), UInt64(73), UInt64(224), UInt64(143), UInt64(209), UInt64(238), UInt64(197)], (((UInt64(246)&127)..=(UInt64(114)&127):((-87)|1)), ###"kj;$9IO&T&"###, (UInt16(Int16(20)), Float32(108.0), UInt32(Int32(82)), Int32(49), Float64(26.0))), ((UInt32(45)&127)..(UInt32(148)&127):((-74)|1)), (Int64(Int32(UInt32(98))), [((UInt16(111)&127)..(UInt16(240)&127):(53|1)), ((UInt16(220)&127)..=(UInt16(221)&127):(((-45)|1))), ((UInt16(180)&127)..=(UInt16(21)&127):((-107)|1)), ((UInt16(150)&127)..(UInt16(247)&127):(((-113)|1))), ((UInt16(137)&127)..(UInt16(40)&127):(((-20)|1))), ((UInt16(236)&127)..(UInt16(196)&127):(((-10)|1))), ((UInt16(182)&127)..=(UInt16(66)&127):((45|1))), ((UInt16(202)&127)..=(UInt16(187)&127):((-72)|1)), ((UInt16(40)&127)..(UInt16(128)&127):((1|1))), ((UInt16(156)&127)..(UInt16(152)&127):(((-127)|1)))], 68, false), Class_1675612825334_153<Unit>(func_1675612825334_8, optionalParam_1675612825334_231 : (UInt16(114) is UInt8), namedParam_1675612825334_237 : Int8(Int8(-11)), optionalParam_1675612825334_238 : UInt8(UInt8(180))));
    let var_1675612825334_1188 : Range<UInt64> = ((UInt64(207)&127)..(UInt64(188)&127):((-101)|1));
    func func_1675612825334_708(optionalParam_1675612825334_709 ! : Interface_1675612825334_156<Array<Range<UInt16>>> = Class_1675612825334_153<Unit>(func_1675612825334_8, optionalParam_1675612825334_231 : false, namedParam_1675612825334_237 : Int8(UInt8(Int8(-105))), optionalParam_1675612825334_238 : UInt8(170)), namedParam_1675612825334_717 ! : Array<Range<UInt16>>, optionalParam_1675612825334_718 ! : Float32 = Float32(Float32(Float32(Float32(Float32(25.0)))))) : Interface_1675612825334_158 { // block id: 724
        var loopTimeVar_1675612825334_735 : Int64 = 0;
        do {
            loopTimeVar_1675612825334_735++;

        } while ((try { // block id: 727
            false
        } catch (_) { // block id: 729
            var_1675612825334_636
        } finally { // block id: 731
            var_1675612825334_35
        }) && loopTimeVar_1675612825334_735 < 100 ) ;
        var var_1675612825334_1016 : ?Int32 = Option<Int32>.None;
        if (var_1675612825334_742[8][8]) { ((Option<Option<Option<Int32>>>.Some(var_1675612825334_1008) ?? var_1675612825334_1008) ?? if (true) { Option<Int32>.Some(Int32(-96)) } else { var_1675612825334_1016 } ) } else { Option<Int32>.None } ;
        var var_1675612825334_1086 : Range<UInt16> = ((UInt16(38)&127)..=(UInt16(UInt8(109))&127):((115|1)));
        let var_1675612825334_1242 : Range<UInt64> = ((UInt64(67)&127)..=(UInt64(Int8(54))&127):((Int64(Int8(106))|1)));
        let var_1675612825334_1263 : Interface_1675612825334_158 = Class_1675612825334_153<Unit>();
        if (if (true) { var_1675612825334_1025 } else { (var_1675612825334_115, [((UInt16(0)&127)..(UInt16(113)&127):((var_1675612825334_115|1))), ((var_1675612825334_421&127)..(var_1675612825334_421&127):(((-100)|1))), ((UInt16(184)&127)..=(UInt16(249)&127):((-54)|1)), ((UInt16(33)&127)..=(UInt16(39)&127):((-110)|1)), ((UInt16(179)&127)..(UInt16(40)&127):(26|1)), var_1675612825334_1086, var_1675612825334_1086, ((UInt16(123)&127)..=(UInt16(240)&127):(14|1)), ((UInt16(35)&127)..(UInt16(215)&127):(67|1)), var_1675612825334_1086], var_1675612825334_1097, var_1675612825334_314) } [3]) { try { // block id: 1104
            ();
            [var_1675612825334_48, var_1675612825334_48, r'3', r'y', r'V', r'X', var_1675612825334_48, var_1675612825334_48, var_1675612825334_48, r'v'];
            let var_1675612825334_1184 : Array<UInt64> = [UInt64(26), UInt64(90), UInt64(211), UInt64(105), UInt64(102), UInt64(140), UInt64(82), UInt64(104), UInt64(191), UInt64(225)];
            var var_1675612825334_1208 : Range<UInt32> = ((UInt32(222)&127)..=(UInt32(Int32(-125))&127):((Int64(UInt32(UInt16(31)))|1)));
            if (false) { var_1675612825334_1120 } else { (var_1675612825334_1184, (var_1675612825334_1188, """
,o@9a
on)$\\
""", var_1675612825334_1192), var_1675612825334_1208, var_1675612825334_1025, Class_1675612825334_153<Unit>(func_1675612825334_8, namedParam_1675612825334_237 : Int8(5), optionalParam_1675612825334_238 : UInt8(181))) } 
        } finally { // block id: 1221
            var_1675612825334_1192;
            let var_1675612825334_1228 : UInt64 = UInt64(UInt16(43));
            var var_1675612825334_1250 : String = ###"=&=E[,Cew^"###;
            let var_1675612825334_1267 : Array<UInt64> = [UInt64(178), UInt64(150), UInt64(41), UInt64(77), UInt64(244), UInt64(112), UInt64(228), UInt64(172), UInt64(99), UInt64(83)];
            if (true) { ([var_1675612825334_1228, UInt64(65), var_1675612825334_1228, UInt64(158), var_1675612825334_1228, UInt64(40), var_1675612825334_1228, UInt64(75), UInt64(25), var_1675612825334_1228], (var_1675612825334_1242, var_1675612825334_1250, var_1675612825334_1192), ((var_1675612825334_213&127)..=(UInt32(186)&127):((var_1675612825334_1097|1))), (var_1675612825334_1097, var_1675612825334_536, var_1675612825334_1097, var_1675612825334_51), var_1675612825334_1263) } else { (var_1675612825334_1267, (var_1675612825334_1188, var_1675612825334_1250, var_1675612825334_1192), var_1675612825334_1274, (var_1675612825334_1097, [((UInt16(120)&127)..=(UInt16(12)&127):((-92)|1)), ((UInt16(61)&127)..=(UInt16(102)&127):(112|1)), ((UInt16(120)&127)..(UInt16(26)&127):(113|1)), ((UInt16(246)&127)..(UInt16(120)&127):(109|1)), ((UInt16(115)&127)..=(UInt16(147)&127):(122|1)), ((UInt16(40)&127)..=(UInt16(130)&127):((-43)|1)), ((UInt16(66)&127)..(UInt16(217)&127):((-36)|1)), ((UInt16(124)&127)..(UInt16(253)&127):((-32)|1)), ((UInt16(10)&127)..(UInt16(101)&127):(42|1)), ((UInt16(34)&127)..(UInt16(64)&127):(81|1))], var_1675612825334_115, true), Class_1675612825334_153<Unit>()) } 
        }[4] } else { (Option<Interface_1675612825334_158>.Some(Class_1675612825334_153<Unit>(func_1675612825334_8, optionalParam_1675612825334_231 : var_1675612825334_51, namedParam_1675612825334_237 : var_1675612825334_1298)) ?? (Option<Interface_1675612825334_158>.Some(var_1675612825334_1263) ?? Class_1675612825334_153<Unit>())) } 
    }
;
    let var_1675612825334_1307 : Interface_1675612825334_156<Array<Range<UInt16>>> = Class_1675612825334_153<Unit>();
    var var_1675612825334_1318 : Bool = true;
    var var_1675612825334_1331 : UInt16 = UInt16(UInt16(37));
    func_1675612825334_708(optionalParam_1675612825334_709 : var_1675612825334_1307, namedParam_1675612825334_717 : [((UInt16(163)&127)..=(UInt16(165)&127):((-108)|1)), ((UInt16(140)&127)..=(UInt16(214)&127):(4|1)), ((UInt16(230)&127)..=(UInt16(63)&127):((-10)|1)), ((UInt16(176)&127)..(UInt16(90)&127):((-1)|1)), ((UInt16(58)&127)..(UInt16(244)&127):((-82)|1)), ((UInt16(242)&127)..=(UInt16(73)&127):((-1)|1)), ((UInt16(157)&127)..=(UInt16(4)&127):(124|1)), ((UInt16(204)&127)..=(UInt16(146)&127):(5|1)), ((UInt16(21)&127)..(UInt16(86)&127):(110|1)), ((UInt16(87)&127)..(UInt16(218)&127):((-75)|1))], optionalParam_1675612825334_718 : if ((Option<Bool>.Some(true) ?? var_1675612825334_314)) { // block id: 1315
        var_1675612825334_1318 ||= var_1675612825334_636;
        var var_1675612825334_1323 : Float32 = Float32(Float32(Float32(19.0)));
        var_1675612825334_1323 + Float32(-98.0)
    } else { // block id: 1328
        var_1675612825334_1331 -= UInt16(238);
        "E[t6oB\"Tk,";
        var var_1675612825334_1339 : Float32 = Float32(-116.0);
        Float32(101.0) * var_1675612825334_1339
    });
    var var_1675612825334_1386 : ?Unit = Option<Unit>.None;
    (if ([var_1675612825334_1318, var_1675612825334_314, false, var_1675612825334_314, true, var_1675612825334_636, var_1675612825334_1318, false, var_1675612825334_636, false][8]) { (var_1675612825334_1367 ?? Option<Unit>.None) } else { match (Option<Interface_1675612825334_158>.None) {
        case _ : Array<UInt64> => 
            Option<Unit>.Some(())
        
        case _ => 
            ((UInt8(28)&127)..=(UInt8(185)&127):(119|1));
            if (true) { Option<Unit>.Some(var_1675612825334_16) } else { var_1675612825334_1386 } 
        
        case caseVar_1675612825334_1390 : (Range<UInt64>, String, (UInt16, Float32, UInt32, Int32, Float64)) => 
            var_1675612825334_1393;
            if (var_1675612825334_51) { var_1675612825334_1386 } else { Option<Unit>.Some(()) } ;
            Option<Unit>.Some(())
        
        case _ : (Int64, Array<Range<UInt16>>, Int64, Bool) => 
            Option<Unit>.None
        
        case _ => 
            UInt16(74) ^ UInt16(101);
            UInt32(65);
            var_1675612825334_1386
        
    } }  ?? var_1675612825334_16);
    var var_1675612825334_1451 : ?Int32 = Option<Int32>.Some(Int32(Int16(-34)));
    let var_1675612825334_1476 : Bool = (Option<Interface_1675612825334_158>.Some(Class_1675612825334_153<Unit>(func_1675612825334_8, namedParam_1675612825334_237 : Int8(Int8(-95)), optionalParam_1675612825334_238 : UInt8(UInt8(60)))) is () -> Unit);
    match (match (match (Option<Option<Unit>>.Some(var_1675612825334_1419)) {
        case _ : Array<UInt64> => 
            if (var_1675612825334_51) { var_1675612825334_1427 } else { var_1675612825334_1008 } 
        
        case caseVar_1675612825334_1432 : Int16 => 
            var_1675612825334_1298 -= var_1675612825334_1298;
            var_1675612825334_1439--;
            var_1675612825334_1427
        
        case caseVar_1675612825334_1446 => 
            var_1675612825334_16;
            Option<Option<Int32>>.Some(var_1675612825334_1451)
        
        case _ => 
            if (var_1675612825334_51) { var_1675612825334_1008 } else { var_1675612825334_1008 } 
        
    }) {
        case _ => 
            var_1675612825334_1367;
            ((125&127)..=(121&127):((121|1)));
            var_1675612825334_35
        
        case _ => 
            var_1675612825334_1307;
            ();
            var_1675612825334_1476
        
        case _ => 
            ();
            ();
            true
        
    }) {
        case _ => 
            var_1675612825334_16;
            if (var_1675612825334_314) { [(), var_1675612825334_16, (), (), var_1675612825334_16, (), (), (), var_1675612825334_16, ()] } else { [(), (), (), (), (), (), (), (), (), ()] } ;
            [var_1675612825334_48, r'e', var_1675612825334_48, r'Z', var_1675612825334_48, r'V', var_1675612825334_48, var_1675612825334_48, var_1675612825334_48, r'V']
        
        case _ => 
            ();
            [r'd', r'i', var_1675612825334_48, r'B', r'J', var_1675612825334_48, r'y', r'G', r'm', r'J']
        
        case caseVar_1675612825334_1536 => 
            [r'Z', r'r', r'o', r'P', r'M', r'G', r'D', r'N', r'n', r'J']
        
        case _ => 
            [var_1675612825334_48, var_1675612825334_48, var_1675612825334_48, var_1675612825334_48, var_1675612825334_48, r'c', var_1675612825334_48, var_1675612825334_48, r'W', r'g']
        
    }
}

public func func_1675612825334_1553<T0, T1, T2>(param_1675612825334_9 : Int64) : Bool { // block id: 10
    let var_1675612825334_69 : Float32 = Float32(-48.0);
    var var_1675612825334_126 : Float32 = Float32(15.0);
    if (if (try { // block id: 14
        var_1675612825334_16;
        false
    } finally { // block id: 19
        false
    }) { // block id: 21
        var var_1675612825334_24 : Int8 = Int8(UInt8(110));
        var_1675612825334_24 == var_1675612825334_24
    } else if ((Option<Bool>.Some(var_1675612825334_35) ?? true)) { // block id: 39
        let var_1675612825334_42 : Int8 = Int8(-17);
        var_1675612825334_42 < var_1675612825334_42
    } else { // block id: 45
        var_1675612825334_16;
        var_1675612825334_48;
        var_1675612825334_51
    }) { // block id: 54
        func_1675612825334_56<Option<Unit>, Option<Option<Option<Int32>>>>();
        var var_1675612825334_60 : UInt64 = UInt64(UInt64(148));
        var_1675612825334_60--;
        false || true
    } else { // block id: 66
        var var_1675612825334_102 : UInt64 = UInt64(53);
        match (var_1675612825334_69) {
            case _ : Bool => 
                false;
                var_1675612825334_16;
                false
            
            case -74.0 | -22.0 | 20.0 | -50.0 => 
                !true
            
            case -28.0 | 20.0 | -78.0 => 
                let var_1675612825334_88 : Option<Bool> = Option<Bool>.None;
                if (var_1675612825334_51) { var_1675612825334_88 } else { Option<Bool>.Some(var_1675612825334_51) } ;
                false
            
            case caseVar_1675612825334_95 : Int64 => 
                var_1675612825334_98;
                var_1675612825334_102++;
                false || true
            
            case _ => 
                true
            
        };
        var var_1675612825334_129 : Bool = true;
        if (var_1675612825334_35) { // block id: 112
            var_1675612825334_115 += var_1675612825334_115;
            ();
            var_1675612825334_35
        } else if (false) { // block id: 122
            Float32(119.0) * var_1675612825334_126;
            var_1675612825334_129
        } else { // block id: 131
            var_1675612825334_51
        }
    }
}

public func func_1675612825334_662<T0, T1>(optionalParam_1675612825334_663 ! : Range<UInt8> = ((UInt8(126)&127)..(UInt8(58)&127):((-100)|1)), namedParam_1675612825334_665 ! : Range<UInt64>) : Rune { // block id: 666
    ((UInt64(117)&127)..(UInt64(51)&127):((-120)|1));
    var loopTimeVar_1675612825334_698 : Int64 = 0;
    while ((try { // block id: 670
        ((UInt16(26)&127)..=(UInt16(51)&127):((-13)|1));
        true
    } catch (e: Exception) { // block id: 673
        UInt16(54);
        var var_1675612825334_677 : Int8 = Int8(UInt8(123));
        var_1675612825334_677 >>= ((Int8(-50)) & 7);
        var_1675612825334_636
    }) && loopTimeVar_1675612825334_698 < 100 ) {
        loopTimeVar_1675612825334_698++;
        ();
        [(), var_1675612825334_16, var_1675612825334_16, var_1675612825334_16, (), var_1675612825334_16, (), (), (), ()][3]
    };
    let var_1675612825334_1556 : (Int64) -> Bool = func_1675612825334_1553<Range<Int64>, Rune, Array<Unit>>;
    (var_1675612825334_1556|>func_1675612825334_702)[0]
}


public func func_1675612825334_146(param_1675612825334_147 : UInt64) : Int16 { // block id: 148
    func_1675612825334_56<Option<Unit>, Option<Option<Option<Int32>>>>();
    var var_1675612825334_160 : Class_1675612825334_153<Unit> = Class_1675612825334_153<Unit>();
    var var_1675612825334_177 : String = "1=pO7]`68V";
    match (match (var_1675612825334_160.var_1675612825334_163) {
        case caseVar_1675612825334_174 => 
            var_1675612825334_177
        
        case 232 | 37 => 
            Float32(-106.0);
            var_1675612825334_177
        
        case _ : Int8 => 
            var var_1675612825334_190 : Option<Bool> = Option<Bool>.None;
            if (var_1675612825334_35) { var_1675612825334_190 } else { Option<Bool>.None } ;
            """
G_wHx
)5\"8\"
"""
        
        case 244 | 238 => 
            """
<)SpR
utPt!
"""
        
        case _ => 
            var_1675612825334_51;
            let var_1675612825334_205 : Option<Bool> = Option<Bool>.None;
            if (false) { Option<Bool>.None } else { var_1675612825334_205 } ;
            var_1675612825334_177
        
    }) {
        case _ : Interface_1675612825334_158 => 
            var_1675612825334_213--;
            ()
        
        case """
8$Ye^
zuG\\h
""" | " 5-:0<}_Y3" | ###"pR`,z;!4yP"### | "ee+TF1$FNa" => 
            var_1675612825334_16
        
        case _ => 
            var_1675612825334_16;
            var var_1675612825334_225 : Interface_1675612825334_157<Range<UInt64>> = Class_1675612825334_153<Unit>({ lambdaParameter_1675612825334_565 : Int64 => true }, optionalParam_1675612825334_231 : (((UInt64(114)&127)..(UInt64(238)&127):((-5)|1)) is (UInt16, Float32, UInt32, Int32, Float64)), namedParam_1675612825334_237 : Int8(-8), optionalParam_1675612825334_238 : UInt8(Int8(UInt8(33))));
            var_1675612825334_225;
            var_1675612825334_16
        
    };
    func_1675612825334_662<Array<UInt64>, Option<Int32>>(namedParam_1675612825334_665 : (Option<Range<UInt64>>.None ?? ((UInt64(202)&127)..=(UInt64(118)&127):(29|1))))|>{ lambdaParameter_1675612825334_607 : Rune => var var_1675612825334_659 : Int16 = Int16(106); match (if ((((UInt8(146)&127)..(UInt8(160)&127):((var_1675612825334_115|1))) is Option<Bool>)) { // block id: 616
        var_1675612825334_16;
        UInt64(154)
    } else { // block id: 619
        UInt64(205)
    }) {
        case 15 | 201 => 
            let var_1675612825334_625 : Range<UInt64> = ((UInt64(45)&127)..(UInt64(49)&127):((Int64(UInt64(UInt16(Int16(27))))|1)));
            var_1675612825334_625;
            if (var_1675612825334_636) { ((Int32(19)&127)..(var_1675612825334_302&127):(((-28)|1))) } else { ((var_1675612825334_302&127)..(var_1675612825334_327&127):((var_1675612825334_115|1))) } ;
            var_1675612825334_653
        
        case _ => 
            var_1675612825334_659
        
    } }
}

func func_1675612825334_142(param_1675612825334_143 : UInt8) : Int16 { // block id: 144
    var var_1675612825334_1567 : (UInt64) -> Int16 = func_1675612825334_146;
    let var_1675612825334_1571 : Interface_1675612825334_157<Range<UInt64>> = Class_1675612825334_153<Unit>();
    var var_1675612825334_1648 : Array<UInt64> = [UInt64(69), UInt64(178), UInt64(203), UInt64(250), UInt64(196), UInt64(178), UInt64(108), UInt64(73), UInt64(144), UInt64(57)];
    var_1675612825334_1571.func_1675612825334_1574(func_1675612825334_8, var_1675612825334_1648)|>var_1675612825334_1567
}

main(): Int64 {
    try {
        if ((var_1675612825334_115|>func_1675612825334_8)) { // block id: 135

        } else if (func_1675612825334_8((-43))) { // block id: 138
            UInt32(50);
            var_1675612825334_16
        };
        var_1675612825334_245.var_1675612825334_1654|>func_1675612825334_142;
        Int64(UInt8(207))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1675612825334_327*var_1675612825334_327), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend<T0> Class_1675612825334_153<T0> {

}

