/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC-PIPE-1: %compiler %overflow_wrapping %cmp_opt %f -o %output 2>&1 | compare %f


// All global variable need to be defined before use!
var var_1672925938289_8 : UInt32 = UInt32(97)
let var_1672925938289_19 : Float32 = Float32(Float32(Float32(Float32(85.0))))
public let var_1672925938289_60 : Bool = false
public var var_1672925938289_138 : (Rune, Rune, Unit) = ('E', 'R', ())
public let var_1672925938289_145 : Range<Int16> = ((Int16(UInt16(UInt8(168)))&127)..=(Int16(85)&127):((Int64(Int32(Int16(62)))|1)))
public let var_1672925938289_230 : Range<Int8> = ((Int8(110)&127)..(Int8(85)&127):((-61)|1))
public var var_1672925938289_257 : Enum_1672925938289_237<Rune, Option<Int8>> = Enum_1672925938289_237<Rune, Option<Int8>>.defaultValue
var var_1672925938289_269 : UInt32 = UInt32(85)
var var_1672925938289_275 : Unit = ()
var var_1672925938289_305 : Int16 = Int16(Int8(65))
public var var_1672925938289_325 : Array<Range<Int16>> = [((Int16(-55)&127)..=(Int16(94)&127):((-118)|1)), ((Int16(-98)&127)..=(Int16(33)&127):((-20)|1)), ((Int16(UInt16(189))&127)..=(Int16(56)&127):(((-5)|1))), ((Int16(-72)&127)..=(Int16(Int16(UInt16(141)))&127):((Int64(UInt32(13))|1))), ((Int16(-102)&127)..=(Int16(UInt16(Int16(59)))&127):((Int64(UInt64(157))|1))), ((Int16(95)&127)..=(Int16(-86)&127):(22|1)), ((Int16(-49)&127)..(Int16(Int16(UInt16(211)))&127):(((-90)|1))), ((Int16(-92)&127)..=(Int16(38)&127):(108|1)), ((Int16(Int8(UInt8(40)))&127)..=(Int16(Int8(59))&127):((Int64(UInt16(17))|1))), ((Int16(-80)&127)..(Int16(6)&127):((-68)|1))]
public var var_1672925938289_381 : Int8 = Int8(UInt8(218))
let var_1672925938289_393 : UInt64 = UInt64(122)
let var_1672925938289_398 : String = """
Af)v%
\\Qx6P
"""
var var_1672925938289_499 : Range<UInt8> = ((UInt8(Int8(UInt8(Int8(73))))&127)..(UInt8(130)&127):((Int64(UInt16(UInt8(Int8(-37))))|1)))
public var var_1672925938289_552 : (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>) = (((UInt16(UInt8(198))&127)..(UInt16(UInt16(UInt16(230)))&127):((3|1))), ('T', '1', ()), false, ((Int64(Int8(UInt8(170)))&127)..=(Int64(Int16(Int16(92)))&127):((Int64(UInt32(UInt8(92)))|1))), ((Int8(-2)&127)..(Int8(16)&127):(112|1)))
let var_1672925938289_623 : Option<Bool> = ((((UInt16(0)&127)..=(UInt16(34)&127):((-82)|1)), ('6', '1', ()), ((() as Bool) is Array<UInt64>), (((-90)&127)..((-40)&127):(28|1)), ((Int8(4)&127)..(Int8(-13)&127):(42|1))) as Bool)
public let var_1672925938289_695 : ?UInt8 = ((Int16(87), UInt64(Int16(-21)), ((Int16(-87)&127)..=(Int16(-60)&127):(112|1)), [((Int16(98)&127)..(Int16(-122)&127):((-20)|1)), ((Int16(3)&127)..(Int16(-89)&127):((-12)|1)), ((Int16(74)&127)..=(Int16(86)&127):((-113)|1)), ((Int16(69)&127)..(Int16(-50)&127):(124|1)), ((Int16(-7)&127)..=(Int16(50)&127):((-2)|1)), ((Int16(61)&127)..=(Int16(78)&127):((-122)|1)), ((Int16(-115)&127)..=(Int16(-122)&127):(35|1)), ((Int16(-46)&127)..=(Int16(-66)&127):((-64)|1)), ((Int16(-83)&127)..(Int16(-14)&127):(36|1)), ((Int16(40)&127)..(Int16(122)&127):((-30)|1))], ((Int16(UInt16(63))&127)..(Int16(-49)&127):((15|1)))) as UInt8)
let var_1672925938289_778 : ((Int16, UInt64, Range<Int16>, Array<Range<Int16>>, Range<Int16>), Range<UInt16>, Interface_1672925938289_171) = ((Int16(UInt16(UInt8(150))), UInt64(103), ((Int16(-50)&127)..=(Int16(-85)&127):(24|1)), [((Int16(69)&127)..(Int16(5)&127):((-47)|1)), ((Int16(-106)&127)..=(Int16(-66)&127):(114|1)), ((Int16(-90)&127)..=(Int16(56)&127):((-47)|1)), ((Int16(64)&127)..=(Int16(-44)&127):((-109)|1)), ((Int16(34)&127)..(Int16(-31)&127):((-67)|1)), ((Int16(23)&127)..(Int16(88)&127):((-68)|1)), ((Int16(-57)&127)..=(Int16(75)&127):((-53)|1)), ((Int16(-8)&127)..=(Int16(6)&127):(71|1)), ((Int16(82)&127)..(Int16(28)&127):(106|1)), ((Int16(46)&127)..=(Int16(122)&127):(5|1))], ((Int16(56)&127)..(Int16(32)&127):((Int64(Int32(100))|1)))), ((UInt16(151)&127)..=(UInt16(217)&127):((116|1))), Class_1672925938289_168())
public let var_1672925938289_997 : ??UInt8 = Option<Option<UInt8>>.None
var var_1672925938289_1030 : ?Enum_1672925938289_237<Rune, Option<Int8>> = (Class_1672925938289_168() as Enum_1672925938289_237<Rune, Option<Int8>>)
let var_1672925938289_1105 : Int64 = Int64(Int16(UInt8(40)))


public interface Interface_1672925938289_173 {

}

public interface Interface_1672925938289_174<T0, T1> {

}

public interface Interface_1672925938289_172 <: Interface_1672925938289_173 & Interface_1672925938289_174<Int16, Option<Enum_1672925938289_237>> {

}

public interface Interface_1672925938289_171 <: Interface_1672925938289_172 & Interface_1672925938289_173 {

}

public open class Class_1672925938289_168 <: Interface_1672925938289_171 & Interface_1672925938289_174<Int16, Option<Enum_1672925938289_237>> & Resource {
    public init() { // block id: 170

    }
;
    prop var_1672925938289_447 : (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>) { // block id: 448
        get() { // block id: 450
            'Q';
            ();
            (((UInt16(114)&127)..=(UInt16(197)&127):(118|1)), ('n', 'X', ()), false, (((-106)&127)..(60&127):(63|1)), ((Int8(16)&127)..=(Int8(UInt8(14))&127):((Int64((-84))|1))))
        }

    };
    static prop var_1672925938289_734 : Bool { // block id: 735
        get() { // block id: 737
            ();
            [Int8(UInt8(Int8(34))), Int8(UInt8(76)), Int8(Int8(-92)), Int8(40), Int8(-96), Int8(UInt8(UInt8(167))), Int8(Int8(Int8(69))), Int8(119), Int8(-111), Int8(0)];
            ((UInt8(UInt8(82)), ((Int16(-37)&127)..(Int16(-108)&127):((53|1))), UInt64(Int8(6)), ()) is Unit)
        }

    };
    mut prop var_1672925938289_909 : UInt8 { // block id: 910
        get() { // block id: 912
            Class_1672925938289_876();
            UInt8(109);
            var_1672925938289_1110
        }

        set(Value) { // block id: 917
            ((Int64(UInt8(247))&127)..=(Int64(Int32(44))&127):((56|1)));
            ();
            var_1672925938289_1110 = Value
        }

    };
    var var_1672925938289_1110 : UInt8 = UInt8(116)
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public enum Enum_1672925938289_237<T0, T1> {
    defaultValue
}


public func func_1672925938289_233(param_1672925938289_234 : Array<Unit>) : Array<Range<Int16>> { // block id: 235
    let var_1672925938289_254 : ?Enum_1672925938289_237<Rune, Option<Int8>> = Option<Enum_1672925938289_237<Rune, Option<Int8>>>.None;
    match (((Option<Option<Enum_1672925938289_237<Rune, Option<Int8>>>>.Some(Option<Enum_1672925938289_237<Rune, Option<Int8>>>.None) ?? Option<Enum_1672925938289_237<Rune, Option<Int8>>>.None) ?? (var_1672925938289_254 ?? var_1672925938289_257))) {
        case defaultValue => 
            Class_1672925938289_168();
            UInt32(14)
        
        case defaultValue => 
            var_1672925938289_269 % ((var_1672925938289_269) | 1)
        
        case _ => 
            var_1672925938289_275;
            ();
            var_1672925938289_8 << ((UInt32(36)) & 7)
        
    };
    var loopTimeVar_1672925938289_318 : Range<UInt64> = ((UInt64(244)&127)..=(UInt64(UInt8(163))&127):((86|1)));
    for (i in loopTimeVar_1672925938289_318 where match (var_1672925938289_230) {
        case _ : Class_1672925938289_168 => 
            if (var_1672925938289_60) { Option<Enum_1672925938289_237<Rune, Option<Int8>>>.Some(var_1672925938289_257) } else { Option<Enum_1672925938289_237<Rune, Option<Int8>>>.None } ;
            ();
            true
        
        case caseVar_1672925938289_296 : Range<Int16> => 
            true
        
        case caseVar_1672925938289_301 : (Float64, UInt64, Option<UInt32>, Int64, Bool) => 
            var_1672925938289_305 /= ((var_1672925938289_305) | 1);
            true || true
        
        case _ => 
            var_1672925938289_275;
            ();
            true
        
    }) {

    };
    var_1672925938289_325
}


public func func_1672925938289_222(param_1672925938289_223 : Range<Int64>) : Int16 { // block id: 224
    var var_1672925938289_366 : (Array<Unit>) -> Array<Range<Int16>> = func_1672925938289_233;
    if ((var_1672925938289_230 is Int64)) { ([(), (), (), (), (), (), (), (), (), ()]|>var_1672925938289_366) } else { var_1672925938289_325 } [5];
    var loopTimeVar_1672925938289_387 : Int64 = 0;
    while (((Option<Int8>.Some(Int8(-109)) ?? var_1672925938289_381) > var_1672925938289_381) && loopTimeVar_1672925938289_387 < 100 ) {
        loopTimeVar_1672925938289_387++;

    };
    var var_1672925938289_402 : (Int16, UInt64, Range<Int16>, Array<Range<Int16>>, Range<Int16>) = (Int16(21), UInt64(Int32(-65)), ((Int16(85)&127)..=(Int16(61)&127):(4|1)), [((Int16(-17)&127)..=(Int16(-20)&127):((-48)|1)), ((Int16(-31)&127)..(Int16(40)&127):(125|1)), ((Int16(-68)&127)..=(Int16(-123)&127):(58|1)), ((Int16(-21)&127)..=(Int16(-93)&127):(2|1)), ((Int16(88)&127)..=(Int16(-32)&127):((-121)|1)), ((Int16(-63)&127)..(Int16(73)&127):((-68)|1)), ((Int16(80)&127)..(Int16(-67)&127):(117|1)), ((Int16(-1)&127)..(Int16(-5)&127):(89|1)), ((Int16(-1)&127)..=(Int16(-3)&127):(86|1)), ((Int16(-91)&127)..=(Int16(-76)&127):(3|1))], ((Int16(-41)&127)..(Int16(-40)&127):((-20)|1)));
    try { // block id: 391
        var_1672925938289_393;
        if (var_1672925938289_60) { var_1672925938289_398 } else { var_1672925938289_398 } ;
        var_1672925938289_402
    } catch (_) { // block id: 410
        UInt16(83);
        var var_1672925938289_420 : Array<Range<Int16>> = [((Int16(-87)&127)..(Int16(9)&127):((-37)|1)), ((Int16(58)&127)..(Int16(-12)&127):(90|1)), ((Int16(-4)&127)..=(Int16(72)&127):((-54)|1)), ((Int16(-34)&127)..=(Int16(-18)&127):(57|1)), ((Int16(73)&127)..=(Int16(74)&127):((-12)|1)), ((Int16(0)&127)..(Int16(116)&127):((-69)|1)), ((Int16(-96)&127)..=(Int16(-98)&127):((-111)|1)), ((Int16(125)&127)..=(Int16(-68)&127):((-121)|1)), ((Int16(24)&127)..=(Int16(41)&127):((-72)|1)), ((Int16(-114)&127)..=(Int16(78)&127):(86|1))];
        if (false) { var_1672925938289_402 } else { (Int16(113), var_1672925938289_393, ((Int16(33)&127)..(Int16(-13)&127):(71|1)), var_1672925938289_420, ((Int16(-110)&127)..(Int16(-25)&127):((-109)|1))) } 
    } finally { // block id: 423
        var_1672925938289_8 % ((UInt32(254)) | 1);
        var_1672925938289_275;
        (var_1672925938289_305, UInt64(126), ((Int16(10)&127)..=(Int16(50)&127):(51|1)), [((Int16(-10)&127)..=(Int16(-22)&127):(90|1)), ((Int16(-77)&127)..=(Int16(91)&127):(29|1)), ((Int16(43)&127)..=(Int16(-86)&127):((-66)|1)), ((Int16(40)&127)..=(Int16(47)&127):(98|1)), ((Int16(75)&127)..(Int16(-115)&127):((-90)|1)), ((Int16(-114)&127)..=(Int16(117)&127):(92|1)), ((Int16(-38)&127)..=(Int16(4)&127):(72|1)), ((Int16(89)&127)..=(Int16(-49)&127):((-29)|1)), ((Int16(-109)&127)..(Int16(-36)&127):((-13)|1)), ((Int16(-101)&127)..=(Int16(8)&127):((-50)|1))], var_1672925938289_145)
    }[0]
}

func func_1672925938289_538(param_1672925938289_539 : Interface_1672925938289_171) : (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>) { // block id: 540
    Class_1672925938289_168.func_1672925938289_544(optionalParam_1672925938289_547 : var_1672925938289_19)
}

public struct Struct_1672925938289_609 {
    init() { // block id: 611

    }
;
    static prop var_1672925938289_638 : UInt8 { // block id: 639
        get() { // block id: 641
            UInt8(205);
            Class_1672925938289_168();
            UInt8(Int8(-36))
        }

    };
    public static func func_1672925938289_614() : Int64 { // block id: 615
        if ((var_1672925938289_623 ?? var_1672925938289_638 < UInt8(168))) { // block id: 647
            var var_1672925938289_653 : Int64 = Int64(Int16(102));
            try (resource = Class_1672925938289_168()) { // block id: 649
                (((-71)&127)..(var_1672925938289_653&127):(((-38)|1)));
                var_1672925938289_275
            } catch (e: Exception) { // block id: 658
                'V';
                var_1672925938289_275;
                ()
            };
            (Option<Unit>.None ?? ());
            try { // block id: 670
                var_1672925938289_653 + 34
            } catch (e: Exception) { // block id: 674
                var_1672925938289_305 |= Int16(74);
                -var_1672925938289_653
            }
        } else { // block id: 680
            [107, (-52), (-85), (-44), (-18), 44, (-76), 40, (-57), 54][7]
        }
    }

}



public func func_1672925938289_185(param_1672925938289_186 : Option<UInt8>) : Range<Int16> { // block id: 187
    var var_1672925938289_193 : Array<Int8> = [Int8(UInt8(UInt8(Int8(72)))), Int8(Int8(33)), Int8(Int8(Int8(UInt8(155)))), Int8(UInt8(23)), Int8(-34), Int8(Int8(UInt8(38))), Int8(UInt8(UInt8(103))), Int8(-121), Int8(-106), Int8(Int8(UInt8(Int8(47))))];
    ((Int16(var_1672925938289_193[4])&127)..=((try { // block id):( 593
)        (((-107)&127)..=((-13)&127):(56|1))
    } catch (e: Exception) { // block id: 595
        Int8(22);
        var_1672925938289_305 = var_1672925938289_305;
        if (true) { (((-2)&127)..=((-87)&127):((-106)|1)) } else { (((-24)&127)..=(52&127):(44|1)) } 
    } finally { // block id: 604
        var var_1672925938289_606 : Range<Int64> = ((24&127)..=(85&127):((-71)|1));
        var_1672925938289_606
    }|>{ lambdaParameter_1672925938289_437 : Range<Int64> => var var_1672925938289_444 : Class_1672925938289_168 = Class_1672925938289_168(); let var_1672925938289_472 : Float64 = 69.0; let var_1672925938289_488 : Range<UInt32> = ((UInt32(150)&127)..=(UInt32(26)&127):((-54)|1)); if (var_1672925938289_444.var_1672925938289_447[2]) { // block id: 468
        var_1672925938289_393;
        let var_1672925938289_534 : Int16 = Int16(11);
        match (var_1672925938289_472) {
            case 112.0 | 71.0 | 61.0 | -31.0 => 
                var_1672925938289_275;
                Int16(30) - Int16(8)
            
            case caseVar_1672925938289_483 => 
                if (true) { var_1672925938289_488 } else { var_1672925938289_488 } ;
                var_1672925938289_305
            
            case -99.0 | 19.0 | -86.0 => 
                var_1672925938289_305 |= Int16(-83);
                var_1672925938289_499;
                var_1672925938289_305
            
            case 16.0 | 4.0 | -5.0 => 
                let var_1672925938289_524 : Int64 = Int64(Int8(63));
                (((UInt16(202)&127)..(UInt16(181)&127):(((-73)|1))), var_1672925938289_138, true, (((-81)&127)..=(var_1672925938289_524&127):((var_1672925938289_524|1))), ((Int8(-92)&127)..(Int8(58)&127):(76|1)));
                ();
                Int16(6)
            
            case _ => 
                var_1672925938289_534
            
        }
    } else { // block id: 536
        var var_1672925938289_580 : Interface_1672925938289_171 = Class_1672925938289_168();
        var_1672925938289_580|>func_1672925938289_538;
        var var_1672925938289_583 : Option<Int8> = (76 as Int8);
        var_1672925938289_583;
        try { // block id: 587
            ((Int8(53)&127)..(Int8(82)&127):(79|1));
            Int16(17)
        } finally { // block id: 590
            var_1672925938289_305
        }
    } })&127:(Struct_1672925938289_609.func_1672925938289_614()|1))
}


public open class Class_1672925938289_876 <: Class_1672925938289_168 & Interface_1672925938289_171 {
    public init() { // block id: 878

    }
;
    let var_1672925938289_883 : ((Rune, Rune, Unit), (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>), Class_1672925938289_168, Rune) = (('1', 'x', ()), (((UInt16(104)&127)..(UInt16(198)&127):(61|1)), ('M', '8', ()), true, (((-51)&127)..=(88&127):(((-14)|1))), ((Int8(-81)&127)..(Int8(79)&127):((3|1)))), Class_1672925938289_876(), 'w')
}

func func_1672925938289_115(param_1672925938289_116 : Bool) : UInt8 { // block id: 117
    let var_1672925938289_162 : UInt64 = UInt64(187);
    try (resource = Class_1672925938289_168()) { // block id: 119
        'l';
        [(), (), (), (), (), (), (), (), (), ()][4]
    } finally { // block id: 134
        var_1672925938289_138[1];
        var_1672925938289_145;
        let var_1672925938289_158 : UInt8 = UInt8(73);
        (var_1672925938289_158, var_1672925938289_145, var_1672925938289_162, ())[3]
    };
    func func_1672925938289_182() : Bool { // block id: 183
        var var_1672925938289_711 : ??UInt8 = Option<Option<UInt8>>.None;
        if (true) { (Option<Option<UInt8>>.Some(var_1672925938289_695) ?? var_1672925938289_695) } else { (var_1672925938289_711 ?? var_1672925938289_695) } |>func_1672925938289_185;
        try { // block id: 715
            if (false) { // block id: 718
                ();
                ('V', 'n', ())
            } else { // block id: 724
                let var_1672925938289_727 : Rune = 'm';
                (var_1672925938289_727, 'N', var_1672925938289_275)
            };
            Class_1672925938289_168.var_1672925938289_734
        } catch (e: Exception) { // block id: 769
            var loopTimeVar_1672925938289_774 : Int64 = 0;
            while ((var_1672925938289_60) && loopTimeVar_1672925938289_774 < 100 ) {
                loopTimeVar_1672925938289_774++;

            };
            var_1672925938289_778[2];
            true || true
        }
    }
;
    let var_1672925938289_805 : UInt8 = UInt8(195);
    let var_1672925938289_880 : Class_1672925938289_876 = Class_1672925938289_876();
    func func_1672925938289_176(namedParam_1672925938289_177 ! : Bool) : Class_1672925938289_168 { // block id: 178
        var var_1672925938289_836 : Unit = ();
        match (if (func_1672925938289_182()) { (Option<Option<UInt8>>.Some(Option<UInt8>.Some(var_1672925938289_805)) ?? Option<UInt8>.Some(var_1672925938289_805)) } else { [Option<UInt8>.Some(var_1672925938289_805), var_1672925938289_695, var_1672925938289_695, var_1672925938289_695, Option<UInt8>.Some(var_1672925938289_805), var_1672925938289_695, var_1672925938289_695, var_1672925938289_695, Option<UInt8>.None, var_1672925938289_695][4] } ) {
            case _ => 
                [(), (), (), (), var_1672925938289_275, (), var_1672925938289_836, var_1672925938289_836, (), ()];
                var var_1672925938289_843 : Bool = false;
                var_1672925938289_843 ||= var_1672925938289_60;
                let var_1672925938289_847 : Option<UInt32> = (Enum_1672925938289_237<Rune, Option<Int8>>.defaultValue as UInt32);
                var_1672925938289_847
            
            case caseVar_1672925938289_852 : Bool => 
                var_1672925938289_836;
                if (true) { Option<UInt32>.None } else { Option<UInt32>.None } 
            
            case caseVar_1672925938289_861 => 
                var_1672925938289_695;
                if (var_1672925938289_60) { Class_1672925938289_168() } else { Class_1672925938289_168() } ;
                Option<UInt32>.None
            
            case _ => 
                Option<UInt32>.Some(var_1672925938289_8)
            
        };
        var_1672925938289_880.var_1672925938289_883[2]
    }
;
    let var_1672925938289_928 : Class_1672925938289_168 = Class_1672925938289_876();
    (func_1672925938289_176(namedParam_1672925938289_177 : var_1672925938289_60).var_1672925938289_909) ^ try { // block id: 926
        var_1672925938289_928;
        var_1672925938289_805
    } catch (e: Exception) { // block id: 931
        var var_1672925938289_934 : Int32 = Int32(-64);
        var_1672925938289_934--;
        var_1672925938289_805 ^ UInt8(143)
    }
}


public func func_1672925938289_46<T0>(param_1672925938289_47 : UInt8) : UInt8 where T0 <: Class_1672925938289_168 & Interface_1672925938289_171 { // block id: 48
    let var_1672925938289_68 : UInt64 = UInt64(UInt64(49));
    var var_1672925938289_96 : Unit = ();
    (try { // block id: 57
        let var_1672925938289_64 : Float64 = Float64((-83.0));
        let var_1672925938289_72 : Option<UInt32> = (Option<UInt32>.None as UInt32);
        let var_1672925938289_76 : Int64 = Int64(Int64(Int8(Int8(-122))));
        let var_1672925938289_83 : (Float64, UInt64, Option<UInt32>, Int64, Bool) = ((-33.0), UInt64(UInt8(Int8(Int8(36)))), Option<UInt32>.None, Int64((-2)), false);
        if (var_1672925938289_60) { (var_1672925938289_64, var_1672925938289_68, var_1672925938289_72, var_1672925938289_76, var_1672925938289_60) } else { var_1672925938289_83 } 
    } finally { // block id: 94
        var_1672925938289_96;
        var var_1672925938289_99 : (Float64, UInt64, Option<UInt32>, Int64, Bool) = (1.0, UInt64(UInt8(Int8(Int8(-60)))), Option<UInt32>.Some(UInt32(43)), Int64(UInt8(UInt8(160))), false);
        var_1672925938289_99
    }[2] ?? UInt32(208));
    let var_1672925938289_940 : (Bool) -> UInt8 = func_1672925938289_115;
    let var_1672925938289_950 : (Float64, UInt64, Option<UInt32>, Int64, Bool) = (Float64(Float64(Float32(-83.0))), UInt64(237), ((() as Bool) as UInt32), (-100), ((('R', 'r', ()), (((UInt16(205)&127)..=(UInt16(101)&127):(((-63)|1))), ('i', 'b', ()), true, (((-19)&127)..=(47&127):(117|1)), ((Int8(95)&127)..(Int8(42)&127):(((-63)|1)))), Class_1672925938289_168(), 'w') is ((Rune, Rune, Unit), (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>), Class_1672925938289_168, Rune)));
    (Option<(Float64, UInt64, Option<UInt32>, Int64, Bool)>.Some(var_1672925938289_950) ?? var_1672925938289_950)[4]|>var_1672925938289_940
}

public func func_1672925938289_39(param_1672925938289_40 : Option<UInt8>) : UInt8 { // block id: 41
    91.0;
    var var_1672925938289_1002 : UInt8 = UInt8(Int8(UInt8(143)));
    var var_1672925938289_1010 : Int32 = Int32(27);
    let var_1672925938289_1021 : Range<UInt64> = ((UInt64(Int8(105))&127)..(UInt64(157)&127):((117|1)));
    try { // block id: 44
        let var_1672925938289_986 : (UInt8) -> UInt8 = func_1672925938289_46<Class_1672925938289_168>;
        UInt8(73)|>var_1672925938289_986;
        Int32(-54)
    } catch (e: Exception) { // block id: 990
        try { // block id: 992
            if (false) { Option<Option<UInt8>>.None } else { var_1672925938289_997 } 
        } finally { // block id: 999
            var_1672925938289_1002 %= ((UInt8(78)) | 1);
            var_1672925938289_997
        };
        var_1672925938289_1010 % ((var_1672925938289_1010) | 1)
    } finally { // block id: 1013
        (var_1672925938289_275, Int8(95), var_1672925938289_230, var_1672925938289_1021, var_1672925938289_275)[1];
        var_1672925938289_1030;
        var_1672925938289_1010
    };
    var var_1672925938289_1040 : UInt16 = UInt16(Int8(7));
    var var_1672925938289_1096 : UInt64 = UInt64(146);
    if ((-15) < Int64(var_1672925938289_1040)) { // block id: 1043
        (((UInt32(208)&127)..(UInt32(103)&127):((-22)|1)), var_1672925938289_275)[1];
        var_1672925938289_1002
    } else if ([true, false, false, false, false, false, true, true, false, false][1]) { // block id: 1055
        var var_1672925938289_1071 : Rune = 'b';
        match (var_1672925938289_499) {
            case caseVar_1672925938289_1060 => 
                var_1672925938289_275;
                var_1672925938289_138
            
            case _ : (Range<UInt32>, Unit) => 
                if (true) { (var_1672925938289_1071, 'E', var_1672925938289_275) } else { (var_1672925938289_1071, '5', ()) } 
            
            case _ => 
                ();
                if (false) { var_1672925938289_138 } else { ('b', 't', var_1672925938289_275) } 
            
        };
        [UInt8(250), UInt8(47), UInt8(226), UInt8(151), UInt8(17), UInt8(165), UInt8(139), UInt8(2), UInt8(204), UInt8(195)][7]
    } else { // block id: 1093
        var_1672925938289_1096 -= var_1672925938289_393;
        var_1672925938289_1002
    }
}

main(): Int64 {
    try {
        var var_1672925938289_11 : UInt64 = UInt64(Int64(UInt8(UInt8(UInt8(100)))));
        try { // block id: 6
            var_1672925938289_8;
            var_1672925938289_11
        } finally { // block id: 17
            var_1672925938289_19;
            UInt8(175) | UInt8(41);
            UInt64(108)
        };
        let var_1672925938289_35 : UInt8 = UInt8(UInt8(242));
        var var_1672925938289_1101 : (Option<UInt8>) -> UInt8 = func_1672925938289_39;
        (Option<UInt8>.Some(var_1672925938289_35) ?? (Option<UInt8>.None|>var_1672925938289_1101));
        var_1672925938289_1105
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1672925938289_8*var_1672925938289_8), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_11*var_1672925938289_11), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_35*var_1672925938289_35), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_269*var_1672925938289_269), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_305*var_1672925938289_305), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_381*var_1672925938289_381), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_393*var_1672925938289_393), 64)
        crccheck.updateBuffer(UInt64(var_1672925938289_1105*var_1672925938289_1105), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1672925938289_168 {
    static func func_1672925938289_544(optionalParam_1672925938289_545 ! : Interface_1672925938289_173 = Class_1672925938289_168(), optionalParam_1672925938289_547 ! : Float32 = Float32(-40.0)) : (Range<UInt16>, (Rune, Rune, Unit), Bool, Range<Int64>, Range<Int8>) { // block id: 549
        ();
        var_1672925938289_552
    }

}
// ASSERT: scan parse_expected_expr_or_decl_in
// ASSERT: scan parse_expected_operator_or_end
// ASSERT: scan parse_expected_right_delimiter
// ASSERT: scan parse_illegal_modifier_in_scope
// ASSERT: scan parse_unexpected_declaration_in_scope
