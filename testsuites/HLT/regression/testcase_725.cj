/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

let var_1733757715404_38: Option<Int8> = Option<Int8>.None
@Deprecated
public var var_1733757715404_69: (Unit, Range<Int32>, String, Bool, Int8, UInt32, Int64, Int8) = ((), ((Int32(Int32(UInt16(Int8(-48)))) &
        127)..=(Int32(Int32(1)) & 127) : (Int64(25) | 1)), "Qf$^&_D;[5", (((UInt64(UInt64(229)) & 127)..=(UInt64(UInt64(8)) &
        127) : (Int64(39) | 1)) is UInt8), Int8(-70), UInt32(Int8(Int8(123))), Int64(108), Int8(Int8(97)))
public const var_1733757715404_146: Bool = false
public let var_1733757715404_155: ?Unit = (###",yT]1bK@JS"### as Unit)
internal let var_1733757715404_246: Class_1733757715404_235 = Class_1733757715404_235()
let var_1733757715404_273: Class_1733757715404_267 = Class_1733757715404_267()
public var var_1733757715404_297: Int = Int64(-50)
internal var var_1733757715404_306: Int16 = Int16(Int16(Int8(UInt8(234))))
public var var_1733757715404_364: Int32 = Int32(-111)
public let var_1733757715404_389: Range<Int16> = ((Int16(Int16(-66)) & 127)..(Int16(Int16(-124)) & 127) : (Int64(-47) | 1))
public var var_1733757715404_408: UInt16 = UInt16(134)
@Deprecated
var var_1733757715404_441: UInt32 = UInt32(227)
internal const var_1733757715404_528: String = "$z>+kK>O$O"
public var var_1733757715404_595: Array<Int16> = [Int16(-88), Int16(-85), Int16(33), Int16(90), Int16(109), Int16(-53),
    Int16(UInt16(69)), Int16(-73), Int16(Int8(-1)), Int16(-6)]
public var var_1733757715404_610: ?Unit = Option<Unit>.None
@Deprecated
public var var_1733757715404_658: Option<Int8> = ("lkQ_(poY#|" as Int8)
public let var_1733757715404_662: Class_1733757715404_235 = Class_1733757715404_235()
@Deprecated
public var var_1733757715404_716: (Float64, Array<Option<Int8>>) = (Float64(Float32(Float32(41.0))), [(Option<Bool>.None as Int8),
        Option<Int8>.None, (((Int16(Int16(3)) & 127)..(Int16(Int16(-126)) & 127) : (Int64(57) | 1)) as Int8),
        Option<Int8>.None, Option<Int8>.None, (UInt32(136) as Int8), (UInt64(Int16(67)) as Int8),
        ((Class_1733757715404_267() as Bool) as Int8), Option<Int8>.None, (UInt8(UInt8(249)) as Int8)])
@Deprecated
public var var_1733757715404_760: ?Unit = ([UInt64(221), UInt64(Int8(UInt8(133))), UInt64(UInt16(Int16(-7))),
    UInt64(Int8(120)), UInt64(UInt8(105)), UInt64(201), UInt64(111), UInt64(UInt8(124)), UInt64(UInt64(58)), UInt64(111)] as Unit)
public const var_1733757715404_794: UInt32 = 36
public var var_1733757715404_801: ?Unit = (UInt32(249) as Unit)
public var var_1733757715404_825: Float32 = Float32(-56.0)
@Deprecated
public var var_1733757715404_833: UInt8 = UInt8(64)
public var var_1733757715404_862: Unit = ()
internal var var_1733757715404_866: Float64 = Float64(29.0)
@Deprecated
public var var_1733757715404_881: Array<VArray<Int64, $1>> = [VArray<Int64, $1>({i => Int64(-117)}),
    VArray<Int64, $1>(repeat: Int64(Int64(53))), VArray<Int64, $1>({i => Int64(105)}),
    VArray<Int64, $1>(repeat: Int64(78)), VArray<Int64, $1>(repeat: Int64(UInt32(UInt16(215)))),
    VArray<Int64, $1>({i => Int64(75)}), VArray<Int64, $1>(repeat: Int64(Int32(UInt8(24)))),
    VArray<Int64, $1>({i => Int64(54)}), VArray<Int64, $1>({i => Int64(-112)}), VArray<Int64, $1>({i => Int64(-75)})]
public var var_1733757715404_917: UInt32 = UInt32(230)
public var var_1733757715404_972: String = "wlX?VTa{RcL"
@Deprecated
public let var_1733757715404_979: (Array<Int16>, Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>) = ([Int16(38),
        Int16(-1), Int16(58), Int16(65), Int16(-110), Int16(-109), Int16(92), Int16(-114), Int16(-91), Int16(-99)], Option<Unit>
        .None, UInt32(UInt8(24)), ((UInt8(UInt8(233)) & 127)..=(UInt8(UInt8(196)) & 127) : (Int64(-112) | 1)), Option<Int64>
        .None, (UInt8(81) as Int8))
public let var_1733757715404_1021: VArray<Int64, $1> = [Int64(32)]
public let var_1733757715404_1044: Bool = false
@Deprecated
public var var_1733757715404_1047: VArray<Int64, $4> = [Int64(-83), Int64(-59), Int64(87), Int64(-1)]
let var_1733757715404_1176: ?Unit = (Class_1733757715404_927() as Unit)
public var var_1733757715404_1185: Range<UInt8> = ((UInt8(UInt8(208)) & 127)..(UInt8(UInt8(123)) & 127) : (Int64(-11) | 1))

internal func func_1733757715404_16<T0, T1, T2>(param_1733757715404_17: UInt8): Option<Int64> { // block id: 18
    var var_1733757715404_26: Option<Int8> = ((UInt16(Int8(Int8(-108))) as Int64) as Int8);
    ((var_1733757715404_26 ?? (var_1733757715404_38 ?? Int8(38))) as Int64)
}

@Deprecated
public struct Struct_1733757715404_90<T0> {
    public init() { // block id: 92

    }

    static let var_1733757715404_95: Array<Int16> = [Int16(-125), Int16(12), Int16(16), Int16(18), Int16(-125),
        Int16(-27), Int16(-61), Int16(-90), Int16(19), Int16(-76)];
    static const var_1733757715404_152: Int16 = 114;

    @Frozen
    public mut prop var_1733757715404_194: Int8 { // block id: 195
        get() { // block id: 197
            ();
            Int8(83)
        }
        set(Value) { // block id: 202
            Float64(2.0);
            ()
        }
    }

    @Frozen
    private static mut prop var_1733757715404_213: Unit { // block id: 214
        get() { // block id: 216
            ();
            ()
        }
        set(Value) { // block id: 221
            ();
            ((Int8(Int8(117)) & 127)..=(Int8(Int8(7)) & 127) : (Int64(87) | 1));
            ()
        }
    }
    public static var var_1733757715404_358: UInt64 = UInt64(147);
    static var var_1733757715404_370: ?Unit = Option<Unit>.None;

    @Frozen
    public static func func_1733757715404_258<T0, T1, T2>(): Array<Option<Unit>> { // block id: 259
        let var_1733757715404_333: UInt16 = UInt16(112);
        var var_1733757715404_348: Float32 = Float32(4.0);
        const var_1733757715404_398: Bool = false;
        let var_1733757715404_418: Float64 = Float64(21.0);
        (((var_1733757715404_273.var_1733757715404_276) as Array<Option<Unit>>) ?? [var_1733757715404_155,
            if (true) { // block id: 285
            var_1733757715404_273;
            var_1733757715404_155
        } else if (false) { // block id: 289
            ();
            ();
            Option<Unit>.None
        } else { // block id: 293
            Class_1733757715404_235();
            var_1733757715404_297--;
            var_1733757715404_155
        }, var_1733757715404_155, try { // block id: 302
            var_1733757715404_213;
            var_1733757715404_306 >>= ((var_1733757715404_152) & 7)
            if (false) {
                var_1733757715404_155
            } else {
                Option<Unit>.Some(())
            }
        } finally { // block id: 317
            var_1733757715404_213;
            var_1733757715404_297 /= ((var_1733757715404_297) | 1)
            if (var_1733757715404_146) {
                var_1733757715404_155
            } else {
                Option<Unit>.None
            }
        }, (Int8(91) as Unit),
            ("jKPIS@55B,", var_1733757715404_333, var_1733757715404_155, Float64(-45.0), (var_1733757715404_95, Option<Unit>
                    .None, UInt32(236), ((UInt8(UInt8(54)) & 127)..(UInt8(UInt8(27)) & 127) : (Int64(-29) | 1)),
                Option<Int64>.Some(Int64(-65)), Option<Int8>.Some(Int8(-51))), Class_1733757715404_267(),
            var_1733757715404_348)[2], match (var_1733757715404_152) {
            case _ =>
                ((UInt64(var_1733757715404_358) & 127)..(UInt64(UInt64(93)) & 127) : (Int64(43) | 1));
                var_1733757715404_364 <<= ((var_1733757715404_364) & 7)
                if (false) {
                    var_1733757715404_370
                } else {
                    Option<Unit>.None
                }

            case _ => Option<Unit>.Some(())
        }, var_1733757715404_370, match (((Int16(Int16(41)) & 127)..(Int16(Int16(75)) & 127) : (Int64(-74) | 1))) {
            case caseVar_1733757715404_383: Array<Int16> =>
                var_1733757715404_297 *= Int64(-112)
                var_1733757715404_389;
                Option<Unit>.Some(var_1733757715404_213)

            case _ =>
                if (var_1733757715404_398) {
                    var_1733757715404_370
                } else {
                    var_1733757715404_370
                }

            case caseVar_1733757715404_404 =>
                var_1733757715404_408 ^= UInt16(176)
                Option<Unit>.Some(var_1733757715404_213)

            case _ =>
                "]#Q8RDN:ZR";
                var_1733757715404_418;
                Option<Unit>.None
        }, var_1733757715404_370])
    };

    @Frozen
    public static func func_1733757715404_252(namedParam_1733757715404_253!: String,
        optionalParam_1733757715404_254!: UInt32 = UInt32(87)): Array<Option<Unit>> { // block id: 256
        func_1733757715404_258<Class_1733757715404_267, Option<Int8>, Rune>()
    };

    @Frozen
    private static prop var_1733757715404_428: ?Bool { // block id: 429
        get() { // block id: 431
            ();
            Option<Bool>.None
        }
    }

    @Frozen
    private static func func_1733757715404_243(): Option<Bool> { // block id: 244
        var_1733757715404_246;
        var loopTimeVar_1733757715404_444: Int64 = 0;
        (func_1733757715404_252(namedParam_1733757715404_253: "1pWVV0_22]", optionalParam_1733757715404_254: UInt32(156))[1] ??
            do {
            loopTimeVar_1733757715404_444++;
            var_1733757715404_297 -= Int64(-123)
            var_1733757715404_441++
        } while (((var_1733757715404_428 ?? var_1733757715404_146)) && loopTimeVar_1733757715404_444 < 100));
        ((Option<Option<Array<Option<Unit>>>>.None ?? (((UInt16(UInt16(37)) & 127)..=(UInt16(UInt16(51)) & 127) : (Int64(90) |
            1)) as Array<Option<Unit>>)) as Bool)
    };

    @Frozen
    static mut prop var_1733757715404_466: Bool { // block id: 467
        get() { // block id: 469
            ();
            (UInt64(94) is Option<Array<Option<Unit>>>)
        }
        set(Value) { // block id: 475
            ();
            ();
            ()
        }
    }
    static let var_1733757715404_481: Class_1733757715404_235 = Class_1733757715404_235();

    @Frozen
    static func func_1733757715404_239<T0>(): Class_1733757715404_235 { // block id: 240
        var var_1733757715404_462: Range<UInt16> = ((UInt16(UInt16(139)) & 127)..=(UInt16(UInt16(99)) & 127) : (Int64(-70) |
            1));
        match (func_1733757715404_243()) {
            case _ =>
                var_1733757715404_152;
                if (var_1733757715404_146) {
                    ((UInt16(UInt16(22)) & 127)..(UInt16(UInt16(149)) & 127) : (Int64(39) | 1))
                } else {
                    var_1733757715404_462
                };
                if (var_1733757715404_466) {
                    Class_1733757715404_235()
                } else {
                    var_1733757715404_481
                }
        }
    };

    func func_1733757715404_127(optionalParam_1733757715404_128!: String = "y@GHcGr.2^",
        namedParam_1733757715404_130!: (Array<Int16>, Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>)): (Array<Int16>, 
        Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>) { // block id: 131
        var var_1733757715404_164: ?Bool = Option<Bool>.None;
        match (if (try { // block id: 135
            true
        } catch (e: Exception) { // block id: 137
            Option<Int64>.Some(Int64(28));
            const var_1733757715404_143: UInt64 = 219;
            UInt64(109) + var_1733757715404_143;
            var_1733757715404_146
        } finally { // block id: 148
            false
        }) { // block id: 150
            var_1733757715404_152;
            var_1733757715404_155
        } else if ((var_1733757715404_164 ?? true)) { // block id: 167
            ();
            let var_1733757715404_170: Unit = ();
            var_1733757715404_170;
            var_1733757715404_155
        } else { // block id: 173
            Option<Unit>.None
        }) {
            case _ => ()

            case _ =>
                var_1733757715404_95;
                if (var_1733757715404_146) {
                    r'e'
                } else {
                    r'e'
                };
                ()

            case caseVar_1733757715404_190: Unit =>
                var_1733757715404_194 ^ Int8(-75);
                ()

            case caseVar_1733757715404_209 =>
                true;
                var_1733757715404_213;
                ()

            case _ =>
                var var_1733757715404_231: Bool = true;
                var_1733757715404_231 &&= true
        };
        func_1733757715404_239<Rune>().var_1733757715404_484;
        let var_1733757715404_494: (Array<Int16>, Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>) = ([Int16(9),
                Int16(94), Int16(UInt16(Int8(74))), Int16(-48), Int16(UInt16(220)), Int16(UInt16(156)),
                Int16(UInt8(UInt8(36))), Int16(-44), Int16(Int16(Int8(-105))), Int16(63)], Option<Unit>.None, UInt32(142),
            ((UInt8(UInt8(77)) & 127)..=(UInt8(UInt8(146)) & 127) : (Int64(-36) | 1)), (r'U' as Int64), (() as Int8));
        var_1733757715404_494
    }
}

public open class Class_1733757715404_235 {
    @Frozen
    public init() { // block id: 237

    }

    @Frozen
    mut prop var_1733757715404_484: Unit { // block id: 485
        get() { // block id: 487
            ()
        }
        set(Value) { // block id: 491
            ()
        }
    }

    @Frozen
    public mut prop var_1733757715404_534: (Array<Int16>, Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>) { // block id: 535
        get() { // block id: 537
            ();
            ((UInt8(UInt8(Int8(-24))) & 127)..=(UInt8(UInt8(UInt8(77))) & 127) : (Int64(-91) | 1));
            ([Int16(-78), Int16(UInt16(118)), Int16(-98), Int16(UInt8(21)), Int16(-54), Int16(UInt16(198)), Int16(-95),
                    Int16(UInt16(146)), Int16(UInt8(136)), Int16(Int8(-105))], (Int16(93) as Unit), UInt32(Int32(Int16(-73))),
                ((UInt8(UInt8(128)) & 127)..(UInt8(UInt8(86)) & 127) : (Int64(117) | 1)), (Int32(UInt16(5)) as Int64), Option<Int8>
                    .None)
        }
        set(Value) { // block id: 575

        }
    }
    public static let var_1733757715404_1137: Option<Option<Range<UInt16>>> = Option<Option<Range<UInt16>>>.None;
    public static prop var_1733757715404_1140: Option<Range<UInt16>> { // block id: 1141
        get() { // block id: 1143
            Option<Range<UInt16>>.None
        }
    }
}

public interface Interface_1733757715404_271 {}

public interface Interface_1733757715404_270 <: Interface_1733757715404_271 {
    @Frozen
    static func func_1733757715404_691(namedParam_1733757715404_692!: Int8, namedParam_1733757715404_693!: Option<Bool>,
        namedParam_1733757715404_694!: Option<Array<Option<Unit>>>,
        namedParam_1733757715404_695!: Option<Option<Array<Option<Unit>>>>): Option<Int8> { // block id: 696
        ((var_1733757715404_658 as Int64) as Option<Array<Option<Unit>>>);
        var var_1733757715404_708: ?Array<Option<Int8>> = (Int32(Int8(Int8(-23))) as Array<Option<Int8>>);
        (var_1733757715404_708 ?? var_1733757715404_716[1])[5]
    }
}

public open class Class_1733757715404_267 <: Class_1733757715404_235 & Interface_1733757715404_270 {
    @Frozen
    public init() { // block id: 269

    }

    @Frozen
    public prop var_1733757715404_276: Unit { // block id: 277
        get() { // block id: 279
            ()
        }
    }
    public static func func_1733757715404_691(namedParam_1733757715404_692!: Int8,
        namedParam_1733757715404_693!: Option<Bool>, namedParam_1733757715404_694!: Option<Array<Option<Unit>>>,
        namedParam_1733757715404_695!: Option<Option<Array<Option<Unit>>>>): Option<Int8> { // block id: 1124
        (((var_1733757715404_1137 ?? var_1733757715404_1140) ?? ((UInt16(var_1733757715404_408) & 127)..(UInt16(var_1733757715404_408) &
            127) : (Int64(-3) | 1))) as Int8)
    };

    public static let var_1733757715404_1189: Struct_1733757715404_90<Range<UInt16>> = Struct_1733757715404_90<Range<UInt16>>();
    public static var var_1733757715404_1193: Int8 = Int8(73)
    static init() {
    }
}

@Deprecated
internal func func_1733757715404_108(): (Array<Int16>, Option<Unit>, UInt32, Range<UInt8>, Option<Int64>, Option<Int8>) { // block id: 121
    var var_1733757715404_124: Struct_1733757715404_90<Range<UInt16>> = Struct_1733757715404_90<Range<UInt16>>();
    var_1733757715404_124.func_1733757715404_127(optionalParam_1733757715404_128: if (false) {
        var_1733757715404_528
    } else {
        var_1733757715404_528
    }, namedParam_1733757715404_130: var_1733757715404_246.var_1733757715404_534)
}

public func func_1733757715404_108(param_1733757715404_109: UInt16, param_1733757715404_110: Unit): Array<Int16> { // block id: 111
    (func_1733757715404_108()[1] ?? (var_1733757715404_297 %= ((Int64(32) ^ Int64(-37)) | 1)));
    var var_1733757715404_583: Array<Int16> = [Int16(35), Int16(-60), Int16(-63), Int16(-46), Int16(0), Int16(-99),
        Int16(95), Int16(79), Int16(16), Int16(-71)];
    var_1733757715404_583
}

@Frozen
@Deprecated
public func func_1733757715404_51(param_1733757715404_52: Int64): Int16 { // block id: 53
    if (var_1733757715404_69[3]) {
        (Struct_1733757715404_90<Range<UInt16>>.var_1733757715404_95)
    } else {
        func_1733757715404_108(UInt16(232), ())
    }[8]
}

public open class Class_1733757715404_927 <: Class_1733757715404_267 & Interface_1733757715404_270 & Interface_1733757715404_271 {
    @Frozen
    public init() { // block id: 929

    }

    @Frozen
    public static mut prop var_1733757715404_932: Option<Int8> { // block id: 933
        get() { // block id: 935
            ((UInt16(UInt16(49)) & 127)..=(UInt16(UInt16(UInt8(103))) & 127) : (Int64(Int64(104)) | 1));
            ();
            (VArray<Int32, $8>(repeat: Int32(UInt16(170))) as Int8);
            var_1733757715404_1060
        }
        set(Value) { // block id: 958
            (Option<Array<Option<Int8>>>.None as Unit);
            ();
            var_1733757715404_1060 = Value
        }
    }
    static mut prop var_1733757715404_1060: Option<Int8> { // block id: 1061
        get() { // block id: 1063
            [UInt64(209), UInt64(Int16(UInt8(172))), UInt64(Int32(Int16(-111))), UInt64(UInt32(UInt32(30))), UInt64(129),
                UInt64(196), UInt64(UInt64(239)), UInt64(110), UInt64(UInt8(178)), UInt64(UInt32(Int32(-108)))];
            [([Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
                Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None] as Int8),
                Option<Int8>.None, (UInt32(98) as Int8), Option<Int8>.None,
                (((Int32(Int32(52)) & 127)..(Int32(Int32(29)) & 127) : (Int64(69) | 1)) as Int8), Option<Int8>.None,
                (((UInt8(UInt8(41)) & 127)..=(UInt8(UInt8(177)) & 127) : (Int64(-4) | 1)) as Int8), Option<Int8>.None,
                Option<Int8>.None, (Float32(Float32(16.0)) as Int8)];
            Option<Int8>.None
        }
        set(Value) { // block id: 1115
            r'J';
            ();
            ()
        }
    }
    public static func func_1733757715404_691(namedParam_1733757715404_692!: Int8,
        namedParam_1733757715404_693!: Option<Bool>, namedParam_1733757715404_694!: Option<Array<Option<Unit>>>,
        namedParam_1733757715404_695!: Option<Option<Array<Option<Unit>>>>): Option<Int8> { // block id: 1150
        var var_1733757715404_1161: ?(Range<UInt32>, Option<Array<Option<Unit>>>, Range<UInt8>, (Struct_1733757715404_90<Range<UInt16>>, 
            Option<Int8>)) = Option<(Range<UInt32>, Option<Array<Option<Unit>>>, Range<UInt8>, (Struct_1733757715404_90<Range<UInt16>>, 
                Option<Int8>))>.None;
        (var_1733757715404_1161 ?? (((UInt32(UInt32(167)) & 127)..(UInt32(UInt32(109)) & 127) : (Int64(5) | 1)),
            Option<Array<Option<Unit>>>.Some(
                [var_1733757715404_155, var_1733757715404_801, Option<Unit>.Some(()),
                    Option<Unit>.Some(var_1733757715404_862), Option<Unit>.None, Option<Unit>.None,
                    var_1733757715404_1176, var_1733757715404_760, Option<Unit>.Some(var_1733757715404_862),
                    Option<Unit>.Some(())]), var_1733757715404_1185, (var_1733757715404_1189, Option<Int8>.Some(
                    var_1733757715404_1193))))[3][1]
    }

    static init() {
    }
}

main(): Int64 {
    try {
        let var_1733757715404_667: Int8 = Int8(UInt8(43));
        let var_1733757715404_748: ?Bool = Option<Bool>.Some(true);
        var var_1733757715404_843: Option<Int64> = (###"\\H$&L[?!ju"### as Int64);
        (match ((var_1733757715404_833 |> {
            lambdaParameter_1733757715404_43: UInt8 =>
                let var_1733757715404_589: (Int64) -> Int16 = func_1733757715404_51;
                let var_1733757715404_674: Interface_1733757715404_271 = Class_1733757715404_267();
                func func_1733757715404_47(param_1733757715404_48: Int16): Option<Int8> { // block id: 49
                    var var_1733757715404_614: Range<UInt8> = ((UInt8(UInt8(70)) & 127)..(UInt8(UInt8(220)) & 127) : (Int64(Int64(-5)) |
                        1));
                    Int64(match ((var_1733757715404_595, var_1733757715404_610, UInt32(56), var_1733757715404_614, Option<Int64>
                            .None, Option<Int8>.None)) {
                        case _ => UInt8(79)
                    }) |> var_1733757715404_589;
                    var var_1733757715404_648: Unit = ();
                    try { // block id: 627
                        if (false) { // block id: 630
                            var_1733757715404_614;
                            ()
                        };
                        let var_1733757715404_653: Option<Int64> = Option<Int64>.Some(Int64(Int32(43)));
                        if (var_1733757715404_146) { // block id: 635
                            Option<Int8>.Some(Int8(115))
                        } else { // block id: 638
                            ("""
^Gk5D
wmclY
""", UInt16(197), Option<Unit>.None, Float64(66.0), (var_1733757715404_595,
                                    Option<Unit>.Some(var_1733757715404_648), UInt32(7), var_1733757715404_614,
                                    var_1733757715404_653, var_1733757715404_658), var_1733757715404_662, Float32(7.0));
                            Option<Int8>.Some(var_1733757715404_667)
                        }
                    } catch (e: Exception) { // block id: 670
                        try { // block id: 672
                            var_1733757715404_674
                        } finally { // block id: 676
                            var_1733757715404_648;
                            var_1733757715404_297 ^= Int64(18)
                            var_1733757715404_674
                        };
                        var var_1733757715404_685: VArray<Int32, $8> = [Int32(28), Int32(-63), Int32(-57), Int32(-25),
                            Int32(9), Int32(-58), Int32(83), Int32(-13)];
                        var_1733757715404_685[3];
                        Interface_1733757715404_270.func_1733757715404_691(
                            namedParam_1733757715404_692: var_1733757715404_667,
                            namedParam_1733757715404_693: var_1733757715404_748,
                            namedParam_1733757715404_694: Option<Array<Option<Unit>>>.Some(
                                [Option<Unit>.Some(()), Option<Unit>.Some(()), var_1733757715404_155,
                                    var_1733757715404_610, var_1733757715404_760, Option<Unit>.None,
                                    Option<Unit>.Some(var_1733757715404_648), var_1733757715404_155, Option<Unit>.None,
                                    var_1733757715404_760]),
                            namedParam_1733757715404_695: Option<Option<Array<Option<Unit>>>>.Some(
                                Option<Array<Option<Unit>>>.None))
                    } finally { // block id: 789
                        try { // block id: 791
                            UInt64(155);
                            var_1733757715404_794;
                            Option<Int8>.None
                        } catch (e: Exception) { // block id: 797
                            if (var_1733757715404_146) {
                                var_1733757715404_801
                            } else {
                                Option<Unit>.None
                            };
                            ();
                            if (true) {
                                Option<Int8>.Some(Int8(30))
                            } else {
                                Option<Int8>.None
                            }
                        }
                    }
                };
                var var_1733757715404_817: Option<Int64> = (Option<Int8>.None as Int64);
                match (func_1733757715404_47(Int16(-22))) {
                    case caseVar_1733757715404_814 => var_1733757715404_817

                    case _ =>
                        var_1733757715404_825 -= var_1733757715404_825
                        if (var_1733757715404_146) {
                            var_1733757715404_817
                        } else {
                            var_1733757715404_817
                        }
                }
        })) {
            case caseVar_1733757715404_837 =>
                if (var_1733757715404_146) {
                    Option<Int64>.None
                } else {
                    var_1733757715404_843
                }

            case caseVar_1733757715404_848: Array<Option<Int8>> => Option<Int64>.None

            case caseVar_1733757715404_853 => Option<Int64>.Some(var_1733757715404_297)

            case caseVar_1733757715404_859: Rune =>
                var_1733757715404_862;
                var_1733757715404_866 /= Float64((Int32(var_1733757715404_866)) | 1)
                var_1733757715404_843

            case _ =>
                var_1733757715404_408++;
                Option<Int64>.None
        } ?? var_1733757715404_881[0][0]);
        if (false) { // block id: 912
            try { // block id: 914
                var_1733757715404_917 %= ((var_1733757715404_794) | 1)
                var_1733757715404_862;
                var_1733757715404_667 | Int8(-33)
            } finally { // block id: 924
                Int8(-113)
            };
            Class_1733757715404_927.var_1733757715404_932;
            if (true) {
                ((UInt16(UInt16(0)) & 127)..=(UInt16(UInt16(215)) & 127) : (Int64(-94) | 1))
            } else {
                ((UInt16(UInt16(12)) & 127)..(UInt16(UInt16(84)) & 127) : (Int64(-10) | 1))
            }
        } else { // block id: 966
            if (false) { // block id: 969
                (var_1733757715404_972, var_1733757715404_408, Option<Unit>.Some(()), Float64(-123.0),
                    var_1733757715404_979, Class_1733757715404_235(), Float32(-21.0));
                var_1733757715404_297 %= ((Int64(49)) | 1)
                ((UInt16(var_1733757715404_408) & 127)..(UInt16(UInt16(164)) & 127) : (var_1733757715404_297 | 1))
            } else if (true) { // block id: 1000
                ((UInt16(UInt16(26)) & 127)..=(UInt16(UInt16(152)) & 127) : (Int64(-80) | 1))
            } else { // block id: 1005
                if (var_1733757715404_146) {
                    ((UInt16(var_1733757715404_408) & 127)..=(UInt16(var_1733757715404_408) & 127) : (Int64(67) | 1))
                } else {
                    ((UInt16(UInt16(81)) & 127)..=(UInt16(UInt16(115)) & 127) : (Int64(-78) | 1))
                }
            }
        };
        try { // block id: 1016
            var_1733757715404_364;
            if (true) {
                var_1733757715404_1021
            } else {
                VArray<Int64, $1>({i => Int64(49)})
            };
            VArray<Int64, $4>({i => Int64(22)})
        } catch (e: Exception) { // block id: 1031
            VArray<Int64, $4>({i => Int64(84)})
        } finally { // block id: 1037
            var_1733757715404_297 %= ((var_1733757715404_297) | 1)
            var_1733757715404_862;
            var var_1733757715404_1054: Int = Int64(UInt8(38));
            if (var_1733757715404_1044) {
                var_1733757715404_1047
            } else {
                VArray<Int64, $4>({i => Int64(11)})
            }
        }[0]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1733757715404_667 * var_1733757715404_667), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1733757715404_267 {}

extend Class_1733757715404_927 {}
