/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public var var_1668593292115_64 : UInt32 = UInt32(92)
public var var_1668593292115_85 : Bool = ("""
P`c3J
u9r8u
""" is Interface_1668593292115_26)
public let var_1668593292115_113 : Class_1668593292115_18 = Class_1668593292115_18()
let var_1668593292115_168 : Interface_1668593292115_21 = Class_1668593292115_18()
public let var_1668593292115_350 : Array<UInt64> = [UInt64((-124)), UInt64(UInt32(UInt8(40))), UInt64(138), UInt64(148), UInt64(37), UInt64(155), UInt64(UInt8(114)), UInt64(61), UInt64(239), UInt64(UInt16(UInt16(224)))]
var var_1668593292115_372 : Float32 = Float32(-60.0)
public let var_1668593292115_380 : Option<Bool> = (((Int8(97)&127)..=(Int8(-89)&127):((Int64(Int64(UInt16(110)))|1))) as Bool)
var var_1668593292115_393 : Range<Int64> = (((-119)&127)..((-118)&127):((-16)|1))
public let var_1668593292115_441 : Option<Float64> = Option<Float64>.None
var var_1668593292115_488 : Range<UInt64> = ((UInt64(144)&127)..(UInt64(70)&127):(28|1))
public var var_1668593292115_504 : Interface_1668593292115_26 = Class_1668593292115_18()
public var var_1668593292115_510 : Int64 = (-72)
public let var_1668593292115_526 : (Range<Int32>, Range<UInt8>, Rune, Int8, ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>)) = (((Int32(87)&127)..(Int32(UInt16(UInt8(142)))&127):((110|1))), ((UInt8(95)&127)..=(UInt8(143)&127):(99|1)), r'C', Int8(UInt8(119)), ((Int16(Int16(-82)), ###"V$d'jjJlW("###, r'v', r'x'), UInt16(UInt16(Int8(62))), Float32(Float32(72.0)), ((UInt16(48)&127)..(UInt16(111)&127):(((-10)|1)))))
public let var_1668593292115_581 : Unit = ()
public var var_1668593292115_595 : UInt64 = UInt64(210)
var var_1668593292115_665 : Int32 = Int32(Int16(103))
public var var_1668593292115_670 : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) = (((Int16(-18)&127)..=(Int16(58)&127):((-8)|1)), ((UInt64(Int32(-40))&127)..=(UInt64(Int16(UInt8(184)))&127):(((-77)|1))), Class_1668593292115_18(), r'd', UInt64(115), false)
public var var_1668593292115_694 : Int8 = Int8(UInt8(62))
public var var_1668593292115_733 : Rune = r'6'
public let var_1668593292115_737 : ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>) = ((Int16(104), "rjekZ-+JyM", r'V', r'v'), UInt16(Int16(UInt8(101))), Float32(41.0), ((UInt16(220)&127)..(UInt16(162)&127):(47|1)))
var var_1668593292115_812 : ?Class_1668593292115_18 = Option<Class_1668593292115_18>.None
public var var_1668593292115_882 : Int16 = Int16(UInt16(Int8(-34)))
let var_1668593292115_932 : Range<Int8> = ((Int8(75)&127)..(Int8(-97)&127):((-37)|1))
let var_1668593292115_965 : Range<Int16> = ((Int16(1)&127)..=(Int16(UInt16(176))&127):((77|1)))
var var_1668593292115_979 : Unit = ()
let var_1668593292115_1014 : Range<UInt8> = ((UInt8(Int8(-75))&127)..(UInt8(UInt8(69))&127):(((-96)|1)))
var var_1668593292115_1146 : Array<Class_1668593292115_18> = [Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18()]
var var_1668593292115_1169 : Class_1668593292115_18 = Class_1668593292115_18()
public var var_1668593292115_1184 : (((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>), (Array<UInt64>, Range<UInt8>, Range<UInt32>, Range<UInt8>), (Int16, String, Rune, Rune), Range<Int64>, Int32, String) = (((Int16(Int16(-121)), """
&c'f8
rr+@g
""", r'S', r'1'), UInt16(UInt16(242)), Float32(-14.0), ((UInt16(Int8(111))&127)..=(UInt16(100)&127):(((-8)|1)))), ([UInt64(96), UInt64(35), UInt64(40), UInt64(194), UInt64(UInt8(23)), UInt64(23), UInt64(160), UInt64(79), UInt64(UInt16(146)), UInt64(Int16(77))], ((UInt8(132)&127)..(UInt8(168)&127):((-98)|1)), ((UInt32(Int32(55))&127)..=(UInt32(UInt16(137))&127):((Int64(Int8(44))|1))), ((UInt8(Int8(86))&127)..(UInt8(Int8(75))&127):((7|1)))), (Int16(UInt16(Int8(-6))), """
.8srf
QJXu6
""", r'U', r'I'), ((123&127)..=(Int64(UInt16(12))&127):((Int64(UInt32(121))|1))), Int32(14), "mF+EcMblfh")
public let var_1668593292115_1262 : (Int8, Bool, (Range<Int32>, Range<UInt8>, Rune, Int8, ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>)), Range<UInt64>, (UInt32, Unit), Int8) = (Int8(-69), ((((Int16(-75), "V=*#Aib*Zi", r'w', r'R'), UInt16(50), Float32(35.0), ((UInt16(181)&127)..(UInt16(94)&127):((83|1)))), ([UInt64(187), UInt64(126), UInt64(227), UInt64(169), UInt64(183), UInt64(106), UInt64(19), UInt64(209), UInt64(172), UInt64(212)], ((UInt8(15)&127)..(UInt8(30)&127):((44|1))), ((UInt32(253)&127)..=(UInt32(208)&127):(121|1)), ((UInt8(231)&127)..(UInt8(164)&127):(2|1))), (Int16(-12), "}K7+_~gL@j", r'h', r'9'), (((-56)&127)..=(13&127):((62|1))), Int32(36), """
M,hDG
n:?3_
""") is (Int16, String, Rune, Rune)), (((Int32(Int32(-30))&127)..(Int32(70)&127):((96|1))), ((UInt8(187)&127)..=(UInt8(216)&127):((-5)|1)), r'1', Int8(-4), ((Int16(-46), "DAdK\"DAonH", r'y', r'U'), UInt16(20), Float32(Float32(38.0)), ((UInt16(232)&127)..=(UInt16(79)&127):(((-56)|1))))), ((UInt64(194)&127)..(UInt64(82)&127):(2|1)), (UInt32(31), ()), Int8(11))
public var var_1668593292115_1337 : Unit = ()
public var var_1668593292115_1421 : Interface_1668593292115_24<Bool, Array<Bool>> = Class_1668593292115_18()
let var_1668593292115_1509 : Array<Bool> = [(((), Int8(-2), false) is (Int8, Bool, (Range<Int32>, Range<UInt8>, Rune, Int8, ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>)), Range<UInt64>, (UInt32, Unit), Int8)), (Class_1668593292115_18() is (Int8, Bool, (Range<Int32>, Range<UInt8>, Rune, Int8, ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>)), Range<UInt64>, (UInt32, Unit), Int8)), false, ((((), Int8(116), false) as Bool) is Option<Bool>), (((UInt32(201)&127)..=(UInt32(166)&127):((Int64(Int16(51))|1))) is (UInt32, Int64, UInt64) -> Class_1668593292115_18), true, (Enum_1668593292115_790.defaultValue is (Int8, Bool, (Range<Int32>, Range<UInt8>, Rune, Int8, ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>)), Range<UInt64>, (UInt32, Unit), Int8)), false, true, true]
public let var_1668593292115_1596 : Bool = ((((Int32(52)&127)..(Int32(Int8(-117))&127):((77|1))), ((UInt8(246)&127)..=(UInt8(UInt8(74))&127):(((-78)|1))), r'v', Int8(52), ((Int16(-14), "~zq)z)Va{_Z", r'n', r'a'), UInt16(UInt8(128)), Float32(Float32(16.0)), ((UInt16(208)&127)..=(UInt16(194)&127):(32|1)))) is ((Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool), Range<Int16>, Range<Int64>, Interface_1668593292115_21) -> UInt64)
var var_1668593292115_1631 : Option<Array<Bool>> = ((Class_1668593292115_18() as Array<Bool>) as Array<Bool>)
let var_1668593292115_1741 : ?String = Option<String>.None
public var var_1668593292115_1786 : ?Class_1668593292115_18 = Option<Class_1668593292115_18>.None
public interface Interface_1668593292115_26 {

}

public interface Interface_1668593292115_27 <: Interface_1668593292115_26 {

}

public interface Interface_1668593292115_25 <: Interface_1668593292115_26 & Interface_1668593292115_27 {

}

public interface Interface_1668593292115_24<T0, T1> <: Interface_1668593292115_25 {
    func func_1668593292115_1249(param_1668593292115_1250 : ((Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool), Range<Int16>, Range<Int64>, Interface_1668593292115_21) -> UInt64) : Unit { // block id: 1256
        let var_1668593292115_1354 : (UInt32, Unit) = (UInt32(Int32(UInt32(UInt8(48)))), ());
        if (var_1668593292115_1262[1]) { if (true) { // block id: 1328
            if (var_1668593292115_85) { (var_1668593292115_64, ()) } else { (UInt32(210), var_1668593292115_1337) } 
        } else if (var_1668593292115_85) { // block id: 1340
            if (false) { (var_1668593292115_64, ()) } else { (UInt32(67), var_1668593292115_979) } 
        } else { // block id: 1349
            (var_1668593292115_64, ())
        } } else { var_1668593292115_1354 } [1];
        try (resource = Class_1668593292115_18()) { // block id: 1363

        } catch (e: Exception) { // block id: 1364
            var var_1668593292115_1379 : (Unit, Int8, Bool) = ((), Int8(82), true);
            try { // block id: 1366
                ((83&127)..=(var_1668593292115_510&127):(((-110)|1)))
            } catch (e: Exception) { // block id: 1371
                if (var_1668593292115_85) { ((), Int8(123), true) } else { var_1668593292115_1379 } ;
                (((-38)&127)..=((-5)&127):((-78)|1))
            };
            var_1668593292115_1337
        } finally { // block id: 1386
            var_1668593292115_1169.var_1668593292115_1390;
            ()
        };
        var_1668593292115_979
    }

}

public interface Interface_1668593292115_23 <: Interface_1668593292115_24<Bool, Array<Bool>> {

}

public interface Interface_1668593292115_22<T0, T1> <: Interface_1668593292115_23 & Interface_1668593292115_25 {

}

public interface Interface_1668593292115_21 <: Interface_1668593292115_22<Interface_1668593292115_26, Interface_1668593292115_24<Bool, Array<Bool>>> & Interface_1668593292115_23 {
    func func_1668593292115_1249(param_1668593292115_1250 : ((Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool), Range<Int16>, Range<Int64>, Interface_1668593292115_21) -> UInt64) : Unit { // block id: 1256
        let var_1668593292115_1354 : (UInt32, Unit) = (UInt32(Int32(UInt32(UInt8(48)))), ());
        if (var_1668593292115_1262[1]) { if (true) { // block id: 1328
            if (var_1668593292115_85) { (var_1668593292115_64, ()) } else { (UInt32(210), var_1668593292115_1337) } 
        } else if (var_1668593292115_85) { // block id: 1340
            if (false) { (var_1668593292115_64, ()) } else { (UInt32(67), var_1668593292115_979) } 
        } else { // block id: 1349
            (var_1668593292115_64, ())
        } } else { var_1668593292115_1354 } [1];
        try (resource = Class_1668593292115_18()) { // block id: 1363

        } catch (e: Exception) { // block id: 1364
            var var_1668593292115_1379 : (Unit, Int8, Bool) = ((), Int8(82), true);
            try { // block id: 1366
                ((83&127)..=(var_1668593292115_510&127):(((-110)|1)))
            } catch (e: Exception) { // block id: 1371
                if (var_1668593292115_85) { ((), Int8(123), true) } else { var_1668593292115_1379 } ;
                (((-38)&127)..=((-5)&127):((-78)|1))
            };
            var_1668593292115_1337
        } finally { // block id: 1386
            var_1668593292115_1169.var_1668593292115_1390;
            ()
        };
        var_1668593292115_979
    }

}

public open class Class_1668593292115_18 <: Interface_1668593292115_21 & Resource {
    public init() { // block id: 20

    }
;
    mut prop var_1668593292115_32 : Int64 { // block id: 33
        get() { // block id: 35
            (-40);
            var_1668593292115_1808
        }

        set(Value) { // block id: 39
            ();
            var_1668593292115_1808 = Value
        }

    };
    private static var var_1668593292115_560 : UInt8 = UInt8(245);
    public init(param_1668593292115_517 : UInt64, param_1668593292115_518 : (UInt32, Unit), param_1668593292115_519 : Option<Float64>) { // block id: 520
        var_1668593292115_526[4][2];
        Class_1668593292115_18.var_1668593292115_560++
    }
;
    let var_1668593292115_783 : UInt64 = UInt64(144);
    public init(param_1668593292115_927 : String, param_1668593292115_928 : Float32, param_1668593292115_929 : Bool) { // block id: 930
        var_1668593292115_932
    }
;
    public prop var_1668593292115_1000 : Bool { // block id: 1001
        get() { // block id: 1003
            UInt8(94);
            (Option<Bool>.None is Int64)
        }

    };
    public mut prop var_1668593292115_1390 : (Unit, Int8, Bool) { // block id: 1391
        get() { // block id: 1393
            ();
            Float64(Float64(69.0));
            ((), Int8(Int8(UInt8(135))), true)
        }

        set(Value) { // block id: 1406

        }

    };
    static mut prop var_1668593292115_1433 : Float64 { // block id: 1434
        get() { // block id: 1436
            Float64((-69.0))
        }

        set(Value) { // block id: 1441
            (Float32(-38.0), [UInt64(83), UInt64(182), UInt64(9), UInt64(140), UInt64(190), UInt64(195), UInt64(163), UInt64(196), UInt64(85), UInt64(120)], UInt64(Int8(Int8(-126))), Option<Bool>.None, ((UInt64(UInt64(56))&127)..=(UInt64(Int8(116))&127):(((-61)|1))), ((Int32(-123)&127)..(Int32(14)&127):((Int64(UInt16(171))|1))), (UInt32(93), ()));
            ();
            ()
        }

    };
    static let var_1668593292115_1487 : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) = (((Int16(-17)&127)..=(Int16(-85)&127):((103|1))), ((UInt64(99)&127)..=(UInt64(203)&127):((23|1))), Class_1668593292115_18(), r'b', UInt64(130), false);
    mut prop var_1668593292115_1808 : Int64 { // block id: 1809
        get() { // block id: 1811
            [UInt64(159), UInt64(UInt16(UInt16(24))), UInt64(170), UInt64(134), UInt64(Int16(1)), UInt64(61), UInt64(137), UInt64(253), UInt64(32), UInt64(49)];
            47
        }

        set(Value) { // block id: 1829
            ()
        }

    }
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}





public func func_1668593292115_760(param_1668593292115_761 : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool), param_1668593292115_762 : Range<Int16>, optionalParam_1668593292115_763 ! : Range<Int64> = ((Int64(Int8(-54))&127)..=((-31)&127):((Int64(UInt64(99))|1))), optionalParam_1668593292115_770 ! : Interface_1668593292115_21 = Class_1668593292115_18()) : UInt64 { // block id: 772
    Int16(2);
    (Option<UInt64>.None ?? var_1668593292115_113.var_1668593292115_783)
}

public enum Enum_1668593292115_790 {
    defaultValue
}

public func func_1668593292115_793(param_1668593292115_794 : Option<Float64>) : Enum_1668593292115_790 { // block id: 795
    let var_1668593292115_804 : ?UInt64 = Option<UInt64>.None;
    (match ((var_1668593292115_804 ?? UInt64(86))) {
        case _ => 
            if (var_1668593292115_85) { var_1668593292115_812 } else { Option<Class_1668593292115_18>.None } 
        
    } ?? try { // block id: 816
        Option<Float64>.None;
        var_1668593292115_665 >> ((var_1668593292115_665) & 7);
        if (false) { Class_1668593292115_18() } else { Class_1668593292115_18() } 
    } catch (e: Exception) { // block id: 825
        if (true) { Class_1668593292115_18() } else { var_1668593292115_113 } 
    } finally { // block id: 830
        ((UInt32(67)&127)..=(UInt32(75)&127):(74|1));
        if (var_1668593292115_85) { Class_1668593292115_18() } else { Class_1668593292115_18() } 
    });
    try { // block id: 837
        try { // block id: 839
            UInt64(165)
        } finally { // block id: 841
            ();
            var_1668593292115_595 + UInt64(113)
        };
        let var_1668593292115_851 : Enum_1668593292115_790 = Enum_1668593292115_790.defaultValue;
        try { // block id: 847
            if (false) { var_1668593292115_851 } else { Enum_1668593292115_790.defaultValue } 
        } catch (_) { // block id: 854
            ();
            var_1668593292115_581;
            if (false) { Enum_1668593292115_790.defaultValue } else { var_1668593292115_851 } 
        }
    } finally { // block id: 861
        var var_1668593292115_863 : Enum_1668593292115_790 = Enum_1668593292115_790.defaultValue;
        var_1668593292115_863
    }
}

public func func_1668593292115_786(param_1668593292115_787 : Interface_1668593292115_26) : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) { // block id: 788
    let var_1668593292115_893 : Interface_1668593292115_21 = Class_1668593292115_18();
    let var_1668593292115_905 : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) = (((Int16(93)&127)..(Int16(Int8(-116))&127):((Int64(UInt64(151))|1))), ((UInt64(191)&127)..=(UInt64(111)&127):(115|1)), Class_1668593292115_18(), r'Y', UInt64(114), true);
    match ((Option<Float64>.None|>func_1668593292115_793)) {
        case defaultValue => 
            if (false) { (((Int16(54)&127)..(Int16(-103)&127):(12|1)), var_1668593292115_488, var_1668593292115_168, var_1668593292115_733, var_1668593292115_595, false) } else { (((var_1668593292115_882&127)..=(var_1668593292115_882&127):((var_1668593292115_510|1))), ((UInt64(164)&127)..(UInt64(148)&127):(((-99)|1))), var_1668593292115_893, var_1668593292115_733, UInt64(21), true) } 
        
        case defaultValue => 
            var_1668593292115_581;
            var_1668593292115_882--;
            var_1668593292115_905
        
        case _ => 
            let var_1668593292115_924 : Interface_1668593292115_27 = Class_1668593292115_18("""
^H>NT
}};g!
""", Float32(Float32(Float32(-102.0))), ((() as Option<Bool>) is UInt64));
            if (false) { Class_1668593292115_18() } else { var_1668593292115_924 } ;
            var_1668593292115_595 ^= var_1668593292115_595;
            (((Int16(-94)&127)..=(Int16(-85)&127):(19|1)), var_1668593292115_488, Class_1668593292115_18(), var_1668593292115_733, var_1668593292115_595, true)
        
    }
}


public func func_1668593292115_755(param_1668593292115_756 : Range<UInt32>) : Class_1668593292115_18 { // block id: 757
    let var_1668593292115_954 : String = "A+7\"dWpxt^";
    match (func_1668593292115_760((Class_1668593292115_18(var_1668593292115_954, Float32(117.0), var_1668593292115_85)|>func_1668593292115_786), if (var_1668593292115_85) { ((Int16(-96)&127)..=(Int16(-30)&127):(((-78)|1))) } else { var_1668593292115_965 } , optionalParam_1668593292115_763 : (((-84)&127)..(var_1668593292115_510&127):((45|1))))) {
        case _ => 
            ();
            var_1668593292115_979
        
    };
    var var_1668593292115_984 : ?UInt64 = ("-f@TdF@S=l" as UInt64);
    var var_1668593292115_1026 : Option<Bool> = (Class_1668593292115_18() as Bool);
    if (match (var_1668593292115_984) {
        case _ => 
            var_1668593292115_85
        
    }) { try { // block id: 991
        var_1668593292115_581;
        var_1668593292115_380
    } catch (e: Exception) { // block id: 994
        var_1668593292115_380
    } } else { (if ((var_1668593292115_113.var_1668593292115_1000)) { (Option<Bool>.Some(var_1668593292115_85), Int16(-73), var_1668593292115_1014)[0] } else { (Option<Option<Bool>>.Some(Option<Bool>.None) ?? var_1668593292115_1026) } ) } ;
    var var_1668593292115_1044 : Option<Bool> = (Enum_1668593292115_790.defaultValue as Bool);
    if (((), var_1668593292115_694, var_1668593292115_85)[2]) { (if ((var_1668593292115_1044 ?? var_1668593292115_85)) { try { // block id: 1049
        Int32(-22) << ((Int32(84)) & 7);
        var_1668593292115_393;
        if (var_1668593292115_85) { var_1668593292115_113 } else { var_1668593292115_113 } 
    } catch (e: Exception) { // block id: 1058
        ();
        if (var_1668593292115_85) { ((var_1668593292115_510&127)..=(var_1668593292115_510&127):((var_1668593292115_510|1))) } else { (((-121)&127)..(23&127):((var_1668593292115_510|1))) } ;
        var_1668593292115_113
    } finally { // block id: 1071
        var var_1668593292115_1076 : String = "!nd+UWP!%&";
        if (true) { Class_1668593292115_18(var_1668593292115_1076, var_1668593292115_372, false) } else { Class_1668593292115_18() } ;
        var_1668593292115_113
    } } else { match (var_1668593292115_1044) {
        case caseVar_1668593292115_1086 : Interface_1668593292115_26 => 
            var_1668593292115_64++;
            var_1668593292115_113
        
        case _ => 
            if (false) { Option<Bool>.Some(false) } else { Option<Bool>.Some(false) } ;
            if (true) { var_1668593292115_168 } else { Class_1668593292115_18() } ;
            Class_1668593292115_18()
        
    } } ) } else { try { // block id: 1107
        if (false) { Class_1668593292115_18() } else { var_1668593292115_113 } ;
        if (true) { ((Int8(-50)&127)..=(Int8(23)&127):((var_1668593292115_510|1))) } else { ((Int8(-115)&127)..(Int8(-109)&127):((-66)|1)) } ;
        [var_1668593292115_113, Class_1668593292115_18(), Class_1668593292115_18(), var_1668593292115_113, var_1668593292115_113, Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), var_1668593292115_113]
    } catch (_) { // block id: 1130
        var_1668593292115_979;
        if (false) { [Class_1668593292115_18(), var_1668593292115_113, var_1668593292115_113, Class_1668593292115_18(), var_1668593292115_113, Class_1668593292115_18(), var_1668593292115_113, Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18()] } else { var_1668593292115_1146 } 
    } finally { // block id: 1158
        Option<Class_1668593292115_18>.Some(Class_1668593292115_18());
        var_1668593292115_510 -= (-43);
        [var_1668593292115_113, var_1668593292115_113, Class_1668593292115_18(), var_1668593292115_1169, var_1668593292115_113, var_1668593292115_113, Class_1668593292115_18(), var_1668593292115_113, Class_1668593292115_18(), var_1668593292115_1169]
    }[6] } 
}

public func func_1668593292115_641<T0, T1>(optionalParam_1668593292115_642 ! : UInt32 = UInt32(Int32(69)), optionalParam_1668593292115_645 ! : Int64 = Int64(UInt32(UInt8(118))), namedParam_1668593292115_649 ! : UInt64) : Class_1668593292115_18 { // block id: 650
    let var_1668593292115_715 : Range<UInt8> = ((UInt8(93)&127)..=(UInt8(83)&127):(36|1));
    match (try { // block id: 653
        var_1668593292115_595 &= UInt64(74);
        if (var_1668593292115_85) { Option<Float64>.None } else { var_1668593292115_441 } ;
        var_1668593292115_526
    } catch (e: Exception) { // block id: 662
        var_1668593292115_665 |= var_1668593292115_665;
        var_1668593292115_670;
        var var_1668593292115_698 : ((Int16, String, Rune, Rune), UInt16, Float32, Range<UInt16>) = ((Int16(-42), "Za%n(u %}e", r'8', r'L'), UInt16(203), Float32(Float32(92.0)), ((UInt16(146)&127)..=(UInt16(93)&127):(30|1)));
        if (false) { (((Int32(-106)&127)..(var_1668593292115_665&127):((var_1668593292115_510|1))), ((UInt8(152)&127)..=(UInt8(244)&127):(66|1)), r'b', var_1668593292115_694, var_1668593292115_698) } else { (((var_1668593292115_665&127)..(Int32(-115)&127):((var_1668593292115_510|1))), var_1668593292115_715, r'b', var_1668593292115_694, var_1668593292115_698) } 
    } finally { // block id: 720
        Int16(62) | Int16(83);
        if (false) { (((Int32(-46)&127)..=(Int32(-42)&127):((-44)|1)), ((UInt8(38)&127)..(UInt8(215)&127):((var_1668593292115_510|1))), var_1668593292115_733, Int8(-15), var_1668593292115_737) } else { var_1668593292115_526 } 
    }) {
        case _ => 
            ();
            ()
        
    };
    var_1668593292115_1184[1][2]|>func_1668593292115_755
}


func func_1668593292115_623(optionalParam_1668593292115_624 ! : (Int16, String, Rune, Rune) = (Int16(UInt16(UInt16(186))), """
:} $W
C@~%+
""", r'U', r'J'), optionalParam_1668593292115_632 ! : Float64 = Float64(Float32(Float32(33.0))), namedParam_1668593292115_636 ! : Option<Bool>, namedParam_1668593292115_637 ! : Int8) : Bool { // block id: 638
    func_1668593292115_641<Array<Int64>, Array<UInt64>>(namedParam_1668593292115_649 : var_1668593292115_595).func_1668593292115_1249(func_1668593292115_760);
    Class_1668593292115_18.func_1668593292115_1413<Option<Bool>>();
    let var_1668593292115_1550 : Array<Bool> = [false, true, false, ([Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18(), Class_1668593292115_18()] is Range<UInt32>), (() is UInt8), (Int32(-92) is (Array<UInt64>, Range<UInt8>, Range<UInt32>, Range<UInt8>)), false, (("x\\yh,:m}o\\" as Class_1668593292115_18) is Range<Int64>), false, (((UInt8(Int8(3))&127)..=(UInt8(238)&127):(((-118)|1))) is Array<UInt64>)];
    if (true) { [var_1668593292115_1509, var_1668593292115_1509, [var_1668593292115_85, true, true, true, false, true, false, var_1668593292115_85, true, var_1668593292115_85], var_1668593292115_1550, [true, true, true, false, true, true, true, false, false, false], var_1668593292115_1509, [true, true, false, true, true, true, true, true, true, true], [var_1668593292115_85, var_1668593292115_85, false, var_1668593292115_85, var_1668593292115_85, var_1668593292115_85, var_1668593292115_85, var_1668593292115_85, true, var_1668593292115_1596], [true, true, false, false, false, true, true, false, false, false], [false, true, true, true, false, false, false, true, false, true]][5] } else { (var_1668593292115_1631 ?? [false, false, true, false, var_1668593292115_1596, false, true, var_1668593292115_1596, var_1668593292115_1596, false]) } [9]
}

func func_1668593292115_576(param_1668593292115_577 : Option<Bool>) : Option<Bool> { // block id: 578
    var var_1668593292115_615 : Int8 = Int8(Int8(51));
    match (var_1668593292115_581) {
        case caseVar_1668593292115_585 => 
            let var_1668593292115_591 : Interface_1668593292115_23 = Class_1668593292115_18();
            if (var_1668593292115_85) { Class_1668593292115_18() } else { var_1668593292115_591 } ;
            [var_1668593292115_595, UInt64(82), UInt64(1), UInt64(76), UInt64(249), var_1668593292115_595, UInt64(120), var_1668593292115_595, UInt64(143), UInt64(253)];
            Int8(-57)
        
        case _ => 
            var_1668593292115_581;
            var_1668593292115_595 |= var_1668593292115_595;
            var_1668593292115_615 ^ var_1668593292115_615
        
    };
    let var_1668593292115_1650 : (Float32, Array<UInt64>, UInt64, Option<Bool>, Range<UInt64>, Range<Int32>, (UInt32, Unit)) = (Float32(Float32(Float32(-117.0))), [UInt64(56), UInt64(44), UInt64(184), UInt64(61), UInt64(68), UInt64(92), UInt64(216), UInt64(7), UInt64(93), UInt64(104)], UInt64(22), Option<Bool>.Some((Float32(89.0) is Option<Array<Bool>>)), ((UInt64(254)&127)..=(UInt64(107)&127):((-42)|1)), ((Int32(55)&127)..(Int32(UInt8(Int8(-93)))&127):((119|1))), (UInt32(122), ()));
    if (func_1668593292115_623(namedParam_1668593292115_636 : var_1668593292115_380, namedParam_1668593292115_637 : Int8(-120))) { var_1668593292115_1650 } else { try { // block id: 1671
        Option<Option<Bool>>.Some(var_1668593292115_380);
        var_1668593292115_1650
    } finally { // block id: 1675
        var_1668593292115_1650
    } } [3]
}

func func_1668593292115_301(param_1668593292115_302 : Class_1668593292115_18) : Float64 { // block id: 303
    var var_1668593292115_305 : Unit = ();
    var_1668593292115_305;
    ();
    let var_1668593292115_411 : Int16 = Int16(UInt8(Int8(Int8(24))));
    func func_1668593292115_314(param_1668593292115_315 : Range<Int32>, param_1668593292115_316 : Interface_1668593292115_26, param_1668593292115_317 : Option<Bool>) : Option<Float64> { // block id: 318
        var var_1668593292115_336 : (UInt32, Unit) = (UInt32(Int16(92)), ());
        let var_1668593292115_390 : Bool = false;
        let var_1668593292115_396 : Range<Int64> = (((-47)&127)..=(124&127):(101|1));
        let var_1668593292115_417 : Int64 = Int64(UInt32(200));
        try { // block id: 320
            let var_1668593292115_328 : Unit = ();
            var var_1668593292115_344 : Bool = true;
            try { // block id: 322
                if (false) { (UInt32(112), var_1668593292115_328) } else { (UInt32(21), var_1668593292115_328) } 
            } catch (e: Exception) { // block id: 333
                ();
                var_1668593292115_336
            } finally { // block id: 341
                if (var_1668593292115_344) { var_1668593292115_336 } else { var_1668593292115_336 } 
            };
            match (var_1668593292115_350) {
                case _ => 
                    var_1668593292115_372
                
                case caseVar_1668593292115_376 : Bool => 
                    Option<Option<Bool>>.Some(var_1668593292115_380);
                    if (var_1668593292115_390) { var_1668593292115_393 } else { var_1668593292115_396 } ;
                    var var_1668593292115_401 : Float32 = Float32(Float32(-66.0));
                    var_1668593292115_372 - var_1668593292115_401
                
                case _ => 
                    Class_1668593292115_18();
                    ((Int16(-102)&127)..=(var_1668593292115_411&127):((var_1668593292115_417|1)));
                    var_1668593292115_372 + Float32(27.0)
                
                case _ => 
                    -var_1668593292115_372
                
                case _ => 
                    Float32(-23.0)
                
            };
            Option<Float64>.None
        } finally { // block id: 432
            if (var_1668593292115_85) { Option<Float64>.Some(90.0) } else { Option<Float64>.None } 
        }
    }
;
    var var_1668593292115_476 : Interface_1668593292115_26 = Class_1668593292115_18();
    var var_1668593292115_492 : Rune = r'b';
    let var_1668593292115_1679 : (Option<Bool>) -> Option<Bool> = func_1668593292115_576;
    var var_1668593292115_1698 : Float64 = Float64(Float64(Float32(44.0)));
    (func_1668593292115_314(((Int32(67)&127)..=(Int32(79)&127):(39|1)), match (var_1668593292115_441) {
        case caseVar_1668593292115_445 : String => 
            var_1668593292115_305;
            let var_1668593292115_450 : Bool = false;
            let var_1668593292115_453 : Interface_1668593292115_27 = Class_1668593292115_18();
            if (var_1668593292115_450) { var_1668593292115_453 } else { var_1668593292115_453 } ;
            Class_1668593292115_18()
        
        case _ => 
            let var_1668593292115_463 : Int64 = Int64(UInt16(UInt8(224)));
            (-63) / ((var_1668593292115_463) | 1);
            if (var_1668593292115_85) { Class_1668593292115_18() } else { Class_1668593292115_18() } 
        
        case _ : Bool => 
            ();
            var_1668593292115_476
        
        case caseVar_1668593292115_480 : UInt16 => 
            (((Int16(26)&127)..(var_1668593292115_411&127):(((-72)|1))), var_1668593292115_488, Class_1668593292115_18(), var_1668593292115_492, UInt64(170), var_1668593292115_85);
            var var_1668593292115_498 : UInt64 = UInt64(208);
            -var_1668593292115_498;
            if (true) { var_1668593292115_476 } else { var_1668593292115_504 } 
        
        case _ => 
            var_1668593292115_510 >>= ((var_1668593292115_510) & 7);
            var var_1668593292115_563 : UInt64 = UInt64(Int32(UInt8(Int8(-61))));
            var var_1668593292115_569 : (UInt32, Unit) = (UInt32(27), ());
            if (var_1668593292115_85) { Class_1668593292115_18(var_1668593292115_563, var_1668593292115_569, var_1668593292115_441) } else { Class_1668593292115_18() } 
        
    }, (Option<Bool>.Some(var_1668593292115_1596)|>var_1668593292115_1679)) ?? (try { // block id: 1685
        ();
        ((18&127)..=((-9)&127):(48|1));
        var_1668593292115_441
    } finally { // block id: 1689
        if (var_1668593292115_85) { Option<Float64>.Some(29.0) } else { var_1668593292115_441 } 
    } ?? try { // block id: 1696
        var_1668593292115_1698
    } catch (_) { // block id: 1702
        Option<Class_1668593292115_18>.None;
        var_1668593292115_1698 / Float64((Int32(var_1668593292115_1698)) | 1)
    } finally { // block id: 1707
        ((Int32(12)&127)..(Int32(-8)&127):(37|1));
        ();
        var_1668593292115_1698
    }))
}


main(): Int64 {
    try {
        var var_1668593292115_10 : String = "\";s*AY&#u8";
        let var_1668593292115_14 : Rune = r'u';
        (Int16(105), var_1668593292115_10, r'y', var_1668593292115_14)[3];
        var var_1668593292115_29 : Class_1668593292115_18 = Class_1668593292115_18();
        var_1668593292115_29.var_1668593292115_32;
        let var_1668593292115_68 : Option<Bool> = (Class_1668593292115_18() as Bool);
        let var_1668593292115_171 : Float64 = Float64(Float32(112.0));
        let var_1668593292115_202 : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) = (((Int16(UInt8(UInt8(59)))&127)..=(Int16(-51)&127):(((-22)|1))), ((UInt64(146)&127)..=(UInt64(239)&127):(62|1)), Class_1668593292115_18(), r'I', UInt64(100), (((Int8(Int8(-107))&127)..=(Int8(Int8(-87))&127):((Int64(UInt16(219))|1))) is Range<UInt8>));
        let var_1668593292115_250 : ?Option<Bool> = Option<Option<Bool>>.Some(Option<Bool>.None);
        let var_1668593292115_280 : UInt16 = UInt16(UInt8(UInt8(123)));
        let var_1668593292115_297 : Interface_1668593292115_21 = Class_1668593292115_18();
        let var_1668593292115_1712 : (Class_1668593292115_18) -> Float64 = func_1668593292115_301;
        let var_1668593292115_1764 : (Int16, String, Rune, Rune) = (Int16(UInt16(141)), ###"}yOM\\wRX${var_1668593292115_10}W${var_1668593292115_10}&"###, r'3', r'9');
        func func_1668593292115_42() : Int64 { // block id: 43
            func func_1668593292115_92(optionalParam_1668593292115_93 ! : Interface_1668593292115_21 = Class_1668593292115_18(), optionalParam_1668593292115_95 ! : Float64 = Float64(Float32(-109.0)), namedParam_1668593292115_98 ! : Bool) : Bool { // block id: 99
                var var_1668593292115_101 : Unit = ();
                var_1668593292115_101;
                (match (match (var_1668593292115_68) {
                    case _ : Int16 => 
                        UInt8(127);
                        ();
                        var_1668593292115_113
                    
                    case _ => 
                        var_1668593292115_101;
                        var_1668593292115_113
                    
                    case caseVar_1668593292115_122 => 
                        var_1668593292115_101;
                        var var_1668593292115_127 : Int8 = Int8(-16);
                        var_1668593292115_127 &= var_1668593292115_127;
                        if (true) { var_1668593292115_113 } else { var_1668593292115_113 } 
                    
                    case _ => 
                        if (false) { var_1668593292115_113 } else { var_1668593292115_113 } 
                    
                }) {
                    case caseVar_1668593292115_142 : Float32 => 
                        var_1668593292115_68
                    
                    case caseVar_1668593292115_147 : Interface_1668593292115_26 => 
                        var_1668593292115_101;
                        var_1668593292115_101;
                        var_1668593292115_68
                    
                    case _ => 
                        Float32(69.0) + Float32(-44.0);
                        var_1668593292115_101;
                        Option<Bool>.Some(true)
                    
                } ?? ((var_1668593292115_64, var_1668593292115_101)[1] is Rune))
            }
;
            let var_1668593292115_275 : Unit = ();
            func func_1668593292115_233(namedParam_1668593292115_234 ! : Range<Int32>, optionalParam_1668593292115_235 ! : UInt64 = UInt64(Int32(98))) : Bool { // block id: 238
                let var_1668593292115_240 : Interface_1668593292115_22<Interface_1668593292115_26, Interface_1668593292115_24<Bool, Array<Bool>>> = Class_1668593292115_18();
                var_1668593292115_240;
                let var_1668593292115_285 : Int64 = Int64(Int32(-28));
                func_1668593292115_92(optionalParam_1668593292115_93 : match ((var_1668593292115_250 ?? Option<Bool>.Some(var_1668593292115_85))) {
                    case _ : Int16 => 
                        Class_1668593292115_18()
                    
                    case _ => 
                        var_1668593292115_275;
                        ((UInt16(9)&127)..=(var_1668593292115_280&127):((var_1668593292115_285|1)));
                        if (true) { var_1668593292115_168 } else { Class_1668593292115_18() } 
                    
                    case _ => 
                        if (var_1668593292115_85) { var_1668593292115_297 } else { Class_1668593292115_18() } 
                    
                }, optionalParam_1668593292115_95 : (var_1668593292115_1146[1]|>var_1668593292115_1712), namedParam_1668593292115_98 : var_1668593292115_1509[9])
            }
;
            if ((match (false) {
                case false | true | false | true => 
                    ();
                    Option<Bool>.Some(true)
                
                case true => 
                    ();
                    var_1668593292115_64 <<= ((UInt32(84)) & 7);
                    var_1668593292115_68
                
                case caseVar_1668593292115_73 => 
                    ();
                    ();
                    if (false) { Option<Bool>.None } else { var_1668593292115_68 } 
                
                case _ => 
                    if (var_1668593292115_85) { Option<Bool>.Some(false) } else { var_1668593292115_68 } 
                
            } ?? func_1668593292115_92(optionalParam_1668593292115_93 : var_1668593292115_168, optionalParam_1668593292115_95 : var_1668593292115_171, namedParam_1668593292115_98 : var_1668593292115_85))) { // block id: 175
                var loopTimeVar_1668593292115_181 : Range<UInt64> = ((UInt64(Int32(UInt32(Int32(-108))))&127)..=(UInt64(77)&127):((Int64(UInt8(129))|1)));
                for (i in loopTimeVar_1668593292115_181 where var_1668593292115_85) {
                    ();
                    Float32(21.0)
                };
                var_1668593292115_202[2];
                func func_1668593292115_224(optionalParam_1668593292115_225 ! : Range<Int32> = ((Int32(-45)&127)..=(Int32(-107)&127):((-126)|1)), namedParam_1668593292115_227 ! : Range<Int32>, namedParam_1668593292115_228 ! : (UInt32, Unit), namedParam_1668593292115_229 ! : Float64) : Int64 { // block id: 230
                    let var_1668593292115_1721 : Range<Int32> = ((Int32(UInt32(94))&127)..=(Int32(-61)&127):(((-65)|1)));
                    var loopTimeVar_1668593292115_1732 : Int64 = 0;
                    do {
                        loopTimeVar_1668593292115_1732++;
                        (Int16(108) as UInt64)
                    } while ((func_1668593292115_233(namedParam_1668593292115_234 : var_1668593292115_1721, optionalParam_1668593292115_235 : UInt64(65))) && loopTimeVar_1668593292115_1732 < 100 ) ;
                    var var_1668593292115_1744 : String = "8~O`5WozcB";
                    if (((var_1668593292115_1741 ?? var_1668593292115_1744) is (Float32, Array<UInt64>, UInt64, Option<Bool>, Range<UInt64>, Range<Int32>, (UInt32, Unit)))) { // block id: 1746
                        ();
                        ()
                    };
                    72
                }
;
                func_1668593292115_224(namedParam_1668593292115_227 : ((Int32(-17)&127)..(Int32(-19)&127):(40|1)), namedParam_1668593292115_228 : (var_1668593292115_64, var_1668593292115_1337), namedParam_1668593292115_229 : (-7.0))
            } else { // block id: 1755
                var var_1668593292115_1798 : Unit = ();
                match (var_1668593292115_441) {
                    case _ => 
                        if (var_1668593292115_85) { var_1668593292115_1764 } else { var_1668593292115_1764 } ;
                        if (var_1668593292115_85) { var_1668593292115_812 } else { Option<Class_1668593292115_18>.Some(var_1668593292115_1169) } 
                    
                    case caseVar_1668593292115_1779 => 
                        var_1668593292115_1509;
                        if (var_1668593292115_1596) { var_1668593292115_812 } else { var_1668593292115_1786 } 
                    
                    case _ => 
                        var_1668593292115_1146;
                        Option<Class_1668593292115_18>.Some(Class_1668593292115_18())
                    
                    case _ => 
                        ();
                        var_1668593292115_1798;
                        var_1668593292115_1786
                    
                };
                ();
                [(-40), (-41), 8, (-56), 71, (-29), 83, (-46), (-27), 83][9]
            }
        }
;
        func_1668593292115_42()
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1668593292115_64*var_1668593292115_64), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_280*var_1668593292115_280), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_510*var_1668593292115_510), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_595*var_1668593292115_595), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_665*var_1668593292115_665), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_694*var_1668593292115_694), 64)
        crccheck.updateBuffer(UInt64(var_1668593292115_882*var_1668593292115_882), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1668593292115_18 {
    public static func func_1668593292115_1413<T0>(optionalParam_1668593292115_1414 ! : Option<UInt64> = Option<UInt64>.None) : (Range<Int16>, Range<UInt64>, Interface_1668593292115_21, Rune, UInt64, Bool) { // block id: 1416
        var var_1668593292115_1468 : (Option<Bool>, Int16, Range<UInt8>) = (Option<Bool>.None, Int16(UInt8(UInt8(Int8(-29)))), ((UInt8(5)&127)..(UInt8(226)&127):((Int64(UInt16(99))|1))));
        let var_1668593292115_1482 : Unit = ();
        match (try { // block id: 1419
            var_1668593292115_1421;
            if (false) { Option<Float64>.Some((-59.0)) } else { var_1668593292115_441 } 
        } finally { // block id: 1428
            var_1668593292115_64;
            var_1668593292115_581;
            Option<Float64>.Some(var_1668593292115_1433)
        }) {
            case _ => 
                var_1668593292115_1468;
                var_1668593292115_932;
                var_1668593292115_1482
            
        };
        Class_1668593292115_18.var_1668593292115_1487
    }

}

extend Enum_1668593292115_790 {

}

