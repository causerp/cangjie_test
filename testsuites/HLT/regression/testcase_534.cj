/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (CJNATIVE) RUN-EXEC: %run %run_opt %output %run_args
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

public var var_1698005449004_19 : Class_1698005449004_10<UInt16> = Class_1698005449004_10<UInt16>()
public var var_1698005449004_34 : Interface_1698005449004_13 = Class_1698005449004_10<UInt16>()
public const var_1698005449004_57 : Unit = ()
public let var_1698005449004_66 : Float64 = Float64(Float64(-34.0))
public var var_1698005449004_84 : VArray<Unit, $1> = [()]
public var var_1698005449004_111 : UInt16 = UInt16(52)
public var var_1698005449004_120 : Int = Int64(UInt64(Int16(-72)))
public let var_1698005449004_184 : (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8) = ("""
y+cs<
.%[/=
""", Class_1698005449004_10<UInt16>(), Option<Bool>.None, [UInt64(143), UInt64(61), UInt64(69), UInt64(33), UInt64(72), UInt64(24), UInt64(235), UInt64(185), UInt64(190), UInt64(32)], UInt64(136), Int8(59))
var var_1698005449004_248 : Int32 = Int32(-77)
public var var_1698005449004_279 : UInt32 = UInt32(9)
public let var_1698005449004_343 : Bool = (VArray<Unit, $1>({ i => ()}) is Option<Bool>)
public var var_1698005449004_350 : UInt = UInt64(UInt32(121))
public let var_1698005449004_368 : UInt8 = UInt8(Int8(24))
const var_1698005449004_404 : UInt8 = 253
public let var_1698005449004_447 : Unit = ()
public let var_1698005449004_452 : VArray<Unit, $3> = [(), (), ()]
var var_1698005449004_468 : Unit = ()
public var var_1698005449004_561 : VArray<Int8, $8> = [Int8(UInt8(UInt8(Int8(-30)))), Int8(Int8(UInt8(UInt8(237)))), Int8(UInt8(Int8(-24))), Int8(UInt8(UInt8(Int8(UInt8(Int8(94)))))), Int8(101), Int8(Int8(-124)), Int8(-6), Int8(-80)]
let var_1698005449004_600 : Bool = (Float64(Float64(-10.0)) is (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>))
let var_1698005449004_656 : Range<UInt8> = ((UInt8(UInt8(37))&127)..(UInt8(UInt8(73))&127):(Int64(87)|1))
public var var_1698005449004_758 : UInt = UInt64(39)
public let var_1698005449004_785 : Int16 = Int16(Int16(73))
var var_1698005449004_883 : ?Range<UInt8> = (Option<VArray<Unit, $3>>.None as Range<UInt8>)
public const var_1698005449004_1174 : UInt16 = 76
let var_1698005449004_1298 : (VArray<Int64, $2>, Option<Bool>, Float64, String, (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8), VArray<Int64, $2>, Unit) = (VArray<Int64, $2>({ i => Int64(-82)}), Option<Bool>.None, Float64(-78.0), """
9FDk=
AM,/B
""", ("""
(BFyR
&hH[o
""", Class_1698005449004_10<UInt16>(), (() as Bool), [UInt64(Int64(-116)), UInt64(158), UInt64(Int16(UInt8(UInt8(0)))), UInt64(171), UInt64(UInt32(217)), UInt64(5), UInt64(64), UInt64(3), UInt64(68), UInt64(6)], UInt64(74), Int8(Int8(UInt8(71)))), VArray<Int64, $2>({ i => Int64(113)}), ())
var var_1698005449004_1404 : Option<((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>)> = (((UInt64(UInt64(UInt16(191)))&127)..(UInt64(UInt64(UInt64(43)))&127):(Int64(UInt16(72))|1)) as ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>))
var var_1698005449004_1663 : ?String = Option<String>.None
public var var_1698005449004_1720 : UInt8 = UInt8(Int8(UInt8(Int8(Int8(Int8(41))))))
let var_1698005449004_1818 : (VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16) = (VArray<Unit, $2>({ i => ()}), Option<Range<UInt8>>.None, (("}#]vaviU&9", Class_1698005449004_207(), ((Option<(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16)>.None is UInt8) as Bool), [UInt64(UInt32(Int32(-11))), UInt64(239), UInt64(UInt32(Int8(98))), UInt64(Int64(55)), UInt64(171), UInt64(117), UInt64(UInt64(18)), UInt64(48), UInt64(251), UInt64(Int16(Int8(-54)))], UInt64(UInt64(Int64(65))), Int8(Int8(100))) as (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)), VArray<Int8, $8>(repeat: Int8(UInt8(Int8(121)))), (), (), Int16(Int8(-104)))
public var var_1698005449004_2114 : Array<UInt64> = [UInt64(207), UInt64(223), UInt64(121), UInt64(42), UInt64(11), UInt64(220), UInt64(197), UInt64(226), UInt64(84), UInt64(87)]
public var var_1698005449004_2139 : (Option<Bool>, Unit, Option<Array<VArray<Unit, $3>>>, ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>), Option<String>, Range<Int64>) = (Option<Bool>.None, (), (((Int32(Int32(Int8(-23)))&127)..(Int32(Int32(UInt8(Int8(UInt8(244)))))&127):(Int64(Int32(Int8(-109)))|1)) as Array<VArray<Unit, $3>>), ((Option<VArray<Unit, $3>>.None, UInt32(UInt8(142)), Float32(-127.0), UInt16(41), (["""
szj?t
,)8D7
""", "(7:}ty^?Z?", """
KVw8G
_WB49
""", "(/\"k uKeu<", """
fN*9:
~2G^T
""", "nCMC]:Zc)>", """
gmSI@
;%<AN
""", "q;j$i P7Kj", "RN9'$GpG~M", """
E8y`a{
M<h4p
"""] as Array<VArray<Unit, $3>>), ((Int64(Int64(42))&127)..=(Int64(Int64(-6))&127):(Int64(UInt32(232))|1))), true, ((UInt32(UInt32(UInt8(200)))&127)..(UInt32(UInt32(234))&127):(Int64(119)|1))), (Int32(Int8(Int8(Int8(UInt8(123))))) as String), ((Int64(Int64(UInt64(80)))&127)..(Int64(Int64(Int64(Int16(35))))&127):(Int64(-15)|1)))
public var var_1698005449004_2194 : String = ":AeC:O<u0k"
public interface Interface_1698005449004_16 {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

public interface Interface_1698005449004_17<T0> {

}

sealed public interface Interface_1698005449004_15<T0> <: Interface_1698005449004_16 & Interface_1698005449004_17<Int16> {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

public interface Interface_1698005449004_14 <: Interface_1698005449004_15<Int16> {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

public interface Interface_1698005449004_13 <: Interface_1698005449004_14 {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

public open class Class_1698005449004_10<T0> <: Interface_1698005449004_13 {
    public init() { // block id: 12

    }
;
    public static const var_1698005449004_22 : Bool = true;
    public static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    public open override func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

    static init() {
    }
}





public interface Interface_1698005449004_211<T0> <: Interface_1698005449004_16 {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

sealed public interface Interface_1698005449004_210 <: Interface_1698005449004_16 & Interface_1698005449004_211<Range<UInt8>> {
    static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

}

public open class Class_1698005449004_207 <: Interface_1698005449004_210 & Interface_1698005449004_211<Range<UInt8>> & Resource {
    public init() { // block id: 209

    }
;
    public static func func_1698005449004_200() : Unit { // block id: 201

    }
;
    public open override func func_1698005449004_216(namedParam_1698005449004_217 ! : Int16, namedParam_1698005449004_218 ! : Float64) : Float32 { // block id: 219
        let var_1698005449004_316 : (Option<Range<UInt64>>, Int64, Unit, Float64, Int32) = ((((Int32(Int32(Int32(Int8(UInt8(127)))))&127)..=(Int32(Int32(111))&127):(Int64(Int16(48))|1)) as Range<UInt64>), Int64(Int8(104)), (), Float64(Float32(Float32(90.0))), Int32(-70));
        (if ((var_1698005449004_316[1] == (var_1698005449004_120 % ((Int64(55)) | 1)))) { try { // block id: 339
            ();
            if (var_1698005449004_343) { ((UInt64(UInt64(6))&127)..(UInt64(var_1698005449004_350)&127):(Int64(19)|1)) } else { ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(191))&127):(var_1698005449004_120|1)) } 
        } finally { // block id: 358
            ();
            ((UInt64(var_1698005449004_350)&127)..(UInt64(UInt64(213))&127):(Int64(54)|1))
        } } else { try { // block id: 365
            ((UInt8(var_1698005449004_368)&127)..=(UInt8(UInt8(16))&127):(Int64(-24)|1));
            ((UInt64(var_1698005449004_350)&127)..=(UInt64(UInt64(209))&127):(var_1698005449004_120|1))
        } finally { // block id: 377
            UInt8(208) >> ((UInt8(119)) & 7);
            ((UInt64(UInt64(95))&127)..=(UInt64(UInt64(163))&127):(Int64(-41)|1))
        } } |>func_1698005449004_223<VArray<Unit, $1>>)[1];
        var var_1698005449004_395 : ?UInt8 = Option<UInt8>.None;
        let var_1698005449004_426 : Range<Int32> = ((Int32(Int32(121))&127)..(Int32(Int32(7))&127):(Int64(UInt32(UInt16(UInt8(Int8(Int8(122))))))|1));
        try { // block id: 386
            var var_1698005449004_411 : Option<Range<UInt64>> = ((((Int64(Int64(8))&127)..(Int64(Int64(-120))&127):(Int64(7)|1)) as Bool) as Range<UInt64>);
            (if (true) { var_1698005449004_395 } else { Option<UInt8>.None }  ?? try { // block id: 399
                var_1698005449004_120 += Int64(81);
                var_1698005449004_404
            } catch (e: Exception) { // block id: 406
                var_1698005449004_368
            } finally { // block id: 408
                (var_1698005449004_411, var_1698005449004_120, (), Float64(-121.0), var_1698005449004_248);
                Int32(-60) >> ((Int32(44)) & 7);
                var_1698005449004_404 % ((UInt8(38)) | 1)
            });
            var_1698005449004_426;
            const var_1698005449004_461 : Unit = ();
            Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: var_1698005449004_447), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452]).getOrThrow()[8]
        } finally { // block id: 479
            ((Option<Option<VArray<Unit, $3>>>.Some(Option<VArray<Unit, $3>>.None) ?? Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>(repeat: var_1698005449004_468))) ?? var_1698005449004_452)
        }[0];
        var var_1698005449004_511 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = ("Z7\"<lLV\">3", UInt8(198), ((((UInt8(UInt8(192))&127)..=(UInt8(UInt8(Int8(UInt8(42))))&127):(Int64(Int16(119))|1)) as VArray<Unit, $3>), UInt32(222), Float32(Float32(-29.0)), UInt16(212), (Int16(UInt16(228)) as Array<VArray<Unit, $3>>), ((Int64(Int64(124))&127)..=(Int64(Int64(UInt16(Int16(-72))))&127):(Int64(Int32(UInt32(42)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<UInt8>.Some(UInt8(UInt8(63))) is Struct_1698005449004_260));
        const var_1698005449004_555 : Float32 = 93.0;
        (Option<Float32>.Some(var_1698005449004_511[2][2]) ?? Float32(1.0)) + var_1698005449004_555
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}



public struct Struct_1698005449004_260 {
    public init() { // block id: 262

    }
;
    prop var_1698005449004_267 : ?Range<UInt8> { // block id: 268
        get() { // block id: 270
            VArray<Unit, $1>({ i => ()});
            (UInt64(Int8(Int8(-88))) as Range<UInt8>)
        }

    }
}

public func func_1698005449004_223<T0>(param_1698005449004_224 : Range<UInt64>) : VArray<Unit, $2> { // block id: 225
    func func_1698005449004_236<T0, T1>(namedParam_1698005449004_237 ! : Int32, optionalParam_1698005449004_238 ! : Unit = (), namedParam_1698005449004_240 ! : Array<UInt64>) : Option<Range<UInt64>> { // block id: 241
        Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.None;
        let var_1698005449004_244 : Option<Range<UInt64>> = ("86OEo4gbY!" as Range<UInt64>);
        var_1698005449004_244
    }
;
    var var_1698005449004_264 : Struct_1698005449004_260 = Struct_1698005449004_260();
    VArray<Unit, $2>(repeat: ())
}










public func func_1698005449004_194(param_1698005449004_195 : VArray<Int64, $2>) : Bool { // block id: 196
    Interface_1698005449004_16.func_1698005449004_200();
    const var_1698005449004_594 : Float64 = -49.0;
    let var_1698005449004_610 : Float64 = Float64(Float64(-72.0));
    let var_1698005449004_848 : ?(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16) = (Option<Float32>.None as (VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16));
    let var_1698005449004_887 : ?(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8) = (VArray<Int64, $2>(repeat: Int64(UInt16(Int16(UInt8(81))))) as (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8));
    const var_1698005449004_905 : Int8 = 93;
    const var_1698005449004_1006 : String = "J=EJ!db@#T";
    let var_1698005449004_1070 : ?Bool = (((Int16(Int16(Int16(Int16(Int8(123)))))&127)..=(Int16(Int16(Int8(UInt8(Int8(44)))))&127):(Int64(-36)|1)) as Bool);
    let var_1698005449004_1442 : UInt = UInt64(44);
    func func_1698005449004_203(namedParam_1698005449004_204 ! : Interface_1698005449004_16) : Bool { // block id: 205
        var var_1698005449004_213 : Class_1698005449004_207 = Class_1698005449004_207();
        var var_1698005449004_617 : Int8 = Int8(Int8(75));
        var_1698005449004_213.func_1698005449004_216(namedParam_1698005449004_217 : Int16(var_1698005449004_561[5]), namedParam_1698005449004_218 : if (Int32(UInt16(244)) != Int32(7)) { // block id: 591
            Float64(var_1698005449004_594)
        } else if (var_1698005449004_343) { // block id: 597
            if (var_1698005449004_600) { // block id: 604
                Float64(47.0)
            } else if (var_1698005449004_343) { // block id: 607
                var_1698005449004_610 * var_1698005449004_610
            } else { // block id: 614
                var_1698005449004_617 ^= var_1698005449004_617;
                var_1698005449004_368 % ((UInt8(12)) | 1);
                let var_1698005449004_625 : Float64 = Float64(Float32(Float32(Float32(Float32(46.0)))));
                var_1698005449004_625
            }
        } else { // block id: 631
            let var_1698005449004_635 : Array<String> = ["""
`<+R`
I./jl
""", """
a\"7JK
<rZc(
""", ###"VhFt#fvd#("###, "9m+7 P y,c", "3Kk} w!<$t", "@J+?=>(9eH", "xgh-d]-^>X", ###">a4%f1T-4u"###, ###"/+`PkAa{Haq"###, ###"yT>+IHb|vP"###];
            var_1698005449004_635[7];
            ();
            Float64(97.0)
        });
        let var_1698005449004_749 : String = "O]J#'J)>D(";
        var var_1698005449004_773 : Int8 = Int8(94);
        let var_1698005449004_791 : (VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16) = (VArray<Unit, $2>({ i => ()}), Option<Range<UInt8>>.None, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.Some(("""
CR${var_1698005449004_749}RcT
Bao${var_1698005449004_749}e%
""", Class_1698005449004_207(), Option<Bool>.None, [UInt64(Int16(UInt16(109))), UInt64(Int64(21)), UInt64(Int64(93)), UInt64(127), UInt64(UInt32(128)), UInt64(UInt64(101)), UInt64(215), UInt64(142), UInt64(Int16(25)), UInt64(UInt32(UInt8(186)))], UInt64(Int8(Int8(Int8(-6)))), Int8(-37))), VArray<Int8, $8>(repeat: Int8(-45)), (), (), Int16(-34));
        const var_1698005449004_897 : Int8 = 92;
        let var_1698005449004_910 : Unit = ();
        try { // block id: 653
            Option<Range<UInt8>>.Some(var_1698005449004_656);
            var loopTimeVar_1698005449004_672 : Int = 0;
            while ((((Option<Range<UInt64>>.Some(((UInt64(UInt64(246))&127)..=(UInt64(UInt64(125))&127):(Int64(22)|1))), var_1698005449004_120, var_1698005449004_447, Float64(22.0), var_1698005449004_248) is Option<Option<VArray<Unit, $3>>>)) && loopTimeVar_1698005449004_672 < 100 ) {
                loopTimeVar_1698005449004_672++;

            };
            var var_1698005449004_753 : ?Bool = Option<Bool>.Some(true);
            (if (true) { // block id: 680
                let var_1698005449004_685 : Option<Float32> = ([VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()})] as Float32);
                if (var_1698005449004_600) { Option<Float32>.None } else { var_1698005449004_685 } ;
                Option<(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16)>.None
            } else if (false) { // block id: 730
                ((Int8(Int8(-68))&127)..=(Int8(Int8(-78))&127):(Int64(-10)|1));
                VArray<Unit, $1>(repeat: var_1698005449004_468);
                var var_1698005449004_737 : VArray<Unit, $2> = VArray<Unit, $2>({ i => ()});
                Option<(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16)>.Some((var_1698005449004_737, Option<Range<UInt8>>.Some(((UInt8(var_1698005449004_368)&127)..(UInt8(UInt8(174))&127):(var_1698005449004_120|1))), Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.Some((var_1698005449004_749, Class_1698005449004_10<UInt16>(), var_1698005449004_753, [var_1698005449004_758, UInt64(75), var_1698005449004_350, var_1698005449004_758, var_1698005449004_758, var_1698005449004_758, UInt64(52), var_1698005449004_758, var_1698005449004_758, var_1698005449004_350], var_1698005449004_350, var_1698005449004_617)), VArray<Int8, $8>(repeat: var_1698005449004_773), var_1698005449004_468, var_1698005449004_447, var_1698005449004_785))
            } else { // block id: 788
                Option<(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16)>.Some(var_1698005449004_791)
            } ?? var_1698005449004_848.getOrThrow())
        } finally { // block id: 851
            var loopTimeVar_1698005449004_858 : Int64 = 0;
            do {
                loopTimeVar_1698005449004_858++;

            } while (((Option<Bool>.None ?? true)) && loopTimeVar_1698005449004_858 < 100 ) ;
            let var_1698005449004_864 : String = "kP.0ai3c,C";
            (var_1698005449004_248, var_1698005449004_864)[0];
            (if (var_1698005449004_343) { // block id: 870
                var_1698005449004_848
            } else if (true) { // block id: 873
                var_1698005449004_848
            } else { // block id: 875
                Option<(VArray<Unit, $2>, Option<Range<UInt8>>, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>, VArray<Int8, $8>, Unit, Unit, Int16)>.Some(var_1698005449004_791)
            } ?? (VArray<Unit, $2>(repeat: var_1698005449004_468), var_1698005449004_883, var_1698005449004_887, VArray<Int8, $8>(repeat: var_1698005449004_897), var_1698005449004_468, var_1698005449004_910, Int16(20)))
        }[4];
        var var_1698005449004_934 : Unit = ();
        var var_1698005449004_955 : UInt = UInt64(159);
        var var_1698005449004_1049 : Interface_1698005449004_211<Range<UInt8>> = Class_1698005449004_207();
        let var_1698005449004_1085 : Int8 = Int8(UInt8(222));
        var var_1698005449004_1350 : (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8) = ("""
Iop?#
;b8T.
""", Class_1698005449004_207(), Option<Bool>.None, [UInt64(Int16(102)), UInt64(UInt8(9)), UInt64(64), UInt64(26), UInt64(Int16(-50)), UInt64(Int64(82)), UInt64(Int8(-84)), UInt64(137), UInt64(UInt32(22)), UInt64(Int64(125))], UInt64(UInt16(Int8(Int8(89)))), Int8(-39));
        try { // block id: 915
            if (try { // block id: 918
                var_1698005449004_468;
                var_1698005449004_600;
                var_1698005449004_350 != UInt64(82)
            } catch (_) { // block id: 924
                (VArray<Unit, $2>(repeat: var_1698005449004_468), var_1698005449004_883, var_1698005449004_887, var_1698005449004_561, (), var_1698005449004_934, var_1698005449004_785);
                var_1698005449004_452;
                var_1698005449004_343
            } finally { // block id: 939
                var_1698005449004_447;
                Option<Range<UInt8>>.Some(((UInt8(UInt8(22))&127)..=(UInt8(UInt8(22))&127):(Int64(-41)|1)));
                false
            }) { // block id: 944

            };
            let var_1698005449004_962 : UInt = UInt64(UInt32(UInt8(139)));
            var var_1698005449004_1058 : ?String = ("""
=BvKh
W7*rM
""" as String);
            let var_1698005449004_1089 : ?String = (("""
Fhn+>
2=iUh
""", UInt8(105), ((((UInt16(UInt16(37))&127)..=(UInt16(UInt16(218))&127):(Int64(72)|1)) as VArray<Unit, $3>), UInt32(UInt16(UInt8(Int8(20)))), Float32(Float32(Float32(Float32(55.0)))), UInt16(33), Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ())]), ((Int64(Int64(-66))&127)..(Int64(Int64(-22))&127):(Int64(Int64(Int8(18)))|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), true) as String);
            var var_1698005449004_1201 : Option<Range<UInt64>> = (((UInt16(UInt16(11))&127)..(UInt16(UInt16(133))&127):(Int64(26)|1)) as Range<UInt64>);
            var var_1698005449004_1268 : VArray<Int64, $2> = [Int64(94), Int64(UInt16(121))];
            [match (("JY2,u(Je<8", Class_1698005449004_207(), Option<Bool>.Some(false), [var_1698005449004_350, var_1698005449004_955, UInt64(240), UInt64(249), var_1698005449004_758, UInt64(6), var_1698005449004_962, var_1698005449004_962, var_1698005449004_962, UInt64(18)], UInt64(56), var_1698005449004_617)) {
                case (_,caseVar_1698005449004_973,caseVar_1698005449004_974,caseVar_1698005449004_975,caseVar_1698005449004_976,caseVar_1698005449004_977) => 
                    let var_1698005449004_984 : (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8) = ("87?}+--$, ", Class_1698005449004_10<UInt16>(), (Struct_1698005449004_260() as Bool), [UInt64(244), UInt64(141), UInt64(155), UInt64(246), UInt64(24), UInt64(71), UInt64(12), UInt64(81), UInt64(194), UInt64(25)], UInt64(UInt8(181)), Int8(UInt8(Int8(UInt8(UInt8(UInt8(60)))))));
                    if (true) { var_1698005449004_887 } else { Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.Some(var_1698005449004_984) } ;
                    var_1698005449004_749
                
                case (_,_ : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool),_,caseVar_1698005449004_1002,_ : VArray<Unit, $2>,_) => 
                    [var_1698005449004_1006, var_1698005449004_749, ###"|eYIl.XA|I"###, "L:7]p5tGs!", var_1698005449004_1006, var_1698005449004_749, var_1698005449004_749, """
)'^u5
&enSt
""", var_1698005449004_749, ###"d#zZ64 9u1"###];
                    (Option<Range<UInt64>>.None, Int64(-56), var_1698005449004_910, Float64(-32.0), Int32(105));
                    if (var_1698005449004_600) { var_1698005449004_749 } else { """
qnJQ%
sM;IZ
""" } 
                
                case (_,caseVar_1698005449004_1029 : String,_,_,caseVar_1698005449004_1030 : Interface_1698005449004_210,_) => 
                    var_1698005449004_910;
                    if (true) { ###"4!\"(!m.!b\\"### } else { var_1698005449004_1006 } 
                
                case _ => 
                    """
+m3ow
+ZJ$M
"""
                
            }, var_1698005449004_749, (match (var_1698005449004_1049) {
                case caseVar_1698005449004_1053 : Array<VArray<Unit, $3>> => 
                    if (true) { var_1698005449004_1058 } else { var_1698005449004_1058 } 
                
                case _ : VArray<Unit, $1> => 
                    Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.Some(("\"wRMF9Xa{&Y", Class_1698005449004_10<UInt16>(), var_1698005449004_1070, [UInt64(71), UInt64(40), UInt64(20), UInt64(140), UInt64(23), UInt64(228), UInt64(211), UInt64(133), UInt64(5), UInt64(53)], UInt64(109), var_1698005449004_1085));
                    var_1698005449004_1089
                
                case caseVar_1698005449004_1165 : Option<UInt8> => 
                    var var_1698005449004_1169 : UInt16 = UInt16(UInt16(UInt8(96)));
                    var_1698005449004_1169 / ((var_1698005449004_1174) | 1);
                    [UInt64(151), UInt64(58), UInt64(143), UInt64(120), var_1698005449004_955, UInt64(52), var_1698005449004_758, var_1698005449004_758, var_1698005449004_955, var_1698005449004_350];
                    Option<String>.None
                
                case _ => 
                    Option<String>.None
                
            } ?? Option<String>.None.getOrThrow()), try { // block id: 1199
                var_1698005449004_1201;
                let var_1698005449004_1205 : String = "4bt;3LFD:R";
                var_1698005449004_1205
            } finally { // block id: 1207
                ###"ME mmen0oF"###
            }, try { // block id: 1212
                let var_1698005449004_1214 : (VArray<Int64, $2>, Option<Bool>, Float64, String, (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8), VArray<Int64, $2>, Unit) = (VArray<Int64, $2>(repeat: Int64(Int8(-104))), Option<Bool>.None, Float64(Float32(Float32(Float32(-109.0)))), ###"vX4p3b-1xW"###, (###"(TnS,&8Rta{"###, Class_1698005449004_207(), (((UInt16(UInt16(Int8(UInt8(9))))&127)..(UInt16(UInt16(Int8(87)))&127):(Int64(39)|1)) as Bool), [UInt64(Int8(32)), UInt64(UInt8(42)), UInt64(UInt8(227)), UInt64(UInt32(213)), UInt64(Int8(123)), UInt64(UInt64(194)), UInt64(242), UInt64(Int16(88)), UInt64(90), UInt64(207)], UInt64(Int16(Int8(-54))), Int8(UInt8(79))), VArray<Int64, $2>({ i => Int64(65)}), ());
                var_1698005449004_1214
            } finally { // block id: 1265
                (var_1698005449004_1268, var_1698005449004_1070, var_1698005449004_610, "T')k%4Ot-8", (var_1698005449004_749, Class_1698005449004_207(), var_1698005449004_1070, [UInt64(1), UInt64(2), UInt64(171), UInt64(171), UInt64(39), UInt64(71), UInt64(124), UInt64(120), UInt64(202), UInt64(177)], UInt64(240), var_1698005449004_905), var_1698005449004_1268, ())
            }[3], (Int32(-1), var_1698005449004_1006)[1], var_1698005449004_1006, """
!XC9>
Y1B-D
""", "EnY:,D3F8`", try { // block id: 1296
                var_1698005449004_1298
            } finally { // block id: 1337
                Int32(3) & var_1698005449004_248;
                var var_1698005449004_1342 : Float32 = Float32(10.0);
                var_1698005449004_1342;
                (var_1698005449004_1268, Option<Bool>.None, Float64(-23.0), var_1698005449004_749, var_1698005449004_1350, var_1698005449004_1268, ())
            }[3]];
            (Option<Bool>.None ?? try { // block id: 1384
                Option<Float32>.None;
                !true
            } catch (_) { // block id: 1388
                var_1698005449004_468;
                true
            })
        } finally { // block id: 1391
            var_1698005449004_910;
            var var_1698005449004_1584 : Range<UInt32> = ((UInt32(UInt32(Int16(48)))&127)..(UInt32(UInt32(120))&127):(Int64(UInt8(UInt8(61)))|1));
            (if (true) { // block id: 1402
                var_1698005449004_1404
            } else if (true) { // block id: 1414
                [VArray<Unit, $3>(repeat: var_1698005449004_910), var_1698005449004_452, var_1698005449004_452, var_1698005449004_452, var_1698005449004_452, var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452, VArray<Unit, $3>(repeat: ()), var_1698005449004_452];
                if (var_1698005449004_343) { Option<((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>)>.None } else { var_1698005449004_1404 } 
            } else { // block id: 1439
                var_1698005449004_910;
                var_1698005449004_1442;
                if (true) { var_1698005449004_1404 } else { var_1698005449004_1404 } 
            } ?? try { // block id: 1449
                var_1698005449004_248;
                let var_1698005449004_1453 : (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>) = ((Option<String>.Some("""
S>JzC
[Y~Ly
""") as VArray<Unit, $3>), UInt32(Int8(91)), Float32(Float32(61.0)), UInt16(Int8(-40)), Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()})]), ((Int64(Int64(UInt32(UInt16(Int16(UInt16(99))))))&127)..=(Int64(Int64(Int16(Int16(-70))))&127):(Int64(104)|1)));
                let var_1698005449004_1520 : UInt32 = UInt32(54);
                (var_1698005449004_1453, var_1698005449004_343, ((UInt32(UInt32(74))&127)..(UInt32(var_1698005449004_1520)&127):(Int64(-92)|1)))
            } finally { // block id: 1523
                if (var_1698005449004_343) { VArray<Unit, $1>(repeat: var_1698005449004_447) } else { VArray<Unit, $1>({ i => ()}) } ;
                var var_1698005449004_1532 : (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>) = ((Int64(Int64(Int8(UInt8(Int8(-111))))) as VArray<Unit, $3>), UInt32(26), Float32(Float32(120.0)), UInt16(104), (((VArray<Unit, $2>(repeat: ()), Option<Range<UInt8>>.None, Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.Some((" ]9!drM,b3", Class_1698005449004_10<UInt16>(), Option<Bool>.None, [UInt64(76), UInt64(64), UInt64(30), UInt64(70), UInt64(102), UInt64(176), UInt64(106), UInt64(42), UInt64(102), UInt64(248)], UInt64(60), Int8(-97))), VArray<Int8, $8>({ i => Int8(-121)}), (), (), Int16(Int8(-14))) as Bool) as Array<VArray<Unit, $3>>), ((Int64(Int64(63))&127)..=(Int64(Int64(Int32(33)))&127):(Int64(UInt8(53))|1)));
                (var_1698005449004_1532, var_1698005449004_600, var_1698005449004_1584)
            })[1]
        }
    }
;
    let var_1698005449004_1594 : Interface_1698005449004_16 = Class_1698005449004_10<UInt16>();
    func_1698005449004_203(namedParam_1698005449004_204 : var_1698005449004_1594)
}

public func func_1698005449004_160(param_1698005449004_161 : Range<Int8>) : Interface_1698005449004_16 { // block id: 162
    Class_1698005449004_10<UInt16>();
    var var_1698005449004_1597 : (VArray<Int64, $2>) -> Bool = func_1698005449004_194;
    let var_1698005449004_1600 : VArray<Int64, $2> = [Int64(Int64(99)), Int64(-88)];
    let var_1698005449004_1749 : ?Array<VArray<Unit, $3>> = (VArray<Int8, $8>(repeat: Int8(UInt8(Int8(UInt8(Int8(95)))))) as Array<VArray<Unit, $3>>);
    let var_1698005449004_1770 : ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>) = ((Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({ i => ()})), UInt32(Int32(107)), Float32(-101.0), UInt16(118), Option<Array<VArray<Unit, $3>>>.None, ((Int64(Int64(UInt16(70)))&127)..(Int64(Int64(Int32(Int8(32))))&127):(Int64(Int16(UInt8(Int8(-40))))|1))), (UInt64(108) is Class_1698005449004_10<UInt16>), ((UInt32(UInt32(107))&127)..(UInt32(UInt32(86))&127):(Int64(69)|1)));
    ((((Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.None ?? var_1698005449004_184)[2] ?? (var_1698005449004_1600|>var_1698005449004_1597)) as UInt32) ?? UInt32(193) | try { // block id: 1608
        var loopTimeVar_1698005449004_1659 : Int64 = 0;
        while ((var_1698005449004_343) && loopTimeVar_1698005449004_1659 < 100 ) {
            loopTimeVar_1698005449004_1659++;
            let var_1698005449004_1613 : ?UInt32 = (Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ())]) as UInt32);
            var_1698005449004_1613;
            ()
        };
        if (var_1698005449004_343) { var_1698005449004_1663 } else { Option<String>.Some("a{0wPtGj_i*") } ;
        let var_1698005449004_1669 : (String, UInt8, (Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), VArray<Unit, $3>, VArray<Unit, $3>, Bool) = (###")_68o-b),m"###, UInt8(UInt8(71)), (Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({ i => ()})), UInt32(UInt32(Int16(UInt8(Int8(77))))), Float32(-3.0), UInt16(240), ((Class_1698005449004_10<UInt16>() as (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)) as Array<VArray<Unit, $3>>), ((Int64(Int64(-104))&127)..(Int64(Int64(108))&127):(Int64(44)|1))), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), (Option<String>.None is Option<Bool>));
        match (var_1698005449004_1669) {
            case _ : Interface_1698005449004_14 => 
                UInt32(157)
            
            case _ => 
                Int16(-32);
                UInt32(195)
            
            case (caseVar_1698005449004_1712,_ : Option<Range<UInt64>>,caseVar_1698005449004_1713 : Float32,caseVar_1698005449004_1714 : Rune,caseVar_1698005449004_1715 : Option<UInt32>,_) => 
                var_1698005449004_447;
                var_1698005449004_1720 <<= ((var_1698005449004_1720) & 7);
                UInt32(59) & var_1698005449004_279
            
            case caseVar_1698005449004_1733 : UInt32 => 
                var_1698005449004_279
            
            case _ => 
                Option<(String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)>.None;
                ();
                var_1698005449004_279
            
        }
    } catch (_) { // block id: 1742
        (Option<Bool>.None, var_1698005449004_447, var_1698005449004_1749, var_1698005449004_1770, Option<String>.Some("""
4pq&l
.PVhh
"""), ((Int64(Int64(-98))&127)..=(Int64(Int64(-60))&127):(Int64(115)|1)))[1];
        var loopTimeVar_1698005449004_1807 : Int = 0;
        while ((var_1698005449004_343) && loopTimeVar_1698005449004_1807 < 100 ) {
            loopTimeVar_1698005449004_1807++;
            var_1698005449004_111 ^= UInt16(1)
        };
        UInt32(var_1698005449004_1174)
    } finally { // block id: 1810
        match (((UInt16(UInt16(148))&127)..=(UInt16(UInt16(164))&127):(Int64(-114)|1))) {
            case caseVar_1698005449004_1815 : ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>) => 
                var_1698005449004_1818;
                var_1698005449004_279
            
            case _ => 
                var_1698005449004_1720 &= var_1698005449004_368;
                UInt32(61)
            
        }
    });
    var var_1698005449004_1887 : (UInt8, (Option<Bool>, Unit, Option<Array<VArray<Unit, $3>>>, ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>), Option<String>, Range<Int64>), Interface_1698005449004_16, (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8), Interface_1698005449004_16, Option<Range<UInt64>>, ((Option<VArray<Unit, $3>>, UInt32, Float32, UInt16, Option<Array<VArray<Unit, $3>>>, Range<Int64>), Bool, Range<UInt32>)) = (UInt8(UInt8(UInt8(118))), ((((Int32(Int32(96))&127)..=(Int32(Int32(35))&127):(Int64(Int8(74))|1)) as Bool), (), Option<Array<VArray<Unit, $3>>>.Some([VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()})]), ((Option<VArray<Unit, $3>>.None, UInt32(136), Float32(33.0), UInt16(48), (((Int16(Int16(83))&127)..=(Int16(Int16(-50))&127):(Int64(116)|1)) as Array<VArray<Unit, $3>>), ((Int64(Int64(Int16(115)))&127)..(Int64(Int64(UInt8(223)))&127):(Int64(68)|1))), ((["""
^8-o#
W+p,=
""", "KJVtQS` [a", ###"hytQ2RdhOU"###, ###"1K(SP!>0|\\"###, "+C.;Ei#=vJ", "}k\"RHN'a{*,", """
hm5g7
h%Bbg
""", """
a{wxQf
VC=ZI
""", """
9es<[
OSVV@
""", ###"(ze9<)j2de"###] as (String, Interface_1698005449004_16, Option<Bool>, Array<UInt64>, UInt64, Int8)) is Option<Int64>), ((UInt32(UInt32(69))&127)..=(UInt32(UInt32(214))&127):(Int64(-1)|1))), ([VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>(repeat: ()), VArray<Unit, $3>({ i => ()}), VArray<Unit, $3>({ i => ()})] as String), ((Int64(Int64(UInt64(37)))&127)..=(Int64(Int64(Int64(117)))&127):(Int64(Int16(Int16(UInt8(188))))|1))), Class_1698005449004_10<UInt16>(), ("'VdgUBLVY+", Class_1698005449004_207(), (###"`L'a{/aB>|Z"### as Bool), [UInt64(43), UInt64(UInt32(UInt32(UInt8(206)))), UInt64(224), UInt64(UInt64(173)), UInt64(181), UInt64(46), UInt64(UInt8(UInt8(51))), UInt64(239), UInt64(Int32(11)), UInt64(UInt64(Int64(Int32(-39))))], UInt64(245), Int8(64)), Class_1698005449004_10<UInt16>(), Option<Range<UInt64>>.None, ((Option<VArray<Unit, $3>>.Some(VArray<Unit, $3>({ i => ()})), UInt32(47), Float32(23.0), UInt16(253), ([UInt64(147), UInt64(26), UInt64(38), UInt64(252), UInt64(173), UInt64(183), UInt64(178), UInt64(117), UInt64(214), UInt64(102)] as Array<VArray<Unit, $3>>), ((Int64(Int64(-63))&127)..(Int64(Int64(71))&127):(Int64(-78)|1))), true, ((UInt32(UInt32(Int16(86)))&127)..(UInt32(UInt32(169))&127):(Int64(-33)|1))));
    var_1698005449004_1887[4]
}

main(): Int64 {
    try {
        const var_1698005449004_60 : Int8 = 56;
        let var_1698005449004_136 : UInt64 = UInt64(183);
        var var_1698005449004_2120 : VArray<Int64, $2> = [Int64(-28), Int64(7)];
        let var_1698005449004_2124 : Array<String> = ["""
G`eX-
rOV  
""", ###"F/`a:Ww\"JH"###, "Nh.f49UnB`", """
aGd&k
r*1cu
""", "y,ut #ltS-", """
ch#89
8(^]|
""", ###"xfjR`f`YEe"###, "; hD7q]Yqr", "NR>-oYm)@_", ###"dka{Uo?e! 1"###];
        var var_1698005449004_2189 : Bool = false;
        match (if (Class_1698005449004_10<UInt16>.var_1698005449004_22) { // block id: 24
            Float64(Float32(-43.0))
        } else { // block id: 27
            match (true) {
                case _ => 
                    var_1698005449004_34;
                    let var_1698005449004_37 : Int16 = Int16(12);
                    var_1698005449004_37
                
                case caseVar_1698005449004_41 => 
                    Int16(-84)
                
                case false | false => 
                    Int16(-53)
                
                case caseVar_1698005449004_50 => 
                    Int16(52)
                
                case _ => 
                    var_1698005449004_57;
                    var_1698005449004_60;
                    Int16(7) % ((Int16(73)) | 1)
                
            };
            var_1698005449004_66
        }) {
            case 61.0 | 1.0 | -24.0 | -17.0 => 
                var_1698005449004_84[0];
                var var_1698005449004_104 : Int = Int64(111);
                match (UInt16(71)) {
                    case _ => 
                        ();
                        let var_1698005449004_95 : Int = Int64(Int8(UInt8(58)));
                        var_1698005449004_95
                    
                    case _ => 
                        ();
                        var_1698005449004_104
                    
                    case _ => 
                        var_1698005449004_111 ^= UInt16(240);
                        Int64(57)
                    
                }
            
            case caseVar_1698005449004_117 => 
                var_1698005449004_120
            
            case 119.0 => 
                var_1698005449004_57;
                const func func_1698005449004_129<T0>(param_1698005449004_130 : UInt64) : Unit { // block id: 131
                    var_1698005449004_57;
                    var_1698005449004_57;
                    var_1698005449004_57
                }
;
                func_1698005449004_129<UInt8>(var_1698005449004_136);
                var var_1698005449004_141 : VArray<Int64, $2> = [Int64(74), Int64(-20)];
                var_1698005449004_141[1]
            
            case _ => 
                (Option<Int64>.Some(Int64(1)) ?? var_1698005449004_120)
            
        } | try { // block id: 158
            ((Int8(Int8(0))&127)..(Int8(Int8(-57))&127):(Int64(-35)|1))|>func_1698005449004_160;
            var_1698005449004_758;
            let var_1698005449004_2094 : Class_1698005449004_207 = Class_1698005449004_207();
            if (var_1698005449004_343) { // block id: 2080
                const var_1698005449004_2084 : Int = -124;
                var_1698005449004_120 * var_1698005449004_2084
            } else if (try { // block id: 2087
                var_1698005449004_111 %= ((var_1698005449004_1174) | 1);
                false
            } finally { // block id: 2092
                var_1698005449004_2094;
                const var_1698005449004_2097 : Bool = true;
                var_1698005449004_2097
            }) { // block id: 2099
                ();
                Int64(-127) + Int64(-3)
            } else { // block id: 2104
                ();
                var_1698005449004_120 * var_1698005449004_120
            }
        } finally { // block id: 2109
            var_1698005449004_561;
            let var_1698005449004_2131 : ?Range<UInt8> = ("YX_b9|Z<zB" as Range<UInt8>);
            if ((var_1698005449004_2114 is Option<Bool>)) { // block id: 2116
                if (false) { var_1698005449004_2120 } else { var_1698005449004_2120 } ;
                var_1698005449004_2124
            } else if ((false, var_1698005449004_2131, UInt32(188), Class_1698005449004_10<UInt16>())[0]) { // block id: 2137
                var_1698005449004_2139;
                var_1698005449004_2189 &&= var_1698005449004_343;
                [var_1698005449004_2194, ###"BOPL[Q:>cp"###, ###"Gx~LDc!A5?"###, "kX1P*G2}e\\", """
'\\E(B
6Ew3|
""", ")(O!.5l(wv", """
P|x(n
.tEB~
""", var_1698005449004_2194, var_1698005449004_2194, var_1698005449004_2194]
            } else { // block id: 2205
                var_1698005449004_447;
                ["\"y)+>nF)Sy", """
&=$rk
1aJv9
""", """
l520?
\"4P2v
""", ###"|q@_01,Yg\\"###, "?M,[x\"a6/N", """
v|p;c
~/!6i
""", "$X$<7yLV.^", "!ye1J U~HN", """
jk/xz
%a{lF_
""", """
?:v'1
RoF$n
"""]
            };
            Int64(-19)
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1698005449004_60*var_1698005449004_60), 64)
        crccheck.updateBuffer(UInt64(var_1698005449004_136*var_1698005449004_136), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Struct_1698005449004_260 {

}

extend<T0> Class_1698005449004_10<T0> {

}

// ASSERT: scan-120 sema_varray_cjvm_in_ref_type

