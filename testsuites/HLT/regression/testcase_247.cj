/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args


// All global variable need to be defined before use!
public var var_1674913915147_18 : UInt64 = UInt64(UInt64(91))
public var var_1674913915147_63 : Bool = (false is Float32)
public let var_1674913915147_103 : Enum_1674913915147_100 = Enum_1674913915147_100.defaultValue
var var_1674913915147_214 : Array<Enum_1674913915147_100> = [Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue, Enum_1674913915147_100.defaultValue]
var var_1674913915147_280 : (Rune, Float64, Range<UInt8>, Float64, Array<UInt64>, Range<Int64>, String, Array<Unit>, Range<UInt32>) = (r'e', (-104.0), ((UInt8(105)&127)..(UInt8(50)&127):((-96)|1)), Float64(Float64(107.0)), [UInt64(UInt16(252)), UInt64(Int8(76)), UInt64(Int8(UInt8(14))), UInt64(38), UInt64(Int8(101)), UInt64(UInt64(150)), UInt64(92), UInt64(167), UInt64(172), UInt64(186)], ((50&127)..=((-1)&127):((-70)|1)), "gFjsZ\"k)a%", [(), (), (), (), (), (), (), (), (), ()], ((UInt32(241)&127)..(UInt32(Int16(5))&127):((28|1))))
public var var_1674913915147_345 : Int64 = (-124)
public var var_1674913915147_365 : Interface_1674913915147_38 = Class_1674913915147_34()
var var_1674913915147_386 : Int32 = Int32(Int8(Int8(UInt8(14))))
public var var_1674913915147_423 : String = "ay0Q*\\\"BPp"
public let var_1674913915147_461 : Range<UInt64> = ((UInt64(131)&127)..=(UInt64(47)&127):(107|1))
let var_1674913915147_524 : ((Range<Int32>, Bool, Range<Int8>, UInt16, Enum_1674913915147_100, Int64, UInt8), Float64, Array<Bool>) = ((((Int32(-41)&127)..(Int32(20)&127):((-21)|1)), (UInt32(Int16(-21)) is UInt64), ((Int8(122)&127)..=(Int8(-42)&127):(107|1)), UInt16(Int8(-127)), Enum_1674913915147_100.defaultValue, Int64((-48)), UInt8(58)), Float64(Float64(Float32(115.0))), [(Enum_1674913915147_100.defaultValue is Array<UInt64>), true, (UInt64(48) is Int64), false, true, (Float64(Float32(73.0)) is (UInt8, Int32, Bool, UInt32, Bool)), true, (((((Int32(-87)&127)..=(Int32(-3)&127):((-53)|1)), false, ((Int8(-56)&127)..(Int8(-117)&127):(((-70)|1))), UInt16(67), Enum_1674913915147_100.defaultValue, (-112), UInt8(149)), (-112.0), [false, true, false, true, false, false, true, true, false, true]) is Int64), false, (((UInt8(84)&127)..=(UInt8(122)&127):((66|1))) is ((Range<Int32>, Bool, Range<Int8>, UInt16, Enum_1674913915147_100, Int64, UInt8), Float64, Array<Bool>))])
public let var_1674913915147_615 : (Bool, Class_1674913915147_34, Array<UInt64>) = (([UInt64(214), UInt64(237), UInt64(159), UInt64(84), UInt64(148), UInt64(37), UInt64(238), UInt64(177), UInt64(200), UInt64(23)] is (String) -> Int16), Class_1674913915147_34(), [UInt64(96), UInt64(51), UInt64(43), UInt64(193), UInt64(94), UInt64(104), UInt64(77), UInt64(82), UInt64(41), UInt64(19)])
var var_1674913915147_678 : (Array<UInt64>, Float64, Unit) = ([UInt64(224), UInt64(117), UInt64(135), UInt64(108), UInt64(0), UInt64(144), UInt64(22), UInt64(126), UInt64(245), UInt64(57)], Float64(Float32(-39.0)), ())
var var_1674913915147_702 : Unit = ()
public let var_1674913915147_747 : ?UInt16 = Option<UInt16>.None
public var var_1674913915147_786 : Rune = r'2'
public let var_1674913915147_790 : Interface_1674913915147_37 = Class_1674913915147_34()
let var_1674913915147_803 : Class_1674913915147_34 = Class_1674913915147_34()
public let var_1674913915147_966 : ?UInt32 = (true as UInt32)
public interface Interface_1674913915147_38 {
    func func_1674913915147_793() : Rune { // block id: 794
        var var_1674913915147_796 : ?String = Option<String>.None;
        var_1674913915147_796;
        var loopTimeVar_1674913915147_868 : Int64 = 0;
        while ((false) && loopTimeVar_1674913915147_868 < 100 ) {
            loopTimeVar_1674913915147_868++;
            var_1674913915147_803.var_1674913915147_806;
            var loopTimeVar_1674913915147_866 : Int64 = 0;
            while ((true) && loopTimeVar_1674913915147_866 < 100 ) {
                loopTimeVar_1674913915147_866++;
                """
J().<
~a{2;d
""";
                ()
            }
        };
        var_1674913915147_786
    }

}

public interface Interface_1674913915147_37 <: Interface_1674913915147_38 {
    func func_1674913915147_658(namedParam_1674913915147_659 ! : Range<Int8>, namedParam_1674913915147_660 ! : Array<Enum_1674913915147_100>, namedParam_1674913915147_661 ! : Array<Bool>, namedParam_1674913915147_662 ! : Range<Int8>) : Unit { // block id: 663
        let var_1674913915147_689 : Option<(Array<UInt64>, Float64, Unit)> = ([UInt64(110), UInt64(121), UInt64(173), UInt64(141), UInt64(249), UInt64(124), UInt64(210), UInt64(65), UInt64(204), UInt64(238)] as (Array<UInt64>, Float64, Unit));
        let var_1674913915147_698 : Float64 = Float64((-27.0));
        ([Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.Some(var_1674913915147_678), Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.Some(var_1674913915147_678), Option<(Array<UInt64>, Float64, Unit)>.None, var_1674913915147_689, Option<(Array<UInt64>, Float64, Unit)>.Some(var_1674913915147_678), Option<(Array<UInt64>, Float64, Unit)>.Some(([UInt64(17), UInt64(119), UInt64(88), UInt64(242), UInt64(251), UInt64(38), UInt64(127), UInt64(64), UInt64(166), UInt64(37)], var_1674913915147_698, var_1674913915147_702)), Option<(Array<UInt64>, Float64, Unit)>.Some(var_1674913915147_678)][0] ?? var_1674913915147_678)[2]
    }
;
    func func_1674913915147_658(namedParam_1674913915147_514 ! : Int64) : Int16 { // block id: 515
        (((UInt8(124)&127)..=(UInt8(203)&127):((-60)|1)), var_1674913915147_524)[1][0][1];
        var var_1674913915147_637 : Int16 = Int16(-104);
        let var_1674913915147_653 : Bool = false;
        let var_1674913915147_712 : Range<Int8> = ((Int8(22)&127)..(Int8(57)&127):((-100)|1));
        let var_1674913915147_732 : Int8 = Int8(Int8(UInt8(UInt8(99))));
        func_1674913915147_579(namedParam_1674913915147_607 : try { // block id: 632
            ((Int8(82)&127)..=(Int8(-13)&127):(37|1));
            var_1674913915147_615;
            var_1674913915147_637 >> ((var_1674913915147_637) & 7)
        } finally { // block id: 640
            ();
            var var_1674913915147_644 : Float64 = Float64(Float32(-31.0));
            var_1674913915147_644 /= Float64((Int32(var_1674913915147_644)) | 1);
            var_1674913915147_637 + Int16(23)
        }, namedParam_1674913915147_608 : if (var_1674913915147_653) { var_1674913915147_103 } else { Enum_1674913915147_100.defaultValue } ).func_1674913915147_658(namedParam_1674913915147_659 : if (true) { var_1674913915147_712 } else { var_1674913915147_712 } , namedParam_1674913915147_660 : var_1674913915147_214, namedParam_1674913915147_661 : [var_1674913915147_63, false, var_1674913915147_653, var_1674913915147_63, true, true, true, true, var_1674913915147_653, var_1674913915147_653], namedParam_1674913915147_662 : if (false) { var_1674913915147_712 } else { ((var_1674913915147_732&127)..(Int8(-10)&127):((var_1674913915147_345|1))) } );
        Int16(((var_1674913915147_747 as UInt16) ?? UInt16(6)))
    }
;
    func func_1674913915147_43(namedParam_1674913915147_44 ! : Unit, namedParam_1674913915147_45 ! : UInt16, namedParam_1674913915147_46 ! : UInt16) : Float64 

}

public open class Class_1674913915147_34 <: Interface_1674913915147_37 & Interface_1674913915147_38 & Resource {
    public init() { // block id: 36

    }
;
    var var_1674913915147_477 : Int16 = Int16(-79);
    let var_1674913915147_483 : Bool = true;
    public static var var_1674913915147_753 : (Int64, (UInt8, Int32, Bool, UInt32, Bool), (Unit, (UInt8, Int32, Bool, UInt32, Bool)), Int64, Range<Int8>) = ((-64), (UInt8(85), Int32(0), true, UInt32(246), true), ((), (UInt8(32), Int32(75), false, UInt32(41), false)), (-33), ((Int8(58)&127)..=(Int8(-83)&127):(((-81)|1))));
    public prop var_1674913915147_806 : String { // block id: 807
        get() { // block id: 809
            [(([UInt64(178), UInt64(234), UInt64(209), UInt64(14), UInt64(28), UInt64(224), UInt64(13), UInt64(205), UInt64(19), UInt64(191)], (-59.0), ()) is (UInt32, Int64, Int64, (UInt8, Int32, Bool, UInt32, Bool), UInt16, UInt64, Int64)), false, (UInt32(Int8(34)) is Range<Int16>), true, false, ([Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None, Option<(Array<UInt64>, Float64, Unit)>.None] is (Int64, (UInt8, Int32, Bool, UInt32, Bool), (Unit, (UInt8, Int32, Bool, UInt32, Bool)), Int64, Range<Int8>)), (((103&127)..((-64)&127):((-76)|1)) is String), true, ([(), (), (), (), (), (), (), (), (), ()] is Class_1674913915147_34), ((((Int32(27)&127)..(Int32(9)&127):((-101)|1)), false, ((Int8(50)&127)..=(Int8(104)&127):((-17)|1)), UInt16(67), Enum_1674913915147_100.defaultValue, (-95), UInt8(96)) is Range<UInt64>)];
            ();
            """
:gBP^
qY(q 
"""
        }

    };
    public open func func_1674913915147_43(namedParam_1674913915147_44 ! : Unit, namedParam_1674913915147_45 ! : UInt16, namedParam_1674913915147_46 ! : UInt16) : Float64 { // block id: 47
        Float32(97.0);
        (if (false) { Option<Rune>.None } else { Option<Rune>.Some(var_1674913915147_786) }  ?? var_1674913915147_790.func_1674913915147_793())|>{ lambdaParameter_1674913915147_508 : Rune => Class_1674913915147_34().func_1674913915147_658(namedParam_1674913915147_514 : var_1674913915147_753[3]) };
        try { // block id: 871
            [(-118.0), 72.0, (-45.0), (-54.0), 78.0, 24.0, 70.0, 77.0, 126.0, (-10.0)][3]
        } finally { // block id: 876
            var var_1674913915147_880 : Float64 = Float64(Float32(-28.0));
            17.0 + var_1674913915147_880
        }
    }
;
    public func func_1674913915147_793() : Rune { // block id: 794
        var var_1674913915147_796 : ?String = Option<String>.None;
        var_1674913915147_796;
        var loopTimeVar_1674913915147_868 : Int64 = 0;
        while ((false) && loopTimeVar_1674913915147_868 < 100 ) {
            loopTimeVar_1674913915147_868++;
            var_1674913915147_803.var_1674913915147_806;
            var loopTimeVar_1674913915147_866 : Int64 = 0;
            while ((true) && loopTimeVar_1674913915147_866 < 100 ) {
                loopTimeVar_1674913915147_866++;
                """
J().<
~a{2;d
""";
                ()
            }
        };
        var_1674913915147_786
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public enum Enum_1674913915147_100 {
    defaultValue |
    enumValue_1674913915147_352((Range<UInt64>) -> Bool)
}

func func_1674913915147_179<T0>(param_1674913915147_180 : Range<UInt64>) : Bool { // block id: 181
    [false, true, true, true, false, true, true, false, true, true][2]
}

func func_1674913915147_262(param_1674913915147_263 : Bool, optionalParam_1674913915147_264 ! : Interface_1674913915147_37 = Class_1674913915147_34()) : (Int16, Int64, String, Range<Int16>) { // block id: 266
    func func_1674913915147_268(optionalParam_1674913915147_269 ! : String = """
<4mC,
,=)}M
""") : Unit { // block id: 271

    }
;
    func_1674913915147_268();
    var var_1674913915147_273 : Unit = ();
    var_1674913915147_273;
    var var_1674913915147_393 : Int16 = Int16(Int8(Int8(-81)));
    var var_1674913915147_398 : (Int16, Int64, String, Range<Int16>) = (Int16(1), Int64(87), "9&c%INcaT0", ((Int16(65)&127)..=(Int16(-60)&127):((-49)|1)));
    match (match (var_1674913915147_280[4]) {
        case caseVar_1674913915147_326 => 
            if (false) { Enum_1674913915147_100.defaultValue } else { var_1674913915147_103 } 
        
        case _ : Bool => 
            if (true) { var_1674913915147_103 } else { var_1674913915147_103 } 
        
        case _ => 
            ();
            var_1674913915147_345 %= (((-60)) | 1);
            if (var_1674913915147_63) { Enum_1674913915147_100.defaultValue } else { Enum_1674913915147_100.enumValue_1674913915147_352(func_1674913915147_179<Float64>) } 
        
        case caseVar_1674913915147_359 => 
            if (true) { Class_1674913915147_34() } else { var_1674913915147_365 } ;
            var_1674913915147_18++;
            var_1674913915147_103
        
        case _ => 
            ();
            var_1674913915147_273;
            var var_1674913915147_378 : Enum_1674913915147_100 = Enum_1674913915147_100.defaultValue;
            if (var_1674913915147_63) { var_1674913915147_103 } else { var_1674913915147_378 } 
        
    }) {
        case enumValue_1674913915147_352(_) => 
            ((Int32(-113)&127)..(var_1674913915147_386&127):((110|1)));
            var_1674913915147_393;
            var_1674913915147_398
        
        case enumValue_1674913915147_352(caseVar_1674913915147_407 : (Unit, (UInt8, Int32, Bool, UInt32, Bool))) => 
            let var_1674913915147_410 : Unit = ();
            var_1674913915147_410;
            ((Int16(82)&127)..(Int16(95)&127):((79|1)));
            if (true) { var_1674913915147_398 } else { (var_1674913915147_393, 120, var_1674913915147_423, ((Int16(95)&127)..(var_1674913915147_393&127):((var_1674913915147_345|1)))) } 
        
        case enumValue_1674913915147_352(caseVar_1674913915147_431 : Range<UInt64>) => 
            ();
            if (var_1674913915147_63) { var_1674913915147_398 } else { (var_1674913915147_393, 15, ###"7NOg=RyKOk"###, ((var_1674913915147_393&127)..=(var_1674913915147_393&127):((var_1674913915147_345|1)))) } 
        
        case _ => 
            ();
            var var_1674913915147_449 : Interface_1674913915147_37 = Class_1674913915147_34();
            var_1674913915147_449;
            if (true) { (Int16(-122), var_1674913915147_345, var_1674913915147_423, ((Int16(5)&127)..=(Int16(15)&127):((-22)|1))) } else { var_1674913915147_398 } 
        
    }
}

public func func_1674913915147_145(param_1674913915147_146 : String) : Int16 { // block id: 147
    var var_1674913915147_170 : UInt32 = UInt32(Int32(-113));
    try (resource = Class_1674913915147_34()) { // block id: 149
        Option<Unit>.Some(()).getOrThrow();
        [(), (), (), (), (), (), (), (), (), ()][4];
        ((), (UInt8(237), Int32(56), false, var_1674913915147_170, true))[0]
    } finally { // block id: 175

    };
    let var_1674913915147_187 : (Range<UInt64>) -> Bool = { lambdaParameter_1674913915147_190 : Range<UInt64> => ((UInt32(77), (-32), (-116), (UInt8(242), Int32(83), false, UInt32(230), true), UInt16(203), UInt64(59), Int64(UInt32(89))) is Rune) };
    var var_1674913915147_230 : (Range<Int32>, Bool, Range<Int8>, UInt16, Enum_1674913915147_100, Int64, UInt8) = (((Int32(-116)&127)..(Int32(34)&127):((-23)|1)), (Float32(44.0) is Int8), ((Int8(UInt8(Int8(-35)))&127)..(Int8(UInt8(Int8(-88)))&127):((Int64(UInt32(Int8(-84)))|1))), UInt16(126), Enum_1674913915147_100.defaultValue, Int64(UInt32(24)), UInt8(Int8(Int8(-27))));
    match (if ((((var_1674913915147_18&127)..(UInt64(72)&127):((33|1)))|>var_1674913915147_187)) { var_1674913915147_214[4] } else { var_1674913915147_230[4] } ) {
        case _ => 
            var var_1674913915147_256 : Unit = ();
            var_1674913915147_256;
            ()
        
    };
    func_1674913915147_262(func_1674913915147_179<Float64>(var_1674913915147_461), optionalParam_1674913915147_264 : if (true) { Class_1674913915147_34() } else { Class_1674913915147_34() } )[0]
}


public func func_1674913915147_50(param_1674913915147_51 : Rune) : Int16 { // block id: 52
    var_1674913915147_18 ^= try { // block id: 56
        UInt64(76) - var_1674913915147_18
    } finally { // block id: 60
        var_1674913915147_63 ||= var_1674913915147_63;
        UInt64(105)
    };
    let var_1674913915147_74 : (UInt32, Int64, Int64, (UInt8, Int32, Bool, UInt32, Bool), UInt16, UInt64, Int64) = (UInt32(36), Int64(Int16(118)), Int64(Int32(107)), (UInt8(157), Int32(UInt16(110)), true, UInt32(182), true), UInt16(59), UInt64(9), Int64(Int16(-35)));
    let var_1674913915147_97 : Unit = ();
    var loopTimeVar_1674913915147_118 : Array<UInt64> = [UInt64(170), UInt64(10), UInt64(UInt16(197)), UInt64(91), UInt64(Int64(UInt32(84))), UInt64(105), UInt64(96), UInt64(UInt64(6)), UInt64(UInt64(81)), UInt64(7)];
    for (i in loopTimeVar_1674913915147_118 where var_1674913915147_74[3][4]) {
        var_1674913915147_97;
        var var_1674913915147_112 : Rune = r'v';
        match (var_1674913915147_103) {
            case _ => 
                ();
                if (true) { var_1674913915147_112 } else { r'G' } 
            
            case _ => 
                var_1674913915147_112
            
        }
    };
    let var_1674913915147_474 : Class_1674913915147_34 = Class_1674913915147_34();
    let var_1674913915147_496 : Int16 = Int16(Int8(-50));
    if ((var_1674913915147_474.var_1674913915147_483)) { (Option<String>.Some(var_1674913915147_423) ?? "m01QNZY]\"R") } else { (var_1674913915147_496, (-74), "Nhe*,~bSSB", ((Int16(-83)&127)..(Int16(48)&127):(((-42)|1))))[2] } |>{ lambdaParameter_1674913915147_470 : String => var_1674913915147_474.var_1674913915147_477 }
}

func func_1674913915147_579(optionalParam_1674913915147_580 ! : (UInt32, Int64, Int64, (UInt8, Int32, Bool, UInt32, Bool), UInt16, UInt64, Int64) = (UInt32(UInt16(UInt8(Int8(116)))), 87, (-57), (UInt8(93), Int32(93), false, UInt32(185), (Int8(UInt8(21)) is Range<UInt16>)), UInt16(Int16(UInt16(UInt16(22)))), UInt64(186), Int64(UInt64(121))), optionalParam_1674913915147_603 ! : (Range<UInt64>) -> Bool = func_1674913915147_179<Float64>, namedParam_1674913915147_607 ! : Int16, namedParam_1674913915147_608 ! : Enum_1674913915147_100) : Class_1674913915147_34 { // block id: 609
    var var_1674913915147_625 : Class_1674913915147_34 = Class_1674913915147_34();
    let var_1674913915147_628 : Array<UInt64> = [UInt64(99), UInt64(72), UInt64(49), UInt64(203), UInt64(248), UInt64(252), UInt64(149), UInt64(78), UInt64(155), UInt64(249)];
    try { // block id: 613
        var_1674913915147_615
    } finally { // block id: 621
        (true, var_1674913915147_625, var_1674913915147_628)
    }[1]
}





main(): Int64 {
    try {
        let var_1674913915147_40 : Class_1674913915147_34 = Class_1674913915147_34();
        let var_1674913915147_899 : (Rune, Float64, Range<UInt8>, Float64, Array<UInt64>, Range<Int64>, String, Array<Unit>, Range<UInt32>) = (r'X', Float64((-13.0)), ((UInt8(40)&127)..(UInt8(151)&127):((-73)|1)), 67.0, [UInt64(UInt32(98)), UInt64(UInt8(235)), UInt64(UInt16(205)), UInt64(118), UInt64(UInt64(UInt32(39))), UInt64(127), UInt64(103), UInt64(Int16(-53)), UInt64(UInt32(99)), UInt64(45)], ((Int64(UInt32(29))&127)..(111&127):((Int64(Int16(Int16(-85)))|1))), "ag$bqI!m}G", [(), (), (), (), (), (), (), (), (), ()], ((UInt32(214)&127)..=(UInt32(101)&127):((81|1))));
        let var_1674913915147_938 : UInt16 = UInt16(Int16(Int16(UInt16(UInt8(23)))));
        func func_1674913915147_7(param_1674913915147_8 : UInt32, param_1674913915147_9 : Float32, param_1674913915147_10 : UInt64, optionalParam_1674913915147_11 ! : Int64 = Int64(UInt64(117))) : Unit { // block id: 15
            let var_1674913915147_25 : Int64 = 8;
            var_1674913915147_18 ^= try { // block id: 22
                ();
                var_1674913915147_25;
                UInt64(97) << ((UInt64(235)) & 7)
            } finally { // block id: 30
                ();
                var_1674913915147_18
            };
            var loopTimeVar_1674913915147_893 : Int64 = 0;
            var_1674913915147_40.func_1674913915147_43(namedParam_1674913915147_44 : do {
                loopTimeVar_1674913915147_893++;
                var var_1674913915147_888 : UInt64 = UInt64(UInt32(87));
                var_1674913915147_888 *= var_1674913915147_888
            } while ((var_1674913915147_63) && loopTimeVar_1674913915147_893 < 100 ) , namedParam_1674913915147_45 : UInt16(227), namedParam_1674913915147_46 : try { // block id: 896
                [(-48.0), 66.0, (-92.0), 95.0, 26.0, (-128.0), 78.0, (-54.0), 96.0, (-78.0)];
                var_1674913915147_899;
                var_1674913915147_938
            } finally { // block id: 944
                if (var_1674913915147_63) { Class_1674913915147_34() } else { var_1674913915147_790 } ;
                var_1674913915147_938
            });
            var loopTimeVar_1674913915147_954 : Range<UInt64> = ((UInt64(196)&127)..=(UInt64(84)&127):((Int64(Int8(122))|1)));
            for (i in loopTimeVar_1674913915147_954 where var_1674913915147_63) {
                ((UInt32(50)&127)..(UInt32(74)&127):((-70)|1))
            }
        }
;
        func_1674913915147_7((var_1674913915147_966 ?? UInt32(118)), Float32(Float32(5.0)), if (true) { // block id: 974
            UInt64(251) + var_1674913915147_18
        } else if (false) { // block id: 979
            ();
            UInt64(183) + var_1674913915147_18
        } else { // block id: 984
            [(-45.0), (-9.0), (-95.0), 78.0, 114.0, (-41.0), 25.0, (-66.0), (-112.0), (-38.0)];
            UInt64(58)
        });
        if (var_1674913915147_63) { // block id: 989
            ();
            ();
            (-46)
        } else { // block id: 993
            ();
            101
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1674913915147_938*var_1674913915147_938), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
