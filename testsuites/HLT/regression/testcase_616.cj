/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public var var_1714989900571_85 : UInt32 = UInt32(Int8(UInt8(UInt8(UInt8(128)))))
var var_1714989900571_132 : (Range<Int64>, Unit, Rune) = (((Int64(Int64(UInt8(49)))&127)..(Int64(Int64(16))&127):(Int64(UInt32(UInt32(49)))|1)), (), r'w')
const var_1714989900571_210 : UInt = 200
public let var_1714989900571_255 : Range<Int64> = ((Int64(Int64(101))&127)..(Int64(Int64(-38))&127):(Int64(-76)|1))
let var_1714989900571_299 : Int32 = Int32(-75)
public var var_1714989900571_303 : Int = Int64(UInt16(Int16(89)))
let var_1714989900571_308 : Option<Option<Interface_1714989900571_11>> = Option<Option<Interface_1714989900571_11>>.None
var var_1714989900571_316 : Interface_1714989900571_11 = Class_1714989900571_5<Int8, UInt32>()
public let var_1714989900571_384 : Class_1714989900571_380 = Class_1714989900571_380()
let var_1714989900571_446 : Option<Option<Interface_1714989900571_11>> = Option<Option<Interface_1714989900571_11>>.None
public var var_1714989900571_484 : Bool = (((UInt64(UInt64(231))&127)..=(UInt64(UInt64(152))&127):(Int64(86)|1)) is UInt64)
public let var_1714989900571_522 : Option<Option<Range<Int64>>> = Option<Option<Range<Int64>>>.None
public const var_1714989900571_600 : Float32 = -127.0
var var_1714989900571_609 : Range<UInt32> = ((UInt32(UInt32(247))&127)..(UInt32(UInt32(91))&127):(Int64(-78)|1))
public var var_1714989900571_623 : Range<Int16> = ((Int16(Int16(113))&127)..=(Int16(Int16(8))&127):(Int64(-25)|1))
let var_1714989900571_634 : ?Int64 = (((UInt16(UInt16(74))&127)..=(UInt16(UInt16(143))&127):(Int64(-73)|1)) as Int64)
public var var_1714989900571_662 : Int16 = Int16(Int16(UInt8(Int8(30))))
public let var_1714989900571_677 : VArray<Unit, $7> = [(), (), (), (), (), (), ()]
public let var_1714989900571_701 : Array<UInt64> = [UInt64(109), UInt64(Int8(Int8(-13))), UInt64(72), UInt64(Int8(Int8(119))), UInt64(195), UInt64(UInt32(UInt8(UInt8(3)))), UInt64(145), UInt64(Int32(-41)), UInt64(Int16(UInt16(199))), UInt64(245)]
public const var_1714989900571_736 : Unit = ()
var var_1714989900571_799 : Rune = r'R'
let var_1714989900571_863 : Array<Option<Bool>> = [Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, (Int64(Int8(Int8(-118))) as Bool), ([Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, (((Int64(Int64(84))&127)..(Int64(Int64(-51))&127):(Int64(-26)|1)) as Bool), Option<Bool>.None, (() as Bool), ((UInt32(158), UInt16(252), ((UInt16(UInt16(66))&127)..=(UInt16(UInt16(17))&127):(Int64(113)|1)), ((Int32(Int32(6))&127)..(Int32(Int32(83))&127):(Int64(39)|1)), Option<Option<Interface_1714989900571_11>>.None) as Bool)] as Bool), Option<Bool>.None, (UInt64(114) as Bool), Option<Bool>.None, ((Int16(UInt8(169)) as Float32) as Bool), (Int8(UInt8(87)) as Bool)]
public let var_1714989900571_1003 : Range<UInt16> = ((UInt16(UInt16(124))&127)..=(UInt16(UInt16(242))&127):(Int64(101)|1))
public let var_1714989900571_1091 : ?Bool = (Class_1714989900571_5<Int8, UInt32>() as Bool)
const var_1714989900571_1158 : Int64 = -68
let var_1714989900571_1178 : (Option<Bool>, Int32, Range<UInt64>, Option<Range<Int8>>, (Option<(Int64, Array<Bool>, UInt32)>, UInt64, Range<Int8>, Unit, (Range<Int64>, Unit, Rune), Interface_1714989900571_11), Option<Bool>, Interface_1714989900571_11) = (Option<Bool>.None, Int32(-62), ((UInt64(UInt64(156))&127)..=(UInt64(UInt64(Int32(UInt16(241))))&127):(Int64(7)|1)), (Option<Option<Interface_1714989900571_11>>.None as Range<Int8>), (Option<(Int64, Array<Bool>, UInt32)>.None, UInt64(UInt8(166)), ((Int8(Int8(Int8(-59)))&127)..(Int8(Int8(-13))&127):(Int64(-105)|1)), (), (((Int64(Int64(39))&127)..(Int64(Int64(-86))&127):(Int64(13)|1)), (), r'u'), Class_1714989900571_496<Int32, Option<Range<Int64>>>()), Option<Bool>.None, Class_1714989900571_380())
sealed public interface Interface_1714989900571_8 {

}

sealed public interface Interface_1714989900571_11 {
    func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }

}

public interface Interface_1714989900571_10<T0, T1> <: Interface_1714989900571_11 {
    func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }

}

sealed public interface Interface_1714989900571_9 <: Interface_1714989900571_10<Int32, Float64> {
    func func_1714989900571_387(namedParam_1714989900571_388 ! : Range<UInt32>, namedParam_1714989900571_389 ! : Unit, namedParam_1714989900571_390 ! : Range<Int16>, namedParam_1714989900571_391 ! : Int64) : Option<Range<Int64>> { // block id: 392
        let var_1714989900571_557 : Option<(Range<Int64>, Unit, Rune)> = Option<(Range<Int64>, Unit, Rune)>.Some((((Int64(Int64(80))&127)..=(Int64(Int64(UInt32(7)))&127):(Int64(UInt32(23))|1)), (), r'y'));
        let var_1714989900571_578 : Unit = ();
        func_1714989900571_394(((Option<Option<(Range<Int64>, Unit, Rune)>>.None ?? var_1714989900571_557) ?? var_1714989900571_132), namedParam_1714989900571_396 : (var_1714989900571_557 ?? (((Int64(Int64(115))&127)..=(Int64(Int64(-19))&127):(var_1714989900571_303|1)), var_1714989900571_578, r'4'))[2], optionalParam_1714989900571_397 : (Option<Float32>.Some(Float32(-45.0)) ?? if (true) { // block id: 591
            if (true) { ((Int64(Int64(124))&127)..(Int64(var_1714989900571_303)&127):(var_1714989900571_303|1)) } else { ((Int64(Int64(-82))&127)..(Int64(Int64(-3))&127):(Int64(60)|1)) } ;
            var_1714989900571_600
        } else if (var_1714989900571_484) { // block id: 603
            Float32(-102.0)
        } else { // block id: 605
            var_1714989900571_522;
            Float32(113.0)
        }))
    }
;
    func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }

}

public open class Class_1714989900571_5<T0, T1> <: Interface_1714989900571_8 & Interface_1714989900571_9 & Resource {
    public init() { // block id: 7

    }
;
    var var_1714989900571_159 : Unit = ();
    private init(namedParam_1714989900571_108 ! : Bool) { // block id: 109
        var var_1714989900571_727 : UInt16 = UInt16(Int16(Int8(-66)));
        var var_1714989900571_743 : UInt16 = UInt16(Int8(-63));
        let var_1714989900571_761 : UInt64 = UInt64(UInt16(Int16(Int16(UInt16(165)))));
        match ((UInt16(200) << ((var_1714989900571_727) & 7)|>func_1714989900571_112)) {
            case caseVar_1714989900571_733 => 
                var_1714989900571_736
            
            case caseVar_1714989900571_740 : Option<Int64> => 
                var_1714989900571_743;
                var_1714989900571_736;
                ()
            
            case _ : Array<Unit> => 
                [var_1714989900571_210, UInt64(96), UInt64(178), UInt64(9), UInt64(229), UInt64(51), var_1714989900571_210, var_1714989900571_210, var_1714989900571_761, UInt64(84)];
                if (var_1714989900571_484) { VArray<Unit, $7>(repeat: var_1714989900571_736) } else { VArray<Unit, $7>(repeat: var_1714989900571_736) } ;
                var_1714989900571_736
            
            case caseVar_1714989900571_789 : Unit => 
                var_1714989900571_727 -= UInt16(57)
            
            case _ => 
                ()
            
        };
        var_1714989900571_799;
        var var_1714989900571_818 : Option<(Range<Int64>, Unit, Rune)> = ([UInt64(61), UInt64(105), UInt64(185), UInt64(196), UInt64(88), UInt64(246), UInt64(150), UInt64(190), UInt64(62), UInt64(173)] as (Range<Int64>, Unit, Rune));
        let var_1714989900571_844 : Range<Int8> = ((Int8(Int8(Int8(UInt8(Int8(-30)))))&127)..=(Int8(Int8(Int8(UInt8(UInt8(62)))))&127):(Int64(-96)|1));
        if (match ((Option<Option<Option<Bool>>>.None ?? Option<Option<Bool>>.Some(Option<Bool>.Some(var_1714989900571_484)))) {
            case _ : UInt8 => 
                if (var_1714989900571_484) { var_1714989900571_818 } else { Option<(Range<Int64>, Unit, Rune)>.None } ;
                false
            
            case caseVar_1714989900571_825 : UInt16 => 
                ((Int32(Int32(106))&127)..(Int32(Int32(4))&127):(Int64(44)|1));
                false
            
            case _ => 
                var_1714989900571_623;
                var_1714989900571_799;
                var_1714989900571_484
            
        }) { // block id: 835
            (Option<Range<Int8>>.Some(((Int8(Int8(109))&127)..(Int8(Int8(40))&127):(Int64(-72)|1))) ?? var_1714989900571_844)
        } else if ((var_1714989900571_863[2] ?? var_1714989900571_484)) { // block id: 905
            var_1714989900571_701;
            let var_1714989900571_918 : Unit = ();
            [var_1714989900571_818, var_1714989900571_818, var_1714989900571_818, var_1714989900571_818, Option<(Range<Int64>, Unit, Rune)>.Some((var_1714989900571_255, var_1714989900571_918, var_1714989900571_799)), Option<(Range<Int64>, Unit, Rune)>.Some(var_1714989900571_132), Option<(Range<Int64>, Unit, Rune)>.None, Option<(Range<Int64>, Unit, Rune)>.Some(var_1714989900571_132), Option<(Range<Int64>, Unit, Rune)>.Some((((Int64(Int64(1))&127)..=(Int64(Int64(-31))&127):(Int64(-80)|1)), (), var_1714989900571_799)), var_1714989900571_818][7];
            [((Int8(Int8(67))&127)..(Int8(Int8(37))&127):(Int64(-57)|1)), ((Int8(Int8(16))&127)..(Int8(Int8(-81))&127):(Int64(-65)|1)), ((Int8(Int8(55))&127)..=(Int8(Int8(-21))&127):(Int64(-97)|1)), ((Int8(Int8(-109))&127)..=(Int8(Int8(41))&127):(Int64(-11)|1)), ((Int8(Int8(22))&127)..=(Int8(Int8(104))&127):(Int64(-25)|1)), ((Int8(Int8(-93))&127)..=(Int8(Int8(78))&127):(Int64(-114)|1)), ((Int8(Int8(82))&127)..=(Int8(Int8(124))&127):(Int64(-112)|1)), ((Int8(Int8(-45))&127)..=(Int8(Int8(107))&127):(Int64(-33)|1)), ((Int8(Int8(-106))&127)..=(Int8(Int8(69))&127):(Int64(122)|1)), ((Int8(Int8(10))&127)..(Int8(Int8(62))&127):(Int64(-79)|1))][7]
        } else { // block id: 937
            var loopTimeVar_1714989900571_945 : Int = 0;
            while ((false) && loopTimeVar_1714989900571_945 < 100 ) {
                loopTimeVar_1714989900571_945++;
                var var_1714989900571_942 : ?Option<(Range<Int64>, Unit, Rune)> = Option<Option<(Range<Int64>, Unit, Rune)>>.None;
                var_1714989900571_942
            };
            var var_1714989900571_952 : ?Array<Option<(Range<Int64>, Unit, Rune)>> = Option<Array<Option<(Range<Int64>, Unit, Rune)>>>.None;
            (var_1714989900571_952 ?? [Option<(Range<Int64>, Unit, Rune)>.None, var_1714989900571_818, var_1714989900571_818, Option<(Range<Int64>, Unit, Rune)>.None, var_1714989900571_818, var_1714989900571_818, Option<(Range<Int64>, Unit, Rune)>.Some(var_1714989900571_132), var_1714989900571_818, Option<(Range<Int64>, Unit, Rune)>.None, Option<(Range<Int64>, Unit, Rune)>.None]);
            if (false) { // block id: 968
                var_1714989900571_844
            } else { // block id: 970
                ();
                var var_1714989900571_977 : Int8 = Int8(-72);
                if (var_1714989900571_484) { ((Int8(Int8(73))&127)..=(Int8(Int8(-91))&127):(Int64(73)|1)) } else { ((Int8(var_1714989900571_977)&127)..=(Int8(Int8(97))&127):(Int64(-66)|1)) } 
            }
        }
    }
;
    init(param_1714989900571_16 : UInt16, namedParam_1714989900571_17 ! : Float64, namedParam_1714989900571_18 ! : Int16, optionalParam_1714989900571_19 ! : Int64 = Int64(-86)) { // block id: 21
        const var_1714989900571_35 : Unit = ();
        var loopTimeVar_1714989900571_39 : Int64 = 0;
        while ((true) && loopTimeVar_1714989900571_39 < 100 ) {
            loopTimeVar_1714989900571_39++;
            break;
            if (false) { // block id: 28
                ();
                const var_1714989900571_31 : Bool = false;
                var_1714989900571_31
            } else { // block id: 33
                var_1714989900571_35;
                false
            }
        };
        let var_1714989900571_49 : Bool = (UInt32(37) is Interface_1714989900571_11);
        let var_1714989900571_1022 : Range<UInt8> = ((UInt8(UInt8(UInt8(Int8(Int8(-5)))))&127)..(UInt8(UInt8(154))&127):(Int64(-47)|1));
        try { // block id: 41
            (Option<Bool>.None ?? var_1714989900571_49)
        } finally { // block id: 52
            var var_1714989900571_1127 : ((Range<Int64>, Unit, Rune), Rune, Float32) -> Option<Range<Int64>> = func_1714989900571_394;
            Class_1714989900571_380([true, true, false, false, true, true, true, false, true, true], namedParam_1714989900571_1069 : var_1714989900571_1127, namedParam_1714989900571_1074 : var_1714989900571_1003)|>{ lambdaParameter_1714989900571_102 : Interface_1714989900571_11 => if (func_1714989900571_54<UInt8>(Class_1714989900571_5<Int8, UInt32>(namedParam_1714989900571_108 : var_1714989900571_484))) { // block id: 982
                var_1714989900571_600;
                try { // block id: 985
                    let var_1714989900571_987 : Range<UInt16> = ((UInt16(UInt16(Int16(Int8(-32))))&127)..=(UInt16(UInt16(Int16(8)))&127):(Int64(UInt32(UInt8(Int8(64))))|1));
                    var_1714989900571_987
                } catch (e: Exception) { // block id: 998
                    var_1714989900571_736;
                    if (true) { var_1714989900571_1003 } else { var_1714989900571_1003 } 
                } finally { // block id: 1006
                    if (true) { var_1714989900571_1003 } else { ((UInt16(UInt16(58))&127)..=(UInt16(UInt16(44))&127):(Int64(8)|1)) } 
                };
                true
            } else if (match (UInt64(Int8(-109))) {
                case _ => 
                    if (var_1714989900571_49) { ((UInt8(UInt8(51))&127)..(UInt8(UInt8(194))&127):(Int64(74)|1)) } else { var_1714989900571_1022 } ;
                    var var_1714989900571_1032 : Byte = UInt8(30);
                    var_1714989900571_1032 /= ((UInt8(239)) | 1);
                    true
                
            }) { // block id: 1036
                var loopTimeVar_1714989900571_1048 : Int = 0;
                do {
                    loopTimeVar_1714989900571_1048++;
                    if (var_1714989900571_49) { ((UInt64(UInt64(152))&127)..(UInt64(UInt64(213))&127):(Int64(-94)|1)) } else { ((UInt64(UInt64(234))&127)..(UInt64(UInt64(31))&127):(Int64(126)|1)) } ;
                    UInt64(230) ^ UInt64(90)
                } while ((false) && loopTimeVar_1714989900571_1048 < 100 ) ;
                (Option<Range<UInt32>>.Some(((UInt32(UInt32(184))&127)..(UInt32(UInt32(205))&127):(Int64(-43)|1))) ?? var_1714989900571_609);
                (Option<Bool>.Some(var_1714989900571_49) ?? var_1714989900571_484)
            } else { // block id: 1061
                [true, false, false, true, false, false, false, true, true, false][2]
            } }
        }
    }
;
    public open override func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }
;
    public open override func func_1714989900571_387(namedParam_1714989900571_388 ! : Range<UInt32>, namedParam_1714989900571_389 ! : Unit, namedParam_1714989900571_390 ! : Range<Int16>, namedParam_1714989900571_391 ! : Int64) : Option<Range<Int64>> { // block id: 392
        let var_1714989900571_557 : Option<(Range<Int64>, Unit, Rune)> = Option<(Range<Int64>, Unit, Rune)>.Some((((Int64(Int64(80))&127)..=(Int64(Int64(UInt32(7)))&127):(Int64(UInt32(23))|1)), (), r'y'));
        let var_1714989900571_578 : Unit = ();
        func_1714989900571_394(((Option<Option<(Range<Int64>, Unit, Rune)>>.None ?? var_1714989900571_557) ?? var_1714989900571_132), namedParam_1714989900571_396 : (var_1714989900571_557 ?? (((Int64(Int64(115))&127)..=(Int64(Int64(-19))&127):(var_1714989900571_303|1)), var_1714989900571_578, r'4'))[2], optionalParam_1714989900571_397 : (Option<Float32>.Some(Float32(-45.0)) ?? if (true) { // block id: 591
            if (true) { ((Int64(Int64(124))&127)..(Int64(var_1714989900571_303)&127):(var_1714989900571_303|1)) } else { ((Int64(Int64(-82))&127)..(Int64(Int64(-3))&127):(Int64(60)|1)) } ;
            var_1714989900571_600
        } else if (var_1714989900571_484) { // block id: 603
            Float32(-102.0)
        } else { // block id: 605
            var_1714989900571_522;
            Float32(113.0)
        }))
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


func func_1714989900571_54<T0>(param_1714989900571_55 : Interface_1714989900571_11) : Bool { // block id: 56
    let var_1714989900571_75 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    let var_1714989900571_95 : UInt16 = UInt16(Int8(Int8(71)));
    try { // block id: 58
        (Option<Bool>.None ?? true)
    } catch (_) { // block id: 62
        var_1714989900571_75[2];
        let var_1714989900571_81 : Range<UInt32> = ((UInt32(UInt32(118))&127)..=(UInt32(UInt32(40))&127):(Int64(-76)|1));
        if (true) { var_1714989900571_81 } else { ((UInt32(var_1714989900571_85)&127)..(UInt32(UInt32(109))&127):(Int64(-90)|1)) } ;
        var_1714989900571_95 == UInt16(55)
    }
}


func func_1714989900571_145(optionalParam_1714989900571_146 ! : Array<UInt64> = [UInt64(117), UInt64(230), UInt64(216), UInt64(62), UInt64(228), UInt64(212), UInt64(233), UInt64(87), UInt64(120), UInt64(93)], namedParam_1714989900571_148 ! : Unit, optionalParam_1714989900571_149 ! : Unit = (), optionalParam_1714989900571_151 ! : Array<UInt64> = [UInt64(172), UInt64(238), UInt64(49), UInt64(131), UInt64(238), UInt64(100), UInt64(38), UInt64(251), UInt64(251), UInt64(148)]) : Range<Int64> { // block id: 153
    let var_1714989900571_156 : Class_1714989900571_5<Int8, UInt32> = Class_1714989900571_5<Int8, UInt32>();
    var_1714989900571_156.var_1714989900571_159;
    let var_1714989900571_162 : Range<Int64> = ((Int64(Int64(-55))&127)..(Int64(Int64(-117))&127):(Int64(44)|1));
    var_1714989900571_162
}

func func_1714989900571_120<T0>(param_1714989900571_121 : Range<Int64>) : Range<Int64> { // block id: 122
    let var_1714989900571_167 : Array<UInt64> = [UInt64(210), UInt64(UInt16(Int16(Int8(-119)))), UInt64(Int32(UInt32(246))), UInt64(173), UInt64(1), UInt64(UInt64(Int64(76))), UInt64(Int16(-32)), UInt64(221), UInt64(UInt64(141)), UInt64(165)];
    let var_1714989900571_192 : VArray<Unit, $7> = [(), (), (), (), (), (), ()];
    let var_1714989900571_205 : Unit = ();
    ((var_1714989900571_132[0] as Range<Int64>) ?? func_1714989900571_145(optionalParam_1714989900571_146 : if (false) { var_1714989900571_167 } else { [UInt64(68), UInt64(247), UInt64(212), UInt64(40), UInt64(116), UInt64(236), UInt64(37), UInt64(193), UInt64(197), UInt64(128)] } , namedParam_1714989900571_148 : var_1714989900571_192[4], optionalParam_1714989900571_151 : try { // block id: 203
        var_1714989900571_205;
        Int64(-77);
        [var_1714989900571_210, var_1714989900571_210, UInt64(146), var_1714989900571_210, var_1714989900571_210, UInt64(63), var_1714989900571_210, UInt64(109), UInt64(36), UInt64(181)]
    } finally { // block id: 221
        var_1714989900571_205;
        Class_1714989900571_5<Int8, UInt32>();
        const var_1714989900571_248 : UInt64 = 91;
        if (true) { [UInt64(46), UInt64(64), UInt64(194), UInt64(78), var_1714989900571_210, UInt64(141), var_1714989900571_210, var_1714989900571_210, UInt64(226), var_1714989900571_210] } else { [UInt64(44), var_1714989900571_210, var_1714989900571_210, var_1714989900571_210, var_1714989900571_210, UInt64(177), var_1714989900571_210, var_1714989900571_210, UInt64(206), var_1714989900571_248] } 
    }))
}



func func_1714989900571_259<T0>(optionalParam_1714989900571_260 ! : Float32 = Float32(-96.0), optionalParam_1714989900571_262 ! : Range<Int32> = ((Int32(Int32(-49))&127)..=(Int32(Int32(UInt8(UInt8(178))))&127):(Int64(-33)|1)), namedParam_1714989900571_269 ! : (Interface_1714989900571_11) -> Bool) : Interface_1714989900571_11 { // block id: 272
    let var_1714989900571_289 : Range<UInt16> = ((UInt16(UInt16(159))&127)..=(UInt16(UInt16(115))&127):(Int64(Int8(UInt8(Int8(-28))))|1));
    let var_1714989900571_312 : ?Interface_1714989900571_11 = Option<Interface_1714989900571_11>.Some(Class_1714989900571_5<Int8, UInt32>());
    (((UInt32(90), UInt16(18), var_1714989900571_289, ((Int32(var_1714989900571_299)&127)..(Int32(Int32(-63))&127):(var_1714989900571_303|1)), var_1714989900571_308)[4] ?? var_1714989900571_312) ?? var_1714989900571_316)
}

public open class Class_1714989900571_380 <: Class_1714989900571_5<Int8, UInt32> & Interface_1714989900571_8 {
    public init() { // block id: 382

    }
;
    public init(param_1714989900571_1068 : Array<Bool>, namedParam_1714989900571_1069 ! : ((Range<Int64>, Unit, Rune), Rune, Float32) -> Option<Range<Int64>>, namedParam_1714989900571_1074 ! : Range<UInt16>) { // block id: 1075
        let var_1714989900571_1084 : Option<Range<Int8>> = (Option<Float32>.None as Range<Int8>);
        var loopTimeVar_1714989900571_1097 : Range<UInt64> = ((UInt64(UInt64(243))&127)..=(UInt64(UInt64(UInt64(11)))&127):(Int64(UInt16(22))|1));
        (((var_1714989900571_1084 ?? ((Int8(Int8(58))&127)..=(Int8(Int8(-48))&127):(Int64(56)|1))) as Unit) ?? for (i in loopTimeVar_1714989900571_1097 where (var_1714989900571_1091 ?? true)) {
            var_1714989900571_736
        });
        let var_1714989900571_1107 : (Range<Int8>, Option<Int64>, Float64, Option<Option<(Range<Int64>, Unit, Rune)>>, Unit, Unit, Range<UInt32>) = (((Int8(Int8(Int8(Int8(-102))))&127)..(Int8(Int8(8))&127):(Int64(UInt16(173))|1)), Option<Int64>.Some(Int64(-120)), Float64(-88.0), (Option<Float32>.None as Option<(Range<Int64>, Unit, Rune)>), (), (), ((UInt32(UInt32(24))&127)..(UInt32(UInt32(123))&127):(Int64(-31)|1)));
        var_1714989900571_1107[4]
    }
;
    public open override func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }
;
    public open override func func_1714989900571_387(namedParam_1714989900571_388 ! : Range<UInt32>, namedParam_1714989900571_389 ! : Unit, namedParam_1714989900571_390 ! : Range<Int16>, namedParam_1714989900571_391 ! : Int64) : Option<Range<Int64>> { // block id: 392
        let var_1714989900571_557 : Option<(Range<Int64>, Unit, Rune)> = Option<(Range<Int64>, Unit, Rune)>.Some((((Int64(Int64(80))&127)..=(Int64(Int64(UInt32(7)))&127):(Int64(UInt32(23))|1)), (), r'y'));
        let var_1714989900571_578 : Unit = ();
        func_1714989900571_394(((Option<Option<(Range<Int64>, Unit, Rune)>>.None ?? var_1714989900571_557) ?? var_1714989900571_132), namedParam_1714989900571_396 : (var_1714989900571_557 ?? (((Int64(Int64(115))&127)..=(Int64(Int64(-19))&127):(var_1714989900571_303|1)), var_1714989900571_578, r'4'))[2], optionalParam_1714989900571_397 : (Option<Float32>.Some(Float32(-45.0)) ?? if (true) { // block id: 591
            if (true) { ((Int64(Int64(124))&127)..(Int64(var_1714989900571_303)&127):(var_1714989900571_303|1)) } else { ((Int64(Int64(-82))&127)..(Int64(Int64(-3))&127):(Int64(60)|1)) } ;
            var_1714989900571_600
        } else if (var_1714989900571_484) { // block id: 603
            Float32(-102.0)
        } else { // block id: 605
            var_1714989900571_522;
            Float32(113.0)
        }))
    }

}

public func func_1714989900571_403(optionalParam_1714989900571_404 ! : Int32 = Int32(82), namedParam_1714989900571_406 ! : Float32, optionalParam_1714989900571_407 ! : VArray<Unit, $7> = VArray<Unit, $7>({ i => ()})) : Unit { // block id: 416
    var var_1714989900571_418 : ?Interface_1714989900571_11 = Option<Interface_1714989900571_11>.Some(Class_1714989900571_380());
    var_1714989900571_418;
    const var_1714989900571_425 : Bool = true;
    let var_1714989900571_429 : Unit = ();
    var var_1714989900571_432 : VArray<Unit, $7> = [(), (), (), (), (), (), ()];
    try (resource = Class_1714989900571_5<Int8, UInt32>()) { // block id: 422
        var loopTimeVar_1714989900571_442 : Int = 0;
        do {
            loopTimeVar_1714989900571_442++;
            var_1714989900571_429;
            var_1714989900571_432
        } while ((var_1714989900571_425) && loopTimeVar_1714989900571_442 < 100 ) 
    } catch (e: Exception) { // block id: 443
        match (var_1714989900571_446) {
            case caseVar_1714989900571_450 => 
                Int32(78);
                var var_1714989900571_455 : UInt16 = UInt16(UInt16(57));
                var_1714989900571_455 >>= ((var_1714989900571_455) & 7)
            
            case _ => 
                ()
            
        }
    } finally { // block id: 463

    }
}

public open class Class_1714989900571_496<T0, T1> <: Class_1714989900571_5<Int8, UInt32> {
    public init() { // block id: 498

    }
;
    static prop var_1714989900571_501 : String { // block id: 502
        get() { // block id: 504
            "Q]$I)mH:Gp"
        }

    };
    public open override func func_1714989900571_371(param_1714989900571_372 : Range<Int32>, namedParam_1714989900571_373 ! : Range<Int8>, namedParam_1714989900571_374 ! : Range<Int32>) : Range<Int64> { // block id: 375
        let var_1714989900571_377 : UInt = UInt64(59);
        var_1714989900571_377;
        var_1714989900571_384.func_1714989900571_387(namedParam_1714989900571_388 : var_1714989900571_609, namedParam_1714989900571_389 : (), namedParam_1714989900571_390 : (Option<Range<Int16>>.Some(((Int16(Int16(111))&127)..=(Int16(Int16(-63))&127):(Int64(-71)|1))) ?? var_1714989900571_623), namedParam_1714989900571_391 : (var_1714989900571_634 ?? Int64(-111)));
        var_1714989900571_255
    }
;
    public open override func func_1714989900571_387(namedParam_1714989900571_388 ! : Range<UInt32>, namedParam_1714989900571_389 ! : Unit, namedParam_1714989900571_390 ! : Range<Int16>, namedParam_1714989900571_391 ! : Int64) : Option<Range<Int64>> { // block id: 392
        let var_1714989900571_557 : Option<(Range<Int64>, Unit, Rune)> = Option<(Range<Int64>, Unit, Rune)>.Some((((Int64(Int64(80))&127)..=(Int64(Int64(UInt32(7)))&127):(Int64(UInt32(23))|1)), (), r'y'));
        let var_1714989900571_578 : Unit = ();
        func_1714989900571_394(((Option<Option<(Range<Int64>, Unit, Rune)>>.None ?? var_1714989900571_557) ?? var_1714989900571_132), namedParam_1714989900571_396 : (var_1714989900571_557 ?? (((Int64(Int64(115))&127)..=(Int64(Int64(-19))&127):(var_1714989900571_303|1)), var_1714989900571_578, r'4'))[2], optionalParam_1714989900571_397 : (Option<Float32>.Some(Float32(-45.0)) ?? if (true) { // block id: 591
            if (true) { ((Int64(Int64(124))&127)..(Int64(var_1714989900571_303)&127):(var_1714989900571_303|1)) } else { ((Int64(Int64(-82))&127)..(Int64(Int64(-3))&127):(Int64(60)|1)) } ;
            var_1714989900571_600
        } else if (var_1714989900571_484) { // block id: 603
            Float32(-102.0)
        } else { // block id: 605
            var_1714989900571_522;
            Float32(113.0)
        }))
    }

}



public func func_1714989900571_394(param_1714989900571_395 : (Range<Int64>, Unit, Rune), namedParam_1714989900571_396 ! : Rune, optionalParam_1714989900571_397 ! : Float32 = Float32(Float32(Float32(-93.0)))) : Option<Range<Int64>> { // block id: 401
    var var_1714989900571_473 : Float32 = Float32(47.0);
    func_1714989900571_403(namedParam_1714989900571_406 : Float32(match (Float32(-7.0)) {
        case caseVar_1714989900571_469 : Interface_1714989900571_9 => 
            var_1714989900571_473 + Float32(38.0)
        
        case -26.0 | 100.0 | -112.0 => 
            let var_1714989900571_480 : Interface_1714989900571_8 = Class_1714989900571_5<Int8, UInt32>();
            var_1714989900571_480;
            var_1714989900571_484 ||= true;
            Float32(-10.0) + Float32(49.0)
        
        case _ => 
            Float32(116.0)
        
    }));
    Class_1714989900571_496<Int32, Option<Range<Int64>>>.var_1714989900571_501;
    var var_1714989900571_517 : Option<Option<Option<Range<Int64>>>> = Option<Option<Option<Range<Int64>>>>.Some((Int64(-44) as Option<Range<Int64>>));
    const var_1714989900571_538 : Unit = ();
    ((var_1714989900571_517 ?? var_1714989900571_522) ?? try { // block id: 525
        var var_1714989900571_527 : ?Range<Int64> = ((Option<Option<Range<Int64>>>.Some(Option<Range<Int64>>.Some(((Int64(Int64(-52))&127)..(Int64(Int64(37))&127):(Int64(20)|1)))) as Option<Range<Int64>>) as Range<Int64>);
        var_1714989900571_527
    } finally { // block id: 536
        var_1714989900571_538;
        Option<Range<Int64>>.Some(((Int64(Int64(119))&127)..=(Int64(var_1714989900571_303)&127):(Int64(-3)|1)))
    })
}







func func_1714989900571_116(param_1714989900571_117 : Array<UInt64>) : Option<Bool> { // block id: 118
    let var_1714989900571_330 : Bool = (Float64(Float64(71.0)) is Array<Unit>);
    func_1714989900571_259<UInt32>(optionalParam_1714989900571_262 : ((Int32(var_1714989900571_299)&127)..=(Int32(Int32(-93))&127):(var_1714989900571_303|1)), namedParam_1714989900571_269 : { lambdaParameter_1714989900571_324 : Interface_1714989900571_11 => try { // block id: 327
        if (var_1714989900571_330) { // block id: 334

        };
        var var_1714989900571_337 : UInt16 = UInt16(Int8(89));
        var_1714989900571_337 >>= ((UInt16(17)) & 7);
        let var_1714989900571_356 : Interface_1714989900571_9 = Class_1714989900571_5<Int8, UInt32>();
        match (Option<Range<Int64>>.None) {
            case caseVar_1714989900571_345 => 
                ((UInt32(UInt32(166))&127)..(UInt32(UInt32(217))&127):(Int64(106)|1));
                ();
                false
            
            case caseVar_1714989900571_352 => 
                var_1714989900571_85;
                var_1714989900571_356;
                true
            
            case caseVar_1714989900571_361 => 
                var_1714989900571_330
            
            case _ => 
                true
            
        }
    } catch (_) { // block id: 368
        true
    } }).func_1714989900571_371(((Int32(Int32(-107))&127)..=(Int32(Int32(3))&127):(Int64(-33)|1)), namedParam_1714989900571_373 : ((Int8(Int8(12))&127)..=(Int8(Int8(84))&127):(Int64(-117)|1)), namedParam_1714989900571_374 : ((Int32(Int32(22))&127)..(Int32(Int32(20))&127):(Int64(76)|1)))|>{ lambdaParameter_1714989900571_252 : Range<Int64> => var_1714989900571_255 };
    let var_1714989900571_653 : Option<Option<Bool>> = Option<Option<Bool>>.Some(Option<Bool>.Some(false));
    var var_1714989900571_670 : ?Bool = (Float64(62.0) as Bool);
    var var_1714989900571_685 : Unit = ();
    (try { // block id: 651
        var_1714989900571_653
    } catch (_) { // block id: 657
        var_1714989900571_653
    } finally { // block id: 659
        var_1714989900571_662 >>= ((Int16(43)) & 7);
        Option<Option<Bool>>.Some(var_1714989900571_670)
    } ?? match (if (var_1714989900571_484) { var_1714989900571_677 } else { VArray<Unit, $7>({ i => ()}) } ) {
        case _ => 
            if (true) { var_1714989900571_670 } else { Option<Bool>.Some(var_1714989900571_484) } 
        
    })
}

public func func_1714989900571_112(param_1714989900571_113 : UInt16) : Option<Bool> { // block id: 114
    var var_1714989900571_698 : (Array<UInt64>) -> Option<Bool> = func_1714989900571_116;
    var_1714989900571_701|>var_1714989900571_698
}








main(): Int64 {
    try {
        var var_1714989900571_13 : Class_1714989900571_5<Int8, UInt32> = Class_1714989900571_5<Int8, UInt32>(UInt16(243), namedParam_1714989900571_17 : Float64(Float32(Float32(Float32(-5.0)))), namedParam_1714989900571_18 : Int16(-41));
        var_1714989900571_13.var_1714989900571_159;
        var var_1714989900571_1138 : Option<Range<UInt32>> = (((UInt64(UInt64(UInt64(122)))&127)..=(UInt64(UInt64(201))&127):(Int64(Int32(Int16(70)))|1)) as Range<UInt32>);
        var_1714989900571_1138;
        (Option<(Int64, Array<Bool>, UInt32)>.None ?? (var_1714989900571_1158, [var_1714989900571_484, false, var_1714989900571_484, true, true, false, false, var_1714989900571_484, var_1714989900571_484, true], var_1714989900571_85))[0] ** var_1714989900571_1178[4][1]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1714989900571_85*var_1714989900571_85), 64)
        crcCheck.updateBuffer(UInt64(var_1714989900571_210*var_1714989900571_210), 64)
        crcCheck.updateBuffer(UInt64(var_1714989900571_299*var_1714989900571_299), 64)
        crcCheck.updateBuffer(UInt64(var_1714989900571_303*var_1714989900571_303), 64)
        crcCheck.updateBuffer(UInt64(var_1714989900571_662*var_1714989900571_662), 64)
        crcCheck.updateBuffer(UInt64(var_1714989900571_1158*var_1714989900571_1158), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend<T0, T1> Class_1714989900571_5<T0, T1> {

}

