/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC-1:%compiler %cmp_opt %n.cj

// random seed:1625149788451

// All global variable need to be defined before use!
public var var27 : Bool = false
public let var90 : UInt8 = UInt8(171)
public let var146 : Class8 = Class8()
public var var259 : Int16 = Int16(21)
public var var423 : Int32 = Int32(-15)
public let var458 : Enum179 = Enum179.defaultValue
public let var853 : Aggregate704 = Aggregate704()
public var var856 : (Float64*Int8*(Bool*Int8)*Int32) = ((-101.0), Int8(-104), (true, Int8(-89)), Int32(40))
public var var948 : Unit = ()
public var var1086 : Unit = ()
public let var1181 : Enum179 = Enum179.enumValue711(Aggregate704())
public var var1435 : Interface1003 = Class1002()
public let var1625 : Unit = ()
public var var1258 : Class8 = Class8(Class1002(), Int32(124))
public let var1786 : UInt64 = UInt64(163)
public let var1900 : Bool = true
public let var18 : UInt32 = UInt32(150)
public var var61 : UInt16 = UInt16(146)
public let var75 : (Int64*Unit*UInt64) = (118, (), UInt64(239))
public var var341 : Int32 = Int32(2)
public let var535 : Int8 = Int8(15)
public let var618 : (Bool*Int8) = (false, Int8(-85))
public let var935 : Rune = 'M'
public var var1022 : Class1002 = Class1002()
public var var1147 : Aggregate1143 = Aggregate1143()
public var var1160 : Unit = ()
public var var1441 : Interface1003 = Class1002()
 var var1460 : Int16 = Int16(-18)
 let var1463 : Int32 = Int32(118)
public let var1635 : Aggregate1631 = Aggregate1631()
public let var1644 : Int32 = Int32(-65)
public let var1673 : UInt16 = UInt16(141)
public let var1810 : UInt64 = UInt64(193)
public let var1955 : Int8 = Int8(-48)
public var var58 : Unit = ()
public let var280 : (Unit*Unit) = ((), ())
public var var302 : Unit = ()
public var var334 : Float64 = 60.0
public var var464 : Enum380 = Enum380.defaultValue
public let var546 : Bool = true
public var var558 : UInt64 = UInt64(167)
public let var599 : Int64 = 28
public let var755 : Unit = ()
public let var758 : Unit = ()
public let var886 : (Bool*Bool*Bool) = (false, false, false)
public var var902 : Int8 = Int8(-29)
public let var1014 : Class1002 = Class1002(Enum380.enumValue1025(UInt16(51), UInt8(205)), namedParam1018 : (false, Int8(-108)))
public var var1217 : Class8 = Class8()
public var var1947 : Int32 = Int32(103)
public func func326() : Float64 { // block id: 327
    if ((var334, Int8(52), (var27, Int8(100)), var341)[2][0]) { match (var146.var349) {
        case _ =>
            var334

    } } else { if ((var27, false, true)[1]) { // block id: 362
        var334
    } else { // block id: 364
        true;
        var27;
        59.0
    } }
}

public enum Enum380 {
    defaultValue |
    enumValue1025(UInt16, UInt8)
}
public func func377() : (Int64*Unit*UInt64) { // block id: 378
    match (Enum380.defaultValue) {
        case caseVar385 : UInt64 =>
            var58;
            var58

        case caseVar392@ caseVar391@ _ : (Float64*Int8*(Bool*Int8)*Int32) =>
            ();
            var146;
            ()

        case _ =>
            ()

    };
    var var416 : Enum179 = Enum179.defaultValue;
    match (if (func403()) { match (var259) {
            case caseVar410 : (Unit*Unit) =>
                Enum179.defaultValue

            case _ =>
                var416

        } } else { (false, var423, Enum179.defaultValue, var280)[2] } ) {
        case _ =>
            var75

    }
}

func func538(namedParam539 ! : (Float64*Int8*(Bool*Int8)*Int32)) : (Bool*Int8) { // block id: 540
    if (false) { match (match {
            case var546 =>
            66.0;
            var259
            case _ =>
            var146;
            var58;
            Int16(82)
        }) {
        case _ =>
            var558;
            Int32(9)

    } } else { var423 } ;
    func563(if (if (false) { // block id: 788
        false
    } else if (true) { // block id: 791
        true
    } else { // block id: 793
        Aggregate704();
        var546
    }) { (if (var27) { var618 } else { (false, Int8(86)) } ) } else { match (Enum380.defaultValue) {
        case defaultValue  =>
            var618

        case _ =>
            (var546, var535)

    } } , (if (var27) { // block id: 816
        ();
        var755;
        var546
    } else { // block id: 820
        (true, true, var27);
        true
    }, var146.var349, Enum179.defaultValue, if (var546) { (var58, ()) } else { var280 } ), var75)
}

 func func433(param434 : UInt64, namedParam435 ! : (Float64*Int8*(Bool*Int8)*Int32), optionalParam436 ! : (Bool*Int32*Enum179*(Unit*Unit)) = (false, Int32(-27), Enum179.defaultValue, ((), ()))) : Int8 { // block id: 444
    match (if (match (var27) {
            case caseVar451 =>
                ();
                false

            case _ =>
                var458;
                ();
                var27

        }) { match (var464) {
            case caseVar468 =>
                var58;
                Enum179.defaultValue

            case _ : UInt8 =>
                ();
                var458

            case defaultValue =>
                ();
                Enum179.defaultValue

            case _ =>
                var458

        } } else { var458 } ) {
        case caseVar488@ defaultValue =>
            var302

        case defaultValue =>
            ();
            var302

        case defaultValue  =>
            ();
            Class8();
            var302

        case caseVar504@ _ : (Bool*Int32*Enum179*(Unit*Unit)) =>
            ();
            ();
            ()

        case _ =>
            var61;
            ();
            var302

    };
    var var525 : Float64 = (-103.0);
    var var846 : (Bool*Int8) = (true, Int8(80));
    (if ((if (true) { true } else { false } )) { (-18.0) } else { (if (true) { 10.0 } else { var525 } ) } , match {
        case var27 =>
        ();
        Int8(-103)
        case _ =>
        ();
        var535
    }, func538(namedParam539 : if (var27) { // block id: 839
        UInt64(201);
        var146;
        (19.0, Int8(-54), var846, Int32(-127))
    } else { // block id: 851
        var853;
        var856
    }), var423);
    let var909 : Float32 = Float32(53.0);
    var var951 : UInt64 = UInt64(75);
    var146.func868(namedParam869 : match (Float32(104.0)) {
        case var909 =>
            var302;
            ()

        case caseVar919@ -31.0 | var909 | var909 | var909 =>
            ();
            ();
            ()

        case _ : (Float64*Int8*(Bool*Int8)*Int32) =>
            var618;
            ()

        case _ =>
            ();
            var302

    }, namedParam870 : match (var935) {
        case caseVar940@ caseVar939 : UInt64 =>
            UInt16(155);
            caseVar939

        case 'W' =>
            var948;
            var951

        case _ =>
            var755;
            ();
            var558

    }, namedParam871 : var146.var961, namedParam872 : var27)
}

public func func371(param372 : Rune, optionalParam373 ! : UInt16 = UInt16(225)) : Class8 { // block id: 375
    func377();
    let var1064 : (Bool*Int32*Enum179*(Unit*Unit)) = (true, Int32(123), Enum179.enumValue711(Aggregate704()), ((), ()));
    match (func433(var146.var1053, namedParam435 : var856, optionalParam436 : match (var464) {
            case _ : UInt16 =>
                var280;
                var90;
                var1064

            case defaultValue  =>
                (false, Int32(-5), var458, ((), ()))

            case _ =>
                var1086;
                Class1002(var464, namedParam1018 : var618);
                (var27, Int32(-31), var458, (var1086, var755))

        })) {
        case caseVar1101@ var535 =>
            var90;
            Class8()

        case caseVar1107 =>
            ();
            var558;
            Class8()

        case caseVar1114 =>
            var1022;
            var146

        case caseVar1120@ _ =>
            ();
            Class8()

        case _ =>
            (false, Int8(-122));
            Enum179.enumValue1130(var90);
            var146

    }
}

public func func314(optionalParam315 ! : (Int64*Unit*UInt64) = (88, (), UInt64(25)), optionalParam320 ! : Rune = 'D', optionalParam322 ! : UInt64 = UInt64(136)) : Class8 { // block id: 324
    func326();
    let var1135 : Rune = 'D';
    if ((func371(var1135, optionalParam373 : var61).func1139())) { var1160 } else { var302 } ;
    Class8()
}

public func func234(optionalParam235 ! : Class8 = Class8(), namedParam237 ! : UInt16, optionalParam238 ! : Float32 = Float32(21.0)) : Class8 { // block id: 240
    let var289 : Int8 = Int8(119);
    match {
        case match (Class8()) {
            case caseVar248 : UInt64 =>
                let var251 : Int64 = 19;
                var251;
                true

            case caseVar256 : (Unit*Unit) =>
                var259;
                var27

            case _ =>
                74.0;
                var58;
                false

            case _ =>
                (-38.0);
                var27

            case _ =>
                var27

        } =>
        var90;
        var58;
        var280
        case (var27, var289)[0] =>
        Int8(81);
        ((), ())
        case _ =>
        optionalParam235;
        (var58, var302)
    }[0];
    func306(namedParam307 : Class8(), namedParam308 : Class8.var1223)
}

public struct Aggregate1504 {
    public init() { // block id: 1506

    }
;
    public static var var1509 : Float64 = 30.0
}

public open class Class8 {
    public init() { // block id: 10

    }
;
    public static var var202 : Bool = true;
    public var var349 : Int32 = Int32(-7);
    public static let var582 : Enum380 = Enum380.defaultValue;
    public static var var614 : Bool = false;
    public static func func571(optionalParam572 ! : Float32 = Float32(-106.0), namedParam574 ! : Int32) : (Bool*Int8) { // block id: 575
        if (var202) { match (Class8.var582) {
            case caseVar586 =>
                ();
                var302;
                var var591 : (Bool*Int8) = (false, Int8(-47));
                var591

            case _ =>
                (var599, var302, UInt64(155));
                var599;
                (false, var535)

        } } else { if (func403()) { // block id: 609
            (true, var535)
        } else if (var614) { // block id: 616
            var618
        } else { // block id: 622
            var618
        } }
    }
;
    public let var632 : Bool = true;
    public static let var682 : UInt8 = UInt8(72);
    public func func868(namedParam869 ! : Unit, namedParam870 ! : UInt64, namedParam871 ! : Aggregate704, namedParam872 ! : Bool) : Int8 { // block id: 873
        match (UInt8(170)) {
            case 202 | var682 =>
                var535

            case 233 | 103 | 107 =>
                ();
                var886;
                var535

            case 116 =>
                ();
                var535

            case _ =>
                namedParam869;
                var75;
                var902

        }
    }
;
    public let var961 : Aggregate704 = Aggregate704(UInt32(21), Int32(-112), namedParam966 : Enum380.enumValue1025(UInt16(199), UInt8(153)));
    public var var1053 : UInt64 = UInt64(9);
    public open func func1139() : Bool { // block id: 1140
        ();
        var1147.func1150(namedParam1151 : match (var27) {
            case caseVar1166@ true | true | true | false =>
                var61;
                ();
                var18

            case _ =>
                var18

        }, optionalParam1152 : (var202, var902), namedParam1156 : if (var546) { Enum179.defaultValue } else { var1181 } , namedParam1157 : match ((var546, true, var202)) {
            case _ =>
                Float32(68.0);
                var582

        });
        var546
    }
;
    public static let var1223 : UInt64 = UInt64(184);
    public var var1232 : Int16 = Int16(19);
    private static var var1269 : Float32 = Float32(-9.0);
    private let var1331 : Interface1003 = Class1002();
    public static let var1554 : Int8 = Int8(13);
    protected init(param1473 : Bool, optionalParam1474 ! : Interface1003 = Class1002(Enum380.defaultValue, namedParam1018 : (false, Int8(113)))) { // block id: 1480
        var var1521 : Aggregate1504 = Aggregate1504();
        optionalParam1474.func1484(match (var1521) {
            case _ =>
                var682

            case caseVar1529 : Aggregate1504 =>
                var58;
                var1160;
                var682

            case _ =>
                ();
                var682

            case _ =>
                ();
                var682

        });
        if (match (Enum179.enumValue711(var853)) {
            case _ =>
                var755;
                (var614, var1554);
                param1473

            case defaultValue  =>
                var614

            case defaultValue  =>
                var618;
                ();
                var27

            case _ =>
                var948;
                var27

        }) { // block id: 1571
            match (var61) {
                case caseVar1576 =>
                    (var302, ());
                    var755;
                    Aggregate1143(Int8(-10))

                case 51 | 203 =>
                    ();
                    var302;
                    var1147

                case caseVar1677@ caseVar1676@ var1673 | var1673 | 250 =>
                    var302;
                    ();
                    var1147

                case _ : Int32 =>
                    var1160;
                    var464;
                    var1147

                case _ =>
                    Int16(5);
                    var1147

            };
            ();
            if (false) { // block id: 1695
                var341;
                ();
                Class8()
            } else { // block id: 1699
                var334;
                Class8()
            }
        } else if (match (if (var27) { UInt8(11) } else { UInt8(25) } ) {
            case var90 | var682 | 39 | var682 =>
                var599;
                false

            case _ =>
                ();
                var334;
                true

        }) { // block id: 1720
            var1673;
            match (Aggregate704()) {
                case _ =>
                    ();
                    var758;
                    var1625

            };
            match (var599) {
                case _ =>
                    Float32(-116.0);
                    Int8(-122);
                    Class8()

                case _ =>
                    var758;
                    var1269;
                    Class8()

            }
        } else { // block id: 1742
            var loopTimeVar1747 : Int64 = 0;
            while (false && loopTimeVar1747 < 100 ) {
                loopTimeVar1747++;

            };
            if (var614) { () } else { () } ;
            if (false) { // block id: 1754
                Class8()
            } else { // block id: 1756
                ();
                ();
                Class8()
            }
        }
    }
;
    public init(param1261 : Class1002, param1262 : Int32) { // block id: 1263
        if (match (Class8.var1269) {
            case caseVar1273@ _ =>
                var1147;
                ();
                var202

            case _ =>
                ();
                (var948, ());
                false

        }) { // block id: 1285
            var1086;
            var1217
        } else if (match ((17, var302, var1223)) {
            case caseVar1295 =>
                ();
                UInt16(44);
                true

            case (var599 | var599 | 10,var758 | var758 | var758,186) =>
                ();
                (-6.0);
                false

            case _ =>
                var614

        }) { // block id: 1314
            if (var27) { // block id: 1317
                var935
            } else if (true) { // block id: 1320
                var1147;
                ();
                var935
            } else { // block id: 1324
                77.0;
                var755;
                var935
            };
            var1217.var1331;
            var146
        } else { // block id: 1334
            if (true) { // block id: 1337
                var302;
                var558;
                ()
            } else if (false) { // block id: 1342
                var90;
                ();
                var1160
            };
            var var1348 : Interface1003 = Class1002(namedParam1351 : UInt16(74), namedParam1352 : ((-119.0), Int8(-39), (false, Int8(4)), Int32(-112)), namedParam1353 : UInt64(81));
            var1348.func1454(var1460, namedParam1456 : var1463, namedParam1457 : Float32(38.0));
            if (false) { // block id: 1468
                Class8()
            } else { // block id: 1470
                Class8(false)
            }
        }
    }
;
    public open func func1881(param1882 : Int8, namedParam1883 ! : Int64, namedParam1884 ! : UInt64) : Unit { // block id: 1885

    }
;
    public var var2005 : Int64 = 111
}

public enum Enum179 {
    defaultValue |
    enumValue711(Aggregate704) |
    enumValue1130(UInt8)
}
public func func403() : Bool { // block id: 404
    false
}

 func func661(namedParam662 ! : Int32, namedParam663 ! : UInt32, namedParam664 ! : Float64, namedParam665 ! : Int8) : Int16 { // block id: 666
    if (match (if (true) { var334 } else { namedParam664 } ) {
        case _ =>
            true

    }) { // block id: 676
        UInt8(225)
    } else { // block id: 678
        Class8.var682
    };
    Int16(-40)
}

public func func625() : Int32 { // block id: 626
    match {
        case if (var146.var632) { // block id: 634
            var546
        } else { // block id: 636
            var464;
            var58;
            var546
        } =>
        ();
        match (UInt32(231)) {
            case 214 | 206 =>
                ()

            case caseVar651@ 164 | var18 =>
                var302;
                var27;
                ()

            case _ =>
                ();
                var58

        };
        func661(namedParam662 : var341, namedParam663 : UInt32(31), namedParam664 : var334, namedParam665 : var535)
        case _ =>
        match (var464) {
            case defaultValue  =>
                var599;
                var259

            case _ =>
                (-22.0);
                var259

        }
    };
    match (match (Aggregate704.var709) {
            case defaultValue  =>
                var464

            case _ =>
                var464

            case _ =>
                var341;
                var464

            case _ =>
                Enum380.defaultValue

        }) {
        case caseVar732 =>
            ()

        case caseVar737 =>
            ();
            var var741 : Aggregate704 = Aggregate704();
            var741;
            ()

        case caseVar746 =>
            false;
            var58

        case defaultValue  =>
            var58;
            var755;
            var758

        case _ =>
            var302;
            ();
            var755

    };
    match (var535) {
        case caseVar769 : Int8 =>
            var758;
            Int32(35)

        case -4 =>
            var341

        case _ =>
            var var781 : Bool = false;
            (var781, var535);
            Int32(-94)

    }
}

public enum Enum1599 {
    defaultValue
}
public struct Aggregate704 {
    public init() { // block id: 706

    }
;
    public static var var709 : Enum179 = Enum179.enumValue711(Aggregate704());
    public init(param964 : UInt32, param965 : Int32, namedParam966 ! : Enum380) { // block id: 967
        var loopTimeVar999 : Int64 = 0;
        while (match (var458) {
            case caseVar973@ defaultValue  =>
                ();
                UInt64(83);
                false

            case defaultValue  =>
                var758;
                ();
                true

            case defaultValue  =>
                ();
                ();
                false

            case _ =>
                var948;
                true

        } && loopTimeVar999 < 100 ) {
            loopTimeVar999++;
            if (var546) { // block id: 997

            }
        };
        match (Class1002.func1008(namedParam1009 : (), namedParam1010 : Class8())) {
            case _ =>
                ();
                ();
                Aggregate704()

        }
    }

}

public func func563(param564 : (Bool*Int8), param565 : (Bool*Int32*Enum179*(Unit*Unit)), param566 : (Int64*Unit*UInt64)) : (Bool*Int8) { // block id: 567
    Class8.func571(namedParam574 : func625())
}

public interface Interface1003 {
    func func1454(param1455 : Int16, namedParam1456 ! : Int32, namedParam1457 ! : Float32) : Unit { // block id: 1458

    }
;
    func func1484(param1485 : UInt8) : Int32 { // block id: 1486
        if (false) { // block id: 1489

        } else if (if (true) { // block id: 1492
            var758;
            var1086;
            var27
        } else if (false) { // block id: 1497
            var758;
            var27
        } else { // block id: 1500
            var27
        }) { // block id: 1502
            Aggregate1504.var1509;
            let var1513 : Bool = false;
            if (var1513) { () } else { () } ;
            var1086
        };
        Int32(48)
    }

}

public open class Class1002 <: Interface1003 {
    public init() { // block id: 1005

    }
;
    public init(param1017 : Enum380, namedParam1018 ! : (Bool*Int8)) { // block id: 1019
        var755;
        var1022
    }
;
    public var var1034 : Enum179 = Enum179.enumValue711(Aggregate704());
    public let var1204 : Bool = true;
    public static let var1365 : (Bool*Int32*Enum179*(Unit*Unit)) = (false, Int32(-78), Enum179.defaultValue, ((), ()));
    private static let var1408 : Unit = ();
    public init(namedParam1351 ! : UInt16, namedParam1352 ! : (Float64*Int8*(Bool*Int8)*Int32), namedParam1353 ! : UInt64) { // block id: 1354
        if (match (match (Enum380.enumValue1025(UInt16(106), UInt8(132))) {
                case defaultValue  =>
                    var1365;
                    ();
                    var1181

                case caseVar1377 : Int64 =>
                    ();
                    ();
                    Enum179.enumValue711(var853)

                case _ : UInt16 =>
                    ();
                    var341;
                    var458

                case defaultValue  =>
                    (var302, var1086);
                    UInt16(69);
                    var458

                case _ =>
                    ();
                    ();
                    var458

            }) {
            case _ =>
                ((), var1408);
                true

            case caseVar1414@ caseVar1413 : UInt8 =>
                var27

            case caseVar1419 =>
                var334;
                var458;
                var546

            case _ =>
                false

        }) { // block id: 1427
            var loopTimeVar1432 : Int64 = 0;
            while (var27 && loopTimeVar1432 < 100 ) {
                loopTimeVar1432++;

            };
            UInt32(60);
            var1435
        } else { // block id: 1437
            if (var27) { var1441 } else { Class1002() }
        }
    }

}

public struct Aggregate1143 {
    public init() { // block id: 1145

    }
;
    public func func1150(namedParam1151 ! : UInt32, optionalParam1152 ! : (Bool*Int8) = (true, Int8(-72)), namedParam1156 ! : Enum179, namedParam1157 ! : Enum380) : Unit { // block id: 1158
        var1160
    }
;
    public init(param1584 : Int8) { // block id: 1585
        Aggregate1587.var1592;
        if ((if (false) { var27 } else { match (Enum1599.defaultValue) {
            case _ : (Unit*Unit) =>
                var546

            case defaultValue  =>
                var1160;
                var146;
                var27

            case defaultValue  =>
                false

            case caseVar1619@ caseVar1618 : UInt32 =>
                var27

            case _ =>
                var1625;
                var948;
                var27

        } } )) { if (var1635.var1638) { // block id: 1640
            (var546, var1644, var1181, ((), ()));
            var1147
        } else { // block id: 1651
            Aggregate1504();
            var423;
            Aggregate1143()
        } } else { match (if (false) { Int8(8) } else { Int8(-57) } ) {
            case _ =>
                var1147

        } }
    }

}

public func func306(namedParam307 ! : Class8, namedParam308 ! : UInt64) : Class8 { // block id: 309
    var90;
    var var1208 : (Bool*Bool*Bool) = (false, false, true);
    if ((func314(optionalParam315 : var75, optionalParam320 : 'O').var632)) { if (var1014.var1204) { // block id: 1206
        var1208;
        Class8()
    } else { // block id: 1214
        namedParam307
    } } else { var1217 }
}

struct Aggregate1587 {
    public init() { // block id: 1589

    }
;
    public static var var1592 : Unit = ()
}

public struct Aggregate1631 {
    public init() { // block id: 1633

    }
;
    public let var1638 : Bool = false
}

 func func50() : Class8 { // block id: 51
    let var72 : Rune = 'Z';
    if (true) { // block id: 56
        var58;
        var61;
        let var64 : (Int64*Unit*UInt64) = (115, (), UInt64(76));
        var64
    } else { // block id: 69
        UInt16(96);
        var72;
        var75
    }[1];
    var var83 : Class8 = Class8();
    match (var83) {
        case caseVar87 : Int8 =>
            var90;
            Class8()

        case _ : UInt64 =>
            Class8()

        case caseVar99 : Unit =>
            Class8()

        case _ =>
            ();
            Class8()

        case _ =>
            UInt64(168);
            var58;
            Class8()

    };
    let var1791 : Int16 = Int16(-94);
    let var1821 : Unit = ();
    func func164(optionalParam165 ! : Class8 = Class8(), namedParam167 ! : Float64, namedParam168 ! : Int64, optionalParam169 ! : UInt8 = UInt8(11)) : Class8 { // block id: 171
        func func174(namedParam175 ! : Unit) : Int16 { // block id: 176
            var loopTimeVar205 : Int64 = 0;
            while (match (Enum179.defaultValue) {
                case caseVar184 : Bool =>
                    71;
                    namedParam167;
                    false

                case defaultValue =>
                    namedParam175;
                    false

                case _ =>
                    var27

            } && loopTimeVar205 < 100 ) {
                loopTimeVar205++;
                ();
                Class8.var202
            };
            match {
                case true =>
                if (var27) { var18 } else { UInt32(32) } ;
                var var218 : Int32 = Int32(-98);
                match {
                    case true =>
                    UInt32(128);
                    var218
                    case _ =>
                    var75;
                    Float32(94.0);
                    var218
                };
                if (var27) { // block id: 226
                    UInt8(101);
                    ();
                    Int16(-72)
                } else { // block id: 230
                    Int16(-83)
                }
                case func234(namedParam237 : var61).func1139() =>
                UInt32(195);
                var1217.var1232
                case _ =>
                match (Enum380.enumValue1025(UInt16(220), UInt8(184))) {
                    case defaultValue  =>
                        var1217

                    case caseVar1245 : Unit =>
                        Class8()

                    case defaultValue  =>
                        91.0;
                        Class8()

                    case _ =>
                        var948;
                        true;
                        var1258

                };
                match {
                    case true =>
                    var1625;
                    var302;
                    Int16(-60)
                    case _ =>
                    (58.0, Int8(-102), (false, Int8(-78)), var1644);
                    var259
                }
            }
        }
;
        match (func174(namedParam175 : ())) {
            case caseVar1781 =>
                var464;
                ();
                var1786

            case var1791 =>
                UInt64(173)

            case 45 =>
                var535;
                UInt64(7)

            case 87 =>
                false;
                UInt64(236)

            case _ =>
                UInt64(69);
                namedParam168;
                var1810

        };
        var loopTimeVar1824 : Int64 = 0;
        var var1848 : Aggregate1504 = Aggregate1504();
        (61, while (if (true) { true } else { var27 }  && loopTimeVar1824 < 100 ) {
            loopTimeVar1824++;
            var1821
        }, if (match {
            case var546 =>
            ();
            var599;
            var546
            case var546 =>
            var1821;
            ();
            true
            case _ =>
            true
        }) { UInt64(22) } else { match (var948) {
            case var755 | var758 =>
                var1848;
                var535;
                var558

            case var758 =>
                Int8(-19);
                UInt64(35)

            case caseVar1861@ caseVar1860@ _ : UInt8 =>
                var18;
                var558

            case _ =>
                ();
                var1786

            case _ =>
                var1160;
                ();
                var1810

        } } );
        Class8()
    }
;
    if (var27) { // block id: 114
        let var122 : Int64 = (-78);
        let var1933 : (Bool*Int32*Enum179*(Unit*Unit)) = (false, Int32(70), Enum179.enumValue711(Aggregate704(UInt32(162), Int32(74), namedParam966 : Enum380.defaultValue)), ((), ()));
        func func116() : Class8 { // block id: 117
            if ((if (match (var122) {
                case caseVar128@ var122 | var122 | 126 =>
                    var58;
                    var27

                case _ =>
                    var90;
                    var58;
                    true

            }) { (if (true) { true } else { var27 } ) } else { if (var27) { // block id: 143
                Int8(-96);
                var146;
                false
            } else { // block id: 149
                UInt64(214);
                var58;
                true
            } } )) { var58 } else { () } ;
            if (false) { if (var27) { // block id: 159
                var58;
                ()
            } } else { (func164(optionalParam165 : Class8(), namedParam167 : var334, namedParam168 : 38, optionalParam169 : UInt8(169)).func1881(Int8(62), namedParam1883 : var599, namedParam1884 : UInt64(2))) } ;
            let var1913 : Bool = true;
            Class8(if (if (var27) { // block id: 1893
                ();
                var27
            } else if (var546) { // block id: 1897
                var259;
                var1900
            } else { // block id: 1902
                var948;
                true
            }) { (if (var27) { Class1002() } else { var1022 } ) } else { var1014 } , match (if (var1913) { UInt16(13) } else { var1673 } ) {
                case caseVar1919 =>
                    Int32(-35)

                case caseVar1926@ caseVar1925@ var1673 =>
                    ();
                    Int32(65)

                case _ =>
                    var1933;
                    ();
                    var1947

            })
        }
;
        func116()
    } else if (match (Int8(86)) {
        case var535 | -8 | var1955 =>
            var599;
            ((-102), (), UInt64(90));
            let var1964 : Bool = false;
            var1964

        case caseVar1970@ var535 | var535 =>
            ();
            var1160;
            false

        case _ =>
            var755;
            var1900

    }) { // block id: 1979
        var146
    } else { // block id: 1981
        match {
            case var27 =>
            var618
            case _ =>
            (false, Int8(-6))
        };
        var302;
        var1217
    }
}

public func func12() : Class8 { // block id: 13
    if (if (match (var18) {
        case var18 | var18 | 165 =>
            'e';
            var27

        case _ =>
            Class8();
            ();
            var27

    }) { // block id: 34
        true
    } else if (if (var27) { true } else { true } ) { // block id: 40
        var18;
        var var43 : Unit = ();
        var43;
        var27
    } else { // block id: 46
        var27
    }) { // block id: 48
        func50()
    } else { // block id: 1992
        if (true) { () } else { () } ;
        Class8(Class1002(var464, namedParam1018 : (var546, var1955)), Int32(-34))
    }
}

main(): Int64 {
    func12().var2005
    // CRC Check All Variables
    var crccheck = CrcCheck(5000, 32)
    crccheck.updateBuffer(UInt64(var558), 64)
    crccheck.updateBuffer(UInt64(var599), 64)
    crccheck.updateBuffer(UInt64(var902), 64)
    crccheck.updateBuffer(UInt64(var1947), 64)
    crccheck.crcCheck()
    crccheck.getCrcOutput()

    return 0;
}

class CrcCheck {
    public var buffer: Array<Int64>
    public var poly: Array<Int64>
    public var crc_output: Array<Int64>
    public var poly_n: Int64
    public var buffer_index: Int64
    public var crc_output_n: Int64

    public init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64> (crc_output_n, 0)
        buffer = Array<Int64> (buffer_n, 0)
        poly_n = crc_n + 1
        poly = Array<Int64> (poly_n, 0)
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    public func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64> (byte_n, 0)
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    public func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64> (crc_output_n, 0)
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64> (crc_output_n, 0)
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    public func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
    }
}
extend Aggregate1587 {

}

extend Class1002 {
    public static func func1008(namedParam1009 ! : Unit, namedParam1010 ! : Class8) : Enum179 { // block id: 1011
        var1014.var1034
    }

}

