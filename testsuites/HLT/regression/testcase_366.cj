/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 


public var var_1689115888674_50 : Option<Interface_1689115888674_21> = (Int32(87) as Interface_1689115888674_21)
public var var_1689115888674_58 : UInt32 = UInt32(203)
public let var_1689115888674_96 : Unit = ()
public var var_1689115888674_106 : Option<Class_1689115888674_16> = (Class_1689115888674_16() as Class_1689115888674_16)
public let var_1689115888674_139 : Bool = false
public var var_1689115888674_144 : Int64 = Int64(Int16(UInt8(UInt8(145))))
public var var_1689115888674_163 : Class_1689115888674_81 = Class_1689115888674_81()
public let var_1689115888674_192 : Int32 = Int32(Int32(-36))
public var var_1689115888674_243 : UInt16 = UInt16(UInt8(42))
public var var_1689115888674_251 : Int16 = Int16(-4)
public let var_1689115888674_311 : (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) = (Struct_1689115888674_27(), Int32(UInt16(Int8(-61))), ((Int32(Int32(49))&127)..(Int32(Int32(95))&127):((-34)|1)), UInt16(UInt16(223)), 114)
public var var_1689115888674_387 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
var var_1689115888674_457 : Range<UInt8> = ((UInt8(UInt8(108))&127)..=(UInt8(UInt8(176))&127):(Int64(UInt32(30))|1))
public var var_1689115888674_499 : String = "Z+g\"\\8jd45"
public let var_1689115888674_536 : Option<Unit> = Option<Unit>.None
public let var_1689115888674_547 : Int32 = Int32(3)
public let var_1689115888674_553 : Unit = ()
public let var_1689115888674_562 : Array<UInt32> = [UInt32(6), UInt32(2), UInt32(163), UInt32(118), UInt32(184), UInt32(250), UInt32(39), UInt32(85), UInt32(106), UInt32(42)]
let var_1689115888674_594 : Int8 = Int8(UInt8(Int8(UInt8(163))))
public var var_1689115888674_661 : Range<Int8> = ((Int8(Int8(-84))&127)..=(Int8(Int8(119))&127):(2|1))
public var var_1689115888674_678 : Unit = ()
public var var_1689115888674_681 : (Int16, Float32, Range<Int8>, Float64) = (Int16(-23), Float32(90.0), ((Int8(Int8(Int8(110)))&127)..=(Int8(Int8(Int8(75)))&127):(Int64(UInt8(195))|1)), (-31.0))
public let var_1689115888674_716 : ?Class_1689115888674_16 = (([UInt32(170), UInt32(115), UInt32(UInt16(24)), UInt32(Int8(-66)), UInt32(Int16(48)), UInt32(69), UInt32(248), UInt32(27), UInt32(2), UInt32(UInt32(114))] as Interface_1689115888674_21) as Class_1689115888674_16)
public let var_1689115888674_749 : Float32 = Float32(62.0)
public var var_1689115888674_753 : Int32 = Int32(UInt16(Int16(UInt8(61))))
public let var_1689115888674_797 : Array<Option<Bool>> = [(((UInt32(UInt32(235))&127)..=(UInt32(UInt32(106))&127):(50|1)) as Bool), ([UInt32(UInt8(18)), UInt32(4), UInt32(Int8(94)), UInt32(208), UInt32(UInt16(199)), UInt32(UInt8(180)), UInt32(51), UInt32(UInt32(114)), UInt32(92), UInt32(24)] as Bool), ((-97) as Bool), (UInt8(Int8(UInt8(229))) as Bool), Option<Bool>.None, Option<Bool>.None, (34.0 as Bool), (UInt8(127) as Bool), Option<Bool>.None, ([(((UInt8(UInt8(53))&127)..=(UInt8(UInt8(220))&127):((-76)|1)) as Bool), (((UInt64(UInt64(52))&127)..(UInt64(UInt64(251))&127):((-101)|1)) as Bool), Option<Bool>.None, (Option<Int16>.None as Bool), Option<Bool>.None, Option<Bool>.None, (Int16(-14) as Bool), ([Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None] as Bool), (UInt32(139) as Bool), Option<Bool>.None] as Bool)]
public var var_1689115888674_889 : Struct_1689115888674_27 = Struct_1689115888674_27()
public var var_1689115888674_906 : Int64 = Int64(UInt16(UInt16(121)))
public let var_1689115888674_958 : Array<Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>> = [(((UInt16(UInt16(Int16(126)))&127)..=(UInt16(UInt16(UInt8(78)))&127):(Int64(19)|1)) as (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)), Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, ((Struct_1689115888674_27(), Int32(-104), ((Int32(Int32(-78))&127)..=(Int32(Int32(-6))&127):(114|1)), UInt16(Int16(-102)), (-106)) as (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)), Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None]
public var var_1689115888674_1005 : Range<Int32> = ((Int32(Int32(69))&127)..=(Int32(Int32(-73))&127):((-95)|1))
public let var_1689115888674_1008 : Rune = r'p'
var var_1689115888674_1077 : Interface_1689115888674_1055<Float64, UInt16> = Class_1689115888674_1052<Range<Int8>, Unit>()
public var var_1689115888674_1096 : (Unit, Range<Int32>, Rune, Unit, Range<UInt8>, Int32) = ((), ((Int32(Int32(-30))&127)..(Int32(Int32(-97))&127):(79|1)), r'd', (), ((UInt8(UInt8(237))&127)..(UInt8(UInt8(47))&127):((-62)|1)), Int32(Int32(Int16(-15))))
public let var_1689115888674_1159 : (Range<Int16>, Array<UInt32>, Rune, Option<Unit>, UInt16) = (((Int16(Int16(Int16(77)))&127)..(Int16(Int16(-107))&127):((-46)|1)), [UInt32(98), UInt32(Int8(Int8(35))), UInt32(36), UInt32(UInt16(UInt8(189))), UInt32(7), UInt32(238), UInt32(15), UInt32(Int32(UInt8(47))), UInt32(94), UInt32(104)], r'q', (Int32(UInt8(Int8(66))) as Unit), UInt16(139))
var var_1689115888674_1219 : Bool = true

public interface Interface_1689115888674_20 {

}

public interface Interface_1689115888674_19 <: Interface_1689115888674_20 {

}

public interface Interface_1689115888674_21 <: Interface_1689115888674_20 {

}

public open class Class_1689115888674_16 <: Interface_1689115888674_19 & Interface_1689115888674_21 & Resource {
    public init() { // block id: 18

    }
;
    public var var_1689115888674_116 : Int8 = Int8(-91);
    private static let var_1689115888674_359 : ?Bool = Option<Bool>.None;
    func func_1689115888674_278() : Bool { // block id: 279
        (Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some(var_1689115888674_163.var_1689115888674_285) ?? var_1689115888674_311);
        let var_1689115888674_329 : Struct_1689115888674_205 = Struct_1689115888674_205();
        (match (var_1689115888674_329.var_1689115888674_332) {
            case _ => 
                var_1689115888674_359
            
        } ?? try { // block id: 362
            var_1689115888674_139
        } catch (_) { // block id: 364
            let var_1689115888674_366 : Float32 = Float32(Float32(-40.0));
            var_1689115888674_366;
            var_1689115888674_139
        })
    }
;
    public mut prop var_1689115888674_569 : Bool { // block id: 570
        get() { // block id: 572
            false
        }

        set(Value) { // block id: 576

        }

    };
    public init(namedParam_1689115888674_526 ! : Range<Int32>, namedParam_1689115888674_527 ! : Range<UInt16>, optionalParam_1689115888674_528 ! : UInt8 = UInt8(54)) { // block id: 530
        (match (if (var_1689115888674_139) { var_1689115888674_536 } else { Option<Unit>.None } ) {
            case _ => 
                var_1689115888674_536
            
        } ?? ((), ((Int32(var_1689115888674_547)&127)..(Int32(Int32(83))&127):(108|1)), r'1', var_1689115888674_553, var_1689115888674_457, var_1689115888674_192)[3]);
        ((UInt32(var_1689115888674_562[7])&127)..=(UInt32(if (var_1689115888674_163.var_1689115888674_569) { // block id: 577
            var_1689115888674_553;
            (-69) / ((var_1689115888674_144) | 1);
            UInt32(210)
        } else { // block id: 583
            var_1689115888674_58
        })&127):(Int64(try { // block id: 587
            var_1689115888674_96;
            r'd';
            Int8(109)
        } catch (e: Exception) { // block id: 591
            var_1689115888674_192;
            var_1689115888674_594
        } finally { // block id: 599
            var var_1689115888674_601 : Int8 = Int8(-15);
            var_1689115888674_601
        })|1));
        try { // block id: 605
            UInt64(23);
            var_1689115888674_387
        } finally { // block id: 608
            var var_1689115888674_611 : Bool = ((((Int64(Int64(Int16(46)))&127)..=(Int64(Int64(58))&127):(Int64(UInt32(114))|1)) as Interface_1689115888674_21) is Option<Unit>);
            var_1689115888674_611 ||= false;
            [(), var_1689115888674_96, var_1689115888674_553, (), var_1689115888674_96, (), (), (), (), ()]
        }[9]
    }
;
    private static prop var_1689115888674_940 : ?(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) { // block id: 941
        get() { // block id: 943
            ((UInt16(UInt16(153))&127)..=(UInt16(UInt16(207))&127):(40|1));
            (((Int8(Int8(-46))&127)..=(Int8(Int8(-42))&127):(10|1)) as Int16);
            Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None
        }

    };
    private static mut prop var_1689115888674_1016 : Int32 { // block id: 1017
        get() { // block id: 1019
            UInt8(239);
            Int32(Int8(UInt8(Int8(31))))
        }

        set(Value) { // block id: 1027
            ()
        }

    };
    private let var_1689115888674_1048 : Array<Range<UInt8>> = [((UInt8(UInt8(45))&127)..=(UInt8(UInt8(181))&127):((-113)|1)), ((UInt8(UInt8(235))&127)..=(UInt8(UInt8(240))&127):((-21)|1)), ((UInt8(UInt8(208))&127)..=(UInt8(UInt8(6))&127):((-38)|1)), ((UInt8(UInt8(148))&127)..(UInt8(UInt8(93))&127):((-95)|1)), ((UInt8(UInt8(89))&127)..(UInt8(UInt8(243))&127):(74|1)), ((UInt8(UInt8(45))&127)..=(UInt8(UInt8(203))&127):((-39)|1)), ((UInt8(UInt8(230))&127)..(UInt8(UInt8(40))&127):((-76)|1)), ((UInt8(UInt8(254))&127)..(UInt8(UInt8(1))&127):(33|1)), ((UInt8(UInt8(100))&127)..=(UInt8(UInt8(171))&127):((-116)|1)), ((UInt8(UInt8(229))&127)..(UInt8(UInt8(203))&127):(69|1))];
    public func func_1689115888674_779(optionalParam_1689115888674_780 ! : () -> Class_1689115888674_16 = func_1689115888674_39) : Int64 { // block id: 783
        ((UInt16(UInt16(187))&127)..(UInt16(UInt16(214))&127):((-74)|1));
        var loopTimeVar_1689115888674_791 : Int64 = 0;
        while ((var_1689115888674_163.var_1689115888674_569) && loopTimeVar_1689115888674_791 < 100 ) {
            loopTimeVar_1689115888674_791++;

        };
        let var_1689115888674_1059 : Class_1689115888674_1052<Range<Int8>, Unit> = Class_1689115888674_1052<Range<Int8>, Unit>();
        if ((var_1689115888674_797[7] ?? try { // block id: 867
            var_1689115888674_139
        } finally { // block id: 869
            ();
            false
        })) { // block id: 872
            var var_1689115888674_954 : Int16 = Int16(9);
            try { // block id: 874
                var_1689115888674_243;
                var_1689115888674_116 /= ((Int8(-85)) | 1);
                var var_1689115888674_881 : ?(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) = (Class_1689115888674_81() as (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64));
                [var_1689115888674_881, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some(var_1689115888674_311), Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some((var_1689115888674_889, var_1689115888674_547, ((Int32(var_1689115888674_192)&127)..(Int32(Int32(-11))&127):(77|1)), var_1689115888674_243, 69)), var_1689115888674_881, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some((Struct_1689115888674_27(((UInt16(UInt16(33))&127)..=(UInt16(var_1689115888674_243)&127):(var_1689115888674_906|1)), r'S', Int32(-47), namedParam_1689115888674_422 : ((Int64(var_1689115888674_906)&127)..=(Int64(var_1689115888674_906)&127):(var_1689115888674_906|1))), var_1689115888674_753, ((Int32(Int32(12))&127)..=(Int32(Int32(48))&127):((-59)|1)), UInt16(3), (-111))), var_1689115888674_881, var_1689115888674_881, var_1689115888674_881, var_1689115888674_881, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None]
            } catch (_) { // block id: 925
                var var_1689115888674_930 : ?(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) = Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None;
                var var_1689115888674_936 : ?(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) = (Int16(-10) as (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64));
                [Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, var_1689115888674_930, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, var_1689115888674_930, var_1689115888674_930, var_1689115888674_936, var_1689115888674_940, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some(var_1689115888674_311), Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None]
            } finally { // block id: 951
                var_1689115888674_954 >>= ((var_1689115888674_954) & 7);
                var_1689115888674_958
            };
            if (true) { // block id: 986
                ((Int16(Int16(124))&127)..(Int16(Int16(-65))&127):((-61)|1));
                var_1689115888674_678
            } else if (var_1689115888674_569) { // block id: 990
                ();
                ();
                var_1689115888674_116 *= var_1689115888674_594
            };
            (var_1689115888674_457, var_1689115888674_144, ((Int8(Int8(-77))&127)..=(Int8(Int8(52))&127):((-47)|1)), ((), var_1689115888674_1005, var_1689115888674_1008, (), ((UInt8(UInt8(77))&127)..=(UInt8(UInt8(211))&127):(var_1689115888674_906|1)), var_1689115888674_1016))[1]
        } else if (true) { // block id: 1031
            try { // block id: 1033
                var_1689115888674_311
            } finally { // block id: 1035
                var_1689115888674_569 ||= var_1689115888674_139;
                (var_1689115888674_889, var_1689115888674_547, var_1689115888674_1005, var_1689115888674_243, 58)
            };
            var_1689115888674_1048[5];
            var_1689115888674_1059.var_1689115888674_1062
        } else { // block id: 1064
            try { // block id: 1066
                var_1689115888674_251 <<= ((var_1689115888674_251) & 7);
                Class_1689115888674_1052<Range<Int8>, Unit>()
            } catch (e: Exception) { // block id: 1071
                var_1689115888674_594;
                Class_1689115888674_81((-60), ((Int32(Int32(-22))&127)..=(Int32(Int32(-66))&127):(94|1)));
                var_1689115888674_1077
            };
            [var_1689115888674_569, var_1689115888674_569, false, false, var_1689115888674_569, var_1689115888674_569, var_1689115888674_139, true, var_1689115888674_139, var_1689115888674_139];
            (var_1689115888674_457, 18, ((Int8(Int8(24))&127)..=(Int8(Int8(-101))&127):(16|1)), var_1689115888674_1096)[1]
        }
    }

    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public struct Struct_1689115888674_27 {
    public init() { // block id: 29

    }
;
    private static var var_1689115888674_379 : Int8 = Int8(29);
    public let var_1689115888674_396 : Class_1689115888674_16 = Class_1689115888674_81();
    func func_1689115888674_260(optionalParam_1689115888674_261 ! : Int8 = Int8(Int8(Int8(UInt8(UInt8(168))))), namedParam_1689115888674_267 ! : Class_1689115888674_16, optionalParam_1689115888674_268 ! : Array<UInt64> = [UInt64(169), UInt64(204), UInt64(113), UInt64(29), UInt64(147), UInt64(99), UInt64(72), UInt64(118), UInt64(245), UInt64(152)], optionalParam_1689115888674_270 ! : Option<Class_1689115888674_16> = (Class_1689115888674_81() as Class_1689115888674_16)) : Class_1689115888674_16 { // block id: 273
        if (var_1689115888674_163.func_1689115888674_278()) { // block id: 370
            if (var_1689115888674_139) { // block id: 373
                var_1689115888674_96;
                Int8(-86)
            } else { // block id: 376
                ();
                var_1689115888674_379
            };
            var_1689115888674_251 |= var_1689115888674_251;
            var_1689115888674_387[9]
        };
        try { // block id: 391
            ();
            Option<Class_1689115888674_16>.Some(var_1689115888674_396).getOrThrow()
        } finally { // block id: 398
            ();
            var_1689115888674_163.var_1689115888674_403
        }
    }
;
    init(param_1689115888674_419 : Range<UInt16>, param_1689115888674_420 : Rune, param_1689115888674_421 : Int32, namedParam_1689115888674_422 ! : Range<Int64>) { // block id: 423
        var var_1689115888674_453 : Rune = r'x';
        try (resource = Class_1689115888674_16()) { // block id: 425
            Option<Int16>.Some(var_1689115888674_251).getOrThrow();
            var loopTimeVar_1689115888674_441 : Int64 = 0;
            while ((true) && loopTimeVar_1689115888674_441 < 100 ) {
                loopTimeVar_1689115888674_441++;
                ();
                var var_1689115888674_438 : Class_1689115888674_16 = Class_1689115888674_16();
                var_1689115888674_438
            }
        } catch (_) { // block id: 442
            ();
            (var_1689115888674_96, ((Int32(Int32(-83))&127)..=(Int32(var_1689115888674_192)&127):((-33)|1)), var_1689115888674_453, (), var_1689115888674_457, var_1689115888674_192)[3]
        };
        try (resource = Class_1689115888674_16()) { // block id: 466
            var_1689115888674_311;
            var_1689115888674_106;
            var var_1689115888674_471 : Bool = (false is Interface_1689115888674_21);
            var_1689115888674_471 ||= var_1689115888674_139
        } catch (_) { // block id: 475
            try { // block id: 477
                var_1689115888674_243 %= ((UInt16(46)) | 1);
                (-92)
            } catch (e: Exception) { // block id: 482
                var_1689115888674_243 &= UInt16(49);
                var_1689115888674_144
            } finally { // block id: 487
                (-39)
            };
            try (resource = Class_1689115888674_16()) { // block id: 490
                var_1689115888674_96;
                var var_1689115888674_494 : Float32 = Float32(-12.0);
                var_1689115888674_494 /= Float32((Int32(Float32(-97.0))) | 1);
                var_1689115888674_499 = var_1689115888674_499
            } catch (e: Exception) { // block id: 502

            }
        };
        var_1689115888674_163.var_1689115888674_506
    }

}


func func_1689115888674_23<T0, T1, T2>() : Interface_1689115888674_21 { // block id: 43
    var var_1689115888674_65 : Unit = ();
    (var_1689115888674_50 ?? (try { // block id: 55
        var_1689115888674_58 ^= var_1689115888674_58;
        UInt16(131);
        var_1689115888674_50
    } finally { // block id: 63
        var_1689115888674_65;
        var_1689115888674_50
    } ?? try { // block id: 69
        Class_1689115888674_16()
    } finally { // block id: 71
        ();
        var_1689115888674_65;
        Class_1689115888674_16()
    }))
}


public open class Class_1689115888674_81 <: Class_1689115888674_16 & Interface_1689115888674_21 & Interface_1689115888674_19 {
    init() { // block id: 83

    }
;
    public static let var_1689115888674_86 : ?Class_1689115888674_16 = Option<Class_1689115888674_16>.None;
    public mut prop var_1689115888674_285 : (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) { // block id: 286
        get() { // block id: 288
            Int32(UInt16(68));
            (Struct_1689115888674_27(), Int32(-83), ((Int32(Int32(-111))&127)..=(Int32(Int32(Int32(51)))&127):(Int64(Int16(-9))|1)), UInt16(Int8(121)), Int64(UInt16(52)))
        }

        set(Value) { // block id: 306
            ();
            ();
            ()
        }

    };
    prop var_1689115888674_403 : Class_1689115888674_16 { // block id: 404
        get() { // block id: 406
            Class_1689115888674_16()
        }

    };
    prop var_1689115888674_506 : Unit { // block id: 507
        get() { // block id: 509
            ()
        }

    };
    init(param_1689115888674_650 : Int64, param_1689115888674_651 : Range<Int32>) { // block id: 652
        var var_1689115888674_667 : Float64 = Float64(Float32(Float32(Float32(Float32(-82.0)))));
        var loopTimeVar_1689115888674_760 : Int64 = 0;
        (match ((Int16(40), Float32(64.0), var_1689115888674_661, var_1689115888674_667)[1]) {
            case -86.0 | -36.0 | 13.0 | -90.0 => 
                var_1689115888674_678;
                var_1689115888674_681;
                var_1689115888674_536
            
            case caseVar_1689115888674_696 : Array<Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>> => 
                if (false) { Option<Unit>.Some(var_1689115888674_678) } else { Option<Unit>.None } 
            
            case 75.0 | 18.0 | -86.0 => 
                var_1689115888674_553;
                if (true) { Option<Unit>.None } else { Option<Unit>.Some(var_1689115888674_553) } 
            
            case 41.0 | 32.0 | 103.0 => 
                var_1689115888674_716;
                var_1689115888674_536
            
            case _ => 
                (-119.0);
                if (true) { var_1689115888674_536 } else { Option<Unit>.Some(()) } 
            
        } ?? do {
            loopTimeVar_1689115888674_760++;
            var_1689115888674_749;
            var_1689115888674_753 <<= ((Int32(-116)) & 7)
        } while (([true, false, false, true, false, true, false, false, true, false][7]) && loopTimeVar_1689115888674_760 < 100 ) )
    }

}


public func func_1689115888674_39() : Class_1689115888674_16 { // block id: 40
    func_1689115888674_23<Unit, Rune, Float64>();
    var var_1689115888674_112 : Class_1689115888674_16 = Class_1689115888674_16();
    (Class_1689115888674_81.var_1689115888674_86 ?? (try { // block id: 94
        var_1689115888674_96;
        if (false) { r'f' } else { r'T' } ;
        Option<Class_1689115888674_16>.None
    } finally { // block id: 103
        ();
        var_1689115888674_106
    } ?? (Option<Class_1689115888674_16>.Some(var_1689115888674_112) ?? var_1689115888674_112)))
}

func func_1689115888674_36() : Class_1689115888674_16 { // block id: 37
    func_1689115888674_39()
}



public struct Struct_1689115888674_205 {
    public init() { // block id: 207

    }
;
    public static mut prop var_1689115888674_210 : (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) { // block id: 211
        get() { // block id: 213
            Class_1689115888674_81();
            (Struct_1689115888674_27(), Int32(-16), ((Int32(Int32(Int32(-48)))&127)..=(Int32(Int32(-87))&127):(Int64(Int8(-61))|1)), UInt16(Int16(3)), Int64(Int64(UInt64(239))))
        }

        set(Value) { // block id: 231
            Int32(Int32(UInt16(225)));
            ()
        }

    };
    public mut prop var_1689115888674_332 : Option<Unit> { // block id: 333
        get() { // block id: 335
            Class_1689115888674_16();
            ();
            ((Struct_1689115888674_27(), Int32(Int8(74)), ((Int32(Int32(110))&127)..(Int32(Int32(-105))&127):((-68)|1)), UInt16(UInt8(2)), Int64(1)) as Unit);
            var_1689115888674_1281
        }

        set(Value) { // block id: 353
            ();
            ();
            var_1689115888674_1281 = Value
        }

    };
    mut prop var_1689115888674_1281 : Option<Unit> { // block id: 1282
        get() { // block id: 1284
            (((), ((Int32(Int32(20))&127)..=(Int32(Int32(27))&127):((-31)|1)), r'W', (), ((UInt8(UInt8(116))&127)..(UInt8(UInt8(23))&127):((-68)|1)), Int32(Int16(-38))) as Unit)
        }

        set(Value) { // block id: 1302
            Class_1689115888674_81();
            ()
        }

    }
}

public func func_1689115888674_119(param_1689115888674_120 : Int16) : Struct_1689115888674_27 { // block id: 121
    var loopTimeVar_1689115888674_166 : Int64 = 0;
    while ((if ([true, true, true, true, false, true, true, false, false, false][0]) { // block id: 137
        var_1689115888674_139
    } else { // block id: 141
        var_1689115888674_144 %= ((var_1689115888674_144) | 1);
        var_1689115888674_96;
        UInt8(167) != UInt8(126)
    }) && loopTimeVar_1689115888674_166 < 100 ) {
        loopTimeVar_1689115888674_166++;
        (Option<Class_1689115888674_81>.Some(Class_1689115888674_81()) ?? var_1689115888674_163)
    };
    var var_1689115888674_178 : ?(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64) = (Option<Unit>.Some(()) as (Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64));
    ([var_1689115888674_178, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, var_1689115888674_178, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, var_1689115888674_178, var_1689115888674_178, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.Some((Struct_1689115888674_27(), var_1689115888674_192, ((Int32(Int32(96))&127)..=(Int32(var_1689115888674_192)&127):(102|1)), UInt16(6), var_1689115888674_144)), Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None, Option<(Struct_1689115888674_27, Int32, Range<Int32>, UInt16, Int64)>.None][7] ?? Struct_1689115888674_205.var_1689115888674_210)[0]
}



public func func_1689115888674_23(param_1689115888674_24 : Unit) : Class_1689115888674_16 { // block id: 25
    func func_1689115888674_31(namedParam_1689115888674_32 ! : String) : Struct_1689115888674_27 { // block id: 33
        func_1689115888674_36().var_1689115888674_116;
        Int16(48)|>func_1689115888674_119
    }
;
    let var_1689115888674_414 : Class_1689115888674_16 = Class_1689115888674_16();
    func_1689115888674_31(namedParam_1689115888674_32 : try { // block id: 240
        var_1689115888674_243 ^= var_1689115888674_243;
        "h>4K\"js%Xg"
    } finally { // block id: 248
        var_1689115888674_251 += var_1689115888674_251;
        ((UInt64(UInt64(169))&127)..(UInt64(UInt64(111))&127):((-126)|1));
        ###"~2_fy_)n-8"###
    }).func_1689115888674_260(namedParam_1689115888674_267 : try { // block id: 409
        var_1689115888674_144 % ((111) | 1);
        var_1689115888674_414
    } catch (e: Exception) { // block id: 416
        let var_1689115888674_512 : Range<UInt16> = ((UInt16(UInt16(Int16(Int8(-5))))&127)..(UInt16(UInt16(30))&127):((-63)|1));
        Struct_1689115888674_27(var_1689115888674_512, r'u', var_1689115888674_192, namedParam_1689115888674_422 : ((Int64((-56))&127)..=(Int64((-20))&127):(39|1)));
        let var_1689115888674_523 : Class_1689115888674_16 = Class_1689115888674_16(namedParam_1689115888674_526 : ((Int32(Int32(-47))&127)..=(Int32(Int32(103))&127):(52|1)), namedParam_1689115888674_527 : ((UInt16(UInt16(85))&127)..(UInt16(UInt16(138))&127):((-83)|1)), optionalParam_1689115888674_528 : UInt8(Int8(UInt8(Int8(-5)))));
        var_1689115888674_523
    } finally { // block id: 640
        let var_1689115888674_642 : Class_1689115888674_81 = Class_1689115888674_81();
        var_1689115888674_642;
        if (var_1689115888674_139) { var_1689115888674_457 } else { ((UInt8(UInt8(254))&127)..=(UInt8(UInt8(229))&127):((-62)|1)) } ;
        Class_1689115888674_81(var_1689115888674_144, ((Int32(Int32(90))&127)..(Int32(Int32(-13))&127):(86|1)))
    }, optionalParam_1689115888674_270 : (var_1689115888674_50 as Class_1689115888674_16))
}

public interface Interface_1689115888674_1057 {

}

public interface Interface_1689115888674_1056<T0, T1> <: Interface_1689115888674_1057 {

}

public interface Interface_1689115888674_1055<T0, T1> <: Interface_1689115888674_1056<Int64, Array<Range<UInt8>>> {

}

public open class Class_1689115888674_1052<T0, T1> <: Interface_1689115888674_1055<Float64, UInt16> {
    init() { // block id: 1054

    }
;
    public var var_1689115888674_1062 : Int64 = (-31)
}


public func func_1689115888674_13<T0>() : Option<Unit> { // block id: 14
    let var_1689115888674_1114 : () -> Class_1689115888674_16 = func_1689115888674_39;
    func_1689115888674_23([var_1689115888674_678, (), var_1689115888674_553, var_1689115888674_553, var_1689115888674_678, var_1689115888674_553, (), (), var_1689115888674_96, ()][7]).func_1689115888674_779(optionalParam_1689115888674_780 : var_1689115888674_1114);
    let var_1689115888674_1130 : ?(Range<Int16>, Array<UInt32>, Rune, Option<Unit>, UInt16) = (UInt64(UInt32(UInt8(177))) as (Range<Int16>, Array<UInt32>, Rune, Option<Unit>, UInt16));
    (match (var_1689115888674_753) {
        case -60 | 0 | 21 => 
            var_1689115888674_553;
            var_1689115888674_1130
        
        case _ => 
            let var_1689115888674_1139 : UInt8 = UInt8(Int8(Int8(UInt8(Int8(-9)))));
            var_1689115888674_1139;
            if (true) { var_1689115888674_1130 } else { var_1689115888674_1130 } 
        
        case caseVar_1689115888674_1151 : Struct_1689115888674_205 => 
            var var_1689115888674_1154 : Array<UInt64> = [UInt64(245), UInt64(31), UInt64(116), UInt64(150), UInt64(212), UInt64(184), UInt64(52), UInt64(59), UInt64(208), UInt64(244)];
            var_1689115888674_1154;
            var_1689115888674_681;
            Option<(Range<Int16>, Array<UInt32>, Rune, Option<Unit>, UInt16)>.Some(var_1689115888674_1159)
        
        case _ => 
            let var_1689115888674_1192 : Interface_1689115888674_20 = Class_1689115888674_16();
            var_1689115888674_1192;
            ();
            var_1689115888674_1130
        
    } ?? try { // block id: 1197
        var_1689115888674_1159
    } finally { // block id: 1199
        var_1689115888674_163;
        if (true) { ###"U>>mo|=%g7"### } else { var_1689115888674_499 } ;
        let var_1689115888674_1212 : Rune = r't';
        (((Int16(var_1689115888674_251)&127)..(Int16(var_1689115888674_251)&127):(10|1)), [UInt32(162), UInt32(133), UInt32(38), UInt32(154), UInt32(149), UInt32(110), UInt32(152), UInt32(247), UInt32(116), UInt32(16)], var_1689115888674_1212, var_1689115888674_536, UInt16(214))
    })[3]
}

main(): Int64 {
    try {
        var loopTimeVar_1689115888674_1227 : Array<Range<UInt8>> = [((UInt8(UInt8(24))&127)..=(UInt8(UInt8(29))&127):(55|1)), ((UInt8(UInt8(220))&127)..=(UInt8(UInt8(25))&127):(Int64(Int8(Int8(82)))|1)), ((UInt8(UInt8(UInt8(Int8(113))))&127)..=(UInt8(UInt8(15))&127):(Int64(UInt16(177))|1)), ((UInt8(UInt8(14))&127)..(UInt8(UInt8(98))&127):(74|1)), ((UInt8(UInt8(UInt8(197)))&127)..(UInt8(UInt8(20))&127):((-23)|1)), ((UInt8(UInt8(180))&127)..(UInt8(UInt8(71))&127):(15|1)), ((UInt8(UInt8(10))&127)..=(UInt8(UInt8(239))&127):(Int64(UInt16(UInt8(85)))|1)), ((UInt8(UInt8(UInt8(UInt8(235))))&127)..(UInt8(UInt8(227))&127):(Int64(UInt32(42))|1)), ((UInt8(UInt8(102))&127)..=(UInt8(UInt8(234))&127):(57|1)), ((UInt8(UInt8(UInt8(Int8(-115))))&127)..=(UInt8(UInt8(46))&127):(Int64(Int8(UInt8(112)))|1))];
        (func_1689115888674_13<UInt8>() ?? for (i in loopTimeVar_1689115888674_1227 where var_1689115888674_1219) {
            var_1689115888674_553;
            ((UInt64(UInt64(162))&127)..(UInt64(UInt64(83))&127):(var_1689115888674_906|1))
        });
        [[(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()]][8][5];
        var_1689115888674_906
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1689115888674_594*var_1689115888674_594), 64)
        crccheck.updateBuffer(UInt64(var_1689115888674_753*var_1689115888674_753), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Int32 {
        var i = 0
        var res = ""
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            res = res + hex_value.toString()
            i = i + 3
        }
        print("\n")
        if ( res == "377777777777777777762364220017245220333" ){
            return 0
        }
        return 1
    }
}
extend Struct_1689115888674_205 {

}

extend<T0, T1> Class_1689115888674_1052<T0, T1> {

}

