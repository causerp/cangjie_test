/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1754326514670_67: ?Option<Bool> = Option<Option<Bool>>.None
@Deprecated
public let var_1754326514670_121: Unit = ()
internal let var_1754326514670_132: Range<Int8> = ((Int8(Int8(Int8(UInt8(Int8(11))))) & 127)..(Int8(Int8(UInt8(UInt8(115)))) &
    127) : (Int64(-100) | 1))
public var var_1754326514670_154: UInt32 = UInt32(147)
internal var var_1754326514670_174: String = """
h/PHE
Z_r)w
"""
var var_1754326514670_204: UInt16 = UInt16(UInt8(Int8(87)))
public var var_1754326514670_217: Array<Range<UInt8>> = [((UInt8(UInt8(138)) & 127)..(UInt8(UInt8(179)) & 127) : (Int64(77) |
    1)), ((UInt8(UInt8(176)) & 127)..=(UInt8(UInt8(187)) & 127) : (Int64(99) | 1)),
    ((UInt8(UInt8(Int8(UInt8(5)))) & 127)..=(UInt8(UInt8(248)) & 127) : (Int64(UInt8(170)) | 1)),
    ((UInt8(UInt8(19)) & 127)..=(UInt8(UInt8(207)) & 127) : (Int64(-111) | 1)),
    ((UInt8(UInt8(64)) & 127)..=(UInt8(UInt8(155)) & 127) : (Int64(-13) | 1)),
    ((UInt8(UInt8(121)) & 127)..=(UInt8(UInt8(UInt8(Int8(75)))) & 127) : (Int64(Int16(85)) | 1)),
    ((UInt8(UInt8(89)) & 127)..(UInt8(UInt8(231)) & 127) : (Int64(42) | 1)),
    ((UInt8(UInt8(104)) & 127)..(UInt8(UInt8(89)) & 127) : (Int64(20) | 1)),
    ((UInt8(UInt8(227)) & 127)..=(UInt8(UInt8(UInt8(79))) & 127) : (Int64(Int8(UInt8(207))) | 1)),
    ((UInt8(UInt8(95)) & 127)..(UInt8(UInt8(217)) & 127) : (Int64(-84) | 1))]
public let var_1754326514670_269: Byte = UInt8(45)
@Deprecated
const var_1754326514670_349: String = "Iya1nFH.ic"
public const var_1754326514670_364: Int = 39
@Deprecated
public let var_1754326514670_373: UInt = UInt64(156)
public const var_1754326514670_435: Float32 = -87.0
@Deprecated
public const var_1754326514670_439: Int16 = -105
public const var_1754326514670_445: UInt = 202
@Deprecated
const var_1754326514670_494: Unit = ()
public const var_1754326514670_510: Bool = true
const var_1754326514670_513: Bool = false
internal const var_1754326514670_549: Rune = r'e'
@Deprecated
public var var_1754326514670_577: UInt16 = UInt16(UInt16(Int16(UInt8(UInt8(47)))))
internal var var_1754326514670_617: Class_1754326514670_612<Int32> = Class_1754326514670_612<Int32>()
public var var_1754326514670_636: Class_1754326514670_632<Class_1754326514670_612<Int32>> = Class_1754326514670_632<Class_1754326514670_612<Int32>>()
public let var_1754326514670_645: Int64 = Int64(48)
public let var_1754326514670_650: UInt8 = UInt8(UInt8(107))
public let var_1754326514670_663: (Range<UInt16>, Range<Int8>, Int32, Range<Int32>, Range<UInt8>) = (((UInt16(UInt16(17)) &
        127)..(UInt16(UInt16(235)) & 127) : (Int64(38) | 1)), ((Int8(Int8(64)) & 127)..(Int8(Int8(51)) & 127) : (Int64(14) |
        1)), Int32(Int16(Int8(Int8(-12)))), ((Int32(Int32(-39)) & 127)..(Int32(Int32(63)) & 127) : (Int64(-18) | 1)), ((UInt8(UInt8(65)) &
        127)..=(UInt8(UInt8(124)) & 127) : (Int64(41) | 1)))
public let var_1754326514670_760: Float64 = Float64(Float64(-91.0))
public var var_1754326514670_835: Range<Int32> = ((Int32(Int32(UInt32(27))) & 127)..=(Int32(Int32(UInt16(Int8(67)))) &
    127) : (Int64(-46) | 1))
public let var_1754326514670_900: Range<UInt16> = ((UInt16(UInt16(UInt16(141))) & 127)..=(UInt16(UInt16(Int8(Int8(-78)))) &
    127) : (Int64(UInt8(216)) | 1))
@Deprecated
public var var_1754326514670_913: Unit = ()
@Deprecated
let var_1754326514670_923: Option<Range<Int64>> = ([((UInt8(UInt8(11)) & 127)..=(UInt8(UInt8(239)) & 127) : (Int64(55) |
    1)), ((UInt8(UInt8(222)) & 127)..=(UInt8(UInt8(72)) & 127) : (Int64(110) | 1)),
    ((UInt8(UInt8(237)) & 127)..=(UInt8(UInt8(42)) & 127) : (Int64(-19) | 1)),
    ((UInt8(UInt8(84)) & 127)..=(UInt8(UInt8(125)) & 127) : (Int64(90) | 1)),
    ((UInt8(UInt8(3)) & 127)..(UInt8(UInt8(160)) & 127) : (Int64(-43) | 1)),
    ((UInt8(UInt8(150)) & 127)..(UInt8(UInt8(186)) & 127) : (Int64(-93) | 1)),
    ((UInt8(UInt8(224)) & 127)..(UInt8(UInt8(105)) & 127) : (Int64(-61) | 1)),
    ((UInt8(UInt8(241)) & 127)..(UInt8(UInt8(125)) & 127) : (Int64(61) | 1)),
    ((UInt8(UInt8(140)) & 127)..=(UInt8(UInt8(13)) & 127) : (Int64(115) | 1)),
    ((UInt8(UInt8(61)) & 127)..(UInt8(UInt8(109)) & 127) : (Int64(-36) | 1))] as Range<Int64>)
@Deprecated
public var var_1754326514670_991: Range<Int64> = ((Int64(Int64(29)) & 127)..=(Int64(Int64(104)) & 127) : (Int64(-54) | 1))
@Deprecated
public let var_1754326514670_1160: String = ">qNAIbyrDI"
@Deprecated
public var var_1754326514670_1163: Range<UInt8> = ((UInt8(UInt8(19)) & 127)..=(UInt8(UInt8(141)) & 127) : (Int64(98) | 1))
internal let var_1754326514670_1168: (String, Range<UInt8>) = ("/G9dW<Xx3e", ((UInt8(UInt8(234)) & 127)..=(UInt8(UInt8(52)) &
        127) : (Int64(-83) | 1)))
public let var_1754326514670_1186: Option<Bool> = Option<Bool>.None
const var_1754326514670_1218: Int = 107
public var var_1754326514670_1222: Int8 = Int8(Int8(UInt8(UInt8(UInt8(29)))))
@Deprecated
public const var_1754326514670_1230: Int = -53
@Deprecated
internal let var_1754326514670_1276: Range<UInt32> = ((UInt32(UInt32(52)) & 127)..=(UInt32(UInt32(192)) & 127) : (Int64(Int64(119)) |
    1))
public let var_1754326514670_1307: Unit = ()
@Deprecated
public let var_1754326514670_1313: Unit = ()
@Deprecated
public let var_1754326514670_1323: Array<Int64> = [Int64(-108), Int64(-115), Int64(108), Int64(117), Int64(-83),
    Int64(-85), Int64(-87), Int64(-23), Int64(-69), Int64(-121)]
let var_1754326514670_1329: (Range<UInt8>, Option<Option<Bool>>, UInt8, Option<Bool>, Range<Int32>, Range<Int16>, Range<UInt16>) = (((UInt8(UInt8(UInt8(253))) &
        127)..=(UInt8(UInt8(154)) & 127) : (Int64(Int16(99)) | 1)), Option<Option<Bool>>.None, UInt8(182), Option<Bool>
        .None, ((Int32(Int32(-47)) & 127)..(Int32(Int32(UInt16(197))) & 127) : (Int64(46) | 1)), ((Int16(Int16(-42)) &
        127)..(Int16(Int16(63)) & 127) : (Int64(19) | 1)), ((UInt16(UInt16(165)) & 127)..=(UInt16(UInt16(Int16(37))) &
        127) : (Int64(UInt32(Int8(-55))) | 1)))

public sealed interface Interface_1754326514670_12 {
    static func func_1754326514670_126(namedParam_1754326514670_127!: Range<Int8>,
        namedParam_1754326514670_128!: Range<Int16>, namedParam_1754326514670_129!: UInt32): Unit { // block id: 130

    }
}

public open class Class_1754326514670_9 <: Interface_1754326514670_12 & Resource {
    @Frozen
    public init() { // block id: 11

    }

    @Frozen
    public static mut prop var_1754326514670_15: Unit { // block id: 16
        get() { // block id: 18

        }
        set(Value) { // block id: 21
            ();
            ()
        }
    }

    @Frozen
    public static mut prop var_1754326514670_848: (Range<Int16>, VArray<Unit, $7>) { // block id: 849
        get() { // block id: 851
            ();
            ();
            (((Int16(Int16(-97)) & 127)..(Int16(Int16(-81)) & 127) : (Int64(UInt32(71)) | 1)), VArray<Unit, $7>({
                        i => ()
                    }));
            var_1754326514670_1371
        }
        set(Value) { // block id: 870
            ();
            ((Int64(Int64(20)), r'Y', UInt32(UInt32(207))) as Option<Bool>);
            ();
            var_1754326514670_1371 = Value
        }
    }
    private static let var_1754326514670_996: (Array<UInt64>, Bool, (Float32, Unit, Array<Range<UInt8>>, UInt16, Option<Bool>)) = ([UInt64(35),
            UInt64(101), UInt64(192), UInt64(28), UInt64(136), UInt64(143), UInt64(243), UInt64(226), UInt64(138),
            UInt64(153)], false, (Float32(-61.0), (), [((UInt8(UInt8(101)) & 127)..=(UInt8(UInt8(239)) & 127) : (Int64(120) |
                1)), ((UInt8(UInt8(81)) & 127)..(UInt8(UInt8(232)) & 127) : (Int64(-85) | 1)),
                ((UInt8(UInt8(7)) & 127)..(UInt8(UInt8(195)) & 127) : (Int64(-48) | 1)),
                ((UInt8(UInt8(11)) & 127)..(UInt8(UInt8(182)) & 127) : (Int64(41) | 1)),
                ((UInt8(UInt8(169)) & 127)..(UInt8(UInt8(211)) & 127) : (Int64(49) | 1)),
                ((UInt8(UInt8(224)) & 127)..(UInt8(UInt8(221)) & 127) : (Int64(71) | 1)),
                ((UInt8(UInt8(181)) & 127)..(UInt8(UInt8(11)) & 127) : (Int64(-2) | 1)),
                ((UInt8(UInt8(102)) & 127)..(UInt8(UInt8(235)) & 127) : (Int64(-2) | 1)),
                ((UInt8(UInt8(128)) & 127)..=(UInt8(UInt8(243)) & 127) : (Int64(-122) | 1)),
                ((UInt8(UInt8(95)) & 127)..=(UInt8(UInt8(3)) & 127) : (Int64(-32) | 1))], UInt16(196), Option<Bool>.None));

    @Frozen
    public func func_1754326514670_980(param_1754326514670_981: Int32, namedParam_1754326514670_982!: Range<UInt32>,
        optionalParam_1754326514670_983!: Option<Range<Int64>> = ([(), (), (), (), (), (), (), (), (), ()] as Range<Int64>),
        namedParam_1754326514670_986!: (Int8) -> String): (Float32, Unit, Array<Range<UInt8>>, UInt16, Option<Bool>) { // block id: 989
        var_1754326514670_991;
        var_1754326514670_996[2]
    };

    static let var_1754326514670_1034: Bool = false;
    static var var_1754326514670_1037: VArray<Unit, $4> = [(), (), (), ()];

    @Frozen
    static func func_1754326514670_1020<T0, T1>(
        param_1754326514670_1021: (Float32, Unit, Array<Range<UInt8>>, UInt16, Option<Bool>),
        optionalParam_1754326514670_1022!: Option<Bool> = (((UInt16(UInt16(98)) & 127)..(UInt16(UInt16(142)) & 127) : (Int64(-98) |
            1)) as Bool)): String { // block id: 1025
        try { // block id: 1029
            UInt32(36);
            var_1754326514670_121;
            if (var_1754326514670_1034) {
                var_1754326514670_1037
            } else {
                VArray<Unit, $4>(repeat: var_1754326514670_913)
            }
        } finally { // block id: 1048
            var_1754326514670_1037
        }[0];
        var var_1754326514670_1061: Array<Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>> = [Option<(UInt32, 
                (Int64, Rune, UInt32), Option<String>, Float64)>.Some(
            (UInt32(UInt16(92)), (Int64(122), r'k', UInt32(165)), Option<String>.Some("COY>EZ}971"), Float64(90.0))),
            (((Int16(Int16(87)) & 127)..=(Int16(Int16(UInt16(208))) & 127) : (Int64(-53) | 1)) as (UInt32, (Int64, Rune, 
            UInt32), Option<String>, Float64)),
            Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>.Some(
            (UInt32(Int8(5)), (Int64(28), r'B', UInt32(243)), (((Int64(Int64(47)) & 127)..(Int64(Int64(116)) & 127) : (Int64(110) |
                    1)) as String), Float64(Float64(-17.0)))),
            Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>.Some(
            (UInt32(13), (Int64(-120), r'Y', UInt32(88)), Option<String>.None, Float64(-109.0))),
            (((UInt16(UInt16(UInt16(22))) & 127)..(UInt16(UInt16(UInt16(162))) & 127) : (Int64(-14) | 1)) as (UInt32, (Int64, 
            Rune, UInt32), Option<String>, Float64)),
            ((((UInt16(UInt16(112)) & 127)..(UInt16(UInt16(186)) & 127) : (Int64(-89) | 1)), ((Int8(Int8(-55)) & 127)..(Int8(Int8(-1)) &
                127) : (Int64(112) | 1)), Int32(58), ((Int32(Int32(36)) & 127)..(Int32(Int32(-100)) & 127) : (Int64(107) |
                1)), ((UInt8(UInt8(31)) & 127)..=(UInt8(UInt8(8)) & 127) : (Int64(-102) | 1))) as (UInt32, (Int64, Rune, 
            UInt32), Option<String>, Float64)), Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>.None,
            Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>.Some(
            (UInt32(UInt16(115)), (Int64(-21), r'T', UInt32(63)), Option<String>.Some(":WX_^R5|-5"), Float64(53.0))),
            Option<(UInt32, (Int64, Rune, UInt32), Option<String>, Float64)>.None,
            (UInt32(Int16(126)) as (UInt32, (Int64, Rune, UInt32), Option<String>, Float64))];
        (var_1754326514670_1061[1] ?? (var_1754326514670_154, (Int64(23), r'L', var_1754326514670_154),
            Option<String>.Some(var_1754326514670_174), var_1754326514670_760))[1];
        try { // block id: 1157
            (var_1754326514670_1160, var_1754326514670_1163)
        } finally { // block id: 1165
            var_1754326514670_15;
            var_1754326514670_1168
        }[0]
    };

    static mut prop var_1754326514670_1371: (Range<Int16>, VArray<Unit, $7>) { // block id: 1372
        get() { // block id: 1374
            (((UInt16(UInt16(144)) & 127)..(UInt16(UInt16(Int16(-90))) & 127) : (Int64(UInt64(196)) | 1)), ((Int8(Int8(-128)) &
                    127)..=(Int8(Int8(UInt8(83))) & 127) : (Int64(UInt32(254)) | 1)), Int32(-44), ((Int32(Int32(30)) &
                    127)..=(Int32(Int32(113)) & 127) : (Int64(-58) | 1)), ((UInt8(UInt8(113)) & 127)..(UInt8(UInt8(234)) &
                    127) : (Int64(11) | 1)));
            [UInt64(50), UInt64(Int32(30)), UInt64(54), UInt64(Int32(UInt16(88))), UInt64(UInt16(220)),
                UInt64(UInt32(51)), UInt64(UInt8(Int8(98))), UInt64(159), UInt64(UInt32(Int8(-59))), UInt64(230)];
            (((Int16(Int16(UInt8(3))) & 127)..=(Int16(Int16(Int8(122))) & 127) : (Int64(54) | 1)), VArray<Unit, $7>({
                        i => ()
                    }))
        }
        set(Value) { // block id: 1428
            ();
            ()
        }
    }
    public static func func_1754326514670_126(namedParam_1754326514670_127!: Range<Int8>,
        namedParam_1754326514670_128!: Range<Int16>, namedParam_1754326514670_129!: UInt32): Unit { // block id: 1436

    }

    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

public open class Class_1754326514670_279 <: Resource {
    public init() { // block id: 281

    }

    @Frozen
    public static prop var_1754326514670_284: Unit { // block id: 285
        get() { // block id: 287
            ();
            ()
        }
    }

    @Frozen
    public init(optionalParam_1754326514670_313!: Float64 = Float64(Float32(-39.0)),
        optionalParam_1754326514670_316!: Range<Int64> = ((Int64(Int64(Int32(Int32(Int16(1))))) & 127)..(Int64(Int64(-87)) &
            127) : (Int64(Int32(UInt32(Int16(-86)))) | 1)), namedParam_1754326514670_327!: Range<UInt8>,
        optionalParam_1754326514670_328!: Array<UInt64> = [UInt64(53), UInt64(92), UInt64(Int8(UInt8(13))),
            UInt64(UInt16(166)), UInt64(23), UInt64(UInt64(Int64(Int8(-83)))), UInt64(62), UInt64(57),
            UInt64(UInt16(97)), UInt64(183)]) { // block id: 347
        var_1754326514670_349;
        (var_1754326514670_617.var_1754326514670_620 <<= ((var_1754326514670_636.var_1754326514670_639) & 7)) |>
            func_1754326514670_352
    }

    static init() {
    }
    public func isClosed(): Bool {
        return false
    }
    public func close(): Unit {}
}

@Frozen
@Deprecated
public const func func_1754326514670_430(param_1754326514670_431: Int8): String { // block id: 432
    var_1754326514670_435 - 100.0;
    var_1754326514670_439;
    const var_1754326514670_453: Bool = false;
    if (((var_1754326514670_445 & var_1754326514670_445) <= var_1754326514670_445)) {
        (if ((true && var_1754326514670_453)) {
            """
<cE9:
'yD9v
"""
        } else {
            "i5P9?cNx7E"
        })
    } else {
        (if (var_1754326514670_453) {
            (if (var_1754326514670_453) {
                var_1754326514670_349
            } else {
                "|[/VJN2HJu"
            })
        } else {
            "Lubu]C=un_"
        })
    }
}

@Frozen
const func func_1754326514670_502(optionalParam_1754326514670_503!: Int16 = 70,
    optionalParam_1754326514670_505!: Bool = true, namedParam_1754326514670_507!: Bool): Bool { // block id: 508
    var_1754326514670_510
}

@Frozen
const func func_1754326514670_490(namedParam_1754326514670_491!: Rune): UInt32 { // block id: 492
    var_1754326514670_494;
    const var_1754326514670_498: Bool = true;
    const var_1754326514670_519: String = ###";)`ZDd7g'Q"###;
    if (var_1754326514670_498) {
        (if (func_1754326514670_502(namedParam_1754326514670_507: var_1754326514670_513)) {
            ###"d?Ga3MFJ<M"###
        } else {
            (if (var_1754326514670_498) {
                var_1754326514670_519
            } else {
                "XM\"0eW'=x:"
            })
        })
    } else {
        (if ((false && var_1754326514670_498)) {
            "d_v>+bqh$="
        } else {
            "Gq62hPbao#"
        })
    };
    const var_1754326514670_529: UInt32 = 103;
    var_1754326514670_529
}

@Deprecated
internal const func func_1754326514670_476(param_1754326514670_477: UInt16, namedParam_1754326514670_478!: UInt64,
    optionalParam_1754326514670_479!: UInt64 = 68, namedParam_1754326514670_481!: UInt32): UInt32 { // block id: 482
    const func func_1754326514670_484(): UInt32 { // block id: 485
        var_1754326514670_439;
        const var_1754326514670_533: UInt32 = 9;
        (func_1754326514670_490(namedParam_1754326514670_491: r'v') & var_1754326514670_533) >> ((var_1754326514670_533) &
            7)
    };

    func_1754326514670_484()
}

@Frozen
public const func func_1754326514670_393(): Float32 { // block id: 394
    const var_1754326514670_465: Int8 = 70;
    const var_1754326514670_537: UInt16 = 104;
    const func func_1754326514670_408(): UInt32 { // block id: 409
        const func func_1754326514670_417(param_1754326514670_418: String, namedParam_1754326514670_419!: Bool,
            optionalParam_1754326514670_420!: String = "w;eK2q7/vE", namedParam_1754326514670_422!: UInt64): Int8 { // block id: 423
            -8
        };

        const var_1754326514670_427: Bool = true;
        const func func_1754326514670_468(optionalParam_1754326514670_469!: Int16 = -90): UInt64 { // block id: 471
            -67;
            229
        };

        ((-8 + 82) / ((-45) | 1)) << ((func_1754326514670_417("""
:;<jw
NFY3_
""",
            namedParam_1754326514670_419: var_1754326514670_427,
            optionalParam_1754326514670_420: func_1754326514670_430(var_1754326514670_465),
            namedParam_1754326514670_422: func_1754326514670_468(optionalParam_1754326514670_469: -32))) & 7);
        func_1754326514670_476(var_1754326514670_537, namedParam_1754326514670_478: var_1754326514670_445,
            optionalParam_1754326514670_479: var_1754326514670_445, namedParam_1754326514670_481: 251)
    };

    const func func_1754326514670_396(optionalParam_1754326514670_397!: Int64 = -121,
        namedParam_1754326514670_399!: UInt64, namedParam_1754326514670_400!: Int8): UInt32 { // block id: 401
        91;
        const var_1754326514670_405: UInt32 = 55;
        var_1754326514670_405 >> ((func_1754326514670_408()) & 7)
    };

    func_1754326514670_396(namedParam_1754326514670_399: var_1754326514670_445,
        namedParam_1754326514670_400: var_1754326514670_465);
    var_1754326514670_364;
    -24.0
}

@Frozen
public const func func_1754326514670_383(optionalParam_1754326514670_384!: UInt64 = 201): Float32 { // block id: 386
    ();
    const var_1754326514670_390: Float32 = -113.0;
    var_1754326514670_390 * func_1754326514670_393()
}

@Frozen
public const func func_1754326514670_379(param_1754326514670_380: Bool): Rune { // block id: 381
    func_1754326514670_383();
    const var_1754326514670_554: Rune = r'E';
    if (true) {
        var_1754326514670_549
    } else {
        (if (var_1754326514670_513) {
            var_1754326514670_554
        } else {
            r'J'
        })
    }
}

@Deprecated
public func func_1754326514670_352(param_1754326514670_353: Unit): Range<UInt16> { // block id: 354
    try (resource = Class_1754326514670_279()) { // block id: 356
        const var_1754326514670_368: Unit = ();
        (((Int64(Int64(-72)) & 127)..=(Int64(Int64(16)) & 127) : (var_1754326514670_364 | 1)), ((Int64(Int64(-70)) & 127)..=(Int64(Int64(60)) &
                127) : (Int64(-64) | 1)), var_1754326514670_368, ((UInt64(UInt64(56)) & 127)..(UInt64(var_1754326514670_373) &
                127) : (Int64(-45) | 1)))[2]
    } catch (e: Exception) { // block id: 377
        true |> func_1754326514670_379;
        var loopTimeVar_1754326514670_563: Int64 = 0;
        do {
            loopTimeVar_1754326514670_563++;
        } while ((true) && loopTimeVar_1754326514670_563 < 100)
    };
    var var_1754326514670_588: (Range<UInt16>, Range<Int8>, Int32, Range<Int32>, Range<UInt8>) = (((UInt16(UInt16(131)) &
            127)..=(UInt16(UInt16(146)) & 127) : (Int64(-77) | 1)), ((Int8(Int8(UInt8(27))) & 127)..(Int8(Int8(-21)) &
            127) : (Int64(111) | 1)), Int32(Int32(78)), ((Int32(Int32(-77)) & 127)..(Int32(Int32(-14)) & 127) : (Int64(84) |
            1)), ((UInt8(UInt8(UInt8(Int8(-31)))) & 127)..(UInt8(UInt8(29)) & 127) : (Int64(-34) | 1)));
    try { // block id: 565
        Option<Range<UInt16>>
            .Some(((UInt16(UInt16(204)) & 127)..=(UInt16(UInt16(201)) & 127) : (Int64(-118) | 1)))
            .getOrThrow()
    } catch (e: Exception) { // block id: 573
        ((UInt16(UInt16(17)) & 127)..=(UInt16(var_1754326514670_577) & 127) : (Int64(93) | 1))
    } finally { // block id: 584
        var_1754326514670_588[0]
    }
}

public sealed interface Interface_1754326514670_615 {}

@Deprecated
public open class Class_1754326514670_612<T0> <: Class_1754326514670_279 & Interface_1754326514670_615 {
    public init() { // block id: 614

    }

    @Frozen
    mut prop var_1754326514670_620: Byte { // block id: 621
        get() { // block id: 623
            UInt8(UInt8(Int8(27)))
        }
        set(Value) { // block id: 629
            ()
        }
    }

    @Frozen
    public mut prop var_1754326514670_733: Float64 { // block id: 734
        get() { // block id: 736
            Float64(-98.0)
        }
        set(Value) { // block id: 740
            ();
            ();
            ()
        }
    }
}

public open class Class_1754326514670_632<T0> <: Class_1754326514670_279 & Interface_1754326514670_615 where T0 <: Class_1754326514670_612<Int32> & Class_1754326514670_279 {
    @Frozen
    public init() { // block id: 634

    }

    public var var_1754326514670_639: Byte = UInt8(249)
}

public open class Class_1754326514670_719 <: Resource {
    public init() { // block id: 721

    }

    @Frozen
    public static prop var_1754326514670_780: Option<Bool> { // block id: 781
        get() { // block id: 783
            Option<Bool>.None
        }
    }
    public static var var_1754326514670_885: Bool
    static init() {
        var_1754326514670_885 = true
    }
    public func isClosed(): Bool {
        return true
    }
    public func close(): Unit {}
}

func func_1754326514670_304(): Option<Bool> { // block id: 305
    ();
    var var_1754326514670_681: Int64 = Int64(126);
    var loopTimeVar_1754326514670_702: Array<UInt64> = [UInt64(Int8(97)), UInt64(Int8(65)), UInt64(UInt16(UInt8(230))),
        UInt64(227), UInt64(173), UInt64(228), UInt64(24), UInt64(1), UInt64(168), UInt64(56)];
    for (i in loopTimeVar_1754326514670_702 where (Class_1754326514670_279(
            optionalParam_1754326514670_316: ((Int64(var_1754326514670_364) & 127)..(Int64(var_1754326514670_364) & 127) : (var_1754326514670_645 |
                1)),
            namedParam_1754326514670_327: ((UInt8(UInt8(58)) & 127)..(UInt8(var_1754326514670_650) & 127) : (var_1754326514670_645 |
                1))), ((Int8(Int8(-66)) & 127)..=(Int8(Int8(-44)) & 127) : (Int64(1) | 1)), [((UInt8(UInt8(134)) & 127)..(UInt8(UInt8(214)) &
            127) : (Int64(-117) | 1)), ((UInt8(UInt8(156)) & 127)..=(UInt8(UInt8(239)) & 127) : (Int64(17) | 1)),
            ((UInt8(UInt8(130)) & 127)..=(UInt8(UInt8(155)) & 127) : (Int64(91) | 1)),
            ((UInt8(UInt8(244)) & 127)..(UInt8(UInt8(110)) & 127) : (Int64(81) | 1)),
            ((UInt8(UInt8(71)) & 127)..=(UInt8(UInt8(218)) & 127) : (Int64(94) | 1)),
            ((UInt8(UInt8(160)) & 127)..=(UInt8(UInt8(165)) & 127) : (Int64(3) | 1)),
            ((UInt8(UInt8(158)) & 127)..=(UInt8(UInt8(63)) & 127) : (Int64(-109) | 1)),
            ((UInt8(UInt8(51)) & 127)..=(UInt8(UInt8(187)) & 127) : (Int64(-34) | 1)),
            ((UInt8(UInt8(31)) & 127)..=(UInt8(UInt8(149)) & 127) : (Int64(96) | 1)),
            ((UInt8(UInt8(146)) & 127)..(UInt8(UInt8(0)) & 127) : (Int64(-106) | 1))], var_1754326514670_510, Int8(118),
        var_1754326514670_373, UInt64(113))[3]) {
        var_1754326514670_663;
        var loopTimeVar_1754326514670_684: Array<UInt64> = [UInt64(Int16(-88)), UInt64(189), UInt64(Int64(87)),
            UInt64(44), UInt64(196), UInt64(UInt64(Int32(UInt32(160)))), UInt64(Int16(9)), UInt64(148), UInt64(132),
            UInt64(211)];
        for (i in loopTimeVar_1754326514670_684 where var_1754326514670_510) {
            var_1754326514670_681 <<= ((Int64(92)) & 7)
        }
    };
    var loopTimeVar_1754326514670_805: Int64 = 0;
    Class_1754326514670_719.func_1754326514670_724(do {
        loopTimeVar_1754326514670_805++;
    } while ((true) && loopTimeVar_1754326514670_805 < 100))
}

public func func_1754326514670_272(
    optionalParam_1754326514670_273!: Range<Int32> = ((Int32(Int32(-117)) & 127)..=(Int32(Int32(-67)) & 127) : (Int64(-118) |
        1))): Option<Bool> { // block id: 275
    var var_1754326514670_813: UInt32 = UInt32(135);
    var var_1754326514670_830: Int16 = Int16(40);
    try { // block id: 277
        Class_1754326514670_279.var_1754326514670_284;
        var var_1754326514670_293: Range<Int16> = ((Int16(Int16(88)) & 127)..=(Int16(Int16(Int8(-126))) & 127) : (Int64(55) |
            1));
        if (true) {
            var_1754326514670_293
        } else {
            ((Int16(Int16(-35)) & 127)..(Int16(Int16(87)) & 127) : (Int64(16) | 1))
        };
        func_1754326514670_304()
    } catch (e: Exception) { // block id: 806
        (var_1754326514670_645, r'J', var_1754326514670_813)[1];
        var var_1754326514670_819: Option<Bool> = Option<Bool>.Some((r'i' is (Int8) -> String));
        try { // block id: 817
            var_1754326514670_819
        } catch (e: Exception) { // block id: 823
            Option<Bool>.Some(true)
        } finally { // block id: 826
            Float32(-110.0);
            var_1754326514670_830 += Int16(-121)
            var_1754326514670_819
        }
    }
}

@Frozen
@Deprecated
internal func func_1754326514670_79<T0, T1>(param_1754326514670_80: Unit): (Range<UInt8>, Option<Option<Bool>>, UInt8, 
    Option<Bool>, Range<Int32>, Range<Int16>, Range<UInt16>) { // block id: 81
    var var_1754326514670_87: Bool = (Option<Option<Bool>>.None is VArray<Unit, $7>);
    var loopTimeVar_1754326514670_92: Array<UInt64> = [UInt64(208), UInt64(193), UInt64(Int16(Int8(UInt8(37)))),
        UInt64(123), UInt64(120), UInt64(UInt16(UInt8(Int8(-120)))), UInt64(30), UInt64(229),
        UInt64(UInt64(UInt64(Int8(-124)))), UInt64(Int32(Int8(-70)))];
    var var_1754326514670_144: Int16 = Int16(-111);
    var loopTimeVar_1754326514670_157: Range<UInt64> = ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(231)) & 127) : (Int64(-22) |
        1));
    VArray<Unit, $7>(repeat: for (i in loopTimeVar_1754326514670_92 where var_1754326514670_87) {
            Float64(-18.0)
        })[2];
    try { // block id: 166
        (Option<String>.Some(var_1754326514670_174) ?? "i$`}D*^b%v")
    } finally { // block id: 177
        var_1754326514670_121;
        var loopTimeVar_1754326514670_187: Range<UInt64> = ((UInt64(UInt64(UInt64(204))) & 127)..(UInt64(UInt64(144)) &
            127) : (Int64(Int64(Int64(57))) | 1));
        for (i in loopTimeVar_1754326514670_187 where false) {
            if (true) {
                Option<Bool>.Some(true)
            } else {
                Option<Bool>.None
            }
        };
        try { // block id: 196
            if (true) {
                " <MNz.VBMS"
            } else {
                "c&X 'oS1]K"
            }
        } finally { // block id: 201
            var_1754326514670_204 >>= ((UInt16(196)) & 7)
            if (var_1754326514670_87) {
                var_1754326514670_174
            } else {
                """
p:(ij
K7p!\"
"""
            }
        }
    };
    (var_1754326514670_217[4], var_1754326514670_67, try { // block id: 250
            [(), var_1754326514670_121, (), (), (), (), var_1754326514670_121, (), (), ()];
            let var_1754326514670_265: Byte = UInt8(158);
            UInt8(85) >> ((var_1754326514670_265) & 7)
        } finally { // block id: 267
            var_1754326514670_269
        }, func_1754326514670_272(), var_1754326514670_835, Class_1754326514670_9.var_1754326514670_848[0], if ((Class_1754326514670_719
            .var_1754326514670_885)) {
            (Option<Range<UInt16>>.None ?? ((UInt16(UInt16(214)) & 127)..=(UInt16(var_1754326514670_204) & 127) : (Int64(68) |
                1)))
        } else {
            (Option<Range<UInt16>>.None ?? var_1754326514670_900)
        })
}

@Deprecated
func func_1754326514670_42(param_1754326514670_43: Float64): Unit { // block id: 44
    func func_1754326514670_52(param_1754326514670_53: Unit): Option<Bool> { // block id: 54
        var var_1754326514670_64: Unit = ();
        (try { // block id: 61
            """
\"Q](e
wHend
""";
            var_1754326514670_64;
            var_1754326514670_67
        } catch (e: Exception) { // block id: 69
            var_1754326514670_67;
            Option<Option<Bool>>.None
        } finally { // block id: 72
            var_1754326514670_67;
            ();
            var_1754326514670_67
        } ?? (var_1754326514670_64 |> func_1754326514670_79<Array<Unit>, Bool>)[3])
    };

    var var_1754326514670_930: Int64 = Int64(116);
    var loopTimeVar_1754326514670_933: Int = 0;
    do {
        loopTimeVar_1754326514670_933++;
        (var_1754326514670_923 ?? ((Int64(Int64(-78)) & 127)..=(Int64(Int64(-7)) & 127) : (var_1754326514670_930 | 1)))
    } while (((func_1754326514670_52(var_1754326514670_913) ?? true)) && loopTimeVar_1754326514670_933 < 100);
    var var_1754326514670_953: Bool = ((((Int16(Int16(Int16(92))) & 127)..=(Int16(Int16(77)) & 127) : (Int64(-50) | 1)),
        VArray<Unit, $7>({i => ()})) is Range<UInt16>);
    try (resource = Class_1754326514670_9()) { // block id: 935
        const var_1754326514670_937: Int32 = -5;
        var_1754326514670_937;
        if (true) { // block id: 941
            ((Int8(Int8(118)) & 127)..=(Int8(Int8(65)) & 127) : (Int64(121) | 1));
            ()
        };
        Option<Unit>.None.getOrThrow()
    } catch (e: Exception) { // block id: 950
        var loopTimeVar_1754326514670_972: Int64 = 0;
        while ((var_1754326514670_953) && loopTimeVar_1754326514670_972 < 100) {
            loopTimeVar_1754326514670_972++;
            ()
        }
    };
    let var_1754326514670_977: Class_1754326514670_9 = Class_1754326514670_9();
    let var_1754326514670_1174: (Float32, Unit, Array<Range<UInt8>>, UInt16, Option<Bool>) = (Float32(-73.0), (), [((UInt8(UInt8(105)) &
            127)..(UInt8(UInt8(30)) & 127) : (Int64(109) | 1)),
            ((UInt8(UInt8(246)) & 127)..(UInt8(UInt8(135)) & 127) : (Int64(-33) | 1)),
            ((UInt8(UInt8(54)) & 127)..=(UInt8(UInt8(156)) & 127) : (Int64(-75) | 1)),
            ((UInt8(UInt8(235)) & 127)..=(UInt8(UInt8(86)) & 127) : (Int64(-118) | 1)),
            ((UInt8(UInt8(248)) & 127)..(UInt8(UInt8(239)) & 127) : (Int64(6) | 1)),
            ((UInt8(UInt8(93)) & 127)..=(UInt8(UInt8(131)) & 127) : (Int64(-13) | 1)),
            ((UInt8(UInt8(124)) & 127)..=(UInt8(UInt8(191)) & 127) : (Int64(57) | 1)),
            ((UInt8(UInt8(207)) & 127)..(UInt8(UInt8(180)) & 127) : (Int64(7) | 1)),
            ((UInt8(UInt8(71)) & 127)..=(UInt8(UInt8(208)) & 127) : (Int64(-42) | 1)),
            ((UInt8(UInt8(236)) & 127)..=(UInt8(UInt8(212)) & 127) : (Int64(87) | 1))], UInt16(Int16(-109)), (Float64(54.0) as Bool));
    var_1754326514670_977.func_1754326514670_980(Int32(-94),
        namedParam_1754326514670_982: ((UInt32(var_1754326514670_154) & 127)..=(UInt32(UInt32(122)) & 127) : (var_1754326514670_930 |
            1)), optionalParam_1754326514670_983: var_1754326514670_923, namedParam_1754326514670_986: {
            lambdaParameter_1754326514670_1015: Int8 => Class_1754326514670_9
                .func_1754326514670_1020<Float32, Array<Range<UInt8>>>(var_1754326514670_1174,
                    optionalParam_1754326514670_1022: (var_1754326514670_67 ?? var_1754326514670_1186))
        })[1]
}

public struct Struct_1754326514670_1196 {
    public init() { // block id: 1198

    }

    @Frozen
    static prop var_1754326514670_1201: Option<Bool> { // block id: 1202
        get() { // block id: 1204
            ();
            false;
            (r'X' as Bool)
        }
    }
}

main(): Int64 {
    try {
        const var_1754326514670_39: Unit = ();
        let var_1754326514670_1190: (Float64) -> Unit = func_1754326514670_42;
        try (resource = Class_1754326514670_719()) { // block id: 7
            Class_1754326514670_9.var_1754326514670_15;
            [(), (), (), (), (), (), (), (), (), ()][8]
        } finally { // block id: 37
            var_1754326514670_39;
            var_1754326514670_760 |> var_1754326514670_1190
        };
        const var_1754326514670_1247: Bool = false;
        const var_1754326514670_1261: Float32 = 61.0;
        let var_1754326514670_1265: (Range<Int64>, Range<Int64>, Unit, Range<UInt64>) = (((Int64(Int64(-88)) & 127)..(Int64(Int64(-23)) &
                127) : (Int64(-69) | 1)), ((Int64(Int64(56)) & 127)..=(Int64(Int64(UInt32(253))) & 127) : (Int64(-27) | 1)),
            (), ((UInt64(UInt64(206)) & 127)..=(UInt64(UInt64(150)) & 127) : (Int64(-84) | 1)));
        if ((Struct_1754326514670_1196.var_1754326514670_1201 ?? if (false) { // block id: 1211
            ();
            const var_1754326514670_1235: Int32 = -125;
            (((UInt16(var_1754326514670_204) & 127)..(UInt16(UInt16(89)) & 127) : (var_1754326514670_1218 | 1)), ((Int8(var_1754326514670_1222) &
                    127)..(Int8(var_1754326514670_1222) & 127) : (var_1754326514670_1230 | 1)), Int32(35), ((Int32(var_1754326514670_1235) &
                    127)..(Int32(Int32(98)) & 127) : (Int64(-94) | 1)), ((UInt8(UInt8(162)) & 127)..(UInt8(var_1754326514670_650) &
                    127) : (Int64(119) | 1)));
            var var_1754326514670_1244: Bool = false;
            var_1754326514670_1244
        } else if (var_1754326514670_1247) { // block id: 1249
            true
        } else { // block id: 1251
            var_1754326514670_121;
            Int64(53);
            true
        })) { // block id: 1255
            (Int64(-2), var_1754326514670_1261, r'4', var_1754326514670_1265, var_1754326514670_1276, VArray<Unit, $7>(repeat: var_1754326514670_913),
                var_1754326514670_1222, """
/B4aJ
RziB$
""")[4];
            var loopTimeVar_1754326514670_1299: Int64 = 0;
            while ((var_1754326514670_1247) && loopTimeVar_1754326514670_1299 < 100) {
                loopTimeVar_1754326514670_1299++;
                Option<Bool>.Some(var_1754326514670_1247)
            }
        };
        match ([var_1754326514670_121, var_1754326514670_1307, var_1754326514670_121, var_1754326514670_913, (),
            var_1754326514670_1313, (), (), var_1754326514670_39, var_1754326514670_1307]) {
            case _ => var_1754326514670_1323
        }[8] + match (var_1754326514670_1329) {
            case (caseVar_1754326514670_1358: (String, Range<UInt8>), caseVar_1754326514670_1359, caseVar_1754326514670_1360, _: Struct_1754326514670_1196, _, _, caseVar_1754326514670_1361: Option<String>) =>
                var_1754326514670_1261;
                [Int64(17), Int64(-110), Int64(39), Int64(-89), Int64(7), Int64(-40), Int64(113), Int64(-50), Int64(124),
                    Int64(66)]

            case _ => var_1754326514670_1323
        }[4]
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1754326514670_154 * var_1754326514670_154), 64)
        crcCheck.updateBuffer(UInt64(var_1754326514670_204 * var_1754326514670_204), 64)
        crcCheck.updateBuffer(UInt64(var_1754326514670_269 * var_1754326514670_269), 64)
        crcCheck.updateBuffer(UInt64(var_1754326514670_1218 * var_1754326514670_1218), 64)
        crcCheck.updateBuffer(UInt64(var_1754326514670_1222 * var_1754326514670_1222), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1754326514670_719 {
    public static func func_1754326514670_724(param_1754326514670_725: Unit): Option<Bool> { // block id: 726
        var var_1754326514670_730: Class_1754326514670_612<Int32> = Class_1754326514670_612<Int32>();
        var_1754326514670_730.var_1754326514670_733 *= try { // block id: 745
            var_1754326514670_577 / ((UInt16(8)) | 1);
            var var_1754326514670_751: Float64 = Float64(Float32(41.0));
            var_1754326514670_751 * var_1754326514670_751
        } catch (_) { // block id: 755
            ();
            var_1754326514670_121;
            var_1754326514670_760 * Float64(-20.0)
        };
        var loopTimeVar_1754326514670_799: Int = 0;
        while (((try { // block id: 767
                var var_1754326514670_769: Option<Bool> = (((Int64(Int64(-1)) & 127)..(Int64(Int64(98)) & 127) : (Int64(UInt16(56)) |
                    1)) as Bool);
                var_1754326514670_769
            } catch (_) { // block id: 776
                if (true) {
                    var_1754326514670_780
                } else {
                    var_1754326514670_780
                }
            } finally { // block id: 786
                var_1754326514670_780
            } ?? try { // block id: 789
                Int32(94) << ((Int32(-127)) & 7);
                true
            } finally { // block id: 794
                Float32(36.0);
                var_1754326514670_510
            })) && loopTimeVar_1754326514670_799 < 100) {
            loopTimeVar_1754326514670_799++;
        };
        var_1754326514670_780
    }
}
