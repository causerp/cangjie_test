/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %cmp_opt %overflow_wrapping %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

// All global variable need to be defined before use!
let var_1688609120642_30 : Unit = ()
let var_1688609120642_57 : Bool = false
let var_1688609120642_74 : UInt16 = UInt16(UInt16(Int8(Int8(UInt8(239)))))
var var_1688609120642_96 : UInt8 = UInt8(221)
var var_1688609120642_100 : UInt32 = UInt32(105)
public var var_1688609120642_133 : Int8 = Int8(-7)
let var_1688609120642_165 : ?(Range<Int64>, Bool, UInt32) = (Float32(-32.0) as (Range<Int64>, Bool, UInt32))
public var var_1688609120642_202 : Rune = r'b'
var var_1688609120642_239 : ?(Range<Int64>, Bool, UInt32) = Option<(Range<Int64>, Bool, UInt32)>.None
var var_1688609120642_385 : Int64 = (-105)
let var_1688609120642_590 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
let var_1688609120642_626 : Int16 = Int16(UInt8(24))
public var var_1688609120642_633 : Bool = false
public let var_1688609120642_666 : ?Interface_1688609120642_345 = Option<Interface_1688609120642_345>.None
public var var_1688609120642_669 : Interface_1688609120642_345 = Class_1688609120642_338()
public let var_1688609120642_676 : Class_1688609120642_672 = Class_1688609120642_672()
public var var_1688609120642_739 : Option<Rune> = Option<Rune>.None
public var var_1688609120642_831 : Option<Class_1688609120642_338> = Option<Class_1688609120642_338>.None
public var var_1688609120642_836 : Range<Int64> = ((Int64(27)&127)..=(Int64(8)&127):((-73)|1))
var var_1688609120642_866 : Bool = true
let var_1688609120642_913 : UInt64 = UInt64(77)
public var var_1688609120642_1021 : Range<UInt8> = ((UInt8(UInt8(248))&127)..(UInt8(UInt8(181))&127):(45|1))
public let var_1688609120642_1027 : (Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>) = (((UInt8(UInt8(181))&127)..=(UInt8(UInt8(97))&127):(Int64(UInt16(Int16(-84)))|1)), ((UInt8(UInt8(Int8(Int8(-7))))&127)..=(UInt8(UInt8(207))&127):(Int64(UInt16(235))|1)), Float32(Float32(69.0)), [UInt8(UInt8(39))], [UInt64(UInt32(Int16(70))), UInt64(95), UInt64(UInt64(179)), UInt64(Int16(Int8(-62))), UInt64(Int8(UInt8(234))), UInt64(31), UInt64(Int16(50)), UInt64(UInt32(Int32(50))), UInt64(12), UInt64(UInt32(UInt8(191)))])
var var_1688609120642_1084 : VArray<Unit, $1> = [()]
public let var_1688609120642_1154 : (VArray<UInt8, $1>, Int16, VArray<Unit, $1>) = ([UInt8(Int8(UInt8(88)))], Int16(Int16(60)), [()])
public let var_1688609120642_1177 : (Range<Int16>, Range<Int16>, Range<Int8>, Range<Int16>, Array<Unit>, Range<UInt16>, Range<UInt16>) = (((Int16(Int16(-50))&127)..=(Int16(Int16(55))&127):((-47)|1)), ((Int16(Int16(Int16(UInt16(200))))&127)..=(Int16(Int16(9))&127):(99|1)), ((Int8(Int8(Int8(UInt8(108))))&127)..=(Int8(Int8(-70))&127):(48|1)), ((Int16(Int16(UInt8(UInt8(116))))&127)..(Int16(Int16(Int16(Int16(-112))))&127):(Int64(Int16(12))|1)), [(), (), (), (), (), (), (), (), (), ()], ((UInt16(UInt16(5))&127)..=(UInt16(UInt16(131))&127):(126|1)), ((UInt16(UInt16(231))&127)..=(UInt16(UInt16(208))&127):((-104)|1)))
public let var_1688609120642_1245 : Range<Int16> = ((Int16(Int16(-39))&127)..(Int16(Int16(-100))&127):(106|1))
var var_1688609120642_1253 : Option<VArray<UInt8, $5>> = (((Int32(Int32(72))&127)..=(Int32(Int32(-3))&127):(6|1)) as VArray<UInt8, $5>)
var var_1688609120642_1267 : Array<UInt8> = [UInt8(177), UInt8(75), UInt8(147), UInt8(193), UInt8(125), UInt8(8), UInt8(47), UInt8(139), UInt8(133), UInt8(121)]
let var_1688609120642_1274 : Int32 = Int32(Int16(Int8(-104)))
public let var_1688609120642_1352 : ?(Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>) = ((((UInt8(UInt8(128))&127)..=(UInt8(UInt8(UInt8(26)))&127):(Int64(UInt8(208))|1)), ((UInt8(UInt8(176))&127)..=(UInt8(UInt8(37))&127):((-63)|1)), Float32(Float32(Float32(116.0))), [UInt8(173)], [UInt64(Int16(13)), UInt64(203), UInt64(91), UInt64(152), UInt64(52), UInt64(Int8(95)), UInt64(UInt64(208)), UInt64(Int32(-98)), UInt64(UInt8(239)), UInt64((-88))]) as (Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>))
var var_1688609120642_1438 : VArray<UInt8, $5> = [UInt8(UInt8(UInt8(UInt8(0)))), UInt8(182), UInt8(94), UInt8(Int8(UInt8(226))), UInt8(250)]
var var_1688609120642_1468 : (Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>) = (((UInt8(UInt8(UInt8(UInt8(48))))&127)..=(UInt8(UInt8(Int8(UInt8(5))))&127):(Int64(UInt16(180))|1)), ((UInt8(UInt8(34))&127)..=(UInt8(UInt8(5))&127):(49|1)), Float32(108.0), [UInt8(Int8(Int8(19)))], [UInt64(192), UInt64(128), UInt64(171), UInt64(60), UInt64(242), UInt64(225), UInt64(0), UInt64(148), UInt64(155), UInt64(23)])
var var_1688609120642_1494 : Option<(VArray<UInt8, $5>, UInt64, ((Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>), Range<Int16>, Bool), Bool, UInt8)> = (Class_1688609120642_338() as (VArray<UInt8, $5>, UInt64, ((Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>), Range<Int16>, Bool), Bool, UInt8))
public var var_1688609120642_1513 : Range<Int8> = ((Int8(Int8(123))&127)..(Int8(Int8(-46))&127):((-79)|1))
public var var_1688609120642_1541 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(121))&127)..=(UInt16(UInt16(145))&127):((-102)|1)), ((Int16(Int16(UInt16(138)))&127)..=(Int16(Int16(UInt8(148)))&127):((-87)|1)), [UInt64(UInt16(99)), UInt64(Int8(52)), UInt64(183), UInt64(UInt32(82)), UInt64(123), UInt64(UInt32(235)), UInt64(Int32(Int32(-11))), UInt64(UInt32(Int32(-15))), UInt64(Int8(Int8(8))), UInt64(216)])
let var_1688609120642_1579 : VArray<Unit, $1> = [()]
let var_1688609120642_1583 : UInt64 = UInt64(Int8(Int8(-27)))
var var_1688609120642_1607 : Bool = ([UInt8(Int8(UInt8(205)))] is Int32)


func func_1688609120642_221(param_1688609120642_222 : Unit) : Unit { // block id: 223

}



public interface Interface_1688609120642_345 {
    func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }

}

sealed public interface Interface_1688609120642_346 {

}

public interface Interface_1688609120642_344<T0> <: Interface_1688609120642_345 & Interface_1688609120642_346 {
    func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }
;
    func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }

}

sealed public interface Interface_1688609120642_343 <: Interface_1688609120642_344<UInt32> {
    func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }
;
    func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }

}

sealed public interface Interface_1688609120642_342 <: Interface_1688609120642_343 {
    func func_1688609120642_895(param_1688609120642_896 : Array<UInt64>, namedParam_1688609120642_897 ! : Array<UInt64>) : UInt32 { // block id: 898
        var var_1688609120642_906 : Unit = ();
        var var_1688609120642_923 : UInt64 = UInt64(UInt32(197));
        var var_1688609120642_927 : Array<UInt64> = [UInt64(Int32(Int32(UInt8(151)))), UInt64(Int8(-83)), UInt64(Int8(Int8(UInt8(154)))), UInt64(9), UInt64(UInt64(131)), UInt64(155), UInt64(58), UInt64(Int32(-61)), UInt64(Int32(112)), UInt64(Int64(UInt16(Int8(112))))];
        UInt32((UInt8(222) + if (false) { // block id: 904
            var_1688609120642_906;
            if (var_1688609120642_57) { [UInt64(128), var_1688609120642_913, var_1688609120642_913, UInt64(218), var_1688609120642_913, var_1688609120642_913, UInt64(186), UInt64(112), UInt64(55), var_1688609120642_923] } else { var_1688609120642_927 } ;
            let var_1688609120642_954 : UInt8 = UInt8(Int8(112));
            var var_1688609120642_958 : UInt8 = UInt8(228);
            var_1688609120642_954 - var_1688609120642_958
        } else { // block id: 960
            var_1688609120642_666;
            -var_1688609120642_96
        }))
    }
;
    func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }
;
    func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }

}

public interface Interface_1688609120642_341 <: Interface_1688609120642_342 {
    func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }
;
    func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }
;
    func func_1688609120642_895(param_1688609120642_896 : Array<UInt64>, namedParam_1688609120642_897 ! : Array<UInt64>) : UInt32 { // block id: 898
        var var_1688609120642_906 : Unit = ();
        var var_1688609120642_923 : UInt64 = UInt64(UInt32(197));
        var var_1688609120642_927 : Array<UInt64> = [UInt64(Int32(Int32(UInt8(151)))), UInt64(Int8(-83)), UInt64(Int8(Int8(UInt8(154)))), UInt64(9), UInt64(UInt64(131)), UInt64(155), UInt64(58), UInt64(Int32(-61)), UInt64(Int32(112)), UInt64(Int64(UInt16(Int8(112))))];
        UInt32((UInt8(222) + if (false) { // block id: 904
            var_1688609120642_906;
            if (var_1688609120642_57) { [UInt64(128), var_1688609120642_913, var_1688609120642_913, UInt64(218), var_1688609120642_913, var_1688609120642_913, UInt64(186), UInt64(112), UInt64(55), var_1688609120642_923] } else { var_1688609120642_927 } ;
            let var_1688609120642_954 : UInt8 = UInt8(Int8(112));
            var var_1688609120642_958 : UInt8 = UInt8(228);
            var_1688609120642_954 - var_1688609120642_958
        } else { // block id: 960
            var_1688609120642_666;
            -var_1688609120642_96
        }))
    }

}

public open class Class_1688609120642_338 <: Interface_1688609120642_341 {
    init() { // block id: 340

    }
;
    mut prop var_1688609120642_646 : Float64 { // block id: 647
        get() { // block id: 649
            ();
            ();
            (-38.0);
            var_1688609120642_1634
        }

        set(Value) { // block id: 655
            ();
            ();
            var_1688609120642_1634 = Value
        }

    };
    prop var_1688609120642_689 : Bool { // block id: 690
        get() { // block id: 692
            ();
            ();
            false
        }

    };
    init(namedParam_1688609120642_351 ! : Int16) { // block id: 352
        let var_1688609120642_1076 : VArray<UInt8, $1> = [UInt8(Int8(UInt8(Int8(23))))];
        func_1688609120642_354<Interface_1688609120642_341>((var_1688609120642_1076, var_1688609120642_626, var_1688609120642_1084)[1]);
        var var_1688609120642_1107 : Unit = ();
        var loopTimeVar_1688609120642_1111 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        for (i in loopTimeVar_1688609120642_1111 where if (if (var_1688609120642_633) { // block id: 1091
            true
        } else { // block id: 1093
            Option<Interface_1688609120642_345>.None;
            false
        }) { // block id: 1096
            ();
            var var_1688609120642_1099 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
            var_1688609120642_1099;
            var_1688609120642_57
        } else if (false) { // block id: 1103
            true
        } else { // block id: 1105
            var_1688609120642_1107;
            var_1688609120642_633
        }) {

        };
        var var_1688609120642_1124 : ??(Range<Int64>, Bool, UInt32) = Option<Option<(Range<Int64>, Bool, UInt32)>>.Some(((UInt64(50) as Range<UInt8>) as (Range<Int64>, Bool, UInt32)));
        var_1688609120642_1124
    }
;
    var var_1688609120642_1634 : Float64 = 72.0;
    public open override func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    public open override func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }
;
    public open override func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    public open override func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }
;
    public open override func func_1688609120642_895(param_1688609120642_896 : Array<UInt64>, namedParam_1688609120642_897 ! : Array<UInt64>) : UInt32 { // block id: 898
        var var_1688609120642_906 : Unit = ();
        var var_1688609120642_923 : UInt64 = UInt64(UInt32(197));
        var var_1688609120642_927 : Array<UInt64> = [UInt64(Int32(Int32(UInt8(151)))), UInt64(Int8(-83)), UInt64(Int8(Int8(UInt8(154)))), UInt64(9), UInt64(UInt64(131)), UInt64(155), UInt64(58), UInt64(Int32(-61)), UInt64(Int32(112)), UInt64(Int64(UInt16(Int8(112))))];
        UInt32((UInt8(222) + if (false) { // block id: 904
            var_1688609120642_906;
            if (var_1688609120642_57) { [UInt64(128), var_1688609120642_913, var_1688609120642_913, UInt64(218), var_1688609120642_913, var_1688609120642_913, UInt64(186), UInt64(112), UInt64(55), var_1688609120642_923] } else { var_1688609120642_927 } ;
            let var_1688609120642_954 : UInt8 = UInt8(Int8(112));
            var var_1688609120642_958 : UInt8 = UInt8(228);
            var_1688609120642_954 - var_1688609120642_958
        } else { // block id: 960
            var_1688609120642_666;
            -var_1688609120642_96
        }))
    }

}




func func_1688609120642_578() : UInt8 { // block id: 579
    ();
    let var_1688609120642_583 : (Unit) -> Unit = func_1688609120642_221;
    if (true) { var_1688609120642_590 } else { [(), (), (), (), (), (), (), (), (), ()] } [2]|>var_1688609120642_583;
    func func_1688609120642_605(namedParam_1688609120642_606 ! : Int64, namedParam_1688609120642_607 ! : Float64, namedParam_1688609120642_608 ! : Interface_1688609120642_345) : UInt8 { // block id: 609
        ((if (false) { // block id: 618
            var_1688609120642_30;
            true
        } else if (var_1688609120642_57) { // block id: 622
            Int16(110) != var_1688609120642_626
        } else { // block id: 629
            var_1688609120642_385;
            var_1688609120642_633 ||= true;
            UInt32(138) < var_1688609120642_100
        } as UInt8) ?? UInt8(138))
    }
;
    let var_1688609120642_643 : Class_1688609120642_338 = Class_1688609120642_338();
    func_1688609120642_605(namedParam_1688609120642_606 : (-120), namedParam_1688609120642_607 : var_1688609120642_643.var_1688609120642_646, namedParam_1688609120642_608 : (Option<Interface_1688609120642_345>.None ?? (var_1688609120642_666 ?? var_1688609120642_669)))
}

public open class Class_1688609120642_672 <: Class_1688609120642_338 & Interface_1688609120642_345 {
    public init() { // block id: 674

    }
;
    var var_1688609120642_679 : Int64 = (-103);
    public open override func func_1688609120642_409(param_1688609120642_410 : Rune, namedParam_1688609120642_411 ! : Int8, namedParam_1688609120642_412 ! : Int8, namedParam_1688609120642_413 ! : (Unit) -> Unit) : Option<Rune> { // block id: 416
        var var_1688609120642_498 : Range<Int8> = ((Int8(Int8(7))&127)..(Int8(Int8(Int8(-56)))&127):(Int64(Int32(120))|1));
        if (match (match (((UInt32(var_1688609120642_100)&127)..=(UInt32(UInt32(88))&127):(var_1688609120642_385|1))) {
            case _ => 
                var_1688609120642_30;
                ();
                Option<Bool>.None
            
        }) {
            case caseVar_1688609120642_431 => 
                var_1688609120642_96 %= ((var_1688609120642_96) | 1);
                false
            
            case _ : Int8 => 
                ();
                !false
            
            case _ => 
                var_1688609120642_100 > var_1688609120642_100
            
        }) { // block id: 448
            try { // block id: 450
                let var_1688609120642_452 : Range<Int16> = ((Int16(Int16(5))&127)..=(Int16(Int16(-71))&127):(Int64(Int32(Int16(UInt8(239))))|1));
                var_1688609120642_452;
                ((Int32(Int32(105))&127)..=(Int32(Int32(87))&127):(103|1));
                ((Int64(0)&127)..(Int64((-69))&127):((-54)|1))
            } catch (_) { // block id: 462
                var var_1688609120642_465 : Float64 = Float64(Float64(Float64(Float64(Float32(-48.0)))));
                var_1688609120642_465 *= (-81.0);
                ((Int64(var_1688609120642_385)&127)..(Int64(var_1688609120642_385)&127):((-25)|1))
            }
        } else { // block id: 476
            var var_1688609120642_481 : UInt64 = UInt64(Int16(-61));
            var var_1688609120642_493 : Int64 = Int64(UInt8(146));
            try { // block id: 478
                var_1688609120642_202;
                var_1688609120642_481;
                ((Int8(Int8(-9))&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_385|1))
            } catch (_) { // block id: 488
                ((Int8(var_1688609120642_133)&127)..=(Int8(var_1688609120642_133)&127):(var_1688609120642_493|1))
            } finally { // block id: 496
                var_1688609120642_498
            };
            ((Int64(var_1688609120642_385)&127)..(Int64((-3))&127):(64|1))
        };
        var var_1688609120642_518 : Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(UInt8(11))))&127)..(UInt8(UInt8(Int8(33)))&127):((-96)|1)), ((UInt8(UInt8(26))&127)..(UInt8(UInt8(81))&127):((-75)|1)), ((UInt8(UInt8(Int8(Int8(98))))&127)..(UInt8(UInt8(UInt8(43)))&127):(Int64(Int8(124))|1)), ((UInt8(UInt8(Int8(Int8(35))))&127)..=(UInt8(UInt8(UInt8(114)))&127):(Int64(Int32(Int8(-94)))|1)), ((UInt8(UInt8(215))&127)..=(UInt8(UInt8(UInt8(Int8(116))))&127):((-100)|1)), ((UInt8(UInt8(UInt8(Int8(51))))&127)..(UInt8(UInt8(189))&127):(Int64(UInt64(72))|1)), ((UInt8(UInt8(245))&127)..=(UInt8(UInt8(132))&127):(103|1)), ((UInt8(UInt8(UInt8(Int8(-9))))&127)..=(UInt8(UInt8(UInt8(UInt8(108))))&127):((-27)|1)), ((UInt8(UInt8(71))&127)..=(UInt8(UInt8(139))&127):((-25)|1)), ((UInt8(UInt8(UInt8(UInt8(133))))&127)..=(UInt8(UInt8(135))&127):(38|1))];
        (Option<Range<UInt8>>.Some(var_1688609120642_518[0]) ?? ((UInt8(var_1688609120642_96)&127)..=(UInt8(func_1688609120642_578())&127):(var_1688609120642_676.var_1688609120642_679|1)));
        let var_1688609120642_686 : Class_1688609120642_672 = Class_1688609120642_672();
        match ((((Int64((-95))&127)..=(Int64(66)&127):((-85)|1)), var_1688609120642_686.var_1688609120642_689, if (true) { // block id: 698
            UInt32(142)
        } else if (true) { // block id: 701
            UInt32(227) % ((var_1688609120642_100) | 1)
        } else { // block id: 705
            if (var_1688609120642_633) { [UInt8(49)] } else { [var_1688609120642_96] } ;
            [UInt8(77)];
            UInt32(142)
        })) {
            case _ : Int64 => 
                var_1688609120642_30;
                Option<Rune>.Some(r'P')
            
            case _ => 
                var_1688609120642_30;
                Option<Rune>.Some(r'M')
            
            case (_,caseVar_1688609120642_729 : Bool,_) => 
                ();
                true;
                Option<Rune>.None
            
            case _ => 
                if (false) { var_1688609120642_739 } else { Option<Rune>.None } 
            
        }
    }
;
    public open override func func_1688609120642_1134() : Range<Int8> { // block id: 1135
        let var_1688609120642_1139 : Range<Int8> = ((Int8(Int8(-99))&127)..=(Int8(Int8(UInt8(41)))&127):(Int64(UInt16(Int8(UInt8(174))))|1));
        var var_1688609120642_1167 : (Range<Int64>, Bool, UInt32) = (((Int64((-40))&127)..=(Int64((-102))&127):(120|1)), (((Int64((-27))&127)..(Int64((-114))&127):(81|1)) is VArray<UInt8, $1>), UInt32(UInt16(Int16(UInt16(49)))));
        if (false) { var_1688609120642_1139 } else { (var_1688609120642_1154, var_1688609120642_913, ((Int64((-94))&127)..=(Int64(80)&127):(44|1)), var_1688609120642_1167, var_1688609120642_1177)[4][2] } 
    }
;
    public open override func func_1688609120642_402(namedParam_1688609120642_403 ! : Array<UInt64>, namedParam_1688609120642_404 ! : (Unit) -> Unit) : Class_1688609120642_338 { // block id: 407
        var var_1688609120642_744 : Array<Rune> = [r'N', r'A', r'A', r'f', r'G', r'X', r'z', r'7', r'B', r'Y'];
        var var_1688609120642_772 : Range<UInt8> = ((UInt8(UInt8(6))&127)..=(UInt8(UInt8(UInt8(5)))&127):(Int64(Int16(-99))|1));
        let var_1688609120642_807 : Int8 = Int8(Int8(14));
        let var_1688609120642_823 : (Unit) -> Unit = func_1688609120642_221;
        func_1688609120642_409(match (var_1688609120642_744) {
            case _ => 
                var_1688609120642_202
            
        }, namedParam_1688609120642_411 : match (Class_1688609120642_672()) {
            case _ : Float64 => 
                Option<Range<UInt8>>.Some(((UInt8(UInt8(33))&127)..(UInt8(UInt8(253))&127):((-24)|1)));
                Int8(-41)
            
            case _ => 
                var_1688609120642_772;
                Int8(-128) / ((var_1688609120642_133) | 1)
            
            case _ : Range<UInt16> => 
                Int8(-26)
            
            case caseVar_1688609120642_788 => 
                -Int8(10)
            
            case _ => 
                UInt16(221) / ((var_1688609120642_74) | 1);
                var_1688609120642_30;
                var_1688609120642_133 - var_1688609120642_133
            
        } % ((var_1688609120642_133) | 1), namedParam_1688609120642_412 : try { // block id: 803
            ();
            Int8(-29);
            var_1688609120642_807
        } catch (_) { // block id: 810
            let var_1688609120642_814 : Int8 = Int8(Int8(Int8(64)));
            var_1688609120642_133 - var_1688609120642_814
        } finally { // block id: 818
            Int8(-118) & var_1688609120642_133
        }, namedParam_1688609120642_413 : var_1688609120642_823);
        var var_1688609120642_842 : UInt64 = UInt64(Int64(99));
        let var_1688609120642_860 : UInt64 = UInt64(UInt32(61));
        (var_1688609120642_831 ?? try { // block id: 834
            var_1688609120642_836;
            Class_1688609120642_672()
        } catch (_) { // block id: 839
            var var_1688609120642_852 : UInt64 = UInt64(Int64(UInt32(Int32(-40))));
            [var_1688609120642_842, UInt64(42), var_1688609120642_842, var_1688609120642_842, UInt64(132), var_1688609120642_842, var_1688609120642_852, var_1688609120642_852, UInt64(13), var_1688609120642_860];
            Class_1688609120642_672()
        })
    }
;
    public open override func func_1688609120642_402() : (Option<Rune>, Range<UInt8>) { // block id: 399
        let var_1688609120642_869 : Array<UInt64> = [UInt64(125), UInt64(Int8(34)), UInt64(249), UInt64(UInt16(UInt16(194))), UInt64(UInt8(Int8(Int8(-109)))), UInt64(192), UInt64(UInt64(46)), UInt64(Int8(18)), UInt64(UInt8(231)), UInt64(101)];
        let var_1688609120642_892 : (Unit) -> Unit = func_1688609120642_221;
        let var_1688609120642_972 : UInt64 = UInt64(226);
        let var_1688609120642_983 : (Range<UInt16>, Range<Int16>, Array<UInt64>) = (((UInt16(UInt16(UInt8(76)))&127)..=(UInt16(UInt16(Int8(Int8(-6))))&127):(Int64(Int64(Int16(-61)))|1)), ((Int16(Int16(-52))&127)..(Int16(Int16(-120))&127):(92|1)), [UInt64(29), UInt64(109), UInt64(105), UInt64(162), UInt64(62), UInt64(121), UInt64(87), UInt64(229), UInt64(156), UInt64(223)]);
        func_1688609120642_402(namedParam_1688609120642_403 : if (var_1688609120642_866) { var_1688609120642_869 } else { var_1688609120642_869 } , namedParam_1688609120642_404 : var_1688609120642_892).func_1688609120642_895(if (var_1688609120642_57) { [UInt64(20), UInt64(110), UInt64(141), UInt64(24), UInt64(3), UInt64(100), UInt64(246), UInt64(231), UInt64(43), UInt64(144)] } else { [UInt64(117), var_1688609120642_913, UInt64(220), var_1688609120642_972, UInt64(51), var_1688609120642_972, var_1688609120642_913, var_1688609120642_972, var_1688609120642_913, UInt64(168)] } , namedParam_1688609120642_897 : var_1688609120642_983[2]);
        (try { // block id: 1002
            var_1688609120642_30;
            Option<Rune>.Some(var_1688609120642_202)
        } catch (_) { // block id: 1006
            var_1688609120642_739
        }, if ((((Int64(106)&127)..(Int64(var_1688609120642_385)&127):(30|1)), var_1688609120642_866, UInt32(158))[1]) { (if (var_1688609120642_57) { var_1688609120642_1021 } else { var_1688609120642_1021 } ) } else { var_1688609120642_1027[0] } )
    }
;
    public open override func func_1688609120642_895(param_1688609120642_896 : Array<UInt64>, namedParam_1688609120642_897 ! : Array<UInt64>) : UInt32 { // block id: 898
        var var_1688609120642_906 : Unit = ();
        var var_1688609120642_923 : UInt64 = UInt64(UInt32(197));
        var var_1688609120642_927 : Array<UInt64> = [UInt64(Int32(Int32(UInt8(151)))), UInt64(Int8(-83)), UInt64(Int8(Int8(UInt8(154)))), UInt64(9), UInt64(UInt64(131)), UInt64(155), UInt64(58), UInt64(Int32(-61)), UInt64(Int32(112)), UInt64(Int64(UInt16(Int8(112))))];
        UInt32((UInt8(222) + if (false) { // block id: 904
            var_1688609120642_906;
            if (var_1688609120642_57) { [UInt64(128), var_1688609120642_913, var_1688609120642_913, UInt64(218), var_1688609120642_913, var_1688609120642_913, UInt64(186), UInt64(112), UInt64(55), var_1688609120642_923] } else { var_1688609120642_927 } ;
            let var_1688609120642_954 : UInt8 = UInt8(Int8(112));
            var var_1688609120642_958 : UInt8 = UInt8(228);
            var_1688609120642_954 - var_1688609120642_958
        } else { // block id: 960
            var_1688609120642_666;
            -var_1688609120642_96
        }))
    }

    static init() {
    }
}


func func_1688609120642_354<T0>(param_1688609120642_355 : Int16) : Option<Rune> where T0 <: Interface_1688609120642_341 & Interface_1688609120642_342 { // block id: 356
    var var_1688609120642_369 : Int16 = Int16(43);
    try { // block id: 358
        let var_1688609120642_361 : ??(Range<Int64>, Bool, UInt32) = Option<Option<(Range<Int64>, Bool, UInt32)>>.None;
        match (var_1688609120642_361) {
            case caseVar_1688609120642_365 : Bool => 
                var_1688609120642_369 /= ((var_1688609120642_369) | 1);
                UInt16(49);
                var_1688609120642_30
            
            case _ => 
                var_1688609120642_100 %= ((var_1688609120642_100) | 1)
            
            case _ => 
                var_1688609120642_100;
                var_1688609120642_385 >>= ((var_1688609120642_385) & 7);
                ()
            
        }
    } finally { // block id: 389
        ()
    };
    let var_1688609120642_395 : Class_1688609120642_338 = Class_1688609120642_338();
    var_1688609120642_395.func_1688609120642_402()[0]
}




func func_1688609120642_153(param_1688609120642_154 : Int64) : Int64 { // block id: 155
    let var_1688609120642_169 : (Range<Int64>, Bool, UInt32) = (((Int64(49)&127)..(Int64(99)&127):(19|1)), true, UInt32(UInt8(UInt8(212))));
    if ((var_1688609120642_165 ?? var_1688609120642_169)[1]) { // block id: 177
        var var_1688609120642_181 : VArray<UInt8, $1> = [UInt8(101)];
        var_1688609120642_181[0];
        var var_1688609120642_189 : Rune = r'p';
        [r'3', var_1688609120642_189, r'7', r'7', var_1688609120642_189, var_1688609120642_189, r'n', var_1688609120642_189, r'S', var_1688609120642_189][2]
    } else { // block id: 200
        var_1688609120642_202;
        (Option<Rune>.None ?? r'd')
    };
    let var_1688609120642_274 : ?(Range<Int64>, Bool, UInt32) = Option<(Range<Int64>, Bool, UInt32)>.Some((((Int64((-90))&127)..=(Int64(54)&127):((-61)|1)), (((Int64((-64))&127)..=(Int64(60)&127):((-68)|1)) is Bool), UInt32(Int32(UInt8(152)))));
    let var_1688609120642_313 : VArray<UInt8, $1> = [UInt8(Int8(UInt8(101)))];
    let var_1688609120642_348 : Class_1688609120642_338 = Class_1688609120642_338(namedParam_1688609120642_351 : Int16(Int16(UInt8(Int8(-122)))));
    func func_1688609120642_334(param_1688609120642_335 : UInt8) : Range<Int8> { // block id: 336
        var_1688609120642_348.func_1688609120642_1134()
    }
;
    func func_1688609120642_296(param_1688609120642_297 : VArray<UInt8, $5>) : Option<Option<(Range<Int64>, Bool, UInt32)>> { // block id: 298
        let var_1688609120642_319 : VArray<UInt8, $1> = [UInt8(8)];
        match ([var_1688609120642_96, var_1688609120642_96, var_1688609120642_96, var_1688609120642_96, UInt8(135)]) {
            case _ => 
                if (false) { var_1688609120642_313 } else { var_1688609120642_319 } ;
                if (var_1688609120642_57) { var_1688609120642_239 } else { var_1688609120642_274 } ;
                var var_1688609120642_327 : Unit = ();
                [var_1688609120642_327]
            
        }[0];
        let var_1688609120642_1214 : UInt8 = UInt8(Int8(Int8(Int8(Int8(-121)))));
        func func_1688609120642_331() : Array<UInt64> { // block id: 332
            func_1688609120642_334([UInt8(54), UInt8(117), var_1688609120642_96, var_1688609120642_96, var_1688609120642_1214, UInt8(157), var_1688609120642_1214, var_1688609120642_96, var_1688609120642_96, UInt8(171)][7]);
            ();
            let var_1688609120642_1228 : Array<UInt64> = [UInt64(109), UInt64(111), UInt64(78), UInt64(220), UInt64(90), UInt64(178), UInt64(153), UInt64(239), UInt64(113), UInt64(197)];
            var_1688609120642_1228
        }
;
        func_1688609120642_331();
        (((Option<Option<Rune>>.None ?? var_1688609120642_739) as Option<Option<(Range<Int64>, Bool, UInt32)>>) ?? (var_1688609120642_1245 as Option<(Range<Int64>, Bool, UInt32)>))
    }
;
    func func_1688609120642_284(optionalParam_1688609120642_285 ! : Int8 = Int8(-55), optionalParam_1688609120642_287 ! : String = "!kGkARvm>Z") : Option<(Range<Int64>, Bool, UInt32)> { // block id: 289
        (func_1688609120642_296((var_1688609120642_1253 ?? [UInt8(21), UInt8(95), var_1688609120642_96, var_1688609120642_96, var_1688609120642_96])) ?? if (var_1688609120642_633) { var_1688609120642_239 } else { match (var_1688609120642_1267) {
            case caseVar_1688609120642_1271 => 
                var_1688609120642_1274;
                Class_1688609120642_672();
                Option<(Range<Int64>, Bool, UInt32)>.Some(var_1688609120642_169)
            
            case _ => 
                (-90);
                if (true) { Option<(Range<Int64>, Bool, UInt32)>.Some((((Int64(5)&127)..(Int64((-53))&127):((-54)|1)), var_1688609120642_633, UInt32(235))) } else { var_1688609120642_239 } 
            
        } } )
    }
;
    func func_1688609120642_214(param_1688609120642_215 : Range<Int64>, param_1688609120642_216 : String) : Bool { // block id: 217
        var var_1688609120642_244 : UInt16 = UInt16(50);
        try { // block id: 219
            var var_1688609120642_225 : (Unit) -> Unit = func_1688609120642_221;
            ()|>var_1688609120642_225;
            ()
        } finally { // block id: 229
            match (Option<(Range<Int64>, Bool, UInt32)>.Some(var_1688609120642_169)) {
                case _ => 
                    if (var_1688609120642_57) { var_1688609120642_239 } else { var_1688609120642_239 } ;
                    var_1688609120642_244++
                
                case _ => 
                    ()
                
                case _ => 
                    var var_1688609120642_254 : Int16 = Int16(UInt16(UInt16(58)));
                    var_1688609120642_254 %= ((Int16(55)) | 1);
                    UInt16(67);
                    ()
                
            }
        };
        let var_1688609120642_1300 : Float32 = Float32(Float32(100.0));
        match (if ((Option<Bool>.None ?? false)) { (if (false) { Option<(Range<Int64>, Bool, UInt32)>.None } else { var_1688609120642_274 } ) } else { func_1688609120642_284(optionalParam_1688609120642_285 : Int8(-29)) } ) {
            case _ => 
                var_1688609120642_666;
                Float32(-97.0) < var_1688609120642_1300
            
            case caseVar_1688609120642_1305 => 
                var_1688609120642_633
            
            case _ => 
                var_1688609120642_30;
                true
            
        }
    }
;
    var var_1688609120642_1328 : UInt32 = UInt32(212);
    Int64(if (func_1688609120642_214(((Int64((-68))&127)..(Int64((-61))&127):(21|1)), """
u+=[Z
|F*?p
""")) { // block id: 1314
        UInt32(105) - UInt32(175)
    } else if (var_1688609120642_866 && var_1688609120642_866) { // block id: 1321
        let var_1688609120642_1323 : Interface_1688609120642_346 = Class_1688609120642_672();
        var_1688609120642_1323;
        var_1688609120642_100 | var_1688609120642_1328
    } else { // block id: 1330
        ();
        var_1688609120642_133 *= var_1688609120642_133;
        UInt32(80) | UInt32(117)
    })
}



public func func_1688609120642_81<T0, T1>(param_1688609120642_82 : Range<Int8>) : UInt8 { // block id: 83
    var var_1688609120642_88 : Float64 = (-19.0);
    var var_1688609120642_124 : UInt32 = UInt32(UInt32(Int32(UInt32(6))));
    let var_1688609120642_143 : UInt64 = UInt64(UInt32(73));
    ((UInt64(match (match (var_1688609120642_88) {
        case _ : Range<Int32> => 
            var_1688609120642_88;
            var_1688609120642_96 /= ((var_1688609120642_96) | 1);
            var_1688609120642_100
        
        case _ : Array<UInt64> => 
            ();
            let var_1688609120642_108 : UInt32 = UInt32(UInt16(174));
            var_1688609120642_108 - var_1688609120642_108
        
        case -13.0 => 
            ();
            UInt32(81) ^ UInt32(82)
        
        case caseVar_1688609120642_121 : Range<Int8> => 
            var_1688609120642_124
        
        case _ => 
            var_1688609120642_133 *= Int8(45);
            var_1688609120642_124
        
    }) {
        case _ => 
            UInt64(27)
        
    })&127)..(UInt64(try { // block id: 141
        var_1688609120642_143
    } finally { // block id: 146
        UInt32(230) << ((var_1688609120642_124) & 7);
        UInt64(209)
    })&127):((72|>func_1688609120642_153) | (var_1688609120642_385 ^ (-42))|1));
    var var_1688609120642_1389 : ((Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>), Range<Int16>, Bool) = ((((UInt8(UInt8(46))&127)..=(UInt8(UInt8(74))&127):(4|1)), ((UInt8(UInt8(221))&127)..=(UInt8(UInt8(232))&127):(122|1)), Float32(125.0), [UInt8(16)], [UInt64(29), UInt64(33), UInt64(92), UInt64(UInt8(43)), UInt64(102), UInt64(82), UInt64(77), UInt64(UInt32(97)), UInt64(4), UInt64(UInt16(181))]), ((Int16(Int16(-108))&127)..(Int16(Int16(Int16(2)))&127):(Int64(UInt16(UInt8(194)))|1)), ([()] is Option<Option<Rune>>));
    ((var_1688609120642_1352 ?? var_1688609120642_1027), ((Int16(Int16(23))&127)..(Int16(Int16(-41))&127):(107|1)), var_1688609120642_1389[2])[2];
    let var_1688609120642_1502 : UInt64 = UInt64(223);
    (match (var_1688609120642_1274) {
        case _ => 
            (var_1688609120642_1438, UInt64(166), (var_1688609120642_1027, ((Int16(Int16(13))&127)..=(Int16(var_1688609120642_626)&127):(var_1688609120642_385|1)), false), false, UInt8(29));
            if (false) { Option<(VArray<UInt8, $5>, UInt64, ((Range<UInt8>, Range<UInt8>, Float32, VArray<UInt8, $1>, Array<UInt64>), Range<Int16>, Bool), Bool, UInt8)>.Some((var_1688609120642_1438, UInt64(100), (var_1688609120642_1468, ((Int16(Int16(-97))&127)..=(Int16(Int16(-105))&127):((-22)|1)), false), false, var_1688609120642_96)) } else { var_1688609120642_1494 } 
        
    } ?? (var_1688609120642_1494 ?? (var_1688609120642_1438, var_1688609120642_1502, (var_1688609120642_1027, ((Int16(Int16(-76))&127)..=(Int16(Int16(82))&127):(31|1)), false), var_1688609120642_57, var_1688609120642_96)))[4]
}

func func_1688609120642_6(param_1688609120642_7 : UInt8) : Float32 { // block id: 8
    let var_1688609120642_26 : Float32 = Float32(Float32(123.0));
    func func_1688609120642_10(param_1688609120642_11 : UInt16, param_1688609120642_12 : UInt8, optionalParam_1688609120642_13 ! : Int32 = Int32(UInt16(138)), namedParam_1688609120642_16 ! : Unit) : Float32 { // block id: 17
        Float32(108.0);
        try { // block id: 20

        } finally { // block id: 21
            var loopTimeVar_1688609120642_33 : Int64 = 0;
            while ((true) && loopTimeVar_1688609120642_33 < 100 ) {
                loopTimeVar_1688609120642_33++;
                var_1688609120642_26;
                var_1688609120642_30
            };
            var var_1688609120642_48 : UInt8 = UInt8(UInt8(214));
            [UInt8(254), var_1688609120642_48, var_1688609120642_48, var_1688609120642_48, var_1688609120642_48][0];
            var var_1688609120642_68 : Int8 = Int8(Int8(49));
            if (var_1688609120642_57) { // block id: 59
                ();
                var var_1688609120642_63 : UInt32 = UInt32(52);
                var_1688609120642_63 %= ((var_1688609120642_63) | 1);
                var_1688609120642_68 |= var_1688609120642_68
            }
        };
        var_1688609120642_26
    }
;
    func_1688609120642_10(var_1688609120642_74, (var_1688609120642_1513|>func_1688609120642_81<VArray<UInt8, $1>, Int8>), optionalParam_1688609120642_13 : if (var_1688609120642_866) { // block id: 1517
        var_1688609120642_1084;
        (var_1688609120642_836, var_1688609120642_866, var_1688609120642_100);
        Int32(-96) * var_1688609120642_1274
    } else { // block id: 1526
        Int32(17)
    }, namedParam_1688609120642_16 : ())
}

main(): Int64 {
    try {
        var var_1688609120642_1530 : (UInt8) -> Float32 = func_1688609120642_6;
        var var_1688609120642_1574 : VArray<UInt8, $1> = [UInt8(117)];
        let var_1688609120642_1589 : (Range<Int64>, Bool, UInt32) = (((Int64(83)&127)..=(Int64(Int64(UInt8(102)))&127):(Int64(Int32(-97))|1)), false, UInt32(Int16(-115)));
        (((Int16(Int16(-119))&127)..=(Int16(Int16(13))&127):(75|1)), [var_1688609120642_30], 50.0, UInt8(232), var_1688609120642_1541, ((var_1688609120642_1574, Int16(-109), var_1688609120642_1579), var_1688609120642_1583, ((Int64((-113))&127)..=(Int64(104)&127):(97|1)), var_1688609120642_1589, var_1688609120642_1177))[3]|>var_1688609120642_1530;
        let var_1688609120642_1618 : Array<Range<UInt8>> = [((UInt8(UInt8(86))&127)..=(UInt8(UInt8(206))&127):((-36)|1)), ((UInt8(UInt8(190))&127)..=(UInt8(UInt8(122))&127):(42|1)), ((UInt8(UInt8(162))&127)..(UInt8(UInt8(249))&127):((-101)|1)), ((UInt8(UInt8(50))&127)..=(UInt8(UInt8(129))&127):(32|1)), ((UInt8(UInt8(29))&127)..=(UInt8(UInt8(150))&127):((-115)|1)), ((UInt8(UInt8(214))&127)..=(UInt8(UInt8(251))&127):(57|1)), ((UInt8(UInt8(239))&127)..(UInt8(UInt8(180))&127):(22|1)), ((UInt8(UInt8(132))&127)..(UInt8(UInt8(189))&127):(85|1)), ((UInt8(UInt8(147))&127)..=(UInt8(UInt8(91))&127):((-46)|1)), ((UInt8(UInt8(161))&127)..=(UInt8(UInt8(122))&127):((-16)|1))];
        if ((var_1688609120642_1607, var_1688609120642_133, var_1688609120642_1589, ((Int8(Int8(-25))&127)..(Int8(Int8(6))&127):((-69)|1)), false, var_1688609120642_1618, "=I\\z(Lie%}")[4]) { // block id: 1622
            Int16(-122)
        } else { // block id: 1624
            let var_1688609120642_1626 : ?Range<UInt8> = (Int32(117) as Range<UInt8>);
            var_1688609120642_1626;
            Int16(-10) >> ((Int16(100)) & 7)
        };
        19
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1688609120642_74*var_1688609120642_74), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_96*var_1688609120642_96), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_100*var_1688609120642_100), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_133*var_1688609120642_133), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_385*var_1688609120642_385), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_626*var_1688609120642_626), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_913*var_1688609120642_913), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_1274*var_1688609120642_1274), 64)
        crccheck.updateBuffer(UInt64(var_1688609120642_1583*var_1688609120642_1583), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1688609120642_338 {

}

