/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// (CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %cmp_opt %f -o %output
// (not CJNATIVE) ERRCHECK: %compiler %overflow_wrapping %f %cmp_opt 

var var_1709934209018_16 : UInt16 = UInt16(Int8(UInt8(UInt8(129))))
var var_1709934209018_26 : Unit = ()
public var var_1709934209018_117 : Int = Int64(-11)
public let var_1709934209018_123 : Option<Int64> = Option<Int64>.None
public var var_1709934209018_128 : Bool = (r'W' is UInt16)
var var_1709934209018_166 : Int16 = Int16(55)
public var var_1709934209018_186 : Class_1709934209018_175<Int32> = Class_1709934209018_175<Int32>()
let var_1709934209018_412 : UInt8 = UInt8(31)
let var_1709934209018_526 : (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8) = (Class_1709934209018_175<Int32>(), Float32(Float32(Float32(71.0))), Option<Int64>.None, [Float64(Float64(Float32(-77.0))), Float64(26.0), Float64(Float64(Float32(87.0))), Float64(Float64(Float32(6.0))), Float64(Float64(-1.0)), Float64(123.0), Float64(Float32(Float32(-31.0))), Float64(Float32(100.0)), Float64(-11.0), Float64(-49.0)], Float32(Float32(-113.0)), UInt8(Int8(UInt8(60))))
const var_1709934209018_642 : Byte = 88
public const var_1709934209018_673 : Int = 114
const var_1709934209018_676 : UInt16 = 5
public var var_1709934209018_737 : UInt = UInt64(Int16(UInt16(Int16(UInt8(185)))))
public const var_1709934209018_771 : Int8 = -41
public var var_1709934209018_1014 : Int32 = Int32(-69)
public const var_1709934209018_1035 : UInt32 = 116
var var_1709934209018_1148 : VArray<Int32, $2> = [Int32(-113), Int32(109)]
let var_1709934209018_1237 : Range<UInt32> = ((UInt32(UInt32(Int16(43)))&127)..=(UInt32(UInt32(UInt8(UInt8(45))))&127):(Int64(Int16(102))|1))
public let var_1709934209018_1326 : UInt64 = UInt64(Int32(Int8(67)))
var var_1709934209018_1396 : Option<(Option<Enum_1709934209018_390>, Array<Unit>, Unit, Rune, Interface_1709934209018_182, Array<UInt32>)> = Option<(Option<Enum_1709934209018_390>, Array<Unit>, Unit, Rune, Interface_1709934209018_182, Array<UInt32>)>.None
let var_1709934209018_1478 : Option<Unit> = Option<Unit>.None
public var var_1709934209018_1622 : Rune = r'i'
public let var_1709934209018_1643 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1709934209018_1658 : (Option<Enum_1709934209018_390>, Array<Unit>, Unit, Rune, Interface_1709934209018_182, Array<UInt32>) = ((r'R' as Enum_1709934209018_390), [(), (), (), (), (), (), (), (), (), ()], (), r'6', Class_1709934209018_744<Enum_1709934209018_390, String>(), [UInt32(187), UInt32(22), UInt32(16), UInt32(37), UInt32(74), UInt32(11), UInt32(57), UInt32(95), UInt32(242), UInt32(246)])
var var_1709934209018_1726 : Float32 = Float32(-38.0)
public let var_1709934209018_1843 : (UInt16, UInt8, Int16, Int64, Array<UInt32>, Array<Float64>, Rune, Array<Float64>, VArray<UInt8, $7>) = (UInt16(137), UInt8(Int8(-29)), Int16(Int8(-20)), Int64(-79), [UInt32(UInt32(186)), UInt32(UInt16(75)), UInt32(174), UInt32(89), UInt32(UInt16(UInt8(3))), UInt32(210), UInt32(UInt8(74)), UInt32(254), UInt32(Int32(Int16(78))), UInt32(113)], [Float64(-50.0), Float64(-96.0), Float64(63.0), Float64(80.0), Float64(-106.0), Float64(-5.0), Float64(-109.0), Float64(10.0), Float64(-60.0), Float64(-86.0)], r'w', [Float64(-64.0), Float64(-45.0), Float64(-122.0), Float64(6.0), Float64(53.0), Float64(-125.0), Float64(-115.0), Float64(-81.0), Float64(-26.0), Float64(44.0)], VArray<UInt8, $7>({ i => UInt8(92)}))
public var var_1709934209018_1894 : Interface_1709934209018_180 = Class_1709934209018_744<Enum_1709934209018_390, String>()
public let var_1709934209018_1905 : VArray<Bool, $8> = [(UInt32(Int32(-81)) is Rune), true, (UInt16(UInt8(Int8(28))) is Interface_1709934209018_180), ([UInt32(204), UInt32(89), UInt32(Int8(-18)), UInt32(Int32(71)), UInt32(UInt32(44)), UInt32(114), UInt32(Int16(20)), UInt32(UInt8(88)), UInt32(Int16(-27)), UInt32(157)] is (UInt16) -> Unit), (VArray<Int32, $2>(repeat: Int32(Int32(85))) is Class_1709934209018_175<Int32>), (VArray<Bool, $8>(repeat: (UInt64(248) is VArray<Int32, $7>)) is (UInt64, Int32, UInt64, Int8) -> UInt8), (((Int16(Int16(-107))&127)..=(Int16(Int16(UInt8(212)))&127):(Int64(UInt64(60))|1)) is Interface_1709934209018_183), false]
public var var_1709934209018_1964 : (Float32, (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8), String, Float64) = (Float32(Float32(Float32(Float32(84.0)))), (Class_1709934209018_175<Int32>(), Float32(97.0), (Enum_1709934209018_390.enumValue_1709934209018_1598 as Int64), [Float64(Float32(67.0)), Float64(-76.0), Float64(Float64(-124.0)), Float64(40.0), Float64(36.0), Float64(Float32(-9.0)), Float64(Float64(14.0)), Float64(Float64(68.0)), Float64(27.0), Float64(Float64(60.0))], Float32(Float32(Float32(1.0))), UInt8(UInt8(13))), "&=k? 5N(#4", Float64(71.0))
public var var_1709934209018_2010 : Enum_1709934209018_390 = Enum_1709934209018_390.enumValue_1709934209018_1598
var var_1709934209018_2024 : Int16 = Int16(15)
const var_1709934209018_2051 : Unit = ()
public var var_1709934209018_2102 : Enum_1709934209018_390 = Enum_1709934209018_390.enumValue_1709934209018_1598



public interface Interface_1709934209018_184<T0> {

}

public interface Interface_1709934209018_183 <: Interface_1709934209018_184<String> {

}

public interface Interface_1709934209018_182 <: Interface_1709934209018_183 {

}

sealed public interface Interface_1709934209018_181 <: Interface_1709934209018_182 & Interface_1709934209018_183 {

}

public interface Interface_1709934209018_180 <: Interface_1709934209018_181 & Interface_1709934209018_184<String> {

}

sealed public interface Interface_1709934209018_179 <: Interface_1709934209018_180 {

}

sealed public interface Interface_1709934209018_178 <: Interface_1709934209018_179 & Interface_1709934209018_180 {

}

public open class Class_1709934209018_175<T0> <: Interface_1709934209018_178 & Interface_1709934209018_180 {
    public init() { // block id: 177

    }
;
    let var_1709934209018_189 : Int16 = Int16(-128);
    var var_1709934209018_210 : Bool = true;
    public static const var_1709934209018_789 : Bool = true;
    public static mut prop var_1709934209018_792 : Rune { // block id: 793
        get() { // block id: 795
            r'1';
            var_1709934209018_2205
        }

        set(Value) { // block id: 799
            (Int16(41) as Int64);
            ();
            ();
            var_1709934209018_2205 = Value
        }

    };
    public static const var_1709934209018_915 : Float32 = 69.0;
    static var var_1709934209018_932 : (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8) = (Class_1709934209018_175<Int32>(), Float32(-121.0), Option<Int64>.None, [Float64(109.0), Float64(29.0), Float64(-33.0), Float64(-13.0), Float64(69.0), Float64(13.0), Float64(-74.0), Float64(103.0), Float64(69.0), Float64(122.0)], Float32(-54.0), UInt8(191));
    public init(param_1709934209018_991 : VArray<Int32, $2>, namedParam_1709934209018_992 ! : Struct_1709934209018_856, optionalParam_1709934209018_993 ! : Int8 = Int8(UInt8(UInt8(Int8(UInt8(159))))), optionalParam_1709934209018_999 ! : Int8 = Int8(UInt8(UInt8(UInt8(194))))) { // block id: 1004
        let var_1709934209018_1024 : Int32 = Int32(-50);
        var loopTimeVar_1709934209018_1046 : Range<UInt64> = ((UInt64(UInt64(227))&127)..(UInt64(UInt64(64))&127):(Int64(UInt32(Int16(-52)))|1));
        for (i in loopTimeVar_1709934209018_1046 where (Option<Int32>.None ?? var_1709934209018_1014) > VArray<Int32, $7>(repeat: var_1709934209018_1014)[6]) {
            [UInt32(66), var_1709934209018_1035, var_1709934209018_1035, UInt32(179), var_1709934209018_1035, UInt32(51), var_1709934209018_1035, var_1709934209018_1035, UInt32(85), var_1709934209018_1035][5]
        };
        let var_1709934209018_1056 : (UInt16, UInt8, Int16, Int64, Array<UInt32>, Array<Float64>, Rune, Array<Float64>, VArray<UInt8, $7>) = (UInt16(Int16(85)), UInt8(Int8(UInt8(222))), Int16(Int8(-10)), Int64(-18), [UInt32(Int16(14)), UInt32(55), UInt32(Int32(Int16(-103))), UInt32(Int8(UInt8(112))), UInt32(77), UInt32(UInt8(Int8(-54))), UInt32(Int16(Int8(-25))), UInt32(UInt32(Int16(27))), UInt32(99), UInt32(UInt16(Int16(0)))], [Float64(Float64(Float32(21.0))), Float64(Float32(-122.0)), Float64(22.0), Float64(Float64(56.0)), Float64(-53.0), Float64(89.0), Float64(36.0), Float64(Float32(Float32(45.0))), Float64(-6.0), Float64(Float64(-30.0))], r'Y', [Float64(-101.0), Float64(-84.0), Float64(-7.0), Float64(22.0), Float64(13.0), Float64(-8.0), Float64(-88.0), Float64(-79.0), Float64(106.0), Float64(61.0)], VArray<UInt8, $7>(repeat: UInt8(Int8(-114))));
        var_1709934209018_1056[4]
    }
;
    private init(param_1709934209018_1475 : Option<Unit>) { // block id: 1476
        var_1709934209018_1478
    }
;
    init(param_1709934209018_1508 : UInt16, param_1709934209018_1509 : Enum_1709934209018_445, param_1709934209018_1510 : Range<UInt16>) { // block id: 1511
        let var_1709934209018_1521 : Range<UInt8> = ((UInt8(UInt8(23))&127)..=(UInt8(UInt8(54))&127):(Int64(Int64(Int8(UInt8(174))))|1));
        let var_1709934209018_1531 : (Rune, Option<Int16>, (Range<Int32>, Int8, Range<Int8>, Enum_1709934209018_390, Option<Int64>, Int32), Array<Float64>, Float64, Option<Enum_1709934209018_390>) = (r'Q', ((Option<Bool>.None as Enum_1709934209018_390) as Int16), (((Int32(Int32(-47))&127)..=(Int32(Int32(UInt16(206)))&127):(Int64(UInt32(98))|1)), Int8(Int8(-9)), ((Int8(Int8(-42))&127)..=(Int8(Int8(UInt8(155)))&127):(Int64(UInt32(196))|1)), Enum_1709934209018_390.enumValue_1709934209018_767(Int8(-103), ((Int8(Int8(-5))&127)..(Int8(Int8(-35))&127):(Int64(-83)|1))), Option<Int64>.None, Int32(Int32(-95))), [Float64(Float64(Float64(90.0))), Float64(79.0), Float64(-39.0), Float64(75.0), Float64(14.0), Float64(100.0), Float64(-112.0), Float64(-64.0), Float64(Float64(Float32(7.0))), Float64(58.0)], Float64(Float64(-22.0)), ((r'r', (VArray<Int32, $7>({ i => Int32(37)}) as Int16), (((Int32(Int32(-32))&127)..(Int32(Int32(-111))&127):(Int64(41)|1)), Int8(-22), ((Int8(Int8(-96))&127)..(Int8(Int8(-123))&127):(Int64(-117)|1)), Enum_1709934209018_390.enumValue_1709934209018_1598, Option<Int64>.Some(Int64(-62)), Int32(-82)), [Float64(122.0), Float64(-15.0), Float64(-123.0), Float64(-98.0), Float64(-64.0), Float64(117.0), Float64(-94.0), Float64(84.0), Float64(-109.0), Float64(-127.0)], Float64(-116.0), (((Int16(Int16(6))&127)..(Int16(Int16(-79))&127):(Int64(-35)|1)) as Enum_1709934209018_390)) as Enum_1709934209018_390));
        var var_1709934209018_1607 : Option<Enum_1709934209018_390> = Option<Enum_1709934209018_390>.None;
        (Option<Bool>.None, var_1709934209018_1521, ((UInt16(UInt16(139))&127)..=(UInt16(UInt16(107))&127):(Int64(19)|1)), var_1709934209018_1531, var_1709934209018_1607)[3][2][4]
    }
;
    init(namedParam_1709934209018_222 ! : Float32, namedParam_1709934209018_223 ! : UInt32, namedParam_1709934209018_224 ! : Bool) { // block id: 225
        let var_1709934209018_240 : Array<Float64> = [Float64(Float32(-88.0)), Float64(Float32(26.0)), Float64(Float64(Float32(Float32(-11.0)))), Float64(Float32(Float32(-61.0))), Float64(101.0), Float64(Float32(Float32(Float32(88.0)))), Float64(Float64(Float64(-81.0))), Float64(Float32(36.0)), Float64(24.0), Float64(Float64(-3.0))];
        var loopTimeVar_1709934209018_270 : Array<UInt64> = [UInt64(10), UInt64(125), UInt64(244), UInt64(UInt16(161)), UInt64(5), UInt64(41), UInt64(146), UInt64(UInt32(2)), UInt64(207), UInt64(UInt64(UInt64(119)))];
        for (i in loopTimeVar_1709934209018_270 where (var_1709934209018_240[2] is UInt8)) {
            var_1709934209018_26;
            [Float64(-102.0), Float64(-36.0), Float64(-85.0), Float64(-22.0), Float64(-95.0), Float64(89.0), Float64(-112.0), Float64(59.0), Float64(-59.0), Float64(-83.0)]
        };
        const var_1709934209018_1219 : UInt32 = 245;
        func_1709934209018_287(namedParam_1709934209018_294 : ((Int16(Int16(121))&127)..(Int16(Int16(-65))&127):(Int64(126)|1)), namedParam_1709934209018_295 : ((Int32(Int32(55))&127)..=(Int32(Int32(-43))&127):(Int64(-31)|1)), optionalParam_1709934209018_296 : if (true) { // block id: 1213
            ();
            if (true) { ((UInt32(var_1709934209018_1219)&127)..(UInt32(var_1709934209018_1035)&127):(Int64(10)|1)) } else { ((UInt32(UInt32(68))&127)..(UInt32(var_1709934209018_1219)&127):(var_1709934209018_117|1)) } 
        } else if ((((UInt8(UInt8(94))&127)..(UInt8(UInt8(32))&127):(Int64(-16)|1)) is Interface_1709934209018_181)) { // block id: 1232
            if (var_1709934209018_128) { ((UInt32(UInt32(152))&127)..(UInt32(UInt32(110))&127):(Int64(-84)|1)) } else { var_1709934209018_1237 } 
        } else { // block id: 1246
            if (true) { var_1709934209018_1237 } else { ((UInt32(UInt32(220))&127)..(UInt32(UInt32(0))&127):(Int64(-84)|1)) } 
        });
        let var_1709934209018_1267 : UInt64 = UInt64(Int32(-80));
        var var_1709934209018_1314 : Byte = UInt8(Int8(69));
        var var_1709934209018_1342 : (Bool, Array<UInt64>, Struct_1709934209018_856) = (true, [UInt64(220), UInt64(UInt16(191)), UInt64(171), UInt64(194), UInt64(Int8(UInt8(209))), UInt64(134), UInt64(Int8(UInt8(137))), UInt64(UInt16(UInt16(217))), UInt64(53), UInt64(UInt64(Int16(-44)))], Struct_1709934209018_856((UInt16(152), UInt8(36), Int16(102), Int64(Int8(-60)), [UInt32(33), UInt32(128), UInt32(226), UInt32(170), UInt32(50), UInt32(241), UInt32(216), UInt32(68), UInt32(104), UInt32(145)], [Float64(-75.0), Float64(9.0), Float64(89.0), Float64(-117.0), Float64(74.0), Float64(-39.0), Float64(115.0), Float64(-78.0), Float64(-103.0), Float64(-90.0)], r'w', [Float64(90.0), Float64(4.0), Float64(114.0), Float64(33.0), Float64(-28.0), Float64(59.0), Float64(89.0), Float64(28.0), Float64(88.0), Float64(-59.0)], VArray<UInt8, $7>({ i => UInt8(200)})), namedParam_1709934209018_1368 : (Struct_1709934209018_856() as Int32), namedParam_1709934209018_1369 : Int16(Int16(35))));
        let var_1709934209018_1471 : (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8) = (Class_1709934209018_175<Int32>(Option<Unit>.None), Float32(-86.0), Option<Int64>.Some(Int64(82)), [Float64(-126.0), Float64(Float64(21.0)), Float64(113.0), Float64(-43.0), Float64(Float64(-83.0)), Float64(Float64(-63.0)), Float64(-128.0), Float64(-50.0), Float64(-60.0), Float64(84.0)], Float32(Float32(-14.0)), UInt8(UInt8(245)));
        let var_1709934209018_1627 : (UInt8) -> UInt8 = func_1709934209018_635;
        (match ((var_1709934209018_128, [UInt64(204), UInt64(230), UInt64(98), UInt64(149), var_1709934209018_1267, var_1709934209018_1267, UInt64(131), UInt64(33), var_1709934209018_737, UInt64(125)], Struct_1709934209018_856())[2]) {
            case _ => 
                let var_1709934209018_1286 : Array<UInt32> = [UInt32(94), UInt32(143), UInt32(120), UInt32(UInt8(Int8(53))), UInt32(236), UInt32(Int8(UInt8(41))), UInt32(UInt16(Int16(105))), UInt32(Int32(22)), UInt32(Int32(-87)), UInt32(UInt32(236))];
                const var_1709934209018_1320 : UInt8 = 166;
                (UInt16(88), UInt8(96), var_1709934209018_166, Int64(-5), var_1709934209018_1286, [Float64(51.0), Float64(94.0), Float64(-86.0), Float64(-13.0), Float64(78.0), Float64(81.0), Float64(25.0), Float64(62.0), Float64(-88.0), Float64(-86.0)], r'7', var_1709934209018_240, VArray<UInt8, $7>({ i => UInt8(129)}));
                ((UInt64(var_1709934209018_1267)&127)..(UInt64(var_1709934209018_1326)&127):(Int64(-102)|1));
                let var_1709934209018_1332 : ?Unit = (((Int8(Int8(39))&127)..(Int8(Int8(-111))&127):(Int64(-72)|1)) as Unit);
                var_1709934209018_1332
            
        } ?? match (var_1709934209018_1342) {
            case (caseVar_1709934209018_1464,caseVar_1709934209018_1465,caseVar_1709934209018_1466) => 
                Enum_1709934209018_445.enumValue_1709934209018_468(var_1709934209018_1148, var_1709934209018_1471, Class_1709934209018_175<Int32>(UInt16(146), Enum_1709934209018_445.enumValue_1709934209018_1614(var_1709934209018_1622, [(), (), (), (), (), (), (), (), (), ()], Int16(-7), var_1709934209018_1627), ((UInt16(var_1709934209018_16)&127)..=(UInt16(UInt16(82))&127):(Int64(39)|1))));
                [(), (), (), (), (), (), (), (), (), ()]
            
            case _ => 
                var_1709934209018_128 &&= false;
                if (true) { var_1709934209018_1643 } else { [(), (), (), (), (), (), (), (), (), ()] } 
            
        }[0])
    }
;
    public static prop var_1709934209018_2133 : Array<Float64> { // block id: 2134
        get() { // block id: 2136
            [Float64(Float64(99.0)), Float64(67.0), Float64(105.0), Float64(Float32(Float32(-95.0))), Float64(-48.0), Float64(Float64(Float32(-127.0))), Float64(Float64(Float32(-7.0))), Float64(Float64(22.0)), Float64(Float32(Float32(102.0))), Float64(Float64(52.0))]
        }

    };
    private static mut prop var_1709934209018_2172 : Float64 { // block id: 2173
        get() { // block id: 2175
            Float64(-15.0)
        }

        set(Value) { // block id: 2179

        }

    };
    static func func_1709934209018_749(param_1709934209018_750 : Int64) : Enum_1709934209018_390 { // block id: 2082
        const var_1709934209018_2117 : Float64 = -107.0;
        let var_1709934209018_2122 : Option<Bool> = Option<Bool>.None;
        var var_1709934209018_2126 : Interface_1709934209018_178 = Class_1709934209018_175<Int32>((Option<Unit>.None as Unit));
        let var_1709934209018_2161 : UInt8 = UInt8(53);
        if (UInt8(var_1709934209018_771) < match (r'g') {
            case _ => 
                Option<Unit>.Some(var_1709934209018_26);
                UInt8(158)
            
        }) { // block id: 2095
            const var_1709934209018_2108 : Float64 = -50.0;
            try { // block id: 2097
                var_1709934209018_26;
                if (var_1709934209018_789) { var_1709934209018_2102 } else { Enum_1709934209018_390.enumValue_1709934209018_753(var_1709934209018_1014, [var_1709934209018_2108, Float64(65.0), var_1709934209018_2108, var_1709934209018_2108, var_1709934209018_2108, var_1709934209018_2108, var_1709934209018_2108, var_1709934209018_2117, Float64(-62.0), Float64(-107.0)], var_1709934209018_2122, (var_1709934209018_2126, Float32(5.0), Option<Int64>.None, var_1709934209018_2133, Float32(-86.0), var_1709934209018_2161)) } 
            } catch (_) { // block id: 2163
                var var_1709934209018_2189 : Option<Bool> = Option<Bool>.Some(false);
                if (var_1709934209018_128) { Enum_1709934209018_390.enumValue_1709934209018_1598 } else { Enum_1709934209018_390.enumValue_1709934209018_753(var_1709934209018_1014, [var_1709934209018_2117, var_1709934209018_2172, var_1709934209018_2108, var_1709934209018_2108, Float64(62.0), Float64(60.0), var_1709934209018_2108, var_1709934209018_2172, Float64(63.0), Float64(-92.0)], var_1709934209018_2189, var_1709934209018_932) } 
            }
        } else { // block id: 2193
            try { // block id: 2195
                Enum_1709934209018_390.enumValue_1709934209018_753(var_1709934209018_1014, var_1709934209018_2133, var_1709934209018_2122, var_1709934209018_526)
            } catch (_) { // block id: 2201
                var_1709934209018_2102
            } finally { // block id: 2203
                Enum_1709934209018_390.enumValue_1709934209018_1598
            }
        }
    }
;
    static mut prop var_1709934209018_2205 : Rune { // block id: 2206
        get() { // block id: 2208
            r'd'
        }

        set(Value) { // block id: 2212
            ()
        }

    }
}

public enum Enum_1709934209018_390 {
    defaultValue |
    enumValue_1709934209018_753(Int32, Array<Float64>, Option<Bool>, (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8)) |
    enumValue_1709934209018_767(Int8, Range<Int8>) |
    enumValue_1709934209018_1598
}
func func_1709934209018_399(param_1709934209018_400 : UInt64) : UInt8 { // block id: 401
    var loopTimeVar_1709934209018_405 : Range<UInt64> = ((UInt64(UInt64(79))&127)..(UInt64(UInt64(245))&127):(Int64(-63)|1));
    for (i in loopTimeVar_1709934209018_405 where var_1709934209018_128) {

    };
    var var_1709934209018_421 : VArray<UInt8, $7> = [UInt8(154), UInt8(158), UInt8(33), UInt8(110), UInt8(109), UInt8(64), UInt8(147)];
    var_1709934209018_412 % ((try { // block id: 417
        if (var_1709934209018_128) { var_1709934209018_421 } else { var_1709934209018_421 } 
    } catch (_) { // block id: 424
        var_1709934209018_26;
        if (var_1709934209018_128) { var_1709934209018_421 } else { var_1709934209018_421 } 
    } finally { // block id: 430
        VArray<UInt8, $7>({ i => UInt8(206)})
    }[4]) | 1)
}

public enum Enum_1709934209018_445 {
    defaultValue |
    enumValue_1709934209018_468(VArray<Int32, $2>, (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8), Interface_1709934209018_181) |
    enumValue_1709934209018_1614(Rune, Array<Unit>, Int16, (UInt8) -> UInt8)
}
const func func_1709934209018_635(optionalParam_1709934209018_636 ! : UInt8 = 124) : UInt8 { // block id: 638
    const func func_1709934209018_650(namedParam_1709934209018_651 ! : Int16, optionalParam_1709934209018_652 ! : Unit = ()) : UInt8 { // block id: 654
        ();
        7
    }
;
    const var_1709934209018_658 : Int16 = 33;
    (var_1709934209018_642 + 118) / ((((var_1709934209018_642 ^ var_1709934209018_642) | func_1709934209018_650(namedParam_1709934209018_651 : var_1709934209018_658))) | 1)
}

public const func func_1709934209018_614(param_1709934209018_615 : UInt64, namedParam_1709934209018_616 ! : Int32, namedParam_1709934209018_617 ! : UInt64, namedParam_1709934209018_618 ! : Int8) : UInt8 { // block id: 619
    106.0;
    const var_1709934209018_664 : Unit = ();
    const func func_1709934209018_629<T0, T1>(param_1709934209018_630 : Int64, namedParam_1709934209018_631 ! : UInt16) : Unit { // block id: 632
        func_1709934209018_635() | func_1709934209018_635(optionalParam_1709934209018_636 : 120);
        ();
        var_1709934209018_664
    }
;
    const func func_1709934209018_622<T0, T1>(namedParam_1709934209018_623 ! : UInt16, optionalParam_1709934209018_624 ! : Float64 = 16.0, namedParam_1709934209018_626 ! : UInt64) : Unit { // block id: 627
        const func func_1709934209018_667(optionalParam_1709934209018_668 ! : UInt16 = 21) : Int64 { // block id: 670
            func_1709934209018_635();
            var_1709934209018_673
        }
;
        func_1709934209018_629<String, String>(func_1709934209018_667(optionalParam_1709934209018_668 : var_1709934209018_676), namedParam_1709934209018_631 : var_1709934209018_676);
        var_1709934209018_664
    }
;
    func_1709934209018_622<Int8, UInt8>(namedParam_1709934209018_623 : 209, namedParam_1709934209018_626 : 145);
    var_1709934209018_642
}

const func func_1709934209018_603(optionalParam_1709934209018_604 ! : Rune = r'v', namedParam_1709934209018_606 ! : Int32, optionalParam_1709934209018_607 ! : UInt64 = 124) : UInt8 { // block id: 609
    const var_1709934209018_611 : Unit = ();
    var_1709934209018_611;
    const var_1709934209018_686 : UInt64 = 29;
    const var_1709934209018_689 : Int8 = 63;
    func_1709934209018_614(85, namedParam_1709934209018_616 : 71, namedParam_1709934209018_617 : var_1709934209018_686, namedParam_1709934209018_618 : var_1709934209018_689)
}

public func func_1709934209018_441(param_1709934209018_442 : Range<UInt8>) : UInt8 { // block id: 443
    let var_1709934209018_466 : Enum_1709934209018_445 = Enum_1709934209018_445.enumValue_1709934209018_468(VArray<Int32, $2>(repeat: Int32(103)), (Class_1709934209018_175<Int32>(), Float32(-23.0), (Float64(Float64(-41.0)) as Int64), [Float64(67.0), Float64(124.0), Float64(120.0), Float64(Float32(-58.0)), Float64(120.0), Float64(-53.0), Float64(Float32(46.0)), Float64(Float32(5.0)), Float64(Float32(45.0)), Float64(Float32(-109.0))], Float32(5.0), UInt8(107)), Class_1709934209018_175<Int32>());
    match (try { // block id: 448
        var_1709934209018_26;
        let var_1709934209018_452 : Float64 = Float64(87.0);
        [var_1709934209018_452, var_1709934209018_452, var_1709934209018_452, Float64(-22.0), var_1709934209018_452, var_1709934209018_452, Float64(29.0), var_1709934209018_452, Float64(10.0), var_1709934209018_452];
        if (false) { var_1709934209018_466 } else { var_1709934209018_466 } 
    } catch (e: Exception) { // block id: 503
        var_1709934209018_26;
        if (var_1709934209018_128) { var_1709934209018_466 } else { var_1709934209018_466 } 
    } finally { // block id: 509
        var var_1709934209018_511 : VArray<UInt8, $7> = [UInt8(238), UInt8(8), UInt8(149), UInt8(170), UInt8(212), UInt8(100), UInt8(187)];
        var_1709934209018_511;
        var_1709934209018_16 *= var_1709934209018_16;
        var var_1709934209018_521 : Int32 = Int32(Int8(48));
        if (var_1709934209018_128) { Enum_1709934209018_445.enumValue_1709934209018_468(VArray<Int32, $2>(repeat: var_1709934209018_521), var_1709934209018_526, Class_1709934209018_175<Int32>()) } else { Enum_1709934209018_445.enumValue_1709934209018_468(VArray<Int32, $2>(repeat: var_1709934209018_521), var_1709934209018_526, Class_1709934209018_175<Int32>()) } 
    }) {
        case enumValue_1709934209018_468(_, _, caseVar_1709934209018_568) => 
            ();
            var_1709934209018_16 |= UInt16(166)
        
        case enumValue_1709934209018_468(caseVar_1709934209018_576, (_ : String,_ : Range<UInt32>,caseVar_1709934209018_577 : Interface_1709934209018_180,_,_,_ : Int16), _) => 
            var_1709934209018_26;
            var_1709934209018_128 &&= var_1709934209018_128
        
        case enumValue_1709934209018_468(caseVar_1709934209018_585 : Option<Int16>, _ : Float32, caseVar_1709934209018_586 : UInt16) => 
            Int16(-7);
            var_1709934209018_26
        
        case enumValue_1709934209018_468(_, _ : String, caseVar_1709934209018_592 : VArray<Int32, $2>) => 
            var_1709934209018_26;
            ()
        
        case _ => 
            var_1709934209018_26
        
    };
    let var_1709934209018_692 : Rune = r'B';
    let var_1709934209018_714 : Range<Int64> = ((Int64(Int64(121))&127)..=(Int64(Int64(-42))&127):(Int64(-23)|1));
    try { // block id: 601
        const var_1709934209018_695 : Int32 = 38;
        var var_1709934209018_698 : UInt = UInt64(Int64(Int32(49)));
        func_1709934209018_603(optionalParam_1709934209018_604 : var_1709934209018_692, namedParam_1709934209018_606 : var_1709934209018_695, optionalParam_1709934209018_607 : var_1709934209018_698)
    } finally { // block id: 702
        var var_1709934209018_706 : Float32 = Float32(-74.0);
        Float32(-95.0) - var_1709934209018_706;
        try { // block id: 709
            if (true) { ((Int64(Int64(90))&127)..=(Int64(Int64(-98))&127):(Int64(-127)|1)) } else { var_1709934209018_714 } 
        } finally { // block id: 716
            var_1709934209018_714
        };
        var_1709934209018_642
    }
}

public func func_1709934209018_720(param_1709934209018_721 : UInt64) : Range<UInt8> { // block id: 722
    ();
    ((Int8(Int8(-47))&127)..(Int8(Int8(107))&127):(Int64(48)|1));
    var var_1709934209018_726 : Range<UInt8> = ((UInt8(UInt8(51))&127)..(UInt8(UInt8(111))&127):(Int64(Int64(Int8(24)))|1));
    var_1709934209018_726
}

public open class Class_1709934209018_744<T0, T1> <: Class_1709934209018_175<Int32> {
    public init() { // block id: 746

    }
;
    private static var var_1709934209018_774 : Range<Int8>;
    static mut prop var_1709934209018_860 : Struct_1709934209018_856 { // block id: 861
        get() { // block id: 863
            true;
            ();
            Struct_1709934209018_856()
        }

        set(Value) { // block id: 869
            Int32(Int16(46));
            ();
            ()
        }

    };
    redef static func func_1709934209018_749(param_1709934209018_750 : Int64) : Enum_1709934209018_390 { // block id: 751
        var var_1709934209018_805 : Array<Float64> = [Float64(-99.0), Float64(35.0), Float64(39.0), Float64(-98.0), Float64(-88.0), Float64(64.0), Float64(114.0), Float64(-36.0), Float64(-71.0), Float64(-54.0)];
        const var_1709934209018_822 : Float64 = -107.0;
        var var_1709934209018_882 : Option<Enum_1709934209018_390> = Option<Enum_1709934209018_390>.Some(Enum_1709934209018_390.enumValue_1709934209018_753(Int32(Int32(-84)), [Float64(-27.0), Float64(Float32(50.0)), Float64(Float64(118.0)), Float64(Float32(-97.0)), Float64(Float32(-118.0)), Float64(-45.0), Float64(41.0), Float64(65.0), Float64(-65.0), Float64(-105.0)], (Option<Int16>.None as Bool), (Class_1709934209018_744<Enum_1709934209018_390, String>(), Float32(Float32(16.0)), (UInt64(19) as Int64), [Float64(-22.0), Float64(-55.0), Float64(-4.0), Float64(-99.0), Float64(86.0), Float64(100.0), Float64(54.0), Float64(31.0), Float64(-117.0), Float64(-123.0)], Float32(-40.0), UInt8(49))));
        Enum_1709934209018_390.enumValue_1709934209018_753(Int32(59), match ((Option<Enum_1709934209018_390>.None ?? Enum_1709934209018_390.enumValue_1709934209018_767(var_1709934209018_771, var_1709934209018_774))) {
            case enumValue_1709934209018_753(caseVar_1709934209018_781, caseVar_1709934209018_782, caseVar_1709934209018_783, caseVar_1709934209018_784) => 
                var_1709934209018_128 &&= var_1709934209018_789;
                var_1709934209018_792;
                var_1709934209018_805
            
            case _ : Range<Int16> => 
                Float32(23.0);
                [Float64(-86.0), Float64(58.0), Float64(-79.0), Float64(-127.0), Float64(-17.0), Float64(65.0), Float64(24.0), Float64(-69.0), Float64(-76.0), Float64(-79.0)]
            
            case enumValue_1709934209018_767(_, caseVar_1709934209018_814) => 
                ();
                if (var_1709934209018_128) { var_1709934209018_805 } else { [var_1709934209018_822, var_1709934209018_822, Float64(-28.0), Float64(114.0), Float64(-23.0), var_1709934209018_822, var_1709934209018_822, Float64(23.0), Float64(-124.0), var_1709934209018_822] } 
            
            case caseVar_1709934209018_835 => 
                if (var_1709934209018_128) { [Float64(47.0), Float64(1.0), Float64(72.0), Float64(26.0), Float64(96.0), Float64(50.0), Float64(80.0), Float64(119.0), Float64(72.0), Float64(10.0)] } else { [var_1709934209018_822, var_1709934209018_822, Float64(17.0), Float64(98.0), Float64(-3.0), Float64(55.0), var_1709934209018_822, Float64(-19.0), var_1709934209018_822, Float64(-22.0)] } 
            
            case _ => 
                [Float64(-73.0), Float64(41.0), Float64(105.0), Float64(91.0), Float64(39.0), Float64(118.0), Float64(44.0), Float64(-46.0), Float64(78.0), Float64(-94.0)]
            
        }, var_1709934209018_860.var_1709934209018_875, try { // block id: 880
            var_1709934209018_882;
            (var_1709934209018_915, (Class_1709934209018_175<Int32>(), Float32(55.0), Option<Int64>.Some(var_1709934209018_673), var_1709934209018_805, Float32(32.0), UInt8(86)), """
DKivI
gmjRy
""", Float64(-22.0))
        } finally { // block id: 927
            ();
            const var_1709934209018_951 : String = """
}|^s]
u}@6O
""";
            (Float32(-38.0), var_1709934209018_932, var_1709934209018_951, Float64(75.0))
        }[1])
    }

    static init() {
        var_1709934209018_774 = ((Int8(Int8(14))&127)..=(Int8(Int8(-74))&127):(Int64(118)|1))
    }
}


public struct Struct_1709934209018_856 {
    public init() { // block id: 858

    }
;
    public let var_1709934209018_875 : Option<Bool> = Option<Bool>.None;
    private static var var_1709934209018_1400 : Option<Enum_1709934209018_390> = Option<Enum_1709934209018_390>.None;
    public init(param_1709934209018_1367 : (UInt16, UInt8, Int16, Int64, Array<UInt32>, Array<Float64>, Rune, Array<Float64>, VArray<UInt8, $7>), namedParam_1709934209018_1368 ! : Option<Int32>, namedParam_1709934209018_1369 ! : Int16, optionalParam_1709934209018_1370 ! : (Range<UInt8>) -> UInt8 = func_1709934209018_441) { // block id: 1374
        let var_1709934209018_1384 : Option<Unit> = Option<Unit>.None;
        let var_1709934209018_1403 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        (try { // block id: 1381
            var_1709934209018_26;
            var_1709934209018_1384
        } catch (_) { // block id: 1386
            var_1709934209018_1384
        } ?? (var_1709934209018_1396 ?? (var_1709934209018_1400, var_1709934209018_1403, (), r'Y', Class_1709934209018_175<Int32>(), [var_1709934209018_1035, var_1709934209018_1035, UInt32(63), var_1709934209018_1035, var_1709934209018_1035, var_1709934209018_1035, var_1709934209018_1035, var_1709934209018_1035, var_1709934209018_1035, var_1709934209018_1035]))[2])
    }

}

public func func_1709934209018_393(param_1709934209018_394 : Interface_1709934209018_182) : Enum_1709934209018_390 { // block id: 395
    Class_1709934209018_175<Int32>();
    UInt64((UInt64(199) & var_1709934209018_737|>(func_1709934209018_720~>func_1709934209018_441)));
    Class_1709934209018_744<Enum_1709934209018_390, String>.func_1709934209018_749(try { // block id: 956
        Class_1709934209018_175<Int32>();
        Int64(-73)
    } catch (_) { // block id: 959
        Int64(117) | Int64(-35)
    } finally { // block id: 963
        var_1709934209018_26;
        Int64(-82)
    })
}


func func_1709934209018_287(optionalParam_1709934209018_288 ! : Range<UInt32> = ((UInt32(UInt32(UInt32(170)))&127)..=(UInt32(UInt32(142))&127):(Int64(49)|1)), namedParam_1709934209018_294 ! : Range<Int16>, namedParam_1709934209018_295 ! : Range<Int32>, optionalParam_1709934209018_296 ! : Range<UInt32> = ((UInt32(UInt32(179))&127)..(UInt32(UInt32(17))&127):(Int64(-118)|1))) : Int32 { // block id: 298
    let var_1709934209018_359 : Option<Bool> = (((UInt64(UInt64(133))&127)..(UInt64(UInt64(Int8(Int8(56))))&127):(Int64(Int64(23))|1)) as Bool);
    let var_1709934209018_967 : (Interface_1709934209018_182) -> Enum_1709934209018_390 = func_1709934209018_393;
    let var_1709934209018_1164 : Enum_1709934209018_390 = Enum_1709934209018_390.enumValue_1709934209018_767(Int8(-19), ((Int8(Int8(-9))&127)..(Int8(Int8(72))&127):(Int64(54)|1)));
    func func_1709934209018_302() : VArray<Int32, $2> { // block id: 303
        var var_1709934209018_321 : Bool = false;
        let var_1709934209018_982 : Interface_1709934209018_182 = Class_1709934209018_175<Int32>(VArray<Int32, $2>(repeat: Int32(UInt32(UInt16(114)))), namedParam_1709934209018_992 : Struct_1709934209018_856(), optionalParam_1709934209018_993 : Int8(65));
        func func_1709934209018_336() : VArray<Int32, $2> { // block id: 337
            let var_1709934209018_344 : Interface_1709934209018_178 = Class_1709934209018_175<Int32>();
            match (match ((var_1709934209018_344, Float32(42.0), var_1709934209018_123, [Float64(112.0), Float64(-74.0), Float64(15.0), Float64(-60.0), Float64(-10.0), Float64(8.0), Float64(-44.0), Float64(-94.0), Float64(-44.0), Float64(57.0)], Float32(3.0), UInt8(187))[3]) {
                case _ => 
                    ();
                    if (false) { var_1709934209018_359 } else { var_1709934209018_359 } 
                
                case _ => 
                    if (var_1709934209018_128) { var_1709934209018_359 } else { var_1709934209018_359 } ;
                    ();
                    Option<Bool>.None
                
            }) {
                case _ : Option<Int16> => 
                    Int16(73);
                    false
                
                case _ => 
                    var_1709934209018_128 && false
                
            };
            const var_1709934209018_975 : Rune = r'S';
            var var_1709934209018_1160 : UInt32 = UInt32(113);
            let var_1709934209018_1194 : Struct_1709934209018_856 = Struct_1709934209018_856();
            match ((try { // block id: 970
                if (true) { r'z' } else { var_1709934209018_975 } ;
                var_1709934209018_26;
                Class_1709934209018_744<Enum_1709934209018_390, String>()
            } catch (e: Exception) { // block id: 979
                ();
                var_1709934209018_982
            }|>var_1709934209018_967)) {
                case enumValue_1709934209018_753(_ : (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8), _, _ : Interface_1709934209018_179, caseVar_1709934209018_1137 : Float64) => 
                    ();
                    var var_1709934209018_1142 : Bool = false;
                    var_1709934209018_1142 &&= var_1709934209018_1142;
                    if (var_1709934209018_128) { var_1709934209018_1148 } else { VArray<Int32, $2>({ i => Int32(-12)}) } 
                
                case enumValue_1709934209018_753(_ : Interface_1709934209018_178, caseVar_1709934209018_1155, caseVar_1709934209018_1156, _) => 
                    var_1709934209018_1160 += var_1709934209018_1160;
                    var_1709934209018_1164;
                    if (var_1709934209018_128) { var_1709934209018_1148 } else { var_1709934209018_1148 } 
                
                case caseVar_1709934209018_1174 => 
                    var_1709934209018_1148
                
                case _ : Interface_1709934209018_181 => 
                    if (var_1709934209018_128) { VArray<Int32, $2>({ i => Int32(90)}) } else { VArray<Int32, $2>({ i => Int32(96)}) } 
                
                case _ => 
                    Class_1709934209018_175<Int32>(var_1709934209018_1148, namedParam_1709934209018_992 : var_1709934209018_1194, optionalParam_1709934209018_993 : Int8(-16), optionalParam_1709934209018_999 : var_1709934209018_771);
                    Class_1709934209018_744<Enum_1709934209018_390, String>();
                    if (true) { var_1709934209018_1148 } else { var_1709934209018_1148 } 
                
            }
        }
;
        try { // block id: 305
            var loopTimeVar_1709934209018_309 : Range<UInt64> = ((UInt64(UInt64(UInt16(Int16(-6))))&127)..(UInt64(UInt64(88))&127):(Int64(43)|1));
            for (i in loopTimeVar_1709934209018_309 where true) {

            };
            var loopTimeVar_1709934209018_324 : Range<UInt64> = ((UInt64(UInt64(UInt32(Int16(Int8(-9)))))&127)..=(UInt64(UInt64(Int64(-101)))&127):(Int64(UInt32(Int8(-57)))|1));
            for (i in loopTimeVar_1709934209018_324 where var_1709934209018_128) {
                var_1709934209018_321 ||= var_1709934209018_321
            };
            func_1709934209018_336()
        } catch (_) { // block id: 1203
            if (var_1709934209018_128) { var_1709934209018_1148 } else { var_1709934209018_1148 } 
        }
    }
;
    func_1709934209018_302()[0]
}




public func func_1709934209018_6(param_1709934209018_7 : UInt16) : Unit { // block id: 8
    let var_1709934209018_29 : Bool = (Float64(-41.0) is Int16);
    var var_1709934209018_36 : UInt64 = UInt64(Int8(Int8(53)));
    const var_1709934209018_67 : Int = 9;
    func func_1709934209018_43() : Int16 { // block id: 44
        var var_1709934209018_94 : Int8 = Int8(-111);
        const var_1709934209018_104 : Int32 = -83;
        const var_1709934209018_132 : Bool = false;
        (if ((Option<Bool>.None ?? true)) { // block id: 58
            "b9u;&XL)hJ";
            var var_1709934209018_63 : Option<Int64> = Option<Int64>.None;
            if (var_1709934209018_29) { var_1709934209018_63 } else { Option<Int64>.Some(var_1709934209018_67) } 
        } else if (match (Option<Int64>.Some(var_1709934209018_67)) {
            case _ : Rune => 
                var_1709934209018_67;
                let var_1709934209018_78 : UInt32 = UInt32(25);
                var_1709934209018_78 < var_1709934209018_78
            
            case caseVar_1709934209018_83 => 
                if (var_1709934209018_29) { Option<Int64>.None } else { Option<Int64>.Some(Int64(122)) } ;
                UInt8(83);
                Int8(-42) <= var_1709934209018_94
            
            case _ => 
                UInt16(166) % ((UInt16(12)) | 1);
                var_1709934209018_104 > Int32(-20)
            
            case _ => 
                var var_1709934209018_112 : String = """
gkDQJ
?g7Z%
""";
                var_1709934209018_112 = ###"jE7v${var_1709934209018_112}u\"2kRE${var_1709934209018_112}"###;
                var_1709934209018_117 <<= ((Int64(-85)) & 7);
                var_1709934209018_29
            
        }) { // block id: 121
            var_1709934209018_123
        } else { // block id: 125
            var_1709934209018_128 ||= var_1709934209018_132;
            var_1709934209018_26;
            var var_1709934209018_139 : Option<Int64> = (Float32(Float32(Float32(Float32(-94.0)))) as Int64);
            if (var_1709934209018_128) { var_1709934209018_123 } else { var_1709934209018_139 } 
        } ?? try { // block id: 146
            if (var_1709934209018_132) { Option<Int64>.None } else { var_1709934209018_123 } ;
            Int64(66)
        } finally { // block id: 152
            Int64(59)
        });
        var var_1709934209018_160 : Option<Int16> = Option<Int16>.None;
        (var_1709934209018_160 ?? try { // block id: 164
            var_1709934209018_166
        } catch (_) { // block id: 168
            var_1709934209018_166
        } finally { // block id: 170
            var_1709934209018_166 + var_1709934209018_166
        } - (var_1709934209018_186.var_1709934209018_189))
    }
;
    var loopTimeVar_1709934209018_205 : Int = 0;
    do {
        loopTimeVar_1709934209018_205++;
        func_1709934209018_43();
        var var_1709934209018_200 : UInt16 = UInt16(154);
        var loopTimeVar_1709934209018_203 : Int = 0;
        do {
            loopTimeVar_1709934209018_203++;
            var_1709934209018_36 + var_1709934209018_36;
            var_1709934209018_16 += var_1709934209018_200
        } while ((var_1709934209018_128) && loopTimeVar_1709934209018_203 < 100 ) 
    } while (((if (false) { // block id: 13
        let var_1709934209018_22 : UInt16 = UInt16(Int8(48));
        var_1709934209018_16 >>= ((var_1709934209018_22) & 7);
        var_1709934209018_26
    } else if (var_1709934209018_29) { // block id: 32
        Int8(-111);
        var_1709934209018_36 ^= UInt64(206)
    } is UInt16)) && loopTimeVar_1709934209018_205 < 100 ) ;
    let var_1709934209018_215 : Interface_1709934209018_178 = Class_1709934209018_175<Int32>();
    var_1709934209018_186.var_1709934209018_210 &&= match (var_1709934209018_215) {
        case _ => 
            Class_1709934209018_175<Int32>(namedParam_1709934209018_222 : Float32(79.0), namedParam_1709934209018_223 : UInt32(248), namedParam_1709934209018_224 : true);
            var_1709934209018_166
        
    } <= if (false) { // block id: 1653
        var_1709934209018_26;
        var_1709934209018_166
    } else { // block id: 1656
        var_1709934209018_1658;
        -var_1709934209018_166
    }
}


main(): Int64 {
    try {
        var var_1709934209018_1699 : UInt16 = UInt16(Int8(122));
        match (Class_1709934209018_175<Int32>()) {
            case _ => 
                ((Int16(Int16(-82))&127)..=(Int16(Int16(-4))&127):(Int64(-106)|1));
                ();
                var var_1709934209018_1690 : UInt16 = UInt16(UInt16(Int16(45)));
                UInt16(244) / ((var_1709934209018_1690) | 1)
            
            case _ : UInt16 => 
                ();
                var_1709934209018_1699
            
            case caseVar_1709934209018_1704 : Interface_1709934209018_183 => 
                var var_1709934209018_1707 : Option<Bool> = (Int64(Int64(UInt16(100))) as Bool);
                var_1709934209018_1707;
                UInt16(179)
            
            case _ => 
                UInt16(36)
            
        }|>func_1709934209018_6;
        var var_1709934209018_1890 : Float64 = Float64(-100.0);
        var loopTimeVar_1709934209018_1899 : Int64 = 0;
        do {
            loopTimeVar_1709934209018_1899++;

        } while (((Option<Bool>.None ?? match (var_1709934209018_1726) {
            case caseVar_1709934209018_1730 : Range<UInt8> => 
                let var_1709934209018_1733 : (Option<Bool>, Range<UInt8>, Range<UInt16>, (Rune, Option<Int16>, (Range<Int32>, Int8, Range<Int8>, Enum_1709934209018_390, Option<Int64>, Int32), Array<Float64>, Float64, Option<Enum_1709934209018_390>), Option<Enum_1709934209018_390>) = (Option<Bool>.Some(((VArray<UInt8, $7>({ i => UInt8(60)}) is VArray<UInt8, $7>) is Option<Bool>)), ((UInt8(UInt8(146))&127)..=(UInt8(UInt8(69))&127):(Int64(-37)|1)), ((UInt16(UInt16(222))&127)..=(UInt16(UInt16(184))&127):(Int64(10)|1)), (r'X', Option<Int16>.None, (((Int32(Int32(2))&127)..(Int32(Int32(-116))&127):(Int64(84)|1)), Int8(10), ((Int8(Int8(74))&127)..=(Int8(Int8(107))&127):(Int64(104)|1)), Enum_1709934209018_390.enumValue_1709934209018_767(Int8(-36), ((Int8(Int8(-70))&127)..=(Int8(Int8(-29))&127):(Int64(-68)|1))), ((Option<Bool>.Some(false), ((UInt8(UInt8(58))&127)..(UInt8(UInt8(30))&127):(Int64(36)|1)), ((UInt16(UInt16(73))&127)..(UInt16(UInt16(62))&127):(Int64(44)|1)), (r'a', Option<Int16>.None, (((Int32(Int32(-89))&127)..(Int32(Int32(-94))&127):(Int64(29)|1)), Int8(7), ((Int8(Int8(-35))&127)..=(Int8(Int8(-124))&127):(Int64(-2)|1)), Enum_1709934209018_390.enumValue_1709934209018_767(Int8(-42), ((Int8(Int8(-30))&127)..=(Int8(Int8(-68))&127):(Int64(-18)|1))), Option<Int64>.None, Int32(-54)), [Float64(110.0), Float64(98.0), Float64(-58.0), Float64(-98.0), Float64(91.0), Float64(-107.0), Float64(65.0), Float64(6.0), Float64(42.0), Float64(76.0)], Float64(74.0), Option<Enum_1709934209018_390>.Some(Enum_1709934209018_390.enumValue_1709934209018_753(Int32(-42), [Float64(-109.0), Float64(31.0), Float64(103.0), Float64(80.0), Float64(-6.0), Float64(-11.0), Float64(54.0), Float64(44.0), Float64(22.0), Float64(-45.0)], Option<Bool>.None, (Class_1709934209018_175<Int32>(), Float32(57.0), Option<Int64>.None, [Float64(28.0), Float64(24.0), Float64(76.0), Float64(123.0), Float64(-4.0), Float64(-9.0), Float64(-31.0), Float64(27.0), Float64(10.0), Float64(-37.0)], Float32(58.0), UInt8(173))))), Option<Enum_1709934209018_390>.Some(Enum_1709934209018_390.enumValue_1709934209018_767(Int8(52), ((Int8(Int8(-48))&127)..=(Int8(Int8(5))&127):(Int64(-106)|1))))) as Int64), Int32(91)), [Float64(64.0), Float64(-92.0), Float64(86.0), Float64(12.0), Float64(92.0), Float64(Float64(100.0)), Float64(-87.0), Float64(Float64(-120.0)), Float64(Float32(-23.0)), Float64(95.0)], Float64(-85.0), Option<Enum_1709934209018_390>.None), (Class_1709934209018_175<Int32>() as Enum_1709934209018_390));
                var_1709934209018_1733;
                var_1709934209018_1843;
                true || false
            
            case _ => 
                var_1709934209018_1890 *= Float64(79.0);
                var_1709934209018_1894;
                false
            
        })) && loopTimeVar_1709934209018_1899 < 100 ) ;
        if (var_1709934209018_1905[3]) { // block id: 1962
            var_1709934209018_1964;
            let var_1709934209018_2000 : Unit = ();
            var_1709934209018_2000;
            Int64(-119)
        } else if (match (var_1709934209018_1843) {
            case caseVar_1709934209018_2007 : Option<Unit> => 
                var_1709934209018_2010;
                var_1709934209018_128
            
            case _ => 
                var_1709934209018_128 || var_1709934209018_128
            
            case _ : Interface_1709934209018_181 => 
                var_1709934209018_2024 |= Int16(101);
                Int64(-5) >= Int64(25)
            
            case _ => 
                var_1709934209018_1658;
                false
            
        }) { // block id: 2035
            var_1709934209018_186;
            var_1709934209018_673
        } else { // block id: 2038
            var_1709934209018_2024++;
            var_1709934209018_117
        } >> ((match (if (var_1709934209018_128) { ((UInt8(UInt8(106))&127)..=(UInt8(UInt8(50))&127):(Int64(13)|1)) } else { ((UInt8(UInt8(65))&127)..(UInt8(UInt8(67))&127):(Int64(88)|1)) } ) {
            case _ : Option<Bool> => 
                var_1709934209018_2051;
                var_1709934209018_673
            
            case caseVar_1709934209018_2056 : (Interface_1709934209018_178, Float32, Option<Int64>, Array<Float64>, Float32, UInt8) => 
                ((UInt16(UInt16(167))&127)..=(UInt16(UInt16(216))&127):(Int64(97)|1));
                var_1709934209018_771 * var_1709934209018_771;
                Int64(-52) ** var_1709934209018_1326
            
            case _ => 
                Int64(-30) / ((Int64(2)) | 1)
            
            case caseVar_1709934209018_2073 => 
                Int64(29)
            
            case _ => 
                Int64(117)
            
        }) & 7)
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1709934209018_1699*var_1709934209018_1699), 64)
        crcCheck.updateBuffer(UInt64(var_1709934209018_2024*var_1709934209018_2024), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Struct_1709934209018_856 {

}
// (not CJNATIVE) ASSERT: scan-1 sema_varray_cjvm_in_ref_type
// (CJNATIVE) ASSERT: scan sema_static_variable_use_generic_parameter



