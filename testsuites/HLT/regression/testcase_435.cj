/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public const var_1692040284101_36 : Int = 98
var var_1692040284101_40 : Float32 = Float32(79.0)
let var_1692040284101_90 : Float64 = Float64(Float64(Float32(-5.0)))
let var_1692040284101_195 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None
var var_1692040284101_277 : Int32 = Int32(UInt16(Int8(31)))
let var_1692040284101_311 : Bool = ((Int64(31), Int64(66), ((UInt32(UInt32(UInt8(60)))&127)..=(UInt32(UInt32(225))&127):(Int64(UInt8(185))|1)), Int32(-36), true) is Range<Int8>)
public const var_1692040284101_423 : String = " :,VCf;m)w"
public let var_1692040284101_429 : UInt = UInt64(235)
public var var_1692040284101_491 : Range<UInt8> = ((UInt8(UInt8(168))&127)..(UInt8(UInt8(109))&127):(Int64(104)|1))
public const var_1692040284101_495 : UInt8 = 147
public let var_1692040284101_628 : Range<UInt32> = ((UInt32(UInt32(123))&127)..=(UInt32(UInt32(89))&127):(Int64(Int8(-82))|1))
let var_1692040284101_753 : ?UInt16 = (UInt16(211) as UInt16)
let var_1692040284101_759 : Bool = (([UInt64(109), UInt64(UInt16(171)), UInt64(163), UInt64(27), UInt64(Int16(5)), UInt64(184), UInt64(246), UInt64(UInt32(115)), UInt64(Int8(-40)), UInt64(142)], (((Int16(Int16(77))&127)..=(Int16(Int16(31))&127):(Int64(112)|1)), ((UInt32(UInt32(232))&127)..(UInt32(UInt32(45))&127):(Int64(31)|1)), Option<UInt16>.None), ()) is VArray<Unit, $5>)
const var_1692040284101_815 : Int32 = -106
public const var_1692040284101_866 : UInt32 = 138
var var_1692040284101_939 : Range<UInt16> = ((UInt16(UInt16(167))&127)..=(UInt16(UInt16(194))&127):(Int64(-22)|1))
public let var_1692040284101_980 : Rune = r'l'
let var_1692040284101_1000 : (Range<UInt16>, UInt64, UInt32, Range<Int32>, (Range<UInt8>, Float64, UInt8, Int32, Float64), Int16) = (((UInt16(UInt16(Int8(-53)))&127)..(UInt16(UInt16(UInt16(241)))&127):(Int64(-70)|1)), UInt64(UInt64(Int16(-43))), UInt32(50), ((Int32(Int32(UInt32(UInt16(48))))&127)..(Int32(Int32(UInt8(Int8(58))))&127):(Int64(UInt8(114))|1)), (((UInt8(UInt8(111))&127)..(UInt8(UInt8(42))&127):(Int64(Int32(2))|1)), Float64(Float32(Float32(-120.0))), UInt8(165), Int32(Int16(Int16(82))), Float64(52.0)), Int16(Int8(-107)))
var var_1692040284101_1054 : ?UInt16 = (UInt16(Int16(68)) as UInt16)
let var_1692040284101_1063 : Unit = ()
var var_1692040284101_1074 : (UInt16, String, Range<UInt16>, UInt8, Range<Int16>) = (UInt16(37), """
8St${var_1692040284101_423}t-
b0.pi
""", ((UInt16(UInt16(UInt8(UInt8(35))))&127)..=(UInt16(UInt16(Int8(92)))&127):(Int64(UInt16(UInt8(32)))|1)), UInt8(252), ((Int16(Int16(113))&127)..(Int16(Int16(-62))&127):(Int64(23)|1)))
public let var_1692040284101_1339 : VArray<Rune, $9> = [r'r', r'K', r'x', r'H', r'S', r'a', r'v', r'D', r'C']
public var var_1692040284101_1394 : Bool = (UInt16(14) is Option<UInt32>)
public var var_1692040284101_1412 : (Range<Int8>, VArray<Bool, $9>, Array<Unit>, Int16, Range<Int8>, (Unit, Int8, Range<UInt64>, Rune)) = (((Int8(Int8(113))&127)..=(Int8(Int8(34))&127):(Int64(27)|1)), VArray<Bool, $9>(repeat: false), [(), (), (), (), (), (), (), (), (), ()], Int16(-15), ((Int8(Int8(77))&127)..=(Int8(Int8(-73))&127):(Int64(102)|1)), ((), Int8(UInt8(UInt8(229))), ((UInt64(UInt64(186))&127)..=(UInt64(UInt64(UInt32(173)))&127):(Int64(89)|1)), r'J'))
const var_1692040284101_1471 : Int8 = 0
var var_1692040284101_1492 : Range<Int16> = ((Int16(Int16(Int8(Int8(Int8(78)))))&127)..=(Int16(Int16(UInt16(Int8(Int8(108)))))&127):(Int64(UInt64(Int64(UInt32(24))))|1))
let var_1692040284101_1545 : VArray<Bool, $9> = [false, false, true, true, true, false, true, true, true]
public open class Class_1692040284101_6 {
    init() { // block id: 8

    }
;
    var var_1692040284101_69 : Float64 = Float64(-118.0);
    prop var_1692040284101_151 : UInt64 { // block id: 152
        get() { // block id: 154
            UInt64(Int8(UInt8(Int8(117))))
        }

    };
    public static prop var_1692040284101_161 : Bool { // block id: 162
        get() { // block id: 164
            (Int16(UInt16(36)) is (Float32) -> Unit)
        }

    };
    public var var_1692040284101_208 : UInt16 = UInt16(38);
    public static const var_1692040284101_211 : String = """
z4QjV
Z%05\"
""";
    public static const var_1692040284101_218 : UInt8 = 250;
    private var var_1692040284101_243 : String = "J${var_1692040284101_211}--*$=,D9${var_1692040284101_211}6";
    public static const var_1692040284101_305 : Unit = ();
    prop var_1692040284101_513 : (Array<UInt64>, (Range<Int16>, Range<UInt32>, Option<UInt16>), Unit) { // block id: 514
        get() { // block id: 516
            (Int64(21), Int64(90), ((UInt32(UInt32(UInt16(250)))&127)..=(UInt32(UInt32(Int32(-60)))&127):(Int64(UInt8(206))|1)), Int32(-44), (r'4' is Option<UInt16>));
            ([UInt64(135), UInt64(248), UInt64(45), UInt64(132), UInt64(149), UInt64(102), UInt64(94), UInt64(22), UInt64(37), UInt64(47)], (((Int16(Int16(37))&127)..=(Int16(Int16(50))&127):(Int64(108)|1)), ((UInt32(UInt32(232))&127)..=(UInt32(UInt32(186))&127):(Int64(-97)|1)), (((UInt8(UInt8(200))&127)..(UInt8(UInt8(214))&127):(Int64(-96)|1)) as UInt16)), ())
        }

    };
    static prop var_1692040284101_659 : Range<Int16> { // block id: 660
        get() { // block id: 662
            ((Int8(Int8(-97))&127)..=(Int8(Int8(-20))&127):(Int64(-119)|1));
            ((Int16(Int16(12))&127)..=(Int16(Int16(30))&127):(Int64(118)|1))
        }

    };
    static const var_1692040284101_746 : Unit = ();
    public var var_1692040284101_788 : UInt8 = UInt8(82);
    private static mut prop var_1692040284101_824 : Bool { // block id: 825
        get() { // block id: 827
            UInt16(Int8(-66));
            ();
            (((Int32(Int32(37))&127)..(Int32(Int32(57))&127):(Int64(116)|1)) is (Range<Int32>) -> UInt16)
        }

        set(Value) { // block id: 835
            ();
            Option<Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>>.None;
            ()
        }

    };
    func func_1692040284101_126(namedParam_1692040284101_127 ! : Int64, optionalParam_1692040284101_128 ! : Range<UInt16> = ((UInt16(UInt16(14))&127)..=(UInt16(UInt16(73))&127):(Int64(UInt16(UInt16(242)))|1)), optionalParam_1692040284101_135 ! : String = "Oi0JDoc;4S") : Array<Unit> { // block id: 137
        var var_1692040284101_170 : UInt32 = UInt32(Int32(UInt8(Int8(-78))));
        const var_1692040284101_180 : UInt32 = 114;
        (match (Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None) {
            case _ => 
                var_1692040284101_151;
                if (var_1692040284101_161) { ((UInt32(var_1692040284101_170)&127)..=(UInt32(var_1692040284101_170)&127):(Int64(122)|1)) } else { ((UInt32(UInt32(209))&127)..=(UInt32(var_1692040284101_180)&127):(Int64(-45)|1)) } ;
                var var_1692040284101_184 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = (Float32(Float32(Float32(94.0))) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>));
                var_1692040284101_184
            
            case _ => 
                if (var_1692040284101_161) { var_1692040284101_195 } else { var_1692040284101_195 } 
            
            case caseVar_1692040284101_200 : Range<UInt64> => 
                var_1692040284101_195
            
            case _ => 
                Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None
            
        } ?? (var_1692040284101_208, var_1692040284101_211, ((UInt16(UInt16(198))&127)..=(UInt16(var_1692040284101_208)&127):(var_1692040284101_36|1)), var_1692040284101_218, ((Int16(Int16(-1))&127)..(Int16(Int16(3))&127):(Int64(-59)|1))))[4];
        let var_1692040284101_621 : (Range<Int16>) -> VArray<Unit, $5> = func_1692040284101_253;
        let var_1692040284101_637 : Range<Int32> = ((Int32(Int32(112))&127)..=(Int32(Int32(-15))&127):(Int64(-25)|1));
        let var_1692040284101_728 : ??(Int64, Int64, Range<UInt32>, Int32, Bool) = (VArray<Unit, $5>({ i => ()}) as Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>);
        let var_1692040284101_794 : Bool = (([UInt64(226), UInt64(202), UInt64(22), UInt64(37), UInt64(137), UInt64(121), UInt64(209), UInt64(74), UInt64(205), UInt64(155)], (((Int16(Int16(46))&127)..(Int16(Int16(68))&127):(Int64(48)|1)), ((UInt32(UInt32(201))&127)..(UInt32(UInt32(134))&127):(Int64(-14)|1)), Option<UInt16>.None), ()) is (Float64, UInt8, Range<UInt32>, (String) -> Bool) -> (Int64, Int64, Range<UInt32>, Int32, Bool));
        try { // block id: 223
            let var_1692040284101_230 : ?UInt16 = Option<UInt16>.None;
            var_1692040284101_230.getOrThrow()
        } catch (e: Exception) { // block id: 232
            -Float32(-117.0);
            try { // block id: 236
                UInt16(1);
                UInt64(95);
                ()
            } finally { // block id: 240
                var_1692040284101_243 = var_1692040284101_243
            };
            let var_1692040284101_720 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None;
            func func_1692040284101_247(namedParam_1692040284101_248 ! : Range<Int32>) : UInt16 { // block id: 249
                (match (UInt16(151)) {
                    case _ => 
                        var_1692040284101_628;
                        if (var_1692040284101_311) { var_1692040284101_637 } else { ((Int32(var_1692040284101_277)&127)..(Int32(Int32(-115))&127):(var_1692040284101_36|1)) } ;
                        ((Int16(Int16(-71))&127)..=(Int16(Int16(-80))&127):(Int64(37)|1))
                    
                }|>var_1692040284101_621)[2];
                var var_1692040284101_669 : (Int32, UInt64, Float64, UInt64, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>) = (Int32(89), UInt64(18), Float64(Float64(-101.0)), UInt64(Int64(21)), (Struct_1692040284101_465<Range<Int64>, Float64>() as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)));
                let var_1692040284101_702 : (UInt16, String, Range<UInt16>, UInt8, Range<Int16>) = (UInt16(224), ###"fU OJ|4_i6"###, ((UInt16(UInt16(161))&127)..=(UInt16(UInt16(142))&127):(Int64(-86)|1)), UInt8(UInt8(UInt8(Int8(-7)))), ((Int16(Int16(-79))&127)..=(Int16(Int16(-109))&127):(Int64(-100)|1)));
                (try { // block id: 653
                    var_1692040284101_40 -= Float32(44.0);
                    (var_1692040284101_659, ((UInt32(UInt32(52))&127)..(UInt32(UInt32(160))&127):(Int64(-79)|1)), Option<UInt16>.Some(UInt16(221)));
                    var_1692040284101_669
                } catch (_) { // block id: 679
                    let var_1692040284101_686 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some((UInt16(175), """
'cSr_
smiQV
""", ((UInt16(UInt16(122))&127)..=(UInt16(UInt16(160))&127):(Int64(-51)|1)), UInt8(110), ((Int16(Int16(-66))&127)..=(Int16(Int16(-76))&127):(Int64(6)|1))));
                    (var_1692040284101_277, var_1692040284101_151, Float64(-9.0), var_1692040284101_151, var_1692040284101_686)
                }[4] ?? (try { // block id: 697
                    true;
                    var_1692040284101_305;
                    Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some(var_1692040284101_702)
                } catch (e: Exception) { // block id: 712
                    var_1692040284101_69 *= var_1692040284101_69;
                    var_1692040284101_305;
                    if (false) { var_1692040284101_720 } else { var_1692040284101_720 } 
                } ?? try { // block id: 724
                    var_1692040284101_702
                } finally { // block id: 726
                    var_1692040284101_728;
                    var_1692040284101_702
                }));
                (try { // block id: 743
                    VArray<Unit, $5>(repeat: var_1692040284101_746);
                    var_1692040284101_753
                } finally { // block id: 756
                    if (var_1692040284101_759) { ((UInt8(UInt8(123))&127)..=(UInt8(UInt8(39))&127):(Int64(-91)|1)) } else { ((UInt8(var_1692040284101_788)&127)..=(UInt8(var_1692040284101_788)&127):(Int64(-15)|1)) } ;
                    if (var_1692040284101_794) { Option<UInt16>.None } else { var_1692040284101_753 } 
                } ?? UInt16((UInt16(151) / ((UInt16(22)) | 1))))
            }
;
            func_1692040284101_247(namedParam_1692040284101_248 : ((Int32(Int32(76))&127)..=(Int32(var_1692040284101_815)&127):(Int64(-54)|1)))
        } finally { // block id: 818
            try { // block id: 820

            } finally { // block id: 821
                var_1692040284101_824 &&= false;
                var_1692040284101_746
            };
            Int64(Int8(-82));
            const var_1692040284101_884 : Unit = ();
            var var_1692040284101_888 : Unit = ();
            match (var_1692040284101_753) {
                case caseVar_1692040284101_847 : Range<Int8> => 
                    var_1692040284101_788 &= UInt8(182);
                    ();
                    var_1692040284101_208
                
                case caseVar_1692040284101_856 => 
                    var_1692040284101_208
                
                case caseVar_1692040284101_861 : Range<UInt32> => 
                    UInt32(165) + var_1692040284101_866;
                    var_1692040284101_746;
                    UInt16(23) & UInt16(66)
                
                case caseVar_1692040284101_874 : Float64 => 
                    var var_1692040284101_877 : UInt16 = UInt16(217);
                    var_1692040284101_877
                
                case _ => 
                    [var_1692040284101_746, var_1692040284101_884, var_1692040284101_746, var_1692040284101_888, (), (), (), (), var_1692040284101_884, ()];
                    var_1692040284101_208 + var_1692040284101_208
                
            }
        };
        match (if (var_1692040284101_311) { // block id: 902
            var_1692040284101_69;
            var_1692040284101_788 |= UInt8(183);
            var_1692040284101_218
        } else { // block id: 908
            UInt8(106) - var_1692040284101_495
        }) {
            case caseVar_1692040284101_914 : Int16 => 
                [(), (), (), (), (), (), (), (), (), ()]
            
            case caseVar_1692040284101_919 => 
                var_1692040284101_277 *= var_1692040284101_815;
                [(), (), (), (), (), (), (), (), (), ()]
            
            case _ => 
                var var_1692040284101_928 : Range<UInt64> = ((UInt64(UInt64(113))&127)..(UInt64(UInt64(103))&127):(Int64(-107)|1));
                var_1692040284101_928;
                let var_1692040284101_931 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = (r'z' as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>));
                var_1692040284101_931;
                var var_1692040284101_935 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
                var_1692040284101_935
            
        }
    }
;
    static mut prop var_1692040284101_951 : Option<Range<UInt64>> { // block id: 952
        get() { // block id: 954
            Option<Range<UInt64>>.None
        }

        set(Value) { // block id: 958
            ((UInt64(UInt64(Int16(UInt8(37))))&127)..(UInt64(UInt64(200))&127):(Int64(UInt8(Int8(-13)))|1));
            ()
        }

    };
    func func_1692040284101_1259(param_1692040284101_1260 : (String) -> Bool, namedParam_1692040284101_1263 ! : Rune) : Unit { // block id: 1264
        try { // block id: 1266
            Option<Unit>.None.getOrThrow()
        } finally { // block id: 1273

        }
    }
;
    public func func_1692040284101_1259() : UInt8 { // block id: 14
        let var_1692040284101_1529 : (Float32) -> UInt8 = func_1692040284101_1345;
        -Float32(Float32(116.0))|>(var_1692040284101_1529~>func_1692040284101_23);
        try { // block id: 1535
            var var_1692040284101_1558 : (Unit, Int8, Range<UInt64>, Rune) = ((), Int8(UInt8(UInt8(UInt8(180)))), ((UInt64(UInt64(197))&127)..=(UInt64(UInt64(30))&127):(Int64(79)|1)), r'8');
            var var_1692040284101_1577 : Int16 = Int16(Int16(99));
            match (var_1692040284101_939) {
                case caseVar_1692040284101_1540 : (Range<Int8>, VArray<Bool, $9>, Array<Unit>, Int16, Range<Int8>, (Unit, Int8, Range<UInt64>, Rune)) => 
                    if (var_1692040284101_311) { var_1692040284101_1545 } else { VArray<Bool, $9>(repeat: true) } ;
                    var_1692040284101_1558;
                    var_1692040284101_218 + var_1692040284101_495
                
                case _ => 
                    var_1692040284101_1577++;
                    var_1692040284101_788
                
            }
        } catch (e: Exception) { // block id: 1581
            (Option<UInt8>.None ?? UInt8(78))
        }
    }

    static init() {
    }
}

var var_1692040284101_10 : Class_1692040284101_6 = Class_1692040284101_6()

const func func_1692040284101_16(param_1692040284101_17 : Float32) : Unit { // block id: 18
    61;
    ();
    ()
}

public const func func_1692040284101_29(param_1692040284101_30 : Bool, param_1692040284101_31 : Int64) : Int64 { // block id: 32
    -10
}

const func func_1692040284101_73(param_1692040284101_74 : String) : Bool { // block id: 75
    ();
    126;
    false
}



const func func_1692040284101_419(namedParam_1692040284101_420 ! : UInt16) : String { // block id: 421
    var_1692040284101_423
}

public struct Struct_1692040284101_465<T0, T1> {
    init() { // block id: 467

    }
;
    mut prop var_1692040284101_472 : Float64 { // block id: 473
        get() { // block id: 475
            UInt16(145);
            UInt16(Int16(-64));
            Float64(Float64(Float32(Float32(-112.0))));
            var_1692040284101_1591
        }

        set(Value) { // block id: 485
            ();
            var_1692040284101_1591 = Value
        }

    };
    mut prop var_1692040284101_1591 : Float64 { // block id: 1592
        get() { // block id: 1594
            ();
            ();
            Float64(Float32(-75.0))
        }

        set(Value) { // block id: 1601
            Int32(Int32(12));
            ()
        }

    }
}





public func func_1692040284101_253(param_1692040284101_254 : Range<Int16>) : VArray<Unit, $5> { // block id: 255
    var var_1692040284101_264 : Bool = ((Int16(Int16(UInt16(10))) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)) is UInt8);
    let var_1692040284101_329 : Unit = ();
    let var_1692040284101_340 : ?UInt16 = Option<UInt16>.None;
    let var_1692040284101_353 : Int16 = Int16(126);
    const func func_1692040284101_407(param_1692040284101_408 : UInt8, param_1692040284101_409 : Int16, namedParam_1692040284101_410 ! : String, namedParam_1692040284101_411 ! : Float64) : Float32 { // block id: 412
        -109.0
    }
;
    const var_1692040284101_416 : Int16 = -76;
    const func func_1692040284101_401<T0, T1, T2>(namedParam_1692040284101_402 ! : Unit, namedParam_1692040284101_403 ! : UInt64) : Unit { // block id: 404
        func_1692040284101_16(func_1692040284101_407(167, var_1692040284101_416, namedParam_1692040284101_410 : func_1692040284101_419(namedParam_1692040284101_420 : 144), namedParam_1692040284101_411 : -85.0))
    }
;
    func func_1692040284101_285(param_1692040284101_286 : (Bool, Int64) -> Int64, optionalParam_1692040284101_290 ! : (Float32) -> Unit = { lambdaParameter_1692040284101_293 : Float32 =>  }, optionalParam_1692040284101_297 ! : Range<UInt16> = ((UInt16(UInt16(181))&127)..(UInt16(UInt16(139))&127):(Int64(86)|1)), optionalParam_1692040284101_299 ! : Float32 = Float32(-50.0)) : Float32 { // block id: 301
        Class_1692040284101_6.var_1692040284101_305;
        let var_1692040284101_335 : UInt16 = UInt16(UInt8(UInt8(12)));
        var var_1692040284101_348 : Int = Int64(125);
        var loopTimeVar_1692040284101_431 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        for (i in loopTimeVar_1692040284101_431 where match (if (var_1692040284101_311) { // block id: 324
            Int64(30);
            Option<UInt16>.None
        } else { // block id: 327
            var_1692040284101_329;
            if (var_1692040284101_311) { Option<UInt16>.Some(var_1692040284101_335) } else { var_1692040284101_340 } 
        }) {
            case caseVar_1692040284101_344 : UInt64 => 
                var_1692040284101_348 %= ((Int64(-14)) | 1);
                var_1692040284101_353 <= Int16(-62)
            
            case caseVar_1692040284101_358 : Int64 => 
                UInt32(163) / ((UInt32(158)) | 1);
                var_1692040284101_311
            
            case caseVar_1692040284101_366 : Float64 => 
                var_1692040284101_329;
                false
            
            case _ : UInt8 => 
                ();
                var var_1692040284101_376 : Int8 = Int8(Int8(27));
                var_1692040284101_376 *= var_1692040284101_376;
                true
            
            case _ => 
                Float32(-9.0);
                var var_1692040284101_385 : Range<Int64> = ((Int64(Int64(Int64(UInt32(Int32(122)))))&127)..=(Int64(Int64(42))&127):(Int64(107)|1));
                var_1692040284101_385;
                let var_1692040284101_395 : UInt = UInt64(Int32(-35));
                var_1692040284101_395 < var_1692040284101_395
            
        }) {
            func_1692040284101_401<UInt32, Float32, Float32>(namedParam_1692040284101_402 : (), namedParam_1692040284101_403 : var_1692040284101_429)
        };
        Float32(126.0)
    }
;
    if (var_1692040284101_264) { // block id: 270
        ();
        ();
        Float32(126.0)
    } else { // block id: 274
        ((Int32(var_1692040284101_277)&127)..(Int32(var_1692040284101_277)&127):(Int64(14)|1));
        Float32(-48.0)
    } / Float32((Int32(func_1692040284101_285(func_1692040284101_29, optionalParam_1692040284101_290 : func_1692040284101_16, optionalParam_1692040284101_297 : ((UInt16(UInt16(62))&127)..(UInt16(UInt16(178))&127):(Int64(-22)|1)), optionalParam_1692040284101_299 : Float32(-1.0)))) | 1)|>{ lambdaParameter_1692040284101_259 : Float32 =>  };
    let var_1692040284101_469 : Struct_1692040284101_465<Range<Int64>, Float64> = Struct_1692040284101_465<Range<Int64>, Float64>();
    let var_1692040284101_559 : ?(Int64, Int64, Range<UInt32>, Int32, Bool) = Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>.None;
    func func_1692040284101_449<T0, T1>(optionalParam_1692040284101_450 ! : Float64 = Float64(Float64(118.0)), optionalParam_1692040284101_453 ! : UInt8 = UInt8(UInt8(135)), optionalParam_1692040284101_456 ! : Range<UInt32> = ((UInt32(UInt32(186))&127)..=(UInt32(UInt32(86))&127):(Int64(68)|1)), namedParam_1692040284101_458 ! : (String) -> Bool) : (Int64, Int64, Range<UInt32>, Int32, Bool) { // block id: 461
        var loopTimeVar_1692040284101_505 : Int64 = 0;
        while (((var_1692040284101_469.var_1692040284101_472) != (var_1692040284101_491, var_1692040284101_90, var_1692040284101_495, var_1692040284101_277, var_1692040284101_90)[4]) && loopTimeVar_1692040284101_505 < 100 ) {
            loopTimeVar_1692040284101_505++;
            UInt8(52) + UInt8(170)
        };
        var_1692040284101_10.var_1692040284101_513[1][2];
        var var_1692040284101_554 : ??(Int64, Int64, Range<UInt32>, Int32, Bool) = (Int16(Int16(-8)) as Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>);
        var var_1692040284101_562 : (Int64, Int64, Range<UInt32>, Int32, Bool) = (Int64(Int32(-84)), Int64(UInt32(UInt32(185))), ((UInt32(UInt32(125))&127)..(UInt32(UInt32(UInt32(Int8(-81))))&127):(Int64(Int32(-77))|1)), Int32(UInt8(UInt8(246))), (((Int16(Int16(-14))&127)..(Int16(Int16(-77))&127):(Int64(124)|1)) is Int16));
        ((var_1692040284101_554 ?? var_1692040284101_559) ?? var_1692040284101_562)
    }
;
    func_1692040284101_449<Array<Unit>, Range<UInt64>>(optionalParam_1692040284101_450 : var_1692040284101_90, optionalParam_1692040284101_453 : var_1692040284101_495, namedParam_1692040284101_458 : func_1692040284101_73);
    let var_1692040284101_601 : Option<Option<VArray<Unit, $5>>> = (UInt64(Int32(-36)) as Option<VArray<Unit, $5>>);
    var var_1692040284101_613 : VArray<Unit, $5> = [(), (), (), (), ()];
    ((try { // block id: 598
        ();
        var_1692040284101_601
    } finally { // block id: 605
        if (var_1692040284101_311) { ((Int8(Int8(54))&127)..(Int8(Int8(-47))&127):(Int64(-77)|1)) } else { ((Int8(Int8(-71))&127)..=(Int8(Int8(39))&127):(Int64(-49)|1)) } ;
        Option<Option<VArray<Unit, $5>>>.None
    } ?? Option<VArray<Unit, $5>>.None) ?? var_1692040284101_613)
}






public func func_1692040284101_117(param_1692040284101_118 : Range<UInt16>, param_1692040284101_119 : Range<Int16>, param_1692040284101_120 : Float32) : UInt32 { // block id: 121
    var_1692040284101_10.func_1692040284101_126(namedParam_1692040284101_127 : Int64(-97), optionalParam_1692040284101_128 : var_1692040284101_939, optionalParam_1692040284101_135 : "a{d596\\@v\\P")[1];
    let var_1692040284101_969 : Range<UInt64> = ((UInt64(UInt64(243))&127)..(UInt64(UInt64(113))&127):(Int64(83)|1));
    (Class_1692040284101_6.var_1692040284101_951 ?? var_1692040284101_969);
    var var_1692040284101_983 : Option<UInt32> = (Float32(-107.0) as UInt32);
    let var_1692040284101_996 : Option<(Range<UInt16>, UInt64, UInt32, Range<Int32>, (Range<UInt8>, Float64, UInt8, Int32, Float64), Int16)> = (r'D' as (Range<UInt16>, UInt64, UInt32, Range<Int32>, (Range<UInt8>, Float64, UInt8, Int32, Float64), Int16));
    (if (var_1692040284101_759) { // block id: 978
        var_1692040284101_980;
        var_1692040284101_983
    } else { // block id: 986
        Option<UInt32>.None
    } ?? (var_1692040284101_996 ?? var_1692040284101_1000)[2])
}

public func func_1692040284101_111(param_1692040284101_112 : Float64) : (Int64, Int64, Range<UInt32>, Int32, Bool) { // block id: 113
    try { // block id: 115
        func_1692040284101_117(var_1692040284101_939, ((Int16(Int16(113))&127)..(Int16(Int16(42))&127):(Int64(-111)|1)), Float32(-40.0));
        let var_1692040284101_1046 : ?(Int64, Int64, Range<UInt32>, Int32, Bool) = (Int32(UInt8(UInt8(201))) as (Int64, Int64, Range<UInt32>, Int32, Bool));
        var_1692040284101_1046.getOrThrow()
    } finally { // block id: 1051
        var var_1692040284101_1098 : Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)> = (r'b' as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>));
        match (var_1692040284101_1054) {
            case _ => 
                var var_1692040284101_1067 : Unit = ();
                VArray<Unit, $5>(repeat: var_1692040284101_1063);
                true;
                Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some(var_1692040284101_1074)
            
            case _ : Int64 => 
                Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some(var_1692040284101_1074)
            
            case _ => 
                var_1692040284101_1098
            
            case _ => 
                Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some(var_1692040284101_1074)
            
        };
        let var_1692040284101_1108 : Array<Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>> = [(Struct_1692040284101_465<Range<Int64>, Float64>() as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), (UInt64(244) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, (((Int16(Int16(UInt8(11)))&127)..(Int16(Int16(Int16(-91)))&127):(Int64(30)|1)) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, ((UInt16(21), """
>1dH5
)hI (
""", ((UInt16(UInt16(12))&127)..(UInt16(UInt16(245))&127):(Int64(-28)|1)), UInt8(Int8(-114)), ((Int16(Int16(-89))&127)..=(Int16(Int16(104))&127):(Int64(55)|1))) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None];
        var_1692040284101_1108[6];
        let var_1692040284101_1138 : ?(Int64, Int64, Range<UInt32>, Int32, Bool) = ([Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None, (((UInt32(UInt32(137))&127)..=(UInt32(UInt32(254))&127):(Int64(17)|1)) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), (r'Q' as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), (Option<VArray<Unit, $5>>.None as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), (((Int32(Int32(-80))&127)..=(Int32(Int32(-34))&127):(Int64(90)|1)) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), ((((Int16(Int16(111))&127)..=(Int16(Int16(2))&127):(Int64(-22)|1)), ((UInt32(UInt32(207))&127)..=(UInt32(UInt32(249))&127):(Int64(100)|1)), Option<UInt16>.None) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), (UInt32(7) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.Some((UInt16(122), """
6YInX
ov|$J
""", ((UInt16(UInt16(140))&127)..=(UInt16(UInt16(55))&127):(Int64(-99)|1)), UInt8(142), ((Int16(Int16(-93))&127)..(Int16(Int16(37))&127):(Int64(-92)|1)))), (((Int64(Int64(-15))&127)..=(Int64(Int64(-28))&127):(Int64(-29)|1)) as (UInt16, String, Range<UInt16>, UInt8, Range<Int16>)), Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>.None] as (Int64, Int64, Range<UInt32>, Int32, Bool));
        let var_1692040284101_1174 : (Int64, Int64, Range<UInt32>, Int32, Bool) = (Int64(UInt16(20)), Int64(Int8(70)), ((UInt32(UInt32(169))&127)..=(UInt32(UInt32(60))&127):(Int64(95)|1)), Int32(UInt16(147)), false);
        (var_1692040284101_1138 ?? var_1692040284101_1174)
    }
}


public open class Class_1692040284101_1246<T0> <: Class_1692040284101_6 {
    init() { // block id: 1248

    }

}


func func_1692040284101_59(optionalParam_1692040284101_60 ! : UInt16 = UInt16(128), optionalParam_1692040284101_62 ! : Rune = r'S') : Array<Unit> { // block id: 64
    const var_1692040284101_81 : String = ###"F.f9mf9LDs"###;
    var_1692040284101_10.var_1692040284101_69 += if ((var_1692040284101_81|>func_1692040284101_73)) { // block id: 83
        Float64(42.0)
    } else if (func_1692040284101_73("""
~!Xy/${var_1692040284101_81}
^P$${var_1692040284101_81}t${var_1692040284101_81}g
""")) { // block id: 87
        var var_1692040284101_95 : Float64 = Float64(Float64(54.0));
        var_1692040284101_90 - var_1692040284101_95
    } else { // block id: 98
        var var_1692040284101_101 : UInt = UInt64(118);
        var_1692040284101_101 / ((var_1692040284101_101) | 1);
        Float64(-25.0) / Float64((Int32(var_1692040284101_90)) | 1)
    };
    if ((var_1692040284101_90|>func_1692040284101_111)[4]) { var_1692040284101_491 } else { var_1692040284101_491 } ;
    var var_1692040284101_1221 : Option<Bool> = (Option<Range<UInt64>>.None as Bool);
    var loopTimeVar_1692040284101_1227 : Int64 = 0;
    var var_1692040284101_1233 : Int8 = Int8(-38);
    var var_1692040284101_1238 : UInt = UInt64(109);
    var var_1692040284101_1250 : Class_1692040284101_1246<Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>> = Class_1692040284101_1246<Option<(Int64, Int64, Range<UInt32>, Int32, Bool)>>();
    var var_1692040284101_1302 : VArray<Unit, $2> = [(), ()];
    var loopTimeVar_1692040284101_1324 : Range<UInt64> = ((UInt64(UInt64(Int64(UInt64(UInt8(228)))))&127)..(UInt64(UInt64(UInt16(UInt8(231))))&127):(Int64(-75)|1));
    [if ((UInt16(227) is (Int32, UInt64, Float64, UInt64, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>))) { // block id: 1193
        var_1692040284101_40;
        UInt64(35) >> ((var_1692040284101_429) & 7);
        ()
    } else if (VArray<Bool, $9>(repeat: var_1692040284101_759)[3]) { // block id: 1212
        ()
    }, while (((var_1692040284101_1221 ?? true)) && loopTimeVar_1692040284101_1227 < 100 ) {
        loopTimeVar_1692040284101_1227++;

    }, (var_1692040284101_1063, var_1692040284101_1233, ((UInt64(UInt64(191))&127)..=(UInt64(var_1692040284101_1238)&127):(var_1692040284101_36|1)), r'K')[0], var_1692040284101_1063, (var_1692040284101_1250.var_1692040284101_788 |= var_1692040284101_1250.var_1692040284101_788), var_1692040284101_10.func_1692040284101_1259(func_1692040284101_73, namedParam_1692040284101_1263 : var_1692040284101_980), (if (true) { // block id: 1279
        var_1692040284101_1063;
        var_1692040284101_1063;
        var var_1692040284101_1285 : ?Unit = Option<Unit>.Some(());
        if (var_1692040284101_759) { var_1692040284101_1285 } else { var_1692040284101_1285 } 
    } else { // block id: 1289
        var_1692040284101_1063;
        ();
        Option<Unit>.Some(var_1692040284101_1063)
    } ?? (var_1692040284101_1233 &= var_1692040284101_1233)), if (var_1692040284101_311) { var_1692040284101_1302 } else { VArray<Unit, $2>(repeat: var_1692040284101_1063) } [0], var_1692040284101_1063, for (i in loopTimeVar_1692040284101_1324 where try { // block id: 1313
        var_1692040284101_1238--;
        UInt16(36);
        true
    } finally { // block id: 1318
        ();
        ();
        true
    }) {
        ((UInt8(UInt8(140))&127)..(UInt8(UInt8(123))&127):(Int64(-42)|1))
    }]
}

public func func_1692040284101_23(param_1692040284101_24 : UInt8) : Unit { // block id: 25
    var loopTimeVar_1692040284101_46 : Int = 0;
    do {
        loopTimeVar_1692040284101_46++;
        var_1692040284101_40;
        const var_1692040284101_43 : Unit = ();
        var_1692040284101_43
    } while (((func_1692040284101_29(false, var_1692040284101_36) is Bool)) && loopTimeVar_1692040284101_46 < 100 ) ;
    func_1692040284101_59(optionalParam_1692040284101_60 : UInt16(UInt8(253)), optionalParam_1692040284101_62 : var_1692040284101_1339[7])[0];
    ()
}



public func func_1692040284101_1345(param_1692040284101_1346 : Float32) : UInt8 { // block id: 1347
    var var_1692040284101_1352 : Bool = (([UInt64(Int8(-81)), UInt64(114), UInt64(Int16(-2)), UInt64(UInt32(42)), UInt64(10), UInt64(Int32(-30)), UInt64(UInt16(170)), UInt64(Int8(-27)), UInt64(UInt32(207)), UInt64(5)], (((Int16(Int16(-76))&127)..(Int16(Int16(-72))&127):(Int64(23)|1)), ((UInt32(UInt32(63))&127)..(UInt32(UInt32(3))&127):(Int64(90)|1)), Option<UInt16>.Some(UInt16(242))), ()) is UInt64);
    let var_1692040284101_1398 : ?Unit = (Int8(UInt8(Int8(77))) as Unit);
    if ((if (var_1692040284101_1352) { // block id: 1382
        if (var_1692040284101_759) { Class_1692040284101_6() } else { var_1692040284101_10 } ;
        ((Int16(Int16(111))&127)..(Int16(Int16(56))&127):(Int64(-19)|1));
        Option<Unit>.None
    } else if (var_1692040284101_311) { // block id: 1390
        ();
        if (var_1692040284101_1394) { var_1692040284101_1398 } else { Option<Unit>.Some(()) } 
    } else { // block id: 1405
        Option<Unit>.None
    } is (Int32, UInt64, Float64, UInt64, Option<(UInt16, String, Range<UInt16>, UInt8, Range<Int16>)>))) { try { // block id: 1410
        var_1692040284101_1412
    } finally { // block id: 1453
        var_1692040284101_1063;
        ();
        var_1692040284101_1412
    }[2] } else { (Option<(Array<Unit>, Range<Int8>)>.None ?? ([(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-118))&127)..(Int8(var_1692040284101_1471)&127):(Int64(33)|1))))[0] } ;
    let var_1692040284101_1508 : (Int8, (UInt16, String, Range<UInt16>, UInt8, Range<Int16>), Range<UInt16>) = (Int8(Int8(UInt8(UInt8(172)))), (UInt16(Int16(107)), "^(S5I q>_D", ((UInt16(UInt16(191))&127)..(UInt16(UInt16(134))&127):(Int64(-44)|1)), UInt8(242), ((Int16(Int16(115))&127)..(Int16(Int16(70))&127):(Int64(-115)|1))), ((UInt16(UInt16(93))&127)..=(UInt16(UInt16(Int16(31)))&127):(Int64(UInt8(251))|1)));
    UInt8((Option<(Int8, (UInt16, String, Range<UInt16>, UInt8, Range<Int16>), Range<UInt16>)>.Some((Int8(-121), (UInt16(165), var_1692040284101_423, var_1692040284101_939, var_1692040284101_495, var_1692040284101_1492), var_1692040284101_939)) ?? var_1692040284101_1508)[0])
}


main(): Int64 {
    try {
        var_1692040284101_10.func_1692040284101_1259();
        Int64(Int8(82))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1692040284101_36*var_1692040284101_36), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_277*var_1692040284101_277), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_429*var_1692040284101_429), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_495*var_1692040284101_495), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_815*var_1692040284101_815), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_866*var_1692040284101_866), 64)
        crccheck.updateBuffer(UInt64(var_1692040284101_1471*var_1692040284101_1471), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
