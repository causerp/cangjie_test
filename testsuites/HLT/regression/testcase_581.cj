/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

const var_1709495930115_26 : Int = -99
public var var_1709495930115_90 : Float64 = Float64(94.0)
public const var_1709495930115_96 : UInt64 = 125
var var_1709495930115_106 : Int = Int64(36)
public let var_1709495930115_118 : (Float32, UInt16) = (Float32(-56.0), UInt16(48))
const var_1709495930115_134 : Int64 = -91
public var var_1709495930115_178 : Int32 = Int32(UInt32(143))
public const var_1709495930115_225 : UInt32 = 246
const var_1709495930115_268 : Unit = ()
public const var_1709495930115_274 : Float64 = -111.0
public const var_1709495930115_287 : Byte = 117
public const var_1709495930115_370 : Int32 = -47
public var var_1709495930115_379 : Bool = (UInt32(193) is UInt64)
const var_1709495930115_387 : Int8 = 90
public var var_1709495930115_434 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = (UInt16(UInt16(43)), Int64(105), Int32(-1), (UInt32(120), Float64(-24.0), (Float32(Float32(48.0)), UInt16(83)), UInt64(Int16(-90))), UInt32(Int16(UInt8(Int8(-76)))), (Float32(-64.0), UInt16(Int8(UInt8(242)))))
public const var_1709495930115_484 : Unit = ()
public var var_1709495930115_497 : Float32 = Float32(Float32(Float32(112.0)))
public let var_1709495930115_549 : Option<(Float32, UInt16)> = Option<(Float32, UInt16)>.None
public var var_1709495930115_564 : Interface_1709495930115_35 = Class_1709495930115_31()
public var var_1709495930115_584 : Struct_1709495930115_580 = Struct_1709495930115_580()
public var var_1709495930115_608 : Struct_1709495930115_604 = Struct_1709495930115_604()
public let var_1709495930115_641 : Interface_1709495930115_38 = Class_1709495930115_31()
public var var_1709495930115_750 : Option<Unit> = Option<Unit>.None
public let var_1709495930115_763 : Range<UInt32> = ((UInt32(UInt32(252))&127)..=(UInt32(UInt32(Int16(-98)))&127):(Int64(-96)|1))
public let var_1709495930115_811 : ?Float32 = (((Int16(Int16(-37))&127)..=(Int16(Int16(31))&127):(Int64(2)|1)) as Float32)
let var_1709495930115_854 : (UInt32, Float64, (Float32, UInt16), UInt64) = (UInt32(UInt16(UInt8(164))), Float64(Float64(Float32(91.0))), (Float32(56.0), UInt16(Int8(-36))), UInt64(173))
public let var_1709495930115_931 : Range<UInt16> = ((UInt16(UInt16(Int8(UInt8(UInt8(145)))))&127)..=(UInt16(UInt16(Int8(Int8(Int8(-8)))))&127):(Int64(UInt8(102))|1))
let var_1709495930115_975 : UInt32 = UInt32(96)
public let var_1709495930115_985 : Interface_1709495930115_36 = Class_1709495930115_31()
public const var_1709495930115_989 : Int16 = 67
public var var_1709495930115_1024 : UInt16 = UInt16(Int16(-6))
var var_1709495930115_1030 : Interface_1709495930115_38 = Class_1709495930115_31()
public const var_1709495930115_1043 : Unit = ()
var var_1709495930115_1112 : UInt8 = UInt8(96)
public let var_1709495930115_1122 : (Float32, UInt16) = (Float32(-12.0), UInt16(UInt16(UInt8(249))))
public var var_1709495930115_1188 : UInt16 = UInt16(209)
public var var_1709495930115_1192 : Array<Option<UInt32>> = [(((UInt8(UInt8(130))&127)..=(UInt8(UInt8(118))&127):(Int64(113)|1)) as UInt32), (Class_1709495930115_31() as UInt32), ([UInt64(102), UInt64(80), UInt64(234), UInt64(250), UInt64(39), UInt64(92), UInt64(62), UInt64(29), UInt64(109), UInt64(207)] as UInt32), Option<UInt32>.None, ([(), (), (), (), (), (), (), (), (), ()] as UInt32), (Int16(-106) as UInt32), (((UInt16(UInt16(UInt8(137)))&127)..=(UInt16(UInt16(UInt16(75)))&127):(Int64(59)|1)) as UInt32), Option<UInt32>.None, (Class_1709495930115_31() as UInt32), Option<UInt32>.None]
public let var_1709495930115_1317 : (Range<Int32>, Interface_1709495930115_35, Interface_1709495930115_37, VArray<UInt16, $7>, Int32, Array<UInt64>, Float32, Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>) = (((Int32(Int32(-81))&127)..=(Int32(Int32(-13))&127):(Int64(-5)|1)), Class_1709495930115_31(), Class_1709495930115_31(), VArray<UInt16, $7>(repeat: UInt16(Int8(-1))), Int32(Int8(Int8(Int8(-109)))), [UInt64(UInt64(217)), UInt64(Int32(Int32(-83))), UInt64(51), UInt64(204), UInt64(191), UInt64(UInt64(Int64(-53))), UInt64(UInt32(UInt8(246))), UInt64(Int8(UInt8(38))), UInt64(Int64(Int16(61))), UInt64(UInt8(219))], Float32(-12.0), (Float64(Float32(Float32(34.0))) as (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))))
public let var_1709495930115_1385 : Option<Int32> = Option<Int32>.None
public var var_1709495930115_1446 : Array<Option<Bool>> = [Option<Bool>.None, ((r'd', (UInt32(88), Float64(-21.0), (Float32(-15.0), UInt16(89)), UInt64(251)), UInt16(93), ((((Int32(Int32(123))&127)..(Int32(Int32(-78))&127):(Int64(-90)|1)), Class_1709495930115_31(), Class_1709495930115_31(), VArray<UInt16, $7>({ i => UInt16(201)}), Int32(32), [UInt64(181), UInt64(93), UInt64(145), UInt64(107), UInt64(243), UInt64(16), UInt64(46), UInt64(185), UInt64(51), UInt64(178)], Float32(-107.0), Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None) is (Int32, Option<(Float32, UInt16)>, Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, Unit)), (UInt16(184), Int64(-80), Int32(-38), (UInt32(235), Float64(48.0), (Float32(100.0), UInt16(107)), UInt64(98)), UInt32(14), (Float32(100.0), UInt16(26))), [(), (), (), (), (), (), (), (), (), ()], Int32(UInt8(61))) as Bool), ((UInt16(234), Int64(Int8(-63)), Int32(UInt16(219)), (UInt32(60), Float64(37.0), (Float32(-88.0), UInt16(207)), UInt64(64)), UInt32(Int32(1)), (Float32(-89.0), UInt16(52))) as Bool), ((((Int16(Int16(96))&127)..(Int16(Int16(-12))&127):(Int64(125)|1)) is (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) as Bool), ((Class_1709495930115_31() as Unit) as Bool), Option<Bool>.None, (((Int16(Int16(UInt16(198)))&127)..=(Int16(Int16(-27))&127):(Int64(-77)|1)) as Bool), Option<Bool>.None, Option<Bool>.None, Option<Bool>.None]
let var_1709495930115_1565 : Range<UInt8> = ((UInt8(UInt8(UInt8(215)))&127)..=(UInt8(UInt8(Int8(UInt8(Int8(104)))))&127):(Int64(72)|1))
public let var_1709495930115_1597 : Int64 = Int64(-17)
public let var_1709495930115_1674 : Unit = ()
public var var_1709495930115_1684 : Unit = ()
public var var_1709495930115_1751 : (Int32, Option<(Float32, UInt16)>, Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, Unit) = (Int32(Int16(-84)), Option<(Float32, UInt16)>.None, (UInt16(UInt8(254)) as (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))), ())
let var_1709495930115_1766 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
public interface Interface_1709495930115_39 {

}

sealed public interface Interface_1709495930115_40 {

}

public interface Interface_1709495930115_38 <: Interface_1709495930115_39 & Interface_1709495930115_40 {

}

sealed public interface Interface_1709495930115_37 <: Interface_1709495930115_38 & Interface_1709495930115_39 {
    func func_1709495930115_45(namedParam_1709495930115_46 ! : Unit, namedParam_1709495930115_47 ! : Unit) : (UInt32, Float64, (Float32, UInt16), UInt64) { // block id: 48
        let var_1709495930115_58 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(-19)), Int64(0), Int32(-38), (UInt32(195), Float64(-123.0), (Float32(-3.0), UInt16(160)), UInt64(34)), UInt32(Int16(112)), (Float32(-49.0), UInt16(Int8(24)))));
        var var_1709495930115_142 : UInt32 = UInt32(123);
        func func_1709495930115_167(param_1709495930115_168 : UInt32, param_1709495930115_169 : UInt64, param_1709495930115_170 : Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, param_1709495930115_171 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 172
            Int32((Option<UInt8>.None ?? UInt8(228)))|>func_1709495930115_174
        }
;
        (match (var_1709495930115_58) {
            case caseVar_1709495930115_80 => 
                var var_1709495930115_84 : UInt32 = UInt32(Int16(Int8(UInt8(2))));
                (var_1709495930115_84, var_1709495930115_90, (Float32(121.0), UInt16(14)), var_1709495930115_96);
                var_1709495930115_58
            
            case caseVar_1709495930115_101 : UInt32 => 
                ();
                var_1709495930115_106 <<= ((Int64(126)) & 7);
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case caseVar_1709495930115_112 : UInt64 => 
                UInt32(131) & UInt32(173);
                var_1709495930115_118;
                const var_1709495930115_124 : Bool = false;
                var var_1709495930115_129 : UInt16 = UInt16(UInt16(UInt16(168)));
                var var_1709495930115_137 : Int32 = Int32(UInt32(73));
                if (var_1709495930115_124) { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((var_1709495930115_129, var_1709495930115_134, var_1709495930115_137, (var_1709495930115_142, var_1709495930115_90, (Float32(36.0), UInt16(52)), UInt64(187)), UInt32(171), var_1709495930115_118)) } else { var_1709495930115_58 } 
            
            case caseVar_1709495930115_154 => 
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case _ => 
                const var_1709495930115_162 : Bool = true;
                if (var_1709495930115_162) { var_1709495930115_58 } else { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None } 
            
        } ?? func_1709495930115_167(UInt32(117), UInt64(175), var_1709495930115_58, (UInt16(215), Int64(-73), var_1709495930115_370, (UInt32(106), Float64(10.0), var_1709495930115_118, var_1709495930115_96), var_1709495930115_142, var_1709495930115_118)))[3]
    }

}

public interface Interface_1709495930115_36 <: Interface_1709495930115_37 & Interface_1709495930115_39 {
    func func_1709495930115_45(namedParam_1709495930115_46 ! : Unit, namedParam_1709495930115_47 ! : Unit) : (UInt32, Float64, (Float32, UInt16), UInt64) { // block id: 48
        let var_1709495930115_58 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(-19)), Int64(0), Int32(-38), (UInt32(195), Float64(-123.0), (Float32(-3.0), UInt16(160)), UInt64(34)), UInt32(Int16(112)), (Float32(-49.0), UInt16(Int8(24)))));
        var var_1709495930115_142 : UInt32 = UInt32(123);
        func func_1709495930115_167(param_1709495930115_168 : UInt32, param_1709495930115_169 : UInt64, param_1709495930115_170 : Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, param_1709495930115_171 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 172
            Int32((Option<UInt8>.None ?? UInt8(228)))|>func_1709495930115_174
        }
;
        (match (var_1709495930115_58) {
            case caseVar_1709495930115_80 => 
                var var_1709495930115_84 : UInt32 = UInt32(Int16(Int8(UInt8(2))));
                (var_1709495930115_84, var_1709495930115_90, (Float32(121.0), UInt16(14)), var_1709495930115_96);
                var_1709495930115_58
            
            case caseVar_1709495930115_101 : UInt32 => 
                ();
                var_1709495930115_106 <<= ((Int64(126)) & 7);
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case caseVar_1709495930115_112 : UInt64 => 
                UInt32(131) & UInt32(173);
                var_1709495930115_118;
                const var_1709495930115_124 : Bool = false;
                var var_1709495930115_129 : UInt16 = UInt16(UInt16(UInt16(168)));
                var var_1709495930115_137 : Int32 = Int32(UInt32(73));
                if (var_1709495930115_124) { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((var_1709495930115_129, var_1709495930115_134, var_1709495930115_137, (var_1709495930115_142, var_1709495930115_90, (Float32(36.0), UInt16(52)), UInt64(187)), UInt32(171), var_1709495930115_118)) } else { var_1709495930115_58 } 
            
            case caseVar_1709495930115_154 => 
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case _ => 
                const var_1709495930115_162 : Bool = true;
                if (var_1709495930115_162) { var_1709495930115_58 } else { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None } 
            
        } ?? func_1709495930115_167(UInt32(117), UInt64(175), var_1709495930115_58, (UInt16(215), Int64(-73), var_1709495930115_370, (UInt32(106), Float64(10.0), var_1709495930115_118, var_1709495930115_96), var_1709495930115_142, var_1709495930115_118)))[3]
    }

}

public interface Interface_1709495930115_35 <: Interface_1709495930115_36 & Interface_1709495930115_38 {
    func func_1709495930115_567(namedParam_1709495930115_568 ! : (Int8, Float32, Int32) -> UInt64, namedParam_1709495930115_573 ! : Range<Int16>, namedParam_1709495930115_574 ! : (Int32, Float64) -> Int64) : Range<Int8> { // block id: 578
        let var_1709495930115_1235 : () -> Unit = func_1709495930115_252;
        var_1709495930115_584.func_1709495930115_587(var_1709495930115_1235, namedParam_1709495930115_590 : var_1709495930115_1192)
    }
;
    func func_1709495930115_45(namedParam_1709495930115_46 ! : Unit, namedParam_1709495930115_47 ! : Unit) : (UInt32, Float64, (Float32, UInt16), UInt64) { // block id: 48
        let var_1709495930115_58 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(-19)), Int64(0), Int32(-38), (UInt32(195), Float64(-123.0), (Float32(-3.0), UInt16(160)), UInt64(34)), UInt32(Int16(112)), (Float32(-49.0), UInt16(Int8(24)))));
        var var_1709495930115_142 : UInt32 = UInt32(123);
        func func_1709495930115_167(param_1709495930115_168 : UInt32, param_1709495930115_169 : UInt64, param_1709495930115_170 : Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, param_1709495930115_171 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 172
            Int32((Option<UInt8>.None ?? UInt8(228)))|>func_1709495930115_174
        }
;
        (match (var_1709495930115_58) {
            case caseVar_1709495930115_80 => 
                var var_1709495930115_84 : UInt32 = UInt32(Int16(Int8(UInt8(2))));
                (var_1709495930115_84, var_1709495930115_90, (Float32(121.0), UInt16(14)), var_1709495930115_96);
                var_1709495930115_58
            
            case caseVar_1709495930115_101 : UInt32 => 
                ();
                var_1709495930115_106 <<= ((Int64(126)) & 7);
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case caseVar_1709495930115_112 : UInt64 => 
                UInt32(131) & UInt32(173);
                var_1709495930115_118;
                const var_1709495930115_124 : Bool = false;
                var var_1709495930115_129 : UInt16 = UInt16(UInt16(UInt16(168)));
                var var_1709495930115_137 : Int32 = Int32(UInt32(73));
                if (var_1709495930115_124) { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((var_1709495930115_129, var_1709495930115_134, var_1709495930115_137, (var_1709495930115_142, var_1709495930115_90, (Float32(36.0), UInt16(52)), UInt64(187)), UInt32(171), var_1709495930115_118)) } else { var_1709495930115_58 } 
            
            case caseVar_1709495930115_154 => 
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case _ => 
                const var_1709495930115_162 : Bool = true;
                if (var_1709495930115_162) { var_1709495930115_58 } else { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None } 
            
        } ?? func_1709495930115_167(UInt32(117), UInt64(175), var_1709495930115_58, (UInt16(215), Int64(-73), var_1709495930115_370, (UInt32(106), Float64(10.0), var_1709495930115_118, var_1709495930115_96), var_1709495930115_142, var_1709495930115_118)))[3]
    }

}

public interface Interface_1709495930115_34 <: Interface_1709495930115_35 {
    func func_1709495930115_45(namedParam_1709495930115_46 ! : Unit, namedParam_1709495930115_47 ! : Unit) : (UInt32, Float64, (Float32, UInt16), UInt64) { // block id: 48
        let var_1709495930115_58 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(-19)), Int64(0), Int32(-38), (UInt32(195), Float64(-123.0), (Float32(-3.0), UInt16(160)), UInt64(34)), UInt32(Int16(112)), (Float32(-49.0), UInt16(Int8(24)))));
        var var_1709495930115_142 : UInt32 = UInt32(123);
        func func_1709495930115_167(param_1709495930115_168 : UInt32, param_1709495930115_169 : UInt64, param_1709495930115_170 : Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, param_1709495930115_171 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 172
            Int32((Option<UInt8>.None ?? UInt8(228)))|>func_1709495930115_174
        }
;
        (match (var_1709495930115_58) {
            case caseVar_1709495930115_80 => 
                var var_1709495930115_84 : UInt32 = UInt32(Int16(Int8(UInt8(2))));
                (var_1709495930115_84, var_1709495930115_90, (Float32(121.0), UInt16(14)), var_1709495930115_96);
                var_1709495930115_58
            
            case caseVar_1709495930115_101 : UInt32 => 
                ();
                var_1709495930115_106 <<= ((Int64(126)) & 7);
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case caseVar_1709495930115_112 : UInt64 => 
                UInt32(131) & UInt32(173);
                var_1709495930115_118;
                const var_1709495930115_124 : Bool = false;
                var var_1709495930115_129 : UInt16 = UInt16(UInt16(UInt16(168)));
                var var_1709495930115_137 : Int32 = Int32(UInt32(73));
                if (var_1709495930115_124) { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((var_1709495930115_129, var_1709495930115_134, var_1709495930115_137, (var_1709495930115_142, var_1709495930115_90, (Float32(36.0), UInt16(52)), UInt64(187)), UInt32(171), var_1709495930115_118)) } else { var_1709495930115_58 } 
            
            case caseVar_1709495930115_154 => 
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case _ => 
                const var_1709495930115_162 : Bool = true;
                if (var_1709495930115_162) { var_1709495930115_58 } else { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None } 
            
        } ?? func_1709495930115_167(UInt32(117), UInt64(175), var_1709495930115_58, (UInt16(215), Int64(-73), var_1709495930115_370, (UInt32(106), Float64(10.0), var_1709495930115_118, var_1709495930115_96), var_1709495930115_142, var_1709495930115_118)))[3]
    }
;
    func func_1709495930115_567(namedParam_1709495930115_568 ! : (Int8, Float32, Int32) -> UInt64, namedParam_1709495930115_573 ! : Range<Int16>, namedParam_1709495930115_574 ! : (Int32, Float64) -> Int64) : Range<Int8> { // block id: 578
        let var_1709495930115_1235 : () -> Unit = func_1709495930115_252;
        var_1709495930115_584.func_1709495930115_587(var_1709495930115_1235, namedParam_1709495930115_590 : var_1709495930115_1192)
    }

}

public open class Class_1709495930115_31 <: Interface_1709495930115_34 & Resource {
    public init() { // block id: 33

    }
;
    public init(param_1709495930115_645 : Option<UInt32>, param_1709495930115_646 : Option<(Float32, UInt16)>, namedParam_1709495930115_647 ! : () -> (Float32, UInt16), namedParam_1709495930115_649 ! : (Float64, UInt8, Rune, Int8) -> Float32) { // block id: 655
        let var_1709495930115_662 : (Range<UInt32>, Range<UInt64>, Int8, Option<UInt8>, Unit) = (((UInt32(UInt32(UInt32(UInt8(184))))&127)..(UInt32(UInt32(185))&127):(Int64(-28)|1)), ((UInt64(UInt64(238))&127)..(UInt64(UInt64(Int8(UInt8(53))))&127):(Int64(Int32(28))|1)), Int8(-68), Option<UInt8>.Some(UInt8(Int8(-55))), ());
        let var_1709495930115_685 : Array<Option<UInt32>> = [((UInt16(Int16(66)), Int64(Int16(107)), Int32(-61), (UInt32(19), Float64(-108.0), (Float32(33.0), UInt16(28)), UInt64(67)), UInt32(63), (Float32(118.0), UInt16(128))) as UInt32), (Int8(UInt8(81)) as UInt32), Option<UInt32>.None, (Int32(98) as UInt32), (Option<UInt8>.None as UInt32), (Int32(-17) as UInt32), Option<UInt32>.Some(UInt32(Int32(110))), Option<UInt32>.Some(UInt32(84)), Option<UInt32>.None, (((Int8(Int8(Int8(-60)))&127)..=(Int8(Int8(UInt8(202)))&127):(Int64(-120)|1)) as UInt32)];
        var loopTimeVar_1709495930115_758 : Int64 = 0;
        const var_1709495930115_807 : Int16 = 51;
        let var_1709495930115_826 : Unit = ();
        var var_1709495930115_846 : UInt32 = UInt32(80);
        [var_1709495930115_662[4], match (var_1709495930115_685) {
            case _ : (UInt32, Float64, (Float32, UInt16), UInt64) => 
                ();
                var_1709495930115_268;
                var_1709495930115_484
            
            case _ : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) => 
                Struct_1709495930115_604();
                var_1709495930115_484
            
            case _ => 
                ();
                ()
            
        }, (var_1709495930115_750 ?? ()), do {
            loopTimeVar_1709495930115_758++;
            var_1709495930115_268
        } while ((var_1709495930115_379) && loopTimeVar_1709495930115_758 < 100 ) , try (resource = Class_1709495930115_31()) { // block id: 760
            ();
            var_1709495930115_763;
            var_1709495930115_484
        } catch (e: Exception) { // block id: 770
            var var_1709495930115_773 : Byte = UInt8(Int8(Int8(Int8(53))));
            var_1709495930115_773 &= var_1709495930115_287;
            var_1709495930115_387;
            ()
        } finally { // block id: 781
            Int16(1);
            UInt32(250);
            var_1709495930115_484
        }, try (resource = Class_1709495930115_31()) { // block id: 786
            let var_1709495930115_789 : Int16 = Int16(96);
            var_1709495930115_789 | var_1709495930115_789;
            var_1709495930115_379 ||= var_1709495930115_379;
            var_1709495930115_268
        } catch (_) { // block id: 796
            ()
        } finally { // block id: 798
            ()
        }, var_1709495930115_268, if (var_1709495930115_379) { // block id: 803
            ((Int16(Int16(91))&127)..(Int16(var_1709495930115_807)&127):(var_1709495930115_134|1));
            var_1709495930115_811;
            var_1709495930115_484
        } else if (true) { // block id: 816
            ();
            var_1709495930115_434;
            var_1709495930115_268
        }, match (Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None) {
            case _ => 
                var_1709495930115_826;
                var_1709495930115_826
            
            case _ => 
                var_1709495930115_268
            
        }, match (((Int64(var_1709495930115_106)&127)..=(Int64(var_1709495930115_106)&127):(var_1709495930115_106|1))) {
            case _ : Rune => 
                Int32(5) - Int32(54);
                var_1709495930115_846 *= var_1709495930115_846
            
            case caseVar_1709495930115_851 : Struct_1709495930115_604 => 
                var_1709495930115_854;
                var var_1709495930115_869 : UInt8 = UInt8(161);
                var_1709495930115_869 = UInt8(246)
            
            case _ => 
                ();
                var_1709495930115_268;
                var_1709495930115_268
            
        }][5];
        var loopTimeVar_1709495930115_947 : Array<UInt64> = [UInt64(Int8(60)), UInt64(179), UInt64(Int8(-70)), UInt64(UInt8(49)), UInt64(83), UInt64(96), UInt64(Int16(45)), UInt64(Int16(58)), UInt64(91), UInt64(UInt64(66))];
        for (i in loopTimeVar_1709495930115_947 where if (try { // block id: 882
            var_1709495930115_379
        } finally { // block id: 884
            var_1709495930115_549;
            var_1709495930115_178 |= Int32(85);
            Int64(40) != Int64(-64)
        }) { // block id: 892
            ();
            ();
            false
        } else if (match ("O}fE/L#v$Y") {
            case """
M>9C!
9La{@5
""" => 
                var_1709495930115_268;
                var_1709495930115_826;
                false
            
            case """
9aa{@)
!SRnM
""" | ###"-.KO*S-A+r'"### | "u=dKteO.3(" | "#iM_puHoa'" => 
                var_1709495930115_497 > Float32(14.0)
            
            case _ : Option<(Float32, UInt16)> => 
                ();
                const var_1709495930115_915 : String = "f^7v$LA) j";
                var_1709495930115_915;
                var_1709495930115_379 || var_1709495930115_379
            
            case _ => 
                var_1709495930115_379
            
        }) { // block id: 924
            var_1709495930115_379
        } else { // block id: 926
            var_1709495930115_434;
            if (false) { var_1709495930115_931 } else { var_1709495930115_931 } ;
            var_1709495930115_379
        }) {
            var_1709495930115_608
        }
    }
;
    public open override func func_1709495930115_45(namedParam_1709495930115_46 ! : Unit, namedParam_1709495930115_47 ! : Unit) : (UInt32, Float64, (Float32, UInt16), UInt64) { // block id: 48
        let var_1709495930115_58 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(-19)), Int64(0), Int32(-38), (UInt32(195), Float64(-123.0), (Float32(-3.0), UInt16(160)), UInt64(34)), UInt32(Int16(112)), (Float32(-49.0), UInt16(Int8(24)))));
        var var_1709495930115_142 : UInt32 = UInt32(123);
        func func_1709495930115_167(param_1709495930115_168 : UInt32, param_1709495930115_169 : UInt64, param_1709495930115_170 : Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>, param_1709495930115_171 : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 172
            Int32((Option<UInt8>.None ?? UInt8(228)))|>func_1709495930115_174
        }
;
        (match (var_1709495930115_58) {
            case caseVar_1709495930115_80 => 
                var var_1709495930115_84 : UInt32 = UInt32(Int16(Int8(UInt8(2))));
                (var_1709495930115_84, var_1709495930115_90, (Float32(121.0), UInt16(14)), var_1709495930115_96);
                var_1709495930115_58
            
            case caseVar_1709495930115_101 : UInt32 => 
                ();
                var_1709495930115_106 <<= ((Int64(126)) & 7);
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case caseVar_1709495930115_112 : UInt64 => 
                UInt32(131) & UInt32(173);
                var_1709495930115_118;
                const var_1709495930115_124 : Bool = false;
                var var_1709495930115_129 : UInt16 = UInt16(UInt16(UInt16(168)));
                var var_1709495930115_137 : Int32 = Int32(UInt32(73));
                if (var_1709495930115_124) { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((var_1709495930115_129, var_1709495930115_134, var_1709495930115_137, (var_1709495930115_142, var_1709495930115_90, (Float32(36.0), UInt16(52)), UInt64(187)), UInt32(171), var_1709495930115_118)) } else { var_1709495930115_58 } 
            
            case caseVar_1709495930115_154 => 
                Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None
            
            case _ => 
                const var_1709495930115_162 : Bool = true;
                if (var_1709495930115_162) { var_1709495930115_58 } else { Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None } 
            
        } ?? func_1709495930115_167(UInt32(117), UInt64(175), var_1709495930115_58, (UInt16(215), Int64(-73), var_1709495930115_370, (UInt32(106), Float64(10.0), var_1709495930115_118, var_1709495930115_96), var_1709495930115_142, var_1709495930115_118)))[3]
    }
;
    public open override func func_1709495930115_567(namedParam_1709495930115_568 ! : (Int8, Float32, Int32) -> UInt64, namedParam_1709495930115_573 ! : Range<Int16>, namedParam_1709495930115_574 ! : (Int32, Float64) -> Int64) : Range<Int8> { // block id: 578
        let var_1709495930115_1235 : () -> Unit = func_1709495930115_252;
        var_1709495930115_584.func_1709495930115_587(var_1709495930115_1235, namedParam_1709495930115_590 : var_1709495930115_1192)
    }

    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}


const func func_1709495930115_8(namedParam_1709495930115_213 ! : Int64, namedParam_1709495930115_214 ! : UInt32) : String { // block id: 215
    51;
    const func func_1709495930115_219() : UInt32 { // block id: 220
        -61.0;
        ();
        228
    }
;
    func_1709495930115_219() / ((var_1709495930115_225) | 1);
    "3Z\\+P a9k-"
}

public const func func_1709495930115_252() : Unit { // block id: 253
    132;
    ###"w']D&Bp*l@"###;
    ()
}

const func func_1709495930115_263(param_1709495930115_264 : Float64) : Rune { // block id: 265
    func_1709495930115_252();
    var_1709495930115_268;
    const var_1709495930115_271 : Rune = r'c';
    var_1709495930115_271
}

public const func func_1709495930115_258(param_1709495930115_259 : Int8, namedParam_1709495930115_260 ! : UInt8) : Rune { // block id: 261
    func_1709495930115_263(var_1709495930115_274)
}

public const func func_1709495930115_246(param_1709495930115_247 : Int32, optionalParam_1709495930115_248 ! : Float64 = -59.0) : Int64 { // block id: 250
    func_1709495930115_252();
    const var_1709495930115_278 : UInt8 = 178;
    func_1709495930115_258(-42, namedParam_1709495930115_260 : var_1709495930115_278);
    var_1709495930115_26
}

public const func func_1709495930115_236() : Int64 { // block id: 237
    const var_1709495930115_239 : Int8 = 62;
    var_1709495930115_239;
    ();
    (-44 | func_1709495930115_246(62, optionalParam_1709495930115_248 : 121.0)) | (var_1709495930115_26 / ((82) | 1))
}

const func func_1709495930115_229(namedParam_1709495930115_230 ! : UInt8, optionalParam_1709495930115_231 ! : Int16 = 63) : Int64 { // block id: 233
    ();
    func_1709495930115_236()
}

public const func func_1709495930115_208<T0, T1, T2>() : Unit { // block id: 209
    56;
    func_1709495930115_8(namedParam_1709495930115_213 : func_1709495930115_229(namedParam_1709495930115_230 : var_1709495930115_287), namedParam_1709495930115_214 : var_1709495930115_225);
    func_1709495930115_252()
}

public const func func_1709495930115_304() : UInt64 { // block id: 305
    104
}

public const func func_1709495930115_323(namedParam_1709495930115_324 ! : Rune, optionalParam_1709495930115_325 ! : Int64 = -8, namedParam_1709495930115_327 ! : Int64) : Float32 { // block id: 328
    ();
    var_1709495930115_96 + ((173 >> ((var_1709495930115_96) & 7)) | 152);
    -82.0 - 61.0
}

public const func func_1709495930115_351(optionalParam_1709495930115_352 ! : Float64 = 40.0, optionalParam_1709495930115_354 ! : Unit = (), namedParam_1709495930115_356 ! : UInt16) : UInt8 { // block id: 357
    104
}

public const func func_1709495930115_343(namedParam_1709495930115_344 ! : UInt32) : UInt8 { // block id: 345
    16 & 82;
    func_1709495930115_351(optionalParam_1709495930115_352 : -123.0, optionalParam_1709495930115_354 : (), namedParam_1709495930115_356 : 21) | var_1709495930115_287
}

public const func func_1709495930115_309(optionalParam_1709495930115_310 ! : Float64 = -40.0, optionalParam_1709495930115_312 ! : UInt8 = 12, optionalParam_1709495930115_314 ! : Rune = r'1', optionalParam_1709495930115_316 ! : Int8 = -110) : Float32 { // block id: 318
    const var_1709495930115_320 : Unit = ();
    var_1709495930115_320;
    func_1709495930115_323(namedParam_1709495930115_324 : func_1709495930115_258(123, namedParam_1709495930115_260 : func_1709495930115_343(namedParam_1709495930115_344 : var_1709495930115_225)), namedParam_1709495930115_327 : 124)
}

public const func func_1709495930115_190(optionalParam_1709495930115_191 ! : Int8 = 122, optionalParam_1709495930115_193 ! : Float32 = 102.0, optionalParam_1709495930115_195 ! : Int32 = 67) : UInt64 { // block id: 197
    const func func_1709495930115_292(param_1709495930115_293 : Float32, param_1709495930115_294 : Int16, namedParam_1709495930115_295 ! : Int32, namedParam_1709495930115_296 ! : Rune) : UInt64 { // block id: 297
        func_1709495930115_252();
        false;
        31 & (func_1709495930115_304() | 205)
    }
;
    const func func_1709495930115_199(namedParam_1709495930115_200 ! : Int64, optionalParam_1709495930115_201 ! : Rune = r'7') : UInt64 { // block id: 203
        const var_1709495930115_205 : String = ###"kUn_ |7t8G"###;
        var_1709495930115_205;
        func_1709495930115_208<UInt8, Int64, Unit>();
        func_1709495930115_292(func_1709495930115_309(), -123, namedParam_1709495930115_295 : 65, namedParam_1709495930115_296 : r'x')
    }
;
    func_1709495930115_199(namedParam_1709495930115_200 : var_1709495930115_134)
}

public const func func_1709495930115_185(param_1709495930115_186 : Bool) : Unit { // block id: 187
    func_1709495930115_190(optionalParam_1709495930115_195 : var_1709495930115_370) >> ((var_1709495930115_96) & 7);
    -33;
    const var_1709495930115_375 : Unit = ();
    var_1709495930115_375
}

func func_1709495930115_174(param_1709495930115_175 : Int32) : (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) { // block id: 176
    var_1709495930115_178;
    Float32(-106.0);
    var var_1709495930115_395 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.Some((UInt16(Int8(UInt8(24))), Int64(Int8(Int8(32))), Int32(UInt16(195)), (UInt32(145), Float64(Float32(5.0)), (Float32(12.0), UInt16(118)), UInt64(156)), UInt32(UInt32(UInt16(101))), (Float32(20.0), UInt16(Int8(74)))));
    try { // block id: 183
        var_1709495930115_379|>func_1709495930115_185;
        var loopTimeVar_1709495930115_392 : Int64 = 0;
        while ((false) && loopTimeVar_1709495930115_392 < 100 ) {
            loopTimeVar_1709495930115_392++;
            var_1709495930115_387 % ((Int8(-124)) | 1);
            ()
        };
        (var_1709495930115_395 ?? (UInt16(74), Int64(-85), Int32(16), (var_1709495930115_225, var_1709495930115_274, var_1709495930115_118, var_1709495930115_96), UInt32(26), var_1709495930115_118))
    } finally { // block id: 432
        var_1709495930115_434
    }
}





public func func_1709495930115_19() : (Float32, UInt16) { // block id: 20
    func func_1709495930115_22(param_1709495930115_23 : UInt32) : (Float32, UInt16) { // block id: 24
        var_1709495930115_26;
        let var_1709495930115_42 : Class_1709495930115_31 = Class_1709495930115_31();
        var_1709495930115_42.func_1709495930115_45(namedParam_1709495930115_46 : (), namedParam_1709495930115_47 : var_1709495930115_484)[3];
        const var_1709495930115_504 : Int8 = 71;
        (Float32((Option<Float32>.Some(Float32(-49.0)) ?? var_1709495930115_497)), UInt16(Int8(var_1709495930115_504)))
    }
;
    var var_1709495930115_524 : ?UInt32 = Option<UInt32>.Some(UInt32(Int32(Int16(-27))));
    func_1709495930115_22(([var_1709495930115_524, Option<UInt32>.Some(var_1709495930115_225), var_1709495930115_524, var_1709495930115_524, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.None, Option<UInt32>.Some(UInt32(85)), var_1709495930115_524, Option<UInt32>.Some(var_1709495930115_225)][2] ?? UInt32(78)));
    (var_1709495930115_549 ?? var_1709495930115_118)
}


public struct Struct_1709495930115_580 {
    public init() { // block id: 582

    }
;
    mut prop var_1709495930115_1004 : UInt32 { // block id: 1005
        get() { // block id: 1007
            UInt32(17);
            var_1709495930115_1782
        }

        set(Value) { // block id: 1011
            ();
            ();
            var_1709495930115_1782 = Value
        }

    };
    mut prop var_1709495930115_1139 : Array<Unit> { // block id: 1140
        get() { // block id: 1142
            [(), (), (), (), (), (), (), (), (), ()]
        }

        set(Value) { // block id: 1156

        }

    };
    public let var_1709495930115_1229 : Range<Int8> = ((Int8(Int8(-98))&127)..(Int8(Int8(90))&127):(Int64(42)|1));
    public func func_1709495930115_587(param_1709495930115_588 : () -> Unit, namedParam_1709495930115_590 ! : Array<Option<UInt32>>, optionalParam_1709495930115_591 ! : (Float64, UInt8, Rune, Int8) -> Float32 = func_1709495930115_309) : Range<Int8> { // block id: 598
        var_1709495930115_268;
        var var_1709495930115_1018 : UInt = UInt64(163);
        var_1709495930115_608.var_1709495930115_611[5] >= if (match (Class_1709495930115_31()) {
            case _ : Range<UInt64> => 
                var_1709495930115_641;
                Class_1709495930115_31(Option<UInt32>.None, Option<(Float32, UInt16)>.Some((Float32(12.0), UInt16(157))), namedParam_1709495930115_647 : func_1709495930115_19, namedParam_1709495930115_649 : func_1709495930115_309);
                var_1709495930115_225 == var_1709495930115_975
            
            case _ => 
                var_1709495930115_379
            
            case _ : UInt16 => 
                var_1709495930115_985;
                var_1709495930115_989 < var_1709495930115_989
            
            case caseVar_1709495930115_994 : Range<Int8> => 
                true && true
            
            case _ => 
                Option<UInt32>.Some(var_1709495930115_1004);
                false
            
        }) { // block id: 1015
            var_1709495930115_1018 %= ((var_1709495930115_1018) | 1);
            var_1709495930115_268;
            var_1709495930115_1024 ^ UInt16(58)
        } else { // block id: 1028
            var_1709495930115_1030;
            [var_1709495930115_268, var_1709495930115_484, (), (), var_1709495930115_484, (), var_1709495930115_268, (), (), var_1709495930115_1043];
            UInt16(249) ^ UInt16(76)
        };
        var var_1709495930115_1058 : (Rune, (UInt32, Float64, (Float32, UInt16), UInt64), UInt16, Bool, (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)), Array<Unit>, Int32) = (r'e', (UInt32(UInt32(132)), Float64(Float64(Float32(107.0))), (Float32(Float32(-117.0)), UInt16(UInt16(209))), UInt64(69)), UInt16(UInt16(213)), false, (UInt16(16), Int64(125), Int32(UInt32(Int16(-1))), (UInt32(132), Float64(71.0), (Float32(93.0), UInt16(245)), UInt64(UInt16(246))), UInt32(Int32(-10)), (Float32(Float32(54.0)), UInt16(86))), [(), (), (), (), (), (), (), (), (), ()], Int32(Int16(-69)));
        if (try { // block id: 1052
            var_1709495930115_484;
            var_1709495930115_379 &&= var_1709495930115_379;
            var_1709495930115_1058
        } catch (e: Exception) { // block id: 1109
            var_1709495930115_1112 += var_1709495930115_287;
            var_1709495930115_268;
            var var_1709495930115_1129 : UInt64 = UInt64(Int64(Int8(UInt8(Int8(-31)))));
            (r'P', (var_1709495930115_1004, Float64(-123.0), var_1709495930115_1122, var_1709495930115_1129), var_1709495930115_1024, var_1709495930115_379, var_1709495930115_434, var_1709495930115_1139, var_1709495930115_370)
        }[3]) { // block id: 1159
            var var_1709495930115_1176 : Range<Int8> = ((Int8(Int8(-4))&127)..(Int8(Int8(-40))&127):(Int64(-71)|1));
            if (var_1709495930115_379) { // block id: 1162
                var_1709495930115_1043;
                var_1709495930115_379 ||= false;
                ((Int8(Int8(-75))&127)..=(Int8(var_1709495930115_387)&127):(var_1709495930115_106|1))
            } else if (false) { // block id: 1172
                var_1709495930115_484;
                var_1709495930115_750;
                var_1709495930115_1176
            } else { // block id: 1178
                var_1709495930115_178 *= var_1709495930115_370;
                ((Int8(Int8(74))&127)..(Int8(Int8(19))&127):(Int64(103)|1))
            }
        } else if (true) { // block id: 1184
            ((UInt16(var_1709495930115_1024)&127)..(UInt16(var_1709495930115_1188)&127):(var_1709495930115_106|1));
            var_1709495930115_1192;
            ((Int8(Int8(-53))&127)..(Int8(Int8(-116))&127):(Int64(-19)|1))
        } else { // block id: 1227
            var_1709495930115_1229
        }
    }
;
    mut prop var_1709495930115_1782 : UInt32 { // block id: 1783
        get() { // block id: 1785
            ();
            UInt32(Int32(-34))
        }

        set(Value) { // block id: 1791
            ();
            Class_1709495930115_31();
            ()
        }

    }
}

public struct Struct_1709495930115_604 {
    public init() { // block id: 606

    }
;
    public mut prop var_1709495930115_611 : VArray<UInt16, $7> { // block id: 612
        get() { // block id: 614
            VArray<UInt16, $7>({ i => UInt16(94)})
        }

        set(Value) { // block id: 629
            Class_1709495930115_31();
            ();
            ()
        }

    }
}

func func_1709495930115_13(param_1709495930115_14 : Int32) : Int32 { // block id: 15
    func_1709495930115_19()[0];
    try (resource = Class_1709495930115_31()) { // block id: 554
        Option<Unit>.None.getOrThrow()
    } finally { // block id: 561
        var var_1709495930115_1244 : (Int32, Float64) -> Int64 = func_1709495930115_246;
        var_1709495930115_564.func_1709495930115_567(namedParam_1709495930115_568 : func_1709495930115_190, namedParam_1709495930115_573 : ((Int16(Int16(37))&127)..(Int16(var_1709495930115_989)&127):(Int64(50)|1)), namedParam_1709495930115_574 : var_1709495930115_1244);
        (Option<Unit>.None ?? ());
        var loopTimeVar_1709495930115_1253 : Range<UInt64> = ((UInt64(UInt64(UInt32(UInt8(Int8(8)))))&127)..(UInt64(UInt64(UInt8(UInt8(UInt8(113)))))&127):(Int64(36)|1));
        for (i in loopTimeVar_1709495930115_1253 where var_1709495930115_379) {
            ()
        }
    };
    try { // block id: 1265
        var loopTimeVar_1709495930115_1279 : Array<UInt64> = [UInt64(57), UInt64(3), UInt64(191), UInt64(78), UInt64(Int64(Int16(UInt8(189)))), UInt64(Int32(UInt8(235))), UInt64(UInt16(182)), UInt64(4), UInt64(Int16(Int16(1))), UInt64(UInt16(128))];
        for (i in loopTimeVar_1709495930115_1279 where var_1709495930115_379) {
            Float32(-114.0) + Float32(-97.0);
            if (var_1709495930115_379) { ((Int32(Int32(-32))&127)..(Int32(Int32(-111))&127):(Int64(98)|1)) } else { ((Int32(Int32(-16))&127)..(Int32(Int32(70))&127):(var_1709495930115_106|1)) } 
        };
        (var_1709495930115_370, Option<(Float32, UInt16)>.Some((var_1709495930115_497, var_1709495930115_1188)), Option<(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16))>.None, var_1709495930115_268)[3];
        Int32(Int32(27))
    } catch (e: Exception) { // block id: 1313
        var_1709495930115_1317[4]
    } finally { // block id: 1370
        var_1709495930115_178 | var_1709495930115_178
    }
}



public func func_1709495930115_8(param_1709495930115_9 : UInt32, namedParam_1709495930115_10 ! : UInt32) : Unit { // block id: 11
    ([Option<Int32>.None, var_1709495930115_1385, Option<Int32>.Some(Int32(-94)), var_1709495930115_1385, var_1709495930115_1385, Option<Int32>.None, var_1709495930115_1385, Option<Int32>.None, var_1709495930115_1385, var_1709495930115_1385][0] ?? Int32(-18) + Int32(105))|>func_1709495930115_13;
    try (resource = Class_1709495930115_31()) { // block id: 1401

    } finally { // block id: 1402
        var loopTimeVar_1709495930115_1410 : Array<UInt64> = [UInt64(Int8(-112)), UInt64(92), UInt64(UInt8(175)), UInt64(78), UInt64(UInt8(Int8(66))), UInt64(Int32(-122)), UInt64(183), UInt64(36), UInt64(UInt32(85)), UInt64(174)];
        for (i in loopTimeVar_1709495930115_1410 where false) {
            if (true) { Option<Unit>.None } else { var_1709495930115_750 } 
        };
        var loopTimeVar_1709495930115_1436 : Int = 0;
        do {
            loopTimeVar_1709495930115_1436++;
            var_1709495930115_1112 /= ((UInt8(65)) | 1);
            Struct_1709495930115_580()
        } while ((true) && loopTimeVar_1709495930115_1436 < 100 ) 
    };
    var loopTimeVar_1709495930115_1550 : Int64 = 0;
    while (((var_1709495930115_1446[6] ?? var_1709495930115_379)) && loopTimeVar_1709495930115_1550 < 100 ) {
        loopTimeVar_1709495930115_1550++;

    }
}

main(): Int64 {
    try {
        UInt8(Int8(87));
        const var_1709495930115_1584 : Bool = false;
        func_1709495930115_8(if (var_1709495930115_379) { // block id: 1553
            var var_1709495930115_1556 : UInt64 = UInt64(Int8(2));
            var_1709495930115_1556--;
            UInt32(116)
        } else { // block id: 1560
            var_1709495930115_225
        }, namedParam_1709495930115_10 : try { // block id: 1563
            var_1709495930115_1565;
            var_1709495930115_497 += var_1709495930115_497;
            UInt32(30) & var_1709495930115_225
        } finally { // block id: 1580
            var_1709495930115_274;
            if (var_1709495930115_1584) { ((UInt16(UInt16(48))&127)..(UInt16(UInt16(43))&127):(Int64(41)|1)) } else { ((UInt16(UInt16(171))&127)..(UInt16(UInt16(134))&127):(Int64(63)|1)) } ;
            var_1709495930115_225 / ((UInt32(219)) | 1)
        });
        let var_1709495930115_1608 : ?UInt32 = ((UInt32(UInt8(UInt8(129))), Float64(13.0), (Float32(-80.0), UInt16(Int8(97))), UInt64(20)) as UInt32);
        var var_1709495930115_1648 : (UInt32, Float64, (Float32, UInt16), UInt64) = (UInt32(UInt16(251)), Float64(42.0), (Float32(29.0), UInt16(UInt16(241))), UInt64(42));
        let var_1709495930115_1694 : Int8 = Int8(-70);
        let var_1709495930115_1700 : Bool = true;
        var var_1709495930115_1717 : Interface_1709495930115_39 = Class_1709495930115_31();
        let var_1709495930115_1769 : Unit = ();
        if (true) { // block id: 1593
            var_1709495930115_225;
            var var_1709495930115_1623 : (Float64, UInt8, Rune, Int8) -> Float32 = func_1709495930115_309;
            let var_1709495930115_1633 : Int8 = Int8(-17);
            match (var_1709495930115_1597) {
                case 68 => 
                    Int64(99)
                
                case _ : (UInt32, Float64, (Float32, UInt16), UInt64) => 
                    Class_1709495930115_31(var_1709495930115_1608, var_1709495930115_549, namedParam_1709495930115_647 : func_1709495930115_19, namedParam_1709495930115_649 : var_1709495930115_1623);
                    Option<UInt8>.None;
                    var_1709495930115_26
                
                case caseVar_1709495930115_1629 => 
                    ((Int8(var_1709495930115_1633)&127)..(Int8(Int8(93))&127):(var_1709495930115_26|1));
                    var_1709495930115_1188++;
                    Int64(10)
                
                case _ => 
                    var_1709495930115_26
                
            }
        } else if (match ((r'n', var_1709495930115_1648, var_1709495930115_1188, false, (UInt16(122), Int64(34), Int32(-71), (UInt32(83), var_1709495930115_274, var_1709495930115_1122, UInt64(11)), UInt32(128), var_1709495930115_1122), [var_1709495930115_484, var_1709495930115_1674, (), (), (), var_1709495930115_1674, (), var_1709495930115_484, var_1709495930115_1043, var_1709495930115_1684], Int32(-33))) {
            case caseVar_1709495930115_1689 : Struct_1709495930115_580 => 
                Int8(-73) % ((var_1709495930115_1694) | 1);
                var_1709495930115_811;
                true && var_1709495930115_1700
            
            case _ => 
                var var_1709495930115_1706 : ?(UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)) = (UInt64(Int8(-21)) as (UInt16, Int64, Int32, (UInt32, Float64, (Float32, UInt16), UInt64), UInt32, (Float32, UInt16)));
                var_1709495930115_1706;
                UInt8(239) == UInt8(138)
            
        }) { // block id: 1713
            let var_1709495930115_1739 : () -> (Float32, UInt16) = func_1709495930115_19;
            try { // block id: 1715
                var_1709495930115_1717
            } catch (e: Exception) { // block id: 1719
                var var_1709495930115_1721 : Range<Int32> = ((Int32(Int32(UInt16(Int16(Int8(-33)))))&127)..(Int32(Int32(Int8(Int8(UInt8(137)))))&127):(Int64(14)|1));
                var_1709495930115_1721;
                var_1709495930115_225 - UInt32(27);
                Class_1709495930115_31(Option<UInt32>.None, Option<(Float32, UInt16)>.None, namedParam_1709495930115_647 : var_1709495930115_1739, namedParam_1709495930115_649 : func_1709495930115_309)
            };
            ();
            var_1709495930115_26 - Int64(36)
        } else { // block id: 1746
            try { // block id: 1748
                ();
                var_1709495930115_1751
            } finally { // block id: 1760
                var_1709495930115_641;
                (var_1709495930115_370, var_1709495930115_549, var_1709495930115_1766, var_1709495930115_1769)
            };
            Struct_1709495930115_604();
            match (var_1709495930115_564) {
                case _ => 
                    var_1709495930115_1043;
                    Int16(-99) % ((var_1709495930115_989) | 1);
                    var_1709495930115_26
                
            }
        }
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1709495930115_26*var_1709495930115_26), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_96*var_1709495930115_96), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_225*var_1709495930115_225), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_989*var_1709495930115_989), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_1024*var_1709495930115_1024), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_1597*var_1709495930115_1597), 64)
        crcCheck.updateBuffer(UInt64(var_1709495930115_1694*var_1709495930115_1694), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64) : Unit {
        if (input is Hashable) {
            match(input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
            
        } else if (input is ToString) {
            match(input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _=> updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }     
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

