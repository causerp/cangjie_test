/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

@Deprecated
public var var_1740924382416_32: VArray<UInt16, $6> = [UInt16(248), UInt16(127), UInt16(UInt16(92)), UInt16(Int8(-91)),
    UInt16(UInt16(189)), UInt16(212)]
public var var_1740924382416_47: Int32 = Int32(-126)
public const var_1740924382416_52: UInt16 = 194
public let var_1740924382416_55: UInt16 = UInt16(Int8(15))
@Deprecated
const var_1740924382416_69: String = """
MRI6B
1Ym&S
"""
public var var_1740924382416_83: Bool = true
public const var_1740924382416_101: Unit = ()
internal const var_1740924382416_104: Bool = true
public let var_1740924382416_139: Enum_1740924382416_133 = Enum_1740924382416_133.enumValue_1740924382416_141(
    ((UInt8(UInt8(87)) & 127)..(UInt8(UInt8(36)) & 127) : (Int64(-96) | 1)),
    (false, (), (), (), ((UInt8(UInt8(9)) & 127)..=(UInt8(UInt8(57)) & 127) : (Int64(-105) | 1)), Int16(7), ((UInt64(UInt64(152)) &
            127)..(UInt64(UInt64(149)) & 127) : (Int64(-116) | 1))), UInt32(228))
const var_1740924382416_164: Int = -118
public let var_1740924382416_174: Range<UInt8> = ((UInt8(UInt8(215)) & 127)..(UInt8(UInt8(Int8(-11))) & 127) : (Int64(97) |
    1))
var var_1740924382416_184: Range<UInt64> = ((UInt64(UInt64(Int8(Int8(Int8(-103))))) & 127)..(UInt64(UInt64(Int32(Int8(UInt8(124))))) &
    127) : (Int64(-70) | 1))
let var_1740924382416_196: UInt32 = UInt32(UInt16(UInt8(203)))
public let var_1740924382416_205: UInt8 = UInt8(UInt8(61))
public let var_1740924382416_213: Unit = ()
public var var_1740924382416_239: UInt64 = UInt64(225)
internal var var_1740924382416_248: Enum_1740924382416_133 = Enum_1740924382416_133.enumValue_1740924382416_250(
    UInt8(136))
public var var_1740924382416_266: UInt32 = UInt32(154)
public var var_1740924382416_274: Byte = UInt8(UInt8(175))
@Deprecated
public let var_1740924382416_298: UInt64 = UInt64(Int32(-17))
@Deprecated
public var var_1740924382416_303: UInt64 = UInt64(Int16(Int16(Int16(72))))
public const var_1740924382416_387: Int8 = 73
var var_1740924382416_411: Bool = (UInt32(225) is Float64)
public let var_1740924382416_417: Float64 = Float64(Float32(Float32(31.0)))
@Deprecated
public let var_1740924382416_427: Range<UInt8> = ((UInt8(UInt8(191)) & 127)..=(UInt8(UInt8(53)) & 127) : (Int64(-102) | 1))
public const var_1740924382416_436: Int16 = -79
@Deprecated
public const var_1740924382416_491: UInt32 = 59
var var_1740924382416_547: VArray<Float32, $3> = VArray<Float32, $3>(repeat: Float32(-37.0))
internal const var_1740924382416_572: Int8 = -63
const var_1740924382416_616: String = """
OE*.\"
*!=-(
"""
const var_1740924382416_650: Float64 = 38.0
public const var_1740924382416_664: UInt32 = 224
internal const var_1740924382416_678: Unit = ()
public let var_1740924382416_714: Unit = ()
public var var_1740924382416_718: Bool = true
public let var_1740924382416_724: Range<UInt16> = ((UInt16(UInt16(183)) & 127)..=(UInt16(UInt16(56)) & 127) : (Int64(-114) |
    1))
internal var var_1740924382416_728: UInt32 = UInt32(UInt16(Int16(Int16(UInt8(18)))))
@Deprecated
public var var_1740924382416_740: Float32 = Float32(-77.0)
public let var_1740924382416_766: Array<UInt64> = [UInt64(39), UInt64(Int8(-124)), UInt64(Int32(94)), UInt64(Int8(-57)),
    UInt64(168), UInt64(184), UInt64(UInt64(233)), UInt64(13), UInt64(164), UInt64(156)]
@Deprecated
public let var_1740924382416_793: Int8 = Int8(-46)
public var var_1740924382416_925: Range<Int64> = ((Int64(Int64(87)) & 127)..=(Int64(Int64(35)) & 127) : (Int64(89) | 1))
public let var_1740924382416_1065: Array<Range<Int32>> = [((Int32(Int32(18)) & 127)..=(Int32(Int32(-119)) & 127) : (Int64(-103) |
    1)), ((Int32(Int32(-118)) & 127)..=(Int32(Int32(-109)) & 127) : (Int64(99) | 1)),
    ((Int32(Int32(16)) & 127)..(Int32(Int32(-104)) & 127) : (Int64(43) | 1)),
    ((Int32(Int32(-122)) & 127)..(Int32(Int32(68)) & 127) : (Int64(-11) | 1)),
    ((Int32(Int32(123)) & 127)..=(Int32(Int32(-34)) & 127) : (Int64(23) | 1)),
    ((Int32(Int32(117)) & 127)..=(Int32(Int32(-66)) & 127) : (Int64(101) | 1)),
    ((Int32(Int32(-105)) & 127)..(Int32(Int32(-35)) & 127) : (Int64(4) | 1)),
    ((Int32(Int32(-56)) & 127)..=(Int32(Int32(95)) & 127) : (Int64(62) | 1)),
    ((Int32(Int32(76)) & 127)..=(Int32(Int32(82)) & 127) : (Int64(-125) | 1)),
    ((Int32(Int32(111)) & 127)..=(Int32(Int32(93)) & 127) : (Int64(-61) | 1))]
public var var_1740924382416_1123: Class_1740924382416_1114 = Class_1740924382416_1114()
public var var_1740924382416_1171: Range<Int32> = ((Int32(Int32(UInt8(96))) & 127)..(Int32(Int32(UInt16(200))) & 127) : (Int64(-51) |
    1))
@Deprecated
let var_1740924382416_1183: Int = Int64(-46)
public let var_1740924382416_1218: Array<Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>> = [(Int8(43) as (Bool, 
    Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)),
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    (((UInt32(UInt32(17)) & 127)..=(UInt32(UInt32(144)) & 127) : (Int64(-77) | 1)) as (Bool, Unit, Unit, Unit, Range<UInt8>, 
    Int16, Range<UInt64>)), Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None,
    (Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None as (Bool, Unit, Unit, Unit, Range<UInt8>, 
    Int16, Range<UInt64>))]
public var var_1740924382416_1285: Int64 = Int64(34)
@Deprecated
let var_1740924382416_1515: ?Int64 = (Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None as Int64)
@Deprecated
internal var var_1740924382416_1530: Int64 = Int64(Int16(UInt16(15)))

@Frozen
public const func func_1740924382416_96(param_1740924382416_97: Float32): Bool { // block id: 98
    ();
    var_1740924382416_101;
    var_1740924382416_104
}

@Deprecated
public enum Enum_1740924382416_133 {
    defaultValue
    | enumValue_1740924382416_141(Range<UInt8>, (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>), UInt32)
    | enumValue_1740924382416_250(UInt8)
    | enumValue_1740924382416_1456(Int8, Range<UInt8>, Float32)
    | enumValue_1740924382416_1464(Range<Int16>, Range<Int16>)
    | enumValue_1740924382416_1470(String, Int32)
    | enumValue_1740924382416_1477(Range<UInt32>, Range<UInt32>)
    | enumValue_1740924382416_1486(UInt16, Array<Range<Int32>>, Range<UInt8>, Float64)
    | enumValue_1740924382416_1500
}

public func func_1740924382416_115(
    optionalParam_1740924382416_116!: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) = (false, (), (), (),
        ((UInt8(UInt8(175)) & 127)..=(UInt8(UInt8(75)) & 127) : (Int64(UInt32(196)) | 1)), Int16(74), ((UInt64(UInt64(48)) &
            127)..(UInt64(UInt64(62)) & 127) : (Int64(-16) | 1))), namedParam_1740924382416_129!: VArray<UInt16, $6>,
    namedParam_1740924382416_130!: Array<UInt64>): Float32 { // block id: 131
    let var_1740924382416_170: Unit = ();
    const var_1740924382416_181: Int16 = 123;
    let var_1740924382416_242: UInt64 = UInt64(67);
    match ([var_1740924382416_139, var_1740924382416_139,
        Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(220)) & 127)..(UInt8(UInt8(92)) & 127) : (var_1740924382416_164 | 1)),
        (var_1740924382416_83, (), var_1740924382416_170, var_1740924382416_170, var_1740924382416_174,
            var_1740924382416_181, var_1740924382416_184), var_1740924382416_196), var_1740924382416_139,
        Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(126)) & 127)..=(UInt8(var_1740924382416_205) & 127) : (Int64(24) | 1)),
        (true, (), var_1740924382416_213, (), ((UInt8(UInt8(50)) & 127)..=(UInt8(UInt8(88)) & 127) : (Int64(-117) | 1)),
            Int16(18), var_1740924382416_184), UInt32(135)), var_1740924382416_139, var_1740924382416_139,
        Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(56)) & 127)..=(UInt8(UInt8(193)) & 127) : (Int64(-30) | 1)),
        (true, var_1740924382416_213, var_1740924382416_170, (), ((UInt8(var_1740924382416_205) & 127)..(UInt8(UInt8(177)) &
                127) : (var_1740924382416_164 | 1)), Int16(14), ((UInt64(var_1740924382416_239) & 127)..=(UInt64(var_1740924382416_242) &
                127) : (var_1740924382416_164 | 1))), var_1740924382416_196), var_1740924382416_139,
        var_1740924382416_248][8]) {
        case _: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) =>
            Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(104));
            ()

        case defaultValue =>
            var_1740924382416_174;
            var_1740924382416_266--

        case enumValue_1740924382416_250(caseVar_1740924382416_270) =>
            var_1740924382416_274 += UInt8(111)
            var_1740924382416_213;
            ()

        case _ =>
            """
Y-ja{h
YL4<E
""";
            ((Int16(Int16(-55)) & 127)..=(Int16(Int16(-55)) & 127) : (Int64(-39) | 1));
            var_1740924382416_274 *= UInt8(171)
    };
    Float32(62.0)
}

public func func_1740924382416_318(): (Unit, UInt32, Range<Int64>, UInt16, Range<Int64>, Int64) { // block id: 319
    let var_1740924382416_321: (Unit, UInt32, Range<Int64>, UInt16, Range<Int64>, Int64) = ((), UInt32(227), ((Int64(Int64(61)) &
            127)..=(Int64(Int64(35)) & 127) : (Int64(35) | 1)), UInt16(UInt16(2)), ((Int64(Int64(UInt32(UInt32(199)))) &
            127)..(Int64(Int64(Int8(-49))) & 127) : (Int64(Int32(58)) | 1)), Int64(54));
    var_1740924382416_321
}

@Deprecated
public func func_1740924382416_393(param_1740924382416_394: Float32): Unit { // block id: 395
    var var_1740924382416_462: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) = ((VArray<UInt16, $6>({
                i => UInt16(214)
            }) is (Unit, UInt32, Range<Int64>, UInt16, Range<Int64>, Int64)), (), (), (), ((UInt8(UInt8(UInt8(Int8(-53)))) &
            127)..=(UInt8(UInt8(UInt8(Int8(-21)))) & 127) : (Int64(Int32(17)) | 1)), Int16(UInt16(UInt8(96))), ((UInt64(UInt64(67)) &
            127)..=(UInt64(UInt64(170)) & 127) : (Int64(-112) | 1)));
    var loopTimeVar_1740924382416_521: Int64 = 0;
    do {
        loopTimeVar_1740924382416_521++;
        if (var_1740924382416_411) { // block id: 516
            ((UInt32(UInt32(175)) & 127)..(UInt32(UInt32(41)) & 127) : (Int64(-28) | 1))
        } else { // block id: 518
            ((UInt32(UInt32(143)) & 127)..=(UInt32(UInt32(194)) & 127) : (Int64(92) | 1))
        }
    } while ((if ((((UInt32(var_1740924382416_266) & 127)..=(UInt32(var_1740924382416_196) & 127) : (Int64(-37) | 1)) is Bool)) { // block id: 403
        var_1740924382416_213;
        false
    } else if (if (true) { // block id: 408
        false
    } else if (var_1740924382416_411) { // block id: 414
        var_1740924382416_417 < Float64(40.0)
    } else { // block id: 422
        [UInt64(145), UInt64(65), UInt64(61), UInt64(0), UInt64(125), UInt64(244), UInt64(67), UInt64(121), UInt64(72),
            UInt64(41)];
        [Enum_1740924382416_133.enumValue_1740924382416_141(var_1740924382416_427,
            (var_1740924382416_83, (), (), (), var_1740924382416_174, var_1740924382416_436, ((UInt64(UInt64(157)) & 127)..=(UInt64(UInt64(77)) &
                    127) : (Int64(-52) | 1))), UInt32(10)),
            Enum_1740924382416_133.enumValue_1740924382416_141(var_1740924382416_174,
            (var_1740924382416_83, (), (), var_1740924382416_213, var_1740924382416_174, var_1740924382416_436, ((UInt64(UInt64(37)) &
                    127)..=(UInt64(UInt64(64)) & 127) : (Int64(-24) | 1))), UInt32(210)), var_1740924382416_139,
            var_1740924382416_248, var_1740924382416_248,
            Enum_1740924382416_133.enumValue_1740924382416_250(var_1740924382416_205),
            Enum_1740924382416_133.enumValue_1740924382416_141(
            ((UInt8(UInt8(78)) & 127)..(UInt8(UInt8(223)) & 127) : (Int64(-79) | 1)), var_1740924382416_462,
            var_1740924382416_491), var_1740924382416_139,
            Enum_1740924382416_133.enumValue_1740924382416_141(
            ((UInt8(UInt8(202)) & 127)..(UInt8(UInt8(164)) & 127) : (Int64(42) | 1)),
            (false, (), (), var_1740924382416_213, var_1740924382416_427, var_1740924382416_436, ((UInt64(UInt64(126)) &
                    127)..=(UInt64(UInt64(109)) & 127) : (Int64(-69) | 1))), var_1740924382416_266),
            var_1740924382416_248];
        UInt64(242) > var_1740924382416_303
    }) { // block id: 509
        var_1740924382416_83
    } else { // block id: 511
        var_1740924382416_411
    }) && loopTimeVar_1740924382416_521 < 100);
    var_1740924382416_213
}

internal const func func_1740924382416_619(param_1740924382416_620: Int64, namedParam_1740924382416_621!: Bool,
    optionalParam_1740924382416_622!: Int64 = 7): UInt8 { // block id: 624
    const var_1740924382416_629: Float32 = 91.0;
    const func func_1740924382416_658(param_1740924382416_659: Rune, param_1740924382416_660: UInt16,
        param_1740924382416_661: Float64): Float64 { // block id: 662
        var_1740924382416_664;
        """
exMv1
F7^\"6
""";
        var_1740924382416_650
    };

    const func func_1740924382416_669(namedParam_1740924382416_670!: Rune,
        optionalParam_1740924382416_671!: Float32 = -70.0, optionalParam_1740924382416_673!: Unit = ()): Rune { // block id: 675
        ();
        var_1740924382416_678;
        r'1'
    };

    const var_1740924382416_682: Rune = r'i';
    const var_1740924382416_688: Bool = true;
    const func func_1740924382416_626(): Unit { // block id: 627
        var_1740924382416_629;
        var_1740924382416_616;
        const func func_1740924382416_643(param_1740924382416_644: String, optionalParam_1740924382416_645!: Int16 = -6,
            namedParam_1740924382416_647!: Unit): Float64 { // block id: 648
            var_1740924382416_650
        };

        const func func_1740924382416_633(param_1740924382416_634: Float64,
            optionalParam_1740924382416_635!: Bool = false, optionalParam_1740924382416_637!: Bool = true,
            optionalParam_1740924382416_639!: Int16 = -76): Unit { // block id: 641
            const var_1740924382416_654: Unit = ();
            func_1740924382416_643(###"08X 5&q}n2"###, namedParam_1740924382416_647: var_1740924382416_654);
            ()
        };

        func_1740924382416_633(
            func_1740924382416_658(
                func_1740924382416_669(namedParam_1740924382416_670: var_1740924382416_682,
                    optionalParam_1740924382416_671: var_1740924382416_629), 29, var_1740924382416_650),
            optionalParam_1740924382416_637: var_1740924382416_688)
    };

    func_1740924382416_626();
    const var_1740924382416_691: Int16 = 48;
    var_1740924382416_691;
    const var_1740924382416_694: UInt8 = 67;
    var_1740924382416_694
}

@Frozen
public const func func_1740924382416_558(param_1740924382416_559: Rune, param_1740924382416_560: Unit,
    optionalParam_1740924382416_561!: UInt16 = 205): Unit { // block id: 563
    const func func_1740924382416_565(param_1740924382416_566: Int8, optionalParam_1740924382416_567!: UInt32 = 83,
        namedParam_1740924382416_569!: Unit): Unit { // block id: 570

    }

    const var_1740924382416_596: UInt32 = 88;
    const var_1740924382416_612: Int32 = -59;
    const var_1740924382416_706: UInt16 = 144;
    const func func_1740924382416_575(): UInt32 { // block id: 576
        ();
        const var_1740924382416_697: Int = -101;
        const var_1740924382416_702: Rune = r'e';
        const func func_1740924382416_579(): UInt32 { // block id: 580
            const func func_1740924382416_582(optionalParam_1740924382416_583!: Int32 = -81,
                optionalParam_1740924382416_585!: Float32 = -127.0, namedParam_1740924382416_587!: Float64,
                namedParam_1740924382416_588!: UInt16): UInt32 { // block id: 589
                ();
                const var_1740924382416_592: Unit = ();
                var_1740924382416_592;
                var_1740924382416_596 << ((42) & 7)
            };

            const func func_1740924382416_600(param_1740924382416_601: String, param_1740924382416_602: UInt8,
                param_1740924382416_603: Int32, param_1740924382416_604: Rune): Int32 { // block id: 605
                ();
                const func func_1740924382416_609(): Int32 { // block id: 610
                    var_1740924382416_612
                };

                func_1740924382416_609() & -92
            };

            func_1740924382416_582(
                optionalParam_1740924382416_583: func_1740924382416_600(var_1740924382416_616,
                    func_1740924382416_619(var_1740924382416_697, namedParam_1740924382416_621: false), 70,
                    var_1740924382416_702), namedParam_1740924382416_587: 53.0,
                namedParam_1740924382416_588: var_1740924382416_706)
        };

        func_1740924382416_579()
    };

    func_1740924382416_565(var_1740924382416_572, optionalParam_1740924382416_567: func_1740924382416_575(),
        namedParam_1740924382416_569: ())
}

public enum Enum_1740924382416_749 {
    defaultValue
    | enumValue_1740924382416_752((Rune, Unit, UInt16) -> Unit, UInt32, Array<UInt64>, (Float32) -> Unit)
}

@Frozen
public func func_1740924382416_536(param_1740924382416_537: Int64): Float32 { // block id: 538
    let var_1740924382416_540: Range<Int8> = ((Int8(Int8(58)) & 127)..(Int8(Int8(-108)) & 127) : (Int64(5) | 1));
    var_1740924382416_540;
    var var_1740924382416_802: Range<UInt32> = ((UInt32(UInt32(UInt32(162))) & 127)..(UInt32(UInt32(232)) & 127) : (Int64(UInt64(UInt32(Int16(-12)))) |
        1));
    try { // block id: 543
        var_1740924382416_547[2]
    } catch (e: Exception) { // block id: 556
        func_1740924382416_558(r'h', var_1740924382416_213);
        try { // block id: 712
            var_1740924382416_714;
            var_1740924382416_718 &&= var_1740924382416_718
            var_1740924382416_714
        } finally { // block id: 722
            var_1740924382416_724;
            var_1740924382416_728++;
            var_1740924382416_718 &&= var_1740924382416_718
        };
        Float32(-55.0) - var_1740924382416_740
    } finally { // block id: 742
        if (var_1740924382416_718) { // block id: 745
            var_1740924382416_714;
            ()
        };
        let var_1740924382416_783: (Float32) -> Unit = {lambdaParameter_1740924382416_786: Float32 => ()};
        match (Enum_1740924382416_749.enumValue_1740924382416_752(func_1740924382416_558, UInt32(72),
            var_1740924382416_766, var_1740924382416_783)) {
            case defaultValue =>
                var_1740924382416_793;
                var_1740924382416_491 - UInt32(28)

            case _: UInt8 =>
                var_1740924382416_802;
                var_1740924382416_664

            case _ => UInt32(19)
        };
        var_1740924382416_740
    }
}

@Frozen
func func_1740924382416_532(param_1740924382416_533: UInt16): Range<Int64> { // block id: 534
    var var_1740924382416_818: (Int64) -> Float32 = func_1740924382416_536;
    let var_1740924382416_823: Array<Enum_1740924382416_133> = [Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(76)) & 127)..=(UInt8(UInt8(188)) & 127) : (Int64(14) | 1)),
        ((((Int8(Int8(30)) & 127)..=(Int8(Int8(-23)) & 127) : (Int64(-25) | 1)) is ((Bool, Unit, Unit, Unit, Range<UInt8>, 
                    Int16, Range<UInt64>), VArray<UInt16, $6>, Array<UInt64>) -> Float32), (), (), (), ((UInt8(UInt8(166)) &
                127)..(UInt8(UInt8(193)) & 127) : (Int64(-23) | 1)), Int16(-63), ((UInt64(UInt64(110)) & 127)..=(UInt64(UInt64(207)) &
                127) : (Int64(-17) | 1))), UInt32(Int32(Int32(26)))),
        Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(131)) & 127)..(UInt8(UInt8(237)) & 127) : (Int64(Int32(-53)) | 1)),
        (false, (), (), (), ((UInt8(UInt8(63)) & 127)..(UInt8(UInt8(249)) & 127) : (Int64(36) | 1)), Int16(-37), ((UInt64(UInt64(180)) &
                127)..(UInt64(UInt64(165)) & 127) : (Int64(-44) | 1))), UInt32(Int32(Int8(49)))),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(Int8(1))),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(Int8(UInt8(47)))),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(252)),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(155)),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(Int8(Int8(100)))),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(139)),
        Enum_1740924382416_133.enumValue_1740924382416_250(UInt8(31)),
        Enum_1740924382416_133.enumValue_1740924382416_141(
        ((UInt8(UInt8(183)) & 127)..(UInt8(UInt8(166)) & 127) : (Int64(110) | 1)),
        ((UInt16(136) is Float32), (), (), (), ((UInt8(UInt8(92)) & 127)..=(UInt8(UInt8(133)) & 127) : (Int64(-29) | 1)),
            Int16(UInt8(96)), ((UInt64(UInt64(18)) & 127)..(UInt64(UInt64(217)) & 127) : (Int64(106) | 1))),
        UInt32(UInt32(Int32(-91))))];
    match (var_1740924382416_823[8]) {
        case caseVar_1740924382416_911: Range<Int64> =>
            var_1740924382416_213;
            var_1740924382416_213;
            var_1740924382416_164

        case _ =>
            var_1740924382416_411 &&= true
            ();
            Int64(45)
    } |> var_1740924382416_818;
    var_1740924382416_925
}

@Frozen
internal func func_1740924382416_369(param_1740924382416_370: UInt16,
    optionalParam_1740924382416_371!: Bool = (false is Enum_1740924382416_133), namedParam_1740924382416_374!: Int64,
    optionalParam_1740924382416_375!: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) = (([UInt64(180),
            UInt64(231), UInt64(37), UInt64(107), UInt64(197), UInt64(222), UInt64(236), UInt64(198), UInt64(118),
            UInt64(248)] is (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)), (), (), (), ((UInt8(UInt8(214)) &
            127)..(UInt8(UInt8(172)) & 127) : (Int64(79) | 1)), Int16(59), ((UInt64(UInt64(115)) & 127)..=(UInt64(UInt64(194)) &
            127) : (Int64(-49) | 1)))): Unit { // block id: 385
    var_1740924382416_387;
    let var_1740924382416_947: Array<Range<Int32>> = [((Int32(Int32(12)) & 127)..(Int32(Int32(21)) & 127) : (Int64(63) |
        1)), ((Int32(Int32(-85)) & 127)..(Int32(Int32(Int32(Int32(-45)))) & 127) : (Int64(44) | 1)),
        ((Int32(Int32(88)) & 127)..=(Int32(Int32(-102)) & 127) : (Int64(UInt8(Int8(9))) | 1)),
        ((Int32(Int32(41)) & 127)..=(Int32(Int32(UInt32(UInt32(21)))) & 127) : (Int64(-64) | 1)),
        ((Int32(Int32(25)) & 127)..(Int32(Int32(-103)) & 127) : (Int64(-17) | 1)),
        ((Int32(Int32(45)) & 127)..=(Int32(Int32(99)) & 127) : (Int64(5) | 1)),
        ((Int32(Int32(-32)) & 127)..=(Int32(Int32(-100)) & 127) : (Int64(-49) | 1)),
        ((Int32(Int32(Int8(UInt8(58)))) & 127)..(Int32(Int32(UInt32(32))) & 127) : (Int64(Int16(86)) | 1)),
        ((Int32(Int32(-72)) & 127)..(Int32(Int32(-123)) & 127) : (Int64(61) | 1)),
        ((Int32(Int32(-68)) & 127)..(Int32(Int32(40)) & 127) : (Int64(74) | 1))];
    var var_1740924382416_1000: UInt32 = UInt32(86);
    const var_1740924382416_1016: Int64 = 109;
    if (var_1740924382416_83) { // block id: 391
        Float32(116.0) |> func_1740924382416_393;
        Float32(102.0) |> {
            lambdaParameter_1740924382416_528: Float32 => match ((var_1740924382416_52 |> func_1740924382416_532)) {
                case _: Array<UInt64> => ()

                case _ =>
                    ((UInt16(UInt16(1)) & 127)..=(UInt16(UInt16(107)) & 127) : (Int64(-3) | 1));
                    ()
            }
        }
    } else if (Int8(var_1740924382416_387) < Int8(100)) { // block id: 943
        var_1740924382416_947[9];
        match (Enum_1740924382416_133.enumValue_1740924382416_141(
            ((UInt8(UInt8(62)) & 127)..=(UInt8(UInt8(171)) & 127) : (Int64(-114) | 1)),
            (false, var_1740924382416_213, (), var_1740924382416_213, var_1740924382416_174, var_1740924382416_436, ((UInt64(var_1740924382416_239) &
                    127)..(UInt64(UInt64(71)) & 127) : (Int64(97) | 1))), var_1740924382416_1000)) {
            case defaultValue =>
                var_1740924382416_266 %= ((var_1740924382416_266) | 1)
                -var_1740924382416_164

            case _ =>
                var_1740924382416_213;
                var_1740924382416_1000;
                var_1740924382416_1016

            case defaultValue =>
                var_1740924382416_83 &&= var_1740924382416_411
                ((UInt32(UInt32(106)) & 127)..(UInt32(UInt32(150)) & 127) : (Int64(31) | 1));
                var_1740924382416_1016 % ((Int64(-89)) | 1)

            case _ => Int64(109) ^ Int64(-25)
        };
        var_1740924382416_740 /= Float32((Int32(Float32(55.0))) | 1)
    }
}

public func func_1740924382416_339(): Range<Int64> { // block id: 340
    var var_1740924382416_351: Int32 = Int32(UInt8(Int8(88)));
    try { // block id: 342
        try { // block id: 344
            ((Int64(Int64(-94)) & 127)..(Int64(Int64(123)) & 127) : (Int64(-6) | 1));
            ((Int32(Int32(-89)) & 127)..(Int32(Int32(115)) & 127) : (Int64(-111) | 1))
        } catch (_) { // block id: 347
            ();
            ((Int32(var_1740924382416_351) & 127)..=(Int32(var_1740924382416_351) & 127) : (Int64(-117) | 1))
        } finally { // block id: 357
            ((Int64(Int64(126)) & 127)..=(Int64(Int64(56)) & 127) : (Int64(-76) | 1));
            UInt8(16);
            ((Int32(Int32(104)) & 127)..(Int32(var_1740924382416_351) & 127) : (Int64(89) | 1))
        }
    } finally { // block id: 364
        var_1740924382416_274 %= ((UInt8(40)) | 1)
        func_1740924382416_369(UInt16(186), optionalParam_1740924382416_371: var_1740924382416_83,
            namedParam_1740924382416_374: Int64(-117));
        ((Int32(Int32(-115)) & 127)..=(Int32(var_1740924382416_351) & 127) : (var_1740924382416_164 | 1))
    };
    var var_1740924382416_1061: Option<Array<Range<Int32>>> = Option<Array<Range<Int32>>>.Some(
        [((Int32(Int32(40)) & 127)..=(Int32(Int32(49)) & 127) : (Int64(-53) | 1)),
            ((Int32(Int32(37)) & 127)..(Int32(Int32(-83)) & 127) : (Int64(-59) | 1)),
            ((Int32(Int32(-50)) & 127)..(Int32(Int32(60)) & 127) : (Int64(-22) | 1)),
            ((Int32(Int32(20)) & 127)..=(Int32(Int32(-72)) & 127) : (Int64(113) | 1)),
            ((Int32(Int32(16)) & 127)..=(Int32(Int32(-19)) & 127) : (Int64(115) | 1)),
            ((Int32(Int32(11)) & 127)..(Int32(Int32(45)) & 127) : (Int64(-36) | 1)),
            ((Int32(Int32(-61)) & 127)..(Int32(Int32(-94)) & 127) : (Int64(-1) | 1)),
            ((Int32(Int32(-113)) & 127)..(Int32(Int32(26)) & 127) : (Int64(69) | 1)),
            ((Int32(Int32(-68)) & 127)..(Int32(Int32(20)) & 127) : (Int64(63) | 1)),
            ((Int32(Int32(112)) & 127)..(Int32(Int32(88)) & 127) : (Int64(-64) | 1))]);
    const var_1740924382416_1101: Rune = r'X';
    match ((try { // block id: 1051
        Option<Array<Range<Int32>>>.None
    } finally { // block id: 1053
        var_1740924382416_213;
        Int8(-87) / ((var_1740924382416_387) | 1);
        Option<Array<Range<Int32>>>.None
    } ?? (var_1740924382416_1061 ?? var_1740924382416_1065))) {
        case _ =>
            if (true) {
                ((Int64(Int64(-59)) & 127)..=(Int64(Int64(-117)) & 127) : (Int64(-2) | 1))
            } else {
                ((Int64(Int64(-64)) & 127)..=(Int64(Int64(25)) & 127) : (Int64(-67) | 1))
            }

        case caseVar_1740924382416_1076 =>
            var_1740924382416_52 - UInt16(160);
            var_1740924382416_266 -= UInt32(130)
            ((Int64(Int64(-122)) & 127)..(Int64(Int64(26)) & 127) : (Int64(35) | 1))

        case _: Range<Int32> =>
            var_1740924382416_239 << ((var_1740924382416_303) & 7);
            ((Int64(var_1740924382416_164) & 127)..(Int64(var_1740924382416_164) & 127) : (Int64(-47) | 1))

        case _: Range<UInt64> =>
            if (false) {
                var_1740924382416_1101
            } else {
                var_1740924382416_1101
            };
            var_1740924382416_213;
            ((Int64(Int64(-25)) & 127)..=(Int64(Int64(107)) & 127) : (var_1740924382416_164 | 1))

        case _ => var_1740924382416_925
    }
}

public interface Interface_1740924382416_1121 {}

public sealed interface Interface_1740924382416_1120 <: Interface_1740924382416_1121 {}

public interface Interface_1740924382416_1119 <: Interface_1740924382416_1120 & Interface_1740924382416_1121 {}

public interface Interface_1740924382416_1118 <: Interface_1740924382416_1119 {}

public sealed interface Interface_1740924382416_1117 <: Interface_1740924382416_1118 {
    @Frozen
    static func func_1740924382416_1405(param_1740924382416_1406: Range<Int64>): Array<Enum_1740924382416_133> { // block id: 1407
        let var_1740924382416_1417: Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)> = (((Int64(Int64(-95)) &
            127)..(Int64(Int64(39)) & 127) : (Int64(5) | 1)) as (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>));
        var var_1740924382416_1427: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) = (false, (), (), (), ((UInt8(UInt8(125)) &
                127)..(UInt8(UInt8(121)) & 127) : (Int64(-67) | 1)), Int16(UInt16(Int16(55))), ((UInt64(UInt64(69)) & 127)..(UInt64(UInt64(253)) &
                127) : (Int64(-29) | 1)));
        (try { // block id: 1411
            var_1740924382416_184;
            ();
            Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None
        } catch (_) { // block id: 1415
            var_1740924382416_1417
        } finally { // block id: 1420
            UInt8(176) ^ UInt8(4);
            var_1740924382416_248;
            var_1740924382416_1417
        } ?? var_1740924382416_1427)[1];
        var var_1740924382416_1447: Struct_1740924382416_1443 = Struct_1740924382416_1443();
        var_1740924382416_1447.var_1740924382416_1450
    }
}

public open class Class_1740924382416_1114 <: Interface_1740924382416_1117 & Interface_1740924382416_1118 {
    @Frozen
    public init() { // block id: 1116

    }

    @Frozen
    public mut prop var_1740924382416_1126: Int16 { // block id: 1127
        get() { // block id: 1129
            ((), UInt32(UInt16(148)), ((Int64(Int64(96)) & 127)..(Int64(Int64(119)) & 127) : (Int64(113) | 1)), UInt16(UInt16(201)),
                ((Int64(Int64(-111)) & 127)..=(Int64(Int64(118)) & 127) : (Int64(46) | 1)), Int64(12));
            ();
            Int16(Int16(0));
            var_1740924382416_1556
        }
        set(Value) { // block id: 1144
            ();
            var_1740924382416_1556 = Value
        }
    }
    public static func func_1740924382416_1191(param_1740924382416_1192: Rune,
        optionalParam_1740924382416_1193!: (Rune, Unit, UInt16) -> Unit = {
            lambdaParameter_1740924382416_1196: Rune, lambdaParameter_1740924382416_1197: Unit, 
                lambdaParameter_1740924382416_1198: UInt16 =>
        }, namedParam_1740924382416_1204!: Array<Range<Int32>>, optionalParam_1740924382416_1205!: Rune = r'i'): (Bool, 
        Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) { // block id: 1207
        let var_1740924382416_1235: (Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>) = (false, (), (), (), ((UInt8(UInt8(Int8(Int8(81)))) &
                127)..(UInt8(UInt8(Int8(-11))) & 127) : (Int64(Int32(UInt8(19))) | 1)), Int16(Int16(98)), ((UInt64(UInt64(6)) &
                127)..=(UInt64(UInt64(131)) & 127) : (Int64(Int32(UInt8(135))) | 1)));
        (Option<(Bool, Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)>.None ?? (var_1740924382416_1218[2] ??
            var_1740924382416_1235))
    };

    @Frozen
    public prop var_1740924382416_1354: Bool { // block id: 1355
        get() { // block id: 1357
            Float64(-95.0);
            ((), UInt32(86), ((Int64(Int64(-36)) & 127)..=(Int64(Int64(-41)) & 127) : (Int64(UInt64(57)) | 1)), UInt16(Int8(Int8(-25))),
                ((Int64(Int64(10)) & 127)..(Int64(Int64(UInt8(209))) & 127) : (Int64(Int16(12)) | 1)), Int64(UInt8(UInt8(7))));
            ([UInt64(UInt64(142)), UInt64(UInt16(74)), UInt64(30), UInt64(UInt16(138)), UInt64(19), UInt64(134),
                UInt64(UInt16(251)), UInt64(UInt8(63)), UInt64(UInt8(213)), UInt64(UInt16(58))] is Range<UInt16>)
        }
    }
    mut prop var_1740924382416_1556: Int16 { // block id: 1557
        get() { // block id: 1559
            Int16(64)
        }
        set(Value) { // block id: 1563
            ();
            ();
            ()
        }
    }
    public static func func_1740924382416_1405(param_1740924382416_1406: Range<Int64>): Array<Enum_1740924382416_133> { // block id: 1572
        Interface_1740924382416_1117.func_1740924382416_1405(
            ((Int64(Int64(47)) & 127)..=(Int64(Int64(-61)) & 127) : (Int64(-114) | 1)))
    }

    static init() {
    }
}

@Frozen
public func func_1740924382416_91(param_1740924382416_92: VArray<UInt16, $6>): (Bool, Unit, Unit, Unit, Range<UInt8>, 
    Int16, Range<UInt64>) { // block id: 93
    let var_1740924382416_107: (Float32) -> Bool = {
        lambdaParameter_1740924382416_110: Float32 => (((UInt16(UInt16(154)) & 127)..=(UInt16(UInt16(29)) & 127) : (Int64(-120) |
            1)) is UInt16)
    };
    if ((func_1740924382416_115(namedParam_1740924382416_129: VArray<UInt16, $6>(repeat: var_1740924382416_55),
        namedParam_1740924382416_130: [var_1740924382416_298, var_1740924382416_298, var_1740924382416_303, UInt64(233),
            UInt64(53), UInt64(134), UInt64(168), UInt64(138), UInt64(31), UInt64(238)]) |> var_1740924382416_107)) {
        func_1740924382416_318()[2]
    } else {
        func_1740924382416_339()
    };
    var_1740924382416_1123.var_1740924382416_1126;
    let var_1740924382416_1157: Int32 = Int32(87);
    var var_1740924382416_1166: Int64 = Int64(-64);
    (([((Int32(var_1740924382416_1157) & 127)..=(Int32(Int32(-112)) & 127) : (Int64(124) | 1)),
        ((Int32(Int32(-25)) & 127)..=(Int32(Int32(-91)) & 127) : (Int64(-60) | 1)),
        ((Int32(var_1740924382416_47) & 127)..(Int32(var_1740924382416_1157) & 127) : (var_1740924382416_1166 | 1)),
        ((Int32(Int32(-16)) & 127)..=(Int32(Int32(-23)) & 127) : (Int64(-26) | 1)),
        ((Int32(Int32(54)) & 127)..=(Int32(Int32(-99)) & 127) : (Int64(-120) | 1)), var_1740924382416_1171,
        var_1740924382416_1171,
        ((Int32(var_1740924382416_1157) & 127)..=(Int32(var_1740924382416_47) & 127) : (var_1740924382416_1183 | 1)),
        ((Int32(Int32(55)) & 127)..=(Int32(Int32(-87)) & 127) : (Int64(-119) | 1)), var_1740924382416_1171][6] as (Bool, 
        Unit, Unit, Unit, Range<UInt8>, Int16, Range<UInt64>)) ?? Class_1740924382416_1114.func_1740924382416_1191(r'Q',
        optionalParam_1740924382416_1193: {
            lambdaParameter_1740924382416_1261: Rune, lambdaParameter_1740924382416_1262: Unit, 
                lambdaParameter_1740924382416_1263: UInt16 =>
        },
        namedParam_1740924382416_1204: [((Int32(Int32(-67)) & 127)..=(Int32(Int32(-92)) & 127) : (Int64(66) | 1)),
            ((Int32(var_1740924382416_47) & 127)..=(Int32(Int32(-80)) & 127) : (Int64(-87) | 1)),
            ((Int32(var_1740924382416_47) & 127)..(Int32(var_1740924382416_47) & 127) : (var_1740924382416_1166 | 1)),
            ((Int32(Int32(-94)) & 127)..(Int32(Int32(-128)) & 127) : (Int64(113) | 1)),
            ((Int32(Int32(19)) & 127)..=(Int32(Int32(-109)) & 127) : (Int64(55) | 1)),
            ((Int32(Int32(-54)) & 127)..=(Int32(var_1740924382416_47) & 127) : (var_1740924382416_1166 | 1)),
            ((Int32(var_1740924382416_1157) & 127)..=(Int32(Int32(-85)) & 127) : (var_1740924382416_1285 | 1)),
            ((Int32(Int32(51)) & 127)..(Int32(Int32(-122)) & 127) : (Int64(-32) | 1)),
            ((Int32(Int32(33)) & 127)..=(Int32(Int32(80)) & 127) : (var_1740924382416_1183 | 1)),
            ((Int32(var_1740924382416_47) & 127)..=(Int32(Int32(27)) & 127) : (Int64(-37) | 1))]))
}

public struct Struct_1740924382416_1443 {
    public init() { // block id: 1445

    }

    @Frozen
    public mut prop var_1740924382416_1450: Array<Enum_1740924382416_133> { // block id: 1451
        get() { // block id: 1453
            [Enum_1740924382416_133.enumValue_1740924382416_1456(Int8(-84),
                ((UInt8(UInt8(181)) & 127)..(UInt8(UInt8(49)) & 127) : (Int64(116) | 1)), Float32(-3.0)),
                Enum_1740924382416_133.enumValue_1740924382416_1464(
                ((Int16(Int16(-78)) & 127)..=(Int16(Int16(101)) & 127) : (Int64(47) | 1)),
                ((Int16(Int16(69)) & 127)..=(Int16(Int16(80)) & 127) : (Int64(25) | 1))),
                Enum_1740924382416_133.enumValue_1740924382416_1470("4?#NZqG:SZ", Int32(UInt16(237))),
                Enum_1740924382416_133.enumValue_1740924382416_1477(
                ((UInt32(UInt32(85)) & 127)..(UInt32(UInt32(86)) & 127) : (Int64(50) | 1)),
                ((UInt32(UInt32(160)) & 127)..(UInt32(UInt32(49)) & 127) : (Int64(-63) | 1))),
                Enum_1740924382416_133.enumValue_1740924382416_1486(UInt16(Int16(-38)),
                [((Int32(Int32(35)) & 127)..(Int32(Int32(-80)) & 127) : (Int64(-128) | 1)),
                    ((Int32(Int32(56)) & 127)..=(Int32(Int32(-43)) & 127) : (Int64(-3) | 1)),
                    ((Int32(Int32(-88)) & 127)..=(Int32(Int32(67)) & 127) : (Int64(117) | 1)),
                    ((Int32(Int32(-41)) & 127)..(Int32(Int32(104)) & 127) : (Int64(43) | 1)),
                    ((Int32(Int32(-44)) & 127)..=(Int32(Int32(102)) & 127) : (Int64(77) | 1)),
                    ((Int32(Int32(81)) & 127)..=(Int32(Int32(111)) & 127) : (Int64(-34) | 1)),
                    ((Int32(Int32(-115)) & 127)..=(Int32(Int32(-2)) & 127) : (Int64(7) | 1)),
                    ((Int32(Int32(-37)) & 127)..(Int32(Int32(108)) & 127) : (Int64(-38) | 1)),
                    ((Int32(Int32(86)) & 127)..(Int32(Int32(103)) & 127) : (Int64(125) | 1)),
                    ((Int32(Int32(-31)) & 127)..(Int32(Int32(121)) & 127) : (Int64(11) | 1))],
                ((UInt8(UInt8(15)) & 127)..=(UInt8(UInt8(119)) & 127) : (Int64(-102) | 1)), Float64(-118.0)),
                Enum_1740924382416_133.enumValue_1740924382416_1500, Enum_1740924382416_133.enumValue_1740924382416_1500,
                Enum_1740924382416_133.enumValue_1740924382416_1500, Enum_1740924382416_133.enumValue_1740924382416_1500,
                Enum_1740924382416_133.enumValue_1740924382416_1500]
        }
        set(Value) { // block id: 1507

        }
    }
}

main(): Int64 {
    try {
        const var_1740924382416_22: Bool = true;
        const var_1740924382416_66: Unit = ();
        const var_1740924382416_77: Int16 = -41;
        if (var_1740924382416_22) { // block id: 24
            UInt8(143) >= UInt8(130);
            ();
            if (false) {
                var_1740924382416_32
            } else {
                var_1740924382416_32
            }
        } else { // block id: 44
            var_1740924382416_47--;
            VArray<UInt16, $6>({i => UInt16(63)})
        }[4] / ((UInt16(try { // block id: 64
            var_1740924382416_66;
            var_1740924382416_69;
            Int16(25)
        } catch (_) { // block id: 72
            ();
            var_1740924382416_66;
            var_1740924382416_77 << ((Int16(83)) & 7)
        } finally { // block id: 80
            var_1740924382416_83 &&= false
            ((UInt32(UInt32(192)) & 127)..=(UInt32(UInt32(16)) & 127) : (Int64(-75) | 1));
            var_1740924382416_77
        })) | 1);
        (match (Float32(32.0)) {
            case -98.0 | -108.0 =>
                ();
                var_1740924382416_32

            case -60.0 | -28.0 =>
                if (var_1740924382416_22) {
                    ((UInt64(UInt64(68)) & 127)..=(UInt64(UInt64(110)) & 127) : (Int64(-124) | 1))
                } else {
                    ((UInt64(UInt64(56)) & 127)..(UInt64(var_1740924382416_298) & 127) : (Int64(-91) | 1))
                };
                VArray<UInt16, $6>(repeat: var_1740924382416_55)

            case _ =>
                var var_1740924382416_1326: Int8 = Int8(UInt8(241));
                var_1740924382416_1326 ^= Int8(-22)
                var var_1740924382416_1332: UInt32 = UInt32(Int32(Int16(-101)));
                var_1740924382416_1332 |= UInt32(202)
                VArray<UInt16, $6>({i => UInt16(46)})

            case _ =>
                var_1740924382416_1123;
                var_1740924382416_32
        } |> func_1740924382416_91)[2];
        var var_1740924382416_1542: Int64 = Int64(Int16(-50));
        if (var_1740924382416_1123.var_1740924382416_1354) { // block id: 1398
            var_1740924382416_83 = true
            Interface_1740924382416_1117.func_1740924382416_1405(var_1740924382416_925);
            (var_1740924382416_1515 ?? Int64(-30))
        } else { // block id: 1519
            (var_1740924382416_66, var_1740924382416_266, ((Int64(Int64(-89)) & 127)..=(Int64(Int64(-105)) & 127) : (Int64(-89) |
                    1)), var_1740924382416_55, ((Int64(Int64(-18)) & 127)..(Int64(Int64(95)) & 127) : (Int64(-29) | 1)),
                var_1740924382416_1530);
            var_1740924382416_83;
            try { // block id: 1536
                ();
                if (false) {
                    Option<Int64>.Some(var_1740924382416_1542)
                } else {
                    Option<Int64>.None
                };
                var_1740924382416_1285
            } finally { // block id: 1547
                let var_1740924382416_1549: Option<Array<Range<Int32>>> = (Float64(112.0) as Array<Range<Int32>>);
                var_1740924382416_1549;
                var_1740924382416_1515;
                Int64(44)
            }
        }
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1740924382416_77 * var_1740924382416_77), 64)
        crcCheck.updateBuffer(UInt64(var_1740924382416_1530 * var_1740924382416_1530), 64)
        crcCheck.updateBuffer(UInt64(var_1740924382416_1542 * var_1740924382416_1542), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Struct_1740924382416_1443 {}

extend Enum_1740924382416_133 {}
