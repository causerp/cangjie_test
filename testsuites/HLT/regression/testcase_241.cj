/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

// All global variable need to be defined before use!
public let var_1673198034260_26 : UInt16 = UInt16(236)
public var var_1673198034260_37 : Int32 = Int32(28)
let var_1673198034260_56 : UInt32 = UInt32(240)
var var_1673198034260_77 : Struct_1673198034260_6 = Struct_1673198034260_6()
let var_1673198034260_81 : UInt64 = UInt64(Int8(Int8(-66)))
public var var_1673198034260_93 : UInt8 = UInt8(167)
var var_1673198034260_198 : Unit = ()
let var_1673198034260_397 : UInt16 = UInt16(186)
public let var_1673198034260_743 : Interface_1673198034260_152 = Class_1673198034260_146()
public var var_1673198034260_780 : Range<Int8> = ((Int8(36)&127)..=(Int8(Int8(-33))&127):((102|1)))
let var_1673198034260_806 : Int8 = Int8(-8)
let var_1673198034260_908 : Interface_1673198034260_149 = Class_1673198034260_146()
public var var_1673198034260_1048 : UInt32 = UInt32(UInt8(Int8(49)))
public var var_1673198034260_1118 : Class_1673198034260_146 = Class_1673198034260_146()
public var var_1673198034260_1134 : (UInt32, Range<Int16>, Array<Bool>, Class_1673198034260_146, Range<Int8>, Range<UInt8>) = (UInt32(96), ((Int16(60)&127)..=(Int16(43)&127):(61|1)), [true, false, true, false, false, false, true, true, false, true], Class_1673198034260_146(), ((Int8(56)&127)..=(Int8(-18)&127):((-33)|1)), ((UInt8(232)&127)..(UInt8(127)&127):((-4)|1)))
var var_1673198034260_1191 : Range<Int16> = ((Int16(70)&127)..(Int16(-3)&127):(108|1))
public let var_1673198034260_1213 : (Unit, Int32) = ((), Int32(74))
public let var_1673198034260_1225 : (Interface_1673198034260_152, ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>), Rune, ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>), (String, Range<Int32>, (Unit, Int32), Range<Int8>)) = (Class_1673198034260_146(), (("$s(I8?(M%H", ((Int32(-10)&127)..=(Int32(92)&127):(((-117)|1))), ((), Int32(-94)), ((Int8(87)&127)..=(Int8(-12)&127):(11|1))), ((UInt32(173)&127)..=(UInt32(84)&127):((-86)|1))), r'8', (("""
_:J}$
Hz6>*
""", ((Int32(-96)&127)..=(Int32(31)&127):((-90)|1)), ((), Int32(24)), ((Int8(-101)&127)..=(Int8(-109)&127):(((-45)|1)))), ((UInt32(178)&127)..(UInt32(79)&127):(80|1))), ("M:S4Yh(sPF", ((Int32(55)&127)..=(Int32(-76)&127):((-91)|1)), ((), Int32(-82)), ((Int8(UInt8(69))&127)..(Int8(UInt8(233))&127):((Int64(UInt64(11))|1)))))
public struct Struct_1673198034260_6 {
    public init() { // block id: 8

    }
;
    private static let var_1673198034260_126 : Bool = true;
    public func func_1673198034260_97(param_1673198034260_98 : Float64, optionalParam_1673198034260_99 ! : () -> Option<Struct_1673198034260_6> = func_1673198034260_10, namedParam_1673198034260_102 ! : UInt64, optionalParam_1673198034260_103 ! : Int8 = Int8(-104)) : Rune { // block id: 105
        let var_1673198034260_1028 : (Array<UInt64>) -> Bool = func_1673198034260_141<Interface_1673198034260_155>;
        let var_1673198034260_1077 : (Range<UInt64>, Rune, Range<Int64>, Rune, UInt16, Range<Int8>, Int64, (String, Range<Int32>, (Unit, Int32), Range<Int8>)) = (((UInt64(224)&127)..=(UInt64(246)&127):(50|1)), r'm', ((Int64(UInt8(Int8(-14)))&127)..(66&127):(((-120)|1))), r'9', UInt16(UInt16(200)), ((Int8(119)&127)..(Int8(18)&127):((-5)|1)), (-52), (###"sYSq(=ir~H"###, ((Int32(-62)&127)..=(Int32(-108)&127):((-101)|1)), ((), Int32(UInt16(185))), ((Int8(-87)&127)..(Int8(-87)&127):((-50)|1))));
        let var_1673198034260_1110 : Array<Rune> = [r'P', r'u', r'F', r'W', r'v', r'E', r'm', r'R', r'A', r'N'];
        if (if ([true, false, true, true, true, var_1673198034260_126, true, var_1673198034260_126, true, var_1673198034260_126][2]) { // block id: 133
            var_1673198034260_26 + var_1673198034260_26;
            UInt16(147) >= UInt16(153)
        } else if (([UInt64(192), UInt64(150), UInt64(147), UInt64(219), UInt64(190), UInt64(166), UInt64(55), UInt64(90), UInt64(205), UInt64(129)]|>var_1673198034260_1028)) { // block id: 1031
            true
        } else { // block id: 1033
            var var_1673198034260_1036 : UInt64 = UInt64(Int32(-9));
            var var_1673198034260_1040 : UInt64 = UInt64(Int32(Int8(UInt8(UInt8(85)))));
            var_1673198034260_1036 <<= ((var_1673198034260_1040) & 7);
            var_1673198034260_1048 /= ((UInt32(112)) | 1);
            false
        }) { // block id: 1054
            var loopTimeVar_1673198034260_1062 : Range<UInt64> = ((UInt64(UInt32(Int8(-90)))&127)..(UInt64(Int16(UInt8(UInt8(238))))&127):((Int64(UInt64(85))|1)));
            for (i in loopTimeVar_1673198034260_1062 where true) {
                UInt16(131) - UInt16(63);
                var_1673198034260_198
            };
            var_1673198034260_1077[3]
        } else { // block id: 1101
            try (resource = Class_1673198034260_146()) { // block id: 1103
                Enum_1673198034260_964.defaultValue;
                ()
            } finally { // block id: 1106

            };
            var_1673198034260_1110[0]
        }
    }

}

public enum Enum_1673198034260_17 {
    defaultValue
}

public func func_1673198034260_10() : Option<Struct_1673198034260_6> { // block id: 71
    ();
    Option<Struct_1673198034260_6>.Some((Option<Struct_1673198034260_6>.None ?? var_1673198034260_77))
}

public func func_1673198034260_10(param_1673198034260_11 : UInt64, namedParam_1673198034260_12 ! : Float64, namedParam_1673198034260_13 ! : UInt8, namedParam_1673198034260_14 ! : UInt16) : Struct_1673198034260_6 { // block id: 15
    var var_1673198034260_20 : Enum_1673198034260_17 = Enum_1673198034260_17.defaultValue;
    var var_1673198034260_29 : Unit = ();
    var var_1673198034260_41 : Unit = ();
    match (var_1673198034260_20) {
        case _ => 
            var_1673198034260_26;
            var_1673198034260_29;
            (-8)
        
        case defaultValue => 
            var_1673198034260_37 = Int32(-41);
            var_1673198034260_41;
            7
        
        case defaultValue => 
            var_1673198034260_29;
            (-86)
        
        case _ => 
            var var_1673198034260_53 : UInt32 = UInt32(71);
            var_1673198034260_53 * var_1673198034260_56;
            var var_1673198034260_59 : Int64 = 57;
            var_1673198034260_59;
            42 - (-34)
        
    };
    (func_1673198034260_10() ?? var_1673198034260_77)
}

public interface Interface_1673198034260_154 {

}

public interface Interface_1673198034260_153<T0> <: Interface_1673198034260_154 {

}

public interface Interface_1673198034260_156<T0> {

}

public interface Interface_1673198034260_155 <: Interface_1673198034260_156<Range<Int32>> {

}

public interface Interface_1673198034260_152 <: Interface_1673198034260_153<Enum_1673198034260_964> & Interface_1673198034260_155 {

}

public interface Interface_1673198034260_151<T0> <: Interface_1673198034260_152 {

}

public interface Interface_1673198034260_150 <: Interface_1673198034260_151<Int32> {

}

public interface Interface_1673198034260_149 <: Interface_1673198034260_150 {

}

public open class Class_1673198034260_146 <: Interface_1673198034260_149 & Interface_1673198034260_153<Enum_1673198034260_964> & Resource {
    public init() { // block id: 148

    }
;
    static mut prop var_1673198034260_206 : UInt64 { // block id: 207
        get() { // block id: 209
            Int16(12);
            ();
            UInt64(135)
        }

        set(Value) { // block id: 215
            Class_1673198034260_146();
            ();
            ()
        }

    };
    static var var_1673198034260_308 : Range<Int16> = ((Int16(61)&127)..(Int16(-27)&127):(40|1));
    public static var var_1673198034260_431 : (UInt32, Range<Int16>, Array<Bool>, Class_1673198034260_146, Range<Int8>, Range<UInt8>) = (UInt32(192), ((Int16(-67)&127)..=(Int16(-79)&127):(((-62)|1))), [false, false, false, false, true, true, false, true, true, false], Class_1673198034260_146(), ((Int8(3)&127)..(Int8(56)&127):(((-102)|1))), ((UInt8(199)&127)..=(UInt8(217)&127):((53|1))));
    public init(param_1673198034260_346 : Unit, param_1673198034260_347 : String, param_1673198034260_348 : Float64, optionalParam_1673198034260_349 ! : Interface_1673198034260_154 = Class_1673198034260_146()) { // block id: 351
        func func_1673198034260_353(param_1673198034260_354 : Enum_1673198034260_17, param_1673198034260_355 : Range<Int32>, param_1673198034260_356 : Interface_1673198034260_152, param_1673198034260_357 : Range<Int8>) : Unit { // block id: 358

        }
;
        let var_1673198034260_370 : (UInt16, Range<Int64>, Enum_1673198034260_17, Bool, UInt16, String) = (UInt16(UInt8(UInt8(Int8(-56)))), (((-97)&127)..(Int64(Int32(-68))&127):((108|1))), Enum_1673198034260_17.defaultValue, true, UInt16(UInt8(240)), "-eB1u;VM7s");
        var var_1673198034260_400 : Range<Int64> = (((-70)&127)..(99&127):((-56)|1));
        let var_1673198034260_404 : Bool = false;
        let var_1673198034260_408 : String = "zFza_(IN_I";
        let var_1673198034260_472 : (UInt32, Range<Int16>, Array<Bool>, Class_1673198034260_146, Range<Int8>, Range<UInt8>) = (UInt32(21), ((Int16(-124)&127)..=(Int16(26)&127):(35|1)), [false, false, false, false, false, true, true, true, true, true], Class_1673198034260_146(), ((Int8(-94)&127)..(Int8(96)&127):((Int64((-126))|1))), ((UInt8(UInt8(UInt8(146)))&127)..=(UInt8(23)&127):((11|1))));
        let var_1673198034260_584 : Class_1673198034260_146 = Class_1673198034260_146();
        let var_1673198034260_619 : Range<Int16> = ((Int16(-104)&127)..=(Int16(UInt16(Int8(80)))&127):((Int64(UInt32(31))|1)));
        let var_1673198034260_655 : Option<(String, Range<Int32>, (Unit, Int32), Range<Int8>)> = (Int64(UInt64(Int32(Int8(47)))) as (String, Range<Int32>, (Unit, Int32), Range<Int8>));
        let var_1673198034260_664 : ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>) = (("w:A${var_1673198034260_408}`z}${var_1673198034260_408}#x,C${var_1673198034260_408}", ((Int32(-58)&127)..=(Int32(UInt16(232))&127):((Int64((-91))|1))), ((), Int32(Int16(98))), ((Int8(-65)&127)..=(Int8(126)&127):(26|1))), ((UInt32(UInt8(83))&127)..(UInt32(123)&127):(((-96)|1))));
        func func_1673198034260_412(optionalParam_1673198034260_413 ! : (UInt64, Float64, UInt8, UInt16) -> Struct_1673198034260_6 = func_1673198034260_10, optionalParam_1673198034260_420 ! : Array<UInt64> = [UInt64(195), UInt64(150), UInt64(242), UInt64(98), UInt64(2), UInt64(182), UInt64(109), UInt64(13), UInt64(71), UInt64(44)]) : Range<Int32> { // block id: 422
            var var_1673198034260_424 : Interface_1673198034260_152 = Class_1673198034260_146();
            var_1673198034260_424;
            var var_1673198034260_493 : Int16 = Int16(UInt16(Int16(-44)));
            try { // block id: 427
                Class_1673198034260_146.var_1673198034260_431
            } finally { // block id: 448
                ((), Int32(62))[0];
                let var_1673198034260_589 : Int8 = Int8(119);
                var var_1673198034260_592 : Int64 = (-118);
                match (((Int8(75)&127)..(Int8(41)&127):(((-106)|1)))) {
                    case caseVar_1673198034260_462 : Interface_1673198034260_154 => 
                        var var_1673198034260_466 : Int64 = 101;
                        var_1673198034260_466 >>= ((var_1673198034260_466) & 7);
                        let var_1673198034260_500 : Array<Bool> = [false, (() is (Unit, Int32)), true, (((UInt32(128)&127)..(UInt32(234)&127):(34|1)) is (UInt64, Float64, UInt8, UInt16) -> Struct_1673198034260_6), (Class_1673198034260_146() is UInt8), ([(() is Enum_1673198034260_17), false, true, true, true, (true is Array<Bool>), false, (((33&127)..=((-114)&127):(20|1)) is UInt16), true, (Struct_1673198034260_6() is Range<Int8>)] is Interface_1673198034260_152), (Class_1673198034260_146() is UInt32), (((Int32(-113)&127)..=(Int32(-33)&127):(14|1)) is (UInt32, Range<Int16>, Array<Bool>, Class_1673198034260_146, Range<Int8>, Range<UInt8>)), false, true];
                        if (var_1673198034260_404) { var_1673198034260_472 } else { (UInt32(228), ((var_1673198034260_493&127)..(var_1673198034260_493&127):(((-62)|1))), var_1673198034260_500, Class_1673198034260_146(), ((Int8(-16)&127)..(Int8(-80)&127):((-128)|1)), ((UInt8(4)&127)..(UInt8(70)&127):((91|1)))) } 
                    
                    case caseVar_1673198034260_540 : Interface_1673198034260_155 => 
                        ();
                        var var_1673198034260_551 : Int64 = 14;
                        let var_1673198034260_554 : Array<Bool> = [false, true, false, true, true, true, false, false, false, true];
                        var var_1673198034260_559 : Range<UInt8> = ((UInt8(Int8(Int8(-77)))&127)..=(UInt8(179)&127):(((-120)|1)));
                        if (var_1673198034260_404) { (var_1673198034260_56, ((Int16(121)&127)..(var_1673198034260_493&127):((var_1673198034260_551|1))), var_1673198034260_554, Class_1673198034260_146(), ((Int8(104)&127)..=(Int8(101)&127):((-90)|1)), var_1673198034260_559) } else { (UInt32(49), ((var_1673198034260_493&127)..(var_1673198034260_493&127):((var_1673198034260_551|1))), [var_1673198034260_404, false, false, var_1673198034260_404, var_1673198034260_404, var_1673198034260_404, false, var_1673198034260_404, true, false], var_1673198034260_584, ((Int8(38)&127)..(var_1673198034260_589&127):((var_1673198034260_592|1))), ((UInt8(232)&127)..=(UInt8(62)&127):(78|1))) } 
                    
                    case _ : Range<UInt64> => 
                        if (true) { (UInt32(195), ((Int16(-53)&127)..=(Int16(-59)&127):(117|1)), [true, true, false, false, false, false, false, false, true, true], Class_1673198034260_146(), ((Int8(-126)&127)..(Int8(90)&127):(21|1)), ((UInt8(163)&127)..(UInt8(156)&127):((-61)|1))) } else { var_1673198034260_472 } 
                    
                    case _ => 
                        ((UInt64(245)&127)..=(UInt64(248)&127):(((-86)|1)));
                        var var_1673198034260_642 : UInt8 = UInt8(33);
                        if (false) { (UInt32(219), var_1673198034260_619, [var_1673198034260_404, var_1673198034260_404, false, false, var_1673198034260_404, false, true, false, true, true], Class_1673198034260_146(), ((Int8(17)&127)..(Int8(45)&127):((-71)|1)), ((var_1673198034260_642&127)..=(var_1673198034260_642&127):(((-78)|1)))) } else { var_1673198034260_472 } 
                    
                }
            };
            (var_1673198034260_655 ?? var_1673198034260_664[0])[1]
        }
;
        var var_1673198034260_692 : (Interface_1673198034260_152, ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>), Rune, ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>), (String, Range<Int32>, (Unit, Int32), Range<Int8>)) = (Class_1673198034260_146(), (("""
O-4o${var_1673198034260_408}7
zI${var_1673198034260_408}^R${var_1673198034260_408}>
""", ((Int32(-120)&127)..(Int32(-76)&127):(115|1)), ((), Int32(32)), ((Int8(-26)&127)..(Int8(-47)&127):((-43)|1))), ((UInt32(246)&127)..=(UInt32(Int16(51))&127):((Int64(UInt64(156))|1)))), r'f', (("v${var_1673198034260_408}%${var_1673198034260_408}a${var_1673198034260_408}6I%nrQ/", ((Int32(0)&127)..(Int32(-117)&127):((-26)|1)), ((), Int32(42)), ((Int8(56)&127)..(Int8(-116)&127):((86|1)))), ((UInt32(59)&127)..(UInt32(241)&127):(120|1))), ("Ai${var_1673198034260_408}'j+J-SeB", ((Int32(79)&127)..(Int32(13)&127):((-61)|1)), ((), Int32(Int16(-17))), ((Int8(106)&127)..(Int8(Int8(-71))&127):((Int64(25)|1)))));
        let var_1673198034260_748 : ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>) = ((###"W${var_1673198034260_408}9iaPph_\\+"###, ((Int32(-61)&127)..(Int32(-114)&127):((-23)|1)), ((), Int32(89)), ((Int8(112)&127)..(Int8(100)&127):(((-73)|1)))), ((UInt32(53)&127)..=(UInt32(205)&127):((-64)|1)));
        func_1673198034260_353(try { // block id: 362
            var_1673198034260_198;
            [false, false, true, false, false, false, false, true, false, false];
            let var_1673198034260_367 : Bool = false;
            if (var_1673198034260_367) { var_1673198034260_370 } else { (UInt16(154), (((-71)&127)..((-76)&127):(82|1)), Enum_1673198034260_17.defaultValue, var_1673198034260_367, var_1673198034260_26, """
:Y)62
*jN/K
""") } 
        } finally { // block id: 393
            ((UInt8(244)&127)..=(UInt8(211)&127):((-19)|1));
            (var_1673198034260_397, var_1673198034260_400, Enum_1673198034260_17.defaultValue, var_1673198034260_404, var_1673198034260_397, var_1673198034260_408)
        }[2], func_1673198034260_412(), if (false) { // block id: 690
            var_1673198034260_692
        } else { // block id: 735
            var_1673198034260_397 & UInt16(48);
            var var_1673198034260_765 : (Unit, Int32) = ((), Int32(-74));
            if (false) { (var_1673198034260_743, var_1673198034260_664, r'T', var_1673198034260_748, (var_1673198034260_408, ((Int32(-64)&127)..(Int32(58)&127):((-102)|1)), var_1673198034260_765, ((Int8(-49)&127)..=(Int8(-25)&127):(123|1)))) } else { var_1673198034260_692 } 
        }[0], match ((((-84)&127)..((-86)&127):(126|1))) {
            case _ => 
                let var_1673198034260_789 : Int8 = Int8(-126);
                let var_1673198034260_797 : Int64 = Int64(UInt8(Int8(80)));
                [var_1673198034260_780, ((Int8(78)&127)..(Int8(-24)&127):((-102)|1)), ((var_1673198034260_789&127)..=(var_1673198034260_789&127):((84|1))), ((var_1673198034260_789&127)..=(Int8(34)&127):((var_1673198034260_797|1))), var_1673198034260_780, var_1673198034260_780, ((Int8(-103)&127)..(Int8(67)&127):((-67)|1)), ((var_1673198034260_806&127)..=(var_1673198034260_806&127):((var_1673198034260_797|1))), var_1673198034260_780, var_1673198034260_780]
            
        }[5]);
        var var_1673198034260_837 : Int16 = Int16(-124);
        var var_1673198034260_840 : Int16 = Int16(UInt16(Int8(42)));
        match (if (true) { // block id: 818
            (Option<Struct_1673198034260_6>.None, var_1673198034260_400, UInt16(192))
        } else { // block id: 823
            let var_1673198034260_825 : (Option<Struct_1673198034260_6>, Range<Int64>, UInt16) = (Option<Struct_1673198034260_6>.None, (((-20)&127)..=(21&127):((-41)|1)), UInt16(201));
            var_1673198034260_825
        }[0]) {
            case _ : UInt16 => 
                ();
                var_1673198034260_837 &= var_1673198034260_840;
                var_1673198034260_198
            
            case _ => 
                var_1673198034260_198
            
        }
    }
;
    static prop var_1673198034260_860 : Int64 { // block id: 861
        get() { // block id: 863
            (((-35)&127)..=(56&127):(96|1));
            (-122)
        }

    };
    private mut prop var_1673198034260_872 : UInt64 { // block id: 873
        get() { // block id: 875
            ();
            UInt64(122)
        }

        set(Value) { // block id: 880
            ((Int16(40)&127)..=(Int16(62)&127):(51|1));
            ();
            ()
        }

    };
    public static prop var_1673198034260_885 : Interface_1673198034260_156<Range<Int32>> { // block id: 886
        get() { // block id: 888
            Class_1673198034260_146()
        }

    };
    public static mut prop var_1673198034260_942 : Float64 { // block id: 943
        get() { // block id: 945
            """
 E&--
@AVh/
""";
            ();
            (-115.0);
            var_1673198034260_1271
        }

        set(Value) { // block id: 951
            UInt32(UInt8(Int8(Int8(-101))));
            Int8(UInt8(Int8(-95)));
            ();
            var_1673198034260_1271 = Value
        }

    };
    protected static func func_1673198034260_165<T0, T1>(namedParam_1673198034260_166 ! : Range<UInt16>, optionalParam_1673198034260_167 ! : UInt64 = UInt64(Int64(UInt32(125))), optionalParam_1673198034260_171 ! : Bool = (((Int32(-73)&127)..=(Int32(-30)&127):(((-57)|1))) is Int64)) : UInt8 { // block id: 177
        let var_1673198034260_188 : Bool = (((UInt32(49)&127)..(UInt32(111)&127):(32|1)) is Int8);
        let var_1673198034260_266 : (UInt32, Range<Int16>, Array<Bool>, Class_1673198034260_146, Range<Int8>, Range<UInt8>) = (UInt32(64), ((Int16(60)&127)..=(Int16(-2)&127):((95|1))), [((Class_1673198034260_146() as Struct_1673198034260_6) is Range<Int16>), false, false, (true is Float32), false, true, true, (((Int32(-61)&127)..=(Int32(-85)&127):(((-2)|1))) is Array<UInt64>), (() is Float32), false], Class_1673198034260_146(), ((Int8(Int8(Int8(47)))&127)..=(Int8(0)&127):((42|1))), ((UInt8(29)&127)..=(UInt8(226)&127):((Int64(56)|1))));
        let var_1673198034260_850 : String = "a{~j8`>,/)}";
        func func_1673198034260_252<T0, T1>() : Class_1673198034260_146 { // block id: 253
            var loopTimeVar_1673198034260_258 : Int64 = 0;
            while ((true) && loopTimeVar_1673198034260_258 < 100 ) {
                loopTimeVar_1673198034260_258++;

            };
            var var_1673198034260_311 : Array<Bool> = [false, true, true, false, false, false, false, false, false, true];
            try { // block id: 262
                var var_1673198034260_315 : Range<Int8> = ((Int8(78)&127)..=(Int8(-85)&127):(44|1));
                if (true) { var_1673198034260_266 } else { (var_1673198034260_56, var_1673198034260_308, var_1673198034260_311, Class_1673198034260_146(), var_1673198034260_315, ((UInt8(186)&127)..=(UInt8(150)&127):(112|1))) } 
            } finally { // block id: 318
                ();
                var_1673198034260_198;
                var var_1673198034260_853 : Float64 = Float64(Float32(68.0));
                if (true) { (var_1673198034260_56, ((Int16(45)&127)..=(Int16(48)&127):(111|1)), var_1673198034260_311, Class_1673198034260_146(), ((Int8(-63)&127)..=(Int8(-32)&127):((-15)|1)), ((UInt8(230)&127)..=(UInt8(132)&127):((-42)|1))) } else { (UInt32(205), var_1673198034260_308, [true, false, true, var_1673198034260_188, var_1673198034260_188, true, var_1673198034260_188, false, var_1673198034260_188, false], Class_1673198034260_146((), var_1673198034260_850, var_1673198034260_853), ((var_1673198034260_806&127)..(Int8(21)&127):((var_1673198034260_860|1))), ((UInt8(92)&127)..=(UInt8(158)&127):((var_1673198034260_860|1)))) } 
            }[3]
        }
;
        var loopTimeVar_1673198034260_891 : Int64 = 0;
        do {
            loopTimeVar_1673198034260_891++;
            var var_1673198034260_240 : Int64 = 120;
            match (Int8(-16)) {
                case -37 | -49 | 109 | 5 => 
                    var_1673198034260_198
                
                case -37 | -96 | -45 | 95 => 
                    var_1673198034260_198;
                    var_1673198034260_198
                
                case _ => 
                    var_1673198034260_198;
                    var_1673198034260_240 %= ((117) | 1)
                
            };
            func func_1673198034260_244(namedParam_1673198034260_245 ! : Interface_1673198034260_156<Range<Int32>>, optionalParam_1673198034260_246 ! : Struct_1673198034260_6 = Struct_1673198034260_6()) : Unit { // block id: 248
                func_1673198034260_252<Struct_1673198034260_6, Option<Struct_1673198034260_6>>().var_1673198034260_872--
            }
;
            func_1673198034260_244(namedParam_1673198034260_245 : var_1673198034260_885)
        } while ((if ([true, false, false, false, false, var_1673198034260_188, true, false, false, var_1673198034260_188][2]) { // block id: 196
            var_1673198034260_198;
            var_1673198034260_56 == UInt32(82)
        } else { // block id: 203
            var_1673198034260_206++;
            var_1673198034260_26 & UInt16(75);
            var_1673198034260_188
        }) && loopTimeVar_1673198034260_891 < 100 ) ;
        var_1673198034260_198;
        var var_1673198034260_912 : Int16 = Int16(Int16(Int8(Int8(UInt8(16)))));
        try { // block id: 894
            if (false) { // block id: 897

            };
            UInt8(var_1673198034260_93)
        } finally { // block id: 900
            var loopTimeVar_1673198034260_919 : Range<UInt64> = ((UInt64(228)&127)..(UInt64(98)&127):((Int64(UInt64(Int32(-21)))|1)));
            for (i in loopTimeVar_1673198034260_919 where var_1673198034260_188) {
                if (false) { Class_1673198034260_146() } else { var_1673198034260_908 } ;
                var_1673198034260_912 <<= ((var_1673198034260_912) & 7)
            };
            try (resource = Class_1673198034260_146()) { // block id: 927
                (var_1673198034260_26, ((var_1673198034260_860&127)..=(var_1673198034260_860&127):((var_1673198034260_860|1))), Enum_1673198034260_17.defaultValue, true, UInt16(98), var_1673198034260_850);
                Class_1673198034260_146((), var_1673198034260_850, var_1673198034260_942, optionalParam_1673198034260_349 : Class_1673198034260_146());
                ()
            } finally { // block id: 962

            };
            match (Enum_1673198034260_964.defaultValue) {
                case _ => 
                    (var_1673198034260_198, var_1673198034260_37);
                    UInt8(161)
                
            }
        }
    }
;
    public static var var_1673198034260_996 : Option<Struct_1673198034260_6> = Option<Struct_1673198034260_6>.None;
    private static let var_1673198034260_1018 : Range<UInt16> = ((UInt16(92)&127)..(UInt16(137)&127):((-100)|1));
    static func func_1673198034260_159(optionalParam_1673198034260_160 ! : Int32 = Int32(UInt16(149))) : UInt8 { // block id: 163
        let var_1673198034260_984 : Bool = (r'z' is (UInt64, Float64, UInt8, UInt16) -> Struct_1673198034260_6);
        func_1673198034260_165<Enum_1673198034260_17, Option<(String, Range<Int32>, (Unit, Int32), Range<Int8>)>>(namedParam_1673198034260_166 : if (match (Class_1673198034260_146(var_1673198034260_198, """
LZ3Qb
g$U[!
""", var_1673198034260_942)) {
            case _ => 
                ();
                var_1673198034260_984
            
            case caseVar_1673198034260_989 => 
                if (var_1673198034260_984) { Option<Struct_1673198034260_6>.Some(var_1673198034260_77) } else { var_1673198034260_996 } ;
                Class_1673198034260_146();
                false
            
            case caseVar_1673198034260_1002 : (UInt16, Range<Int64>, Enum_1673198034260_17, Bool, UInt16, String) => 
                Enum_1673198034260_17.defaultValue;
                true
            
            case _ => 
                ();
                var_1673198034260_431;
                var_1673198034260_984
            
        }) { (Option<Range<UInt16>>.None ?? var_1673198034260_1018) } else { match (Int32(110)) {
            case _ => 
                var_1673198034260_198;
                var_1673198034260_1018
            
        } } )
    }
;
    mut prop var_1673198034260_1121 : Unit { // block id: 1122
        get() { // block id: 1124
            ()
        }

        set(Value) { // block id: 1128
            ();
            ()
        }

    };
    static var var_1673198034260_1271 : Float64 = (-1.0)
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}


public enum Enum_1673198034260_964 {
    defaultValue
}

public func func_1673198034260_141<T0>(param_1673198034260_142 : Array<UInt64>) : Bool { // block id: 143
    ((Class_1673198034260_146.func_1673198034260_159(optionalParam_1673198034260_160 : Int32(26))) is Range<Int8>)
}

main(): Int64 {
    try {
        let var_1673198034260_86 : Float64 = Float64(Float64(Float64(Float64(Float32(91.0)))));
        func_1673198034260_10(var_1673198034260_81, namedParam_1673198034260_12 : var_1673198034260_86, namedParam_1673198034260_13 : var_1673198034260_93, namedParam_1673198034260_14 : var_1673198034260_26).func_1673198034260_97(125.0, namedParam_1673198034260_102 : var_1673198034260_81, optionalParam_1673198034260_103 : Int8(-67));
        var_1673198034260_1118.var_1673198034260_1121;
        var var_1673198034260_1153 : Bool = (UInt16(UInt16(Int8(UInt8(227)))) is Interface_1673198034260_151<Int32>);
        var var_1673198034260_1160 : ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>) = (("""
Ngp}d
RCg]J
""", ((Int32(-128)&127)..=(Int32(77)&127):((-79)|1)), ((), Int32(UInt32(62))), ((Int8(-11)&127)..=(Int8(-34)&127):((-2)|1))), ((UInt32(38)&127)..=(UInt32(151)&127):((-64)|1)));
        let var_1673198034260_1172 : ((String, Range<Int32>, (Unit, Int32), Range<Int8>), Range<UInt32>) = (("a{$/yA|m],r", ((Int32(-8)&127)..(Int32(-109)&127):(3|1)), ((), Int32(9)), ((Int8(81)&127)..(Int8(-25)&127):(71|1))), ((UInt32(235)&127)..(UInt32(158)&127):((Int64(Int8(UInt8(158)))|1))));
        let var_1673198034260_1207 : Float32 = Float32(Float32(Float32(-48.0)));
        match (match (var_1673198034260_1134) {
            case (_ : Range<UInt8>,caseVar_1673198034260_1144 : Float32,_,_ : Range<Int16>,_,_) => 
                Class_1673198034260_146((), ";TAPke#Ua9", var_1673198034260_86, optionalParam_1673198034260_349 : Class_1673198034260_146());
                if (var_1673198034260_1153) { var_1673198034260_1160 } else { var_1673198034260_1172 } 
            
            case _ => 
                ();
                var_1673198034260_1191;
                var_1673198034260_1172
            
        }) {
            case _ : Option<Range<UInt16>> => 
                77
            
            case (_ : Option<(String, Range<Int32>, (Unit, Int32), Range<Int8>)>,_ : Range<Int64>) => 
                62
            
            case _ => 
                var_1673198034260_1207 * var_1673198034260_1207;
                var_1673198034260_1213;
                var var_1673198034260_1218 : Int64 = 92;
                var_1673198034260_1218
            
            case _ => 
                if (var_1673198034260_1153) { var_1673198034260_1225 } else { var_1673198034260_1225 } ;
                (-11) << ((57) & 7)
            
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1673198034260_26*var_1673198034260_26), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_37*var_1673198034260_37), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_56*var_1673198034260_56), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_81*var_1673198034260_81), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_93*var_1673198034260_93), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_397*var_1673198034260_397), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_806*var_1673198034260_806), 64)
        crccheck.updateBuffer(UInt64(var_1673198034260_1048*var_1673198034260_1048), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Enum_1673198034260_964 {

}

