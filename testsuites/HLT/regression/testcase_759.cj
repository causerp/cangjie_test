/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

const var_1748351801228_33: Int64 = -60
public const var_1748351801228_92: Unit = ()
@Deprecated
public var var_1748351801228_96: Int8 = Int8(Int8(-95))
internal var var_1748351801228_160: UInt16 = UInt16(Int8(Int8(Int8(UInt8(96)))))
let var_1748351801228_185: Class_1748351801228_181 = Class_1748351801228_181()
public var var_1748351801228_221: Bool = (Float64(Float32(104.0)) is (Int8, Unit, Option<UInt16>, UInt32, Option<UInt16>, 
    Int8, Int64, Int8, Option<UInt16>))
var var_1748351801228_341: Float32 = Float32(Float32(-94.0))
public var var_1748351801228_350: UInt16 = UInt16(52)
public var var_1748351801228_479: ?String = Option<String>.None
public let var_1748351801228_606: Range<UInt64> = ((UInt64(UInt64(196)) & 127)..=(UInt64(UInt64(UInt64(80))) & 127) : (Int64(UInt32(UInt8(UInt8(105)))) |
    1))
var var_1748351801228_626: String = "oG;-k~2iQI"
var var_1748351801228_833: (Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>) = (Float32(-58.0), ((UInt8(UInt8(188)) &
        127)..(UInt8(UInt8(133)) & 127) : (Int64(-117) | 1)), Option<Unit>.None, ((Int32(Int32(118)) & 127)..(Int32(Int32(-52)) &
        127) : (Int64(76) | 1)), ([Option<Unit>.None,
        (([UInt64(164), UInt64(189), UInt64(136), UInt64(215), UInt64(138), UInt64(199), UInt64(29), UInt64(163),
            UInt64(223), UInt64(204)], Int8(-123), Float32(52.0), [Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None], (Int8(-97), (), Option<UInt16>.None, UInt32(169), Option<UInt16>
                .None, Int8(-109), Int64(50), Int8(73), Option<UInt16>.None), [UInt64(23), UInt64(48), UInt64(198),
            UInt64(44), UInt64(211), UInt64(230), UInt64(88), UInt64(199), UInt64(189), UInt64(229)], Int8(-28)) as Unit),
        Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, (Class_1748351801228_181() as Unit),
        (Int32(24) as Unit),
        (([UInt64(212), UInt64(254), UInt64(8), UInt64(149), UInt64(13), UInt64(85), UInt64(140), UInt64(183),
            UInt64(41), UInt64(7)], Int8(96), Float32(55.0), [Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.None], (Int8(-37), (), Option<UInt16>.None, UInt32(155), Option<UInt16>.None,
            Int8(-3), Int64(-8), Int8(99), Option<UInt16>.None), [UInt64(190), UInt64(120), UInt64(82), UInt64(43),
            UInt64(62), UInt64(157), UInt64(113), UInt64(212), UInt64(121), UInt64(9)], Int8(117)) as Unit),
        ((Int8(-121), (), Option<UInt16>.None, UInt32(49), Option<UInt16>.None, Int8(-70), Int64(-36), Int8(93), Option<UInt16>
            .None) as Unit)] as Bool))
public var var_1748351801228_975: Int16 = Int16(UInt16(UInt8(Int8(UInt8(17)))))
public var var_1748351801228_982: Int16 = Int16(-117)
let var_1748351801228_993: UInt64 = UInt64(164)
public var var_1748351801228_1042: (String, (Class_1748351801228_40, Int64, Range<Int8>, String, Range<UInt64>), Array<Option<Bool>>, 
    Option<Unit>, Int32) = ("H!${var_1748351801228_626}U${var_1748351801228_626}@X>Tb${var_1748351801228_626}?${var_1748351801228_626}4${var_1748351801228_626}",
    (Class_1748351801228_40(), Int64(Int64(UInt64(163))), ((Int8(Int8(UInt8(32))) & 127)..=(Int8(Int8(-76)) & 127) : (Int64(-19) |
            1)), "L.Pq${var_1748351801228_626}aHag$a${var_1748351801228_626}", ((UInt64(UInt64(174)) & 127)..(UInt64(UInt64(72)) &
            127) : (Int64(-102) | 1))), [(() as Bool),
        ([Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None,
        Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None] as Bool),
        Option<Bool>.None, (Float64(Float64(121.0)) as Bool),
        ((Float32(79.0), ((UInt8(UInt8(114)) & 127)..(UInt8(UInt8(194)) & 127) : (Int64(86) | 1)), Option<Unit>.None, ((Int32(Int32(4)) &
            127)..(Int32(Int32(-106)) & 127) : (Int64(113) | 1)), Option<Bool>.None) as Bool),
        (Option<UInt16>.None as Bool), (UInt8(Int8(101)) as Bool), ("""
$u${var_1748351801228_626}w+~
6R=-!
""" as Bool),
        Option<Bool>.None, Option<Bool>.None], Option<Unit>.None, Int32(Int8(UInt8(113))))
var var_1748351801228_1122: UInt8 = UInt8(Int8(Int8(-68)))
public let var_1748351801228_1324: (Array<VArray<Int16, $6>>, VArray<Int16, $6>, Int16, Option<(Float32, Range<UInt8>, 
    Option<Unit>, Range<Int32>, Option<Bool>)>, Range<UInt8>) = ([VArray<Int16, $6>(repeat: Int16(-14)),
        VArray<Int16, $6>({i => Int16(-25)}), VArray<Int16, $6>({i => Int16(25)}),
        VArray<Int16, $6>(repeat: Int16(UInt8(215))), VArray<Int16, $6>(repeat: Int16(Int8(119))),
        VArray<Int16, $6>({i => Int16(124)}), VArray<Int16, $6>(repeat: Int16(UInt8(103))),
        VArray<Int16, $6>(repeat: Int16(Int16(-19))), VArray<Int16, $6>(repeat: Int16(Int16(-59))),
        VArray<Int16, $6>(repeat: Int16(64))], VArray<Int16, $6>(repeat: Int16(Int16(UInt16(45)))), Int16(-99), ((Int8(102),
        (), Option<UInt16>.None, UInt32(146), Option<UInt16>.None, Int8(UInt8(63)), Int64(3), Int8(UInt8(140)), Option<UInt16>
            .None) as (Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>)), ((UInt8(UInt8(61)) & 127)..=(UInt8(UInt8(52)) &
        127) : (Int64(126) | 1)))
public var var_1748351801228_1491: UInt32 = UInt32(Int16(-50))
public var var_1748351801228_1497: (Option<UInt16>, Option<String>, String, Bool, Int64, Float32, String, UInt8, Array<Range<UInt8>>) = ((UInt8(31) as UInt16),
    (Option<Bool>.None as String), "!h>[4${var_1748351801228_626}b9R${var_1748351801228_626}`!", ((Option<Unit>.None, ([UInt64(4),
                UInt64(9), UInt64(99), UInt64(1), UInt64(51), UInt64(55), UInt64(101), UInt64(131), UInt64(153),
                UInt64(203)], Int8(-102), Float32(105.0), [Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
                Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
                Option<Unit>.None, Option<Unit>.None], (Int8(-52), (), Option<UInt16>.None, UInt32(0), Option<UInt16>
                    .None, Int8(-48), Int64(-8), Int8(29), Option<UInt16>.None), [UInt64(213), UInt64(165), UInt64(143),
                UInt64(7), UInt64(88), UInt64(168), UInt64(116), UInt64(120), UInt64(230), UInt64(123)], Int8(-29)),
        Int64(-105), ((UInt8(UInt8(65)) & 127)..(UInt8(UInt8(176)) & 127) : (Int64(81) | 1)), (UInt64(33) as Array<VArray<Int16, $6>>),
        (Float32(-99.0), ((UInt8(UInt8(140)) & 127)..=(UInt8(UInt8(147)) & 127) : (Int64(-46) | 1)), Option<Unit>.None, ((Int32(Int32(101)) &
                127)..=(Int32(Int32(-117)) & 127) : (Int64(-41) | 1)), Option<Bool>.None)) is Interface_1748351801228_43<UInt64,
        UInt64>), Int64(13), Float32(-94.0), "5+k%S}${var_1748351801228_626}a;I*", UInt8(Int8(Int8(-61))), [((UInt8(UInt8(184)) &
        127)..(UInt8(UInt8(24)) & 127) : (Int64(95) | 1)),
        ((UInt8(UInt8(63)) & 127)..=(UInt8(UInt8(253)) & 127) : (Int64(-14) | 1)),
        ((UInt8(UInt8(237)) & 127)..(UInt8(UInt8(141)) & 127) : (Int64(83) | 1)),
        ((UInt8(UInt8(247)) & 127)..=(UInt8(UInt8(6)) & 127) : (Int64(39) | 1)),
        ((UInt8(UInt8(61)) & 127)..(UInt8(UInt8(206)) & 127) : (Int64(42) | 1)),
        ((UInt8(UInt8(35)) & 127)..=(UInt8(UInt8(Int8(99))) & 127) : (Int64(UInt64(188)) | 1)),
        ((UInt8(UInt8(199)) & 127)..(UInt8(UInt8(117)) & 127) : (Int64(UInt8(68)) | 1)),
        ((UInt8(UInt8(68)) & 127)..=(UInt8(UInt8(250)) & 127) : (Int64(125) | 1)),
        ((UInt8(UInt8(85)) & 127)..=(UInt8(UInt8(122)) & 127) : (Int64(-84) | 1)),
        ((UInt8(UInt8(170)) & 127)..(UInt8(UInt8(68)) & 127) : (Int64(17) | 1))])
var var_1748351801228_1604: Int32 = Int32(123)
var var_1748351801228_1836: Range<UInt8> = ((UInt8(UInt8(8)) & 127)..(UInt8(UInt8(12)) & 127) : (Int64(-116) | 1))
public var var_1748351801228_1907: Array<Range<UInt8>> = [((UInt8(UInt8(Int8(UInt8(111)))) & 127)..(UInt8(UInt8(163)) &
    127) : (Int64(Int16(UInt8(145))) | 1)), ((UInt8(UInt8(124)) & 127)..(UInt8(UInt8(233)) & 127) : (Int64(36) | 1)),
    ((UInt8(UInt8(165)) & 127)..(UInt8(UInt8(116)) & 127) : (Int64(76) | 1)),
    ((UInt8(UInt8(216)) & 127)..(UInt8(UInt8(136)) & 127) : (Int64(36) | 1)),
    ((UInt8(UInt8(77)) & 127)..(UInt8(UInt8(52)) & 127) : (Int64(Int32(-56)) | 1)),
    ((UInt8(UInt8(Int8(UInt8(80)))) & 127)..(UInt8(UInt8(85)) & 127) : (Int64(-90) | 1)),
    ((UInt8(UInt8(Int8(UInt8(92)))) & 127)..(UInt8(UInt8(UInt8(Int8(-40)))) & 127) : (Int64(62) | 1)),
    ((UInt8(UInt8(26)) & 127)..(UInt8(UInt8(40)) & 127) : (Int64(Int16(Int8(69))) | 1)),
    ((UInt8(UInt8(216)) & 127)..=(UInt8(UInt8(93)) & 127) : (Int64(71) | 1)),
    ((UInt8(UInt8(Int8(-34))) & 127)..(UInt8(UInt8(50)) & 127) : (Int64(109) | 1))]
let var_1748351801228_2131: (Unit, Int8, Range<UInt16>, Range<UInt8>) = ((), Int8(10), ((UInt16(UInt16(11)) & 127)..(UInt16(UInt16(87)) &
        127) : (Int64(-74) | 1)), ((UInt8(UInt8(Int8(UInt8(165)))) & 127)..=(UInt8(UInt8(9)) & 127) : (Int64(11) | 1)))

@Frozen
public const func func_1748351801228_29<T0, T1>(param_1748351801228_30: T1): Int64 { // block id: 31
    var_1748351801228_33
}

public sealed interface Interface_1748351801228_46 {}

public sealed interface Interface_1748351801228_47<T0> {}

public interface Interface_1748351801228_45 <: Interface_1748351801228_46 & Interface_1748351801228_47<UInt16> {
    func func_1748351801228_53(): Int64 { // block id: 54
        Int64((var_1748351801228_185.var_1748351801228_188 |> {
            lambdaParameter_1748351801228_122: Int32 =>
                let var_1748351801228_136: Int8 = Int8(UInt8(UInt8(65)));
                let var_1748351801228_142: ?UInt16 = (UInt8(134) as UInt16);
                (try { // block id: 132
                    var_1748351801228_92;
                    var var_1748351801228_146: UInt32 = UInt32(UInt32(Int32(Int16(16))));
                    (var_1748351801228_136, var_1748351801228_92, var_1748351801228_142, var_1748351801228_146, Option<UInt16>
                            .None, var_1748351801228_136, Int64(-27), Int8(-64), var_1748351801228_142)
                } finally { // block id: 156
                    Int64(-82);
                    var_1748351801228_160 += UInt16(53)
                    (Int8(-77), var_1748351801228_92, var_1748351801228_142, UInt32(244), var_1748351801228_142,
                        var_1748351801228_136, var_1748351801228_33, Int8(8), Option<UInt16>.Some(UInt16(98)))
                }[4] ?? UInt16(120))
        }))
    }
}

public interface Interface_1748351801228_48 <: Interface_1748351801228_46 & Interface_1748351801228_45 {
    func func_1748351801228_53(): Int64 { // block id: 1104
        try { // block id: 1108
            var_1748351801228_993;
            ();
            ((), var_1748351801228_96, ((UInt16(UInt16(94)) & 127)..=(UInt16(var_1748351801228_350) & 127) : (Int64(15) |
                    1)), ((UInt8(UInt8(37)) & 127)..(UInt8(UInt8(196)) & 127) : (Int64(-109) | 1)))
        } catch (e: Exception) { // block id: 1119
            var_1748351801228_1122 = UInt8(18)
            let var_1748351801228_1128: (Unit, Int8, Range<UInt16>, Range<UInt8>) = ((), Int8(5), ((UInt16(UInt16(69)) &
                    127)..(UInt16(UInt16(236)) & 127) : (Int64(-101) | 1)), ((UInt8(UInt8(230)) & 127)..=(UInt8(UInt8(129)) &
                    127) : (Int64(-38) | 1)));
            var_1748351801228_1128
        }[0];
        let var_1748351801228_1145: (Option<Unit>, (Array<UInt64>, Int8, Float32, Array<Option<Unit>>, (Int8, Unit, 
            Option<UInt16>, UInt32, Option<UInt16>, Int8, Int64, Int8, Option<UInt16>), Array<UInt64>, Int8), Int64, 
            Range<UInt8>, Option<Array<VArray<Int16, $6>>>, (Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>)) = (((Int64(UInt8(228)) as Unit) as Unit),
            ([UInt64(139), UInt64(75), UInt64(181), UInt64(73), UInt64(22), UInt64(79), UInt64(212), UInt64(136),
                    UInt64(143), UInt64(248)], Int8(-104), Float32(-92.0), [Option<Unit>.Some(()),
                    ([Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()),
                    Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None] as Unit),
                    (((Int8(Int8(111)) & 127)..(Int8(Int8(-106)) & 127) : (Int64(124) | 1)) as Unit),
                    (((), Int8(-36), ((UInt16(UInt16(51)) & 127)..(UInt16(UInt16(113)) & 127) : (Int64(-87) | 1)), ((UInt8(UInt8(103)) &
                        127)..(UInt8(UInt8(0)) & 127) : (Int64(-51) | 1))) as Unit),
                    (((Int8(Int8(-109)) & 127)..=(Int8(Int8(-17)) & 127) : (Int64(-74) | 1)) as Unit),
                    Option<Unit>.Some(()), Option<Unit>.None,
                    (((Int32(Int32(-120)) & 127)..(Int32(Int32(83)) & 127) : (Int64(-60) | 1)) as Unit),
                    ("^H1gnA;GcZ" as Unit), (false as Unit)], (Int8(Int8(-50)), (), (Option<String>.Some("0MhgApZ m[") as UInt16),
                    UInt32(UInt8(99)), (Int64(66) as UInt16), Int8(54), Int64(UInt64(90)), Int8(-124),
                    Option<UInt16>.Some(UInt16(97))), [UInt64(116), UInt64(53), UInt64(252), UInt64(117), UInt64(214),
                    UInt64(254), UInt64(2), UInt64(175), UInt64(214), UInt64(54)], Int8(Int8(Int8(-3)))), Int64(-110), ((UInt8(UInt8(Int8(UInt8(208)))) &
                127)..(UInt8(UInt8(2)) & 127) : (Int64(Int64(Int32(-125))) | 1)), Option<Array<VArray<Int16, $6>>>
                .Some(
                    [VArray<Int16, $6>({i => Int16(-123)}), VArray<Int16, $6>({i => Int16(-77)}),
                        VArray<Int16, $6>({i => Int16(-15)}), VArray<Int16, $6>({i => Int16(-103)}),
                        VArray<Int16, $6>(repeat: Int16(121)), VArray<Int16, $6>({i => Int16(-112)}),
                        VArray<Int16, $6>({i => Int16(121)}), VArray<Int16, $6>({i => Int16(-51)}),
                        VArray<Int16, $6>({i => Int16(27)}), VArray<Int16, $6>(repeat: Int16(64))]), (Float32(9.0), ((UInt8(UInt8(70)) &
                    127)..=(UInt8(UInt8(219)) & 127) : (Int64(17) | 1)), (((Int64(Int64(7)) & 127)..(Int64(Int64(91)) &
                    127) : (Int64(-44) | 1)) as Unit), ((Int32(Int32(40)) & 127)..=(Int32(Int32(-109)) & 127) : (Int64(-53) |
                    1)), ((Float32(-75.0), ((UInt8(UInt8(114)) & 127)..(UInt8(UInt8(77)) & 127) : (Int64(-122) | 1)),
                    Option<Unit>.Some(()), ((Int32(Int32(-66)) & 127)..(Int32(Int32(35)) & 127) : (Int64(0) | 1)),
                    Option<Bool>.Some(true)) as Bool)));
        (var_1748351801228_1145[4] ?? var_1748351801228_1324[0])[9];
        var var_1748351801228_1467: Array<Range<UInt8>> = [((UInt8(UInt8(60)) & 127)..=(UInt8(UInt8(197)) & 127) : (Int64(-84) |
            1)), ((UInt8(UInt8(144)) & 127)..=(UInt8(UInt8(197)) & 127) : (Int64(-122) | 1)),
            ((UInt8(UInt8(98)) & 127)..(UInt8(UInt8(33)) & 127) : (Int64(81) | 1)),
            ((UInt8(UInt8(8)) & 127)..(UInt8(UInt8(154)) & 127) : (Int64(-63) | 1)),
            ((UInt8(UInt8(84)) & 127)..(UInt8(UInt8(106)) & 127) : (Int64(22) | 1)),
            ((UInt8(UInt8(231)) & 127)..(UInt8(UInt8(173)) & 127) : (Int64(-119) | 1)),
            ((UInt8(UInt8(152)) & 127)..(UInt8(UInt8(114)) & 127) : (Int64(-124) | 1)),
            ((UInt8(UInt8(38)) & 127)..=(UInt8(UInt8(109)) & 127) : (Int64(103) | 1)),
            ((UInt8(UInt8(37)) & 127)..(UInt8(UInt8(172)) & 127) : (Int64(75) | 1)),
            ((UInt8(UInt8(65)) & 127)..(UInt8(UInt8(25)) & 127) : (Int64(22) | 1))];
        let var_1748351801228_1475: Unit = ();
        var var_1748351801228_1478: UInt32 = UInt32(137);
        try { // block id: 1462
            var_1748351801228_350;
            var_1748351801228_1467[6];
            var_1748351801228_33
        } catch (_) { // block id: 1471
            try { // block id: 1473
                var_1748351801228_1475;
                var_1748351801228_1478
            } catch (_) { // block id: 1480
                ();
                ((UInt64(UInt64(203)) & 127)..(UInt64(UInt64(175)) & 127) : (Int64(-116) | 1));
                UInt32(226) + UInt32(156)
            } finally { // block id: 1486
                var_1748351801228_92;
                -Float32(125.0)
                var_1748351801228_1491
            };
            var_1748351801228_1497[4]
        }
    }
}

public sealed interface Interface_1748351801228_44 <: Interface_1748351801228_45 & Interface_1748351801228_48 {
    func func_1748351801228_53(): Int64 { // block id: 281
        var var_1748351801228_291: UInt8 = UInt8(Int8(-77));
        const var_1748351801228_307: UInt32 = 85;
        var loopTimeVar_1748351801228_321: Int64 = 0;
        while ((if (match (UInt16(85)) {
                case _ =>
                    var_1748351801228_291 %= ((var_1748351801228_291) | 1)
                    false
            }) { // block id: 296
                var var_1748351801228_299: Bool = (UInt16(213) is Int64);
                var_1748351801228_299 ||= var_1748351801228_221
                var_1748351801228_299
            } else { // block id: 304
                var_1748351801228_307 < UInt32(239)
            }) && loopTimeVar_1748351801228_321 < 100) {
            loopTimeVar_1748351801228_321++;
            var loopTimeVar_1748351801228_316: Int64 = 0;
            do {
                loopTimeVar_1748351801228_316++;
                var_1748351801228_92
            } while ((var_1748351801228_221) && loopTimeVar_1748351801228_316 < 100);
            (Option<Unit>.None ?? ())
        };
        var var_1748351801228_998: Rune = r't';
        var var_1748351801228_1012: Int64 = Int64(114);
        (((Class_1748351801228_181(
                ((UInt64(var_1748351801228_993) & 127)..(UInt64(var_1748351801228_993) & 127) : (var_1748351801228_33 | 1)),
                optionalParam_1748351801228_724: var_1748351801228_998,
                namedParam_1748351801228_726: [var_1748351801228_993, var_1748351801228_993, var_1748351801228_993,
                    UInt64(31), UInt64(247), var_1748351801228_993, var_1748351801228_993, var_1748351801228_993,
                    UInt64(218), UInt64(140)]), var_1748351801228_1012, ((Int8(Int8(83)) & 127)..=(Int8(var_1748351801228_96) &
                127) : (var_1748351801228_33 | 1)), "/JEJ_v2xZ}", ((UInt64(UInt64(209)) & 127)..=(UInt64(UInt64(247)) &
                127) : (Int64(40) | 1)))[0] |> func_1748351801228_328) ?? try { // block id: 1022
            ();
            if (var_1748351801228_221) {
                var_1748351801228_626
            } else {
                var_1748351801228_626
            }
        } catch (e: Exception) { // block id: 1028
            var_1748351801228_96 &= var_1748351801228_96
            "$n&`@%]zT("
        });
        Int64((Option<(String, (Class_1748351801228_40, Int64, Range<Int8>, String, Range<UInt64>), Array<Option<Bool>>, 
                Option<Unit>, Int32)>.None ?? var_1748351801228_1042)[4])
    }
}

public sealed interface Interface_1748351801228_43<T0, T1> <: Interface_1748351801228_44 {
    func func_1748351801228_53(): Int64 { // block id: 1601
        Int64(var_1748351801228_1604)
    }
}

public open class Class_1748351801228_40 <: Interface_1748351801228_43<UInt64, UInt64> {
    @Frozen
    public init() { // block id: 42

    }

    public var var_1748351801228_260: Int = Int64(66);
    mut prop var_1748351801228_1625: ?UInt16 { // block id: 1626
        get() { // block id: 1628
            ();
            (((Int32(Int32(23)) & 127)..=(Int32(Int32(-79)) & 127) : (Int64(Int32(120)) | 1)) as UInt16)
        }
        set(Value) { // block id: 1638
            ();
            ()
        }
    }
    private static let var_1748351801228_1643: (Int8, Unit, Option<UInt16>, UInt32, Option<UInt16>, Int8, Int64, Int8, 
        Option<UInt16>) = (Int8(93), (), Option<UInt16>.None, UInt32(78), Option<UInt16>.None, Int8(46), Int64(1), Int8(-82),
        Option<UInt16>.None);
    var var_1748351801228_1658: Range<Int16> = ((Int16(Int16(35)) & 127)..(Int16(Int16(76)) & 127) : (Int64(15) | 1));
    private static var var_1748351801228_1745: ??UInt16 = Option<Option<UInt16>>.None;
    public open override func func_1748351801228_53(): Int64 { // block id: 1607
        var var_1748351801228_1701: Array<Range<UInt8>> = [((UInt8(UInt8(UInt8(95))) & 127)..=(UInt8(UInt8(Int8(4))) &
            127) : (Int64(Int32(UInt8(149))) | 1)),
            ((UInt8(UInt8(83)) & 127)..=(UInt8(UInt8(129)) & 127) : (Int64(-98) | 1)),
            ((UInt8(UInt8(79)) & 127)..=(UInt8(UInt8(243)) & 127) : (Int64(83) | 1)),
            ((UInt8(UInt8(248)) & 127)..(UInt8(UInt8(123)) & 127) : (Int64(-78) | 1)),
            ((UInt8(UInt8(200)) & 127)..(UInt8(UInt8(119)) & 127) : (Int64(-32) | 1)),
            ((UInt8(UInt8(UInt8(170))) & 127)..=(UInt8(UInt8(62)) & 127) : (Int64(UInt32(UInt32(134))) | 1)),
            ((UInt8(UInt8(UInt8(67))) & 127)..=(UInt8(UInt8(Int8(13))) & 127) : (Int64(UInt16(UInt8(131))) | 1)),
            ((UInt8(UInt8(Int8(Int8(117)))) & 127)..(UInt8(UInt8(Int8(-84))) & 127) : (Int64(-60) | 1)),
            ((UInt8(UInt8(53)) & 127)..=(UInt8(UInt8(170)) & 127) : (Int64(-65) | 1)),
            ((UInt8(UInt8(74)) & 127)..=(UInt8(UInt8(134)) & 127) : (Int64(9) | 1))];
        var var_1748351801228_1750: ?(Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>) = Option<(Float32, 
                Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>)>.Some(
            (Float32(Float32(Float32(-66.0))), ((UInt8(UInt8(87)) & 127)..=(UInt8(UInt8(167)) & 127) : (Int64(-35) | 1)),
                ([UInt64(191), UInt64(123), UInt64(82), UInt64(199), UInt64(84), UInt64(149), UInt64(243), UInt64(224),
                    UInt64(205), UInt64(47)] as Unit), ((Int32(Int32(50)) & 127)..(Int32(Int32(-53)) & 127) : (Int64(UInt16(84)) |
                    1)), Option<Bool>.Some(true)));
        (try { // block id: 1612
                ();
                (Int8(-72), (), Option<UInt16>.None, var_1748351801228_1491, Option<UInt16>.Some(UInt16(219)), Int8(-87),
                    var_1748351801228_260, var_1748351801228_96, var_1748351801228_1625)
            } finally { // block id: 1641
                var_1748351801228_1643
            }, if (var_1748351801228_221) { // block id: 1656
                var_1748351801228_1658
            } else if (true) { // block id: 1664
                let var_1748351801228_1667: Option<Bool> = Option<Bool>.Some(false);
                [var_1748351801228_1667, Option<Bool>.None, var_1748351801228_1667, var_1748351801228_1667,
                    var_1748351801228_1667, Option<Bool>.None, Option<Bool>.None, Option<Bool>.None,
                    var_1748351801228_1667, var_1748351801228_1667];
                var_1748351801228_92;
                ((Int16(var_1748351801228_982) & 127)..(Int16(var_1748351801228_975) & 127) : (Int64(-7) | 1))
            } else { // block id: 1684
                if (var_1748351801228_221) {
                    ((Int16(Int16(8)) & 127)..(Int16(Int16(67)) & 127) : (Int64(-122) | 1))
                } else {
                    var_1748351801228_1658
                }
            }, [UInt32(167), UInt32(122), UInt32(158), UInt32(177), UInt32(75), UInt32(43), UInt32(241), UInt32(14),
                UInt32(248), UInt32(152)][1], try { // block id: 1694
                let var_1748351801228_1696: Array<Range<UInt8>> = [((UInt8(UInt8(207)) & 127)..(UInt8(UInt8(220)) & 127) : (Int64(-64) |
                    1)), ((UInt8(UInt8(50)) & 127)..=(UInt8(UInt8(81)) & 127) : (Int64(67) | 1)),
                    ((UInt8(UInt8(140)) & 127)..(UInt8(UInt8(251)) & 127) : (Int64(34) | 1)),
                    ((UInt8(UInt8(137)) & 127)..(UInt8(UInt8(6)) & 127) : (Int64(-1) | 1)),
                    ((UInt8(UInt8(48)) & 127)..(UInt8(UInt8(101)) & 127) : (Int64(-78) | 1)),
                    ((UInt8(UInt8(182)) & 127)..=(UInt8(UInt8(161)) & 127) : (Int64(21) | 1)),
                    ((UInt8(UInt8(206)) & 127)..=(UInt8(UInt8(42)) & 127) : (Int64(0) | 1)),
                    ((UInt8(UInt8(148)) & 127)..(UInt8(UInt8(120)) & 127) : (Int64(46) | 1)),
                    ((UInt8(UInt8(3)) & 127)..=(UInt8(UInt8(154)) & 127) : (Int64(-88) | 1)),
                    ((UInt8(UInt8(27)) & 127)..=(UInt8(UInt8(95)) & 127) : (Int64(37) | 1))];
                var_1748351801228_1696
            } finally { // block id: 1698
                var_1748351801228_92;
                var_1748351801228_1701
            }, (var_1748351801228_1745 ?? var_1748351801228_1625), (var_1748351801228_1750 ?? var_1748351801228_833))[1];
        var_1748351801228_33
    };

    static mut prop var_1748351801228_2080: ?(Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>) { // block id: 2081
        get() { // block id: 2083
            (([UInt64(86), UInt64(213), UInt64(221), UInt64(138), UInt64(211), UInt64(9), UInt64(139), UInt64(154),
                    UInt64(101), UInt64(215)], Int8(Int8(33)), Float32(-81.0), [Option<Unit>.None, Option<Unit>.None,
                    Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
                    Option<Unit>.None, Option<Unit>.None, Option<Unit>.None], (Int8(41), (), Option<UInt16>.None, UInt32(102),
                    Option<UInt16>.None, Int8(103), Int64(-117), Int8(90), Option<UInt16>.None), [UInt64(234),
                    UInt64(142), UInt64(38), UInt64(159), UInt64(120), UInt64(179), UInt64(171), UInt64(186),
                    UInt64(108), UInt64(29)], Int8(Int8(48))) as (Float32, Range<UInt8>, Option<Unit>, Range<Int32>, 
                Option<Bool>))
        }
        set(Value) { // block id: 2116
            ();
            ()
        }
    }
}

@Frozen
func func_1748351801228_57<T0, T1>(param_1748351801228_58: Int32): UInt16 { // block id: 59
    var var_1748351801228_88: UInt16 = UInt16(111);
    try { // block id: 61
        UInt16(93)
    } catch (e: Exception) { // block id: 63
        Float32(Float32(7.0));
        if (false) { // block id: 68
            var var_1748351801228_71: Bool = (UInt8(Int8(UInt8(UInt8(253)))) is Int8);
            var_1748351801228_71 ||= false
        };
        try { // block id: 79
            var var_1748351801228_82: Float64 = Float64(Float64(Float32(-112.0)));
            var_1748351801228_82 -= Float64(-105.0)
            var_1748351801228_88
        } catch (e: Exception) { // block id: 90
            var_1748351801228_92;
            var_1748351801228_96 %= ((Int8(-78)) | 1)
            var_1748351801228_88
        } finally { // block id: 101
            var_1748351801228_92;
            var var_1748351801228_105: Int64 = Int64(-30);
            var_1748351801228_105 /= ((Int64(-116)) | 1)
            UInt16(142)
        }
    } finally { // block id: 109
        match (Int16(41)) {
            case _ =>
                var_1748351801228_92;
                Float32(-118.0) * Float32(63.0)
        };
        var_1748351801228_88
    }
}

public open class Class_1748351801228_181 <: Class_1748351801228_40 & Interface_1748351801228_46 {
    public init() { // block id: 183

    }

    @Frozen
    mut prop var_1748351801228_188: Int32 { // block id: 189
        get() { // block id: 191
            Int32(Int8(Int8(-59)));
            var_1748351801228_264
        }
        set(Value) { // block id: 197
            (Float32(Float32(Float32(-18.0))) is Class_1748351801228_40);
            UInt16(130);
            ();
            var_1748351801228_264 = Value
        }
    }
    public init(namedParam_1748351801228_233!: UInt8) { // block id: 234
        UInt32(143);
        var var_1748351801228_249: Option<Bool> = Option<Bool>.Some((() is (Int32) -> UInt16));
        var loopTimeVar_1748351801228_257: Int64 = 0;
        (Option<Unit>.None ?? while (((var_1748351801228_249 ?? false)) && loopTimeVar_1748351801228_257 < 100) {
            loopTimeVar_1748351801228_257++;
            UInt8(31)
        })
    };

    mut prop var_1748351801228_264: Int32 { // block id: 265
        get() { // block id: 267
            Int32(17)
        }
        set(Value) { // block id: 271
            ();
            Int32(Int32(67));
            ()
        }
    }
    let var_1748351801228_395: (Array<UInt64>, Int8, Float32, Array<Option<Unit>>, (Int8, Unit, Option<UInt16>, UInt32, 
        Option<UInt16>, Int8, Int64, Int8, Option<UInt16>), Array<UInt64>, Int8) = ([UInt64(3), UInt64(62), UInt64(173),
            UInt64(168), UInt64(146), UInt64(139), UInt64(21), UInt64(128), UInt64(51), UInt64(41)], Int8(-80), Float32(96.0),
        [Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None], (Int8(23), (),
            Option<UInt16>.None, UInt32(81), Option<UInt16>.None, Int8(31), Int64(-97), Int8(19), Option<UInt16>.None), [UInt64(149),
            UInt64(203), UInt64(30), UInt64(239), UInt64(48), UInt64(167), UInt64(186), UInt64(152), UInt64(133),
            UInt64(211)], Int8(11));
    public init(param_1748351801228_723: Range<UInt64>, optionalParam_1748351801228_724!: Rune = r'N',
        namedParam_1748351801228_726!: Array<UInt64>) { // block id: 727
        var var_1748351801228_747: UInt32 = UInt32(48);
        var var_1748351801228_754: UInt32 = UInt32(Int8(92));
        var var_1748351801228_787: UInt8 = UInt8(UInt8(75));
        let var_1748351801228_808: UInt64 = UInt64(177);
        match (UInt64(match (Option<String>.Some(var_1748351801228_626)) {
            case _ =>
                var var_1748351801228_737: ?UInt16 = (((Int16(Int16(Int8(Int8(-72)))) & 127)..=(Int16(Int16(13)) & 127) : (Int64(-11) |
                    1)) as UInt16);
                var_1748351801228_737;
                UInt64(169);
                var_1748351801228_747

            case caseVar_1748351801228_751: Range<Int64> => var_1748351801228_754

            case _ =>
                var_1748351801228_350 = UInt16(133)
                UInt32(252)

            case _: UInt32 =>
                ();
                var var_1748351801228_769: Unit = ();
                var_1748351801228_769;
                const var_1748351801228_772: UInt32 = 106;
                var_1748351801228_772

            case _ =>
                var_1748351801228_92;
                UInt32(21) >> ((UInt32(39)) & 7)
        })) {
            case 76 | 37 | 219 =>
                var_1748351801228_92;
                var_1748351801228_787++;
                let var_1748351801228_791: Int64 = Int64(41);
                var_1748351801228_791

            case 97 | 249 =>
                ();
                var_1748351801228_33 / ((var_1748351801228_33) | 1)

            case 206 | 246 | 3 | 227 =>
                let var_1748351801228_804: Unit = ();
                var_1748351801228_804;
                ((UInt64(var_1748351801228_808) & 127)..=(UInt64(var_1748351801228_808) & 127) : (var_1748351801228_33 |
                    1));
                var_1748351801228_33

            case 79 =>
                Float64(72.0);
                Int64(98)

            case _ =>
                var_1748351801228_92;
                Int64(26)
        };
        var var_1748351801228_952: UInt32 = UInt32(UInt8(Int8(Int8(UInt8(231)))));
        var var_1748351801228_964: Int32 = Int32(-55);
        ((Option<(Float32, Range<UInt8>, Option<Unit>, Range<Int32>, Option<Bool>)>.None ?? var_1748351801228_833)[2] ??
            if (Int8(-45) > Int8(58)) { // block id: 942
            const var_1748351801228_944: Rune = r'5';
            var_1748351801228_944;
            UInt64(98);
            var_1748351801228_92
        } else if (match (((UInt32(var_1748351801228_754) & 127)..(UInt32(var_1748351801228_952) & 127) : (Int64(38) | 1))) {
            case _: Range<Int16> =>
                var_1748351801228_964++;
                ();
                var_1748351801228_341 >= var_1748351801228_341

            case _ =>
                var_1748351801228_975 -= var_1748351801228_982
                true
        }) { // block id: 985
            ();
            ();
            var_1748351801228_221 &&= false
        })
    };

    static mut prop var_1748351801228_1982: ((Int8, Unit, Option<UInt16>, UInt32, Option<UInt16>, Int8, Int64, Int8, 
        Option<UInt16>), Range<Int16>, UInt32, Array<Range<UInt8>>, Option<UInt16>, (Float32, Range<UInt8>, Option<Unit>, 
        Range<Int32>, Option<Bool>)) { // block id: 1983
        get() { // block id: 1985
            ((Int8(UInt8(221)), (), Option<UInt16>.None, UInt32(UInt32(222)), (Option<Bool>.None as UInt16), Int8(Int8(-63)),
                    Int64(8), Int8(-78), (Option<Option<UInt16>>.None as UInt16)), ((Int16(Int16(26)) & 127)..(Int16(Int16(Int16(72))) &
                    127) : (Int64(-79) | 1)), UInt32(UInt16(177)), [((UInt8(UInt8(213)) & 127)..(UInt8(UInt8(95)) & 127) : (Int64(-117) |
                    1)), ((UInt8(UInt8(56)) & 127)..=(UInt8(UInt8(96)) & 127) : (Int64(-91) | 1)),
                    ((UInt8(UInt8(116)) & 127)..(UInt8(UInt8(77)) & 127) : (Int64(-108) | 1)),
                    ((UInt8(UInt8(222)) & 127)..(UInt8(UInt8(160)) & 127) : (Int64(13) | 1)),
                    ((UInt8(UInt8(64)) & 127)..(UInt8(UInt8(42)) & 127) : (Int64(-2) | 1)),
                    ((UInt8(UInt8(99)) & 127)..=(UInt8(UInt8(239)) & 127) : (Int64(-60) | 1)),
                    ((UInt8(UInt8(184)) & 127)..=(UInt8(UInt8(91)) & 127) : (Int64(118) | 1)),
                    ((UInt8(UInt8(61)) & 127)..(UInt8(UInt8(194)) & 127) : (Int64(-55) | 1)),
                    ((UInt8(UInt8(125)) & 127)..=(UInt8(UInt8(144)) & 127) : (Int64(-88) | 1)),
                    ((UInt8(UInt8(132)) & 127)..(UInt8(UInt8(11)) & 127) : (Int64(-8) | 1))], Option<UInt16>.None, (Float32(-24.0),
                    ((UInt8(UInt8(147)) & 127)..=(UInt8(UInt8(175)) & 127) : (Int64(-99) | 1)), (([UInt64(124),
                            UInt64(19), UInt64(178), UInt64(100), UInt64(82), UInt64(207), UInt64(168), UInt64(74),
                            UInt64(140), UInt64(112)], Int8(-52), Float32(14.0), [Option<Unit>.None, Option<Unit>.None,
                            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
                            Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None], (Int8(-109), (),
                            Option<UInt16>.None, UInt32(251), Option<UInt16>.None, Int8(-54), Int64(-37), Int8(5), Option<UInt16>
                                .None), [UInt64(219), UInt64(248), UInt64(31), UInt64(57), UInt64(201), UInt64(193),
                            UInt64(228), UInt64(166), UInt64(203), UInt64(209)], Int8(-62)) as Unit), ((Int32(Int32(-35)) &
                        127)..(Int32(Int32(-18)) & 127) : (Int64(-63) | 1)), ([UInt64(86), UInt64(87), UInt64(27),
                        UInt64(75), UInt64(188), UInt64(150), UInt64(98), UInt64(197), UInt64(24), UInt64(175)] as Bool)))
        }
        set(Value) { // block id: 2077

        }
    }
    public static var var_1748351801228_2161: Bool = false;
    static mut prop var_1748351801228_2168: VArray<Int16, $6> { // block id: 2169
        get() { // block id: 2171
            ();
            VArray<Int16, $6>(repeat: Int16(UInt8(Int8(-107))))
        }
        set(Value) { // block id: 2185
            ((UInt8(13) as Array<VArray<Int16, $6>>) as UInt16);
            ();
            ()
        }
    }
    public open override func func_1748351801228_53(): Int64 { // block id: 1770
        var var_1748351801228_1775: Bool = (([UInt32(Int32(2)), UInt32(57), UInt32(88), UInt32(183), UInt32(UInt32(56)),
            UInt32(243), UInt32(197), UInt32(166), UInt32(Int8(36)), UInt32(93)] as UInt16) is Range<Int16>);
        let var_1748351801228_1806: UInt8 = UInt8(UInt8(Int8(-58)));
        var var_1748351801228_1852: Bool = true;
        if (if (var_1748351801228_1775) { // block id: 1792
            var_1748351801228_92;
            ();
            UInt8(250) + UInt8(134)
        } else { // block id: 1798
            var_1748351801228_1122
        } != if (var_1748351801228_221) { // block id: 1802
            ();
            var_1748351801228_92;
            var_1748351801228_1806
        } else { // block id: 1810
            var_1748351801228_982 -= var_1748351801228_982
            var_1748351801228_92;
            var_1748351801228_1122
        }) { // block id: 1816
            var loopTimeVar_1748351801228_1822: Int64 = 0;
            while ((true) && loopTimeVar_1748351801228_1822 < 100) {
                loopTimeVar_1748351801228_1822++;
                var_1748351801228_92
            };
            Option<Array<VArray<Int16, $6>>>.None;
            Float32(96.0)
        } else if (var_1748351801228_1775) { // block id: 1826
            if (false) { // block id: 1829
                [((UInt8(var_1748351801228_1122) & 127)..(UInt8(var_1748351801228_1122) & 127) : (var_1748351801228_260 |
                    1)), var_1748351801228_1836, ((UInt8(UInt8(185)) & 127)..(UInt8(UInt8(85)) & 127) : (Int64(-105) | 1)),
                    var_1748351801228_1836, var_1748351801228_1836,
                    ((UInt8(UInt8(213)) & 127)..=(UInt8(UInt8(170)) & 127) : (Int64(92) | 1)), var_1748351801228_1836,
                    ((UInt8(UInt8(224)) & 127)..(UInt8(UInt8(130)) & 127) : (Int64(59) | 1)), var_1748351801228_1836,
                    var_1748351801228_1836];
                var_1748351801228_1775 ||= var_1748351801228_1852
                ()
            } else if (true) { // block id: 1856
                var_1748351801228_92;
                ()
            };
            match (Option<Option<UInt16>>.Some(var_1748351801228_1625)) {
                case _: Range<UInt32> =>
                    var_1748351801228_92;
                    Float32(125.0)

                case _ => Float32(-71.0) + Float32(113.0)

                case caseVar_1748351801228_1875: Range<UInt32> => Float32(-65.0) - Float32(5.0)

                case caseVar_1748351801228_1882: UInt64 =>
                    var_1748351801228_1122 = UInt8(56)
                    var_1748351801228_341

                case _ => -Float32(-120.0)
            }
        } else { // block id: 1893
            try { // block id: 1895
                false;
                (var_1748351801228_1625, var_1748351801228_479, "046aDz7*>\"", true, var_1748351801228_33, Float32(60.0),
                    """
ns8wC
T@1#^
""", var_1748351801228_1806, var_1748351801228_1907)
            } catch (_) { // block id: 1951
                var_1748351801228_1852 &&= var_1748351801228_221
                Option<Bool>.None;
                (var_1748351801228_1625, Option<String>.None, ###"6\"9+l 9+*|"###, var_1748351801228_1852, Int64(-99),
                    var_1748351801228_341, var_1748351801228_626, var_1748351801228_1806, var_1748351801228_1907)
            } finally { // block id: 1966
                [UInt32(4), UInt32(53), UInt32(88), UInt32(225), UInt32(117), UInt32(76), UInt32(195), UInt32(71),
                    UInt32(79), UInt32(3)];
                const var_1748351801228_1978: Int64 = -87;
                if (var_1748351801228_1852) {
                    ((Int16(Int16(-11)) & 127)..=(Int16(Int16(-19)) & 127) : (Int64(112) | 1))
                } else {
                    ((Int16(Int16(-6)) & 127)..=(Int16(Int16(1)) & 127) : (var_1748351801228_1978 | 1))
                };
                var_1748351801228_1497
            };
            var_1748351801228_1982;
            var var_1748351801228_2148: Float32 = Float32(89.0);
            match (var_1748351801228_2080) {
                case _: Array<Range<UInt8>> =>
                    var_1748351801228_350 /= ((var_1748351801228_350) | 1)
                    Float32(56.0)

                case _: Array<VArray<Int16, $6>> =>
                    ();
                    var_1748351801228_2131;
                    var_1748351801228_341

                case _ =>
                    ();
                    var_1748351801228_2148
            }
        };
        try { // block id: 2151
            Option<Rune>.None.getOrThrow()
        } finally { // block id: 2158
            if (var_1748351801228_2161) { // block id: 2163
                ();
                if (var_1748351801228_1775) {
                    var_1748351801228_2168
                } else {
                    VArray<Int16, $6>(repeat: var_1748351801228_982)
                }
            } else { // block id: 2198
                var_1748351801228_2168
            };
            var loopTimeVar_1748351801228_2204: Int64 = 0;
            do {
                loopTimeVar_1748351801228_2204++;
            } while ((false) && loopTimeVar_1748351801228_2204 < 100);
            r'd'
        };
        var_1748351801228_33
    }
}

main(): Int64 {
    try {
        let var_1748351801228_212: ?UInt16 = (Float64(-84.0) as UInt16);
        var var_1748351801228_230: Class_1748351801228_40 = Class_1748351801228_181(
            namedParam_1748351801228_233: UInt8(4));
        try { // block id: 9
            var var_1748351801228_16: Int = Int64(Int8(Int8(Int8(UInt8(78)))));
            if (false) { // block id: 12
                r'V';
                var_1748351801228_16 ^= var_1748351801228_16
                var var_1748351801228_25: Int32 = Int32(116);
                var_1748351801228_25 -= Int32(27)
            };
            let var_1748351801228_50: Class_1748351801228_40 = Class_1748351801228_40();
            () |> {lambdaParameter_1748351801228_37: Unit => var_1748351801228_50.func_1748351801228_53()}
        } finally { // block id: 205
            (var_1748351801228_96, var_1748351801228_92, Option<UInt16>.None, UInt32(189), var_1748351801228_212,
                var_1748351801228_96, Int64(19), var_1748351801228_96, Option<UInt16>.None);
            var loopTimeVar_1748351801228_227: Int = 0;
            while ((var_1748351801228_221) && loopTimeVar_1748351801228_227 < 100) {
                loopTimeVar_1748351801228_227++;
            };
            var_1748351801228_230.var_1748351801228_260
        }
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1748351801228_181 {}

extend Class_1748351801228_40 {}

func func_1748351801228_332(optionalParam_1748351801228_333!: Int16 = Int16(72), namedParam_1748351801228_335!: String,
    namedParam_1748351801228_336!: Option<Bool>, namedParam_1748351801228_337!: Class_1748351801228_40): Option<String> { // block id: 338
    var_1748351801228_341 /= Float32((Int32(match (if (false) { // block id: 347
        var_1748351801228_350 -= UInt16(88)
        var var_1748351801228_355: UInt8 = UInt8(Int8(12));
        var_1748351801228_355--;
        let var_1748351801228_359: ?Unit = (("\\z*zDILd#=" is Interface_1748351801228_44) as Unit);
        var_1748351801228_359
    } else { // block id: 363
        ();
        Option<Unit>.Some(var_1748351801228_92)
    }) {
        case caseVar_1748351801228_369 =>
            var_1748351801228_33;
            Float32(-70.0) * Float32(-31.0)

        case _ => var_1748351801228_341
    })) | 1)
    var_1748351801228_185.var_1748351801228_395[3][9];
    let var_1748351801228_450: (Bool, Option<Unit>, Class_1748351801228_181, UInt16, Class_1748351801228_181, Range<UInt32>) = (("""
bw +B
IMQ,;
""" is Interface_1748351801228_43<UInt64,
            UInt64>), (((Int64(Int64(51)) & 127)..(Int64(Int64(-16)) & 127) : (Int64(-36) | 1)) as Unit),
        Class_1748351801228_181(), UInt16(UInt16(61)), Class_1748351801228_181(), ((UInt32(UInt32(Int16(11))) & 127)..=(UInt32(UInt32(UInt16(UInt8(250)))) &
            127) : (Int64(UInt16(246)) | 1)));
    match (match (var_1748351801228_450[1]) {
        case _ => Option<Unit>.None
    }) {
        case _: Float64 =>
            if (var_1748351801228_221) {
                var_1748351801228_479
            } else {
                var_1748351801228_479
            }

        case _ => var_1748351801228_479
    }
}

public func func_1748351801228_536(param_1748351801228_537: (Int32) -> UInt16): String { // block id: 540
    let var_1748351801228_547: String = "'rbmEc*6#q";
    if (false) { // block id: 543
        if (var_1748351801228_221) {
            var_1748351801228_547
        } else {
            var_1748351801228_547
        }
    } else { // block id: 550
        VArray<Unit, $2>(repeat: var_1748351801228_92)[0];
        var var_1748351801228_558: Array<Option<Unit>> = [(false as Unit), Option<Unit>.Some(()),
            ([(Option<Unit>.Some(()) as Unit), Option<Unit>.None, Option<Unit>.Some(()), (Int32(-92) as Unit),
            (Float64(-108.0) as Unit), Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, Option<Unit>.None,
            Option<Unit>.Some(())] as Unit), Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None,
            Option<Unit>.None, Option<Unit>.Some(()), (() as Unit), (Int64(UInt64(UInt32(88))) as Unit)];
        var_1748351801228_558;
        (Class_1748351801228_40(), Int64(-113), ((Int8(Int8(-73)) & 127)..=(Int8(var_1748351801228_96) & 127) : (Int64(94) |
                1)), var_1748351801228_547, var_1748351801228_606)[3]
    }
}

func func_1748351801228_328(param_1748351801228_329: Class_1748351801228_40): Option<String> { // block id: 330
    let var_1748351801228_500: Int16 = Int16(UInt8(217));
    let var_1748351801228_511: Int16 = Int16(UInt8(101));
    var var_1748351801228_519: Option<Bool> = Option<Bool>.Some(
        (((UInt64(227) is (Array<UInt64>, Int8, Float32, Array<Option<Unit>>, (Int8, Unit, Option<UInt16>, UInt32, 
                Option<UInt16>, Int8, Int64, Int8, Option<UInt16>), Array<UInt64>, Int8)), Option<Unit>.Some(()),
            Class_1748351801228_181(), UInt16(174), Class_1748351801228_181(), ((UInt32(UInt32(105)) & 127)..=(UInt32(UInt32(160)) &
                127) : (Int64(-47) | 1))) is Range<Int16>));
    var var_1748351801228_617: (Int32) -> UInt16 = func_1748351801228_57<UInt32, UInt16>;
    var var_1748351801228_633: (String, (Class_1748351801228_40, Int64, Range<Int8>, String, Range<UInt64>), Array<Option<Bool>>, 
        Option<Unit>, Int32) = ("JRj\"0ap}80", (Class_1748351801228_40(), Int64(Int8(Int8(21))), ((Int8(Int8(69)) & 127)..(Int8(Int8(-53)) &
                127) : (Int64(UInt16(190)) | 1)), """
#6\\yJ
oODws
""", ((UInt64(UInt64(36)) & 127)..(UInt64(UInt64(UInt64(136))) &
                127) : (Int64(Int32(-104)) | 1))), [(((Class_1748351801228_40(), Int64(-95), ((Int8(Int8(-54)) & 127)..=(Int8(Int8(16)) &
                127) : (Int64(-102) | 1)), """
&':*c
F@5<8
""", ((UInt64(UInt64(66)) & 127)..(UInt64(UInt64(64)) & 127) : (Int64(105) |
                1))) as Bool) as Bool), Option<Bool>.None,
            ((((UInt32(UInt32(45)) & 127)..=(UInt32(UInt32(240)) & 127) : (Int64(-23) | 1)) as String) as Bool),
            ("X`3`$3]6)r" as Bool),
            (([Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()),
            Option<Unit>.None, Option<Unit>.None, Option<Unit>.Some(()), Option<Unit>.None, Option<Unit>.None] as String) as Bool),
            (Int16(Int16(81)) as Bool), (r'd' as Bool), Option<Bool>.None,
            (((Int64(Int64(-58)) & 127)..(Int64(Int64(114)) & 127) : (Int64(-9) | 1)) as Bool), (Int64(65) as Bool)], (Option<UInt16>
            .Some(UInt16(206)) as Unit), Int32(Int32(Int8(Int8(71)))));
    let var_1748351801228_713: Option<UInt8> = Option<UInt8>.None;
    func_1748351801228_332(optionalParam_1748351801228_333: try { // block id: 489
        r'6';
        const var_1748351801228_494: Int16 = 75;
        VArray<Int16, $6>({i => Int16(11)})
    } catch (e: Exception) { // block id: 503
        ();
        VArray<Int16, $6>({i => Int16(1)})
    }[3], namedParam_1748351801228_335: if ((var_1748351801228_519 ?? false)) {
        func_1748351801228_536(var_1748351801228_617)
    } else {
        (Option<String>.None ?? var_1748351801228_626)
    }, namedParam_1748351801228_336: var_1748351801228_633[2][7],
        namedParam_1748351801228_337: Class_1748351801228_181(
            namedParam_1748351801228_233: (var_1748351801228_713 ?? UInt8(116))))
}
