/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public let var_1667203288930_9 : Int64 = Int64(Int32(70))
public var var_1667203288930_58 : (Unit, Array<Int64>, Float32) = ((), [126, 107, (-19), 15, (-29), (-66), 72, (-75), (-101), (-60)], Float32(Float32(Float32(-77.0))))
public let var_1667203288930_71 : Class_1667203288930_67 = Class_1667203288930_67()
public var var_1667203288930_102 : Bool = (r'I' is Bool)
public let var_1667203288930_106 : Option<Float32> = (((52&127)..(4&127):((-13)|1)) as Float32)
public let var_1667203288930_111 : Float32 = Float32(-37.0)
public let var_1667203288930_135 : Range<Int32> = ((Int32(35)&127)..(Int32(-46)&127):((-43)|1))
public let var_1667203288930_142 : (Range<Int8>, Int32, Range<Int32>, Range<Int8>, Float32, Range<UInt16>, Range<Int64>) = (((Int8(49)&127)..=(Int8(17)&127):(33|1)), Int32(UInt16(58)), ((Int32(115)&127)..=(Int32(-73)&127):((-50)|1)), ((Int8(94)&127)..=(Int8(-101)&127):((-34)|1)), Float32(Float32(-78.0)), ((UInt16(UInt16(UInt16(72)))&127)..(UInt16(118)&127):((Int64(Int32(Int8(28)))|1))), ((79&127)..=(76&127):(84|1)))
public let var_1667203288930_163 : Unit = ()
public var var_1667203288930_191 : UInt8 = UInt8(Int8(Int8(54)))
public var var_1667203288930_197 : Range<UInt8> = ((UInt8(14)&127)..=(UInt8(204)&127):((-37)|1))
public var var_1667203288930_243 : Array<Range<Int16>> = [((Int16(-28)&127)..(Int16(104)&127):((-27)|1)), ((Int16(-92)&127)..=(Int16(-92)&127):((-11)|1)), ((Int16(-90)&127)..(Int16(-97)&127):(19|1)), ((Int16(-53)&127)..=(Int16(73)&127):(19|1)), ((Int16(56)&127)..(Int16(-56)&127):((-67)|1)), ((Int16(-8)&127)..(Int16(9)&127):((-125)|1)), ((Int16(-30)&127)..=(Int16(114)&127):((-18)|1)), ((Int16(-75)&127)..=(Int16(49)&127):(78|1)), ((Int16(-114)&127)..=(Int16(62)&127):((-112)|1)), ((Int16(109)&127)..=(Int16(44)&127):(17|1))]
public var var_1667203288930_246 : Option<Array<Range<Int16>>> = Option<Array<Range<Int16>>>.None
public let var_1667203288930_258 : Int16 = Int16(Int8(61))
public let var_1667203288930_266 : Int64 = 67
let var_1667203288930_297 : UInt64 = UInt64(62)
public var var_1667203288930_303 : Int32 = Int32(UInt16(237))
public var var_1667203288930_312 : Bool = false
public var var_1667203288930_326 : Range<Int16> = ((Int16(Int16(UInt16(Int16(-117))))&127)..(Int16(UInt8(UInt8(UInt8(70))))&127):(((-72)|1)))
public var var_1667203288930_353 : Enum_1667203288930_348 = Enum_1667203288930_348.defaultValue
public var var_1667203288930_378 : UInt16 = UInt16(UInt16(120))
public let var_1667203288930_396 : UInt32 = UInt32(UInt16(Int16(-77)))
public var var_1667203288930_438 : ?Range<Int16> = Option<Range<Int16>>.None
public var var_1667203288930_472 : Int16 = Int16(UInt8(Int8(UInt8(UInt8(91)))))
public let var_1667203288930_480 : Range<UInt32> = ((UInt32(33)&127)..=(UInt32(240)&127):(31|1))
public var var_1667203288930_486 : Float32 = Float32(Float32(125.0))
public var var_1667203288930_496 : UInt32 = UInt32(UInt8(Int8(Int8(19))))
public let var_1667203288930_515 : Range<Int8> = ((Int8(Int8(46))&127)..(Int8(Int8(UInt8(134)))&127):(((-42)|1)))
public let var_1667203288930_524 : Float32 = Float32(Float32(Float32(-49.0)))
public var var_1667203288930_668 : Int8 = Int8(38)
public let var_1667203288930_727 : Array<Class_1667203288930_67> = [Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67()]
public var var_1667203288930_902 : ?Option<Array<Range<Int16>>> = ((((UInt32(105)&127)..=(UInt32(186)&127):(77|1)) as Range<Int16>) as Option<Array<Range<Int16>>>)
public let var_1667203288930_952 : UInt64 = UInt64(UInt64(224))
public var var_1667203288930_962 : UInt64 = UInt64(Int32(UInt32(252)))
public var var_1667203288930_973 : Int64 = (-68)
public let var_1667203288930_988 : Range<UInt16> = ((UInt16(54)&127)..=(UInt16(10)&127):(13|1))
public let var_1667203288930_1030 : Array<UInt64> = [UInt64(217), UInt64(81), UInt64(65), UInt64(193), UInt64(149), UInt64(156), UInt64(75), UInt64(226), UInt64(123), UInt64(80)]
public let var_1667203288930_1064 : Int64 = 117
public let var_1667203288930_1067 : Range<Int16> = ((Int16(-99)&127)..(Int16(22)&127):((-99)|1))
let var_1667203288930_1186 : ?Array<Array<UInt64>> = (((UInt32(145)&127)..=(UInt32(170)&127):((-67)|1)) as Array<Array<UInt64>>)

public open class Class_1667203288930_67 {
    public init() { // block id: 69

    }
;
    public mut prop var_1667203288930_74 : Bool { // block id: 75
        get() { // block id: 77
            ((Int16(-110)&127)..(Int16(-90)&127):(59|1));
            true;
            var_1667203288930_1199
        }

        set(Value) { // block id: 82
            ((Int32(-112)&127)..=(Int32(UInt32(19))&127):(((-15)|1)));
            ();
            var_1667203288930_1199 = Value
        }

    };
    public init(param_1667203288930_457 : Option<Option<Array<Range<Int16>>>>, param_1667203288930_458 : Range<Int32>, param_1667203288930_459 : Array<Range<Int16>>) { // block id: 460
        match (match (var_1667203288930_396 & UInt32(84)) {
            case _ : (Unit, Array<Int64>, Float32) => 
                ();
                var_1667203288930_472 /= ((Int16(-108)) | 1);
                var_1667203288930_480
            
            case _ => 
                var_1667203288930_486 *= var_1667203288930_111;
                var_1667203288930_191 >>= ((UInt8(13)) & 7);
                ((UInt32(38)&127)..(var_1667203288930_496&127):((var_1667203288930_266|1)))
            
        }) {
            case caseVar_1667203288930_504 : Bool => 
                var_1667203288930_438;
                var var_1667203288930_533 : Range<Int64> = (((-73)&127)..(57&127):((-49)|1));
                (((Int8(-56)&127)..=(Int8(-35)&127):((-19)|1)), Int32(126), ((Int32(83)&127)..=(Int32(68)&127):((var_1667203288930_9|1))), var_1667203288930_515, var_1667203288930_524, ((var_1667203288930_378&127)..(var_1667203288930_378&127):((var_1667203288930_9|1))), var_1667203288930_533)
            
            case _ => 
                if (false) { var_1667203288930_142 } else { var_1667203288930_142 } 
            
        };
        var var_1667203288930_552 : Range<UInt16> = ((UInt16(170)&127)..(UInt16(23)&127):((70|1)));
        let var_1667203288930_571 : UInt16 = UInt16(Int8(UInt8(55)));
        (Option<Array<Range<UInt16>>>.Some([((UInt16(40)&127)..=(UInt16(172)&127):((-93)|1)), ((UInt16(109)&127)..=(UInt16(179)&127):((-127)|1)), ((UInt16(65)&127)..=(UInt16(37)&127):(86|1)), ((UInt16(78)&127)..(UInt16(118)&127):((-10)|1)), ((UInt16(142)&127)..(UInt16(139)&127):(104|1)), ((UInt16(144)&127)..(UInt16(207)&127):((-19)|1)), ((UInt16(232)&127)..=(UInt16(32)&127):((-117)|1)), ((UInt16(4)&127)..=(UInt16(243)&127):(58|1)), ((UInt16(98)&127)..(UInt16(45)&127):((-83)|1)), ((UInt16(175)&127)..=(UInt16(82)&127):(33|1))]) ?? [var_1667203288930_552, ((UInt16(122)&127)..=(UInt16(248)&127):(14|1)), ((UInt16(165)&127)..=(UInt16(30)&127):((var_1667203288930_266|1))), ((var_1667203288930_378&127)..(var_1667203288930_378&127):((var_1667203288930_266|1))), ((UInt16(5)&127)..=(UInt16(88)&127):((-108)|1)), ((UInt16(87)&127)..=(UInt16(12)&127):(26|1)), var_1667203288930_552, ((var_1667203288930_571&127)..(var_1667203288930_571&127):((var_1667203288930_266|1))), ((UInt16(109)&127)..=(var_1667203288930_378&127):(((-7)|1))), var_1667203288930_552])[1]
    }
;
    public init(param_1667203288930_707 : UInt8, optionalParam_1667203288930_708 ! : (Float32, Range<Int32>, Rune) -> Bool = func_1667203288930_43<Class_1667203288930_67, Class_1667203288930_67, Int64>) { // block id: 714
        if (try { // block id: 717
            Option<Range<Int16>>.Some(var_1667203288930_326);
            var_1667203288930_303 &= var_1667203288930_303;
            !var_1667203288930_312
        } finally { // block id: 725
            var_1667203288930_727;
            !var_1667203288930_312
        }) { // block id: 741
            var loopTimeVar_1667203288930_745 : Array<Array<UInt64>> = [[UInt64(70), UInt64(73), UInt64(31), UInt64(165), UInt64(243), UInt64(86), UInt64(246), UInt64(55), UInt64(124), UInt64(142)], [UInt64(12), UInt64(0), UInt64(4), UInt64(98), UInt64(197), UInt64(185), UInt64(141), UInt64(140), UInt64(241), UInt64(170)], [UInt64(Int64(Int16(30))), UInt64(78), UInt64(UInt64(215)), UInt64(Int8(-85)), UInt64(Int16(113)), UInt64(66), UInt64(Int8(108)), UInt64(50), UInt64(UInt64(46)), UInt64(UInt8(17))], [UInt64(Int8(-20)), UInt64(15), UInt64(Int16(-125)), UInt64(106), UInt64(170), UInt64(13), UInt64(90), UInt64(UInt32(122)), UInt64(224), UInt64(20)], [UInt64(Int8(120)), UInt64(Int8(-85)), UInt64(252), UInt64(23), UInt64(10), UInt64(8), UInt64(111), UInt64(UInt16(184)), UInt64(157), UInt64(107)], [UInt64(181), UInt64(UInt16(242)), UInt64(225), UInt64(14), UInt64(133), UInt64(UInt32(227)), UInt64(94), UInt64(76), UInt64(UInt32(128)), UInt64(UInt8(136))], [UInt64(Int64(UInt16(174))), UInt64(Int32(93)), UInt64(UInt8(121)), UInt64(126), UInt64(57), UInt64(UInt32(Int16(116))), UInt64(Int64(Int8(105))), UInt64(141), UInt64(Int16(97)), UInt64(Int64(UInt16(28)))], [UInt64(4), UInt64(215), UInt64(201), UInt64(UInt8(111)), UInt64(Int8(Int8(-113))), UInt64(204), UInt64(251), UInt64(UInt8(33)), UInt64(157), UInt64(204)], [UInt64(Int16(Int16(2))), UInt64(210), UInt64(UInt32(150)), UInt64(Int16(41)), UInt64(Int16(UInt16(251))), UInt64(4), UInt64(187), UInt64(195), UInt64(UInt32(193)), UInt64(Int64(UInt32(85)))], [UInt64(104), UInt64(Int32(111)), UInt64(110), UInt64(149), UInt64(Int8(Int8(36))), UInt64(164), UInt64((-107)), UInt64(73), UInt64(Int16(Int16(13))), UInt64(Int8(UInt8(214)))]];
            for (i in loopTimeVar_1667203288930_745 where false) {

            };
            var loopTimeVar_1667203288930_891 : Int64 = 0;
            do {
                loopTimeVar_1667203288930_891++;

            } while ((false) && loopTimeVar_1667203288930_891 < 100 ) 
        }
    }
;
    public let var_1667203288930_1082 : (Unit, Array<Int64>, Float32) = ((), [83, 23, (-100), 7, (-88), (-125), (-107), 92, (-110), 79], Float32(90.0));
    var var_1667203288930_1199 : Bool = true
}

public func func_1667203288930_43<T0, T1, T2>(namedParam_1667203288930_44 ! : Float32, optionalParam_1667203288930_45 ! : Range<Int32> = ((Int32(67)&127)..=(Int32(9)&127):((-99)|1)), optionalParam_1667203288930_47 ! : Rune = r'P') : Bool { // block id: 49
    Int16(3);
    Int32(UInt16(114));
    var var_1667203288930_92 : Float64 = Float64(90.0);
    try { // block id: 54
        var_1667203288930_58[0];
        var_1667203288930_71.var_1667203288930_74
    } finally { // block id: 89
        (var_1667203288930_92 is Option<Array<Int64>>)
    }
}




public func func_1667203288930_225(param_1667203288930_226 : Int64) : Bool { // block id: 227
    let var_1667203288930_250 : Range<Int16> = ((Int16(30)&127)..(Int16(-32)&127):((-91)|1));
    ((Option<Option<Array<Range<Int16>>>>.Some(Option<Array<Range<Int16>>>.Some(var_1667203288930_243)) ?? var_1667203288930_246) ?? [var_1667203288930_250, var_1667203288930_250, ((Int16(-111)&127)..=(Int16(65)&127):(49|1)), var_1667203288930_250, ((Int16(115)&127)..=(var_1667203288930_258&127):((var_1667203288930_9|1))), ((var_1667203288930_258&127)..(Int16(28)&127):((var_1667203288930_266|1))), var_1667203288930_250, ((Int16(33)&127)..=(var_1667203288930_258&127):((75|1))), ((Int16(-45)&127)..=(Int16(-46)&127):((-71)|1)), var_1667203288930_250])[4];
    Float32(119.0);
    true
}


public enum Enum_1667203288930_348 {
    defaultValue
}



func func_1667203288930_212<T0, T1>(param_1667203288930_213 : String, namedParam_1667203288930_214 ! : (Range<Int8>, Int32, Range<Int32>, Range<Int8>, Float32, Range<UInt16>, Range<Int64>), namedParam_1667203288930_215 ! : Range<Int16>) : (Float32, Array<UInt64>, Array<Class_1667203288930_67>, Range<UInt8>, Array<UInt64>, Range<UInt32>) { // block id: 216
    UInt32(171);
    let var_1667203288930_279 : (Int64) -> Bool = func_1667203288930_225;
    var var_1667203288930_383 : Float64 = (-121.0);
    var var_1667203288930_404 : Int64 = (-24);
    if (if (("""
,z_i_
v&[ea
""" is Int32)) { // block id: 222
        false
    } else if ((var_1667203288930_266|>var_1667203288930_279)) { // block id: 282
        [Class_1667203288930_67(), Class_1667203288930_67(), var_1667203288930_71, Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), var_1667203288930_71, var_1667203288930_71, Class_1667203288930_67(), var_1667203288930_71];
        var_1667203288930_297 != UInt64(178)
    } else { // block id: 300
        var_1667203288930_303 >>= ((var_1667203288930_303) & 7);
        ((UInt32(138)&127)..(UInt32(190)&127):((var_1667203288930_266|1)));
        var_1667203288930_312
    }) { // block id: 314
        (Option<Range<Int16>>.Some(((Int16(36)&127)..(Int16(-68)&127):(((-112)|1)))) ?? var_1667203288930_326);
        if (true) { // block id: 339
            var_1667203288930_102 ||= var_1667203288930_312;
            var_1667203288930_163
        } else if (false) { // block id: 345
            var_1667203288930_163
        }
    } else if (match (if (var_1667203288930_102) { var_1667203288930_353 } else { var_1667203288930_353 } ) {
        case _ => 
            ((UInt32(95)&127)..=(UInt32(189)&127):((var_1667203288930_9|1)));
            var_1667203288930_111 >= Float32(-122.0)
        
        case _ : Int32 => 
            let var_1667203288930_370 : Float64 = Float64(Float64((-20.0)));
            var_1667203288930_370;
            true
        
        case _ => 
            var_1667203288930_378;
            var_1667203288930_383 -= 25.0;
            false
        
    }) { // block id: 387
        try { // block id: 389
            ();
            var_1667203288930_303 >>= ((Int32(26)) & 7);
            var_1667203288930_396 <= var_1667203288930_396
        } catch (_) { // block id: 401
            var_1667203288930_404 -= 84;
            var_1667203288930_102
        };
        (Option<Unit>.None ?? ())
    };
    let var_1667203288930_417 : Float32 = Float32(-10.0);
    let var_1667203288930_432 : Int16 = Int16(Int16(Int16(119)));
    var var_1667203288930_628 : ?Array<Array<UInt64>> = (UInt64(21) as Array<Array<UInt64>>);
    (var_1667203288930_417, [UInt64(214), UInt64(3), UInt64(67), UInt64(122), UInt64(109), UInt64(4), UInt64(90), UInt64(193), UInt64(192), UInt64(161)], match (try { // block id: 422
        Option<Range<Int16>>.Some(var_1667203288930_326)
    } catch (e: Exception) { // block id: 425
        if (false) { Option<Range<Int16>>.Some(((var_1667203288930_258&127)..=(var_1667203288930_432&127):(((-66)|1)))) } else { var_1667203288930_438 } 
    }) {
        case _ => 
            ();
            var_1667203288930_163;
            let var_1667203288930_445 : Array<Class_1667203288930_67> = [Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(), Class_1667203288930_67(Option<Option<Array<Range<Int16>>>>.Some(([((Int16(99)&127)..(Int16(-67)&127):(36|1)), ((Int16(24)&127)..(Int16(-68)&127):(((-89)|1))), ((Int16(-41)&127)..(Int16(92)&127):(51|1)), ((Int16(-100)&127)..=(Int16(-25)&127):((-9)|1)), ((Int16(-61)&127)..(Int16(61)&127):((-23)|1)), ((Int16(-36)&127)..=(Int16(79)&127):(((-18)|1))), ((Int16(69)&127)..(Int16(-106)&127):((10|1))), ((Int16(6)&127)..(Int16(-2)&127):((29|1))), ((Int16(8)&127)..=(Int16(88)&127):(55|1)), ((Int16(-93)&127)..=(Int16(-72)&127):((15|1)))] as Array<Range<Int16>>)), ((Int32(64)&127)..=(Int32(UInt8(173))&127):((Int64(Int32(-78))|1))), [((Int16(79)&127)..(Int16(-89)&127):(22|1)), ((Int16(103)&127)..=(Int16(-78)&127):((-75)|1)), ((Int16(9)&127)..(Int16(-37)&127):((-113)|1)), ((Int16(-50)&127)..=(Int16(-93)&127):(90|1)), ((Int16(48)&127)..=(Int16(-77)&127):((-7)|1)), ((Int16(75)&127)..(Int16(4)&127):((-41)|1)), ((Int16(-58)&127)..(Int16(32)&127):((-97)|1)), ((Int16(49)&127)..=(Int16(10)&127):((-53)|1)), ((Int16(-31)&127)..=(Int16(-95)&127):(57|1)), ((Int16(-114)&127)..=(Int16(3)&127):(56|1))]), Class_1667203288930_67()];
            var_1667203288930_445
        
    }, var_1667203288930_197, (var_1667203288930_628 ?? [[UInt64(204), UInt64(93), UInt64(222), UInt64(5), UInt64(32), UInt64(112), UInt64(207), UInt64(36), UInt64(135), UInt64(209)], [UInt64(20), UInt64(97), UInt64(81), UInt64(131), UInt64(241), UInt64(168), UInt64(123), UInt64(93), UInt64(253), UInt64(140)], [UInt64(16), UInt64(10), UInt64(220), UInt64(139), UInt64(66), UInt64(227), UInt64(115), UInt64(198), UInt64(240), UInt64(7)], [UInt64(71), UInt64(205), UInt64(222), UInt64(239), UInt64(234), UInt64(145), UInt64(63), UInt64(211), UInt64(62), UInt64(252)], [UInt64(164), UInt64(138), UInt64(76), UInt64(178), UInt64(209), UInt64(26), UInt64(60), UInt64(120), UInt64(126), UInt64(193)], [UInt64(123), UInt64(237), UInt64(166), UInt64(154), UInt64(230), UInt64(248), UInt64(131), UInt64(70), UInt64(165), UInt64(205)], [UInt64(217), UInt64(71), UInt64(154), UInt64(98), UInt64(170), UInt64(64), UInt64(54), UInt64(212), UInt64(5), UInt64(197)], [UInt64(198), UInt64(217), UInt64(201), UInt64(2), UInt64(22), UInt64(223), UInt64(83), UInt64(150), UInt64(220), UInt64(192)], [UInt64(124), UInt64(220), UInt64(37), UInt64(13), UInt64(251), UInt64(175), UInt64(114), UInt64(191), UInt64(242), UInt64(189)], [UInt64(55), UInt64(138), UInt64(46), UInt64(102), UInt64(247), UInt64(77), UInt64(155), UInt64(71), UInt64(28), UInt64(245)]])[1], try { // block id: 634
        ();
        var_1667203288930_142;
        let var_1667203288930_638 : Range<UInt32> = ((UInt32(110)&127)..(UInt32(138)&127):(((-89)|1)));
        var_1667203288930_638
    } finally { // block id: 643
        var_1667203288930_163;
        var_1667203288930_378 &= UInt16(1);
        ((UInt32(239)&127)..(UInt32(232)&127):(57|1))
    })
}

public func func_1667203288930_212(param_1667203288930_176 : Range<UInt16>, param_1667203288930_177 : Range<Int32>, param_1667203288930_178 : Array<UInt64>, namedParam_1667203288930_179 ! : Float64) : Class_1667203288930_67 { // block id: 180
    func func_1667203288930_201(param_1667203288930_202 : Int16, param_1667203288930_203 : Unit, param_1667203288930_204 : Range<UInt16>, param_1667203288930_205 : Int32) : Class_1667203288930_67 { // block id: 206
        let var_1667203288930_657 : Range<UInt16> = ((UInt16(222)&127)..(UInt16(35)&127):((-36)|1));
        func_1667203288930_212<Range<Int32>, Float64>(###"Oyw?3+bX9]"###, namedParam_1667203288930_214 : (var_1667203288930_515, Int32(7), var_1667203288930_135, ((Int8(-9)&127)..(Int8(17)&127):(60|1)), var_1667203288930_524, var_1667203288930_657, ((var_1667203288930_9&127)..(var_1667203288930_9&127):((92|1)))), namedParam_1667203288930_215 : ((Int16(91)&127)..(Int16(71)&127):(102|1)))[2][9]
    }
;
    var var_1667203288930_689 : Range<UInt16> = ((UInt16(Int8(-57))&127)..(UInt16(Int8(-28))&127):(((-64)|1)));
    if (try { // block id: 183
        ();
        ((Int16(19)&127)..=(Int16(-48)&127):(55|1));
        var_1667203288930_102
    } finally { // block id: 187
        ((UInt8(29)&127)..(var_1667203288930_191&127):((var_1667203288930_9|1)));
        var_1667203288930_197;
        true
    }) { func_1667203288930_201(match (var_1667203288930_668) {
        case caseVar_1667203288930_672 : Array<UInt64> => 
            ();
            Option<Array<Range<UInt16>>>.Some([((UInt16(23)&127)..(UInt16(9)&127):(65|1)), ((UInt16(34)&127)..=(UInt16(20)&127):(60|1)), ((UInt16(75)&127)..=(UInt16(81)&127):(47|1)), ((UInt16(207)&127)..=(UInt16(106)&127):(28|1)), ((UInt16(182)&127)..(UInt16(131)&127):(67|1)), ((UInt16(78)&127)..=(UInt16(136)&127):(12|1)), ((UInt16(232)&127)..=(UInt16(148)&127):((-114)|1)), ((UInt16(149)&127)..(UInt16(140)&127):((-110)|1)), ((UInt16(134)&127)..(UInt16(205)&127):((-14)|1)), ((UInt16(208)&127)..(UInt16(2)&127):(90|1))]);
            var_1667203288930_472
        
        case _ => 
            var_1667203288930_163;
            Int16(-86)
        
    }, if (true) { // block id: 684

    }, if (false) { ((UInt16(85)&127)..=(UInt16(248)&127):(11|1)) } else { var_1667203288930_689 } , var_1667203288930_303) } else { match (Option<Array<Range<UInt16>>>.None) {
        case caseVar_1667203288930_701 : Range<Int64> => 
            var_1667203288930_163;
            var_1667203288930_58;
            Class_1667203288930_67(var_1667203288930_191, optionalParam_1667203288930_708 : func_1667203288930_43<Class_1667203288930_67, Class_1667203288930_67, Int64>)
        
        case _ => 
            let var_1667203288930_921 : Int16 = Int16(Int16(-98));
            if (false) { var_1667203288930_71 } else { Class_1667203288930_67(var_1667203288930_902, ((Int32(114)&127)..=(Int32(-27)&127):(105|1)), [((var_1667203288930_472&127)..=(Int16(-121)&127):((var_1667203288930_9|1))), var_1667203288930_326, ((Int16(-104)&127)..=(Int16(77)&127):((19|1))), ((Int16(-2)&127)..=(Int16(104)&127):(48|1)), ((Int16(-100)&127)..=(var_1667203288930_921&127):((11|1))), var_1667203288930_326, ((Int16(81)&127)..(Int16(-103)&127):((var_1667203288930_9|1))), var_1667203288930_326, ((Int16(-25)&127)..=(Int16(20)&127):((-107)|1)), var_1667203288930_326]) } 
        
        case caseVar_1667203288930_935 : Rune => 
            if (var_1667203288930_102) { var_1667203288930_58 } else { (var_1667203288930_163, [(-124), 30, 54, 37, 31, 2, (-122), (-15), (-78), 23], var_1667203288930_111) } ;
            var_1667203288930_163;
            var_1667203288930_71
        
        case _ : Array<Class_1667203288930_67> => 
            [var_1667203288930_297, var_1667203288930_952, var_1667203288930_297, var_1667203288930_297, var_1667203288930_297, var_1667203288930_297, var_1667203288930_952, var_1667203288930_297, var_1667203288930_962, var_1667203288930_952];
            26.0;
            var_1667203288930_71
        
        case _ => 
            ((var_1667203288930_973&127)..(var_1667203288930_266&127):((72|1)));
            if (false) { Class_1667203288930_67() } else { var_1667203288930_71 } 
        
    } } 
}

public func func_1667203288930_170<T0>(param_1667203288930_171 : Float32) : (Unit, Array<Int64>, Float32) { // block id: 172
    let var_1667203288930_1036 : Int64 = Int64(Int8(Int8(Int8(UInt8(151)))));
    func_1667203288930_212(if (true) { ((var_1667203288930_378&127)..(var_1667203288930_378&127):(((-52)|1))) } else { var_1667203288930_988 } , match (Option<Option<Array<Range<Int16>>>>.Some(Option<Array<Range<Int16>>>.Some([((Int16(-3)&127)..(Int16(57)&127):(66|1)), var_1667203288930_326, ((Int16(36)&127)..(Int16(27)&127):((-64)|1)), ((Int16(-62)&127)..=(Int16(-14)&127):((-12)|1)), var_1667203288930_326, ((Int16(105)&127)..(Int16(-71)&127):(81|1)), var_1667203288930_326, ((Int16(-86)&127)..(Int16(22)&127):((-2)|1)), ((Int16(105)&127)..(Int16(99)&127):((94|1))), var_1667203288930_326]))) {
        case _ => 
            ((UInt16(117)&127)..=(UInt16(245)&127):((126|1)));
            var_1667203288930_135
        
        case caseVar_1667203288930_1017 : Range<Int16> => 
            var_1667203288930_135
        
        case _ => 
            ((var_1667203288930_303&127)..=(var_1667203288930_303&127):((var_1667203288930_9|1)))
        
    }, (var_1667203288930_1030, (var_1667203288930_163, [var_1667203288930_1036, var_1667203288930_9, (-34), var_1667203288930_973, var_1667203288930_266, var_1667203288930_9, var_1667203288930_9, var_1667203288930_266, 126, (-96)], Float32(111.0)), [((var_1667203288930_258&127)..(Int16(-39)&127):((var_1667203288930_973|1))), ((Int16(78)&127)..(Int16(-49)&127):((-54)|1)), ((Int16(-42)&127)..(Int16(4)&127):((-70)|1)), var_1667203288930_326, ((Int16(119)&127)..=(Int16(10)&127):((var_1667203288930_1064|1))), var_1667203288930_1067, ((Int16(119)&127)..(Int16(77)&127):(16|1)), var_1667203288930_326, var_1667203288930_326, ((Int16(54)&127)..=(Int16(4)&127):((-106)|1))], var_1667203288930_1030, ((var_1667203288930_191&127)..=(UInt8(238)&127):((var_1667203288930_973|1))), UInt8(82))[3], namedParam_1667203288930_179 : (-86.0)).var_1667203288930_1082
}


public func func_1667203288930_13<T0, T1>(param_1667203288930_14 : Int16) : Int64 { // block id: 15
    Int32(-89);
    func func_1667203288930_38(param_1667203288930_39 : Option<Array<Int64>>, param_1667203288930_40 : Range<Int16>) : Array<Int64> { // block id: 41
        var var_1667203288930_131 : Range<Int8> = ((Int8(-3)&127)..=(Int8(70)&127):(54|1));
        func_1667203288930_43<Class_1667203288930_67, Class_1667203288930_67, Int64>(namedParam_1667203288930_44 : (if (var_1667203288930_102) { var_1667203288930_106 } else { Option<Float32>.None }  ?? var_1667203288930_111), optionalParam_1667203288930_45 : if (var_1667203288930_102) { // block id: 117
            var var_1667203288930_120 : UInt16 = UInt16(UInt8(Int8(Int8(UInt8(22)))));
            var_1667203288930_120 &= UInt16(138);
            if (var_1667203288930_102) { (var_1667203288930_131, Int32(103), var_1667203288930_135, ((Int8(-92)&127)..(Int8(-104)&127):(39|1)), Float32(55.0), ((UInt16(241)&127)..=(UInt16(70)&127):(105|1)), (((-90)&127)..((-12)&127):(92|1))) } else { var_1667203288930_142 } 
        } else { // block id: 160
            ();
            var_1667203288930_163;
            var_1667203288930_142
        }[2]);
        (match ((var_1667203288930_524|>func_1667203288930_170<String>)) {
            case caseVar_1667203288930_1091 : Option<Range<Int16>> => 
                ();
                var_1667203288930_163;
                UInt16(12)
            
            case _ => 
                var var_1667203288930_1100 : Int64 = Int64(UInt16(UInt8(54)));
                var_1667203288930_1100 |= var_1667203288930_9;
                if (var_1667203288930_102) { [UInt64(123), UInt64(52), UInt64(26), UInt64(251), UInt64(127), UInt64(185), UInt64(96), UInt64(159), UInt64(180), UInt64(108)] } else { var_1667203288930_1030 } ;
                var_1667203288930_378
            
        }&127)..=(try { // block id):( 1113
            var_1667203288930_1030;
            var_1667203288930_303--;
            let var_1667203288930_1122 : Range<Int64> = (((-6)&127)..=((-109)&127):((Int64(Int16(UInt8(221)))|1)));
            (var_1667203288930_378, var_1667203288930_58, var_1667203288930_988, var_1667203288930_1122)
        } finally { // block id: 1129
            var_1667203288930_472 &= Int16(55);
            UInt8(252);
            (UInt16(115), var_1667203288930_58, ((UInt16(23)&127)..=(UInt16(21)&127):(((-34)|1))), (((-86)&127)..((-110)&127):(((-66)|1))))
        }[0]&127):(8|1);
        var var_1667203288930_1164 : ?Array<Int64> = Option<Array<Int64>>.Some([(-116), 125, 27, (-13), 39, (-93), 6, (-77), (-17), (-20)]);
        (try { // block id: 1153
            if (var_1667203288930_102) { Option<Array<Int64>>.None } else { Option<Array<Int64>>.None } 
        } finally { // block id: 1158
            ((UInt32(237)&127)..=(UInt32(148)&127):((-114)|1));
            var_1667203288930_163;
            let var_1667203288930_1168 : ?Array<Int64> = (((Int64(Int32(UInt16(165)))&127)..(Int64(UInt8(UInt8(2)))&127):((Int64(Int16(Int16(-126)))|1))) as Array<Int64>);
            if (true) { var_1667203288930_1164 } else { var_1667203288930_1168 } 
        } ?? [(-67), 70, 73, 89, (-42), 43, 84, (-6), (-84), (-47)])
    }
;
    func func_1667203288930_35() : Array<Int64> { // block id: 36
        func_1667203288930_38(((var_1667203288930_1186, 69.0, var_1667203288930_135)[0] as Array<Int64>), ((Int16(27)&127)..(Int16(8)&127):((-10)|1)))
    }
;
    (Option<Array<Int64>>.None ?? func_1667203288930_35())[4]
}

main(): Int64 {
    try {
        let var_1667203288930_1195 : (Int16) -> Int64 = func_1667203288930_13<UInt64, Array<Array<UInt64>>>;
        var_1667203288930_9 * (Int16(25)|>var_1667203288930_1195)
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1667203288930_9*var_1667203288930_9), 64)
        crccheck.updateBuffer(UInt64(var_1667203288930_303*var_1667203288930_303), 64)
        crccheck.updateBuffer(UInt64(var_1667203288930_472*var_1667203288930_472), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1667203288930_67 {

}

