/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

public var var_1730926162099_83: Range<UInt16> = ((UInt16(UInt16(61)) & 127)..=(UInt16(UInt16(90)) & 127) : (Int64(31) |
    1))
public var var_1730926162099_91: Bool = false
public var var_1730926162099_98: Rune = r'l'
@Deprecated
public var var_1730926162099_115: Int32 = Int32(-75)
let var_1730926162099_133: Range<Int16> = ((Int16(Int16(UInt8(Int8(Int8(-34))))) & 127)..(Int16(Int16(105)) & 127) : (Int64(-109) |
    1))
internal var var_1730926162099_175: Range<UInt8> = ((UInt8(UInt8(18)) & 127)..(UInt8(UInt8(84)) & 127) : (Int64(-90) | 1))
internal var var_1730926162099_258: (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) = (false, ((UInt8(UInt8(219)) &
        127)..(UInt8(UInt8(170)) & 127) : (Int64(2) | 1)), Float32(Float32(Float32(-98.0))), (), r'I', ((Int16(Int16(-109)) &
        127)..=(Int16(Int16(-100)) & 127) : (Int64(-89) | 1)))
public let var_1730926162099_312: Int64 = Int64(UInt64(UInt8(UInt8(31))))
internal let var_1730926162099_325: Int32 = Int32(UInt8(2))
@Deprecated
public let var_1730926162099_394: (Int16, Option<(Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)>, 
    Range<UInt16>, (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>), Range<UInt8>, Unit, Int8, (Float32, Range<Int16>, 
    Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)) = (Int16(UInt8(244)), ((Float32(94.0), ((Int16(Int16(-76)) &
            127)..(Int16(Int16(99)) & 127) : (Int64(26) | 1)), (UInt8(235) is Rune), ((Int16(Int16(-65)) & 127)..=(Int16(Int16(-27)) &
            127) : (Int64(91) | 1)), ((UInt32(UInt32(227)) & 127)..=(UInt32(UInt32(214)) & 127) : (Int64(-77) | 1)),
        Int32(UInt32(87)), ((Int16(Int16(-79)) & 127)..(Int16(Int16(41)) & 127) : (Int64(-94) | 1))) as (Float32, Range<Int16>, 
        Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)), ((UInt16(UInt16(89)) & 127)..=(UInt16(UInt16(Int16(68))) &
        127) : (Int64(-125) | 1)), (false, ((UInt8(UInt8(17)) & 127)..(UInt8(UInt8(39)) & 127) : (Int64(40) | 1)),
        Float32(Float32(Float32(113.0))), (), r'm', ((Int16(Int16(101)) & 127)..=(Int16(Int16(-49)) & 127) : (Int64(68) |
            1))), ((UInt8(UInt8(116)) & 127)..(UInt8(UInt8(10)) & 127) : (Int64(-100) | 1)), (), Int8(-100), (Float32(Float32(-27.0)),
        ((Int16(Int16(60)) & 127)..(Int16(Int16(UInt8(143))) & 127) : (Int64(4) | 1)), (((UInt64(UInt64(114)) & 127)..(UInt64(UInt64(42)) &
            127) : (Int64(-50) | 1)) is UInt32), ((Int16(Int16(97)) & 127)..(Int16(Int16(6)) & 127) : (Int64(42) | 1)), ((UInt32(UInt32(Int8(-45))) &
            127)..(UInt32(UInt32(106)) & 127) : (Int64(93) | 1)), Int32(110), ((Int16(Int16(107)) & 127)..=(Int16(Int16(UInt16(39))) &
            127) : (Int64(-13) | 1))))
public let var_1730926162099_469: Int8 = Int8(90)
var var_1730926162099_480: VArray<Int64, $8> = [Int64(2), Int64(83), Int64(-124), Int64(71), Int64(-32), Int64(-28),
    Int64(80), Int64(64)]
public let var_1730926162099_550: Bool = (Int64(UInt64(Int32(-1))) is (Int16, Option<(Float32, Range<Int16>, Bool, Range<Int16>, 
    Range<UInt32>, Int32, Range<Int16>)>, Range<UInt16>, (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>), Range<UInt8>, 
    Unit, Int8, (Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)))
@Deprecated
public var var_1730926162099_596: Range<UInt32> = ((UInt32(UInt32(65)) & 127)..=(UInt32(UInt32(UInt16(120))) & 127) : (Int64(-109) |
    1))
@Deprecated
public let var_1730926162099_628: ?Bool = Option<Bool>.None
public const var_1730926162099_675: UInt32 = 101
public const var_1730926162099_678: Int64 = 108
@Deprecated
var var_1730926162099_736: Int = Int64(Int32(120))
@Deprecated
internal let var_1730926162099_751: Range<UInt8> = ((UInt8(UInt8(127)) & 127)..(UInt8(UInt8(211)) & 127) : (Int64(30) | 1))
@Deprecated
public const var_1730926162099_817: UInt32 = 230
@Deprecated
public let var_1730926162099_833: Interface_1730926162099_235 = Class_1730926162099_229()
internal var var_1730926162099_875: Class_1730926162099_871 = Class_1730926162099_871()
var var_1730926162099_998: Int64 = Int64(Int32(Int32(UInt16(235))))
@Deprecated
internal let var_1730926162099_1053: Class_1730926162099_1049 = Class_1730926162099_1049()
public let var_1730926162099_1197: (VArray<Float64, $1>, Unit, Range<UInt32>, VArray<Float64, $1>) = (VArray<Float64, $1>({
            i => Float64(-39.0)
        }), (), ((UInt32(UInt32(237)) & 127)..=(UInt32(UInt32(224)) & 127) : (Int64(123) | 1)), VArray<Float64, $1>({
            i => Float64(3.0)
        }))
public var var_1730926162099_1209: (Bool, (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>)) = (true, (true, ((UInt8(UInt8(49)) &
            127)..=(UInt8(UInt8(213)) & 127) : (Int64(85) | 1)), Float32(Float32(2.0)), (), r'e', ((Int16(Int16(90)) &
            127)..=(Int16(Int16(-64)) & 127) : (Int64(59) | 1))))
public var var_1730926162099_1242: Option<Int32> = Option<Int32>.None
public var var_1730926162099_1299: Option<(VArray<Float64, $1>, Unit, Range<UInt32>, VArray<Float64, $1>)> = Option<(VArray<Float64, $1>, 
        Unit, Range<UInt32>, VArray<Float64, $1>)>.None
public let var_1730926162099_1355: ((Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8), UInt16, Rune, VArray<Bool, $6>, 
    Bool, Array<Bool>, Option<(VArray<Float64, $1>, Unit, Range<UInt32>, VArray<Float64, $1>)>, (Unit, Range<Int32>, 
    String, Bool, Float64, Unit, UInt8, Int8)) = (((), ((Int32(Int32(UInt8(180))) & 127)..=(Int32(Int32(106)) & 127) : (Int64(-40) |
            1)), """
Z-B3:
=u}3l
""", (Option<(VArray<Float64, $1>, Unit, Range<UInt32>, VArray<Float64, $1>)>.None is Float64),
        Float64(Float32(Float32(21.0))), (), UInt8(162), Int8(Int8(-126))), UInt16(245), r'j', VArray<Bool, $6>({
            i => false
        }), true, [false, false,
        ((((), ((Int32(Int32(-29)) & 127)..(Int32(Int32(84)) & 127) : (Int64(-60) | 1)), "/By#qx1k0b", true, Float64(-35.0),
            (), UInt8(198), Int8(-101)), UInt16(70), r'E', VArray<Bool, $6>({i => true}), false, [false, true, true,
            true, false, true, false, false, true, true], Option<(VArray<Float64, $1>, Unit, Range<UInt32>, VArray<Float64, $1>)>
            .None, ((), ((Int32(Int32(-34)) & 127)..=(Int32(Int32(126)) & 127) : (Int64(125) | 1)), """
X@]k:
Xd(<k
""",
            false, Float64(32.0), (), UInt8(247), Int8(79))) is Float64), true, false,
        ((((), ((Int32(Int32(-1)) & 127)..(Int32(Int32(24)) & 127) : (Int64(64) | 1)), """
AZ3%7
n=a-w
""", false,
            Float64(21.0), (), UInt8(201), Int8(-42)), UInt16(205), r'm', VArray<Bool, $6>(repeat: true), true, [false,
            false, true, false, false, false, false, true, true, false], Option<(VArray<Float64, $1>, Unit, Range<UInt32>, 
                VArray<Float64, $1>)>.None, ((), ((Int32(Int32(72)) & 127)..=(Int32(Int32(101)) & 127) : (Int64(124) | 1)),
            "kj%<1tQg6j", true, Float64(125.0), (), UInt8(208), Int8(-4))) is Range<Int16>), false, false,
        ([(), (), (), (), (), (), (), (), (), ()] is Struct_1730926162099_1254), true], Option<(VArray<Float64, $1>, 
            Unit, Range<UInt32>, VArray<Float64, $1>)>.None, ((), ((Int32(Int32(19)) & 127)..(Int32(Int32(11)) & 127) : (Int64(-52) |
            1)), "'O6aQPe=Ye", (Class_1730926162099_1265() is Bool), Float64(Float64(-76.0)), (), UInt8(25), Int8(Int8(Int8(-47)))))
public const var_1730926162099_1539: UInt16 = 115
public var var_1730926162099_1563: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(6)) &
        127)..=(Int32(Int32(-63)) & 127) : (Int64(86) | 1)), "Nc[Y}`bB|r", true, Float64(-91.0), (), UInt8(8), Int8(-98))
public var var_1730926162099_1636: VArray<Bool, $6> = [true, true, false, false, true, true]
internal let var_1730926162099_1662: Int16 = Int16(UInt16(Int16(UInt8(Int8(-102)))))
public var var_1730926162099_1821: VArray<Float64, $1> = VArray<Float64, $1>(repeat: Float64(Float64(70.0)))
public const var_1730926162099_1869: Unit = ()
@Deprecated
internal var var_1730926162099_1929: Unit = ()
public let var_1730926162099_1960: ?Int16 = ((((Float32(21.0), ((Int16(Int16(25)) & 127)..(Int16(Int16(-34)) & 127) : (Int64(101) |
            1)), true, ((Int16(Int16(-127)) & 127)..(Int16(Int16(27)) & 127) : (Int64(58) | 1)), ((UInt32(UInt32(209)) &
            127)..(UInt32(UInt32(175)) & 127) : (Int64(-19) | 1)), Int32(-55), ((Int16(Int16(28)) & 127)..(Int16(Int16(110)) &
            127) : (Int64(-56) | 1))) is (Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)),
    (((Float32(45.0), ((Int16(Int16(-50)) & 127)..(Int16(Int16(98)) & 127) : (Int64(-35) | 1)), false, ((Int16(Int16(38)) &
                127)..=(Int16(Int16(119)) & 127) : (Int64(-108) | 1)), ((UInt32(UInt32(159)) & 127)..=(UInt32(UInt32(24)) &
                127) : (Int64(42) | 1)), Int32(66), ((Int16(Int16(-69)) & 127)..(Int16(Int16(-9)) & 127) : (Int64(-23) |
                1))) is Interface_1730926162099_232), ((UInt8(UInt8(55)) & 127)..=(UInt8(UInt8(242)) & 127) : (Int64(-37) |
            1)), Float32(74.0), (), r'1', ((Int16(Int16(82)) & 127)..(Int16(Int16(66)) & 127) : (Int64(-54) | 1)))) as Int16)
public var var_1730926162099_2022: ?Bool = (Class_1730926162099_1265() as Bool)
public var var_1730926162099_2032: Enum_1730926162099_490 = Enum_1730926162099_490.enumValue_1730926162099_2034
public let var_1730926162099_2057: Option<Array<Unit>> = Option<Array<Unit>>.None
public let var_1730926162099_2076: Range<Int64> = ((Int64(Int64(Int8(55))) & 127)..(Int64(Int64(0)) & 127) : (Int64(Int8(UInt8(130))) |
    1))
public var var_1730926162099_2091: Option<Int64> = (UInt64(135) as Int64)
public let var_1730926162099_2139: String = "#iH[t7a{y`J"
public let var_1730926162099_2181: Class_1730926162099_229 = Class_1730926162099_229()
var var_1730926162099_2187: UInt8 = UInt8(73)
public let var_1730926162099_2198: Option<Unit> = Option<Unit>.None
public var var_1730926162099_2217: UInt = UInt64(89)
public var var_1730926162099_2249: VArray<Bool, $1> = [(Enum_1730926162099_490.enumValue_1730926162099_2034 is Range<UInt8>)]
@Deprecated
public let var_1730926162099_2267: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(Int32(-124)),
    [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(UInt8(186))) & 127)..(Int8(Int8(Int8(UInt8(151)))) & 127) : (Int64(UInt32(Int32(-86))) |
        1)), VArray<Float64, $1>({i => Float64(-1.0)}), ((UInt64(UInt64(5)) & 127)..=(UInt64(UInt64(35)) & 127) : (Int64(-124) |
        1)))
public var var_1730926162099_2324: Option<Int64> = (() as Int64)
internal var var_1730926162099_2338: Int16 = Int16(36)
public let var_1730926162099_2363: UInt16 = UInt16(Int8(-88))
internal var var_1730926162099_2370: Int8 = Int8(Int8(18))
@Deprecated
internal let var_1730926162099_2398: Int64 = Int64(UInt16(Int8(Int8(UInt8(150)))))
public var var_1730926162099_2419: Int64 = Int64(UInt32(UInt8(64)))
public let var_1730926162099_2466: Range<Int16> = ((Int16(Int16(-12)) & 127)..=(Int16(Int16(-18)) & 127) : (Int64(94) | 1))
public var var_1730926162099_2500: Bool = (Int64(-68) is (Rune) -> Bool)
public var var_1730926162099_2571: Rune = r't'
@Deprecated
public let var_1730926162099_2577: Int8 = Int8(109)
public let var_1730926162099_2610: VArray<Int64, $8> = [Int64(Int16(Int8(24))), Int64(UInt16(94)), Int64(UInt16(213)),
    Int64(49), Int64(Int32(-120)), Int64(-2), Int64(Int32(Int16(UInt16(182)))), Int64(-38)]
public let var_1730926162099_2635: Unit = ()
@Deprecated
public let var_1730926162099_2761: Range<Int16> = ((Int16(Int16(-14)) & 127)..=(Int16(Int16(114)) & 127) : (Int64(118) |
    1))
public var var_1730926162099_2842: Rune = r'i'
public let var_1730926162099_2850: Int64 = Int64(38)
public const var_1730926162099_2856: Unit = ()
internal let var_1730926162099_2861: (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) = ((VArray<Float64, $1>(repeat: Float64(Float64(85.0))) is VArray<Int64, $8>),
    ((UInt8(UInt8(245)) & 127)..=(UInt8(UInt8(167)) & 127) : (Int64(-111) | 1)), Float32(Float32(Float32(-122.0))), (),
    r'S', ((Int16(Int16(61)) & 127)..(Int16(Int16(-44)) & 127) : (Int64(47) | 1)))
public var var_1730926162099_2896: VArray<Bool, $6> = [false, true, true,
    ((("""
4aQ\\3
BOOOP
""", Int32(24)) is Option<Bool>) is (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, 
    Int8)), true,
    ((false, ((UInt8(UInt8(110)) & 127)..(UInt8(UInt8(90)) & 127) : (Int64(-87) | 1)), Float32(Float32(2.0)), (), r'0', ((Int16(Int16(-69)) &
        127)..=(Int16(Int16(81)) & 127) : (Int64(123) | 1))) is (Int16) -> Int32)]

public func func_1730926162099_39(param_1730926162099_40: Unit): (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) { // block id: 41
    var var_1730926162099_51: Array<UInt64> = [UInt64(Int64(6)), UInt64(Int32(78)), UInt64(232), UInt64(169),
        UInt64(Int32(Int32(UInt8(202)))), UInt64(UInt8(Int8(Int8(53)))), UInt64(188), UInt64(Int64(34)),
        UInt64(UInt16(UInt16(UInt8(190)))), UInt64(UInt16(217))];
    let var_1730926162099_110: VArray<Int64, $8> = [Int64(103), Int64(73), Int64(38), Int64(-11), Int64(-90), Int64(-12),
        Int64(-123), Int64(-81)];
    if (true) {
        try { // block id: 45
            var var_1730926162099_47: Rune = r'Z';
            var_1730926162099_47
        } catch (e: Exception) { // block id: 49
            var_1730926162099_51;
            r'j'
        }
    } else {
        match (Float32(123.0)) {
            case 55.0 | -44.0 =>
                var_1730926162099_83;
                r'o'

            case 116.0 =>
                var_1730926162099_91 ||= true
                Int32(110) & Int32(-15);
                var_1730926162099_98

            case _ => var_1730926162099_98

            case _ =>
                if (var_1730926162099_91) {
                    var_1730926162099_110
                } else {
                    var_1730926162099_110
                };
                var_1730926162099_115++;
                if (false) {
                    var_1730926162099_98
                } else {
                    r'E'
                }
        }
    };
    const var_1730926162099_144: Int16 = -12;
    const var_1730926162099_150: UInt32 = 179;
    var loopTimeVar_1730926162099_159: Int = 0;
    while (((Option<(Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)>.None ?? (Float32(-36.0),
            var_1730926162099_133, var_1730926162099_91, ((Int16(var_1730926162099_144) & 127)..(Int16(var_1730926162099_144) &
                127) : (Int64(106) | 1)), ((UInt32(var_1730926162099_150) & 127)..(UInt32(UInt32(133)) & 127) : (Int64(-121) |
                1)), Int32(7), ((Int16(Int16(-81)) & 127)..=(Int16(Int16(-62)) & 127) : (Int64(22) | 1))))[2]) &&
            loopTimeVar_1730926162099_159 < 100) {
        loopTimeVar_1730926162099_159++;
    };
    const var_1730926162099_178: Float32 = -117.0;
    try { // block id: 161
        var loopTimeVar_1730926162099_170: Int64 = 0;
        do {
            loopTimeVar_1730926162099_170++;
            ###"';\\#]67z]>"###;
            let var_1730926162099_167: Unit = ();
            var_1730926162099_167
        } while ((false) && loopTimeVar_1730926162099_170 < 100);
        var_1730926162099_110;
        (var_1730926162099_91, var_1730926162099_175, var_1730926162099_178, (), r'A', ((Int16(Int16(-102)) & 127)..(Int16(Int16(63)) &
                127) : (Int64(-12) | 1)))
    } finally { // block id: 183
        (true, (var_1730926162099_91, var_1730926162099_175, var_1730926162099_178, (), r'G', ((Int16(var_1730926162099_144) &
                    127)..=(Int16(var_1730926162099_144) & 127) : (Int64(-23) | 1))))[1]
    }
}

public sealed interface Interface_1730926162099_235 {
    static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    }
}

public sealed interface Interface_1730926162099_234 <: Interface_1730926162099_235 {
    static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    };

    static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    }
}

public sealed interface Interface_1730926162099_233 <: Interface_1730926162099_234 {
    static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    };

    static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    }
}

public interface Interface_1730926162099_232 <: Interface_1730926162099_233 {
    static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    };

    static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    }
}

public open class Class_1730926162099_229 <: Interface_1730926162099_232 {
    @Frozen
    public init() { // block id: 231

    }

    public static const var_1730926162099_238: Unit = ();
    public static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    public open override func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    };

    public static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    }
}

@Deprecated
public enum Enum_1730926162099_490 {
    defaultValue
    | enumValue_1730926162099_495(Range<UInt64>, Range<UInt32>, UInt8)
    | enumValue_1730926162099_2034
}

@Deprecated
public func func_1730926162099_483(param_1730926162099_484: Rune): Bool { // block id: 485
    var var_1730926162099_493: Enum_1730926162099_490 = Enum_1730926162099_490.enumValue_1730926162099_495(
        ((UInt64(UInt64(165)) & 127)..=(UInt64(UInt64(Int16(-113))) & 127) : (Int64(UInt64(UInt32(82))) | 1)),
        ((UInt32(UInt32(Int8(0))) & 127)..=(UInt32(UInt32(84)) & 127) : (Int64(93) | 1)), UInt8(110));
    var var_1730926162099_535: Array<Bool> = [true, true, false, false, false, false, false, false, false, false];
    let var_1730926162099_564: (Bool, (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>)) = (false, (false, ((UInt8(UInt8(232)) &
                127)..=(UInt8(UInt8(31)) & 127) : (Int64(UInt32(177)) | 1)), Float32(Float32(-10.0)), (), r'D', ((Int16(Int16(Int8(-87))) &
                127)..(Int16(Int16(16)) & 127) : (Int64(UInt32(239)) | 1))));
    var var_1730926162099_592: Bool = false;
    match (var_1730926162099_493) {
        case enumValue_1730926162099_495(_: Array<UInt64>, _: UInt16, _: Float32) =>
            ();
            ();
            [false, var_1730926162099_91, var_1730926162099_91, false, false, true, false, true, false, false]

        case caseVar_1730926162099_530 =>
            if (true) {
                var_1730926162099_535
            } else {
                var_1730926162099_535
            }

        case _ => var_1730926162099_535
    }[9] || if ([var_1730926162099_91, false, true, var_1730926162099_550, true, var_1730926162099_550,
        var_1730926162099_550, true, false, true][1]) { // block id: 562
        var_1730926162099_564;
        const var_1730926162099_585: Unit = ();
        var_1730926162099_585;
        var_1730926162099_550
    } else if (var_1730926162099_91) { // block id: 589
        if (var_1730926162099_592) {
            ((UInt32(UInt32(166)) & 127)..=(UInt32(UInt32(250)) & 127) : (Int64(-24) | 1))
        } else {
            var_1730926162099_596
        };
        Option<(Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)>.None;
        const var_1730926162099_606: UInt = 76;
        UInt64(42) == var_1730926162099_606
    } else { // block id: 608
        Float32(-83.0) >= Float32(125.0)
    }
}

@Frozen
public const func func_1730926162099_663<T0, T1>(param_1730926162099_664: Float64, namedParam_1730926162099_665!: Bool,
    namedParam_1730926162099_666!: UInt32, namedParam_1730926162099_667!: Int64): Int32 { // block id: 668
    121
}

public const func func_1730926162099_639(param_1730926162099_640: Float64, param_1730926162099_641: Int32,
    namedParam_1730926162099_642!: Unit, optionalParam_1730926162099_643!: Int64 = -14): Unit { // block id: 645
    const var_1730926162099_656: Float32 = -35.0;
    const func func_1730926162099_647(param_1730926162099_648: Unit, optionalParam_1730926162099_649!: Float32 = 99.0,
        namedParam_1730926162099_651!: Int32, optionalParam_1730926162099_652!: Float64 = -47.0): Float32 { // block id: 654
        var_1730926162099_656
    };

    const func func_1730926162099_659(param_1730926162099_660: Int32): Unit { // block id: 661

    }

    const var_1730926162099_672: Bool = false;
    const var_1730926162099_685: Float64 = -68.0;
    const var_1730926162099_691: Int32 = 54;
    func_1730926162099_647(
        func_1730926162099_659(
            func_1730926162099_663<UInt64, String>(63.0, namedParam_1730926162099_665: var_1730926162099_672,
                namedParam_1730926162099_666: var_1730926162099_675, namedParam_1730926162099_667: var_1730926162099_678)),
        optionalParam_1730926162099_649: func_1730926162099_647((),
            optionalParam_1730926162099_649: var_1730926162099_656,
            namedParam_1730926162099_651: func_1730926162099_663<UInt64, String>(var_1730926162099_685,
                namedParam_1730926162099_665: true, namedParam_1730926162099_666: 48, namedParam_1730926162099_667: -92)),
        namedParam_1730926162099_651: var_1730926162099_691, optionalParam_1730926162099_652: var_1730926162099_685);
    func_1730926162099_659(var_1730926162099_691);
    const var_1730926162099_697: Unit = ();
    var_1730926162099_697
}

@Frozen
public const func func_1730926162099_849(namedParam_1730926162099_850!: UInt8): Int32 { // block id: 851
    const var_1730926162099_853: Unit = ();
    var_1730926162099_853;
    const func func_1730926162099_856(namedParam_1730926162099_857!: Int8, namedParam_1730926162099_858!: Rune): Int32 { // block id: 859
        86
    };

    func_1730926162099_856(namedParam_1730926162099_857: -101, namedParam_1730926162099_858: r'l')
}

@Deprecated
public const func func_1730926162099_845(param_1730926162099_846: Int16): Int32 { // block id: 847
    func_1730926162099_849(namedParam_1730926162099_850: 57)
}

public open class Class_1730926162099_871 <: Interface_1730926162099_232 & Interface_1730926162099_234 {
    @Frozen
    public init() { // block id: 873

    }

    @Frozen
    public prop var_1730926162099_878: ?Int16 { // block id: 879
        get() { // block id: 881
            ((true, (true, ((UInt8(UInt8(1)) & 127)..=(UInt8(UInt8(228)) & 127) : (Int64(-7) | 1)), Float32(53.0), (),
                    r'i', ((Int16(Int16(-119)) & 127)..(Int16(Int16(-9)) & 127) : (Int64(-12) | 1)))) as Int16)
        }
    }
    protected func func_1730926162099_1062(namedParam_1730926162099_1063!: UInt16,
        namedParam_1730926162099_1064!: Array<UInt64>,
        optionalParam_1730926162099_1065!: Array<Bool> = [(((), ((Int32(Int32(-83)) & 127)..=(Int32(Int32(44)) & 127) : (Int64(-113) |
                1)), "X<<a{'`XMIn", (false is Interface_1730926162099_233), Float64(Float32(77.0)), (), UInt8(196), Int8(UInt8(223))) is Option<Int16>),
            ((((Int16(Int16(34)) & 127)..=(Int16(Int16(44)) & 127) : (Int64(-112) | 1)), VArray<Bool, $6>({i => true}), ((Int8(Int8(46)) &
                127)..(Int8(Int8(58)) & 127) : (Int64(-123) | 1)), (false, ((UInt8(UInt8(126)) & 127)..(UInt8(UInt8(7)) &
                    127) : (Int64(5) | 1)), Float32(40.0), (), r'e', ((Int16(Int16(-128)) & 127)..(Int16(Int16(-39)) &
                    127) : (Int64(-115) | 1))), Int16(Int8(-31))) is (Unit) -> (Bool, Range<UInt8>, Float32, Unit, Rune, 
            Range<Int16>)),
            ((((Int16(Int16(78)) & 127)..=(Int16(Int16(-29)) & 127) : (Int64(-63) | 1)), VArray<Bool, $6>({i => false}),
            ((Int8(Int8(-46)) & 127)..=(Int8(Int8(-10)) & 127) : (Int64(41) | 1)), (true, ((UInt8(UInt8(193)) & 127)..(UInt8(UInt8(137)) &
                    127) : (Int64(-28) | 1)), Float32(-90.0), (), r'J', ((Int16(Int16(-40)) & 127)..=(Int16(Int16(60)) &
                    127) : (Int64(-4) | 1))), Int16(-60)) is (Int16) -> Int32),
            (VArray<Int64, $8>({i => Int64(117)}) is Int64), false, (UInt8(121) is Int64), false, true, false,
            (Int8(29) is (UInt8) -> Int32)]): Int32 { // block id: 1162
        Interface_1730926162099_234.func_1730926162099_1166(
            namedParam_1730926162099_1167: (Option<Array<Unit>>.None ?? [(), (), (), (), (), (), (), (), (), ()]));
        var var_1730926162099_1258: Struct_1730926162099_1254 = Struct_1730926162099_1254();
        (if ((Option<Bool>.None ?? var_1730926162099_91)) { // block id: 1240
            var_1730926162099_1242
        } else { // block id: 1244
            let var_1730926162099_1248: Option<Int32> = (((Int32(Int32(-21)) & 127)..(Int32(Int32(102)) & 127) : (Int64(50) |
                1)) as Int32);
            if (true) {
                var_1730926162099_1248
            } else {
                Option<Int32>.Some(var_1730926162099_115)
            }
        } ?? var_1730926162099_1258.func_1730926162099_1261())
    };

    @Frozen
    mut prop var_1730926162099_1827: UInt { // block id: 1828
        get() { // block id: 1830
            ();
            Class_1730926162099_1265();
            UInt64(UInt32(40))
        }
        set(Value) { // block id: 1837
            ((VArray<Float64, $1>({i => Float64(-99.0)}), (), ((UInt32(UInt32(108)) & 127)..(UInt32(UInt32(230)) & 127) : (Int64(-66) |
                    1)), VArray<Float64, $1>({i => Float64(-86.0)})) as Array<Bool>);
            ()
        }
    }
    protected let var_1730926162099_1876: VArray<UInt32, $7> = VArray<UInt32, $7>({i => UInt32(55)});
    public static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    public open override func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    };

    public static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    }

    static init() {
    }
}

@Deprecated
public open class Class_1730926162099_1049 <: Class_1730926162099_871 {
    @Frozen
    public init() { // block id: 1051

    }

    public open func func_1730926162099_1056(): VArray<UInt32, $7> { // block id: 1057
        var var_1730926162099_1861: UInt16 = UInt16(UInt8(208));
        match (var_1730926162099_875.func_1730926162099_1062(namedParam_1730926162099_1063: var_1730926162099_1539,
            namedParam_1730926162099_1064: [UInt64(92), UInt64(22), UInt64(96), UInt64(244), UInt64(71), UInt64(196),
                UInt64(139), UInt64(249), UInt64(140), UInt64(23)],
            optionalParam_1730926162099_1065: [false, var_1730926162099_91, var_1730926162099_91, var_1730926162099_91,
                false, true, var_1730926162099_91, var_1730926162099_91, false, false])) {
            case -93 =>
                var var_1730926162099_1809: UInt = UInt64(204);
                var_1730926162099_1809 |= var_1730926162099_1809
                var_1730926162099_1539

            case _: Float32 =>
                if (var_1730926162099_91) {
                    VArray<Float64, $1>({i => Float64(-37.0)})
                } else {
                    var_1730926162099_1821
                };
                var_1730926162099_1827 |= UInt64(26)
                var_1730926162099_1539

            case 13 => UInt16(61)

            case 75 => var_1730926162099_1861 | var_1730926162099_1861

            case _ =>
                var_1730926162099_1869;
                var_1730926162099_878;
                var_1730926162099_1861 >> ((var_1730926162099_1539) & 7)
        };
        var_1730926162099_1876
    };

    public static func func_1730926162099_841(namedParam_1730926162099_842!: Range<Int64>): Bool { // block id: 843
        var var_1730926162099_895: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(Int16(Int16(86)))) & 127)..=(Int16(Int16(UInt16(157))) & 127) : (Int64(120) |
                1)), VArray<Bool, $6>(repeat: ([UInt64(34), UInt64(22), UInt64(153), UInt64(152), UInt64(253),
                    UInt64(39), UInt64(65), UInt64(80), UInt64(105), UInt64(165)] is Array<UInt64>)), ((Int8(Int8(36)) &
                127)..=(Int8(Int8(-113)) & 127) : (Int64(95) | 1)), ((VArray<Bool, $6>({i => false}) is UInt64), ((UInt8(UInt8(19)) &
                    127)..=(UInt8(UInt8(11)) & 127) : (Int64(UInt16(143)) | 1)), Float32(-22.0), (), r'u', ((Int16(Int16(70)) &
                    127)..(Int16(Int16(-75)) & 127) : (Int64(-76) | 1))), Int16(-77));
        (var_1730926162099_875.var_1730926162099_878 ?? var_1730926162099_895[4]) |> func_1730926162099_845;
        var var_1730926162099_959: Range<Int8> = ((Int8(Int8(-105)) & 127)..(Int8(Int8(-72)) & 127) : (Int64(-121) | 1));
        var var_1730926162099_963: Range<Int64> = ((Int64(Int64(-16)) & 127)..=(Int64(Int64(57)) & 127) : (Int64(-53) | 1));
        var var_1730926162099_967: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(85)) &
                127)..=(Int32(Int32(Int16(UInt16(44)))) & 127) : (Int64(Int16(76)) | 1)), "Hms&q]b(z0", false, Float64(54.0),
            (), UInt8(UInt8(143)), Int8(UInt8(UInt8(19))));
        ((var_1730926162099_959, [(), (), (), (), (), (), (), (), (), ()], var_1730926162099_963, "i2mIUF'Xo0",
            var_1730926162099_967)[3] is Range<Int8>)
    };

    public open override func func_1730926162099_836(): VArray<UInt32, $7> { // block id: 837
        let var_1730926162099_988: Range<Int64> = ((Int64(Int64(-53)) & 127)..=(Int64(Int64(51)) & 127) : (Int64(116) | 1));
        var var_1730926162099_993: UInt16 = UInt16(230);
        var var_1730926162099_1006: UInt32 = UInt32(UInt16(214));
        var var_1730926162099_1014: VArray<UInt32, $7> = [UInt32(40), UInt32(90), UInt32(30), UInt32(191), UInt32(222),
            UInt32(237), UInt32(4)];
        var loopTimeVar_1730926162099_1042: Range<UInt64> = ((UInt64(UInt64(UInt32(46))) & 127)..(UInt64(UInt64(31)) &
            127) : (Int64(95) | 1));
        for (i in loopTimeVar_1730926162099_1042 where if (func_1730926162099_841(
            namedParam_1730926162099_842: var_1730926162099_988)) { // block id: 990
            var_1730926162099_993 <<= ((UInt16(160)) & 7)
            var_1730926162099_998 -= var_1730926162099_998
            var_1730926162099_1006 >= var_1730926162099_1006
        } else { // block id: 1010
            if (false) {
                var_1730926162099_1014
            } else {
                VArray<UInt32, $7>(repeat: var_1730926162099_1006)
            };
            var_1730926162099_91
        }) {
            if (var_1730926162099_91) { // block id: 1028
                var_1730926162099_988;
                const var_1730926162099_1031: Unit = ();
                var_1730926162099_1031
            } else if (true) { // block id: 1034
                var var_1730926162099_1037: Int8 = Int8(-69);
                var_1730926162099_1037 -= Int8(-85)
                ();
                ()
            }
        };
        var_1730926162099_1053.func_1730926162099_1056()
    };

    public static func func_1730926162099_1166(namedParam_1730926162099_1167!: Array<Unit>): (Bool, (Bool, Range<UInt8>, 
        Float32, Unit, Rune, Range<Int16>)) { // block id: 1168
        let var_1730926162099_1172: (Int32, Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>) = (Int32(-46),
            [(), (), (), (), (), (), (), (), (), ()], ((Int8(Int8(-62)) & 127)..(Int8(Int8(-10)) & 127) : (Int64(-11) | 1)),
            VArray<Float64, $1>(repeat: Float64(Float32(-113.0))), ((UInt64(UInt64(141)) & 127)..(UInt64(UInt64(235)) &
                127) : (Int64(85) | 1)));
        var_1730926162099_1172[0];
        try { // block id: 1195
            var_1730926162099_1197
        } catch (e: Exception) { // block id: 1205
            var_1730926162099_1197
        }[1];
        var_1730926162099_1209
    }
}

public struct Struct_1730926162099_1254 {
    public init() { // block id: 1256

    }

    private let var_1730926162099_1269: Class_1730926162099_1265 = Class_1730926162099_1265();
    static var var_1730926162099_1639: Range<Int8> = ((Int8(Int8(91)) & 127)..=(Int8(Int8(110)) & 127) : (Int64(89) | 1));
    private static let var_1730926162099_1710: Range<Int32> = ((Int32(Int32(89)) & 127)..=(Int32(Int32(-108)) & 127) : (Int64(68) |
        1));
    public func func_1730926162099_1261(): Int32 { // block id: 1262
        var_1730926162099_1269.var_1730926162099_1272 &&= !var_1730926162099_91
        var loopTimeVar_1730926162099_1321: Array<UInt64> = [UInt64(10), UInt64(UInt32(34)), UInt64(186),
            UInt64(UInt32(171)), UInt64(72), UInt64(43), UInt64(Int8(UInt8(251))), UInt64(152), UInt64(50), UInt64(85)];
        for (i in loopTimeVar_1730926162099_1321 where var_1730926162099_91) {
            (var_1730926162099_1299 ?? (VArray<Float64, $1>({i => Float64(88.0)}), (), ((UInt32(UInt32(43)) & 127)..=(UInt32(UInt32(23)) &
                    127) : (var_1730926162099_998 | 1)), VArray<Float64, $1>(repeat: Float64(-64.0))));
            var loopTimeVar_1730926162099_1320: Int64 = 0;
            do {
                loopTimeVar_1730926162099_1320++;
                ();
                var var_1730926162099_1317: Int16 = Int16(-30);
                var_1730926162099_1317++
            } while ((var_1730926162099_91) && loopTimeVar_1730926162099_1320 < 100)
        };
        var var_1730926162099_1349: UInt32 = UInt32(UInt32(UInt16(120)));
        let var_1730926162099_1519: (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8) = ((), ((Int32(Int32(99)) &
                127)..=(Int32(Int32(Int32(UInt32(127)))) & 127) : (Int64(Int64(92)) | 1)), ###",*2 :WX|-O"###, false,
            Float64(Float32(Float32(60.0))), (), UInt8(94), Int8(UInt8(209)));
        const var_1730926162099_1656: Unit = ();
        var var_1730926162099_1783: UInt = UInt64(114);
        if (try { // block id: 1341
            var var_1730926162099_1344: Int16 = Int16(57);
            var_1730926162099_1344 &= var_1730926162099_1344
            var_1730926162099_1349 |= UInt32(193)
            var_1730926162099_1355
        } catch (_) { // block id: 1505
            VArray<UInt32, $7>(repeat: var_1730926162099_1349);
            var var_1730926162099_1515: Range<UInt8> = ((UInt8(UInt8(144)) & 127)..=(UInt8(UInt8(207)) & 127) : (Int64(112) |
                1));
            var_1730926162099_1515;
            (var_1730926162099_1519, var_1730926162099_1539, r'b', VArray<Bool, $6>({i => true}), true, [false, true,
                    true, var_1730926162099_91, var_1730926162099_91, false, var_1730926162099_91, true, true, false],
                var_1730926162099_1299, var_1730926162099_1563)
        }[4]) { // block id: 1574
            let var_1730926162099_1582: Array<Bool> = [false, (Int8(UInt8(Int8(108))) is Int64),
                (((Int32(Int32(UInt32(33))) & 127)..=(Int32(Int32(UInt8(120))) & 127) : (Int64(UInt64(97)) | 1)) is (Int32, 
                Array<Unit>, Range<Int8>, VArray<Float64, $1>, Range<UInt64>)), true, true, false, true, false,
                (((), ((Int32(Int32(61)) & 127)..(Int32(Int32(70)) & 127) : (Int64(60) | 1)), "tQt*6,zjvs", true,
                Float64(-88.0), (), UInt8(Int8(0)), Int8(-8)) is String), (() is (Int16) -> Int32)];
            (Option<Array<Bool>>.None ?? var_1730926162099_1582);
            var_1730926162099_1209;
            Int32(-25) & var_1730926162099_115
        } else if ((try { // block id: 1621
            var var_1730926162099_1624: Range<Int16> = ((Int16(Int16(UInt16(UInt16(UInt8(123))))) & 127)..(Int16(Int16(77)) &
                127) : (Int64(Int16(UInt16(UInt8(83)))) | 1));
            let var_1730926162099_1648: Byte = UInt8(146);
            let var_1730926162099_1653: Float32 = Float32(-19.0);
            (var_1730926162099_1624, var_1730926162099_1636, var_1730926162099_1639, (false, ((UInt8(var_1730926162099_1648) &
                        127)..(UInt8(UInt8(101)) & 127) : (var_1730926162099_998 | 1)), var_1730926162099_1653,
                    var_1730926162099_1656, r'v', ((Int16(Int16(-30)) & 127)..=(Int16(var_1730926162099_1662) & 127) : (var_1730926162099_998 |
                        1))), var_1730926162099_1662)
        } finally { // block id: 1670
            ((Int32(Int32(-35)) & 127)..=(Int32(Int32(119)) & 127) : (Int64(-1) | 1));
            var var_1730926162099_1673: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, 
                Unit, Rune, Range<Int16>), Int16) = (((Int16(Int16(104)) & 127)..=(Int16(Int16(Int8(UInt8(113)))) & 127) : (Int64(Int8(Int8(26))) |
                    1)), VArray<Bool, $6>(repeat: (Int32(-66) is Int16)), ((Int8(Int8(-5)) & 127)..(Int8(Int8(-58)) & 127) : (Int64(-79) |
                    1)), ((Class_1730926162099_1049() is UInt16), ((UInt8(UInt8(44)) & 127)..(UInt8(UInt8(237)) & 127) : (Int64(UInt32(249)) |
                        1)), Float32(6.0), (), r'a', ((Int16(Int16(40)) & 127)..(Int16(Int16(-116)) & 127) : (Int64(92) |
                        1))), Int16(45));
            var_1730926162099_1673
        } is (Range<Int8>, Array<Unit>, Range<Int64>, String, (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, 
            Int8)))) { // block id: 1705
            if (true) {
                ((Int32(Int32(26)) & 127)..=(Int32(Int32(81)) & 127) : (Int64(-24) | 1))
            } else {
                var_1730926162099_1710
            };
            var var_1730926162099_1718: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, 
                Unit, Rune, Range<Int16>), Int16) = (((Int16(Int16(UInt16(19))) & 127)..(Int16(Int16(-126)) & 127) : (Int64(UInt16(UInt8(12))) |
                    1)), VArray<Bool, $6>({i => true}), ((Int8(Int8(-4)) & 127)..(Int8(Int8(-63)) & 127) : (Int64(-40) |
                    1)), (true, ((UInt8(UInt8(UInt8(68))) & 127)..(UInt8(UInt8(131)) & 127) : (Int64(-17) | 1)), Float32(Float32(-22.0)),
                    (), r'c', ((Int16(Int16(UInt16(147))) & 127)..=(Int16(Int16(UInt16(3))) & 127) : (Int64(69) | 1))),
                Int16(-111));
            try { // block id: 1716
                var_1730926162099_1718;
                var_1730926162099_115
            } finally { // block id: 1767
                Int32(74) ^ var_1730926162099_115
            }
        } else { // block id: 1771
            (var_1730926162099_1269 as Bool);
            let var_1730926162099_1776: VArray<Int64, $8> = [Int64(-75), Int64(-105), Int64(93), Int64(-48), Int64(-71),
                Int64(-63), Int64(-59), Int64(96)];
            match (var_1730926162099_1776) {
                case _ =>
                    var_1730926162099_1783 <<= ((var_1730926162099_1783) & 7)
                    VArray<Bool, $1>(repeat: false);
                    var_1730926162099_115 * Int32(-5)
            }
        }
    }
}

public open class Class_1730926162099_1265 {
    @Frozen
    public init() { // block id: 1267

    }

    @Frozen
    mut prop var_1730926162099_1272: Bool { // block id: 1273
        get() { // block id: 1275
            (Int16(Int8(41)) is Range<UInt8>);
            var_1730926162099_2938
        }
        set(Value) { // block id: 1281
            ();
            Float64(Float32(Float32(Float32(-33.0))));
            ();
            var_1730926162099_2938 = Value
        }
    }
    var var_1730926162099_2938: Bool = false
    static init() {
    }
}

@Frozen
public func func_1730926162099_825(param_1730926162099_826: Rune): Int64 { // block id: 827
    let var_1730926162099_1909: Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    var var_1730926162099_1933: Unit = ();
    match (var_1730926162099_833.func_1730926162099_836()) {
        case caseVar_1730926162099_1887 => [(), (), (), (), (), (), (), (), (), ()]

        case caseVar_1730926162099_1892: String =>
            [var_1730926162099_1869, var_1730926162099_1869, (), var_1730926162099_1869, var_1730926162099_1869, (), (),
                var_1730926162099_1869, var_1730926162099_1869, var_1730926162099_1869];
            var_1730926162099_1869;
            if (false) {
                var_1730926162099_1909
            } else {
                var_1730926162099_1909
            }

        case caseVar_1730926162099_1924: VArray<Bool, $1> => [var_1730926162099_1869, var_1730926162099_1929,
            var_1730926162099_1869, var_1730926162099_1933, (), (), var_1730926162099_1929, (), var_1730926162099_1933,
            ()]

        case caseVar_1730926162099_1943: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, 
                Unit, Rune, Range<Int16>), Int16) => [(), (), (), (), (), (), (), (), (), ()]

        case _ =>
            (true, var_1730926162099_175, Float32(30.0), (), r'N', var_1730926162099_133);
            if (true) {
                Option<Int16>.None
            } else {
                var_1730926162099_1960
            };
            [var_1730926162099_1933, var_1730926162099_1929, var_1730926162099_1933, (), var_1730926162099_1933,
                var_1730926162099_1933, (), var_1730926162099_1869, var_1730926162099_1929, var_1730926162099_1929]
    }[3];
    var var_1730926162099_2028: Int32 = Int32(-127);
    ((if (var_1730926162099_91) { // block id: 2015
            Option<Int32>.None
        } else if (var_1730926162099_550) { // block id: 2018
            if (true) {
                var_1730926162099_2022
            } else {
                var_1730926162099_2022
            };
            Option<Int32>.Some(var_1730926162099_2028)
        } else { // block id: 2030
            var_1730926162099_2032;
            Option<Int32>.Some(var_1730926162099_115)
        } ?? (###"`NE+/5OWue"###, Int32(117))[1]), if ((Option<Bool>.None ?? false)) {
            (var_1730926162099_2057 ?? [(), (), (), (), (), (), (), (), (), ()])
        } else {
            var_1730926162099_1909
        }, ((Int8(var_1730926162099_469) & 127)..=(Int8(var_1730926162099_469) & 127) : (Int64(-87) | 1)), VArray<Float64, $1>({
                i => Float64(86.0)
            }), ((UInt64(UInt64(21)) & 127)..=(UInt64(UInt64(55)) & 127) : (Int64(-64) | 1)));
    (if ((var_1730926162099_2076 is Option<Bool>)) {
        Option<Int64>.Some(var_1730926162099_678)
    } else {
        try { // block id: 2087
            if (false) {
                var_1730926162099_2091
            } else {
                var_1730926162099_2091
            }
        } finally { // block id: 2095
            Option<Int64>.None
        }
    } ?? if (false) { // block id: 2099
        var var_1730926162099_2102: Int8 = Int8(-76);
        var_1730926162099_2102 /= ((Int8(-121)) | 1)
        Int64(-109) + var_1730926162099_678
    } else if (var_1730926162099_91) { // block id: 2109
        var_1730926162099_1960;
        [var_1730926162099_1869, var_1730926162099_1933, (), var_1730926162099_1933, var_1730926162099_1929, (), (),
            var_1730926162099_1933, var_1730926162099_1933, var_1730926162099_1869];
        Int64(-79)
    } else { // block id: 2123
        Int32(-86);
        Int64(46)
    })
}

internal func func_1730926162099_635(param_1730926162099_636: VArray<Bool, $1>): VArray<Bool, $1> { // block id: 637
    const var_1730926162099_721: Unit = ();
    var var_1730926162099_754: Float32 = Float32(58.0);
    var var_1730926162099_761: (Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>) = (Float32(Float32(Float32(Float32(2.0)))),
        ((Int16(Int16(-78)) & 127)..=(Int16(Int16(11)) & 127) : (Int64(-11) | 1)), true, ((Int16(Int16(7)) & 127)..(Int16(Int16(Int16(Int8(60)))) &
            127) : (Int64(Int8(-97)) | 1)), ((UInt32(UInt32(176)) & 127)..=(UInt32(UInt32(77)) & 127) : (Int64(-33) | 1)),
        Int32(UInt8(208)), ((Int16(Int16(UInt8(54))) & 127)..=(Int16(Int16(Int8(UInt8(43)))) & 127) : (Int64(Int16(-23)) |
            1)));
    var var_1730926162099_789: Float64 = Float64(Float64(-96.0));
    var var_1730926162099_799: VArray<Float64, $1> = [Float64(40.0)];
    let var_1730926162099_804: (Rune) -> Bool = {lambdaParameter_1730926162099_807: Rune => false};
    const var_1730926162099_2152: Bool = true;
    func_1730926162099_639(
        if (match (var_1730926162099_628) {
            case caseVar_1730926162099_704: Int64 =>
                UInt8(77);
                ();
                UInt8(109) >= UInt8(160)

            case _ =>
                ((UInt8(UInt8(232)) & 127)..=(UInt8(UInt8(223)) & 127) : (Int64(106) | 1));
                var_1730926162099_550

            case caseVar_1730926162099_718 =>
                var_1730926162099_721;
                false

            case caseVar_1730926162099_726 =>
                var_1730926162099_721;
                Option<(Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)>.None;
                false

            case _ =>
                var_1730926162099_736 ^= var_1730926162099_736
                ();
                true
        }) { // block id: 742
            r'r';
            Float64(73.0)
        } else if (((false, (true, var_1730926162099_751, var_1730926162099_754, var_1730926162099_721, r'p', ((Int16(Int16(-112)) &
                    127)..(Int16(Int16(-127)) & 127) : (Int64(-100) | 1)))) is (Rune) -> Bool)) { // block id: 759
            var_1730926162099_761;
            var_1730926162099_789 * Float64(52.0)
        } else { // block id: 793
            var_1730926162099_789
        },
        func_1730926162099_663<UInt64, String>(var_1730926162099_799[0],
            namedParam_1730926162099_665: (r'k' |> var_1730926162099_804),
            namedParam_1730926162099_666: VArray<UInt32, $7>({i => UInt32(227)})[4],
            namedParam_1730926162099_667: (r'7' |> func_1730926162099_825)),
        namedParam_1730926162099_642: match (try { // block id: 2130
            if (false) {
                """
}xeCF
bRiJ;
"""
            } else {
                "wk/JBb\"k(Z"
            }
        } finally { // block id: 2135
            if (true) {
                var_1730926162099_2139
            } else {
                var_1730926162099_2139
            }
        }) {
            case ###"tl+`Un\\kvr"### =>
                Int64(-9);
                VArray<Bool, $6>({i => true});
                var var_1730926162099_2157: Bool = false;
                var_1730926162099_2157 ||= true

            case """
rI+9M
shZ8\"
""" =>
                ((Int32(Int32(79)) & 127)..=(Int32(Int32(31)) & 127) : (var_1730926162099_736 | 1));
                (VArray<Float64, $1>({i => Float64(-106.0)}), (), ((UInt32(var_1730926162099_817) & 127)..(UInt32(UInt32(25)) &
                        127) : (Int64(-3) | 1)), var_1730926162099_799);
                ()

            case _ =>
                var_1730926162099_2181;
                ()
        }, optionalParam_1730926162099_643: Int64(-40));
    var_1730926162099_2187 ^= var_1730926162099_2187
    try { // block id: 2191
        (var_1730926162099_2198 ?? ());
        if (var_1730926162099_550) {
            VArray<Bool, $1>({i => false})
        } else {
            VArray<Bool, $1>({i => false})
        }
    } finally { // block id: 2207
        var var_1730926162099_2210: Bool = true;
        if (var_1730926162099_2210) { // block id: 2212
            var_1730926162099_754;
            Enum_1730926162099_490.enumValue_1730926162099_2034;
            var_1730926162099_2217 += var_1730926162099_2217
        } else if (false) { // block id: 2221
            Option<Int64>.Some(var_1730926162099_312);
            ();
            var_1730926162099_2210 ||= var_1730926162099_2210
        };
        var loopTimeVar_1730926162099_2242: Int = 0;
        while ((true) && loopTimeVar_1730926162099_2242 < 100) {
            loopTimeVar_1730926162099_2242++;
            if (false) {
                ((Int32(Int32(79)) & 127)..(Int32(Int32(7)) & 127) : (Int64(30) | 1))
            } else {
                ((Int32(Int32(-93)) & 127)..=(Int32(var_1730926162099_325) & 127) : (var_1730926162099_312 | 1))
            };
            let var_1730926162099_2239: Range<Int64> = ((Int64(Int64(-125)) & 127)..=(Int64(Int64(-94)) & 127) : (Int64(-102) |
                1));
            var_1730926162099_2239
        };
        VArray<Bool, $1>({i => true})
    }
}

@Frozen
@Deprecated
public func func_1730926162099_18(param_1730926162099_19: Rune): Int64 { // block id: 20
    const var_1730926162099_292: Bool = false;
    let var_1730926162099_460: String = """
oV,;;
M?yV%
""";
    let var_1730926162099_2519: Int = Int64(Int32(63));
    func func_1730926162099_33(param_1730926162099_34: Range<UInt8>): VArray<Int64, $8> { // block id: 35
        var var_1730926162099_200: (Unit) -> (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) = {
            lambdaParameter_1730926162099_203: Unit => (((Float32(20.0), ((Int16(Int16(28)) & 127)..(Int16(Int16(-65)) &
                        127) : (Int64(25) | 1)), true, ((Int16(Int16(-90)) & 127)..(Int16(Int16(88)) & 127) : (Int64(-101) |
                        1)), ((UInt32(UInt32(159)) & 127)..(UInt32(UInt32(102)) & 127) : (Int64(70) | 1)), Int32(-39), ((Int16(Int16(-19)) &
                        127)..=(Int16(Int16(66)) & 127) : (Int64(-35) | 1))) is Int64), ((UInt8(UInt8(73)) & 127)..=(UInt8(UInt8(Int8(94))) &
                    127) : (Int64(UInt32(170)) | 1)), Float32(66.0), (), r'V', ((Int16(Int16(59)) & 127)..(Int16(Int16(-27)) &
                    127) : (Int64(55) | 1)))
        };
        (Class_1730926162099_229.var_1730926162099_238 |> var_1730926162099_200)[3];
        var var_1730926162099_245: Option<(Float32, Range<Int16>, Bool, Range<Int16>, Range<UInt32>, Int32, Range<Int16>)> = (((Int32(Int32(-44)) &
            127)..(Int32(Int32(Int16(106))) & 127) : (Int64(UInt32(237)) | 1)) as (Float32, Range<Int16>, Bool, Range<Int16>, 
            Range<UInt32>, Int32, Range<Int16>));
        let var_1730926162099_269: Unit = ();
        let var_1730926162099_338: UInt32 = UInt32(UInt8(Int8(Int8(Int8(104)))));
        const var_1730926162099_349: Unit = ();
        let var_1730926162099_377: Range<Int64> = ((Int64(Int64(-91)) & 127)..=(Int64(Int64(-41)) & 127) : (Int64(25) | 1));
        let var_1730926162099_2246: (VArray<Bool, $1>) -> VArray<Bool, $1> = func_1730926162099_635;
        let var_1730926162099_2411: Unit = ();
        func func_1730926162099_276(param_1730926162099_277: Range<Int16>): VArray<Int64, $8> { // block id: 278
            var var_1730926162099_286: VArray<Bool, $6> = [true, false, true, false, true, false];
            var loopTimeVar_1730926162099_388: Int64 = 0;
            while ((try { // block id: 283
                    ();
                    var_1730926162099_286
                } catch (e: Exception) { // block id: 288
                    ();
                    VArray<Bool, $6>(repeat: var_1730926162099_292)
                } finally { // block id: 299
                    Int64(119);
                    VArray<Bool, $6>(repeat: var_1730926162099_292)
                }[5]) && loopTimeVar_1730926162099_388 < 100) {
                loopTimeVar_1730926162099_388++;
                var var_1730926162099_361: UInt64 = UInt64(UInt8(65));
                match (var_1730926162099_312) {
                    case -94 | 14 | -85 | 104 =>
                        if (var_1730926162099_292) {
                            ((Int32(Int32(-115)) & 127)..=(Int32(Int32(85)) & 127) : (Int64(-60) | 1))
                        } else {
                            ((Int32(var_1730926162099_325) & 127)..(Int32(var_1730926162099_325) & 127) : (Int64(48) | 1))
                        };
                        UInt32(132)

                    case caseVar_1730926162099_333: Array<UInt64> =>
                        Int16(-68);
                        var_1730926162099_338 % ((UInt32(79)) | 1)

                    case -95 | -1 =>
                        var_1730926162099_349;
                        var_1730926162099_338 - var_1730926162099_338

                    case caseVar_1730926162099_356: Range<UInt16> =>
                        continue;
                        var_1730926162099_361 >>= ((var_1730926162099_361) & 7)
                        var_1730926162099_338 * var_1730926162099_338

                    case _ => var_1730926162099_338 >> ((UInt32(133)) & 7)
                };
                var var_1730926162099_382: Byte = UInt8(Int8(-39));
                try { // block id: 375
                    var_1730926162099_377
                } finally { // block id: 379
                    var_1730926162099_382 <<= ((var_1730926162099_382) & 7)
                    var_1730926162099_377
                }
            };
            let var_1730926162099_464: Float64 = Float64(-9.0);
            var var_1730926162099_476: UInt64 = UInt64(250);
            let var_1730926162099_2330: Float32 = Float32(Float32(-62.0));
            var var_1730926162099_2480: Int32 = Int32(-36);
            if (var_1730926162099_394[3][0]) {
                if ((var_1730926162099_349, ((Int32(Int32(-53)) & 127)..(Int32(Int32(-113)) & 127) : (Int64(123) | 1)),
                    var_1730926162099_460, true, var_1730926162099_464, var_1730926162099_269, UInt8(81),
                    var_1730926162099_469)[3]) { // block id: 472
                    var_1730926162099_349;
                    var_1730926162099_476 >>= ((UInt64(39)) & 7)
                    var_1730926162099_480
                } else if ((r'8' |> {
                    lambdaParameter_1730926162099_614: Rune => (try { // block id: 622
                        ((Int16(Int16(120)) & 127)..(Int16(Int16(10)) & 127) : (Int64(-67) | 1));
                        if (var_1730926162099_292) {
                            Option<Bool>.None
                        } else {
                            var_1730926162099_628
                        }
                    } finally { // block id: 630
                        var_1730926162099_628
                    } ?? (var_1730926162099_2249 |> var_1730926162099_2246)[0])
                })) { // block id: 2255
                    VArray<Int64, $8>(repeat: var_1730926162099_736)
                } else { // block id: 2265
                    var_1730926162099_2267;
                    var_1730926162099_550;
                    VArray<Int64, $8>({i => Int64(-93)})
                }
            } else {
                VArray<Int64, $8>(repeat: if (true) { // block id: 2307
                        var_1730926162099_269;
                        Int64(61)
                    } else if (var_1730926162099_292) { // block id: 2311
                        Int64(103) ^ var_1730926162099_736
                    } else { // block id: 2315
                        var_1730926162099_349;
                        var_1730926162099_312
                    })
            }
        };

        if ((match (var_1730926162099_245) {
            case _: Bool =>
                ();
                var_1730926162099_258;
                var_1730926162099_269

            case _ => ()
        } is (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>))) {
            func_1730926162099_276(var_1730926162099_2466)
        } else {
            (if ((Int64(67) == Int64(-96))) {
                (if (false) {
                    var_1730926162099_480
                } else {
                    var_1730926162099_480
                })
            } else {
                (if (var_1730926162099_550) {
                    VArray<Int64, $8>(repeat: var_1730926162099_2419)
                } else {
                    VArray<Int64, $8>({i => Int64(67)})
                })
            })
        }
    };

    func_1730926162099_33(
        ((UInt8(var_1730926162099_2187) & 127)..(UInt8(var_1730926162099_2187) & 127) : (Int64(-17) | 1)))[6]
}

@Frozen
@Deprecated
public func func_1730926162099_11(param_1730926162099_12: Bool, param_1730926162099_13: UInt32,
    param_1730926162099_14: Unit, param_1730926162099_15: UInt32): Int64 { // block id: 16
    let var_1730926162099_2543: (Rune) -> Int64 = func_1730926162099_18;
    var var_1730926162099_2556: Unit = ();
    match (match (Option<Bool>.None) {
        case _: (String, Int32) => UInt64(83)

        case _ =>
            var_1730926162099_2556;
            let var_1730926162099_2559: UInt = UInt64(UInt8(UInt8(79)));
            var_1730926162099_2559
    }) {
        case _ =>
            UInt64(13);
            r'B';
            if (var_1730926162099_2500) {
                var_1730926162099_2571
            } else {
                var_1730926162099_2571
            }
    } |> var_1730926162099_2543
}

main(): Int64 {
    try {
        Int8(95);
        var var_1730926162099_2585: Int32 = Int32(-20);
        let var_1730926162099_2592: Bool = (Float64(-13.0) is UInt8);
        var var_1730926162099_2649: UInt32 = UInt32(209);
        var var_1730926162099_2655: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, 
            Rune, Range<Int16>), Int16) = (((Int16(Int16(UInt16(62))) & 127)..(Int16(Int16(66)) & 127) : (Int64(UInt16(UInt16(138))) |
                1)), VArray<Bool, $6>({i => true}), ((Int8(Int8(Int8(Int8(-93)))) & 127)..(Int8(Int8(-11)) & 127) : (Int64(11) |
                1)), (false, ((UInt8(UInt8(6)) & 127)..=(UInt8(UInt8(192)) & 127) : (Int64(70) | 1)), Float32(Float32(Float32(61.0))),
                (), r'b', ((Int16(Int16(UInt16(250))) & 127)..(Int16(Int16(-16)) & 127) : (Int64(-73) | 1))), Int16(6));
        let var_1730926162099_2726: Array<UInt64> = [UInt64(UInt32(UInt8(UInt8(216)))), UInt64(165), UInt64(150),
            UInt64(165), UInt64(31), UInt64(Int32(Int32(UInt32(235)))), UInt64(110), UInt64(235), UInt64(225),
            UInt64(Int64(Int8(Int8(-65))))];
        var var_1730926162099_2775: (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) = ((Int64(UInt32(144)) is (Range<Int8>, 
                Array<Unit>, Range<Int64>, String, (Unit, Range<Int32>, String, Bool, Float64, Unit, UInt8, Int8))), ((UInt8(UInt8(UInt8(UInt8(19)))) &
                127)..=(UInt8(UInt8(172)) & 127) : (Int64(110) | 1)), Float32(118.0), (), r'A', ((Int16(Int16(86)) & 127)..(Int16(Int16(73)) &
                127) : (Int64(Int16(UInt8(51))) | 1)));
        var var_1730926162099_2815: UInt64 = UInt64(Int64(UInt16(149)));
        var var_1730926162099_2831: UInt16 = UInt16(47);
        func_1730926162099_11((var_1730926162099_2577 + Int8(-33)) <= Int8(var_1730926162099_2577),
            match (-var_1730926162099_2585) {
                case 122 | -45 | 84 =>
                    let var_1730926162099_2599: Int = Int64(UInt32(14));
                    var var_1730926162099_2605: Int64 = Int64(34);
                    if (var_1730926162099_2592) {
                        VArray<Int64, $8>({i => Int64(-63)})
                    } else {
                        var_1730926162099_2610
                    };
                    UInt32(218) & UInt32(72)

                case _ =>
                    var_1730926162099_2635;
                    [(), var_1730926162099_2635, var_1730926162099_2635, var_1730926162099_2635, (), (), (),
                        var_1730926162099_2635, (), var_1730926162099_2635];
                    var_1730926162099_2649
            }, match (try { // block id: 2653
                var_1730926162099_2655;
                if (true) {
                    [UInt64(46), UInt64(188), UInt64(78), UInt64(108), UInt64(81), UInt64(104), UInt64(74), UInt64(81),
                        UInt64(16), UInt64(109)]
                } else {
                    var_1730926162099_2726
                }
            } catch (e: Exception) { // block id: 2747
                if (var_1730926162099_2592) {
                    var_1730926162099_2726
                } else {
                    [UInt64(116), UInt64(109), UInt64(228), UInt64(218), UInt64(63), UInt64(1), UInt64(177), UInt64(132),
                        UInt64(109), UInt64(22)]
                }
            }) {
                case caseVar_1730926162099_2754: Range<Int64> =>
                    var_1730926162099_2585 = var_1730926162099_2585
                    (var_1730926162099_2761, VArray<Bool, $6>(repeat: var_1730926162099_2592), ((Int8(Int8(-71)) & 127)..(Int8(Int8(-113)) &
                            127) : (Int64(8) | 1)), var_1730926162099_2775, Int16(122));
                    var_1730926162099_2635

                case caseVar_1730926162099_2799 =>
                    var var_1730926162099_2803: Int8 = Int8(UInt8(UInt8(4)));
                    var_1730926162099_2803 *= Int8(-12)

                case _ =>
                    ();
                    ((UInt8(UInt8(141)) & 127)..(UInt8(UInt8(154)) & 127) : (Int64(-25) | 1));
                    var_1730926162099_2815 %= ((UInt64(14)) | 1)

                case _ =>
                    var_1730926162099_2655;
                    var_1730926162099_2635;
                    ()
            }, match (try { // block id: 2828
                var_1730926162099_2831 ^= var_1730926162099_2831
                (false, (false, ((UInt8(UInt8(222)) & 127)..(UInt8(UInt8(55)) & 127) : (Int64(46) | 1)), Float32(-12.0),
                        var_1730926162099_2635, var_1730926162099_2842, var_1730926162099_2761))
            } catch (e: Exception) { // block id: 2845
                if (var_1730926162099_2592) {
                    ((Int64(var_1730926162099_2850) & 127)..=(Int64(Int64(-115)) & 127) : (Int64(8) | 1))
                } else {
                    ((Int64(Int64(-128)) & 127)..(Int64(Int64(-41)) & 127) : (Int64(17) | 1))
                };
                var_1730926162099_2856;
                (false, var_1730926162099_2861)
            }) {
                case _: (Range<Int16>, VArray<Bool, $6>, Range<Int8>, (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>), 
                        Int16) =>
                    ();
                    UInt32(31)

                case (caseVar_1730926162099_2881, (caseVar_1730926162099_2882: Range<UInt32>, caseVar_1730926162099_2883, caseVar_1730926162099_2884: Int32, _, _: Range<UInt16>, caseVar_1730926162099_2885)) => UInt32(10)

                case (caseVar_1730926162099_2890: Int16, caseVar_1730926162099_2891: Range<Int32>) =>
                    if (var_1730926162099_2592) {
                        var_1730926162099_2896
                    } else {
                        var_1730926162099_2896
                    };
                    var_1730926162099_2649

                case _: (Bool, Range<UInt8>, Float32, Unit, Rune, Range<Int16>) =>
                    ();
                    ();
                    UInt32(196) * var_1730926162099_2649

                case _ =>
                    ((UInt16(UInt16(36)) & 127)..(UInt16(UInt16(61)) & 127) : (Int64(125) | 1));
                    UInt32(215) & var_1730926162099_2649
            })
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1730926162099_2577 * var_1730926162099_2577), 64)
        crcCheck.updateBuffer(UInt64(var_1730926162099_2585 * var_1730926162099_2585), 64)
        crcCheck.updateBuffer(UInt64(var_1730926162099_2649 * var_1730926162099_2649), 64)
        crcCheck.updateBuffer(UInt64(var_1730926162099_2815 * var_1730926162099_2815), 64)
        crcCheck.updateBuffer(UInt64(var_1730926162099_2831 * var_1730926162099_2831), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1730926162099_229 {}

extend Enum_1730926162099_490 {}
