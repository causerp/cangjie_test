/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */

// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args

internal let var_1731521783086_20: Bool = (Float64(Float32(Float32(Float32(-86.0)))) is Int16)
public var var_1731521783086_29: UInt64 = UInt64(181)
public let var_1731521783086_197: Int32 = Int32(55)
public var var_1731521783086_206: Bool = (((UInt16(UInt16(111)) & 127)..(UInt16(UInt16(41)) & 127) : (Int64(110) | 1)) is Interface_1731521783086_183)
@Deprecated
var var_1731521783086_213: Struct_1731521783086_54 = Struct_1731521783086_54()
var var_1731521783086_264: Option<Rune> = (((UInt8(UInt8(45)) & 127)..=(UInt8(UInt8(178)) & 127) : (Int64(115) | 1)) as Rune)
@Deprecated
public let var_1731521783086_304: Array<VArray<Unit, $2>> = [VArray<Unit, $2>(repeat: ()), VArray<Unit, $2>({i => ()}),
    VArray<Unit, $2>({i => ()}), VArray<Unit, $2>(repeat: ()), VArray<Unit, $2>({i => ()}), VArray<Unit, $2>(repeat: ()),
    VArray<Unit, $2>(repeat: ()), VArray<Unit, $2>({i => ()}), VArray<Unit, $2>({i => ()}), VArray<Unit, $2>({i => ()})]
internal var var_1731521783086_398: Float64 = Float64(Float32(Float32(Float32(-107.0))))
public var var_1731521783086_440: ?Bool = Option<Bool>.None
@Deprecated
public const var_1731521783086_451: Bool = false
@Deprecated
const var_1731521783086_462: Float32 = -122.0
internal var var_1731521783086_482: Int16 = Int16(UInt8(Int8(5)))
public let var_1731521783086_493: VArray<Unit, $2> = [(), ()]
let var_1731521783086_640: Int = Int64(-21)
public var var_1731521783086_658: Array<UInt64> = [UInt64(248), UInt64(240), UInt64(179), UInt64(20), UInt64(106),
    UInt64(7), UInt64(2), UInt64(37), UInt64(122), UInt64(150)]
var var_1731521783086_673: VArray<Unit, $2> = [(), ()]
internal var var_1731521783086_704: ((Range<Int16>, Int64, VArray<Unit, $2>), Range<Int64>, Bool, Float32, Option<Rune>, 
    UInt16, (String, Class_1731521783086_83, String, Float64, Enum_1731521783086_131, Bool, UInt16, 
    Enum_1731521783086_131)) = ((((Int16(Int16(UInt8(150))) & 127)..(Int16(Int16(-111)) & 127) : (Int64(Int32(-45)) | 1)),
        Int64(-97), VArray<Unit, $2>({i => ()})), ((Int64(Int64(-94)) & 127)..(Int64(Int64(-46)) & 127) : (Int64(UInt32(Int32(48))) |
        1)), false, Float32(Float32(Float32(18.0))), (Float64(Float64(47.0)) as Rune), UInt16(UInt8(UInt8(203))), ("g32C<_\\)x]",
        Class_1731521783086_83(), "YuOQsfOK;T", Float64(50.0), Enum_1731521783086_131.enumValue_1731521783086_739(
            UInt32(UInt32(224)), VArray<Int16, $8>({i => Int16(14)})), true, UInt16(UInt16(208)), Enum_1731521783086_131
            .enumValue_1731521783086_757))
public let var_1731521783086_772: Unit = ()
internal var var_1731521783086_779: UInt16 = UInt16(Int16(78))
public var var_1731521783086_843: Int8 = Int8(-33)
public let var_1731521783086_851: Class_1731521783086_83 = Class_1731521783086_178()
internal const var_1731521783086_947: Unit = ()
@Deprecated
internal let var_1731521783086_990: Class_1731521783086_178 = Class_1731521783086_178()
@Deprecated
public var var_1731521783086_1072: (Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, 
    Int32, UInt16)) = (Option<Bool>.None, ("""
-g.[<
mL@M9
""", Enum_1731521783086_131.enumValue_1731521783086_757, ((UInt8(UInt8(106)) &
            127)..=(UInt8(UInt8(227)) & 127) : (Int64(-10) | 1)), Int16(99), VArray<Unit, $2>({i => ()}), Int32(49),
        UInt16(171)))
internal var var_1731521783086_1090: VArray<Unit, $1> = [()]
internal var var_1731521783086_1127: (Option<(Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, 
    Int32, UInt16))>, (Array<VArray<Int16, $8>>, UInt64, Array<UInt64>, UInt32, Float64)) = (Option<(Option<Bool>, (String, 
            Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, Int32, UInt16))>.None, ([VArray<Int16, $8>({
                i => Int16(-72)
            }), VArray<Int16, $8>({i => Int16(-6)}), VArray<Int16, $8>({i => Int16(-44)}),
            VArray<Int16, $8>(repeat: Int16(-39)), VArray<Int16, $8>({i => Int16(-16)}),
            VArray<Int16, $8>({i => Int16(-48)}), VArray<Int16, $8>({i => Int16(85)}),
            VArray<Int16, $8>({i => Int16(-19)}), VArray<Int16, $8>(repeat: Int16(124)),
            VArray<Int16, $8>({i => Int16(126)})], UInt64(52), [UInt64(60), UInt64(Int8(-110)), UInt64(155), UInt64(88),
            UInt64(212), UInt64(208), UInt64(Int16(-127)), UInt64(Int64(30)), UInt64(116), UInt64(Int8(98))], UInt32(UInt8(137)),
        Float64(79.0)))
public const var_1731521783086_1416: Int16 = -124
@Deprecated
internal const var_1731521783086_1472: Int16 = -48
public let var_1731521783086_1512: Rune = r'Z'
public var var_1731521783086_1797: UInt16 = UInt16(0)
internal let var_1731521783086_1823: UInt8 = UInt8(225)
public let var_1731521783086_1853: (VArray<Unit, $2>, Bool, Range<UInt8>, Range<UInt8>, Struct_1731521783086_54) = (VArray<Unit, $2>({
            i => ()
        }), true, ((UInt8(UInt8(230)) & 127)..=(UInt8(UInt8(UInt8(0))) & 127) : (Int64(UInt32(UInt32(61))) | 1)), ((UInt8(UInt8(11)) &
        127)..=(UInt8(UInt8(142)) & 127) : (Int64(114) | 1)), Struct_1731521783086_54())
@Deprecated
internal var var_1731521783086_1871: Int32 = Int32(UInt8(Int8(115)))
public const var_1731521783086_1882: Bool = true
internal const var_1731521783086_1958: Int16 = 97
public var var_1731521783086_2002: Int32 = Int32(UInt16(Int16(-63)))
public var var_1731521783086_2015: VArray<Unit, $1> = VArray<Unit, $1>({i => ()})
public const var_1731521783086_2025: Bool = false
public var var_1731521783086_2053: Int8 = Int8(-119)
@Deprecated
public const var_1731521783086_2084: String = ###"h0jZ$FW|y?"###

public struct Struct_1731521783086_54 {
    @Frozen
    public init() { // block id: 56

    }

    @Frozen
    private static mut prop var_1731521783086_70: UInt16 { // block id: 71
        get() { // block id: 73
            UInt64(254);
            UInt16(238);
            var_1731521783086_2100
        }
        set(Value) { // block id: 78
            r'L';
            UInt32(248);
            ();
            var_1731521783086_2100 = Value
        }
    }

    @Frozen
    public static mut prop var_1731521783086_87: Class_1731521783086_83 { // block id: 88
        get() { // block id: 90
            Class_1731521783086_83()
        }
        set(Value) { // block id: 94
            ();
            UInt8(101);
            ()
        }
    }

    @Frozen
    public static prop var_1731521783086_112: Bool { // block id: 113
        get() { // block id: 115
            Class_1731521783086_83();
            (Int64(-93) is UInt64)
        }
    }

    @Frozen
    private static mut prop var_1731521783086_1653: Option<(Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, 
        Int16, VArray<Unit, $2>, Int32, UInt16))> { // block id: 1654
        get() { // block id: 1656
            ();
            Option<(Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, Int32, UInt16))>
                .None
        }
        set(Value) { // block id: 1661
            Enum_1731521783086_131.enumValue_1731521783086_757;
            ()
        }
    }
    private static let var_1731521783086_1675: Range<UInt64> = ((UInt64(UInt64(225)) & 127)..=(UInt64(UInt64(128)) & 127) : (Int64(48) |
        1));

    @Frozen
    private static prop var_1731521783086_1685: Int16 { // block id: 1686
        get() { // block id: 1688
            Int16(28)
        }
    }
    static let var_1731521783086_1694: Option<Unit> = Option<Unit>.None;

    @Frozen
    static func func_1731521783086_136(param_1731521783086_137: Class_1731521783086_83,
        namedParam_1731521783086_138!: Float64, optionalParam_1731521783086_139!: UInt32 = UInt32(Int32(-102))): (String, 
        Class_1731521783086_83, String, Float64, Enum_1731521783086_131, Bool, UInt16, Enum_1731521783086_131) { // block id: 142
        (((Int64(Int64(-105)) & 127)..=(Int64(Int64(55)) & 127) : (Int64(7) | 1)) |> func_1731521783086_155)[6];
        let var_1731521783086_1667: (Range<Int16>, Int64, VArray<Unit, $2>) = (((Int16(Int16(114)) & 127)..(Int16(Int16(11)) &
                127) : (Int64(-11) | 1)), Int64(-94), VArray<Unit, $2>(repeat: ()));
        var var_1731521783086_1698: (String, Class_1731521783086_83, String, Float64, Enum_1731521783086_131, Bool, 
            UInt16, Enum_1731521783086_131) = ("=;jk[Fb7]3", Class_1731521783086_231("""
nwP`v
j13E9
""",
                ((UInt32(UInt32(Int16(50))) & 127)..=(UInt32(UInt32(UInt16(181))) & 127) : (Int64(-54) | 1))),
            ###"H$8|'9ua{i\\"###, Float64(Float32(-119.0)), Enum_1731521783086_131.enumValue_1731521783086_739(
                UInt32(34), VArray<Int16, $8>({i => Int16(-99)})), (((Int64(Int64(-123)) & 127)..=(Int64(Int64(47)) & 127) : (Int64(44) |
                1)) is Option<Unit>), UInt16(UInt8(UInt8(224))), Enum_1731521783086_131.enumValue_1731521783086_889(
                (("A}`fA>Wdtt", Enum_1731521783086_131.enumValue_1731521783086_757, ((UInt8(UInt8(212)) & 127)..(UInt8(UInt8(209)) &
                        127) : (Int64(23) | 1)), Int16(120), VArray<Unit, $2>(repeat: ()), Int32(-115), UInt16(8)) as Bool),
                ((UInt8(UInt8(251)) & 127)..(UInt8(UInt8(137)) & 127) : (Int64(-88) | 1)), UInt16(Int16(Int8(-37)))));
        try { // block id: 1556
            var_1731521783086_440;
            var var_1731521783086_1561: Range<UInt32> = ((UInt32(UInt32(160)) & 127)..=(UInt32(UInt32(115)) & 127) : (Int64(-93) |
                1));
            let var_1731521783086_1564: (String, Class_1731521783086_83, String, Float64, Enum_1731521783086_131, Bool, 
                UInt16, Enum_1731521783086_131) = (###"a{UL0A00C\\ "###, Class_1731521783086_231("gldip?|C-t",
                    ((UInt32(UInt32(217)) & 127)..(UInt32(UInt32(UInt8(175))) & 127) : (Int64(Int32(64)) | 1))),
                "\\5$8!U)}(8", Float64(Float32(92.0)), Enum_1731521783086_131.enumValue_1731521783086_1579(
                    VArray<Unit, $2>({i => ()}),
                    (((Int32(Int32(-54)) & 127)..(Int32(Int32(-30)) & 127) : (Int64(-88) | 1)) as Rune)), (((Option<Bool>
                            .Some(false), ("UKh+)S+dq=", Enum_1731521783086_131.enumValue_1731521783086_889(
                                Option<Bool>.Some(false),
                                ((UInt8(UInt8(53)) & 127)..(UInt8(UInt8(176)) & 127) : (Int64(-91) | 1)), UInt16(156)), ((UInt8(UInt8(135)) &
                                127)..=(UInt8(UInt8(6)) & 127) : (Int64(2) | 1)), Int16(45), VArray<Unit, $2>(repeat: ()),
                            Int32(-38), UInt16(167))), Int32(-81), VArray<Unit, $1>({i => ()}), (Option<Bool>.Some(
                            false), ("dTYRGhpwwn", Enum_1731521783086_131.enumValue_1731521783086_889(
                                Option<Bool>.Some(false),
                                ((UInt8(UInt8(23)) & 127)..(UInt8(UInt8(106)) & 127) : (Int64(63) | 1)), UInt16(64)), ((UInt8(UInt8(47)) &
                                127)..(UInt8(UInt8(117)) & 127) : (Int64(44) | 1)), Int16(91), VArray<Unit, $2>({
                                    i => ()
                                }), Int32(125), UInt16(21)))) is (Float32) -> Bool), UInt16(61),
                Enum_1731521783086_131.enumValue_1731521783086_739(UInt32(253), VArray<Int16, $8>({i => Int16(125)})));
            (Option<Unit>.None, var_1731521783086_1561, var_1731521783086_1564, var_1731521783086_1653)
        } finally { // block id: 1664
            (var_1731521783086_1667, var_1731521783086_1675, VArray<Int16, $8>(repeat: var_1731521783086_482));
            var_1731521783086_947;
            (var_1731521783086_1694, ((UInt32(UInt32(61)) & 127)..(UInt32(UInt32(241)) & 127) : (Int64(49) | 1)),
                var_1731521783086_1698, var_1731521783086_1653)
        }[2]
    };

    public func func_1731521783086_61(param_1731521783086_62: UInt16,
        optionalParam_1731521783086_63!: Bool = (Float32(51.0) is Struct_1731521783086_54)): Bool { // block id: 66
        let var_1731521783086_107: UInt32 = UInt32(59);
        (var_1731521783086_70 ^ (var_1731521783086_87.var_1731521783086_99)) / ((if (try { // block id: 103
            ();
            var_1731521783086_107 > UInt32(14)
        } catch (_) { // block id: 110
            var_1731521783086_112;
            true
        }) { // block id: 120
            UInt16(47)
        } else if ((Int16(108) is Struct_1731521783086_54)) { // block id: 124
            var_1731521783086_70
        } else { // block id: 126
            UInt16(97) / ((var_1731521783086_70) | 1)
        }) | 1);
        match (func_1731521783086_136(var_1731521783086_851, namedParam_1731521783086_138: Float64(-18.0),
            optionalParam_1731521783086_139: UInt32(91))[4]) {
            case enumValue_1731521783086_1579(caseVar_1731521783086_1757, _) =>
                Option<Bool>.None;
                true

            case enumValue_1731521783086_739(_, caseVar_1731521783086_1763) =>
                ();
                var_1731521783086_197 >> ((var_1731521783086_197) & 7);
                false

            case enumValue_1731521783086_757 => var_1731521783086_112

            case enumValue_1731521783086_1579(_: (Range<Int16>, Int64, VArray<Unit, $2>), caseVar_1731521783086_1776: Int64) =>
                var_1731521783086_947;
                VArray<Int16, $8>(repeat: var_1731521783086_1416);
                true

            case _ => Float64(46.0) >= Float64(101.0)
        }
    };

    static var var_1731521783086_2100: UInt16 = UInt16(205)
}

public open class Class_1731521783086_83 {
    @Frozen
    public init() { // block id: 85

    }

    public var var_1731521783086_99: UInt16 = UInt16(228);
    let var_1731521783086_993: Unit = ();
    protected var var_1731521783086_1111: Range<UInt8> = ((UInt8(UInt8(190)) & 127)..=(UInt8(UInt8(171)) & 127) : (Int64(84) |
        1));
    public func func_1731521783086_238(optionalParam_1731521783086_239!: UInt8 = UInt8(Int8(-122)),
        optionalParam_1731521783086_242!: Int8 = Int8(-30),
        optionalParam_1731521783086_244!: Range<UInt64> = ((UInt64(UInt64(77)) & 127)..=(UInt64(UInt64(6)) & 127) : (Int64(-71) |
            1)),
        optionalParam_1731521783086_246!: Range<UInt64> = ((UInt64(UInt64(UInt64(226))) & 127)..=(UInt64(UInt64(95)) &
            127) : (Int64(UInt8(182)) | 1))): VArray<Int16, $8> { // block id: 253
        try { // block id: 255
            Int16(-26)
        } finally { // block id: 257
            (var_1731521783086_264 ?? r'l');
            const var_1731521783086_1096: String = "S.o6/p`9&F";
            const var_1731521783086_1100: UInt32 = 47;
            let var_1731521783086_1105: ?Unit = Option<Unit>.Some(());
            ("`=;e\\?)j10", Enum_1731521783086_131.enumValue_1731521783086_273(
                    Class_1731521783086_231(var_1731521783086_1096,
                        ((UInt32(var_1731521783086_1100) & 127)..(UInt32(var_1731521783086_1100) & 127) : (var_1731521783086_640 |
                            1))), var_1731521783086_1105,
                    ((UInt8(UInt8(44)) & 127)..=(UInt8(UInt8(208)) & 127) : (Int64(104) | 1)), UInt16(82)),
                var_1731521783086_1111, Int16(70), VArray<Unit, $2>(repeat: var_1731521783086_772), Int32(-51),
                var_1731521783086_99)[3]
        };
        var_1731521783086_1127[1][0][7]
    }

    static init() {
    }
}

public enum Enum_1731521783086_131 {
    defaultValue
    | enumValue_1731521783086_273(Class_1731521783086_178, Option<Unit>, Range<UInt8>, UInt16)
    | enumValue_1731521783086_739(UInt32, VArray<Int16, $8>)
    | enumValue_1731521783086_757
    | enumValue_1731521783086_889(Option<Bool>, Range<UInt8>, UInt16)
    | enumValue_1731521783086_1579(VArray<Unit, $2>, Option<Rune>)
}

public interface Interface_1731521783086_181 {
    func func_1731521783086_1326(): Int32 { // block id: 1327
        if (if (var_1731521783086_206) { // block id: 1331
            var_1731521783086_206 && true
        } else if (Int8(76) <= Int8(-30)) { // block id: 1338
            UInt8(97) <= UInt8(80)
        } else { // block id: 1342
            var_1731521783086_451
        }) { // block id: 1344
            (Option<Int32>.None ?? Int32(-87))
        } else { // block id: 1352
            var var_1731521783086_1354: Range<Int16> = ((Int16(Int16(20)) & 127)..(Int16(Int16(-43)) & 127) : (Int64(13) |
                1));
            var_1731521783086_1354;
            var_1731521783086_197 % ((var_1731521783086_197) | 1)
        }
    }
}

public sealed interface Interface_1731521783086_183 {}

public interface Interface_1731521783086_182 <: Interface_1731521783086_181 & Interface_1731521783086_183 {
    func func_1731521783086_1326(): Int32 { // block id: 1327
        if (if (var_1731521783086_206) { // block id: 1331
            var_1731521783086_206 && true
        } else if (Int8(76) <= Int8(-30)) { // block id: 1338
            UInt8(97) <= UInt8(80)
        } else { // block id: 1342
            var_1731521783086_451
        }) { // block id: 1344
            (Option<Int32>.None ?? Int32(-87))
        } else { // block id: 1352
            var var_1731521783086_1354: Range<Int16> = ((Int16(Int16(20)) & 127)..(Int16(Int16(-43)) & 127) : (Int64(13) |
                1));
            var_1731521783086_1354;
            var_1731521783086_197 % ((var_1731521783086_197) | 1)
        }
    }
}

@Deprecated
public open class Class_1731521783086_178 <: Class_1731521783086_83 & Interface_1731521783086_181 & Interface_1731521783086_182 {
    public init() { // block id: 180

    }

    public static const var_1731521783086_186: Unit = ();

    @Frozen
    static prop var_1731521783086_191: Unit { // block id: 192
        get() { // block id: 194
            ()
        }
    }
    public open override func func_1731521783086_1326(): Int32 { // block id: 1327
        if (if (var_1731521783086_206) { // block id: 1331
            var_1731521783086_206 && true
        } else if (Int8(76) <= Int8(-30)) { // block id: 1338
            UInt8(97) <= UInt8(80)
        } else { // block id: 1342
            var_1731521783086_451
        }) { // block id: 1344
            (Option<Int32>.None ?? Int32(-87))
        } else { // block id: 1352
            var var_1731521783086_1354: Range<Int16> = ((Int16(Int16(20)) & 127)..(Int16(Int16(-43)) & 127) : (Int64(13) |
                1));
            var_1731521783086_1354;
            var_1731521783086_197 % ((var_1731521783086_197) | 1)
        }
    }

    static init() {
    }
}

public open class Class_1731521783086_231 <: Class_1731521783086_178 {
    @Frozen
    public init() { // block id: 233

    }

    init(param_1731521783086_280: String, param_1731521783086_281: Range<UInt32>) { // block id: 282
        let var_1731521783086_291: Range<Int32> = ((Int32(Int32(-35)) & 127)..=(Int32(Int32(UInt32(38))) & 127) : (Int64(-44) |
            1));
        const var_1731521783086_356: Unit = ();
        func func_1731521783086_413(namedParam_1731521783086_414!: UInt8, optionalParam_1731521783086_415!: Rune = r'5',
            optionalParam_1731521783086_417!: Array<UInt64> = [UInt64(189), UInt64(203), UInt64(103), UInt64(136),
                UInt64(163), UInt64(149), UInt64(42), UInt64(93), UInt64(101), UInt64(43)],
            optionalParam_1731521783086_419!: UInt8 = UInt8(Int8(Int8(UInt8(UInt8(93)))))): VArray<Unit, $2> { // block id: 425
            let var_1731521783086_454: (Float32) -> Bool = {
                lambdaParameter_1731521783086_457: Float32 => ([UInt64(48), UInt64(59), UInt64(137), UInt64(18),
                    UInt64(192), UInt64(52), UInt64(62), UInt64(111), UInt64(214), UInt64(63)] is Option<Unit>)
            };
            var loopTimeVar_1731521783086_477: Int64 = 0;
            do {
                loopTimeVar_1731521783086_477++;
                var loopTimeVar_1731521783086_470: Int = 0;
                do {
                    loopTimeVar_1731521783086_470++;
                    break
                } while ((false) && loopTimeVar_1731521783086_470 < 100);
                var loopTimeVar_1731521783086_475: Int = 0;
                do {
                    loopTimeVar_1731521783086_475++;
                } while ((false) && loopTimeVar_1731521783086_475 < 100)
            } while (((match (var_1731521783086_206) {
                case _ =>
                    if (var_1731521783086_206) {
                        var_1731521783086_440
                    } else {
                        var_1731521783086_440
                    }
            } ?? (var_1731521783086_462 |> var_1731521783086_454))) && loopTimeVar_1731521783086_477 < 100);
            let var_1731521783086_533: UInt64 = UInt64(183);
            var var_1731521783086_550: UInt32 = UInt32(41);
            var var_1731521783086_566: UInt8 = UInt8(7);
            var var_1731521783086_581: Int32 = Int32(26);
            try { // block id: 479
                var_1731521783086_482++;
                ();
                var var_1731521783086_490: VArray<Unit, $2> = [(), ()];
                var var_1731521783086_501: VArray<Unit, $2> = VArray<Unit, $2>({i => ()});
                [var_1731521783086_490, var_1731521783086_493, VArray<Unit, $2>(repeat: var_1731521783086_356),
                    var_1731521783086_490, var_1731521783086_490, var_1731521783086_501, var_1731521783086_490,
                    var_1731521783086_493, VArray<Unit, $2>(repeat: ()), VArray<Unit, $2>(repeat: ())][2]
            } finally { // block id: 514
                match (var_1731521783086_264) {
                    case caseVar_1731521783086_519 =>
                        ((Int8(Int8(-106)) & 127)..=(Int8(Int8(29)) & 127) : (Int64(33) | 1));
                        UInt64(71) & var_1731521783086_29

                    case _: Array<VArray<Unit, $2>> =>
                        var_1731521783086_462 / Float32((Int32(var_1731521783086_462)) | 1);
                        var_1731521783086_533 * UInt64(94)

                    case _ =>
                        var_1731521783086_206 &&= var_1731521783086_206
                        var_1731521783086_356;
                        -var_1731521783086_29

                    case _ =>
                        var_1731521783086_550 *= var_1731521783086_550
                        var_1731521783086_550;
                        UInt64(192)
                };
                var var_1731521783086_558: Class_1731521783086_178 = Class_1731521783086_178();
                var var_1731521783086_561: ?Unit = Option<Unit>.Some(());
                const var_1731521783086_570: Int = 126;
                const var_1731521783086_573: UInt16 = 169;
                match (Enum_1731521783086_131.enumValue_1731521783086_273(var_1731521783086_558, var_1731521783086_561,
                    ((UInt8(var_1731521783086_566) & 127)..(UInt8(UInt8(239)) & 127) : (var_1731521783086_570 | 1)),
                    var_1731521783086_573)) {
                    case caseVar_1731521783086_577 => var_1731521783086_581 >>= ((Int32(90)) & 7)

                    case _: Unit => var_1731521783086_482 %= ((var_1731521783086_482) | 1)

                    case enumValue_1731521783086_273(caseVar_1731521783086_592, caseVar_1731521783086_593, _, caseVar_1731521783086_594: Int32) => ()

                    case _ =>
                        Int32(100);
                        ();
                        var var_1731521783086_604: UInt32 = UInt32(122);
                        var_1731521783086_604 ^= UInt32(236)
                };
                (VArray<Unit, $2>({i => ()}), false, ((UInt8(UInt8(142)) & 127)..=(UInt8(UInt8(219)) & 127) : (Int64(93) |
                        1)), ((UInt8(UInt8(62)) & 127)..=(UInt8(UInt8(221)) & 127) : (Int64(-80) | 1)),
                    var_1731521783086_213)[0]
            }
        };

        let var_1731521783086_885: (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, Int32, 
            UInt16) = ("v'wzAF_VbJ", Enum_1731521783086_131.enumValue_1731521783086_889((Int64(-1) as Bool),
                ((UInt8(UInt8(210)) & 127)..=(UInt8(UInt8(137)) & 127) : (Int64(-33) | 1)), UInt16(UInt8(113))), ((UInt8(UInt8(194)) &
                127)..=(UInt8(UInt8(108)) & 127) : (Int64(-115) | 1)), Int16(UInt16(Int8(-110))), VArray<Unit, $2>({
                    i => ()
                }), Int32(Int16(UInt8(245))), UInt16(199));
        let var_1731521783086_942: Unit = ();
        func func_1731521783086_286(param_1731521783086_287: Unit, param_1731521783086_288: Option<Rune>): Array<VArray<Unit, $2>> { // block id: 289
            var_1731521783086_291;
            var var_1731521783086_349: VArray<Unit, $2> = [(), ()];
            var var_1731521783086_386: UInt8 = UInt8(Int8(UInt8(Int8(Int8(-7)))));
            let var_1731521783086_643: Int64 = Int64(60);
            let var_1731521783086_663: Range<Int16> = ((Int16(Int16(Int8(UInt8(161)))) & 127)..=(Int16(Int16(UInt8(30))) &
                127) : (Int64(-60) | 1));
            var var_1731521783086_835: (Class_1731521783086_83) -> VArray<Unit, $2> = func_1731521783086_695;
            const var_1731521783086_861: UInt64 = 82;
            let var_1731521783086_930: Option<Unit> = Option<Unit>.Some(());
            [try { // block id: 300
                Option<Unit>.Some(());
                var_1731521783086_304
            } finally { // block id: 336
                var var_1731521783086_339: Int64 = Int64(UInt16(UInt8(46)));
                var_1731521783086_339 = Int64(56)
                [VArray<Unit, $2>({i => ()}), var_1731521783086_349, VArray<Unit, $2>({i => ()}),
                    VArray<Unit, $2>(repeat: var_1731521783086_356), VArray<Unit, $2>(repeat: ()), var_1731521783086_349,
                    var_1731521783086_349, var_1731521783086_349, VArray<Unit, $2>(repeat: var_1731521783086_356),
                    VArray<Unit, $2>(repeat: var_1731521783086_356)]
            }[8], if (if (var_1731521783086_206) { // block id: 375
                ();
                true
            } else if (var_1731521783086_206) { // block id: 379
                ();
                var_1731521783086_304;
                var_1731521783086_206
            } else { // block id: 383
                const var_1731521783086_394: Int = -33;
                ((UInt8(var_1731521783086_386) & 127)..=(UInt8(var_1731521783086_386) & 127) : (var_1731521783086_394 | 1));
                var_1731521783086_398 = Float64(-120.0)
                let var_1731521783086_407: Int8 = Int8(38);
                Int8(13) >= var_1731521783086_407
            }) {
                VArray<Unit, $2>(repeat: ())
            } else {
                func_1731521783086_413(namedParam_1731521783086_414: var_1731521783086_386,
                    optionalParam_1731521783086_415: r'1',
                    optionalParam_1731521783086_417: [UInt64(210), var_1731521783086_29, UInt64(19), UInt64(242),
                        UInt64(231), var_1731521783086_29, var_1731521783086_29, UInt64(142), UInt64(169),
                        var_1731521783086_29])
            }, try { // block id: 634
                (((Int16(var_1731521783086_482) & 127)..(Int16(var_1731521783086_482) & 127) : (var_1731521783086_640 | 1)),
                    var_1731521783086_643, VArray<Unit, $2>(repeat: var_1731521783086_356))
            } catch (e: Exception) { // block id: 648
                let var_1731521783086_651: Int8 = Int8(Int8(112));
                var_1731521783086_651 / ((var_1731521783086_651) | 1);
                if (false) {
                    var_1731521783086_658
                } else {
                    [UInt64(174), UInt64(203), UInt64(83), UInt64(209), UInt64(131), UInt64(228), UInt64(32), UInt64(36),
                        UInt64(197), UInt64(23)]
                };
                (var_1731521783086_663, var_1731521783086_643, var_1731521783086_673)
            } finally { // block id: 675
                ();
                ((Int16(Int16(61)) & 127)..(Int16(Int16(104)) & 127) : (Int64(71) | 1));
                var var_1731521783086_679: (Range<Int16>, Int64, VArray<Unit, $2>) = (((Int16(Int16(73)) & 127)..(Int16(Int16(-62)) &
                        127) : (Int64(4) | 1)), Int64(-40), VArray<Unit, $2>({i => ()}));
                var_1731521783086_679
            }[2], try { // block id: 688
                VArray<Unit, $2>(repeat: var_1731521783086_356)
            } finally { // block id: 692
                var_1731521783086_349
            }, (try { // block id: 838
                Class_1731521783086_178()
            } finally { // block id: 840
                var_1731521783086_843 %= ((var_1731521783086_843) | 1)
                var_1731521783086_356;
                if (true) {
                    Class_1731521783086_178()
                } else {
                    var_1731521783086_851
                }
            } |> var_1731521783086_835),
                if (([UInt64(186), UInt64(222), UInt64(51), var_1731521783086_29, var_1731521783086_861, UInt64(215),
                UInt64(143), var_1731521783086_861, UInt64(151), var_1731521783086_29] is (Class_1731521783086_83) -> VArray<Unit, $2>)) {
                if (true) { // block id: 870
                    VArray<Unit, $2>({i => ()})
                } else { // block id: 874
                    if (false) {
                        VArray<Unit, $2>({i => ()})
                    } else {
                        VArray<Unit, $2>(repeat: var_1731521783086_772)
                    }
                }
            } else {
                var_1731521783086_885[4]
            }, VArray<Unit, $2>(repeat: if (var_1731521783086_206) { // block id: 916

                } else if (var_1731521783086_206) { // block id: 918
                    ();
                    var var_1731521783086_922: Int32 = Int32(16);
                    var_1731521783086_922++
                }), var_1731521783086_349, try { // block id: 936
                var_1731521783086_772;
                if (var_1731521783086_206) {
                    VArray<Unit, $2>(repeat: var_1731521783086_942)
                } else {
                    VArray<Unit, $2>(repeat: var_1731521783086_947)
                }
            } catch (_) { // block id: 950
                var_1731521783086_349
            }, VArray<Unit, $2>(repeat: VArray<Unit, $1>(repeat: ())[0])]
        };

        var var_1731521783086_1001: Bool = ((VArray<Unit, $2>({i => ()}), ((Option<Unit>.Some(()) as Unit) is Bool), ((UInt8(UInt8(89)) &
                127)..(UInt8(UInt8(99)) & 127) : (Int64(Int64(44)) | 1)), ((UInt8(UInt8(148)) & 127)..(UInt8(UInt8(193)) &
                127) : (Int64(71) | 1)), Struct_1731521783086_54()) is Class_1731521783086_231);
        func_1731521783086_286(var_1731521783086_990.var_1731521783086_993, try { // block id: 996
            Option<Rune>.None
        } finally { // block id: 998
            var var_1731521783086_1020: Rune = r'E';
            if (var_1731521783086_1001) {
                Option<Rune>.Some(var_1731521783086_1020)
            } else {
                Option<Rune>.Some(r'S')
            }
        })[1];
        let var_1731521783086_1039: Option<(Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, 
            Int32, UInt16))> = Option<(Option<Bool>, (String, Enum_1731521783086_131, Range<UInt8>, Int16, VArray<Unit, $2>, 
                Int32, UInt16))>.Some(
            (Option<Bool>.None, (###"9 aj 9SlSk"###, Enum_1731521783086_131.enumValue_1731521783086_889(
                        Option<Bool>.None, ((UInt8(UInt8(114)) & 127)..=(UInt8(UInt8(93)) & 127) : (Int64(89) | 1)),
                        UInt16(202)), ((UInt8(UInt8(67)) & 127)..=(UInt8(UInt8(112)) & 127) : (Int64(-123) | 1)), Int16(-46),
                    VArray<Unit, $2>({i => ()}), Int32(-64), UInt16(UInt8(15)))));
        (if (var_1731521783086_451) { // block id: 1034
            var_1731521783086_206 ||= true
            var_1731521783086_1039
        } else { // block id: 1063
            if (true) {
                var_1731521783086_1039
            } else {
                var_1731521783086_1039
            }
        } ?? (var_1731521783086_1072, Int32(-10), var_1731521783086_1090, var_1731521783086_1072)[3])[0]
    };

    public open override func func_1731521783086_1326(): Int32 { // block id: 1327
        if (if (var_1731521783086_206) { // block id: 1331
            var_1731521783086_206 && true
        } else if (Int8(76) <= Int8(-30)) { // block id: 1338
            UInt8(97) <= UInt8(80)
        } else { // block id: 1342
            var_1731521783086_451
        }) { // block id: 1344
            (Option<Int32>.None ?? Int32(-87))
        } else { // block id: 1352
            var var_1731521783086_1354: Range<Int16> = ((Int16(Int16(20)) & 127)..(Int16(Int16(-43)) & 127) : (Int64(13) |
                1));
            var_1731521783086_1354;
            var_1731521783086_197 % ((var_1731521783086_197) | 1)
        }
    }

    static init() {
    }
}

@Deprecated
const func func_1731521783086_444(param_1731521783086_445: Float32): Bool { // block id: 446
    const var_1731521783086_448: Float64 = -8.0;
    var_1731521783086_448;
    var_1731521783086_451
}

public func func_1731521783086_695(param_1731521783086_696: Class_1731521783086_83): VArray<Unit, $2> { // block id: 697
    let var_1731521783086_760: Class_1731521783086_83 = Class_1731521783086_231();
    let var_1731521783086_783: (String, Class_1731521783086_83, String, Float64, Enum_1731521783086_131, Bool, UInt16, 
        Enum_1731521783086_131) = ("""
-W#,^
Ve_aV
""", Class_1731521783086_231(), """
&(^Yo
K'Yyh
""", Float64(-7.0),
        Enum_1731521783086_131.enumValue_1731521783086_739(UInt32(UInt8(211)),
            VArray<Int16, $8>(repeat: Int16(UInt8(63)))), false, UInt16(129),
        Enum_1731521783086_131.enumValue_1731521783086_273(Class_1731521783086_178(),
            (((UInt64(UInt64(19)) & 127)..=(UInt64(UInt64(28)) & 127) : (Int64(44) | 1)) as Unit),
            ((UInt8(UInt8(27)) & 127)..(UInt8(UInt8(192)) & 127) : (Int64(15) | 1)), UInt16(47)));
    var var_1731521783086_829: Class_1731521783086_178 = Class_1731521783086_231();
    var loopTimeVar_1731521783086_832: Int = 0;
    while ((try { // block id: 702
            var_1731521783086_704
        } finally { // block id: 758
            var_1731521783086_760;
            ((((Int16(Int16(-11)) & 127)..(Int16(var_1731521783086_482) & 127) : (var_1731521783086_640 | 1)), Int64(85),
                    VArray<Unit, $2>({i => ()})), ((Int64(Int64(76)) & 127)..=(Int64(Int64(111)) & 127) : (Int64(-111) |
                    1)), false, Float32(45.0), var_1731521783086_264, var_1731521783086_779, var_1731521783086_783)
        }[2]) && loopTimeVar_1731521783086_832 < 100) {
        loopTimeVar_1731521783086_832++;
        try { // block id: 821
            Class_1731521783086_178()
        } finally { // block id: 823
            var_1731521783086_772;
            Float32(-109.0) - Float32(49.0);
            var_1731521783086_829
        }
    };
    var_1731521783086_673
}

@Frozen
func func_1731521783086_219(param_1731521783086_220: Int32): VArray<Int16, $8> { // block id: 221
    let var_1731521783086_225: VArray<Unit, $2> = [(), ()];
    var_1731521783086_225[1];
    var var_1731521783086_235: Class_1731521783086_231 = Class_1731521783086_231();
    var var_1731521783086_1268: Range<UInt64> = ((UInt64(UInt64(151)) & 127)..(UInt64(UInt64(141)) & 127) : (Int64(-78) |
        1));
    let var_1731521783086_1273: ((Range<Int16>, Int64, VArray<Unit, $2>), Range<UInt64>, VArray<Int16, $8>) = ((((Int16(Int16(63)) &
                127)..=(Int16(Int16(121)) & 127) : (Int64(13) | 1)), Int64(UInt8(139)), VArray<Unit, $2>({i => ()})), ((UInt64(UInt64(Int16(UInt8(127)))) &
            127)..=(UInt64(UInt64(Int16(Int8(23)))) & 127) : (Int64(123) | 1)), VArray<Int16, $8>(repeat: Int16(95)));
    var_1731521783086_235.func_1731521783086_238(optionalParam_1731521783086_239: UInt8(Int8(-4)),
        optionalParam_1731521783086_244: try { // block id: 1247
            var var_1731521783086_1249: Range<UInt64> = ((UInt64(UInt64(61)) & 127)..(UInt64(UInt64(245)) & 127) : (Int64(-98) |
                1));
            var_1731521783086_1249
        } catch (_) { // block id: 1251
            (VArray<Unit, $2>(repeat: var_1731521783086_947), true, ((UInt8(UInt8(67)) & 127)..=(UInt8(UInt8(137)) & 127) : (Int64(119) |
                    1)), ((UInt8(UInt8(0)) & 127)..=(UInt8(UInt8(36)) & 127) : (Int64(89) | 1)),
                Struct_1731521783086_54());
            let var_1731521783086_1263: Range<UInt64> = ((UInt64(UInt64(56)) & 127)..(UInt64(UInt64(192)) & 127) : (Int64(-107) |
                1));
            if (var_1731521783086_206) {
                var_1731521783086_1263
            } else {
                var_1731521783086_1263
            }
        } finally { // block id: 1266
            var_1731521783086_1268
        }, optionalParam_1731521783086_246: var_1731521783086_1273[1])
}

@Frozen
public func func_1731521783086_201(param_1731521783086_202: Unit): VArray<Int16, $8> { // block id: 203
    var loopTimeVar_1731521783086_217: Int = 0;
    do {
        loopTimeVar_1731521783086_217++;
        if (var_1731521783086_206) {
            var_1731521783086_213
        } else {
            Struct_1731521783086_54()
        }
    } while ((var_1731521783086_206) && loopTimeVar_1731521783086_217 < 100);
    var var_1731521783086_1309: (Int32) -> VArray<Int16, $8> = func_1731521783086_219;
    var_1731521783086_197 |> var_1731521783086_1309
}

@Frozen
internal func func_1731521783086_155(param_1731521783086_156: Range<Int64>): VArray<Int16, $8> { // block id: 157
    let var_1731521783086_1323: Interface_1731521783086_182 = Class_1731521783086_231();
    try { // block id: 159
        var var_1731521783086_166: ?Unit = (Struct_1731521783086_54() as Unit);
        var_1731521783086_166.getOrThrow();
        const var_1731521783086_171: Int32 = -44;
        const var_1731521783086_174: Int32 = 119;
        var_1731521783086_171 ^ var_1731521783086_174
    } catch (e: Exception) { // block id: 176
        Class_1731521783086_178.var_1731521783086_186;
        Class_1731521783086_178.var_1731521783086_191;
        var_1731521783086_197
    } finally { // block id: 199
        () |> func_1731521783086_201;
        let var_1731521783086_1318: Int64 = Int64(UInt8(250));
        ((Int32(Int32(-96)) & 127)..=(Int32(Int32(38)) & 127) : (var_1731521783086_1318 | 1));
        var_1731521783086_1323.func_1731521783086_1326()
    };
    let var_1731521783086_1449: Int16 = Int16(103);
    let var_1731521783086_1484: VArray<Int16, $8> = [Int16(-87), Int16(Int8(-58)), Int16(77), Int16(-128), Int16(-100),
        Int16(86), Int16(-127), Int16(62)];
    if ((Option<Bool>.None ?? match (((UInt32(UInt32(1)) & 127)..=(UInt32(UInt32(79)) & 127) : (Int64(100) | 1))) {
        case caseVar_1731521783086_1370: Enum_1731521783086_131 => var_1731521783086_482 >= var_1731521783086_482

        case _: UInt64 => var_1731521783086_206

        case caseVar_1731521783086_1381: VArray<Int16, $8> =>
            var_1731521783086_206;
            [UInt64(155), UInt64(75), UInt64(41), UInt64(27), UInt64(115), UInt64(33), UInt64(24), UInt64(238),
                UInt64(90), UInt64(178)];
            var_1731521783086_640 > var_1731521783086_640

        case _ => var_1731521783086_206
    })) {
        try { // block id: 1393
            var var_1731521783086_1396: VArray<Int16, $8> = [Int16(-94), Int16(Int8(103)), Int16(-30), Int16(Int8(-94)),
                Int16(25), Int16(-84), Int16(36), Int16(107)];
            [var_1731521783086_1396, var_1731521783086_1396, VArray<Int16, $8>(repeat: var_1731521783086_482),
                VArray<Int16, $8>(repeat: var_1731521783086_482), var_1731521783086_1396,
                VArray<Int16, $8>(repeat: var_1731521783086_482), var_1731521783086_1396,
                VArray<Int16, $8>({i => Int16(4)}), var_1731521783086_1396, var_1731521783086_1396];
            var_1731521783086_772;
            if (var_1731521783086_451) {
                VArray<Int16, $8>(repeat: var_1731521783086_1449)
            } else {
                var_1731521783086_1396
            }
        } catch (_) { // block id: 1466
            ();
            ();
            VArray<Int16, $8>({i => Int16(-14)})
        } finally { // block id: 1480
            let var_1731521783086_1503: Int16 = Int16(-100);
            if (false) {
                var_1731521783086_1484
            } else {
                VArray<Int16, $8>(repeat: var_1731521783086_482)
            }
        }
    } else {
        try { // block id: 1507
            var_1731521783086_779 += var_1731521783086_779
            var_1731521783086_1512;
            if (var_1731521783086_451) {
                var_1731521783086_1484
            } else {
                VArray<Int16, $8>({i => Int16(-96)})
            }
        } catch (_) { // block id: 1526
            var_1731521783086_29 <<= ((UInt64(80)) & 7)
            ((UInt64(UInt64(213)) & 127)..(UInt64(var_1731521783086_29) & 127) : (var_1731521783086_640 | 1));
            let var_1731521783086_1541: Int16 = Int16(UInt16(Int8(-127)));
            VArray<Int16, $8>(repeat: var_1731521783086_1449)
        }
    }
}

@Deprecated
public func func_1731521783086_47(optionalParam_1731521783086_48!: UInt8 = UInt8(UInt8(UInt8(92)))): Bool { // block id: 52
    var var_1731521783086_58: Struct_1731521783086_54 = Struct_1731521783086_54();
    var_1731521783086_58.func_1731521783086_61(var_1731521783086_1797 ^ var_1731521783086_779,
        optionalParam_1731521783086_63: if (false) { // block id: 1802
            true
        } else if (true) { // block id: 1805
            ((Int16(Int16(-38)) & 127)..(Int16(Int16(19)) & 127) : (var_1731521783086_640 | 1));
            const var_1731521783086_1812: Byte = 237;
            var_1731521783086_1812 < var_1731521783086_1812
        } else { // block id: 1815
            var_1731521783086_990;
            false
        })
}

internal func func_1731521783086_42(param_1731521783086_43: Int8): Bool { // block id: 44
    var loopTimeVar_1731521783086_1834: Int64 = 0;
    do {
        loopTimeVar_1731521783086_1834++;
        (Float32(-112.0) as Int32)
    } while ((func_1731521783086_47(optionalParam_1731521783086_48: if (true) { // block id: 1820
        var_1731521783086_1823 >> ((var_1731521783086_1823) & 7)
    } else { // block id: 1826
        var_1731521783086_1823 << ((var_1731521783086_1823) & 7)
    })) && loopTimeVar_1731521783086_1834 < 100);
    var var_1731521783086_1900: Int16 = Int16(72);
    let var_1731521783086_1903: VArray<Int16, $8> = [Int16(UInt16(112)), Int16(UInt8(121)),
        Int16(UInt8(UInt8(UInt8(177)))), Int16(Int8(Int8(-17))), Int16(43), Int16(UInt8(Int8(Int8(-30)))), Int16(43),
        Int16(Int16(-28))];
    if (var_1731521783086_206) { // block id: 1837
        var_1731521783086_451
    } else if (false) { // block id: 1840
        let var_1731521783086_1842: Option<Rune> = Option<Rune>.Some(r'Z');
        var_1731521783086_1842;
        const var_1731521783086_1876: Int32 = -28;
        try { // block id: 1846
            ();
            ((Int16(Int16(53)) & 127)..(Int16(Int16(32)) & 127) : (Int64(-35) | 1));
            var_1731521783086_1853
        } finally { // block id: 1868
            var_1731521783086_1871 |= var_1731521783086_1876
            ();
            var_1731521783086_1853
        };
        let var_1731521783086_1965: VArray<Int16, $8> = [Int16(2), Int16(26), Int16(-26), Int16(5),
            Int16(Int8(Int8(Int8(101)))), Int16(Int8(Int8(UInt8(146)))), Int16(UInt16(Int8(89))), Int16(97)];
        const var_1731521783086_1996: Float64 = 59.0;
        if (var_1731521783086_1882) { // block id: 1884
            var_1731521783086_206
        } else if (var_1731521783086_451) { // block id: 1887
            Struct_1731521783086_54();
            ([VArray<Int16, $8>({i => Int16(-65)}), var_1731521783086_1903, var_1731521783086_1903,
                    VArray<Int16, $8>(repeat: var_1731521783086_1416), VArray<Int16, $8>({i => Int16(-6)}),
                    VArray<Int16, $8>(repeat: var_1731521783086_1416), VArray<Int16, $8>({i => Int16(-16)}),
                    var_1731521783086_1903, var_1731521783086_1965, VArray<Int16, $8>(repeat: var_1731521783086_1900)],
                var_1731521783086_29, var_1731521783086_658, UInt32(88), var_1731521783086_1996);
            true
        } else { // block id: 1999
            var_1731521783086_2002 -= var_1731521783086_197
            var_1731521783086_772;
            UInt16(212) < var_1731521783086_1797
        }
    } else { // block id: 2011
        ((UInt32(UInt32(29)) & 127)..=(UInt32(UInt32(98)) & 127) : (Int64(7) | 1));
        match (var_1731521783086_2015) {
            case caseVar_1731521783086_2020: Interface_1731521783086_181 =>
                var_1731521783086_197;
                if (var_1731521783086_2025) {
                    Option<Int32>.None
                } else {
                    Option<Int32>.Some(var_1731521783086_197)
                };
                var_1731521783086_2025

            case _ =>
                var_1731521783086_843 %= ((var_1731521783086_843) | 1)
                ();
                const var_1731521783086_2040: Int64 = 9;
                var_1731521783086_2040 != Int64(-6)
        }
    }
}

public func func_1731521783086_12(param_1731521783086_13: Bool): Bool { // block id: 14
    if (try { // block id: 17
        var_1731521783086_20 && false
    } catch (e: Exception) { // block id: 27
        var_1731521783086_29;
        ();
        false
    }) { // block id: 33
        var loopTimeVar_1731521783086_38: Int = 0;
        while ((false) && loopTimeVar_1731521783086_38 < 100) {
            loopTimeVar_1731521783086_38++;
        };
        var_1731521783086_20
    } else { // block id: 40
        var_1731521783086_843 |> func_1731521783086_42
    }
}

main(): Int64 {
    try {
        var var_1731521783086_2063: Int = Int64(104);
        var loopTimeVar_1731521783086_2068: Int64 = 0;
        do {
            loopTimeVar_1731521783086_2068++;
        } while ((if ((false |> func_1731521783086_12)) { // block id: 2047
            var var_1731521783086_2049: Unit = ();
            var_1731521783086_2049;
            var_1731521783086_2053--;
            var_1731521783086_2025 || true
        } else { // block id: 2058
            ();
            Float64(105.0);
            var_1731521783086_2063 >= Int64(46)
        }) && loopTimeVar_1731521783086_2068 < 100);
        var loopTimeVar_1731521783086_2088: Range<UInt64> = ((UInt64(UInt64(Int8(Int8(UInt8(184))))) & 127)..(UInt64(UInt64(Int64(56))) &
            127) : (Int64(10) | 1));
        for (i in loopTimeVar_1731521783086_2088 where ((Int64(-27) << ((Int64(-82)) & 7)) is UInt16)) {
            if (var_1731521783086_2025) { // block id: 2077
                const var_1731521783086_2079: String = "eVvwNF}ig%";
                var_1731521783086_2079
            } else if (var_1731521783086_2025) { // block id: 2082
                var_1731521783086_2084
            } else { // block id: 2086
                var_1731521783086_2084
            }
        };
        var_1731521783086_2063
        // CRC Check All Variables
        var crcCheck = CrcCheck(5000, 32)
        crcCheck.updateBuffer(UInt64(var_1731521783086_2063 * var_1731521783086_2063), 64)
        crcCheck.crcCheck()
        crcCheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) {
        println("Exception: NoneValueException")
    }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        buffer = Array<Int64>(buffer_n, {i => 0})
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, {i => 0})
        var byte_c = 1
        var byte_index = 0
        while (value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[(i + buffer_index) % buffer.size] = byteArray[i + byte_index]
            i++
        }
        buffer_index = (buffer_index + i) % buffer.size
    }

    func updateBuffer(input: Bool, byte_n: Int64): Unit {
        if (input == true) {
            updateBuffer(1, byte_n)
        } else {
            updateBuffer(0, byte_n)
        }
    }

    func updateBuffer(input: Rune, byte_n: Int64): Unit {
        updateBuffer(UInt64(UInt32(input)), byte_n)
    }

    func updateBuffer(input: String, byte_n: Int64): Unit {
        for (c in input) {
            updateBuffer(c, byte_n)
        }
    }

    func updateBuffer(input: Unit, byte_n: Int64): Unit {
        updateBuffer(input.toString(), byte_n)
    }

    func updateBuffer(input: Any, byte_n: Int64): Unit {
        if (input is Hashable) {
            match (input as Hashable) {
                case Some(v) => updateBuffer(UInt64(v.hashCode()), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else if (input is ToString) {
            match (input as ToString) {
                case Some(v) => updateBuffer(v.toString(), byte_n)
                case _ => updateBuffer(1, byte_n)
            }
        } else {
            updateBuffer(1, byte_n)
        }
    }
    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, {i => 0})
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, {i => 0})
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2 ** 2 * crc_output[i] + 2 ** 1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}

extend Class_1731521783086_231 {}

extend Enum_1731521783086_131 {}
