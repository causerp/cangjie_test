/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public let var_1669304271982_55 : Bool = (UInt8(85) is Array<Bool>)
public let var_1669304271982_68 : UInt32 = UInt32(254)
public let var_1669304271982_176 : Int64 = Int64(UInt32(UInt8(232)))
public var var_1669304271982_186 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1669304271982_208 : Int64 = 20
let var_1669304271982_230 : Option<Option<UInt32>> = Option<Option<UInt32>>.None
public let var_1669304271982_241 : String = "(elE6I0~VN"
let var_1669304271982_253 : Unit = ()
public var var_1669304271982_270 : Bool = ("""
JH-Gh
5OeNj
""" is UInt8)
public var var_1669304271982_276 : ?UInt32 = ([false, true, true, false, true, false, false, false, true, false] as UInt32)
public let var_1669304271982_285 : Struct_1669304271982_7 = Struct_1669304271982_7()
public let var_1669304271982_307 : Unit = ()
public var var_1669304271982_311 : UInt8 = UInt8(UInt8(54))
public var var_1669304271982_340 : Float32 = Float32(102.0)
public var var_1669304271982_347 : Bool = false
public let var_1669304271982_351 : Unit = ()
public let var_1669304271982_392 : ?UInt32 = ('L' as UInt32)
public var var_1669304271982_424 : Bool = false
public var var_1669304271982_502 : Int16 = Int16(125)
var var_1669304271982_506 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1669304271982_529 : UInt64 = UInt64(21)
public var var_1669304271982_533 : ?Array<Bool> = Option<Array<Bool>>.None
var var_1669304271982_562 : Range<UInt16> = ((UInt16(54)&127)..(UInt16(208)&127):((Int64(Int32(86))|1)))
public var var_1669304271982_602 : UInt64 = UInt64(UInt8(122))
public var var_1669304271982_746 : Array<Option<UInt64>> = [(Int64(UInt8(100)) as UInt64), (((Int32(Int16(-43))&127)..(Int32(UInt32(102))&127):((Int64(UInt64(181))|1))) as UInt64), Option<UInt64>.None, (([(), (), (), (), (), (), (), (), (), ()] as Bool) as UInt64), ((Enum_1669304271982_90.defaultValue as Enum_1669304271982_90) as UInt64), ([UInt64(85), UInt64(223), UInt64(113), UInt64(18), UInt64(106), UInt64(124), UInt64(122), UInt64(167), UInt64(196), UInt64(68)] as UInt64), Option<UInt64>.None, Option<UInt64>.None, (Option<UInt32>.None as UInt64), (((UInt32(162)&127)..=(UInt32(109)&127):((Int64(Int16(112))|1))) as UInt64)]
public var var_1669304271982_791 : Option<UInt64> = (Class_1669304271982_117() as UInt64)
public let var_1669304271982_808 : Unit = ()
public let var_1669304271982_836 : Float64 = Float64(Float64(23.0))
public let var_1669304271982_888 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1669304271982_944 : Bool = true
public var var_1669304271982_950 : Option<Bool> = Option<Bool>.None
public var var_1669304271982_972 : Option<(Range<Int8>, Array<Unit>, Range<UInt16>, Struct_1669304271982_7, Array<Unit>, Array<Unit>, Range<UInt64>)> = Option<(Range<Int8>, Array<Unit>, Range<UInt16>, Struct_1669304271982_7, Array<Unit>, Array<Unit>, Range<UInt64>)>.None
public let var_1669304271982_977 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1669304271982_999 : Struct_1669304271982_7 = Struct_1669304271982_7()
public struct Struct_1669304271982_7 {
    public init() { // block id: 9

    }
;
    public prop var_1669304271982_288 : Unit { // block id: 289
        get() { // block id: 291

        }

    };
    public static var var_1669304271982_469 : Bool = false;
    static let var_1669304271982_689 : Enum_1669304271982_90 = Enum_1669304271982_90.defaultValue;
    static var var_1669304271982_701 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
    private static let var_1669304271982_716 : (UInt16, UInt32, Range<UInt8>, String, Bool, Range<Int64>) = (UInt16(38), UInt32(79), ((UInt8(208)&127)..(UInt8(8)&127):((33|1))), "YypN,AgPH+", false, (((-106)&127)..=((-114)&127):((-36)|1)));
    static prop var_1669304271982_866 : Array<Bool> { // block id: 867
        get() { // block id: 869
            ();
            [(), (), (), (), (), (), (), (), (), ()];
            [true, true, true, true, false, false, false, false, false, false]
        }

    };
    public static func func_1669304271982_641<T0, T1, T2>(namedParam_1669304271982_642 ! : Option<Array<Bool>>, optionalParam_1669304271982_643 ! : Int8 = Int8(-119), optionalParam_1669304271982_645 ! : Bool = false, optionalParam_1669304271982_647 ! : UInt32 = UInt32(68)) : Bool { // block id: 649
        var var_1669304271982_672 : ?Enum_1669304271982_90 = Option<Enum_1669304271982_90>.Some(Enum_1669304271982_90.enumValue_1669304271982_675(Class_1669304271982_117()));
        (if ((Struct_1669304271982_7.var_1669304271982_469)) { match (var_1669304271982_208) {
            case _ : Option<UInt32> => 
                if (true) { ((var_1669304271982_208&127)..(var_1669304271982_176&127):((var_1669304271982_176|1))) } else { (((-103)&127)..((-110)&127):((-60)|1)) } ;
                var_1669304271982_672
            
            case 112 | -19 => 
                Option<Enum_1669304271982_90>.None
            
            case _ => 
                if (var_1669304271982_469) { var_1669304271982_672 } else { Option<Enum_1669304271982_90>.Some(var_1669304271982_689) } 
            
        } } else { (if (true) { var_1669304271982_672 } else { var_1669304271982_672 } ) }  ?? if ((((Int32(27)&127)..(Int32(-86)&127):(89|1)), var_1669304271982_701, ((Int8(-57)&127)..=(Int8(65)&127):((-124)|1)), var_1669304271982_469, var_1669304271982_716)[3]) { (if (var_1669304271982_469) { var_1669304271982_689 } else { var_1669304271982_689 } ) } else { (if (var_1669304271982_469) { var_1669304271982_689 } else { var_1669304271982_689 } ) } );
        var_1669304271982_602 <<= (((var_1669304271982_746[8] ?? (var_1669304271982_791 ?? UInt64(176)))) & 7);
        var var_1669304271982_802 : UInt32 = UInt32(Int8(Int8(-122)));
        var var_1669304271982_816 : Range<UInt32> = ((UInt32(Int8(UInt8(Int8(-111))))&127)..(UInt32(123)&127):((Int64((-99))|1)));
        var var_1669304271982_906 : Int32 = Int32(UInt32(76));
        if (match (Class_1669304271982_117()) {
            case _ => 
                var_1669304271982_802 /= ((UInt32(10)) | 1);
                var_1669304271982_808;
                var_1669304271982_270
            
        }) { // block id: 811
            if (var_1669304271982_424) { ((UInt32(10)&127)..=(UInt32(60)&127):(71|1)) } else { var_1669304271982_816 } ;
            if (true) { // block id: 827

            } else if (var_1669304271982_347) { // block id: 829

            };
            if (false) { // block id: 832
                ((UInt16(30)&127)..=(UInt16(180)&127):(113|1));
                var_1669304271982_836 > 8.0
            } else if (var_1669304271982_469) { // block id: 842
                var_1669304271982_808;
                var var_1669304271982_845 : Range<Int32> = ((Int32(Int8(Int8(Int8(112))))&127)..(Int32(UInt16(51))&127):((Int64(Int32(UInt32(UInt16(57))))|1)));
                var_1669304271982_845;
                var_1669304271982_602 >= var_1669304271982_529
            } else { // block id: 860
                false
            }
        } else if (if (var_1669304271982_424) { var_1669304271982_866 } else { [var_1669304271982_55, var_1669304271982_55, true, var_1669304271982_347, true, false, true, var_1669304271982_347, var_1669304271982_270, var_1669304271982_469] } [9]) { // block id: 885
            match (var_1669304271982_888) {
                case caseVar_1669304271982_902 : UInt32 => 
                    var_1669304271982_906 >= Int32(-58);
                    var_1669304271982_307;
                    var_1669304271982_351
                
                case _ : Interface_1669304271982_121 => 
                    var_1669304271982_502 <<= ((Int16(84)) & 7)
                
                case _ => 
                    ((var_1669304271982_68&127)..=(UInt32(210)&127):((var_1669304271982_176|1)));
                    var var_1669304271982_926 : UInt16 = UInt16(239);
                    var_1669304271982_926 <<= ((UInt16(164)) & 7)
                
            };
            ([UInt64(140), var_1669304271982_529, var_1669304271982_602, var_1669304271982_602, var_1669304271982_602, UInt64(160), var_1669304271982_529, var_1669304271982_529, UInt64(67), UInt64(95)], var_1669304271982_502, var_1669304271982_944, [(), (), (), (), (), (), (), (), (), ()])[2]
        } else { // block id: 948
            var_1669304271982_950;
            try { // block id: 953
                Option<UInt64>.None;
                ();
                UInt16(248) <= UInt16(63)
            } catch (_) { // block id: 959
                false
            }
        }
    }
;
    public prop var_1669304271982_1004 : Int64 { // block id: 1005
        get() { // block id: 1007
            Int64(UInt64(25))
        }

    }
}

public enum Enum_1669304271982_90 {
    defaultValue |
    enumValue_1669304271982_675(Interface_1669304271982_120)
}
public interface Interface_1669304271982_121 {

}

public interface Interface_1669304271982_120 <: Interface_1669304271982_121 {
    func func_1669304271982_215(namedParam_1669304271982_216 ! : Array<Bool>) : Unit { // block id: 217
        ((var_1669304271982_230 ?? Option<UInt32>.Some(var_1669304271982_68)) ?? (UInt16(219), UInt32(114), ((UInt8(118)&127)..(UInt8(244)&127):((-124)|1)), var_1669304271982_241, false, ((20&127)..=((-23)&127):(99|1)))[1]) + ((Option<Option<UInt32>>.None ?? Option<UInt32>.Some(var_1669304271982_68)) ?? match (var_1669304271982_253) {
            case () | () | () | () => 
                [UInt64(215), UInt64(1), UInt64(60), UInt64(136), UInt64(177), UInt64(158), UInt64(100), UInt64(33), UInt64(135), UInt64(183)];
                ();
                UInt32(187)
            
            case () => 
                ((UInt32(228)&127)..(UInt32(126)&127):(14|1));
                var_1669304271982_68
            
            case _ => 
                if (var_1669304271982_270) { Option<UInt32>.Some(UInt32(202)) } else { var_1669304271982_276 } ;
                ();
                var_1669304271982_68
            
        });
        var loopTimeVar_1669304271982_375 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        [var_1669304271982_285.var_1669304271982_288, [(), var_1669304271982_253, var_1669304271982_253, var_1669304271982_253, (), (), var_1669304271982_253, (), (), ()][6], var_1669304271982_307, (var_1669304271982_311 *= var_1669304271982_311), [var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_253, (), var_1669304271982_253, (), var_1669304271982_307][3], match (var_1669304271982_276) {
            case caseVar_1669304271982_333 => 
                UInt8(238) + var_1669304271982_311;
                var_1669304271982_340 /= Float32((Int32(Float32(-47.0))) | 1)
            
            case _ : Array<Unit> => 
                var_1669304271982_347;
                ();
                var_1669304271982_351
            
            case _ => 
                ()
            
        }, match (Int16(-94)) {
            case 71 | 58 | 125 | -25 => 
                [(), (), (), (), (), (), (), (), (), ()];
                ()
            
            case _ => 
                let var_1669304271982_367 : UInt64 = UInt64(213);
                ((var_1669304271982_367&127)..(var_1669304271982_367&127):((var_1669304271982_208|1)));
                var_1669304271982_307
            
        }, for (i in loopTimeVar_1669304271982_375 where var_1669304271982_55) {

        }, if (false) { // block id: 389
            Option<Option<UInt32>>.Some(var_1669304271982_392);
            UInt16(93);
            ()
        }, match (var_1669304271982_276) {
            case caseVar_1669304271982_401 : Int64 => 
                var_1669304271982_311++
            
            case _ => 
                ()
            
            case _ => 
                var_1669304271982_307
            
            case caseVar_1669304271982_415 : Int16 => 
                var_1669304271982_311 &= UInt8(1)
            
            case _ => 
                var_1669304271982_424 ||= var_1669304271982_55
            
        }][1]
    }

}

public interface Interface_1669304271982_123<T0> <: Interface_1669304271982_120 & Interface_1669304271982_121 {

}

public interface Interface_1669304271982_122<T0, T1> <: Interface_1669304271982_120 & Interface_1669304271982_123<Int32> {
    func func_1669304271982_215(namedParam_1669304271982_216 ! : Array<Bool>) : Unit { // block id: 217
        ((var_1669304271982_230 ?? Option<UInt32>.Some(var_1669304271982_68)) ?? (UInt16(219), UInt32(114), ((UInt8(118)&127)..(UInt8(244)&127):((-124)|1)), var_1669304271982_241, false, ((20&127)..=((-23)&127):(99|1)))[1]) + ((Option<Option<UInt32>>.None ?? Option<UInt32>.Some(var_1669304271982_68)) ?? match (var_1669304271982_253) {
            case () | () | () | () => 
                [UInt64(215), UInt64(1), UInt64(60), UInt64(136), UInt64(177), UInt64(158), UInt64(100), UInt64(33), UInt64(135), UInt64(183)];
                ();
                UInt32(187)
            
            case () => 
                ((UInt32(228)&127)..(UInt32(126)&127):(14|1));
                var_1669304271982_68
            
            case _ => 
                if (var_1669304271982_270) { Option<UInt32>.Some(UInt32(202)) } else { var_1669304271982_276 } ;
                ();
                var_1669304271982_68
            
        });
        var loopTimeVar_1669304271982_375 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        [var_1669304271982_285.var_1669304271982_288, [(), var_1669304271982_253, var_1669304271982_253, var_1669304271982_253, (), (), var_1669304271982_253, (), (), ()][6], var_1669304271982_307, (var_1669304271982_311 *= var_1669304271982_311), [var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_253, (), var_1669304271982_253, (), var_1669304271982_307][3], match (var_1669304271982_276) {
            case caseVar_1669304271982_333 => 
                UInt8(238) + var_1669304271982_311;
                var_1669304271982_340 /= Float32((Int32(Float32(-47.0))) | 1)
            
            case _ : Array<Unit> => 
                var_1669304271982_347;
                ();
                var_1669304271982_351
            
            case _ => 
                ()
            
        }, match (Int16(-94)) {
            case 71 | 58 | 125 | -25 => 
                [(), (), (), (), (), (), (), (), (), ()];
                ()
            
            case _ => 
                let var_1669304271982_367 : UInt64 = UInt64(213);
                ((var_1669304271982_367&127)..(var_1669304271982_367&127):((var_1669304271982_208|1)));
                var_1669304271982_307
            
        }, for (i in loopTimeVar_1669304271982_375 where var_1669304271982_55) {

        }, if (false) { // block id: 389
            Option<Option<UInt32>>.Some(var_1669304271982_392);
            UInt16(93);
            ()
        }, match (var_1669304271982_276) {
            case caseVar_1669304271982_401 : Int64 => 
                var_1669304271982_311++
            
            case _ => 
                ()
            
            case _ => 
                var_1669304271982_307
            
            case caseVar_1669304271982_415 : Int16 => 
                var_1669304271982_311 &= UInt8(1)
            
            case _ => 
                var_1669304271982_424 ||= var_1669304271982_55
            
        }][1]
    }

}

public open class Class_1669304271982_117 <: Interface_1669304271982_120 & Interface_1669304271982_122<Float64, Option<Array<Bool>>> {
    public init() { // block id: 119

    }
;
    public func func_1669304271982_215(namedParam_1669304271982_216 ! : Array<Bool>) : Unit { // block id: 217
        ((var_1669304271982_230 ?? Option<UInt32>.Some(var_1669304271982_68)) ?? (UInt16(219), UInt32(114), ((UInt8(118)&127)..(UInt8(244)&127):((-124)|1)), var_1669304271982_241, false, ((20&127)..=((-23)&127):(99|1)))[1]) + ((Option<Option<UInt32>>.None ?? Option<UInt32>.Some(var_1669304271982_68)) ?? match (var_1669304271982_253) {
            case () | () | () | () => 
                [UInt64(215), UInt64(1), UInt64(60), UInt64(136), UInt64(177), UInt64(158), UInt64(100), UInt64(33), UInt64(135), UInt64(183)];
                ();
                UInt32(187)
            
            case () => 
                ((UInt32(228)&127)..(UInt32(126)&127):(14|1));
                var_1669304271982_68
            
            case _ => 
                if (var_1669304271982_270) { Option<UInt32>.Some(UInt32(202)) } else { var_1669304271982_276 } ;
                ();
                var_1669304271982_68
            
        });
        var loopTimeVar_1669304271982_375 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()];
        [var_1669304271982_285.var_1669304271982_288, [(), var_1669304271982_253, var_1669304271982_253, var_1669304271982_253, (), (), var_1669304271982_253, (), (), ()][6], var_1669304271982_307, (var_1669304271982_311 *= var_1669304271982_311), [var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_307, var_1669304271982_253, var_1669304271982_253, (), var_1669304271982_253, (), var_1669304271982_307][3], match (var_1669304271982_276) {
            case caseVar_1669304271982_333 => 
                UInt8(238) + var_1669304271982_311;
                var_1669304271982_340 /= Float32((Int32(Float32(-47.0))) | 1)
            
            case _ : Array<Unit> => 
                var_1669304271982_347;
                ();
                var_1669304271982_351
            
            case _ => 
                ()
            
        }, match (Int16(-94)) {
            case 71 | 58 | 125 | -25 => 
                [(), (), (), (), (), (), (), (), (), ()];
                ()
            
            case _ => 
                let var_1669304271982_367 : UInt64 = UInt64(213);
                ((var_1669304271982_367&127)..(var_1669304271982_367&127):((var_1669304271982_208|1)));
                var_1669304271982_307
            
        }, for (i in loopTimeVar_1669304271982_375 where var_1669304271982_55) {

        }, if (false) { // block id: 389
            Option<Option<UInt32>>.Some(var_1669304271982_392);
            UInt16(93);
            ()
        }, match (var_1669304271982_276) {
            case caseVar_1669304271982_401 : Int64 => 
                var_1669304271982_311++
            
            case _ => 
                ()
            
            case _ => 
                var_1669304271982_307
            
            case caseVar_1669304271982_415 : Int16 => 
                var_1669304271982_311 &= UInt8(1)
            
            case _ => 
                var_1669304271982_424 ||= var_1669304271982_55
            
        }][1]
    }

}






public func func_1669304271982_438(param_1669304271982_439 : Range<UInt8>) : Array<Bool> { // block id: 440
    var var_1669304271982_449 : Bool = false;
    let var_1669304271982_452 : Option<Bool> = (UInt64(UInt32(201)) as Bool);
    if ((if (var_1669304271982_449) { var_1669304271982_452 } else { Option<Bool>.None }  ?? (Option<Bool>.Some(var_1669304271982_449) ?? var_1669304271982_424))) { // block id: 465
        Struct_1669304271982_7.var_1669304271982_469
    } else { // block id: 471
        let var_1669304271982_476 : Array<UInt64> = [UInt64(UInt16(120)), UInt64(140), UInt64(79), UInt64(122), UInt64(Int32(UInt32(UInt8(143)))), UInt64(UInt16(166)), UInt64(UInt8(Int8(-20))), UInt64(Int64(UInt16(21))), UInt64(Int16(Int8(UInt8(132)))), UInt64(UInt8(212))];
        (var_1669304271982_476, var_1669304271982_502, var_1669304271982_424, var_1669304271982_506)[2]
    };
    let var_1669304271982_555 : UInt16 = UInt16(166);
    var var_1669304271982_559 : Int64 = 54;
    (match (Option<UInt32>.None) {
        case caseVar_1669304271982_518 : Option<Option<UInt32>> => 
            if (var_1669304271982_347) { "qR$qx]zxf?" } else { "/p3hE~tl*`" } ;
            Option<Array<Bool>>.None
        
        case _ => 
            var_1669304271982_529 %= ((var_1669304271982_529) | 1);
            var_1669304271982_533
        
    } ?? match (try { // block id: 537
        var_1669304271982_230;
        ();
        if (true) { Option<UInt32>.None } else { Option<UInt32>.Some(var_1669304271982_68) } 
    } finally { // block id: 545
        ();
        Enum_1669304271982_90.defaultValue;
        var_1669304271982_276
    }) {
        case _ => 
            if (var_1669304271982_270) { ((var_1669304271982_555&127)..(UInt16(100)&127):((var_1669304271982_559|1))) } else { var_1669304271982_562 } ;
            var_1669304271982_253;
            [false, true, true, false, false, false, true, true, true, false]
        
    })
}


func func_1669304271982_429<T0>(param_1669304271982_430 : Range<UInt64>) : Array<Bool> { // block id: 431
    var loopTimeVar_1669304271982_436 : Int64 = 0;
    do {
        loopTimeVar_1669304271982_436++;

    } while ((true) && loopTimeVar_1669304271982_436 < 100 ) ;
    ((((Int8(-98)&127)..(Int8(-92)&127):(117|1)) as Range<UInt8>) ?? ((UInt8(152)&127)..(UInt8(7)&127):(98|1)))|>func_1669304271982_438
}





public func func_1669304271982_11<T0, T1>(param_1669304271982_12 : Int64, optionalParam_1669304271982_13 ! : Float64 = 47.0, namedParam_1669304271982_15 ! : Struct_1669304271982_7) : Struct_1669304271982_7 where T0 <: Class_1669304271982_117 & Interface_1669304271982_120 { // block id: 16
    var var_1669304271982_31 : Array<Bool> = [(UInt16(208) is UInt8), true, (Int32(-37) is Range<Int64>), (Int8(Int8(UInt8(250))) is Int16), true, false, ([UInt64(232), UInt64(148), UInt64(71), UInt64(161), UInt64(6), UInt64(218), UInt64(176), UInt64(251), UInt64(79), UInt64(192)] is UInt64), false, false, false];
    let var_1669304271982_60 : Unit = ();
    let var_1669304271982_95 : Enum_1669304271982_90 = Enum_1669304271982_90.defaultValue;
    let var_1669304271982_141 : Range<Int64> = ((33&127)..=((-70)&127):((44|1)));
    func func_1669304271982_125(optionalParam_1669304271982_126 ! : Int16 = Int16(-71), optionalParam_1669304271982_128 ! : Range<Int64> = ((Int64(UInt32(Int8(Int8(54))))&127)..=((-15)&127):(((-17)|1))), namedParam_1669304271982_136 ! : Unit, namedParam_1669304271982_137 ! : Range<UInt16>) : Class_1669304271982_117 { // block id: 138
        var var_1669304271982_151 : Int16 = Int16(UInt8(Int8(UInt8(120))));
        match (var_1669304271982_141) {
            case caseVar_1669304271982_148 => 
                var_1669304271982_151;
                Class_1669304271982_117()
            
            case _ => 
                ();
                let var_1669304271982_162 : Class_1669304271982_117 = Class_1669304271982_117();
                var_1669304271982_162
            
            case _ => 
                var_1669304271982_95;
                ((Int32(33)&127)..(Int32(-96)&127):((-78)|1));
                var var_1669304271982_169 : Class_1669304271982_117 = Class_1669304271982_117();
                var_1669304271982_169
            
        }
    }
;
    let var_1669304271982_580 : (Range<UInt64>) -> Array<Bool> = func_1669304271982_429<UInt8>;
    func func_1669304271982_81(param_1669304271982_82 : Int64, param_1669304271982_83 : Int32, namedParam_1669304271982_84 ! : Int64, namedParam_1669304271982_85 ! : Bool) : Unit { // block id: 86
        match (if (var_1669304271982_55) { var_1669304271982_95 } else { Enum_1669304271982_90.defaultValue } ) {
            case defaultValue => 
                [(), var_1669304271982_60, (), (), (), var_1669304271982_60, (), (), (), ()]
            
            case _ => 
                [(), (), (), (), (), (), (), (), (), ()]
            
        }[4];
        var var_1669304271982_203 : UInt16 = UInt16(Int8(-47));
        func_1669304271982_125(optionalParam_1669304271982_128 : try { // block id: 172
            UInt32(250);
            ((var_1669304271982_176&127)..((-13)&127):(((-51)|1)))
        } catch (_) { // block id: 182
            (((-42)&127)..=((-57)&127):((-126)|1))
        }, namedParam_1669304271982_136 : var_1669304271982_186[4], namedParam_1669304271982_137 : if (false) { ((var_1669304271982_203&127)..(var_1669304271982_203&127):((var_1669304271982_208|1))) } else { ((UInt16(174)&127)..(var_1669304271982_203&127):(((-97)|1))) } ).func_1669304271982_215(namedParam_1669304271982_216 : (((UInt64(183)&127)..(var_1669304271982_529&127):((var_1669304271982_208|1)))|>var_1669304271982_580))
    }
;
    if (if (var_1669304271982_31[4]) { // block id: 50
        Float32(36.0);
        ();
        false
    } else if (var_1669304271982_55) { // block id: 58
        var_1669304271982_60;
        var_1669304271982_60;
        var_1669304271982_55
    } else { // block id: 64
        UInt32(46) <= var_1669304271982_68
    }) { // block id: 70
        try { // block id: 72
            -UInt64(127);
            ();
            ()
        } catch (e: Exception) { // block id: 77
            var_1669304271982_60;
            ()
        };
        var var_1669304271982_588 : Int32 = Int32(-27);
        func_1669304271982_81(var_1669304271982_208, var_1669304271982_588, namedParam_1669304271982_84 : 19, namedParam_1669304271982_85 : var_1669304271982_55)
    } else if (if (!true) { // block id: 595
        var_1669304271982_60;
        UInt8(149) >= var_1669304271982_311
    } else { // block id: 600
        var_1669304271982_602;
        var_1669304271982_307;
        var_1669304271982_55
    }) { // block id: 607
        var loopTimeVar_1669304271982_611 : Range<UInt64> = ((UInt64(182)&127)..=(UInt64(68)&127):(((-127)|1)));
        for (i in loopTimeVar_1669304271982_611 where var_1669304271982_270) {

        }
    };
    Class_1669304271982_117.func_1669304271982_619((Option<Struct_1669304271982_7>.Some(var_1669304271982_285) ?? var_1669304271982_285), namedParam_1669304271982_621 : try { // block id: 632
        UInt32(87)
    } finally { // block id: 634
        ();
        var_1669304271982_68
    });
    if ((Struct_1669304271982_7.func_1669304271982_641<Range<UInt64>, Array<Bool>, Range<UInt32>>(namedParam_1669304271982_642 : Option<Array<Bool>>.Some([true, true, true, true, false, false, true, false, false, true]), optionalParam_1669304271982_647 : UInt32(223)))) { (var_1669304271982_972 ?? (((Int8(4)&127)..=(Int8(-78)&127):(90|1)), var_1669304271982_977, ((UInt16(56)&127)..(UInt16(3)&127):((-114)|1)), var_1669304271982_285, [(), (), (), (), (), (), (), (), (), ()], [(), (), (), (), (), (), (), (), (), ()], ((var_1669304271982_529&127)..(UInt64(221)&127):((var_1669304271982_176|1)))))[3] } else { var_1669304271982_999 } 
}

main(): Int64 {
    try {
        func_1669304271982_11<Class_1669304271982_117, Option<UInt32>>(64, namedParam_1669304271982_15 : var_1669304271982_285).var_1669304271982_1004;
        ();
        try { // block id: 1012
            var var_1669304271982_1015 : Int32 = Int32(12);
            var_1669304271982_1015--;
            var_1669304271982_176 | 82
        } finally { // block id: 1020
            var_1669304271982_808;
            20 ^ 6
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1669304271982_68*var_1669304271982_68), 64)
        crccheck.updateBuffer(UInt64(var_1669304271982_311*var_1669304271982_311), 64)
        crccheck.updateBuffer(UInt64(var_1669304271982_529*var_1669304271982_529), 64)
        crccheck.updateBuffer(UInt64(var_1669304271982_602*var_1669304271982_602), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1669304271982_117 {
    public static func func_1669304271982_619(param_1669304271982_620 : Struct_1669304271982_7, namedParam_1669304271982_621 ! : UInt32) : Unit { // block id: 622

    }

}

extend Enum_1669304271982_90 {

}

