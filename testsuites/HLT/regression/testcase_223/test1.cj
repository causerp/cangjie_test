/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public let var_1669296677372_26 : Int64 = 77
public var var_1669296677372_51 : Class_1669296677372_12 = Class_1669296677372_12()
public var var_1669296677372_149 : Interface_1669296677372_17 = Class_1669296677372_12()
public var var_1669296677372_171 : Int32 = Int32(Int8(-89))
public var var_1669296677372_222 : Int16 = Int16(Int8(UInt8(Int8(-62))))
public var var_1669296677372_231 : Bool = (UInt8(222) is Interface_1669296677372_205<UInt64>)
public var var_1669296677372_258 : Array<Class_1669296677372_12> = [Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12()]
public var var_1669296677372_463 : Interface_1669296677372_205<UInt64> = Class_1669296677372_200<UInt8>()
public var var_1669296677372_606 : Range<Int32> = ((Int32(-24)&127)..(Int32(0)&127):((-122)|1))
public var var_1669296677372_622 : UInt32 = UInt32(UInt32(Int8(UInt8(143))))
public let var_1669296677372_640 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.defaultValue
public var var_1669296677372_646 : UInt64 = UInt64(UInt64(180))
public var var_1669296677372_673 : Option<Range<UInt16>> = Option<Range<UInt16>>.None
public let var_1669296677372_677 : UInt16 = UInt16(UInt8(Int8(79)))
public let var_1669296677372_686 : Interface_1669296677372_18 = Class_1669296677372_200<UInt8>()
public var var_1669296677372_693 : Unit = ()
let var_1669296677372_727 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.defaultValue
let var_1669296677372_730 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.defaultValue
public let var_1669296677372_738 : Range<UInt32> = ((UInt32(133)&127)..(UInt32(202)&127):((-114)|1))
public var var_1669296677372_754 : Range<Int32> = ((Int32(-31)&127)..(Int32(7)&127):(98|1))
public let var_1669296677372_768 : Float64 = Float64((-60.0))
public var var_1669296677372_797 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699
public let var_1669296677372_811 : Array<Enum_1669296677372_79<Option<Unit>>> = [Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374]
public var var_1669296677372_828 : Int8 = Int8(117)
public var var_1669296677372_865 : Interface_1669296677372_16 = Class_1669296677372_12()
public var var_1669296677372_876 : (Float32, Option<Unit>) = (Float32(122.0), Option<Unit>.None)
let var_1669296677372_888 : String = "\\Na{2V|0FJ+"
public let var_1669296677372_901 : Int64 = (-78)
public let var_1669296677372_916 : Range<UInt8> = ((UInt8(215)&127)..=(UInt8(171)&127):(24|1))
public let var_1669296677372_922 : Interface_1669296677372_17 = Class_1669296677372_12()
let var_1669296677372_962 : (Range<Int16>, Array<Rune>, Unit, Rune, Bool) = (((Int16(UInt16(Int16(-26)))&127)..(Int16(UInt16(Int8(93)))&127):((Int64(Int8(92))|1))), [r'2', r'r', r'n', r'M', r'T', r'q', r'4', r'X', r'0', r'0'], (), r'X', (Class_1669296677372_12() is Array<Enum_1669296677372_79<Option<Unit>>>))
public let var_1669296677372_994 : Rune = r'8'
public var var_1669296677372_1000 : Rune = r'3'
public var var_1669296677372_1009 : Enum_1669296677372_117 = Enum_1669296677372_117.defaultValue
public var var_1669296677372_1040 : Range<Int64> = ((7&127)..(Int64(Int32(70))&127):((Int64(Int8(UInt8(UInt8(47))))|1)))
public var var_1669296677372_1086 : Int64 = Int64(UInt64(6))
public let var_1669296677372_1096 : Range<Int8> = ((Int8(121)&127)..=(Int8(UInt8(UInt8(167)))&127):(((-26)|1)))
public var var_1669296677372_1125 : UInt16 = UInt16(197)
public let var_1669296677372_1134 : Unit = ()
let var_1669296677372_1141 : Unit = ()
public var var_1669296677372_1145 : Bool = false
public var var_1669296677372_1180 : Range<Int8> = ((Int8(-32)&127)..=(Int8(-72)&127):(50|1))
public var var_1669296677372_1212 : (Range<UInt8>, Unit, Bool) = (((UInt8(245)&127)..=(UInt8(6)&127):(54|1)), (), true)
let var_1669296677372_1218 : (Range<UInt8>, Unit, Bool) = (((UInt8(Int8(32))&127)..(UInt8(162)&127):((Int64(UInt8(UInt8(242)))|1))), (), true)
public let var_1669296677372_1250 : (Range<Int16>, Range<Int8>, UInt16) = (((Int16(-106)&127)..(Int16(25)&127):((56|1))), ((Int8(7)&127)..=(Int8(-6)&127):((-96)|1)), UInt16(25))
public var var_1669296677372_1262 : ?Unit = (Class_1669296677372_200<UInt8>() as Unit)
public var var_1669296677372_1291 : Unit = ()
public let var_1669296677372_1319 : (Int8, Range<UInt8>, Range<UInt64>, Array<Rune>, Unit) = (Int8(-97), ((UInt8(102)&127)..(UInt8(UInt8(Int8(60)))&127):((Int64(UInt32(208))|1))), ((UInt64(UInt8(Int8(-41)))&127)..(UInt64(250)&127):((27|1))), [r'N', r'x', r'z', r'Y', r'4', r'6', r'Z', r'L', r'H', r'r'], ())
public let var_1669296677372_1356 : Int64 = Int64(Int16(-24))
public var var_1669296677372_1379 : ?Class_1669296677372_12 = Option<Class_1669296677372_12>.None
public var var_1669296677372_1386 : Array<Bool> = [(UInt8(UInt8(154)) is Range<Int64>), (Class_1669296677372_200<UInt8>() is Range<UInt64>), false, false, (((UInt32(Int8(80))&127)..(UInt32(192)&127):((Int64(UInt8(239))|1))) is Rune), (Float32(Float32(Float32(115.0))) is (Float32) -> Unit), (((106&127)..=((-90)&127):((-108)|1)) is Range<Int32>), true, (Class_1669296677372_200<UInt8>() is Bool), true]
public let var_1669296677372_1437 : Class_1669296677372_12 = Class_1669296677372_12()
public let var_1669296677372_1441 : Class_1669296677372_12 = Class_1669296677372_12()
public interface Interface_1669296677372_15 {
    func func_1669296677372_868(param_1669296677372_869 : Unit, namedParam_1669296677372_870 ! : Int64, namedParam_1669296677372_871 ! : Interface_1669296677372_17) : Unit { // block id: 872
        var_1669296677372_876[1];
        ()
    }

}

public interface Interface_1669296677372_18 {

}

public interface Interface_1669296677372_17 <: Interface_1669296677372_18 {

}

public interface Interface_1669296677372_16 <: Interface_1669296677372_17 {

}

public open class Class_1669296677372_12 <: Interface_1669296677372_15 & Interface_1669296677372_16 {
    public init() { // block id: 14

    }
;
    public prop var_1669296677372_74 : Unit { // block id: 75
        get() { // block id: 77

        }

    };
    public static var var_1669296677372_284 : Int32 = Int32(103);
    public init(namedParam_1669296677372_1115 ! : UInt16) { // block id: 1116
        var loopTimeVar_1669296677372_1129 : Int64 = 0;
        var var_1669296677372_1150 : UInt32 = UInt32(31);
        var loopTimeVar_1669296677372_1155 : Int64 = 0;
        var loopTimeVar_1669296677372_1160 : Int64 = 0;
        var loopTimeVar_1669296677372_1177 : Int64 = 0;
        [while ((true) && loopTimeVar_1669296677372_1129 < 100 ) {
            loopTimeVar_1669296677372_1129++;
            var_1669296677372_1125 += var_1669296677372_1125
        }, if (false) { // block id: 1132
            var_1669296677372_1134;
            ()
        } else if (true) { // block id: 1138
            var_1669296677372_149;
            var_1669296677372_1141
        }, do {
            loopTimeVar_1669296677372_1155++;
            var_1669296677372_1150 %= ((UInt32(159)) | 1);
            Int16(-125)
        } while ((var_1669296677372_1145) && loopTimeVar_1669296677372_1155 < 100 ) , do {
            loopTimeVar_1669296677372_1160++;

        } while ((false) && loopTimeVar_1669296677372_1160 < 100 ) , if (false) { // block id: 1163
            var_1669296677372_646;
            var_1669296677372_1134
        } else if (var_1669296677372_1145) { // block id: 1167

        }, if (var_1669296677372_231) { // block id: 1170

        }, while ((true) && loopTimeVar_1669296677372_1177 < 100 ) {
            loopTimeVar_1669296677372_1177++;
            var_1669296677372_865;
            var_1669296677372_693
        }, match (var_1669296677372_1180) {
            case _ => 
                [Class_1669296677372_12(), var_1669296677372_51, Class_1669296677372_12(), var_1669296677372_51, var_1669296677372_51, Class_1669296677372_12(), var_1669296677372_51, Class_1669296677372_12(), var_1669296677372_51, Class_1669296677372_12()];
                let var_1669296677372_1196 : Unit = ();
                var_1669296677372_1196
            
        }, ((), var_1669296677372_901)[0], var_1669296677372_1141][6];
        var var_1669296677372_1232 : ?Range<Int8> = Option<Range<Int8>>.Some(((Int8(-124)&127)..(Int8(-100)&127):((-49)|1)));
        if (if (false) { var_1669296677372_1212 } else { var_1669296677372_1218 } [2]) { match (var_1669296677372_1232) {
            case caseVar_1669296677372_1237 : Range<Int8> => 
                var_1669296677372_646;
                ((UInt64(21)&127)..=(var_1669296677372_646&127):(((-24)|1)));
                Option<Unit>.None
            
            case caseVar_1669296677372_1247 : Option<Range<UInt16>> => 
                var_1669296677372_1250;
                var_1669296677372_222 -= var_1669296677372_222;
                var_1669296677372_1262
            
            case _ => 
                if (false) { r'A' } else { r'5' } ;
                Option<Unit>.Some(())
            
        } } else { Option<Unit>.None } ;
        let var_1669296677372_1360 : Array<Rune> = [r'Y', r'S', r'l', r'L', r'5', r'l', r'E', r'j', r'3', r'E'];
        match (var_1669296677372_738) {
            case caseVar_1669296677372_1280 => 
                (Int8(118), var_1669296677372_916, ((UInt64(27)&127)..(UInt64(114)&127):((var_1669296677372_1086|1))), [r'u', r'C', r't', r'w', r'k', r'5', r'p', r'j', r'c', r'p'], var_1669296677372_1291)
            
            case caseVar_1669296677372_1295 : UInt8 => 
                if (false) { (((UInt8(160)&127)..(UInt8(229)&127):(69|1)), (), false) } else { var_1669296677372_1212 } ;
                (Int8(-98), var_1669296677372_916, ((UInt64(153)&127)..(UInt64(241)&127):(107|1)), [r'V', r'u', r'x', r'Y', r's', r'g', r'f', r'E', r'g', r'O'], var_1669296677372_1291)
            
            case caseVar_1669296677372_1312 : Range<UInt16> => 
                var var_1669296677372_1315 : Interface_1669296677372_15 = Class_1669296677372_12();
                var_1669296677372_1315;
                var_1669296677372_811;
                var_1669296677372_1319
            
            case _ => 
                if (true) { Class_1669296677372_12() } else { Class_1669296677372_12() } ;
                var_1669296677372_622 * var_1669296677372_1150;
                if (true) { var_1669296677372_1319 } else { (var_1669296677372_828, ((UInt8(84)&127)..(UInt8(10)&127):((-22)|1)), ((UInt64(48)&127)..=(UInt64(100)&127):((var_1669296677372_1356|1))), var_1669296677372_1360, var_1669296677372_693) } 
            
        }[4]
    }

}

public enum Enum_1669296677372_79<T0> {
    defaultValue |
    enumValue_1669296677372_332(Class_1669296677372_200<UInt8>, Array<UInt64>, Range<Int32>) |
    enumValue_1669296677372_356(Enum_1669296677372_117, (Int16) -> Bool, Range<UInt32>, Unit) |
    enumValue_1669296677372_374 |
    enumValue_1669296677372_699
}
public enum Enum_1669296677372_117 {
    defaultValue |
    enumValue_1669296677372_122(Interface_1669296677372_18, Float64)
}
public interface Interface_1669296677372_203 {

}

public interface Interface_1669296677372_206 <: Interface_1669296677372_203 {

}

public interface Interface_1669296677372_205<T0> <: Interface_1669296677372_17 & Interface_1669296677372_206 {

}

public interface Interface_1669296677372_204 <: Interface_1669296677372_205<UInt64> {

}

public open class Class_1669296677372_200<T0> <: Interface_1669296677372_203 & Interface_1669296677372_204 & Resource {
    public init() { // block id: 202

    }
;
    static let var_1669296677372_209 : Bool = false
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public func func_1669296677372_196(param_1669296677372_197 : Int16) : Bool { // block id: 198
    Class_1669296677372_200<UInt8>.var_1669296677372_209
}


public func func_1669296677372_275<T0>() : Array<Enum_1669296677372_79<Option<Unit>>> { // block id: 276
    var var_1669296677372_310 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.defaultValue;
    let var_1669296677372_323 : Array<Enum_1669296677372_79<Option<Unit>>> = [Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(33), UInt64(217), UInt64(9), UInt64(UInt32(8)), UInt64(153), UInt64(96), UInt64(238), UInt64(0), UInt64(253), UInt64(230)], ((Int32(Int8(-102))&127)..(Int32(-95)&127):((117|1)))), Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.enumValue_1669296677372_122(Class_1669296677372_200<UInt8>(), 16.0), { lambdaParameter_1669296677372_368 : Int16 => true }, ((UInt32(94)&127)..(UInt32(130)&127):(94|1)), ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374];
    if ((Int32(UInt32(40)) != (Class_1669296677372_12.var_1669296677372_284))) { match (Int32(49) & Int32(-38)) {
        case _ => 
            Class_1669296677372_200<UInt8>();
            let var_1669296677372_294 : Array<Enum_1669296677372_79<Option<Unit>>> = [Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue];
            var_1669296677372_294
        
    } } else { try { // block id: 307
        [var_1669296677372_310, var_1669296677372_310, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, var_1669296677372_310, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, var_1669296677372_310, var_1669296677372_310, var_1669296677372_310]
    } catch (e: Exception) { // block id: 321
        var_1669296677372_323
    } } 
}


public func func_1669296677372_377(param_1669296677372_378 : Interface_1669296677372_205<UInt64>) : Unit { // block id: 379
    let var_1669296677372_386 : ?Unit = Option<Unit>.Some(());
    var var_1669296677372_406 : Bool = false;
    let var_1669296677372_409 : Interface_1669296677372_203 = Class_1669296677372_200<UInt8>();
    (var_1669296677372_386 ?? try (resource = Class_1669296677372_200<UInt8>()) { // block id: 390
        var var_1669296677372_392 : Unit = ();
        var_1669296677372_392;
        var var_1669296677372_396 : UInt32 = UInt32(Int32(-43));
        var_1669296677372_396--
    } catch (_) { // block id: 399
        if (false) { ((UInt32(164)&127)..(UInt32(164)&127):(50|1)) } else { ((UInt32(87)&127)..=(UInt32(1)&127):(75|1)) } ;
        if (var_1669296677372_406) { var_1669296677372_409 } else { Class_1669296677372_200<UInt8>() } ;
        ()
    });
    var var_1669296677372_419 : Int16 = Int16(UInt16(207));
    var var_1669296677372_434 : (Range<Int16>, Range<Int8>, UInt16) = (((Int16(16)&127)..(Int16(2)&127):(110|1)), ((Int8(UInt8(Int8(90)))&127)..=(Int8(124)&127):(((-24)|1))), UInt16(Int16(-3)));
    match ((((var_1669296677372_419&127)..(Int16(-90)&127):((var_1669296677372_26|1))), ((Int8(55)&127)..=(Int8(-58)&127):(((-87)|1))), UInt16(139))[1]) {
        case _ => 
            var_1669296677372_434;
            Option<Range<Int8>>.Some(((Int8(-108)&127)..=(Int8(106)&127):(64|1)));
            var var_1669296677372_449 : UInt32 = UInt32(Int16(-25));
            var_1669296677372_449 |= UInt32(152)
        
        case _ => 
            if (false) { Class_1669296677372_200<UInt8>() } else { Class_1669296677372_200<UInt8>() } ;
            ()
        
    }
}

public func func_1669296677372_252(param_1669296677372_253 : Range<UInt16>) : Array<Enum_1669296677372_79<Option<Unit>>> { // block id: 254
    var_1669296677372_258[5];
    ();
    var var_1669296677372_468 : Interface_1669296677372_18 = Class_1669296677372_200<UInt8>();
    var var_1669296677372_618 : (Int16) -> Bool = func_1669296677372_196;
    var var_1669296677372_653 : UInt64 = UInt64(Int16(Int8(UInt8(UInt8(200)))));
    try { // block id: 273
        func_1669296677372_275<Option<(Range<Int16>, Array<Rune>, Unit, Rune, Bool)>>()
    } finally { // block id: 375
        var_1669296677372_463|>func_1669296677372_377;
        var var_1669296677372_596 : Interface_1669296677372_15 = Class_1669296677372_12();
        match (Enum_1669296677372_117.enumValue_1669296677372_122(var_1669296677372_468, (-106.0))) {
            case enumValue_1669296677372_122(caseVar_1669296677372_473 : Range<Int32>, caseVar_1669296677372_474 : Range<Int16>) => 
                Option<Unit>.Some(());
                let var_1669296677372_479 : Array<Enum_1669296677372_79<Option<Unit>>> = [Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.defaultValue, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(Int16(28)), UInt64(UInt64(161)), UInt64(Int8(-69)), UInt64(194), UInt64((-123)), UInt64(28), UInt64(45), UInt64(UInt8(130)), UInt64(UInt16(203)), UInt64(Int32(24))], ((Int32(Int16(69))&127)..=(Int32(UInt16(252))&127):((Int64(Int32(101))|1)))), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.enumValue_1669296677372_122(Class_1669296677372_200<UInt8>(), Float64(Float32(-108.0))), func_1669296677372_196, ((UInt32(UInt32(32))&127)..(UInt32(UInt16(64))&127):((89|1))), ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.defaultValue, func_1669296677372_196, ((UInt32(Int8(123))&127)..(UInt32(UInt16(126))&127):((74|1))), ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.defaultValue, func_1669296677372_196, ((UInt32(176)&127)..=(UInt32(111)&127):(77|1)), ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(UInt8(178)), UInt64(11), UInt64(Int16(-29)), UInt64(Int8(-34)), UInt64(234), UInt64(UInt32(51)), UInt64(177), UInt64(221), UInt64(30), UInt64(227)], ((Int32(12)&127)..=(Int32(UInt32(90))&127):((Int64(UInt16(5))|1)))), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(96), UInt64(UInt8(132)), UInt64(141), UInt64(8), UInt64(Int16(-42)), UInt64(48), UInt64(Int16(121)), UInt64((-95)), UInt64(88), UInt64(UInt8(12))], ((Int32(-74)&127)..=(Int32(UInt32(173))&127):((72|1)))), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374, Enum_1669296677372_79<Option<Unit>>.defaultValue];
                var_1669296677372_479
            
            case _ => 
                if (false) { Class_1669296677372_12() } else { var_1669296677372_596 } ;
                ((Int8(-28)&127)..=(Int8(-128)&127):(82|1));
                var var_1669296677372_602 : Class_1669296677372_200<UInt8> = Class_1669296677372_200<UInt8>();
                var var_1669296677372_609 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374;
                let var_1669296677372_615 : Enum_1669296677372_117 = Enum_1669296677372_117.defaultValue;
                let var_1669296677372_629 : Int64 = Int64(Int32(Int8(UInt8(5))));
                var var_1669296677372_635 : Unit = ();
                [Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(var_1669296677372_602, [UInt64(210), UInt64(29), UInt64(26), UInt64(206), UInt64(218), UInt64(175), UInt64(125), UInt64(227), UInt64(77), UInt64(95)], var_1669296677372_606), var_1669296677372_609, var_1669296677372_609, var_1669296677372_609, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(var_1669296677372_615, var_1669296677372_618, ((var_1669296677372_622&127)..=(UInt32(109)&127):((var_1669296677372_629|1))), var_1669296677372_635), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374, var_1669296677372_609, var_1669296677372_640, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [var_1669296677372_646, var_1669296677372_646, var_1669296677372_646, UInt64(81), var_1669296677372_653, UInt64(248), var_1669296677372_653, var_1669296677372_646, var_1669296677372_653, var_1669296677372_646], ((Int32(-16)&127)..=(Int32(117)&127):((-59)|1))), var_1669296677372_609]
            
        }
    }
}


func func_1669296677372_190(param_1669296677372_191 : Interface_1669296677372_18) : Enum_1669296677372_79<Option<Unit>> { // block id: 192
    var var_1669296677372_212 : (Int16) -> Bool = { lambdaParameter_1669296677372_215 : Int16 => (Int64(Int64(UInt8(193))) is Interface_1669296677372_17) };
    var loopTimeVar_1669296677372_249 : Int64 = 0;
    while ((if ((var_1669296677372_222|>var_1669296677372_212)) { // block id: 227
        false
    } else { // block id: 229
        var_1669296677372_231
    }) && loopTimeVar_1669296677372_249 < 100 ) {
        loopTimeVar_1669296677372_249++;
        (Option<Range<Int8>>.Some(((Int8(-113)&127)..(Int8(113)&127):(23|1))) ?? ((Int8(97)&127)..(Int8(-100)&127):(101|1)));
        Option<Range<Int8>>.Some(((Int8(46)&127)..=(Int8(-97)&127):((10|1))))
    };
    ((var_1669296677372_673 ?? ((var_1669296677372_677&127)..(var_1669296677372_677&127):((98|1))))|>func_1669296677372_252)[5]
}


public func func_1669296677372_108(optionalParam_1669296677372_109 ! : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.defaultValue, optionalParam_1669296677372_111 ! : Interface_1669296677372_16 = Class_1669296677372_12()) : Class_1669296677372_12 { // block id: 113
    let var_1669296677372_120 : Enum_1669296677372_117 = Enum_1669296677372_117.enumValue_1669296677372_122(Class_1669296677372_12(), Float64(Float32(Float32(Float32(37.0)))));
    var var_1669296677372_135 : Bool = true;
    if ((match (var_1669296677372_120) {
        case enumValue_1669296677372_122(_, _) => 
            if (var_1669296677372_135) { Enum_1669296677372_117.enumValue_1669296677372_122(Class_1669296677372_12(), 99.0) } else { var_1669296677372_120 } ;
            Class_1669296677372_12()
        
        case caseVar_1669296677372_144 => 
            if (var_1669296677372_135) { var_1669296677372_149 } else { Class_1669296677372_12() } 
        
        case _ : Interface_1669296677372_18 => 
            if (var_1669296677372_135) { var_1669296677372_149 } else { var_1669296677372_149 } 
        
        case enumValue_1669296677372_122(_, _) => 
            Class_1669296677372_12()
        
        case _ => 
            if (false) { Class_1669296677372_12() } else { Class_1669296677372_12() } ;
            var_1669296677372_171 >>= ((var_1669296677372_171) & 7);
            Class_1669296677372_12()
        
    } is Int16)) { // block id: 176

    };
    var var_1669296677372_707 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699;
    var var_1669296677372_718 : UInt64 = UInt64(40);
    let var_1669296677372_790 : (Int16) -> Bool = func_1669296677372_196;
    match ((var_1669296677372_686|>func_1669296677372_190)) {
        case caseVar_1669296677372_690 : Interface_1669296677372_16 => 
            var_1669296677372_693;
            ((UInt32(57)&127)..(UInt32(206)&127):(14|1));
            var var_1669296677372_735 : (Int16) -> Bool = func_1669296677372_196;
            [var_1669296677372_640, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(var_1669296677372_120, func_1669296677372_196, ((UInt32(202)&127)..(UInt32(31)&127):((-88)|1)), ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374, var_1669296677372_707, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_374, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(244), UInt64(246), UInt64(244), UInt64(203), var_1669296677372_718, var_1669296677372_646, var_1669296677372_646, UInt64(57), var_1669296677372_718, UInt64(109)], var_1669296677372_606), var_1669296677372_727, var_1669296677372_730, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.defaultValue, var_1669296677372_735, var_1669296677372_738, ())]
        
        case defaultValue => 
            let var_1669296677372_746 : Enum_1669296677372_79<Option<Unit>> = Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699;
            var var_1669296677372_750 : Class_1669296677372_200<UInt8> = Class_1669296677372_200<UInt8>();
            var var_1669296677372_772 : (Int16) -> Bool = func_1669296677372_196;
            [var_1669296677372_746, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(var_1669296677372_750, [UInt64(72), UInt64(139), UInt64(105), UInt64(189), UInt64(155), UInt64(49), UInt64(235), UInt64(206), UInt64(207), UInt64(104)], var_1669296677372_754), var_1669296677372_730, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, var_1669296677372_746, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(var_1669296677372_120, func_1669296677372_196, var_1669296677372_738, var_1669296677372_693), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(Enum_1669296677372_117.enumValue_1669296677372_122(var_1669296677372_686, var_1669296677372_768), var_1669296677372_772, var_1669296677372_738, ()), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, Enum_1669296677372_79<Option<Unit>>.defaultValue]
        
        case _ => 
            ();
            if (true) { [var_1669296677372_727, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_356(var_1669296677372_120, var_1669296677372_790, ((UInt32(55)&127)..=(UInt32(206)&127):((-5)|1)), ()), var_1669296677372_707, var_1669296677372_727, var_1669296677372_797, var_1669296677372_640, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_332(Class_1669296677372_200<UInt8>(), [UInt64(151), UInt64(65), UInt64(79), UInt64(76), UInt64(64), UInt64(213), UInt64(26), UInt64(248), UInt64(247), UInt64(155)], ((Int32(-64)&127)..(Int32(-95)&127):((65|1)))), Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699, var_1669296677372_727, Enum_1669296677372_79<Option<Unit>>.enumValue_1669296677372_699] } else { var_1669296677372_811 } 
        
        case _ => 
            var_1669296677372_828 ^= var_1669296677372_828;
            var_1669296677372_811
        
        case _ => 
            var_1669296677372_693;
            var_1669296677372_811
        
    }[8];
    try { // block id: 838
        ((var_1669296677372_171&127)..(var_1669296677372_171&127):(((-117)|1)));
        Class_1669296677372_12()
    } finally { // block id: 845
        var var_1669296677372_848 : Int64 = Int64(Int32(124));
        var_1669296677372_848 <<= (((-47)) & 7);
        (Option<Class_1669296677372_12>.Some(Class_1669296677372_12()) ?? Class_1669296677372_12())
    }
}



public func func_1669296677372_104() : Unit { // block id: 105
    func_1669296677372_108(optionalParam_1669296677372_111 : match ((-60)) {
        case _ => 
            var_1669296677372_865
        
    }).func_1669296677372_868((var_1669296677372_222 >>= ((Int16(-126)) & 7)), namedParam_1669296677372_870 : try { // block id: 886
        var_1669296677372_888;
        var_1669296677372_828 |= Int8(-58);
        var_1669296677372_26
    } catch (_) { // block id: 894
        (-13)
    } finally { // block id: 896
        var_1669296677372_693;
        Option<Class_1669296677372_12>.Some(Class_1669296677372_12());
        var_1669296677372_901
    }, namedParam_1669296677372_871 : match (var_1669296677372_463) {
        case caseVar_1669296677372_907 : Interface_1669296677372_203 => 
            if (var_1669296677372_231) { var_1669296677372_149 } else { var_1669296677372_149 } 
        
        case _ => 
            var_1669296677372_916;
            if (var_1669296677372_231) { Class_1669296677372_12() } else { var_1669296677372_922 } 
        
    });
    let var_1669296677372_934 : Array<Rune> = [r'v', r'i', r'D', r'V', r'd', r'Z', r'B', r'R', r'X', r'X'];
    match ((Option<Rune>.None ?? var_1669296677372_934[7])) {
        case _ => 
            ()
        
    };
    let var_1669296677372_986 : Rune = r'q';
    let var_1669296677372_1053 : Range<Int16> = ((Int16(-125)&127)..(Int16(Int8(108))&127):((Int64(Int8(UInt8(Int8(-17))))|1)));
    if ((!var_1669296677372_231)) { (Option<(Range<Int16>, Array<Rune>, Unit, Rune, Bool)>.Some(var_1669296677372_962) ?? (((Int16(101)&127)..(var_1669296677372_222&127):(((-88)|1))), [r'5', var_1669296677372_986, var_1669296677372_986, r'4', var_1669296677372_986, r'Z', var_1669296677372_986, var_1669296677372_994, r'h', r'l'], var_1669296677372_693, var_1669296677372_1000, var_1669296677372_231)) } else { if (var_1669296677372_231) { // block id: 1005
        if (true) { var_1669296677372_1009 } else { Enum_1669296677372_117.enumValue_1669296677372_122(Class_1669296677372_12(), var_1669296677372_768) } ;
        var_1669296677372_962
    } else if (var_1669296677372_231) { // block id: 1016
        [var_1669296677372_994, var_1669296677372_1000, var_1669296677372_1000, var_1669296677372_994, r'K', var_1669296677372_986, r'i', r'o', var_1669296677372_986, r'K'];
        (((var_1669296677372_222&127)..(var_1669296677372_222&127):((var_1669296677372_26|1))), var_1669296677372_934, (), var_1669296677372_1000, false)
    } else { // block id: 1037
        ();
        var_1669296677372_1040;
        if (var_1669296677372_231) { (var_1669296677372_1053, [r'7', r'x', r'Z', r'j', r'q', r'e', r'e', r'c', r'G', r'W'], (), r'x', true) } else { var_1669296677372_962 } 
    } } [2]
}


main(): Int64 {
    try {
        let var_1669296677372_33 : Unit = ();
        func func_1669296677372_20() : Class_1669296677372_12 { // block id: 21
            var var_1669296677372_38 : Bool = true;
            match (if (var_1669296677372_26 >= (-97)) { // block id: 29
                true
            } else { // block id: 31
                var_1669296677372_33;
                true && var_1669296677372_38
            }) {
                case false | true => 
                    var var_1669296677372_44 : UInt16 = UInt16(UInt8(151));
                    var_1669296677372_44;
                    ();
                    if (false) { var_1669296677372_51 } else { Class_1669296677372_12() } 
                
                case caseVar_1669296677372_56 : Interface_1669296677372_15 => 
                    ();
                    var_1669296677372_51
                
                case true | true | true | false => 
                    if (true) { var_1669296677372_51 } else { var_1669296677372_51 } 
                
                case _ => 
                    if (false) { Class_1669296677372_12() } else { Class_1669296677372_12() } 
                
            }
        }
;
        func func_1669296677372_8<T0, T1, T2>(param_1669296677372_9 : Float32) : Unit { // block id: 10
            func_1669296677372_20().var_1669296677372_74;
            match (Enum_1669296677372_79<Option<Unit>>.defaultValue) {
                case defaultValue => 
                    (-33.0);
                    "Kh6\"\\[<XNm";
                    var_1669296677372_33
                
                case caseVar_1669296677372_90 => 
                    ();
                    ();
                    var_1669296677372_33
                
                case _ => 
                    Enum_1669296677372_79<Option<Unit>>.defaultValue;
                    var var_1669296677372_100 : UInt8 = UInt8(220);
                    var_1669296677372_100 *= var_1669296677372_100
                
            };
            func_1669296677372_104()
        }
;
        var var_1669296677372_1071 : Float32 = Float32(Float32(7.0));
        func_1669296677372_8<Option<Range<Int8>>, Option<Range<Int8>>, Array<Bool>>(Float32(23.0) * var_1669296677372_1071);
        let var_1669296677372_1076 : ?Range<Int8> = ((Int16(UInt16(Int16(-122))) as Range<UInt16>) as Range<Int8>);
        match (var_1669296677372_1076) {
            case _ => 
                var_1669296677372_1086 = (-1);
                (((var_1669296677372_222&127)..(var_1669296677372_222&127):(((-37)|1))), var_1669296677372_1096, var_1669296677372_677);
                let var_1669296677372_1106 : Bool = ([Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(UInt8(222))), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(64)), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(89)), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(Int16(25))), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(Int16(-57))), Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(140))] is Array<UInt64>);
                if (var_1669296677372_1106) { var_1669296677372_1379 } else { Option<Class_1669296677372_12>.None } 
            
        };
        let var_1669296677372_1424 : ?Bool = Option<Bool>.None;
        if (var_1669296677372_1386[6]) { // block id: 1413
            ();
            102 % ((var_1669296677372_26) | 1)
        } else if ((var_1669296677372_1424 ?? true)) { // block id: 1427
            37 - var_1669296677372_901
        } else { // block id: 1431
            [Class_1669296677372_12(), Class_1669296677372_12(), Class_1669296677372_12(), var_1669296677372_1437, var_1669296677372_51, var_1669296677372_1441, var_1669296677372_1437, Class_1669296677372_12(namedParam_1669296677372_1115 : UInt16(78)), var_1669296677372_1437, Class_1669296677372_12()];
            var_1669296677372_26
        }
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1669296677372_171*var_1669296677372_171), 64)
        crccheck.updateBuffer(UInt64(var_1669296677372_222*var_1669296677372_222), 64)
        crccheck.updateBuffer(UInt64(var_1669296677372_901*var_1669296677372_901), 64)
        crccheck.updateBuffer(UInt64(var_1669296677372_1086*var_1669296677372_1086), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
