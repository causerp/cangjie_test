/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public var var_1669323834793_47 : Bool = (UInt64(78) is Bool)
public let var_1669323834793_51 : Int32 = Int32(115)
public var var_1669323834793_54 : Unit = ()
public let var_1669323834793_111 : Unit = ()
public var var_1669323834793_158 : Bool = true
public var var_1669323834793_232 : Bool = (Float32(7.0) is String)
public let var_1669323834793_279 : Int64 = 40
public let var_1669323834793_291 : Rune = r'Y'
public var var_1669323834793_306 : (UInt32, UInt32, Float32, Int64) = (UInt32(Int16(103)), UInt32(UInt16(Int8(UInt8(75)))), Float32(Float32(Float32(-61.0))), (-68))
public var var_1669323834793_323 : Enum_1669323834793_320 = Enum_1669323834793_320.defaultValue
public var var_1669323834793_329 : UInt32 = UInt32(105)
public var var_1669323834793_371 : ?Rune = Option<Rune>.None
var var_1669323834793_415 : Class_1669323834793_403 = Class_1669323834793_403()
let var_1669323834793_444 : Struct_1669323834793_440<Option<String>, Int8> = Struct_1669323834793_440<Option<String>, Int8>()
public let var_1669323834793_504 : Unit = ()
public var var_1669323834793_528 : Int32 = Int32(UInt16(137))
public let var_1669323834793_609 : Float32 = Float32(Float32(50.0))
public var var_1669323834793_660 : UInt16 = UInt16(18)
var var_1669323834793_663 : Array<Range<Int16>> = [((Int16(-13)&127)..(Int16(-78)&127):(76|1)), ((Int16(-112)&127)..=(Int16(23)&127):((-11)|1)), ((Int16(57)&127)..=(Int16(121)&127):((-43)|1)), ((Int16(111)&127)..(Int16(-72)&127):((-77)|1)), ((Int16(54)&127)..(Int16(75)&127):((-47)|1)), ((Int16(87)&127)..(Int16(90)&127):((-58)|1)), ((Int16(38)&127)..(Int16(105)&127):(21|1)), ((Int16(-11)&127)..=(Int16(-68)&127):(32|1)), ((Int16(-78)&127)..(Int16(-24)&127):((-63)|1)), ((Int16(-78)&127)..=(Int16(-108)&127):((-18)|1))]
public let var_1669323834793_683 : ?String = ([((Int16(88)&127)..(Int16(91)&127):((-2)|1)), ((Int16(31)&127)..(Int16(112)&127):((-60)|1)), ((Int16(-95)&127)..(Int16(85)&127):((-82)|1)), ((Int16(13)&127)..=(Int16(72)&127):(46|1)), ((Int16(-11)&127)..(Int16(-110)&127):(101|1)), ((Int16(-28)&127)..=(Int16(-76)&127):((-41)|1)), ((Int16(64)&127)..(Int16(69)&127):((-8)|1)), ((Int16(20)&127)..=(Int16(33)&127):(93|1)), ((Int16(66)&127)..=(Int16(-7)&127):((-62)|1)), ((Int16(116)&127)..=(Int16(-12)&127):(36|1))] as String)
public let var_1669323834793_705 : Range<UInt8> = ((UInt8(UInt8(97))&127)..(UInt8(56)&127):(((-45)|1)))
public var var_1669323834793_811 : Interface_1669323834793_412 = Class_1669323834793_403()
public let var_1669323834793_862 : String = "nK6Qv[J*4D"
let var_1669323834793_909 : Unit = ()
public let var_1669323834793_919 : Array<Array<Bool>> = [[(Float64(33.0) is (Interface_1669323834793_410, String, (Rune) -> Array<Bool>, Interface_1669323834793_407) -> UInt64), false, (Int8(Int8(-53)) is Interface_1669323834793_406), ([UInt64(202), UInt64(17), UInt64(140), UInt64(151), UInt64(134), UInt64(168), UInt64(238), UInt64(78), UInt64(17), UInt64(108)] is Array<Array<Bool>>), (r'E' is (Interface_1669323834793_410, String, (Rune) -> Array<Bool>, Interface_1669323834793_407) -> UInt64), (UInt32(163) is Array<Bool>), ((((UInt8(208)&127)..=(UInt8(223)&127):((-37)|1)), ((UInt8(8)&127)..(UInt8(142)&127):(103|1)), ((UInt64(196)&127)..(UInt64(112)&127):((-8)|1))) is Struct_1669323834793_440<Option<String>, Int8>), ((((UInt8(126)&127)..=(UInt8(7)&127):(27|1)), ((UInt8(76)&127)..=(UInt8(228)&127):((-91)|1)), ((UInt64(103)&127)..(UInt64(138)&127):((-10)|1))) is Option<Interface_1669323834793_410>), (((UInt32(215)&127)..=(UInt32(217)&127):(1|1)) is Interface_1669323834793_409), false], [(((UInt32(204)&127)..(UInt32(2)&127):((22|1))) is Option<Rune>), true, (((UInt8(69)&127)..=(UInt8(243)&127):(((-97)|1))) is Array<Array<Bool>>), true, true, true, false, (() is Float32), (((123&127)..=(16&127):(((-62)|1))) is Rune), (UInt32(Int32(-36)) is (Class_1669323834793_8, Bool, Int32, Unit, Bool))], [(UInt16(251) is (UInt16) -> Rune), true, true, false, false, false, ("BpkwXrW^!S" is (Interface_1669323834793_410, String, (Rune) -> Array<Bool>, Interface_1669323834793_407) -> UInt64), true, true, (((Int16(-35)&127)..(Int16(-18)&127):(((-97)|1))) is Int64)], [(((Int32(-71)&127)..=(Int32(-61)&127):((81|1))) is Int16), true, ([(UInt32(133), UInt32(71), Float32(29.0), 117), (UInt32(155), UInt32(31), Float32(119.0), 26), (UInt32(221), UInt32(26), Float32(-123.0), (-114)), (UInt32(63), UInt32(99), Float32(-87.0), 43), (UInt32(235), UInt32(84), Float32(-108.0), 78), (UInt32(69), UInt32(183), Float32(-68.0), 67), (UInt32(192), UInt32(36), Float32(12.0), 16), (UInt32(190), UInt32(24), Float32(-27.0), 37), (UInt32(103), UInt32(91), Float32(-36.0), (-37)), (UInt32(157), UInt32(106), Float32(-58.0), (-18))] is Range<Int32>), true, (((75&127)..=((-120)&127):((-96)|1)) is Enum_1669323834793_320), false, (((UInt16(80)&127)..(UInt16(113)&127):((107|1))) is Float32), (UInt64(220) is Range<Int32>), (((UInt16(137)&127)..(UInt16(188)&127):(110|1)) is Range<UInt8>), ((Class_1669323834793_8(), true, Int32(14), (), true) is Array<Bool>)], [true, true, ([[true, false, true, true, true, true, false, true, false, false], [true, true, false, false, false, true, false, true, false, false], [true, true, false, true, false, true, true, true, false, false], [true, false, true, false, true, true, false, true, false, true], [true, false, false, true, false, false, true, true, false, true], [true, false, false, true, false, true, false, false, false, true], [true, false, true, false, false, false, true, false, true, false], [false, true, false, false, false, false, true, true, true, true], [true, true, true, true, false, true, true, true, false, false], [false, false, false, false, false, true, true, false, true, false]] is Option<Rune>), false, false, (((Int16(10)&127)..=(Int16(96)&127):(13|1)) is Range<UInt32>), false, (((UInt32(207)&127)..=(UInt32(22)&127):((-79)|1)) is Range<Int64>), false, (((Int16(-3)&127)..=(Int16(125)&127):((-66)|1)) is Option<Option<Interface_1669323834793_410>>)], [false, true, true, (((UInt8(210)&127)..=(UInt8(223)&127):(((-105)|1))) is Option<UInt16>), (((Int16(-120)&127)..(Int16(41)&127):((67|1))) is (Float64) -> Array<Bool>), true, ([((Int16(96)&127)..=(Int16(-125)&127):((-12)|1)), ((Int16(-124)&127)..=(Int16(-106)&127):((-19)|1)), ((Int16(-19)&127)..(Int16(-8)&127):(111|1)), ((Int16(108)&127)..=(Int16(88)&127):((-39)|1)), ((Int16(-124)&127)..(Int16(-94)&127):(78|1)), ((Int16(-74)&127)..=(Int16(42)&127):((-21)|1)), ((Int16(82)&127)..=(Int16(24)&127):((-93)|1)), ((Int16(34)&127)..(Int16(97)&127):(83|1)), ((Int16(1)&127)..=(Int16(125)&127):(17|1)), ((Int16(-76)&127)..=(Int16(-56)&127):((-19)|1))] is Class_1669323834793_403), false, (() is Interface_1669323834793_413), false], [true, true, true, true, false, false, true, false, true, true], [true, false, (Int8(6) is (String, (Int32, Float64) -> Class_1669323834793_8) -> Bool), (((UInt8(99)&127)..=(UInt8(60)&127):((11|1))) is (String, (Int32, Float64) -> Class_1669323834793_8) -> Bool), true, (((Int16(98)&127)..(Int16(46)&127):((-32)|1)) is UInt64), false, ([Int8(-83), Int8(-19), Int8(43), Int8(83), Int8(39), Int8(118), Int8(103), Int8(11), Int8(-99), Int8(71)] is ((UInt32, UInt32, Float32, Int64)) -> UInt64), true, true], [true, false, true, true, false, false, false, true, true, true], [(Int8(43) is Rune), false, ([(UInt32(29), UInt32(46), Float32(-93.0), (-26)), (UInt32(76), UInt32(231), Float32(-102.0), (-123)), (UInt32(159), UInt32(85), Float32(27.0), (-33)), (UInt32(5), UInt32(119), Float32(58.0), 50), (UInt32(221), UInt32(226), Float32(62.0), (-117)), (UInt32(144), UInt32(104), Float32(-56.0), (-108)), (UInt32(182), UInt32(156), Float32(74.0), (-76)), (UInt32(133), UInt32(158), Float32(-84.0), (-84)), (UInt32(121), UInt32(167), Float32(43.0), (-89)), (UInt32(247), UInt32(86), Float32(-18.0), (-46))] is Interface_1669323834793_406), true, true, (((UInt64(69)&127)..=(UInt64(6)&127):((3|1))) is Struct_1669323834793_440<Option<String>, Int8>), (Int16(-92) is (Int32, Float64) -> Class_1669323834793_8), false, false, false]]
public let var_1669323834793_1264 : UInt8 = UInt8(167)
public var var_1669323834793_1314 : Array<(UInt32, UInt32, Float32, Int64)> = [(UInt32(Int16(-9)), UInt32(215), Float32(-98.0), Int64(Int8(89))), (UInt32(Int32(Int8(9))), UInt32(9), Float32(68.0), 62), (UInt32(188), UInt32(186), Float32(26.0), (-28)), (UInt32(64), UInt32(54), Float32(Float32(Float32(-112.0))), (-61)), (UInt32(118), UInt32(Int16(Int8(4))), Float32(Float32(Float32(-105.0))), Int64(Int8(Int8(26)))), (UInt32(82), UInt32(Int32(109)), Float32(-35.0), Int64(Int32(-17))), (UInt32(Int16(UInt16(216))), UInt32(UInt16(139)), Float32(Float32(Float32(-125.0))), 106), (UInt32(45), UInt32(Int32(Int8(62))), Float32(Float32(Float32(-47.0))), 40), (UInt32(UInt32(UInt8(185))), UInt32(22), Float32(77.0), (-21)), (UInt32(Int16(Int16(25))), UInt32(Int32(-77)), Float32(Float32(Float32(-127.0))), Int64(Int8(96)))]
public open class Class_1669323834793_8 {
    public init() { // block id: 10

    }
;
    public static var var_1669323834793_819 : (Class_1669323834793_8, Bool, Int32, Unit, Bool) = (Class_1669323834793_8(), false, Int32(41), (), true);
    public func func_1669323834793_65(optionalParam_1669323834793_66 ! : String = ###"K-4~%_bV@ "###, namedParam_1669323834793_68 ! : (Int32, Float64) -> Class_1669323834793_8) : Bool { // block id: 72
        let var_1669323834793_804 : (Int32, Float64) -> Class_1669323834793_8 = func_1669323834793_800;
        var loopTimeVar_1669323834793_809 : Int64 = 0;
        while (((var_1669323834793_804|>func_1669323834793_86)[3]) && loopTimeVar_1669323834793_809 < 100 ) {
            loopTimeVar_1669323834793_809++;

        };
        var_1669323834793_811;
        if ((9 < var_1669323834793_279)) { var_1669323834793_819 } else { match (var_1669323834793_819) {
            case (caseVar_1669323834793_830 : Interface_1669323834793_410,caseVar_1669323834793_831,caseVar_1669323834793_832,caseVar_1669323834793_833,_ : Array<Range<Int16>>) => 
                if (true) { var_1669323834793_819 } else { (Class_1669323834793_8(), var_1669323834793_158, Int32(54), (), var_1669323834793_232) } 
            
            case (_ : Array<Array<UInt64>>,caseVar_1669323834793_846 : Range<Int16>,_,caseVar_1669323834793_847,caseVar_1669323834793_848) => 
                ();
                var_1669323834793_819
            
            case _ => 
                (Class_1669323834793_8(), false, var_1669323834793_51, (), var_1669323834793_158)
            
        } } [4]
    }
;
    public func func_1669323834793_60<T0, T1>() : Int64 { // block id: 61
        let var_1669323834793_865 : (Int32, Float64) -> Class_1669323834793_8 = func_1669323834793_12;
        let var_1669323834793_882 : Array<Int8> = [Int8(Int8(107)), Int8(Int8(Int8(Int8(-13)))), Int8(UInt8(UInt8(103))), Int8(-120), Int8(-17), Int8(-29), Int8(-36), Int8(UInt8(UInt8(UInt8(40)))), Int8(UInt8(UInt8(UInt8(78)))), Int8(Int8(-9))];
        var loopTimeVar_1669323834793_912 : Int64 = 0;
        while ((if (func_1669323834793_65(optionalParam_1669323834793_66 : var_1669323834793_862, namedParam_1669323834793_68 : var_1669323834793_865)) { // block id: 867
            var_1669323834793_47
        } else { // block id: 869
            var_1669323834793_111;
            if (var_1669323834793_47) { Enum_1669323834793_320.enumValue_1669323834793_492(var_1669323834793_811, var_1669323834793_306) } else { var_1669323834793_323 } ;
            true
        }) && loopTimeVar_1669323834793_912 < 100 ) {
            loopTimeVar_1669323834793_912++;
            var_1669323834793_882[5];
            var_1669323834793_909
        };
        ((UInt32(236)&127)..(UInt32(149)&127):((-110)|1));
        var var_1669323834793_1415 : Int16 = Int16(-67);
        if (var_1669323834793_919[2][8]) { // block id: 1256
            let var_1669323834793_1277 : Unit = ();
            (((UInt16(206)&127)..=(UInt16(236)&127):(89|1)), var_1669323834793_609, ((var_1669323834793_1264&127)..(var_1669323834793_1264&127):((var_1669323834793_279|1))), UInt64(201), var_1669323834793_279, ((Int32(-35)&127)..(Int32(-6)&127):(((-81)|1))), ((UInt64(43)&127)..=(UInt64(70)&127):((-6)|1)), Int32(3), var_1669323834793_1277)[4]
        } else if (match (((114&127)..((-12)&127):((-19)|1))) {
            case caseVar_1669323834793_1284 => 
                var_1669323834793_329++;
                Option<Interface_1669323834793_410>.None;
                true
            
            case caseVar_1669323834793_1292 => 
                var_1669323834793_158 || true
            
            case caseVar_1669323834793_1299 : Option<UInt16> => 
                var_1669323834793_323;
                var_1669323834793_683;
                false
            
            case _ => 
                true;
                var_1669323834793_909;
                var_1669323834793_47
            
        }) { // block id: 1309
            if (true) { // block id: 1312
                var_1669323834793_1314;
                85
            } else if (var_1669323834793_232) { // block id: 1399
                var_1669323834793_158 &&= var_1669323834793_158;
                var var_1669323834793_1405 : Float64 = Float64(Float32(Float32(Float32(20.0))));
                var_1669323834793_1405 += var_1669323834793_1405;
                (-27)
            } else { // block id: 1412
                var_1669323834793_1415 >>= ((var_1669323834793_1415) & 7);
                let var_1669323834793_1419 : Int64 = (-71);
                var_1669323834793_1419
            }
        } else { // block id: 1421
            102
        }
    }

}

public func func_1669323834793_12(optionalParam_1669323834793_13 ! : Int32 = Int32(UInt32(Int32(Int32(UInt8(252))))), optionalParam_1669323834793_19 ! : Float64 = Float64(Float32(Float32(-22.0)))) : Class_1669323834793_8 { // block id: 23
    if ((Int8(-51) is Bool)) { // block id: 29
        let var_1669323834793_31 : (Class_1669323834793_8, Bool, Int32, Unit, Bool) = (Class_1669323834793_8(), false, Int32(Int32(Int16(Int16(-43)))), (), false);
        var_1669323834793_31
    } else { // block id: 41
        let var_1669323834793_44 : Class_1669323834793_8 = Class_1669323834793_8();
        (var_1669323834793_44, var_1669323834793_47, var_1669323834793_51, var_1669323834793_54, false)
    }[0]
}

public func func_1669323834793_93(param_1669323834793_94 : Float64) : Array<Bool> { // block id: 95
    ();
    [((Int16(-38)&127)..=(Int16(-46)&127):((-92)|1)), ((Int16(100)&127)..=(Int16(10)&127):(88|1)), ((Int16(-96)&127)..=(Int16(-102)&127):(57|1)), ((Int16(-31)&127)..(Int16(120)&127):((-60)|1)), ((Int16(-81)&127)..(Int16(-14)&127):((-26)|1)), ((Int16(-1)&127)..=(Int16(-92)&127):(75|1)), ((Int16(91)&127)..=(Int16(-51)&127):((-85)|1)), ((Int16(-71)&127)..(Int16(-14)&127):(110|1)), ((Int16(-31)&127)..=(Int16(110)&127):(122|1)), ((Int16(-90)&127)..=(Int16(-122)&127):(113|1))][1];
    [false, true, true, true, false, false, true, true, true, true]
}

func func_1669323834793_103(param_1669323834793_104 : Rune) : Array<Bool> { // block id: 105
    ();
    var var_1669323834793_119 : UInt64 = UInt64(UInt64(112));
    var var_1669323834793_176 : Array<Bool> = [(###"\\=&fAQr\\R>"### is (Class_1669323834793_8, Bool, Int32, Unit, Bool)), true, false, (Float32(Float32(Float32(8.0))) is Range<UInt16>), (((UInt64(Int32(-93))&127)..=(UInt64(Int32(81))&127):((Int64(Int16(26))|1))) is Int16), (((Int8(-113)&127)..(Int8(-49)&127):(43|1)) is Int64), (((UInt64(UInt8(234))&127)..(UInt64(94)&127):(((-13)|1))) is UInt16), false, (Int8(UInt8(UInt8(107))) is Range<UInt8>), (((UInt64((-102))&127)..(UInt64(Int8(119))&127):((Int64(Int16(-57))|1))) is UInt64)];
    let var_1669323834793_238 : Bool = (((Int16(-56)&127)..=(Int16(-90)&127):(10|1)) is UInt32);
    match (try { // block id: 109
        var_1669323834793_111;
        if (var_1669323834793_47) { [UInt64(50), UInt64(76), var_1669323834793_119, UInt64(192), var_1669323834793_119, UInt64(161), UInt64(132), var_1669323834793_119, UInt64(161), var_1669323834793_119] } else { [UInt64(151), UInt64(71), UInt64(173), UInt64(185), UInt64(160), UInt64(0), UInt64(188), UInt64(43), UInt64(58), UInt64(95)] } 
    } catch (_) { // block id: 130
        [UInt64(179), UInt64(96), UInt64(154), UInt64(34), UInt64(39), UInt64(249), UInt64(48), UInt64(183), UInt64(15), UInt64(132)]
    }) {
        case _ : Unit => 
            [true, true, true, true, var_1669323834793_47, var_1669323834793_47, var_1669323834793_47, false, false, var_1669323834793_47]
        
        case _ : String => 
            UInt16(121);
            let var_1669323834793_152 : Bool = (UInt64(16) is Bool);
            [var_1669323834793_152, true, true, var_1669323834793_158, var_1669323834793_152, var_1669323834793_152, var_1669323834793_152, false, var_1669323834793_158, var_1669323834793_47]
        
        case _ : Int8 => 
            let var_1669323834793_171 : Int64 = Int64(Int32(102));
            var_1669323834793_171 % ((var_1669323834793_171) | 1);
            var_1669323834793_176
        
        case _ : Range<Int64> => 
            if (true) { [false, true, true, false, false, true, true, false, true, false] } else { [false, true, true, false, false, false, true, false, false, false] } 
        
        case _ => 
            ((UInt16(139)&127)..=(UInt16(72)&127):((117|1)));
            ();
            if (var_1669323834793_232) { [false, true, false, false, false, false, true, false, false, true] } else { [var_1669323834793_238, false, var_1669323834793_47, true, true, true, var_1669323834793_238, true, true, var_1669323834793_47] } 
        
    }
}

public enum Enum_1669323834793_257 {
    defaultValue |
    enumValue_1669323834793_269((Float64) -> Array<Bool>, Int64, Range<UInt32>)
}
public enum Enum_1669323834793_320 {
    defaultValue |
    enumValue_1669323834793_492(Interface_1669323834793_412, (UInt32, UInt32, Float32, Int64))
}
public func func_1669323834793_253(param_1669323834793_254 : Float64) : Rune { // block id: 255
    let var_1669323834793_266 : Enum_1669323834793_257 = Enum_1669323834793_257.defaultValue;
    let var_1669323834793_282 : Range<UInt32> = ((UInt32(91)&127)..=(UInt32(165)&127):((-8)|1));
    match (try { // block id: 260
        Enum_1669323834793_257.defaultValue
    } finally { // block id: 262
        var var_1669323834793_276 : (Float64) -> Array<Bool> = func_1669323834793_93;
        if (false) { var_1669323834793_266 } else { Enum_1669323834793_257.enumValue_1669323834793_269(var_1669323834793_276, var_1669323834793_279, var_1669323834793_282) } 
    }) {
        case _ : UInt64 => 
            var var_1669323834793_288 : UInt16 = UInt16(197);
            var_1669323834793_288;
            var_1669323834793_291;
            ()
        
        case _ => 
            if (true) { """
(^*)..(%
)BCi7>
""" } else { "2+?wZ2 >Ht" } ;
            var_1669323834793_111
        
    };
    if (var_1669323834793_306[1] <= match (var_1669323834793_323) {
        case defaultValue => 
            var_1669323834793_329
        
        case defaultValue => 
            UInt32(0)
        
        case defaultValue => 
            var_1669323834793_279;
            var var_1669323834793_341 : UInt16 = UInt16(35);
            var_1669323834793_341 %= ((UInt16(21)) | 1);
            var_1669323834793_329 | UInt32(106)
        
        case _ => 
            var var_1669323834793_351 : UInt16 = UInt16(196);
            var_1669323834793_351 ^= UInt16(107);
            UInt32(192)
        
    }) { // block id: 355

    };
    r'x'
}


public func func_1669323834793_358(param_1669323834793_359 : UInt16) : Rune { // block id: 360
    (if ([true, true, true, true, false, false, true, false, true, false][6]) { var_1669323834793_371 } else { (true as Rune) }  ?? var_1669323834793_291)
}

public interface Interface_1669323834793_410 {

}

public interface Interface_1669323834793_412 {

}

public interface Interface_1669323834793_411 <: Interface_1669323834793_410 & Interface_1669323834793_412 {

}

public interface Interface_1669323834793_409 <: Interface_1669323834793_410 & Interface_1669323834793_411 {

}

public interface Interface_1669323834793_413 {

}

public interface Interface_1669323834793_408<T0> <: Interface_1669323834793_409 & Interface_1669323834793_413 {

}

public interface Interface_1669323834793_407 <: Interface_1669323834793_408<Int32> {

}

public interface Interface_1669323834793_406 <: Interface_1669323834793_407 & Interface_1669323834793_410 {

}

public open class Class_1669323834793_403 <: Interface_1669323834793_406 & Resource {
    public init() { // block id: 405

    }
;
    mut prop var_1669323834793_418 : Unit { // block id: 419
        get() { // block id: 421
            ();
            ();
            var_1669323834793_1424
        }

        set(Value) { // block id: 426
            ((Int8(58)&127)..(Int8(120)&127):(33|1));
            ();
            var_1669323834793_1424 = Value
        }

    };
    public init(namedParam_1669323834793_691 ! : Int8, namedParam_1669323834793_692 ! : Interface_1669323834793_413, optionalParam_1669323834793_693 ! : Interface_1669323834793_409 = Class_1669323834793_403(), optionalParam_1669323834793_695 ! : Interface_1669323834793_410 = Class_1669323834793_403()) { // block id: 697
        var var_1669323834793_720 : UInt8 = UInt8(246);
        try { // block id: 701
            Int32(-70);
            (var_1669323834793_705, ((UInt8(109)&127)..=(UInt8(170)&127):(89|1)), ((UInt64(221)&127)..(UInt64(241)&127):((-52)|1)))
        } finally { // block id: 713
            var var_1669323834793_716 : UInt8 = UInt8(Int8(-64));
            var_1669323834793_716 *= var_1669323834793_720;
            var_1669323834793_111;
            let var_1669323834793_724 : (Range<UInt8>, Range<UInt8>, Range<UInt64>) = (((UInt8(136)&127)..=(UInt8(132)&127):(106|1)), ((UInt8(4)&127)..(UInt8(Int8(UInt8(15)))&127):((Int64(UInt64(26))|1))), ((UInt64(173)&127)..(UInt64(80)&127):(70|1)));
            var_1669323834793_724
        }[1]
    }
;
    mut prop var_1669323834793_1424 : Unit { // block id: 1425
        get() { // block id: 1427
            (((-37)&127)..=((-72)&127):(11|1));
            ()
        }

        set(Value) { // block id: 1432
            ()
        }

    }
    public func isClosed(): Bool { return false }
    public func close(): Unit {}
}

public struct Struct_1669323834793_440<T0, T1> {
    public init() { // block id: 442

    }
;
    public static let var_1669323834793_466 : Range<UInt32> = ((UInt32(229)&127)..=(UInt32(158)&127):((-84)|1));
    static var var_1669323834793_481 : Float32 = Float32(-83.0);
    public func func_1669323834793_447(optionalParam_1669323834793_448 ! : (UInt32, UInt32, Float32, Int64) = (UInt32(160), UInt32(61), Float32(Float32(-23.0)), 66)) : UInt64 { // block id: 455
        ((Int16(-59)&127)..=(Int16(108)&127):(99|1));
        let var_1669323834793_462 : (Float64) -> Array<Bool> = func_1669323834793_93;
        let var_1669323834793_490 : Enum_1669323834793_320 = Enum_1669323834793_320.enumValue_1669323834793_492(Class_1669323834793_403(), (UInt32(234), UInt32(53), Float32(Float32(43.0)), 99));
        let var_1669323834793_521 : Int8 = Int8(Int8(Int8(-80)));
        var var_1669323834793_562 : UInt64 = UInt64(241);
        let var_1669323834793_596 : Array<Array<UInt64>> = [[UInt64(198), UInt64(14), UInt64(26), UInt64(211), UInt64(41), UInt64(54), UInt64(1), UInt64(40), UInt64(90), UInt64(94)], [UInt64(84), UInt64(64), UInt64(239), UInt64(95), UInt64(108), UInt64(140), UInt64(179), UInt64(150), UInt64(71), UInt64(192)], [UInt64(218), UInt64(132), UInt64(236), UInt64(127), UInt64(0), UInt64(175), UInt64(168), UInt64(16), UInt64(162), UInt64(2)], [UInt64(67), UInt64(248), UInt64(209), UInt64(145), UInt64(188), UInt64(129), UInt64(96), UInt64(29), UInt64(174), UInt64(27)], [UInt64(235), UInt64(40), UInt64(215), UInt64(20), UInt64(6), UInt64(118), UInt64(243), UInt64(11), UInt64(91), UInt64(154)], [UInt64(108), UInt64(222), UInt64(23), UInt64(23), UInt64(88), UInt64(122), UInt64(168), UInt64(181), UInt64(101), UInt64(7)], [UInt64(96), UInt64(66), UInt64(3), UInt64(46), UInt64(86), UInt64(67), UInt64(181), UInt64(205), UInt64(89), UInt64(242)], [UInt64(73), UInt64(242), UInt64(184), UInt64(107), UInt64(55), UInt64(28), UInt64(5), UInt64(201), UInt64(100), UInt64(91)], [UInt64(175), UInt64(69), UInt64(48), UInt64(127), UInt64(8), UInt64(25), UInt64(12), UInt64(121), UInt64(10), UInt64(155)], [UInt64(4), UInt64(6), UInt64(244), UInt64(68), UInt64(149), UInt64(192), UInt64(35), UInt64(94), UInt64(90), UInt64(79)]];
        if (match (Enum_1669323834793_257.enumValue_1669323834793_269(var_1669323834793_462, 80, var_1669323834793_466)) {
            case enumValue_1669323834793_269(_ : Bool, caseVar_1669323834793_470, _) => 
                Int8(22) < Int8(106)
            
            case defaultValue => 
                Float32(-40.0) + var_1669323834793_481;
                !true
            
            case _ => 
                if (var_1669323834793_47) { var_1669323834793_490 } else { var_1669323834793_490 } ;
                var_1669323834793_504;
                true
            
        }) { match (Enum_1669323834793_257.defaultValue) {
            case enumValue_1669323834793_269(caseVar_1669323834793_511 : Array<Bool>, caseVar_1669323834793_512 : UInt32, caseVar_1669323834793_513 : Range<UInt32>) => 
                [UInt64(168), UInt64(201), UInt64(134), UInt64(160), UInt64(0), UInt64(146), UInt64(234), UInt64(111), UInt64(14), UInt64(19)]
            
            case _ : UInt64 => 
                var_1669323834793_521 >= var_1669323834793_521;
                var_1669323834793_528 &= var_1669323834793_528;
                let var_1669323834793_539 : UInt64 = UInt64(26);
                if (var_1669323834793_158) { [UInt64(123), UInt64(144), UInt64(111), UInt64(58), UInt64(136), UInt64(155), UInt64(105), UInt64(174), UInt64(123), UInt64(107)] } else { [UInt64(164), UInt64(172), var_1669323834793_539, UInt64(210), UInt64(93), UInt64(72), var_1669323834793_539, UInt64(11), var_1669323834793_539, var_1669323834793_539] } 
            
            case enumValue_1669323834793_269(caseVar_1669323834793_550 : Float64, _, _) => 
                var var_1669323834793_555 : Bool = (UInt32(122) is Struct_1669323834793_440<Option<String>, Int8>);
                var_1669323834793_232 = var_1669323834793_555;
                ();
                var var_1669323834793_565 : UInt64 = UInt64(UInt32(Int32(UInt8(UInt8(159)))));
                [UInt64(225), var_1669323834793_562, var_1669323834793_565, var_1669323834793_562, var_1669323834793_565, UInt64(5), UInt64(56), var_1669323834793_562, var_1669323834793_562, UInt64(72)]
            
            case _ => 
                ();
                var_1669323834793_504;
                [var_1669323834793_562, UInt64(85), UInt64(251), var_1669323834793_562, var_1669323834793_562, UInt64(139), UInt64(135), var_1669323834793_562, var_1669323834793_562, UInt64(200)]
            
        } } else { var_1669323834793_596[0] } [9]
    }

}

public func func_1669323834793_430(namedParam_1669323834793_431 ! : Interface_1669323834793_410, namedParam_1669323834793_432 ! : String, optionalParam_1669323834793_433 ! : (Rune) -> Array<Bool> = func_1669323834793_103, namedParam_1669323834793_437 ! : Interface_1669323834793_407) : UInt64 { // block id: 438
    var_1669323834793_444.func_1669323834793_447(optionalParam_1669323834793_448 : [var_1669323834793_306, var_1669323834793_306, (var_1669323834793_329, var_1669323834793_329, var_1669323834793_609, (-128)), var_1669323834793_306, (var_1669323834793_329, var_1669323834793_329, Float32(94.0), 75), (UInt32(163), var_1669323834793_329, Float32(123.0), var_1669323834793_279), var_1669323834793_306, (UInt32(252), UInt32(96), var_1669323834793_609, 74), (UInt32(32), var_1669323834793_329, var_1669323834793_609, var_1669323834793_279), var_1669323834793_306][8])
}





public func func_1669323834793_379(param_1669323834793_380 : Float64) : UInt16 { // block id: 381
    var var_1669323834793_392 : Int16 = Int16(-127);
    try (resource = Class_1669323834793_403()) { // block id: 383
        try (resource = Class_1669323834793_403()) { // block id: 385
            ((Int32(36)&127)..=(var_1669323834793_51&127):((var_1669323834793_279|1)));
            var_1669323834793_392 <<= ((var_1669323834793_392) & 7)
        } catch (_) { // block id: 395
            94;
            Int32(59) << ((var_1669323834793_51) & 7);
            var_1669323834793_111
        }
    } catch (e: Exception) { // block id: 401
        var_1669323834793_415.var_1669323834793_418
    };
    var var_1669323834793_650 : Interface_1669323834793_410 = Class_1669323834793_403();
    let var_1669323834793_668 : Bool = (UInt64(Int64(Int8(Int8(119)))) is UInt32);
    var var_1669323834793_675 : String = """
c|n:h
|W;Q5
""";
    let var_1669323834793_688 : Interface_1669323834793_407 = Class_1669323834793_403(namedParam_1669323834793_691 : Int8(-21), namedParam_1669323834793_692 : Class_1669323834793_403(), optionalParam_1669323834793_693 : Class_1669323834793_403());
    func_1669323834793_430(namedParam_1669323834793_431 : ((Option<Option<Interface_1669323834793_410>>.Some(Option<Interface_1669323834793_410>.Some(var_1669323834793_650)) ?? Option<Interface_1669323834793_410>.Some(var_1669323834793_650)) ?? (UInt32(210), var_1669323834793_650, var_1669323834793_660, var_1669323834793_663)[1]), namedParam_1669323834793_432 : if (var_1669323834793_668) { var_1669323834793_675 } else { (var_1669323834793_683 ?? """
7${var_1669323834793_675}N${var_1669323834793_675}_OW${var_1669323834793_675}
^n8#6${var_1669323834793_675}
""") } , namedParam_1669323834793_437 : var_1669323834793_688);
    let var_1669323834793_763 : Option<UInt16> = Option<UInt16>.Some(UInt16(185));
    (match (var_1669323834793_675) {
        case caseVar_1669323834793_748 : Unit => 
            Option<UInt16>.Some(var_1669323834793_660)
        
        case caseVar_1669323834793_754 => 
            var var_1669323834793_758 : UInt32 = UInt32(47);
            var_1669323834793_758--;
            if (var_1669323834793_47) { var_1669323834793_763 } else { var_1669323834793_763 } 
        
        case _ : Int16 => 
            UInt64(41) & UInt64(162);
            var_1669323834793_763
        
        case _ => 
            if (var_1669323834793_232) { Option<UInt16>.None } else { var_1669323834793_763 } 
        
    } ?? try { // block id: 781
        Class_1669323834793_403(namedParam_1669323834793_691 : Int8(57), namedParam_1669323834793_692 : Class_1669323834793_403(), optionalParam_1669323834793_695 : var_1669323834793_650);
        if (false) { Option<UInt16>.None } else { var_1669323834793_763 } ;
        UInt16(68)
    } catch (_) { // block id: 792
        var_1669323834793_111;
        UInt16(166)
    })
}

public func func_1669323834793_86(param_1669323834793_87 : (Int32, Float64) -> Class_1669323834793_8) : Array<Bool> { // block id: 91
    let var_1669323834793_251 : (Rune) -> Array<Bool> = func_1669323834793_103;
    let var_1669323834793_377 : (UInt16) -> Rune = func_1669323834793_358;
    Float64(Float64(Float32(-99.0)))|>((func_1669323834793_379~>var_1669323834793_377)~>var_1669323834793_251)
}

func func_1669323834793_800(optionalParam_1669323834793_13 : Int32, optionalParam_1669323834793_19 : Float64) : Class_1669323834793_8 { // block id: 23
    if ((Int8(-51) is Bool)) { // block id: 29
        let var_1669323834793_31 : (Class_1669323834793_8, Bool, Int32, Unit, Bool) = (Class_1669323834793_8(), false, Int32(Int32(Int16(Int16(-43)))), (), false);
        var_1669323834793_31
    } else { // block id: 41
        let var_1669323834793_44 : Class_1669323834793_8 = Class_1669323834793_8();
        (var_1669323834793_44, var_1669323834793_47, var_1669323834793_51, var_1669323834793_54, false)
    }[0]
}

main(): Int64 {
    try {
        func_1669323834793_12(optionalParam_1669323834793_13 : var_1669323834793_51).func_1669323834793_60<Array<Bool>, Array<Int8>>()
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1669323834793_403 {

}

