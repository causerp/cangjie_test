/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public var var_1669294281092_12 : Int32 = Int32(UInt16(Int8(-128)))
public var var_1669294281092_19 : UInt64 = UInt64(159)
public var var_1669294281092_28 : Bool = true
public let var_1669294281092_38 : Float32 = Float32(125.0)
public var var_1669294281092_63 : Enum_1669294281092_60 = Enum_1669294281092_60.defaultValue
public var var_1669294281092_75 : Int16 = Int16(Int8(UInt8(UInt8(Int8(20)))))
public var var_1669294281092_133 : Range<Int8> = ((Int8(70)&127)..(Int8(-68)&127):((Int64(UInt64(18))|1)))
public let var_1669294281092_143 : Range<UInt64> = ((UInt64(Int32(74))&127)..=(UInt64(UInt8(UInt8(Int8(-72))))&127):((Int64(UInt64(2))|1)))
public var var_1669294281092_155 : Range<Int32> = ((Int32(54)&127)..(Int32(53)&127):((-50)|1))
public let var_1669294281092_237 : Int64 = Int64((-105))
public let var_1669294281092_269 : UInt16 = UInt16(34)
public var var_1669294281092_302 : Range<Int64> = ((4&127)..=(8&127):((Int64(UInt16(UInt16(105)))|1)))
public var var_1669294281092_318 : (Array<Bool>, UInt64, Float64, Bool, Bool, (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>), (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)) = ([false, true, true, false, false, true, false, false, false, false], UInt64(Int32(UInt16(Int16(63)))), 81.0, true, (Class_1669294281092_186() is ((Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Option<Range<Int64>>, Range<UInt16>, Array<UInt8>) -> Range<Int64>), (((Int8(Int8(-15))&127)..=(Int8(UInt8(89))&127):(((-57)|1))), ((Int16(62)&127)..=(Int16(-104)&127):(55|1)), ((97&127)..=(Int64(Int8(119))&127):((Int64(UInt16(204))|1))), (((UInt64(87)&127)..(UInt64(197)&127):((-10)|1)), [false, true, false, true, true, true, false, false, false, true], ((Int32(-23)&127)..(Int32(-80)&127):((-80)|1)), (((-35)&127)..=(22&127):(43|1)), Int64(UInt32(189))), ((UInt16(217)&127)..(UInt16(213)&127):(27|1))), (((UInt64(Int16(-91))&127)..=(UInt64(122)&127):(((-83)|1))), [false, false, true, false, false, false, false, true, false, false], ((Int32(UInt8(151))&127)..(Int32(UInt16(151))&127):(((-118)|1))), ((59&127)..(Int64(UInt8(107))&127):((87|1))), Int64(Int64(UInt32(174)))))
public let var_1669294281092_439 : (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64) = (((UInt64(204)&127)..(UInt64(200)&127):((-33)|1)), [true, (Int64(95) is Interface_1669294281092_190), (Int32(UInt32(19)) is (Array<Bool>, UInt64, Float64, Bool, Bool, (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>), (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64))), (Int8(UInt8(98)) is (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>)), false, true, false, (Class_1669294281092_186() is Int32), ([UInt8(105), UInt8(249), UInt8(219), UInt8(73), UInt8(99), UInt8(205), UInt8(182), UInt8(76), UInt8(194), UInt8(111)] is Interface_1669294281092_189), false], ((Int32(-122)&127)..=(Int32(-86)&127):((-119)|1)), (((-89)&127)..(39&127):(8|1)), Int64(Int16(UInt16(73))))
public let var_1669294281092_482 : Unit = ()
public let var_1669294281092_485 : Interface_1669294281092_192 = Class_1669294281092_186()
public var var_1669294281092_502 : (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64) = (((UInt64(29)&127)..(UInt64(21)&127):((-107)|1)), [true, false, true, false, true, true, false, true, false, true], ((Int32(-32)&127)..(Int32(-94)&127):(60|1)), (((-47)&127)..=(Int64(14)&127):(((-123)|1))), (-6))
public var var_1669294281092_530 : Int64 = Int64(Int16(59))
public let var_1669294281092_556 : UInt8 = UInt8(145)
public var var_1669294281092_564 : Array<UInt64> = [UInt64(26), UInt64(Int32(UInt32(UInt8(176)))), UInt64(Int32(Int32(UInt32(139)))), UInt64(80), UInt64(UInt8(Int8(UInt8(73)))), UInt64(15), UInt64(UInt32(UInt32(254))), UInt64(31), UInt64(Int32(54)), UInt64(UInt32(130))]
public let var_1669294281092_644 : Option<Float64> = Option<Float64>.None
public let var_1669294281092_651 : Range<UInt16> = ((UInt16(230)&127)..(UInt16(Int16(35))&127):((Int64(Int16(24))|1)))
public let var_1669294281092_697 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public let var_1669294281092_786 : Option<Array<UInt64>> = (Int32(UInt16(UInt16(45))) as Array<UInt64>)
public let var_1669294281092_803 : Interface_1669294281092_189 = Class_1669294281092_186()
public var var_1669294281092_830 : Enum_1669294281092_796 = Enum_1669294281092_796.defaultValue
public var var_1669294281092_837 : Enum_1669294281092_796 = Enum_1669294281092_796.defaultValue
public var var_1669294281092_913 : ?Bool = Option<Bool>.None
public let var_1669294281092_942 : (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>) = (((Int8(-121)&127)..(Int8(UInt8(Int8(49)))&127):(((-80)|1))), ((Int16(123)&127)..=(Int16(-124)&127):((-8)|1)), (((-35)&127)..(32&127):((-27)|1)), (((UInt64(UInt32(168))&127)..(UInt64(UInt16(19))&127):((Int64(Int32(110))|1))), [false, (Option<Rune>.None is (Array<Bool>) -> Unit), (Class_1669294281092_186() is Interface_1669294281092_189), ([(), (), (), (), (), (), (), (), (), ()] is Array<Bool>), (((Int16(-113)&127)..(Int16(43)&127):((77|1))) is Interface_1669294281092_190), ((Option<Range<Int64>>.None, [true, true, false, false, false, false, false, false, false, false], ###"AE0,F]TY01"###) is Interface_1669294281092_191), false, (r'F' is (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>)), false, (Option<Float32>.None is Interface_1669294281092_191)], ((Int32(-88)&127)..(Int32(2)&127):(92|1)), ((93&127)..=(48&127):((-18)|1)), Int64(UInt32(149))), ((UInt16(80)&127)..(UInt16(57)&127):((-81)|1)))
public var var_1669294281092_1011 : Option<(Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64))> = Option<(Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64))>.None
public let var_1669294281092_1072 : (Int8, Range<UInt32>) = (Int8(45), ((UInt32(216)&127)..=(UInt32(17)&127):((Int64(UInt64(26))|1))))
public let var_1669294281092_1085 : Interface_1669294281092_190 = Class_1669294281092_186()
let var_1669294281092_1088 : Array<UInt8> = [UInt8(UInt8(UInt8(113))), UInt8(204), UInt8(28), UInt8(139), UInt8(234), UInt8(Int8(Int8(104))), UInt8(224), UInt8(Int8(-36)), UInt8(106), UInt8(UInt8(UInt8(114)))]
public let var_1669294281092_1108 : Rune = r'D'
public let var_1669294281092_1149 : Option<Rune> = (Class_1669294281092_186() as Rune)
public var var_1669294281092_1222 : Range<Int16> = ((Int16(10)&127)..=(Int16(-125)&127):(81|1))
public var var_1669294281092_1265 : UInt64 = UInt64(Int32(-64))
public var var_1669294281092_1278 : Float64 = Float64((-120.0))
public var var_1669294281092_1353 : Option<Range<Int16>> = (((UInt32(176)&127)..(UInt32(65)&127):((-4)|1)) as Range<Int16>)
public let var_1669294281092_1370 : ?Range<Int64> = Option<Range<Int64>>.None
public let var_1669294281092_1395 : Int16 = Int16(-34)
public let var_1669294281092_1421 : Option<UInt16> = Option<UInt16>.None
public var var_1669294281092_1455 : Bool = false
let var_1669294281092_1481 : (Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)) = ((([UInt8(167), UInt8(127), UInt8(41), UInt8(124), UInt8(81), UInt8(110), UInt8(175), UInt8(16), UInt8(226), UInt8(115)] as UInt16) is Enum_1669294281092_796), [UInt8(Int8(122)), UInt8(Int8(-117)), UInt8(UInt8(199)), UInt8(Int8(UInt8(159))), UInt8(57), UInt8(Int8(58)), UInt8(Int8(UInt8(213))), UInt8(12), UInt8(79), UInt8(174)], UInt32(UInt8(UInt8(72))), ((Int32(-67)&127)..(Int32(Int16(UInt8(15)))&127):((Int64(UInt64(160))|1))), (((UInt64(89)&127)..=(UInt64(46)&127):((Int64(UInt16(110))|1))), [(((Int16(-32)&127)..=(Int16(-44)&127):((123|1))) is Option<UInt16>), (Option<Range<Int64>>.None is (Array<UInt64>, (Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)), Range<UInt32>, Range<Int8>) -> (Option<Range<Int64>>, Array<Bool>, String)), (Option<Float32>.None is Interface_1669294281092_191), (((UInt64(93)&127)..=(UInt64(77)&127):(8|1)) is Range<Int8>), ((((-94)&127)..=(30&127):(104|1)) is Interface_1669294281092_190), (Option<Rune>.None is Array<Int32>), true, true, (Class_1669294281092_186() is Range<UInt8>), (Int32(55) is (Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)))], ((Int32(107)&127)..=(Int32(-79)&127):((-51)|1)), ((121&127)..(40&127):((-6)|1)), Int64(UInt16(200))))
public let var_1669294281092_1620 : Option<Option<Range<Int64>>> = (Class_1669294281092_186() as Option<Range<Int64>>)
public var var_1669294281092_1629 : Interface_1669294281092_191 = Class_1669294281092_186()
public var var_1669294281092_1680 : UInt8 = UInt8(Int8(UInt8(56)))
var var_1669294281092_1720 : (Rune, Interface_1669294281092_192, Float64, Int64) = (r'E', Class_1669294281092_186(), (-125.0), (-15))
public let var_1669294281092_1769 : Enum_1669294281092_60 = Enum_1669294281092_60.defaultValue
let var_1669294281092_1776 : Bool = false
public let var_1669294281092_1812 : UInt32 = UInt32(UInt32(67))
public var var_1669294281092_1827 : Range<UInt8> = ((UInt8(47)&127)..(UInt8(150)&127):((-28)|1))

public enum Enum_1669294281092_60 {
    defaultValue
}


public interface Interface_1669294281092_192 {
    func func_1669294281092_1205(namedParam_1669294281092_1206 ! : Array<UInt64>, namedParam_1669294281092_1207 ! : (Bool, Array<UInt8>, UInt32, Range<Int32>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)), namedParam_1669294281092_1208 ! : Range<UInt32>, namedParam_1669294281092_1209 ! : Range<Int8>) : (Option<Range<Int64>>, Array<Bool>, String) { // block id: 1210
        let var_1669294281092_1239 : Array<Int32> = [Int32(-114), Int32(-88), Int32(-126), Int32(7), Int32(-6), Int32(-30), Int32(-69), Int32(121), Int32(70), Int32(-28)];
        if (true) { match ((Float32(-118.0), (), (var_1669294281092_133, var_1669294281092_1222, (((-11)&127)..=((-40)&127):((67|1))), var_1669294281092_439, ((UInt16(102)&127)..(UInt16(173)&127):(50|1))), Enum_1669294281092_60.defaultValue)[3]) {
            case _ => 
                ((Int8(-59)&127)..(Int8(-44)&127):((-107)|1))
            
        } } else { match (var_1669294281092_1239[0]) {
            case _ => 
                var_1669294281092_530 ^= (-74);
                ((Int8(56)&127)..(Int8(-43)&127):((-14)|1))
            
        } } ;
        var var_1669294281092_1361 : String = ###"1V44\"g(0UP"###;
        var var_1669294281092_1364 : Bool = (((r'L' as Float64) as Float64) is (Bool, Option<Option<Range<Int16>>>, Range<UInt64>, Array<Unit>, Range<Int32>));
        (((var_1669294281092_28, Option<Option<Range<Int16>>>.None, ((var_1669294281092_1265&127)..=(UInt64(50)&127):(((-31)|1))), var_1669294281092_697, ((Int32(74)&127)..=(Int32(113)&127):((-76)|1)))[1] ?? match (([true, false, false, true, true, true, true, false, true, true], var_1669294281092_1265, var_1669294281092_1278, true, var_1669294281092_28, var_1669294281092_942, (((UInt64(48)&127)..(UInt64(181)&127):((var_1669294281092_530|1))), [true, true, true, true, false, false, false, true, false, false], ((Int32(34)&127)..(Int32(-88)&127):(6|1)), var_1669294281092_302, var_1669294281092_237))) {
            case caseVar_1669294281092_1295 => 
                var var_1669294281092_1300 : Option<Range<Int16>> = (((102&127)..(Int64(Int8(Int8(118)))&127):((Int64(Int8(-39))|1))) as Range<Int16>);
                if (var_1669294281092_28) { var_1669294281092_1300 } else { var_1669294281092_1300 } 
            
            case (_,_,_,_ : Range<UInt16>,caseVar_1669294281092_1312,caseVar_1669294281092_1313,(caseVar_1669294281092_1314,caseVar_1669294281092_1315,caseVar_1669294281092_1316,caseVar_1669294281092_1317 : Option<Option<Rune>>,caseVar_1669294281092_1318 : Option<Array<UInt8>>)) => 
                UInt16(170);
                var var_1669294281092_1322 : Option<Range<Int16>> = (Int32(-48) as Range<Int16>);
                var_1669294281092_1322
            
            case caseVar_1669294281092_1327 : Range<Int32> => 
                var_1669294281092_155;
                var_1669294281092_482;
                Option<Range<Int16>>.None
            
            case (caseVar_1669294281092_1334,_,caseVar_1669294281092_1335 : Enum_1669294281092_60,_ : Option<Option<Rune>>,caseVar_1669294281092_1336,(caseVar_1669294281092_1337,caseVar_1669294281092_1338,caseVar_1669294281092_1339 : (Bool, Option<Option<Range<Int16>>>, Range<UInt64>, Array<Unit>, Range<Int32>),(caseVar_1669294281092_1340 : Range<Int64>,caseVar_1669294281092_1341 : Option<Bool>,caseVar_1669294281092_1342,caseVar_1669294281092_1343,caseVar_1669294281092_1344),_),(caseVar_1669294281092_1345 : Enum_1669294281092_60,caseVar_1669294281092_1346,_,_,_ : Option<UInt16>)) => 
                Option<Range<Int16>>.Some(((Int16(106)&127)..=(Int16(73)&127):((-122)|1)))
            
            case _ => 
                var_1669294281092_1353
            
        }) ?? match ((var_1669294281092_1361, var_1669294281092_1364, var_1669294281092_1370)[2]) {
            case caseVar_1669294281092_1375 : UInt32 => 
                ();
                ((var_1669294281092_75&127)..(var_1669294281092_75&127):((var_1669294281092_530|1)))
            
            case caseVar_1669294281092_1384 => 
                var_1669294281092_1222
            
            case _ => 
                var_1669294281092_482;
                ();
                ((Int16(69)&127)..=(var_1669294281092_1395&127):(((-128)|1)))
            
            case _ => 
                var_1669294281092_1222
            
        });
        var var_1669294281092_1410 : UInt16 = UInt16(Int16(UInt8(UInt8(189))));
        (try { // block id: 1405
            Option<Float64>.Some((-67.0));
            var_1669294281092_1410 ^= UInt16(181);
            var_1669294281092_1278
        } catch (_) { // block id: 1417
            if (var_1669294281092_28) { var_1669294281092_1421 } else { Option<UInt16>.Some(var_1669294281092_269) } ;
            var_1669294281092_1239;
            1.0
        }, (Option<Range<Int64>>.None, [true, true, true, false, false, false, true, false, true, true], var_1669294281092_1361), if (var_1669294281092_28) { var_1669294281092_439 } else { (((UInt64(223)&127)..(UInt64(178)&127):(24|1)), [true, false, false, true, false, false, true, true, false, false], var_1669294281092_155, var_1669294281092_302, 94) } , (var_1669294281092_1278, (Option<Range<Int64>>.Some(var_1669294281092_302), [false, var_1669294281092_28, var_1669294281092_1364, var_1669294281092_28, true, var_1669294281092_28, true, var_1669294281092_1455, var_1669294281092_28, false], ###"+i${var_1669294281092_1361}@${var_1669294281092_1361}wbI]${var_1669294281092_1361}@${var_1669294281092_1361}_%${var_1669294281092_1361}"###), (((UInt64(228)&127)..=(UInt64(103)&127):((-123)|1)), [var_1669294281092_1455, true, var_1669294281092_1364, var_1669294281092_28, false, true, false, false, var_1669294281092_1455, true], var_1669294281092_155, var_1669294281092_302, var_1669294281092_237), [true, true, false, true, true, false, true, true, true, false])[3])[1]
    }

}

public interface Interface_1669294281092_193 {

}

public interface Interface_1669294281092_191 <: Interface_1669294281092_192 & Interface_1669294281092_193 {

}

public interface Interface_1669294281092_190 <: Interface_1669294281092_191 & Interface_1669294281092_193 {

}

public interface Interface_1669294281092_189 <: Interface_1669294281092_190 {

}

public open class Class_1669294281092_186 <: Interface_1669294281092_189 {
    public init() { // block id: 188

    }
;
    public static prop var_1669294281092_196 : (Option<Range<Int64>>, Array<Bool>, String) { // block id: 197
        get() { // block id: 199
            Class_1669294281092_186();
            ();
            ((((Int16(19)&127)..=(Int16(82)&127):((-17)|1)) as Range<Int64>), [(((Int32(55)&127)..(Int32(-84)&127):((1|1))) is UInt64), false, (Option<Float32>.None is Int16), false, true, true, (UInt8(121) is UInt64), (Option<Array<UInt8>>.None is Float32), (104.0 is UInt16), false], ###"r'x]\\'>729Q"###)
        }

    };
    public static prop var_1669294281092_376 : (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64) { // block id: 377
        get() { // block id: 379
            ();
            (((UInt64(112)&127)..(UInt64(66)&127):((Int64(Int8(-98))|1))), [false, false, (((UInt32(93)&127)..(UInt32(101)&127):(((-66)|1))) is Enum_1669294281092_60), (((Int32(-64)&127)..=(Int32(-41)&127):(((-72)|1))) is Array<UInt8>), (((UInt64(180)&127)..(UInt64(230)&127):((-18)|1)) is Float64), (Class_1669294281092_186() is Array<Bool>), true, false, (Int16(-52) is Range<Int8>), (Class_1669294281092_186() is Bool)], ((Int32(4)&127)..=(Int32(-105)&127):((Int64(Int32(53))|1))), ((Int64(UInt32(109))&127)..((-29)&127):((8|1))), 14)
        }

    };
    public init(optionalParam_1669294281092_881 ! : Array<UInt8> = [UInt8(241), UInt8(225), UInt8(Int8(UInt8(Int8(-54)))), UInt8(249), UInt8(131), UInt8(UInt8(211)), UInt8(Int8(UInt8(Int8(-96)))), UInt8(81), UInt8(43), UInt8(141)], namedParam_1669294281092_900 ! : Rune, optionalParam_1669294281092_901 ! : Rune = r'd', namedParam_1669294281092_903 ! : UInt8) { // block id: 904
        var loopTimeVar_1669294281092_927 : Int64 = 0;
        do {
            loopTimeVar_1669294281092_927++;
            (Option<Rune>.None ?? r'l');
            ()
        } while (((var_1669294281092_913 ?? var_1669294281092_28) && var_1669294281092_28) && loopTimeVar_1669294281092_927 < 100 ) ;
        ((([false, false, true, true, true, false, false, false, false, false], var_1669294281092_19, (-55.0), false, false, var_1669294281092_942, var_1669294281092_502)[4] as UInt16) ?? var_1669294281092_269);
        let var_1669294281092_1016 : Array<UInt8> = [UInt8(246), UInt8(115), UInt8(183), UInt8(UInt8(Int8(UInt8(203)))), UInt8(Int8(-120)), UInt8(Int8(UInt8(112))), UInt8(Int8(UInt8(169))), UInt8(Int8(-114)), UInt8(UInt8(UInt8(212))), UInt8(Int8(-59))];
        let var_1669294281092_1041 : UInt32 = UInt32(UInt16(UInt16(UInt8(63))));
        var var_1669294281092_1048 : (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64) = (((UInt64(103)&127)..(UInt64(78)&127):((100|1))), [false, false, false, true, true, false, false, false, false, true], ((Int32(35)&127)..=(Int32(UInt8(Int8(-116)))&127):((Int64(Int32(Int8(45)))|1))), ((45&127)..(2&127):((-81)|1)), Int64(UInt16(Int8(25))));
        if ((var_1669294281092_1011 ?? (false, var_1669294281092_1016, var_1669294281092_1041, ((Int32(18)&127)..(Int32(-73)&127):(110|1)), var_1669294281092_1048))[0]) { match (var_1669294281092_1072[1]) {
            case _ => 
                Class_1669294281092_186()
            
        } } else { var_1669294281092_1085 } 
    }

}

public func func_1669294281092_241(namedParam_1669294281092_242 ! : (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), namedParam_1669294281092_243 ! : Option<Range<Int64>>, optionalParam_1669294281092_244 ! : Range<UInt16> = ((UInt16(35)&127)..=(UInt16(203)&127):((-75)|1)), optionalParam_1669294281092_246 ! : Array<UInt8> = [UInt8(100), UInt8(163), UInt8(69), UInt8(UInt8(60)), UInt8(107), UInt8(Int8(UInt8(25))), UInt8(106), UInt8(187), UInt8(Int8(Int8(-27))), UInt8(Int8(-71))]) : Range<Int64> { // block id: 264
    let var_1669294281092_297 : Int64 = Int64(UInt16(UInt8(27)));
    if (try { // block id: 267
        var_1669294281092_269;
        if (false) { ((Int32(-83)&127)..=(Int32(-93)&127):(21|1)) } else { var_1669294281092_155 } ;
        true
    } catch (_) { // block id: 276
        var_1669294281092_28
    } finally { // block id: 278
        var_1669294281092_28
    }) { (((-21)&127)..(63&127):((-89)|1)) } else { try { // block id: 282
        var_1669294281092_133;
        var var_1669294281092_287 : UInt64 = UInt64(UInt32(UInt16(144)));
        var_1669294281092_19 |= var_1669294281092_287;
        if (var_1669294281092_28) { ((var_1669294281092_237&127)..=((-98)&127):((var_1669294281092_297|1))) } else { var_1669294281092_302 } 
    } catch (_) { // block id: 309
        ((93&127)..=((-114)&127):((13|1)))
    } } 
}

public func func_1669294281092_544(param_1669294281092_545 : Interface_1669294281092_191) : Option<Range<Int64>> { // block id: 546
    var var_1669294281092_592 : ?Range<Int64> = Option<Range<Int64>>.None;
    match (try { // block id: 549
        ((UInt8(227)&127)..=(UInt8(186)&127):((-7)|1))
    } finally { // block id: 551
        ();
        ((UInt8(240)&127)..=(var_1669294281092_556&127):(((-23)|1)))
    }) {
        case caseVar_1669294281092_561 => 
            var_1669294281092_564;
            if (var_1669294281092_28) { var_1669294281092_592 } else { Option<Range<Int64>>.Some((((-90)&127)..(15&127):(51|1))) } 
        
        case _ => 
            Option<Range<Int64>>.Some(((118&127)..=(84&127):((-102)|1)))
        
        case _ : Array<UInt64> => 
            var_1669294281092_12;
            if (var_1669294281092_28) { Option<Range<Int64>>.Some((((-50)&127)..(120&127):((97|1)))) } else { Option<Range<Int64>>.Some(((78&127)..(86&127):(76|1))) } 
        
        case _ => 
            ();
            Class_1669294281092_186();
            var_1669294281092_592
        
    }
}


public func func_1669294281092_659(param_1669294281092_660 : (Option<Range<Int64>>, Array<Bool>, String), param_1669294281092_661 : Rune, param_1669294281092_662 : Interface_1669294281092_192) : Float32 { // block id: 663
    Float32(-37.0) + (if (true) { // block id: 669
        var_1669294281092_269;
        Float32(-112.0)
    } else { // block id: 672
        var_1669294281092_38 / Float32((Int32(Float32(-35.0))) | 1)
    } - try { // block id: 677
        var_1669294281092_38 * Float32(11.0)
    } finally { // block id: 681
        var_1669294281092_38 - Float32(-64.0)
    })
}


public func func_1669294281092_691(param_1669294281092_692 : Array<UInt64>) : Range<Int32> { // block id: 693
    var_1669294281092_697[4];
    func func_1669294281092_701(optionalParam_1669294281092_702 ! : Array<Bool> = [true, true, (Option<Float64>.Some((-26.0)) is Array<Unit>), false, ((((Int8(-103)&127)..=(Int8(91)&127):(((-38)|1))), ((Int16(-62)&127)..(Int16(-23)&127):(((-12)|1))), ((52&127)..=(49&127):((91|1))), (((UInt64(240)&127)..=(UInt64(4)&127):(((-5)|1))), [true, true, false, true, true, true, true, true, true, false], ((Int32(-107)&127)..(Int32(-48)&127):((-108)|1)), (((-82)&127)..(110&127):(84|1)), 110), ((UInt16(104)&127)..(UInt16(162)&127):(((-47)|1)))) is Option<Array<UInt8>>), false, true, false, (((UInt8(6)&127)..=(UInt8(173)&127):(58|1)) is Option<Range<Int64>>), false]) : Unit { // block id: 753

    }
;
    func_1669294281092_701();
    let var_1669294281092_760 : Option<Range<Int32>> = (Float64(Float32(-82.0)) as Range<Int32>);
    (var_1669294281092_760 ?? try { // block id: 765
        var_1669294281092_318;
        var_1669294281092_28 &&= true;
        ((var_1669294281092_12&127)..=(Int32(-123)&127):((var_1669294281092_237|1)))
    } finally { // block id: 774
        var var_1669294281092_776 : Unit = ();
        var_1669294281092_776;
        ((Int32(-32)&127)..(Int32(56)&127):(63|1))
    })
}


public enum Enum_1669294281092_796 {
    defaultValue |
    enumValue_1669294281092_817(UInt32) |
    enumValue_1669294281092_823(Interface_1669294281092_192)
}





func func_1669294281092_687(namedParam_1669294281092_688 ! : Range<UInt32>) : Interface_1669294281092_192 { // block id: 689
    (var_1669294281092_786 ?? if (false) { [UInt64(97), UInt64(183), UInt64(53), UInt64(221), UInt64(10), UInt64(156), UInt64(212), UInt64(161), UInt64(237), UInt64(191)] } else { var_1669294281092_564 } )|>func_1669294281092_691;
    var var_1669294281092_813 : Enum_1669294281092_796 = Enum_1669294281092_796.defaultValue;
    let var_1669294281092_821 : Enum_1669294281092_796 = Enum_1669294281092_796.enumValue_1669294281092_823(Class_1669294281092_186());
    let var_1669294281092_854 : Bool = true;
    var var_1669294281092_863 : UInt32 = UInt32(95);
    match (try { // block id: 801
        var_1669294281092_803;
        if (true) { Option<Range<Int64>>.None } else { Option<Range<Int64>>.Some(((53&127)..(49&127):(62|1))) } ;
        [Enum_1669294281092_796.defaultValue, var_1669294281092_813, Enum_1669294281092_796.defaultValue, Enum_1669294281092_796.enumValue_1669294281092_817(UInt32(23)), var_1669294281092_821, var_1669294281092_813, var_1669294281092_821, var_1669294281092_813, var_1669294281092_830, var_1669294281092_813]
    } catch (_) { // block id: 833
        [var_1669294281092_830, var_1669294281092_837, Enum_1669294281092_796.enumValue_1669294281092_817(UInt32(227)), var_1669294281092_813, Enum_1669294281092_796.enumValue_1669294281092_823(Class_1669294281092_186()), Enum_1669294281092_796.enumValue_1669294281092_817(UInt32(66)), var_1669294281092_821, var_1669294281092_830, var_1669294281092_830, var_1669294281092_837]
    } finally { // block id: 850
        var_1669294281092_482;
        if (var_1669294281092_854) { Class_1669294281092_186() } else { Class_1669294281092_186() } ;
        [var_1669294281092_813, Enum_1669294281092_796.enumValue_1669294281092_817(var_1669294281092_863), var_1669294281092_813, var_1669294281092_813, var_1669294281092_830, var_1669294281092_821, var_1669294281092_837, Enum_1669294281092_796.defaultValue, var_1669294281092_813, Enum_1669294281092_796.defaultValue]
    }[6]) {
        case _ => 
            ();
            var var_1669294281092_1112 : Class_1669294281092_186 = Class_1669294281092_186(optionalParam_1669294281092_881 : [UInt8(188), UInt8(Int8(Int8(122))), UInt8(Int8(Int8(99))), UInt8(53), UInt8(Int8(98)), UInt8(Int8(UInt8(43))), UInt8(Int8(UInt8(78))), UInt8(UInt8(197)), UInt8(UInt8(Int8(-31))), UInt8(212)], namedParam_1669294281092_900 : r'2', optionalParam_1669294281092_901 : r'Q', namedParam_1669294281092_903 : UInt8(230));
            if (true) { Class_1669294281092_186(optionalParam_1669294281092_881 : var_1669294281092_1088, namedParam_1669294281092_900 : var_1669294281092_1108, namedParam_1669294281092_903 : var_1669294281092_556) } else { var_1669294281092_1112 } 
        
    };
    match (((Option<Option<Rune>>.Some(var_1669294281092_1149) ?? var_1669294281092_1149) ?? var_1669294281092_1108)) {
        case r'c' | r'v' => 
            UInt16(175) >> ((UInt16(59)) & 7);
            var_1669294281092_863;
            Class_1669294281092_186()
        
        case r'i' => 
            ();
            var_1669294281092_485
        
        case r'k' | r'1' | r'n' => 
            [var_1669294281092_19, UInt64(70), UInt64(12), UInt64(115), var_1669294281092_19, UInt64(219), var_1669294281092_19, UInt64(18), UInt64(75), var_1669294281092_19];
            if (var_1669294281092_854) { Class_1669294281092_186() } else { Class_1669294281092_186() } 
        
        case _ => 
            if (true) { Class_1669294281092_186(namedParam_1669294281092_900 : var_1669294281092_1108, optionalParam_1669294281092_901 : r'R', namedParam_1669294281092_903 : var_1669294281092_556) } else { Class_1669294281092_186(optionalParam_1669294281092_881 : var_1669294281092_1088, namedParam_1669294281092_900 : var_1669294281092_1108, optionalParam_1669294281092_901 : var_1669294281092_1108, namedParam_1669294281092_903 : UInt8(239)) } 
        
    }
}



public func func_1669294281092_687() : Float32 { // block id: 649
    var_1669294281092_651;
    let var_1669294281092_1200 : UInt32 = UInt32(27);
    var var_1669294281092_1595 : UInt8 = UInt8(246);
    let var_1669294281092_1599 : Class_1669294281092_186 = Class_1669294281092_186();
    func_1669294281092_659(func_1669294281092_687(namedParam_1669294281092_688 : ((var_1669294281092_1200&127)..=(UInt32(157)&127):((var_1669294281092_530|1)))).func_1669294281092_1205(namedParam_1669294281092_1206 : [UInt64(166), UInt64(11), UInt64(90), UInt64(203), UInt64(170), UInt64(96), UInt64(217), UInt64(108), UInt64(56), UInt64(55)], namedParam_1669294281092_1207 : var_1669294281092_1481, namedParam_1669294281092_1208 : ((UInt32(171)&127)..(UInt32(225)&127):(121|1)), namedParam_1669294281092_1209 : ((Int8(-81)&127)..=(Int8(39)&127):(36|1))), r'8', match (try { // block id: 1562
        if (var_1669294281092_1455) { var_1669294281092_1108 } else { r'0' } 
    } finally { // block id: 1567
        var_1669294281092_1108
    }) {
        case _ => 
            var_1669294281092_482;
            if (var_1669294281092_28) { Class_1669294281092_186(namedParam_1669294281092_900 : r'R', namedParam_1669294281092_903 : UInt8(143)) } else { Class_1669294281092_186(namedParam_1669294281092_900 : var_1669294281092_1108, optionalParam_1669294281092_901 : var_1669294281092_1108, namedParam_1669294281092_903 : UInt8(88)) } 
        
        case r'n' | r'U' => 
            var_1669294281092_1455 &&= var_1669294281092_1455;
            var_1669294281092_482;
            Class_1669294281092_186()
        
        case r'd' => 
            var_1669294281092_1595 |= var_1669294281092_1595;
            var_1669294281092_1599;
            Class_1669294281092_186()
        
        case r'H' => 
            var_1669294281092_485
        
        case _ => 
            var_1669294281092_482;
            Class_1669294281092_186()
        
    })
}

public func func_1669294281092_628(param_1669294281092_629 : Range<Int64>) : Float64 { // block id: 630
    var_1669294281092_530 |= try { // block id: 634
        var_1669294281092_530
    } catch (_) { // block id: 636
        30
    };
    (var_1669294281092_644 ?? Float64(func_1669294281092_687()))
}


func func_1669294281092_230(param_1669294281092_231 : (Option<Range<Int64>>, Array<Bool>, String), param_1669294281092_232 : (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>), param_1669294281092_233 : Option<Float32>, param_1669294281092_234 : Unit) : Range<Int64> { // block id: 235
    var_1669294281092_237;
    var var_1669294281092_423 : Option<Float32> = (((UInt16(229)&127)..=(UInt16(UInt16(Int16(-78)))&127):((Int64(Int16(UInt8(89)))|1))) as Float32);
    let var_1669294281092_523 : UInt64 = UInt64(UInt32(UInt16(UInt16(Int8(-124)))));
    func_1669294281092_241(namedParam_1669294281092_242 : if (var_1669294281092_318[4]) { (Class_1669294281092_186.var_1669294281092_376) } else { match (var_1669294281092_423) {
        case _ => 
            if (var_1669294281092_28) { var_1669294281092_439 } else { var_1669294281092_439 } 
        
        case caseVar_1669294281092_479 => 
            var_1669294281092_482;
            var_1669294281092_485;
            var_1669294281092_439
        
        case caseVar_1669294281092_490 : Interface_1669294281092_190 => 
            var_1669294281092_482;
            if (true) { (((UInt64(117)&127)..(UInt64(90)&127):(79|1)), [true, false, false, true, false, false, false, false, false, true], ((Int32(5)&127)..(Int32(113)&127):((-9)|1)), ((110&127)..=(46&127):(39|1)), (-113)) } else { var_1669294281092_502 } 
        
        case _ => 
            if (true) { ###"O337dvq63S"### } else { """
Q(O:E
}%1;X
""" } ;
            (((var_1669294281092_19&127)..=(var_1669294281092_523&127):((var_1669294281092_530|1))), [false, false, true, false, true, false, false, false, false, true], ((var_1669294281092_12&127)..=(Int32(-7)&127):(((-75)|1))), ((var_1669294281092_237&127)..(var_1669294281092_530&127):((var_1669294281092_237|1))), (-13))
        
    } } , namedParam_1669294281092_243 : (var_1669294281092_1629|>{ lambdaParameter_1669294281092_621 : Interface_1669294281092_191 => try { // block id: 624
        Option<Range<Int64>>.None
    } finally { // block id: 626
        let var_1669294281092_1611 : (Range<Int64>) -> Float64 = func_1669294281092_628;
        var_1669294281092_302|>var_1669294281092_1611;
        (var_1669294281092_1620 ?? Option<Range<Int64>>.Some((((-78)&127)..=(116&127):((var_1669294281092_530|1)))))
    } }))
}

public func func_1669294281092_175(param_1669294281092_176 : Enum_1669294281092_60) : Option<Array<UInt8>> { // block id: 177
    let var_1669294281092_1632 : (Option<Range<Int64>>, Array<Bool>, String) = ((UInt16(UInt8(172)) as Range<Int64>), [false, false, false, true, true, true, false, false, true, true], ###"T/'h~<Z[si"###);
    (Class_1669294281092_186.var_1669294281092_196[0] ?? ((Class_1669294281092_186() as Range<Int64>) ?? func_1669294281092_230(var_1669294281092_1632, var_1669294281092_942, Option<Float32>.None, ())));
    if (try { // block id: 1644
        var_1669294281092_482;
        var_1669294281092_482;
        var_1669294281092_1455
    } catch (e: Exception) { // block id: 1648
        var_1669294281092_1278 *= (-95.0);
        var_1669294281092_269 != UInt16(241)
    } finally { // block id: 1655
        var_1669294281092_269;
        let var_1669294281092_1659 : Int8 = Int8(-11);
        var_1669294281092_1659 != var_1669294281092_1659
    }) { [var_1669294281092_485, Class_1669294281092_186(), Class_1669294281092_186(), var_1669294281092_485, var_1669294281092_485, Class_1669294281092_186(namedParam_1669294281092_900 : r's', optionalParam_1669294281092_901 : var_1669294281092_1108, namedParam_1669294281092_903 : var_1669294281092_556), var_1669294281092_485, Class_1669294281092_186(optionalParam_1669294281092_881 : [UInt8(110), UInt8(89), UInt8(95), UInt8(207), UInt8(105), UInt8(136), UInt8(41), UInt8(212), UInt8(228), UInt8(72)], namedParam_1669294281092_900 : r'f', optionalParam_1669294281092_901 : r'7', namedParam_1669294281092_903 : var_1669294281092_1680), Class_1669294281092_186(), Class_1669294281092_186(optionalParam_1669294281092_881 : [var_1669294281092_556, UInt8(34), UInt8(221), var_1669294281092_1680, var_1669294281092_1680, var_1669294281092_556, UInt8(80), var_1669294281092_1680, var_1669294281092_1680, UInt8(123)], namedParam_1669294281092_900 : var_1669294281092_1108, optionalParam_1669294281092_901 : r'V', namedParam_1669294281092_903 : var_1669294281092_1680)][2] } else { try { // block id: 1704
        [true, false, var_1669294281092_1455, var_1669294281092_28, false, false, true, true, var_1669294281092_28, true];
        ();
        if (false) { var_1669294281092_1720 } else { (var_1669294281092_1108, Class_1669294281092_186(optionalParam_1669294281092_881 : [var_1669294281092_556, UInt8(228), UInt8(10), var_1669294281092_1680, UInt8(93), UInt8(178), UInt8(178), UInt8(88), UInt8(57), UInt8(225)], namedParam_1669294281092_900 : r'8', optionalParam_1669294281092_901 : var_1669294281092_1108, namedParam_1669294281092_903 : var_1669294281092_556), 32.0, var_1669294281092_530) } 
    } catch (_) { // block id: 1745
        var_1669294281092_837;
        ();
        var_1669294281092_1720
    } finally { // block id: 1749
        (var_1669294281092_1108, Class_1669294281092_186(), 109.0, 99)
    }[1] } ;
    try { // block id: 1757
        var var_1669294281092_1761 : Option<Array<UInt8>> = (false as Array<UInt8>);
        if (var_1669294281092_28) { var_1669294281092_1761 } else { var_1669294281092_1761 } 
    } finally { // block id: 1765
        ();
        (var_1669294281092_1769 as Float64);
        ([false, true, var_1669294281092_1776, true, false, true, var_1669294281092_1455, var_1669294281092_28, false, true] as Array<UInt8>)
    }
}

public func func_1669294281092_123(param_1669294281092_124 : Range<UInt16>) : UInt8 { // block id: 125
    (var_1669294281092_133, ((Int16(92)&127)..(Int16(-110)&127):(107|1)), ((82&127)..((-75)&127):((-41)|1)), (var_1669294281092_143, [true, true, true, false, false, true, false, false, false, false], var_1669294281092_155, (((-112)&127)..=(114&127):(58|1)), (-31)), ((UInt16(199)&127)..=(UInt16(211)&127):(103|1)))[3][1][7];
    func func_1669294281092_164(param_1669294281092_165 : Range<UInt8>) : UInt8 { // block id: 166
        var var_1669294281092_1786 : (Enum_1669294281092_60) -> Option<Array<UInt8>> = func_1669294281092_175;
        ((var_1669294281092_63|>var_1669294281092_1786) ?? [var_1669294281092_556, var_1669294281092_1680, UInt8(26), var_1669294281092_556, var_1669294281092_556, UInt8(57), var_1669294281092_1680, UInt8(116), UInt8(88), UInt8(208)])[0]
    }
;
    let var_1669294281092_1816 : Unit = ();
    func_1669294281092_164(match (var_1669294281092_1085) {
        case caseVar_1669294281092_1805 : (Float64, (Option<Range<Int64>>, Array<Bool>, String), (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Array<Bool>) => 
            if (false) { var_1669294281092_837 } else { Enum_1669294281092_796.enumValue_1669294281092_817(var_1669294281092_1812) } ;
            var_1669294281092_1816;
            ((UInt8(120)&127)..(UInt8(244)&127):(75|1))
        
        case _ => 
            var var_1669294281092_1822 : Option<Option<Range<Int16>>> = (Class_1669294281092_186() as Option<Range<Int16>>);
            var_1669294281092_1822;
            var_1669294281092_482;
            var_1669294281092_1827
        
    })
}

public func func_1669294281092_98() : Bool { // block id: 99
    var loopTimeVar_1669294281092_120 : Int64 = 0;
    do {
        loopTimeVar_1669294281092_120++;

    } while ((try { // block id: 113
        [false, false, false, true, true, false, true, true, true, true]
    } catch (e: Exception) { // block id: 115
        [true, false, false, true, false, false, true, true, true, true]
    }[4]) && loopTimeVar_1669294281092_120 < 100 ) ;
    var var_1669294281092_1830 : (Range<UInt16>) -> UInt8 = func_1669294281092_123;
    ((var_1669294281092_651|>var_1669294281092_1830) is (Array<Bool>, UInt64, Float64, Bool, Bool, (Range<Int8>, Range<Int16>, Range<Int64>, (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64), Range<UInt16>), (Range<UInt64>, Array<Bool>, Range<Int32>, Range<Int64>, Int64)))
}

public func func_1669294281092_23(param_1669294281092_24 : UInt16) : Bool { // block id: 25
    var loopTimeVar_1669294281092_45 : Int64 = 0;
    while ((var_1669294281092_28) && loopTimeVar_1669294281092_45 < 100 ) {
        loopTimeVar_1669294281092_45++;
        (Option<Float32>.Some(var_1669294281092_38) ?? var_1669294281092_38);
        var var_1669294281092_42 : Unit = ();
        var_1669294281092_42
    };
    try { // block id: 47
        if (true) { r'z' } else { r'w' } ;
        if (var_1669294281092_28) { // block id: 54
            false
        } else { // block id: 56
            false
        }
    } catch (e: Exception) { // block id: 58
        match (var_1669294281092_63) {
            case _ => 
                var_1669294281092_19
            
            case defaultValue => 
                var_1669294281092_38;
                var_1669294281092_75 /= ((var_1669294281092_75) | 1);
                var var_1669294281092_85 : UInt64 = UInt64(24);
                UInt64(71) | var_1669294281092_85
            
            case defaultValue => 
                (-63.0);
                Int8(-81);
                UInt64(201)
            
            case _ => 
                UInt64(181)
            
        };
        Int8(48);
        func_1669294281092_98()
    } finally { // block id: 1833
        ();
        if (var_1669294281092_28) { // block id: 1837
            Option<Array<UInt8>>.Some([UInt8(27), UInt8(241), UInt8(103), UInt8(29), UInt8(80), UInt8(92), UInt8(83), UInt8(249), UInt8(246), UInt8(182)]);
            var_1669294281092_482;
            var_1669294281092_1776
        } else { // block id: 1842
            ();
            var_1669294281092_482;
            true
        }
    }
}

main(): Int64 {
    try {
        var var_1669294281092_1847 : (UInt16) -> Bool = func_1669294281092_23;
        if (false) { // block id: 9
            var_1669294281092_12++;
            var_1669294281092_12;
            var_1669294281092_19 << ((var_1669294281092_19) & 7)
        } else if ((UInt16(139)|>var_1669294281092_1847)) { // block id: 1850
            var_1669294281092_19
        } else { // block id: 1852
            ();
            var_1669294281092_482;
            UInt64(3)
        };
        var_1669294281092_237
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1669294281092_12*var_1669294281092_12), 64)
        crccheck.updateBuffer(UInt64(var_1669294281092_19*var_1669294281092_19), 64)
        crccheck.updateBuffer(UInt64(var_1669294281092_269*var_1669294281092_269), 64)
        crccheck.updateBuffer(UInt64(var_1669294281092_1680*var_1669294281092_1680), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
extend Class_1669294281092_186 {

}

extend Enum_1669294281092_796 {

}

