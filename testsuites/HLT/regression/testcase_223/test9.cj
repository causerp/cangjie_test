/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
 * This source file is part of the Cangjie project, licensed under Apache-2.0
 * with Runtime Library Exception.
 * 
 * See https://cangjie-lang.cn/pages/LICENSE for license information.
 */
 
// LEVEL: 0
// EXEC: %compiler %overflow_wrapping %cmp_opt %f -o %output
// RUN-EXEC: %run %run_opt %output %run_args 

public var var_1669294698797_27 : ?Array<String> = (((UInt16(UInt8(39))&127)..=(UInt16(Int16(115))&127):(((-82)|1))) as Array<String>)
public let var_1669294698797_63 : UInt16 = UInt16(220)
public var var_1669294698797_95 : UInt32 = UInt32(163)
public let var_1669294698797_98 : Int64 = Int64(UInt16(172))
public var var_1669294698797_106 : UInt32 = UInt32(UInt32(216))
public let var_1669294698797_114 : Bool = true
public let var_1669294698797_120 : Range<UInt32> = ((UInt32(114)&127)..=(UInt32(191)&127):(39|1))
public var var_1669294698797_141 : Array<Range<UInt32>> = [((UInt32(98)&127)..=(UInt32(176)&127):(47|1)), ((UInt32(102)&127)..=(UInt32(218)&127):(93|1)), ((UInt32(UInt16(192))&127)..(UInt32(Int32(41))&127):((Int64(Int16(UInt16(208)))|1))), ((UInt32(108)&127)..=(UInt32(171)&127):(23|1)), ((UInt32(170)&127)..(UInt32(95)&127):((Int64(Int32(UInt8(197)))|1))), ((UInt32(209)&127)..=(UInt32(125)&127):((Int64(UInt8(27))|1))), ((UInt32(130)&127)..(UInt32(52)&127):((-49)|1)), ((UInt32(88)&127)..(UInt32(7)&127):((-65)|1)), ((UInt32(36)&127)..=(UInt32(169)&127):((-10)|1)), ((UInt32(178)&127)..=(UInt32(39)&127):(60|1))]
var var_1669294698797_197 : UInt8 = UInt8(15)
public let var_1669294698797_218 : Array<Bool> = [(() is Option<Array<String>>), false, true, true, ('N' is Range<Int32>), (((UInt64(119)&127)..(UInt64(UInt64(1))&127):((Int64(Int32(-43))|1))) is Rune), true, (true is Float64), false, false]
public var var_1669294698797_333 : (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64) = (UInt32(124), UInt16(61), Int64(Int32(78)), (), (-101.0), ((UInt64(UInt16(108))&127)..(UInt64(236)&127):((Int64(UInt16(Int8(-96)))|1))), Int64(Int16(95)))
public var var_1669294698797_403 : Int32 = Int32(16)
public var var_1669294698797_413 : Float32 = Float32(Float32(19.0))
public var var_1669294698797_420 : Unit = ()
public var var_1669294698797_437 : Array<UInt64> = [UInt64(168), UInt64(220), UInt64(Int16(UInt8(UInt8(232)))), UInt64(UInt64(UInt64(102))), UInt64(229), UInt64(Int64(UInt8(UInt8(241)))), UInt64(Int64(UInt64(145))), UInt64(46), UInt64(254), UInt64(125)]
public let var_1669294698797_495 : Option<Unit> = Option<Unit>.None
public let var_1669294698797_518 : Bool = ((((-111)&127)..((-61)&127):((-17)|1)) is (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64))
public let var_1669294698797_532 : UInt64 = UInt64(145)
public let var_1669294698797_553 : (Range<UInt32>, Float32, Unit, Bool) = (((UInt32(Int16(Int8(103)))&127)..=(UInt32(UInt8(Int8(112)))&127):((8|1))), Float32(Float32(Float32(Float32(17.0)))), (), true)
public let var_1669294698797_571 : Int8 = Int8(-76)
public let var_1669294698797_591 : Array<Option<Unit>> = [Option<Unit>.None, Option<Unit>.None, Option<Unit>.None, (((42 is Interface_1669294698797_258) as Array<String>) as Unit), Option<Unit>.None, (((Int32(101)&127)..=(Int32(-34)&127):((18|1))) as Unit), Option<Unit>.None, Option<Unit>.None, (((Int32(-91)&127)..=(Int32(71)&127):((-76)|1)) as Unit), (Class_1669294698797_255() as Unit)]
public let var_1669294698797_618 : ?Array<String> = Option<Array<String>>.None
public let var_1669294698797_684 : ?Bool = Option<Bool>.None
public var var_1669294698797_692 : UInt64 = UInt64(Int64(Int8(-17)))
public var var_1669294698797_765 : UInt64 = UInt64(Int64(UInt32(UInt32(108))))
public let var_1669294698797_779 : Array<UInt64> = [UInt64(UInt64(54)), UInt64(UInt8(148)), UInt64(Int8(UInt8(UInt8(205)))), UInt64(Int32(Int32(Int32(77)))), UInt64(208), UInt64(UInt16(UInt8(Int8(-109)))), UInt64(Int8(UInt8(104))), UInt64((-104)), UInt64(UInt16(UInt16(Int8(-38)))), UInt64(UInt64(65))]
public let var_1669294698797_819 : Class_1669294698797_255 = Class_1669294698797_255()
var var_1669294698797_854 : Option<UInt64> = Option<UInt64>.None
public let var_1669294698797_860 : Array<Unit> = [(), (), (), (), (), (), (), (), (), ()]
public var var_1669294698797_868 : Int16 = Int16(UInt8(37))
public let var_1669294698797_882 : Bool = true
public var var_1669294698797_897 : Struct_1669294698797_171 = Struct_1669294698797_171()
public let var_1669294698797_927 : Float64 = 94.0
public var var_1669294698797_960 : Bool = true
public let var_1669294698797_982 : Int64 = Int64(Int16(-123))
public let var_1669294698797_990 : Interface_1669294698797_261 = Class_1669294698797_255()
public var var_1669294698797_1020 : ((UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64), Range<Int32>, Enum_1669294698797_321) = ((UInt32(142), UInt16(233), Int64((-90)), (), 73.0, ((UInt64(209)&127)..=(UInt64(56)&127):((-11)|1)), (-9)), ((Int32(72)&127)..(Int32(6)&127):(4|1)), Enum_1669294698797_321.defaultValue)
public let var_1669294698797_1035 : Interface_1669294698797_259 = Class_1669294698797_255()
public var var_1669294698797_1044 : (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64) = (UInt32(Int8(-39)), UInt16(Int8(Int8(Int8(-42)))), Int64(Int8(118)), (), Float64(Float32(72.0)), ((UInt64(43)&127)..=(UInt64(112)&127):((-43)|1)), Int64(UInt32(40)))
public var var_1669294698797_1074 : Enum_1669294698797_1071 = Enum_1669294698797_1071.defaultValue
public var var_1669294698797_1091 : Int64 = (-1)
public var var_1669294698797_1098 : (Int64, Class_1669294698797_255) = ((-39), Class_1669294698797_255())
public var var_1669294698797_1170 : Range<UInt8> = ((UInt8(39)&127)..=(UInt8(26)&127):(55|1))
public var var_1669294698797_1183 : UInt64 = UInt64(144)
public var var_1669294698797_1222 : UInt64 = UInt64(Int32(Int8(UInt8(52))))
var var_1669294698797_1258 : ?Float64 = ([UInt64(112), UInt64(UInt64(Int8(67))), UInt64(15), UInt64(UInt64(41)), UInt64(52), UInt64(131), UInt64(Int16(-127)), UInt64(Int8(9)), UInt64(11), UInt64(35)] as Float64)
public let var_1669294698797_1341 : Int64 = Int64(UInt32(241))
public var var_1669294698797_1377 : Int64 = Int64(UInt16(16))
public let var_1669294698797_1413 : UInt32 = UInt32(33)
public var var_1669294698797_1426 : Bool = (Option<Array<String>>.None is Option<Unit>)
public var var_1669294698797_1461 : Int8 = Int8(UInt8(20))
public var var_1669294698797_1520 : Option<Array<UInt64>> = (["(6'h|'4Ve]", ###"3,,D\\dDM5H"###, "0pL[n#S)~>", "I\\,d5&q^Ff", "UU7CR2tWiV", "Td&]83(tK:", ###"+$:`rj5>la{"###, "ly1Uk`s~Ra{", "0F1j#_GI&&", "-9K~r1DmXB"] as Array<UInt64>)
public let var_1669294698797_1558 : Bool = (((Int32(-77)&127)..=(Int32(-125)&127):((-101)|1)) is Option<Array<UInt64>>)
public let var_1669294698797_1564 : Option<Array<UInt64>> = Option<Array<UInt64>>.None
public var var_1669294698797_1581 : UInt64 = UInt64(Int16(94))
public var var_1669294698797_1598 : ?Int16 = Option<Int16>.None
public var var_1669294698797_1718 : Rune = '9'
public var var_1669294698797_1772 : Bool = ((() as (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64)) is (UInt16, Int64, Option<Array<String>>, UInt32) -> Class_1669294698797_255)
public let var_1669294698797_1818 : Option<Range<UInt16>> = Option<Range<UInt16>>.None

func func_1669294698797_55(param_1669294698797_56 : Unit, param_1669294698797_57 : Int32, namedParam_1669294698797_58 ! : Range<UInt16>, optionalParam_1669294698797_59 ! : Int16 = Int16(82)) : UInt16 { // block id: 61
    var_1669294698797_63
}

public struct Struct_1669294698797_171 {
    public init() { // block id: 173

    }
;
    public static var var_1669294698797_176 : Unit = ()
}

public func func_1669294698797_74(param_1669294698797_75 : Array<UInt64>) : Unit { // block id: 76
    try { // block id: 80
        var var_1669294698797_88 : Range<UInt32> = ((UInt32(111)&127)..=(UInt32(162)&127):(99|1));
        if (true) { [((UInt32(172)&127)..(UInt32(98)&127):(73|1)), ((UInt32(137)&127)..=(UInt32(66)&127):(70|1)), ((UInt32(44)&127)..=(UInt32(56)&127):(32|1)), ((UInt32(229)&127)..(UInt32(201)&127):((-95)|1)), ((UInt32(178)&127)..(UInt32(131)&127):(87|1)), ((UInt32(74)&127)..(UInt32(116)&127):(42|1)), ((UInt32(36)&127)..(UInt32(85)&127):(67|1)), ((UInt32(70)&127)..(UInt32(25)&127):((-52)|1)), ((UInt32(52)&127)..(UInt32(148)&127):(34|1)), ((UInt32(41)&127)..(UInt32(59)&127):(64|1))] } else { [((UInt32(55)&127)..(UInt32(98)&127):(11|1)), ((UInt32(115)&127)..=(UInt32(163)&127):(61|1)), var_1669294698797_88, var_1669294698797_88, var_1669294698797_88, ((UInt32(136)&127)..=(var_1669294698797_95&127):((var_1669294698797_98|1))), ((UInt32(109)&127)..(UInt32(62)&127):((-58)|1)), ((UInt32(114)&127)..(UInt32(113)&127):((-61)|1)), ((var_1669294698797_95&127)..(var_1669294698797_106&127):(((-111)|1))), var_1669294698797_88] } 
    } catch (_) { // block id: 111
        var var_1669294698797_129 : Range<UInt32> = ((UInt32(159)&127)..=(UInt32(54)&127):(108|1));
        if (var_1669294698797_114) { [((UInt32(6)&127)..(UInt32(254)&127):((-95)|1)), ((UInt32(77)&127)..=(UInt32(170)&127):(26|1)), var_1669294698797_120, ((UInt32(58)&127)..(UInt32(234)&127):(78|1)), ((UInt32(41)&127)..(UInt32(216)&127):(113|1)), ((var_1669294698797_106&127)..(UInt32(209)&127):((var_1669294698797_98|1))), var_1669294698797_129, var_1669294698797_129, ((var_1669294698797_106&127)..=(UInt32(181)&127):((70|1))), var_1669294698797_129] } else { [((UInt32(197)&127)..=(UInt32(39)&127):(118|1)), ((UInt32(88)&127)..(UInt32(187)&127):(113|1)), ((UInt32(7)&127)..=(UInt32(109)&127):((-112)|1)), ((UInt32(32)&127)..=(UInt32(155)&127):((-112)|1)), ((UInt32(73)&127)..=(UInt32(62)&127):(82|1)), ((UInt32(110)&127)..=(UInt32(240)&127):((-123)|1)), ((UInt32(1)&127)..=(UInt32(206)&127):((-48)|1)), ((UInt32(117)&127)..(UInt32(16)&127):((-76)|1)), ((UInt32(180)&127)..(UInt32(253)&127):(63|1)), ((UInt32(149)&127)..(UInt32(14)&127):(89|1))] } 
    } finally { // block id: 138
        ();
        var_1669294698797_141
    }[6];
    Struct_1669294698797_171.var_1669294698797_176
}

public interface Interface_1669294698797_261 {

}

public interface Interface_1669294698797_260 <: Interface_1669294698797_261 {

}

public interface Interface_1669294698797_259 <: Interface_1669294698797_260 & Interface_1669294698797_261 {

}

public interface Interface_1669294698797_258 <: Interface_1669294698797_259 & Interface_1669294698797_261 {

}

public open class Class_1669294698797_255 <: Interface_1669294698797_258 & Interface_1669294698797_260 & Resource {
    public init() { // block id: 257

    }
;
    public prop var_1669294698797_301 : Float32 { // block id: 302
        get() { // block id: 304
            Float32(Float32(-35.0))
        }

    };
    static prop var_1669294698797_500 : Unit { // block id: 501
        get() { // block id: 503
            ();
            ();
            ()
        }

    };
    public init(param_1669294698797_317 : Array<UInt64>, param_1669294698797_318 : Int64) { // block id: 319
        let var_1669294698797_361 : Int32 = Int32(-56);
        var var_1669294698797_372 : ((UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64), Range<Int32>, Enum_1669294698797_321) = ((UInt32(114), UInt16(71), Int64(Int8(-108)), (), Float64(Float32(3.0)), ((UInt64(7)&127)..=(UInt64(117)&127):(87|1)), 91), ((Int32(-115)&127)..(Int32(-116)&127):((-67)|1)), Enum_1669294698797_321.enumValue_1669294698797_386(Int8(-14), Class_1669294698797_255()));
        match (if (var_1669294698797_114) { // block id: 327
            let var_1669294698797_329 : Unit = ();
            var_1669294698797_329;
            (var_1669294698797_333, ((Int32(-85)&127)..=(Int32(-43)&127):((-73)|1)), Enum_1669294698797_321.defaultValue)
        } else if (var_1669294698797_114) { // block id: 353
            let var_1669294698797_355 : Unit = ();
            var_1669294698797_355;
            (var_1669294698797_333, ((var_1669294698797_361&127)..(Int32(-92)&127):((var_1669294698797_98|1))), Enum_1669294698797_321.defaultValue)
        } else { // block id: 366
            if (false) { 'K' } else { 'b' } ;
            var_1669294698797_372
        }[2]) {
            case _ => 
                let var_1669294698797_396 : Unit = ();
                var_1669294698797_396
            
            case enumValue_1669294698797_386(_, _ : Range<Int8>) => 
                var_1669294698797_403 <<= ((var_1669294698797_361) & 7)
            
            case caseVar_1669294698797_408 : Range<Int32> => 
                ();
                var_1669294698797_413 -= Float32(46.0)
            
            case _ => 
                var_1669294698797_420
            
        };
        let var_1669294698797_424 : (Array<UInt64>) -> Unit = func_1669294698797_74;
        var var_1669294698797_430 : Int8 = Int8(Int8(-120));
        try { // block id: 427
            var_1669294698797_430--;
            ();
            var var_1669294698797_463 : UInt64 = UInt64(8);
            if (var_1669294698797_114) { var_1669294698797_437 } else { [UInt64(37), var_1669294698797_463, var_1669294698797_463, UInt64(145), var_1669294698797_463, var_1669294698797_463, UInt64(247), var_1669294698797_463, UInt64(160), var_1669294698797_463] } 
        } catch (_) { // block id: 473
            var_1669294698797_114;
            var_1669294698797_197++;
            if (var_1669294698797_114) { [UInt64(246), UInt64(61), UInt64(198), UInt64(37), UInt64(24), UInt64(151), UInt64(34), UInt64(141), UInt64(127), UInt64(183)] } else { var_1669294698797_437 } 
        } finally { // block id: 481
            [UInt64(228), UInt64(7), UInt64(231), UInt64(208), UInt64(185), UInt64(42), UInt64(184), UInt64(85), UInt64(18), UInt64(43)]
        }|>var_1669294698797_424;
        ((Option<Option<Unit>>.None ?? var_1669294698797_495) ?? Class_1669294698797_255.var_1669294698797_500)
    }
;
    public mut prop var_1669294698797_822 : Unit { // block id: 823
        get() { // block id: 825
            ((61&127)..(Int64(UInt16(UInt8(249)))&127):((Int64(Int32(100))|1)));
            ((UInt32(223)&127)..(UInt32(80)&127):(((-94)|1)));
            ();
            var_1669294698797_1831
        }

        set(Value) { // block id: 840
            Class_1669294698797_255();
            ();
            ();
            var_1669294698797_1831 = Value
        }

    };
    mut prop var_1669294698797_1831 : Unit { // block id: 1832
        get() { // block id: 1834
            (((UInt32(62)&127)..(UInt32(UInt8(113))&127):(((-100)|1))), Float32(-88.0), (), (["^dOu9xpbbG", """
(d6'A
],Ha{5
""", ###"ie@!+?*TR4"###, "3!swqDc2A[", "+a{]N|Oo|~<", "9.p:b$wX7I", ":B;Sg>L##}", "N8?2:?c!=6", """
b!-Xp
jgvBz
""", "l7n.44fih="] is Range<UInt32>));
            ()
        }

        set(Value) { // block id: 1848
            Option<Array<String>>.None;
            ();
            ()
        }

    }
    public func isClosed(): Bool { return true }
    public func close(): Unit {}
}

public func func_1669294698797_288(param_1669294698797_289 : Interface_1669294698797_259) : Float32 { // block id: 290
    Float32(26.0)
}

public enum Enum_1669294698797_321 {
    defaultValue |
    enumValue_1669294698797_386(Int8, Interface_1669294698797_261)
}


public func func_1669294698797_579(param_1669294698797_580 : Range<UInt8>) : Option<Unit> { // block id: 581
    try { // block id: 585
        var_1669294698797_420;
        let var_1669294698797_588 : Range<Int16> = ((Int16(55)&127)..(Int16(-104)&127):(10|1));
        var_1669294698797_588;
        var_1669294698797_591
    } catch (e: Exception) { // block id: 612
        var_1669294698797_420;
        if (var_1669294698797_114) { var_1669294698797_27 } else { var_1669294698797_618 } ;
        [Option<Unit>.Some(var_1669294698797_420), var_1669294698797_495, var_1669294698797_495, var_1669294698797_495, Option<Unit>.Some(var_1669294698797_420), var_1669294698797_495, var_1669294698797_495, Option<Unit>.None, var_1669294698797_495, var_1669294698797_495]
    }[2]
}


public func func_1669294698797_279(param_1669294698797_280 : (Unit, Int32, Range<UInt16>, Int16) -> UInt16) : Unit { // block id: 286
    let var_1669294698797_314 : Class_1669294698797_255 = Class_1669294698797_255([UInt64(160), UInt64(44), UInt64(60), UInt64(147), UInt64(254), UInt64(149), UInt64(230), UInt64(58), UInt64(126), UInt64(168)], (-20));
    let var_1669294698797_548 : Range<Int8> = ((Int8(34)&127)..(Int8(35)&127):(61|1));
    try { // block id: 310
        if (true) { var_1669294698797_314 } else { var_1669294698797_314 } ;
        var_1669294698797_420;
        (((Int8(-79)&127)..(Int8(-97)&127):(((-14)|1))), UInt8(199), var_1669294698797_518, (((UInt32(128)&127)..=(UInt32(52)&127):(93|1)), var_1669294698797_413, var_1669294698797_420, true), Class_1669294698797_255([UInt64(84), UInt64(56), UInt64(211), var_1669294698797_532, var_1669294698797_532, UInt64(193), var_1669294698797_532, var_1669294698797_532, var_1669294698797_532, UInt64(234)], (-8)), Int8(45), Float32(60.0), ((UInt64(212)&127)..=(UInt64(156)&127):(107|1)), var_1669294698797_403)
    } catch (e: Exception) { // block id: 545
        (var_1669294698797_548, var_1669294698797_197, false, var_1669294698797_553, Class_1669294698797_255(), var_1669294698797_571, var_1669294698797_413, ((UInt64(155)&127)..=(UInt64(218)&127):(71|1)), Int32(-60))
    }[4]|>{ lambdaParameter_1669294698797_294 : Interface_1669294698797_259 => let var_1669294698797_298 : Class_1669294698797_255 = Class_1669294698797_255(); var_1669294698797_298.var_1669294698797_301 };
    let var_1669294698797_635 : (Range<UInt8>) -> Option<Unit> = func_1669294698797_579;
    var var_1669294698797_656 : Range<UInt8> = ((UInt8(98)&127)..=(UInt8(Int8(Int8(Int8(28))))&127):(((-121)|1)));
    let var_1669294698797_673 : UInt16 = UInt16(57);
    ((match ('A') {
        case 'a' | 'p' => 
            ((UInt8(72)&127)..=(UInt8(95)&127):(7|1))
        
        case caseVar_1669294698797_645 : Range<Int8> => 
            ();
            var_1669294698797_420;
            ((UInt8(177)&127)..=(UInt8(157)&127):((var_1669294698797_98|1)))
        
        case _ => 
            var_1669294698797_656
        
    }|>var_1669294698797_635) ?? if (UInt32(188) < UInt32(226)) { // block id: 668
        var_1669294698797_218;
        var_1669294698797_63 % ((var_1669294698797_673) | 1);
        var_1669294698797_403 <<= ((Int32(-15)) & 7)
    } else if ((var_1669294698797_684 ?? false)) { // block id: 687
        UInt16(69);
        (-39.0);
        var_1669294698797_692--
    })
}

public func func_1669294698797_697(param_1669294698797_56 : Unit, param_1669294698797_57 : Int32, namedParam_1669294698797_58 : Range<UInt16>, optionalParam_1669294698797_59 : Int16) : UInt16 { // block id: 61
    var_1669294698797_63
}

public func func_1669294698797_702(param_1669294698797_703 : Array<UInt64>) : (Unit, Int32, Range<UInt16>, Int16) -> UInt16 { // block id: 704
    let var_1669294698797_706 : (Unit, Int32, Range<UInt16>, Int16) -> UInt16 = func_1669294698797_697;
    var_1669294698797_706
}



public func func_1669294698797_274(param_1669294698797_275 : Struct_1669294698797_171) : Bool { // block id: 276
    let var_1669294698797_727 : Array<UInt64> = [UInt64(Int32(UInt32(UInt32(254)))), UInt64(20), UInt64(Int16(-77)), UInt64(Int8(Int8(Int8(-124)))), UInt64(55), UInt64(UInt32(235)), UInt64(UInt16(211)), UInt64(88), UInt64(212), UInt64(UInt8(Int8(38)))];
    (match (((124&127)..(49&127):((-112)|1))) {
        case _ => 
            ();
            var var_1669294698797_720 : Option<Array<UInt64>> = ((-84) as Array<UInt64>);
            var_1669294698797_720
        
    } ?? [var_1669294698797_727, var_1669294698797_727, [var_1669294698797_692, UInt64(89), var_1669294698797_692, var_1669294698797_692, var_1669294698797_532, UInt64(183), var_1669294698797_532, UInt64(236), UInt64(207), var_1669294698797_692], [UInt64(4), var_1669294698797_765, UInt64(57), UInt64(176), UInt64(3), UInt64(107), var_1669294698797_532, UInt64(43), UInt64(99), UInt64(210)], var_1669294698797_779, [UInt64(199), UInt64(153), UInt64(90), UInt64(212), UInt64(242), UInt64(32), UInt64(139), UInt64(2), UInt64(230), UInt64(129)], var_1669294698797_727, [UInt64(142), UInt64(3), UInt64(164), UInt64(226), UInt64(98), UInt64(234), UInt64(79), UInt64(254), UInt64(76), UInt64(222)], var_1669294698797_727, var_1669294698797_437][5])|>(func_1669294698797_702~>func_1669294698797_279);
    let var_1669294698797_872 : Int16 = Int16(Int16(37));
    try { // block id: 816
        var_1669294698797_819.var_1669294698797_822;
        Int8(86) >= var_1669294698797_571
    } finally { // block id: 847
        (var_1669294698797_854 ?? var_1669294698797_765);
        var_1669294698797_860[4];
        if (true) { // block id: 865
            var_1669294698797_868 |= var_1669294698797_872;
            ();
            (-2) > var_1669294698797_98
        } else { // block id: 879
            var_1669294698797_882 && var_1669294698797_882
        }
    }
}


public enum Enum_1669294698797_1071 {
    defaultValue
}
public func func_1669294698797_263(param_1669294698797_264 : UInt16, optionalParam_1669294698797_265 ! : Int64 = (-41), namedParam_1669294698797_267 ! : Option<Array<String>>, optionalParam_1669294698797_268 ! : UInt32 = UInt32(UInt8(84))) : Class_1669294698797_255 { // block id: 271
    var var_1669294698797_886 : (Struct_1669294698797_171) -> Bool = func_1669294698797_274;
    let var_1669294698797_905 : Struct_1669294698797_171 = Struct_1669294698797_171();
    var var_1669294698797_934 : Int8 = Int8(Int8(-116));
    var var_1669294698797_941 : UInt16 = UInt16(UInt16(Int16(Int8(41))));
    if ((match (var_1669294698797_684) {
        case caseVar_1669294698797_892 : Enum_1669294698797_321 => 
            if (var_1669294698797_114) { var_1669294698797_897 } else { var_1669294698797_897 } 
        
        case _ => 
            if (false) { var_1669294698797_905 } else { Struct_1669294698797_171() } 
        
    }|>var_1669294698797_886)) { (Option<(UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64)>.None ?? if (var_1669294698797_114) { // block id: 916
        var_1669294698797_420;
        if (var_1669294698797_882) { var_1669294698797_333 } else { (UInt32(42), var_1669294698797_63, 26, (), var_1669294698797_927, ((UInt64(237)&127)..(UInt64(89)&127):((-48)|1)), 13) } 
    } else { // block id: 931
        var_1669294698797_934 -= Int8(-58);
        (var_1669294698797_95, var_1669294698797_941, (-107), (), (-69.0), ((UInt64(226)&127)..=(var_1669294698797_532&127):(((-21)|1))), (-84))
    }) } else { try { // block id: 956
        var_1669294698797_868;
        var var_1669294698797_963 : Enum_1669294698797_321 = Enum_1669294698797_321.enumValue_1669294698797_386(Int8(UInt8(Int8(UInt8(89)))), Class_1669294698797_255());
        if (var_1669294698797_960) { var_1669294698797_963 } else { var_1669294698797_963 } ;
        ((UInt32(66), UInt16(207), 4, var_1669294698797_420, var_1669294698797_927, ((var_1669294698797_765&127)..(UInt64(109)&127):((var_1669294698797_982|1))), (-51)), ((Int32(-103)&127)..=(Int32(85)&127):(73|1)), Enum_1669294698797_321.enumValue_1669294698797_386(Int8(-2), var_1669294698797_990))
    } catch (e: Exception) { // block id: 992
        let var_1669294698797_996 : Interface_1669294698797_258 = Class_1669294698797_255([UInt64(UInt8(225)), UInt64(50), UInt64((-112)), UInt64(174), UInt64(112), UInt64(UInt8(UInt8(134))), UInt64(UInt64(88)), UInt64(UInt16(Int8(16))), UInt64((-1)), UInt64(140)], 123);
        if (true) { var_1669294698797_996 } else { var_1669294698797_996 } ;
        var_1669294698797_1020
    } finally { // block id: 1033
        var_1669294698797_1035;
        var_1669294698797_941 &= UInt16(5);
        let var_1669294698797_1062 : Enum_1669294698797_321 = Enum_1669294698797_321.defaultValue;
        if (var_1669294698797_882) { (var_1669294698797_1044, ((Int32(-40)&127)..(Int32(-121)&127):(72|1)), var_1669294698797_1062) } else { var_1669294698797_1020 } 
    }[0] } ;
    let var_1669294698797_1087 : Interface_1669294698797_258 = Class_1669294698797_255();
    UInt64(120) | (var_1669294698797_854 ?? match (var_1669294698797_1074) {
        case _ : Option<Option<Unit>> => 
            var_1669294698797_141;
            var_1669294698797_765 >>= ((var_1669294698797_765) & 7);
            var_1669294698797_765
        
        case _ => 
            var_1669294698797_1087;
            var_1669294698797_1091 |= (-17);
            UInt64(254)
        
    });
    var_1669294698797_1098[1]
}


public func func_1669294698797_251(namedParam_1669294698797_252 ! : Float64) : (Range<UInt32>, Float32, Unit, Bool) { // block id: 253
    func_1669294698797_263(var_1669294698797_63, namedParam_1669294698797_267 : ([((UInt32(137)&127)..(var_1669294698797_106&127):(((-107)|1))), var_1669294698797_120, ((UInt32(70)&127)..(UInt32(210)&127):((11|1))), var_1669294698797_120, ((UInt32(163)&127)..=(UInt32(65)&127):(75|1)), ((UInt32(231)&127)..(UInt32(176)&127):((-62)|1)), ((UInt32(252)&127)..=(UInt32(149)&127):(12|1)), ((var_1669294698797_106&127)..(var_1669294698797_106&127):((var_1669294698797_1091|1))), ((UInt32(19)&127)..=(UInt32(253)&127):(35|1)), ((UInt32(161)&127)..=(UInt32(194)&127):((-31)|1))] as Array<String>), optionalParam_1669294698797_268 : UInt32(UInt8(28))).var_1669294698797_822;
    try { // block id: 1129
        Option<Interface_1669294698797_259>.None.getOrThrow();
        match ([UInt64(189), UInt64(173), UInt64(206), UInt64(190), UInt64(72), UInt64(37), UInt64(127), UInt64(65), UInt64(15), UInt64(16)]) {
            case _ : Int32 => 
                var_1669294698797_1091 += (-74);
                var_1669294698797_420;
                UInt8(45)
            
            case _ => 
                var_1669294698797_95 %= ((var_1669294698797_106) | 1);
                var_1669294698797_684;
                var var_1669294698797_1154 : UInt8 = UInt8(UInt8(4));
                -var_1669294698797_1154
            
        };
        var_1669294698797_553
    } catch (e: Exception) { // block id: 1158
        var_1669294698797_420;
        var loopTimeVar_1669294698797_1172 : Range<UInt64> = ((UInt64(181)&127)..=(UInt64(245)&127):((Int64(Int8(95))|1)));
        for (i in loopTimeVar_1669294698797_1172 where true) {
            if (true) { ((UInt8(199)&127)..=(UInt8(251)&127):((var_1669294698797_982|1))) } else { var_1669294698797_1170 } 
        };
        match ([[var_1669294698797_532, var_1669294698797_1183, UInt64(28), UInt64(23), var_1669294698797_765, UInt64(105), var_1669294698797_532, var_1669294698797_532, var_1669294698797_692, var_1669294698797_1183], [var_1669294698797_692, UInt64(177), var_1669294698797_1183, UInt64(208), UInt64(135), var_1669294698797_765, UInt64(125), var_1669294698797_1183, var_1669294698797_1183, var_1669294698797_532], [UInt64(221), UInt64(32), var_1669294698797_1183, UInt64(230), UInt64(39), UInt64(95), var_1669294698797_1183, var_1669294698797_532, UInt64(57), UInt64(252)], [UInt64(189), UInt64(0), UInt64(135), UInt64(15), UInt64(169), UInt64(172), UInt64(131), UInt64(120), UInt64(76), UInt64(110)], [UInt64(49), UInt64(179), UInt64(67), UInt64(32), UInt64(94), UInt64(197), UInt64(226), UInt64(41), UInt64(210), UInt64(71)], [UInt64(151), UInt64(126), UInt64(193), UInt64(31), UInt64(156), UInt64(51), UInt64(148), UInt64(77), UInt64(53), UInt64(69)], [UInt64(234), UInt64(171), var_1669294698797_1222, UInt64(101), var_1669294698797_1183, UInt64(103), UInt64(133), var_1669294698797_532, var_1669294698797_1222, UInt64(56)], var_1669294698797_779, [UInt64(253), UInt64(19), UInt64(54), UInt64(123), UInt64(178), UInt64(165), UInt64(125), UInt64(246), UInt64(45), UInt64(175)], [UInt64(122), var_1669294698797_1222, var_1669294698797_765, var_1669294698797_1222, UInt64(140), var_1669294698797_692, var_1669294698797_765, UInt64(91), UInt64(204), UInt64(123)]]) {
            case _ => 
                ();
                var_1669294698797_1074;
                var_1669294698797_553
            
        }
    }
}



func func_1669294698797_245(param_1669294698797_246 : Struct_1669294698797_171) : Int64 { // block id: 247
    func_1669294698797_251(namedParam_1669294698797_252 : (var_1669294698797_1258 ?? var_1669294698797_927))[2];
    let var_1669294698797_1300 : Array<String> = ["""
qV<iu
[Ea{\\v
""", "naa{qM Lu^F", ";MSE>Cx\";\"", """
sY_\"8
%K6*A
""", "I>TC.Iz~R$", ###"g-bJL!X]V]"###, """
F-,qj
F<R=m
""", """
a{Vt(J
(dy u
(""", "wX2+)..(wZMa{", """
)4p@Vq
G_s^l
"""];
    if (true) { (Option<Array<Unit>>.None ?? [var_1669294698797_420, (), var_1669294698797_420, (), var_1669294698797_420, (), (), (), var_1669294698797_420, ()]) } else { match (var_1669294698797_1300) {
        case caseVar_1669294698797_1304 : Array<UInt64> => 
            var_1669294698797_420;
            if (true) { [(), (), (), (), (), (), (), (), (), ()] } else { var_1669294698797_860 } 
        
        case _ => 
            var_1669294698797_1091 &= 97;
            [var_1669294698797_420, var_1669294698797_420, (), var_1669294698797_420, (), var_1669294698797_420, var_1669294698797_420, var_1669294698797_420, (), ()]
        
    } } [5];
    let var_1669294698797_1347 : Int64 = (-82);
    try { // block id: 1329
        var_1669294698797_982
    } finally { // block id: 1331
        [87, var_1669294698797_1091, var_1669294698797_98, 105, var_1669294698797_1091, var_1669294698797_1341, var_1669294698797_1091, (-107), var_1669294698797_1347, var_1669294698797_1347][3]
    }
}

func func_1669294698797_210(param_1669294698797_211 : UInt32) : Int64 { // block id: 212
    var_1669294698797_197;
    var loopTimeVar_1669294698797_242 : Int64 = 0;
    do {
        loopTimeVar_1669294698797_242++;

    } while ((var_1669294698797_218[5]) && loopTimeVar_1669294698797_242 < 100 ) ;
    match ((Struct_1669294698797_171()|>func_1669294698797_245)) {
        case caseVar_1669294698797_1355 : Int64 => 
            -Int32(38);
            56 % ((16) | 1)
        
        case 90 | 59 => 
            (((Int8(8)&127)..=(Int8(111)&127):(113|1)), var_1669294698797_197, true, var_1669294698797_553, var_1669294698797_1035, Int8(-16), var_1669294698797_413, ((var_1669294698797_1222&127)..=(var_1669294698797_1222&127):((var_1669294698797_1377|1))), var_1669294698797_403);
            30
        
        case 94 | 58 | -122 => 
            ((var_1669294698797_571&127)..=(Int8(87)&127):(((-20)|1)));
            var_1669294698797_98 / ((50) | 1)
        
        case _ => 
            UInt8(42) & UInt8(163);
            var_1669294698797_868 <<= ((Int16(54)) & 7);
            (-83)
        
    }
}


func func_1669294698797_697(param_1669294698797_206 : Int64, namedParam_1669294698797_207 ! : Int16) : Int64 { // block id: 208
    match (((Int32(-87)&127)..=(var_1669294698797_403&127):((var_1669294698797_1377|1)))) {
        case _ => 
            var_1669294698797_197 /= ((UInt8(125)) | 1);
            var_1669294698797_1413
        
    }|>func_1669294698797_210;
    var_1669294698797_420;
    (try { // block id: 1422
        Int32(-93);
        if (var_1669294698797_1426) { Option<Array<String>>.None } else { var_1669294698797_618 } ;
        if (false) { Option<Int64>.None } else { Option<Int64>.Some((-66)) } 
    } catch (e: Exception) { // block id: 1436
        ();
        Option<Int64>.Some(var_1669294698797_1341)
    } ?? if (UInt8(120) == UInt8(176)) { // block id: 1444
        var_1669294698797_868 %= ((var_1669294698797_868) | 1);
        var_1669294698797_571;
        var_1669294698797_982
    } else { // block id: 1450
        Option<Array<UInt64>>.Some(var_1669294698797_437);
        (-47)
    })
}



public func func_1669294698797_70(param_1669294698797_71 : Rune) : Int16 { // block id: 72
    let var_1669294698797_190 : Struct_1669294698797_171 = Struct_1669294698797_171();
    let var_1669294698797_1484 : (UInt8, Range<UInt64>, Range<UInt32>, (Range<UInt32>, Float32, Unit, Bool)) = (UInt8(136), ((UInt64(Int32(120))&127)..=(UInt64(62)&127):((Int64(Int32(-63))|1))), ((UInt32(Int16(UInt8(182)))&127)..(UInt32(41)&127):(((-61)|1))), (((UInt32(252)&127)..(UInt32(UInt16(9))&127):((Int64((-29))|1))), Float32(Float32(126.0)), (), ([true, false, true, false, false, true, true, true, false, true] is Option<Interface_1669294698797_259>)));
    (var_1669294698797_1520 ?? match (var_1669294698797_868) {
        case -106 => 
            var_1669294698797_779
        
        case -62 | -75 | -32 | -84 => 
            if (var_1669294698797_882) { Class_1669294698797_255() } else { var_1669294698797_819 } ;
            [UInt64(159), UInt64(52), UInt64(147), UInt64(232), UInt64(13), UInt64(134), UInt64(41), UInt64(71), UInt64(38), UInt64(227)]
        
        case caseVar_1669294698797_1539 : Array<String> => 
            var var_1669294698797_1544 : Range<UInt64> = ((UInt64(146)&127)..=(UInt64(30)&127):(108|1));
            if (false) { var_1669294698797_1544 } else { var_1669294698797_1544 } ;
            [UInt64(194), UInt64(74), UInt64(242), UInt64(171), UInt64(182), UInt64(167), UInt64(58), UInt64(22), UInt64(148), UInt64(138)]
        
        case _ => 
            if (true) { var_1669294698797_779 } else { var_1669294698797_779 } 
        
    })|>{ lambdaParameter_1669294698797_180 : Array<UInt64> => var var_1669294698797_1468 : Bool = true; (var_1669294698797_106, if (var_1669294698797_114) { // block id: 188
        var_1669294698797_190;
        var_1669294698797_114;
        var_1669294698797_63
    } else { // block id: 194
        var_1669294698797_197 ^= var_1669294698797_197;
        ((UInt64(181)&127)..(UInt64(178)&127):(69|1));
        var_1669294698797_63 + UInt16(64)
    }, func_1669294698797_697(var_1669294698797_982, namedParam_1669294698797_207 : var_1669294698797_868), if (var_1669294698797_114) { // block id: 1458
        var_1669294698797_1461 <<= ((Int8(-76)) & 7);
        ()
    }, if (var_1669294698797_1468) { // block id: 1470
        67.0
    } else if (true) { // block id: 1473
        (-15.0) ** var_1669294698797_1341
    } else { // block id: 1477
        105.0 + var_1669294698797_927
    }, var_1669294698797_1484[1], (-70))[3] };
    var var_1669294698797_1632 : Int16 = Int16(Int16(52));
    let var_1669294698797_1647 : UInt64 = UInt64(Int32(82));
    var var_1669294698797_1662 : Int16 = Int16(115);
    let var_1669294698797_1681 : Int16 = Int16(Int8(78));
    if (try { // block id: 1556
        var_1669294698797_1558
    } finally { // block id: 1561
        var_1669294698797_420;
        var_1669294698797_1564;
        false
    }) { // block id: 1567
        var loopTimeVar_1669294698797_1572 : Int64 = 0;
        while ((var_1669294698797_518) && loopTimeVar_1669294698797_1572 < 100 ) {
            loopTimeVar_1669294698797_1572++;

        };
        if (var_1669294698797_960) { Class_1669294698797_255() } else { Class_1669294698797_255([var_1669294698797_1222, UInt64(169), var_1669294698797_1581, UInt64(152), UInt64(129), UInt64(53), var_1669294698797_765, UInt64(190), UInt64(19), var_1669294698797_1581], var_1669294698797_1091) } ;
        (var_1669294698797_1598 ?? var_1669294698797_868)
    } else if (match ((Option<Int16>.None ?? Int16(-124))) {
        case -125 => 
            ();
            UInt16(77);
            var_1669294698797_882 && false
        
        case caseVar_1669294698797_1615 => 
            var_1669294698797_420;
            var_1669294698797_403 | Int32(82);
            var_1669294698797_518
        
        case _ => 
            var_1669294698797_106--;
            true
        
    }) { // block id: 1627
        var var_1669294698797_1654 : UInt64 = UInt64(Int8(36));
        try { // block id: 1629
            var_1669294698797_1558;
            var_1669294698797_1632
        } finally { // block id: 1635
            Enum_1669294698797_1071.defaultValue;
            if (var_1669294698797_882) { var_1669294698797_1035 } else { Class_1669294698797_255([var_1669294698797_692, UInt64(50), var_1669294698797_1581, var_1669294698797_692, var_1669294698797_1647, var_1669294698797_1183, var_1669294698797_1647, var_1669294698797_532, var_1669294698797_1654, UInt64(93)], var_1669294698797_982) } ;
            var_1669294698797_868 << ((var_1669294698797_1662) & 7)
        }
    } else { // block id: 1664
        try (resource = Class_1669294698797_255()) { // block id: 1666
            UInt8(215);
            if (true) { Struct_1669294698797_171() } else { var_1669294698797_897 } ;
            var_1669294698797_420
        } finally { // block id: 1673
            Int8(126) & var_1669294698797_571;
            var_1669294698797_420
        };
        var_1669294698797_1662 %= ((var_1669294698797_1681) | 1);
        match (((var_1669294698797_1681&127)..(Int16(-76)&127):((73|1)))) {
            case _ : Int32 => 
                var_1669294698797_868
            
            case _ => 
                Int16(1)
            
            case _ : Float64 => 
                var_1669294698797_868 + Int16(36)
            
            case caseVar_1669294698797_1705 => 
                Int16(77) | Int16(-53)
            
            case _ => 
                var_1669294698797_1035;
                Int16(82) ^ Int16(-121)
            
        }
    }
}


public func func_1669294698797_66(param_1669294698797_67 : Range<UInt8>) : Unit { // block id: 68
    var_1669294698797_1718|>func_1669294698797_70;
    let var_1669294698797_1730 : (Array<Unit>, Unit, Array<String>, Int8, Bool, (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64), Array<Bool>) = ([(), (), (), (), (), (), (), (), (), ()], (), ["""
C@F/5
c\"^,1
""", "rC'5u:vrC;", "V 3K*aO'I[", ###"H$v)p5(U@)"###, "HG:'oTt&WV", "/}V@lYFHIR", "BkBz0n@E(r", """
MNm;(
II\"p>
""", "n:~6 UAwCC", "D=vlY5Q|Ah"], Int8(UInt8(36)), false, (UInt32(6), UInt16(Int8(Int8(30))), 113, (), Float64(Float64(73.0)), ((UInt64(138)&127)..(UInt64(162)&127):((-52)|1)), Int64(UInt8(UInt8(219)))), [false, true, true, true, false, false, false, true, true, true]);
    var loopTimeVar_1669294698797_1766 : Int64 = 0;
    while (((Option<(Array<Unit>, Unit, Array<String>, Int8, Bool, (UInt32, UInt16, Int64, Unit, Float64, Range<UInt64>, Int64), Array<Bool>)>.None ?? var_1669294698797_1730)[4]) && loopTimeVar_1669294698797_1766 < 100 ) {
        loopTimeVar_1669294698797_1766++;

    }
}


public func func_1669294698797_51(param_1669294698797_52 : UInt64) : UInt16 { // block id: 53
    let var_1669294698797_1768 : (Range<UInt8>) -> Unit = func_1669294698797_66;
    let var_1669294698797_1827 : Range<UInt16> = ((UInt16(194)&127)..(UInt16(192)&127):((-47)|1));
    func_1669294698797_55((if (var_1669294698797_1772) { ((var_1669294698797_197&127)..(UInt8(127)&127):((126|1))) } else { ((UInt8(26)&127)..=(var_1669294698797_197&127):((var_1669294698797_982|1))) } |>var_1669294698797_1768), match (var_1669294698797_1035) {
        case _ => 
            Int16(111);
            var_1669294698797_420;
            -var_1669294698797_403
        
        case _ : Option<Option<Unit>> => 
            Int32(-40)
        
        case caseVar_1669294698797_1800 : Option<Interface_1669294698797_259> => 
            ();
            Int32(-125) & Int32(-121)
        
        case _ => 
            Int32(-55)
        
    } & (Int32(-121) / ((Int32(-113)) | 1)), namedParam_1669294698797_58 : (var_1669294698797_1818 ?? if (var_1669294698797_518) { ((var_1669294698797_63&127)..(UInt16(225)&127):((21|1))) } else { var_1669294698797_1827 } ))
}

main(): Int64 {
    try {
        let var_1669294698797_8 : String = """
J[oMd
^YJ}F
""";
        var_1669294698797_8;
        var var_1669294698797_36 : Array<String> = ["""
/CD${var_1669294698797_8}EQ
/8\"^Q
""", ###"caDyx<U${var_1669294698797_8}~a%${var_1669294698797_8}"###, """
G${var_1669294698797_8}?>ng
(t/2H
""", "XU${var_1669294698797_8}NAi}${var_1669294698797_8}Jg<${var_1669294698797_8}6", "Aop5Kkx5zq", """
q/'SO
0w.@0${var_1669294698797_8}
""", """
9${var_1669294698797_8}8!I${var_1669294698797_8}m
q${var_1669294698797_8}g${var_1669294698797_8}n${var_1669294698797_8}j|
""", ###".Q^${var_1669294698797_8}mx8*qH&"###, """
p${var_1669294698797_8}bD${var_1669294698797_8}:C${var_1669294698797_8}
 nlTU${var_1669294698797_8}
""", ###"h${var_1669294698797_8}_yh${var_1669294698797_8}+Ox${var_1669294698797_8}ym_"###];
        (var_1669294698797_27 ?? var_1669294698797_36)[4];
        Int64((UInt64(213)|>func_1669294698797_51))
        // CRC Check All Variables
        var crccheck = CrcCheck(5000, 32)
        crccheck.updateBuffer(UInt64(var_1669294698797_63*var_1669294698797_63), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_98*var_1669294698797_98), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_403*var_1669294698797_403), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_532*var_1669294698797_532), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_1377*var_1669294698797_1377), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_1413*var_1669294698797_1413), 64)
        crccheck.updateBuffer(UInt64(var_1669294698797_1461*var_1669294698797_1461), 64)
        crccheck.crcCheck()
        crccheck.getCrcOutput()
        ()
    } catch (e: NoneValueException) { println("Exception: NoneValueException") }

    return 0;
}

class CrcCheck {
    var buffer: Array<Int64>
    var poly: Array<Int64>
    var crc_output: Array<Int64>
    var poly_n: Int64
    var buffer_index: Int64
    var crc_output_n: Int64

    init(buffer_n: Int64, crc_n: Int64) {
        buffer_index = 0
        crc_output_n = 0
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        buffer = Array<Int64>(buffer_n, { i => 0 })
        poly_n = crc_n + 1
        if (crc_n == 32) {
            poly = [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1]
        } else if (crc_n == 16) {
            poly = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]
        } else if (crc_n == 8) {
            poly = [1, 0, 0, 0, 0, 0, 1, 1, 1]
        } else {
            poly = [1, 1, 0, 0, 1]
        }
    }

    func updateBuffer(input: UInt64, byte_n: Int64): Unit {
        var value = input
        if (byte_n == 64) {
            value = value & 0xffffffffffffffff
        } else if (byte_n == 32) {
            value = value & 0xffffffff
        } else if (byte_n == 16) {
            value = value & 0xffff
        } else {
            value = value & 0xff
        }
        var byteArray = Array<Int64>(byte_n, { i => 0 })
        var byte_c = 1
        var byte_index = 0
        while(value != 0) {
            if (value % 2 == 1) {
                byte_index = byte_n - byte_c
                byteArray[byte_index] = 1
            }
            byte_c++
            value = value >> 1
        }
        var i = 0
        while (i + byte_index < byte_n) {
            buffer[i + buffer_index] = byteArray[i + byte_index]
            i++
        }
        buffer_index = buffer_index + i
    }

    func crcCheck(): Unit {
        crc_output_n = buffer_index + poly_n - 1
        var crc_buffer = Array<Int64>(crc_output_n, { i => 0 })
        var i = 0
        while (i < buffer_index) {
            crc_buffer[i] = buffer[i]
            i++
        }
        i = 0
        while (i < buffer_index) {
            if (crc_buffer[i] == 1) {
                var j = 0
                while (j < poly_n) {
                    crc_buffer[j + i] = crc_buffer[j + i] ^ poly[j]
                    j++
                }
            }
            i++
        }
        let check_code = crc_buffer[buffer_index..]
        var byte_add = 3 - crc_output_n % 3
        crc_output_n = byte_add + crc_output_n
        crc_output = Array<Int64>(crc_output_n, { i => 0 })
        i = 0
        while (i < crc_output_n - byte_add) {
            if (i < buffer_index) {
                crc_output[i + byte_add] = buffer[i]
            } else {
                crc_output[i + byte_add] = check_code[i - buffer_index]
            }
            i++
        }
    }

    func getCrcOutput(): Unit {
        var i = 0
        while (i < crc_output_n) {
            var hex_value = 2**2 * crc_output[i] + 2**1 * crc_output[i + 1] + 1 * crc_output[i + 2]
            print(hex_value.toString())
            i = i + 3
        }
        print("\n")
    }
}
